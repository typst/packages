#!/bin/bash

# Check if arguments are provided
if [ $# -lt 1 ]; then
    echo "Usage: $0 <main.typ> [output.pdf] [sleep_time]"
    echo "Example: $0 main.typ output.pdf 0.5"
    echo "Example: $0 document.typ thesis.pdf 2"
    echo "Example: $0 main.typ"
    exit 1
fi

# Get input and output filenames, and sleep time
INPUT_FILE="$1"
OUTPUT_FILE="${2:-${INPUT_FILE%.typ}.pdf}"
SLEEP_TIME="${3:-1}"  # Default to 1 second if not provided

echo "Starting typst watch on $INPUT_FILE -> $OUTPUT_FILE"
echo "Check interval: ${SLEEP_TIME}s"

# Start typst watch in the background
typst watch --root . "$INPUT_FILE" "$OUTPUT_FILE" &
TYPST_PID=$!

# Function to clean up on exit
cleanup() {
    echo -e "\nStopping typst watch..."
    kill $TYPST_PID 2>/dev/null
    exit 0
}

# Set up trap to clean up on script exit
trap cleanup INT TERM EXIT

echo "Watching for changes in .typ files..."

# Get the initial modification time of the main file
LAST_TOUCHED=$(stat -f %m "$INPUT_FILE" 2>/dev/null || stat -c %Y "$INPUT_FILE" 2>/dev/null)

# Watch for changes in any .typ file
while true; do
    # Find .typ files modified more recently than our last touch
    CHANGED_FILES=$(find . -name "*.typ" -newer "$INPUT_FILE" 2>/dev/null | grep -v "^./$INPUT_FILE$")

    if [ -n "$CHANGED_FILES" ]; then
        touch "$INPUT_FILE"

        # Update last touched time
        LAST_TOUCHED=$(stat -f %m "$INPUT_FILE" 2>/dev/null || stat -c %Y "$INPUT_FILE" 2>/dev/null)
    fi

    sleep "$SLEEP_TIME"
done
