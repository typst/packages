class ConsoleStub{constructor(){this.logHistory=[];this.errorHistory=[];this.warnHistory=[];}
log(...args){const message=args.join(' ');this.logHistory.push(message);}
error(...args){const message=args.join(' ');this.errorHistory.push(message);}
warn(...args){const message=args.join(' ');this.warnHistory.push(message);}}
var console=new ConsoleStub();(function(global){'use strict';if(typeof module!=="undefined"&&module.exports){module.exports=global;}
global["encoding-indexes"]={"big5":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,17392,19506,17923,17830,17784,160359,19831,17843,162993,19682,163013,15253,18230,18244,19527,19520,148159,144919,160594,159371,159954,19543,172881,18255,17882,19589,162924,19719,19108,18081,158499,29221,154196,137827,146950,147297,26189,22267,null,32149,22813,166841,15860,38708,162799,23515,138590,23204,13861,171696,23249,23479,23804,26478,34195,170309,29793,29853,14453,138579,145054,155681,16108,153822,15093,31484,40855,147809,166157,143850,133770,143966,17162,33924,40854,37935,18736,34323,22678,38730,37400,31184,31282,26208,27177,34973,29772,31685,26498,31276,21071,36934,13542,29636,155065,29894,40903,22451,18735,21580,16689,145038,22552,31346,162661,35727,18094,159368,16769,155033,31662,140476,40904,140481,140489,140492,40905,34052,144827,16564,40906,17633,175615,25281,28782,40907,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,12736,12737,12738,12739,12740,131340,12741,131281,131277,12742,12743,131275,139240,12744,131274,12745,12746,12747,12748,131342,12749,12750,256,193,461,192,274,201,282,200,332,211,465,210,null,7870,null,7872,202,257,225,462,224,593,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,null,7871,null,7873,234,609,9178,9179,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,172969,135493,null,25866,null,null,20029,28381,40270,37343,null,null,161589,25745,20250,20264,20392,20822,20852,20892,20964,21153,21160,21307,21326,21457,21464,22242,22768,22788,22791,22834,22836,23398,23454,23455,23706,24198,24635,25993,26622,26628,26725,27982,28860,30005,32420,32428,32442,32455,32463,32479,32518,32567,33402,33487,33647,35270,35774,35810,36710,36711,36718,29713,31996,32205,26950,31433,21031,null,null,null,null,37260,30904,37214,32956,null,36107,33014,133607,null,null,32927,40647,19661,40393,40460,19518,171510,159758,40458,172339,13761,null,28314,33342,29977,null,18705,39532,39567,40857,31111,164972,138698,132560,142054,20004,20097,20096,20103,20159,20203,20279,13388,20413,15944,20483,20616,13437,13459,13477,20870,22789,20955,20988,20997,20105,21113,21136,21287,13767,21417,13649,21424,13651,21442,21539,13677,13682,13953,21651,21667,21684,21689,21712,21743,21784,21795,21800,13720,21823,13733,13759,21975,13765,163204,21797,null,134210,134421,151851,21904,142534,14828,131905,36422,150968,169189,16467,164030,30586,142392,14900,18389,164189,158194,151018,25821,134524,135092,134357,135412,25741,36478,134806,134155,135012,142505,164438,148691,null,134470,170573,164073,18420,151207,142530,39602,14951,169460,16365,13574,152263,169940,161992,142660,40302,38933,null,17369,155813,25780,21731,142668,142282,135287,14843,135279,157402,157462,162208,25834,151634,134211,36456,139681,166732,132913,null,18443,131497,16378,22643,142733,null,148936,132348,155799,134988,134550,21881,16571,17338,null,19124,141926,135325,33194,39157,134556,25465,14846,141173,36288,22177,25724,15939,null,173569,134665,142031,142537,null,135368,145858,14738,14854,164507,13688,155209,139463,22098,134961,142514,169760,13500,27709,151099,null,null,161140,142987,139784,173659,167117,134778,134196,157724,32659,135375,141315,141625,13819,152035,134796,135053,134826,16275,134960,134471,135503,134732,null,134827,134057,134472,135360,135485,16377,140950,25650,135085,144372,161337,142286,134526,134527,142417,142421,14872,134808,135367,134958,173618,158544,167122,167321,167114,38314,21708,33476,21945,null,171715,39974,39606,161630,142830,28992,33133,33004,23580,157042,33076,14231,21343,164029,37302,134906,134671,134775,134907,13789,151019,13833,134358,22191,141237,135369,134672,134776,135288,135496,164359,136277,134777,151120,142756,23124,135197,135198,135413,135414,22428,134673,161428,164557,135093,134779,151934,14083,135094,135552,152280,172733,149978,137274,147831,164476,22681,21096,13850,153405,31666,23400,18432,19244,40743,18919,39967,39821,154484,143677,22011,13810,22153,20008,22786,138177,194680,38737,131206,20059,20155,13630,23587,24401,24516,14586,25164,25909,27514,27701,27706,28780,29227,20012,29357,149737,32594,31035,31993,32595,156266,13505,null,156491,32770,32896,157202,158033,21341,34916,35265,161970,35744,36125,38021,38264,38271,38376,167439,38886,39029,39118,39134,39267,170000,40060,40479,40644,27503,63751,20023,131207,38429,25143,38050,null,20539,28158,171123,40870,15817,34959,147790,28791,23797,19232,152013,13657,154928,24866,166450,36775,37366,29073,26393,29626,144001,172295,15499,137600,19216,30948,29698,20910,165647,16393,27235,172730,16931,34319,133743,31274,170311,166634,38741,28749,21284,139390,37876,30425,166371,40871,30685,20131,20464,20668,20015,20247,40872,21556,32139,22674,22736,138678,24210,24217,24514,141074,25995,144377,26905,27203,146531,27903,null,29184,148741,29580,16091,150035,23317,29881,35715,154788,153237,31379,31724,31939,32364,33528,34199,40873,34960,40874,36537,40875,36815,34143,39392,37409,40876,167353,136255,16497,17058,23066,null,null,null,39016,26475,17014,22333,null,34262,149883,33471,160013,19585,159092,23931,158485,159678,40877,40878,23446,40879,26343,32347,28247,31178,15752,17603,143958,141206,17306,17718,null,23765,146202,35577,23672,15634,144721,23928,40882,29015,17752,147692,138787,19575,14712,13386,131492,158785,35532,20404,131641,22975,33132,38998,170234,24379,134047,null,139713,166253,16642,18107,168057,16135,40883,172469,16632,14294,18167,158790,16764,165554,160767,17773,14548,152730,17761,17691,19849,19579,19830,17898,16328,150287,13921,17630,17597,16877,23870,23880,23894,15868,14351,23972,23993,14368,14392,24130,24253,24357,24451,14600,14612,14655,14669,24791,24893,23781,14729,25015,25017,25039,14776,25132,25232,25317,25368,14840,22193,14851,25570,25595,25607,25690,14923,25792,23829,22049,40863,14999,25990,15037,26111,26195,15090,26258,15138,26390,15170,26532,26624,15192,26698,26756,15218,15217,15227,26889,26947,29276,26980,27039,27013,15292,27094,15325,27237,27252,27249,27266,15340,27289,15346,27307,27317,27348,27382,27521,27585,27626,27765,27818,15563,27906,27910,27942,28033,15599,28068,28081,28181,28184,28201,28294,166336,28347,28386,28378,40831,28392,28393,28452,28468,15686,147265,28545,28606,15722,15733,29111,23705,15754,28716,15761,28752,28756,28783,28799,28809,131877,17345,13809,134872,147159,22462,159443,28990,153568,13902,27042,166889,23412,31305,153825,169177,31333,31357,154028,31419,31408,31426,31427,29137,156813,16842,31450,31453,31466,16879,21682,154625,31499,31573,31529,152334,154878,31650,31599,33692,154548,158847,31696,33825,31634,31672,154912,15789,154725,33938,31738,31750,31797,154817,31812,31875,149634,31910,26237,148856,31945,31943,31974,31860,31987,31989,31950,32359,17693,159300,32093,159446,29837,32137,32171,28981,32179,32210,147543,155689,32228,15635,32245,137209,32229,164717,32285,155937,155994,32366,32402,17195,37996,32295,32576,32577,32583,31030,156368,39393,32663,156497,32675,136801,131176,17756,145254,17667,164666,32762,156809,32773,32776,32797,32808,32815,172167,158915,32827,32828,32865,141076,18825,157222,146915,157416,26405,32935,166472,33031,33050,22704,141046,27775,156824,151480,25831,136330,33304,137310,27219,150117,150165,17530,33321,133901,158290,146814,20473,136445,34018,33634,158474,149927,144688,137075,146936,33450,26907,194964,16859,34123,33488,33562,134678,137140,14017,143741,144730,33403,33506,33560,147083,159139,158469,158615,144846,15807,33565,21996,33669,17675,159141,33708,33729,33747,13438,159444,27223,34138,13462,159298,143087,33880,154596,33905,15827,17636,27303,33866,146613,31064,33960,158614,159351,159299,34014,33807,33681,17568,33939,34020,154769,16960,154816,17731,34100,23282,159385,17703,34163,17686,26559,34326,165413,165435,34241,159880,34306,136578,159949,194994,17770,34344,13896,137378,21495,160666,34430,34673,172280,34798,142375,34737,34778,34831,22113,34412,26710,17935,34885,34886,161248,146873,161252,34910,34972,18011,34996,34997,25537,35013,30583,161551,35207,35210,35238,35241,35239,35260,166437,35303,162084,162493,35484,30611,37374,35472,162393,31465,162618,147343,18195,162616,29052,35596,35615,152624,152933,35647,35660,35661,35497,150138,35728,35739,35503,136927,17941,34895,35995,163156,163215,195028,14117,163155,36054,163224,163261,36114,36099,137488,36059,28764,36113,150729,16080,36215,36265,163842,135188,149898,15228,164284,160012,31463,36525,36534,36547,37588,36633,36653,164709,164882,36773,37635,172703,133712,36787,18730,166366,165181,146875,24312,143970,36857,172052,165564,165121,140069,14720,159447,36919,165180,162494,36961,165228,165387,37032,165651,37060,165606,37038,37117,37223,15088,37289,37316,31916,166195,138889,37390,27807,37441,37474,153017,37561,166598,146587,166668,153051,134449,37676,37739,166625,166891,28815,23235,166626,166629,18789,37444,166892,166969,166911,37747,37979,36540,38277,38310,37926,38304,28662,17081,140922,165592,135804,146990,18911,27676,38523,38550,16748,38563,159445,25050,38582,30965,166624,38589,21452,18849,158904,131700,156688,168111,168165,150225,137493,144138,38705,34370,38710,18959,17725,17797,150249,28789,23361,38683,38748,168405,38743,23370,168427,38751,37925,20688,143543,143548,38793,38815,38833,38846,38848,38866,38880,152684,38894,29724,169011,38911,38901,168989,162170,19153,38964,38963,38987,39014,15118,160117,15697,132656,147804,153350,39114,39095,39112,39111,19199,159015,136915,21936,39137,39142,39148,37752,39225,150057,19314,170071,170245,39413,39436,39483,39440,39512,153381,14020,168113,170965,39648,39650,170757,39668,19470,39700,39725,165376,20532,39732,158120,14531,143485,39760,39744,171326,23109,137315,39822,148043,39938,39935,39948,171624,40404,171959,172434,172459,172257,172323,172511,40318,40323,172340,40462,26760,40388,139611,172435,172576,137531,172595,40249,172217,172724,40592,40597,40606,40610,19764,40618,40623,148324,40641,15200,14821,15645,20274,14270,166955,40706,40712,19350,37924,159138,40727,40726,40761,22175,22154,40773,39352,168075,38898,33919,40802,40809,31452,40846,29206,19390,149877,149947,29047,150008,148296,150097,29598,166874,137466,31135,166270,167478,37737,37875,166468,37612,37761,37835,166252,148665,29207,16107,30578,31299,28880,148595,148472,29054,137199,28835,137406,144793,16071,137349,152623,137208,14114,136955,137273,14049,137076,137425,155467,14115,136896,22363,150053,136190,135848,136134,136374,34051,145062,34051,33877,149908,160101,146993,152924,147195,159826,17652,145134,170397,159526,26617,14131,15381,15847,22636,137506,26640,16471,145215,147681,147595,147727,158753,21707,22174,157361,22162,135135,134056,134669,37830,166675,37788,20216,20779,14361,148534,20156,132197,131967,20299,20362,153169,23144,131499,132043,14745,131850,132116,13365,20265,131776,167603,131701,35546,131596,20120,20685,20749,20386,20227,150030,147082,20290,20526,20588,20609,20428,20453,20568,20732,20825,20827,20829,20830,28278,144789,147001,147135,28018,137348,147081,20904,20931,132576,17629,132259,132242,132241,36218,166556,132878,21081,21156,133235,21217,37742,18042,29068,148364,134176,149932,135396,27089,134685,29817,16094,29849,29716,29782,29592,19342,150204,147597,21456,13700,29199,147657,21940,131909,21709,134086,22301,37469,38644,37734,22493,22413,22399,13886,22731,23193,166470,136954,137071,136976,23084,22968,37519,23166,23247,23058,153926,137715,137313,148117,14069,27909,29763,23073,155267,23169,166871,132115,37856,29836,135939,28933,18802,37896,166395,37821,14240,23582,23710,24158,24136,137622,137596,146158,24269,23375,137475,137476,14081,137376,14045,136958,14035,33066,166471,138682,144498,166312,24332,24334,137511,137131,23147,137019,23364,34324,161277,34912,24702,141408,140843,24539,16056,140719,140734,168072,159603,25024,131134,131142,140827,24985,24984,24693,142491,142599,149204,168269,25713,149093,142186,14889,142114,144464,170218,142968,25399,173147,25782,25393,25553,149987,142695,25252,142497,25659,25963,26994,15348,143502,144045,149897,144043,21773,144096,137433,169023,26318,144009,143795,15072,16784,152964,166690,152975,136956,152923,152613,30958,143619,137258,143924,13412,143887,143746,148169,26254,159012,26219,19347,26160,161904,138731,26211,144082,144097,26142,153714,14545,145466,145340,15257,145314,144382,29904,15254,26511,149034,26806,26654,15300,27326,14435,145365,148615,27187,27218,27337,27397,137490,25873,26776,27212,15319,27258,27479,147392,146586,37792,37618,166890,166603,37513,163870,166364,37991,28069,28427,149996,28007,147327,15759,28164,147516,23101,28170,22599,27940,30786,28987,148250,148086,28913,29264,29319,29332,149391,149285,20857,150180,132587,29818,147192,144991,150090,149783,155617,16134,16049,150239,166947,147253,24743,16115,29900,29756,37767,29751,17567,159210,17745,30083,16227,150745,150790,16216,30037,30323,173510,15129,29800,166604,149931,149902,15099,15821,150094,16127,149957,149747,37370,22322,37698,166627,137316,20703,152097,152039,30584,143922,30478,30479,30587,149143,145281,14942,149744,29752,29851,16063,150202,150215,16584,150166,156078,37639,152961,30750,30861,30856,30930,29648,31065,161601,153315,16654,31131,33942,31141,27181,147194,31290,31220,16750,136934,16690,37429,31217,134476,149900,131737,146874,137070,13719,21867,13680,13994,131540,134157,31458,23129,141045,154287,154268,23053,131675,30960,23082,154566,31486,16889,31837,31853,16913,154547,155324,155302,31949,150009,137136,31886,31868,31918,27314,32220,32263,32211,32590,156257,155996,162632,32151,155266,17002,158581,133398,26582,131150,144847,22468,156690,156664,149858,32733,31527,133164,154345,154947,31500,155150,39398,34373,39523,27164,144447,14818,150007,157101,39455,157088,33920,160039,158929,17642,33079,17410,32966,33033,33090,157620,39107,158274,33378,33381,158289,33875,159143,34320,160283,23174,16767,137280,23339,137377,23268,137432,34464,195004,146831,34861,160802,23042,34926,20293,34951,35007,35046,35173,35149,153219,35156,161669,161668,166901,166873,166812,166393,16045,33955,18165,18127,14322,35389,35356,169032,24397,37419,148100,26068,28969,28868,137285,40301,35999,36073,163292,22938,30659,23024,17262,14036,36394,36519,150537,36656,36682,17140,27736,28603,140065,18587,28537,28299,137178,39913,14005,149807,37051,37015,21873,18694,37307,37892,166475,16482,166652,37927,166941,166971,34021,35371,38297,38311,38295,38294,167220,29765,16066,149759,150082,148458,16103,143909,38543,167655,167526,167525,16076,149997,150136,147438,29714,29803,16124,38721,168112,26695,18973,168083,153567,38749,37736,166281,166950,166703,156606,37562,23313,35689,18748,29689,147995,38811,38769,39224,134950,24001,166853,150194,38943,169178,37622,169431,37349,17600,166736,150119,166756,39132,166469,16128,37418,18725,33812,39227,39245,162566,15869,39323,19311,39338,39516,166757,153800,27279,39457,23294,39471,170225,19344,170312,39356,19389,19351,37757,22642,135938,22562,149944,136424,30788,141087,146872,26821,15741,37976,14631,24912,141185,141675,24839,40015,40019,40059,39989,39952,39807,39887,171565,39839,172533,172286,40225,19630,147716,40472,19632,40204,172468,172269,172275,170287,40357,33981,159250,159711,158594,34300,17715,159140,159364,159216,33824,34286,159232,145367,155748,31202,144796,144960,18733,149982,15714,37851,37566,37704,131775,30905,37495,37965,20452,13376,36964,152925,30781,30804,30902,30795,137047,143817,149825,13978,20338,28634,28633,28702,28702,21524,147893,22459,22771,22410,40214,22487,28980,13487,147884,29163,158784,151447,23336,137141,166473,24844,23246,23051,17084,148616,14124,19323,166396,37819,37816,137430,134941,33906,158912,136211,148218,142374,148417,22932,146871,157505,32168,155995,155812,149945,149899,166394,37605,29666,16105,29876,166755,137375,16097,150195,27352,29683,29691,16086,150078,150164,137177,150118,132007,136228,149989,29768,149782,28837,149878,37508,29670,37727,132350,37681,166606,166422,37766,166887,153045,18741,166530,29035,149827,134399,22180,132634,134123,134328,21762,31172,137210,32254,136898,150096,137298,17710,37889,14090,166592,149933,22960,137407,137347,160900,23201,14050,146779,14000,37471,23161,166529,137314,37748,15565,133812,19094,14730,20724,15721,15692,136092,29045,17147,164376,28175,168164,17643,27991,163407,28775,27823,15574,147437,146989,28162,28428,15727,132085,30033,14012,13512,18048,16090,18545,22980,37486,18750,36673,166940,158656,22546,22472,14038,136274,28926,148322,150129,143331,135856,140221,26809,26983,136088,144613,162804,145119,166531,145366,144378,150687,27162,145069,158903,33854,17631,17614,159014,159057,158850,159710,28439,160009,33597,137018,33773,158848,159827,137179,22921,23170,137139,23137,23153,137477,147964,14125,23023,137020,14023,29070,37776,26266,148133,23150,23083,148115,27179,147193,161590,148571,148170,28957,148057,166369,20400,159016,23746,148686,163405,148413,27148,148054,135940,28838,28979,148457,15781,27871,194597,150095,32357,23019,23855,15859,24412,150109,137183,32164,33830,21637,146170,144128,131604,22398,133333,132633,16357,139166,172726,28675,168283,23920,29583,31955,166489,168992,20424,32743,29389,29456,162548,29496,29497,153334,29505,29512,16041,162584,36972,29173,149746,29665,33270,16074,30476,16081,27810,22269,29721,29726,29727,16098,16112,16116,16122,29907,16142,16211,30018,30061,30066,30093,16252,30152,30172,16320,30285,16343,30324,16348,30330,151388,29064,22051,35200,22633,16413,30531,16441,26465,16453,13787,30616,16490,16495,23646,30654,30667,22770,30744,28857,30748,16552,30777,30791,30801,30822,33864,152885,31027,26627,31026,16643,16649,31121,31129,36795,31238,36796,16743,31377,16818,31420,33401,16836,31439,31451,16847,20001,31586,31596,31611,31762,31771,16992,17018,31867,31900,17036,31928,17044,31981,36755,28864,134351,32207,32212,32208,32253,32686,32692,29343,17303,32800,32805,31545,32814,32817,32852,15820,22452,28832,32951,33001,17389,33036,29482,33038,33042,30048,33044,17409,15161,33110,33113,33114,17427,22586,33148,33156,17445,33171,17453,33189,22511,33217,33252,33364,17551,33446,33398,33482,33496,33535,17584,33623,38505,27018,33797,28917,33892,24803,33928,17668,33982,34017,34040,34064,34104,34130,17723,34159,34160,34272,17783,34418,34450,34482,34543,38469,34699,17926,17943,34990,35071,35108,35143,35217,162151,35369,35384,35476,35508,35921,36052,36082,36124,18328,22623,36291,18413,20206,36410,21976,22356,36465,22005,36528,18487,36558,36578,36580,36589,36594,36791,36801,36810,36812,36915,39364,18605,39136,37395,18718,37416,37464,37483,37553,37550,37567,37603,37611,37619,37620,37629,37699,37764,37805,18757,18769,40639,37911,21249,37917,37933,37950,18794,37972,38009,38189,38306,18855,38388,38451,18917,26528,18980,38720,18997,38834,38850,22100,19172,24808,39097,19225,39153,22596,39182,39193,20916,39196,39223,39234,39261,39266,19312,39365,19357,39484,39695,31363,39785,39809,39901,39921,39924,19565,39968,14191,138178,40265,39994,40702,22096,40339,40381,40384,40444,38134,36790,40571,40620,40625,40637,40646,38108,40674,40689,40696,31432,40772,131220,131767,132000,26906,38083,22956,132311,22592,38081,14265,132565,132629,132726,136890,22359,29043,133826,133837,134079,21610,194619,134091,21662,134139,134203,134227,134245,134268,24807,134285,22138,134325,134365,134381,134511,134578,134600,26965,39983,34725,134660,134670,134871,135056,134957,134771,23584,135100,24075,135260,135247,135286,26398,135291,135304,135318,13895,135359,135379,135471,135483,21348,33965,135907,136053,135990,35713,136567,136729,137155,137159,20088,28859,137261,137578,137773,137797,138282,138352,138412,138952,25283,138965,139029,29080,26709,139333,27113,14024,139900,140247,140282,141098,141425,141647,33533,141671,141715,142037,35237,142056,36768,142094,38840,142143,38983,39613,142412,null,142472,142519,154600,142600,142610,142775,142741,142914,143220,143308,143411,143462,144159,144350,24497,26184,26303,162425,144743,144883,29185,149946,30679,144922,145174,32391,131910,22709,26382,26904,146087,161367,155618,146961,147129,161278,139418,18640,19128,147737,166554,148206,148237,147515,148276,148374,150085,132554,20946,132625,22943,138920,15294,146687,148484,148694,22408,149108,14747,149295,165352,170441,14178,139715,35678,166734,39382,149522,149755,150037,29193,150208,134264,22885,151205,151430,132985,36570,151596,21135,22335,29041,152217,152601,147274,150183,21948,152646,152686,158546,37332,13427,152895,161330,152926,18200,152930,152934,153543,149823,153693,20582,13563,144332,24798,153859,18300,166216,154286,154505,154630,138640,22433,29009,28598,155906,162834,36950,156082,151450,35682,156674,156746,23899,158711,36662,156804,137500,35562,150006,156808,147439,156946,19392,157119,157365,141083,37989,153569,24981,23079,194765,20411,22201,148769,157436,20074,149812,38486,28047,158909,13848,35191,157593,157806,156689,157790,29151,157895,31554,168128,133649,157990,37124,158009,31301,40432,158202,39462,158253,13919,156777,131105,31107,158260,158555,23852,144665,33743,158621,18128,158884,30011,34917,159150,22710,14108,140685,159819,160205,15444,160384,160389,37505,139642,160395,37680,160486,149968,27705,38047,160848,134904,34855,35061,141606,164979,137137,28344,150058,137248,14756,14009,23568,31203,17727,26294,171181,170148,35139,161740,161880,22230,16607,136714,14753,145199,164072,136133,29101,33638,162269,168360,23143,19639,159919,166315,162301,162314,162571,163174,147834,31555,31102,163849,28597,172767,27139,164632,21410,159239,37823,26678,38749,164207,163875,158133,136173,143919,163912,23941,166960,163971,22293,38947,166217,23979,149896,26046,27093,21458,150181,147329,15377,26422,163984,164084,164142,139169,164175,164233,164271,164378,164614,164655,164746,13770,164968,165546,18682,25574,166230,30728,37461,166328,17394,166375,17375,166376,166726,166868,23032,166921,36619,167877,168172,31569,168208,168252,15863,168286,150218,36816,29327,22155,169191,169449,169392,169400,169778,170193,170313,170346,170435,170536,170766,171354,171419,32415,171768,171811,19620,38215,172691,29090,172799,19857,36882,173515,19868,134300,36798,21953,36794,140464,36793,150163,17673,32383,28502,27313,20202,13540,166700,161949,14138,36480,137205,163876,166764,166809,162366,157359,15851,161365,146615,153141,153942,20122,155265,156248,22207,134765,36366,23405,147080,150686,25566,25296,137206,137339,25904,22061,154698,21530,152337,15814,171416,19581,22050,22046,32585,155352,22901,146752,34672,19996,135146,134473,145082,33047,40286,36120,30267,40005,30286,30649,37701,21554,33096,33527,22053,33074,33816,32957,21994,31074,22083,21526,134813,13774,22021,22001,26353,164578,13869,30004,22000,21946,21655,21874,134209,134294,24272,151880,134774,142434,134818,40619,32090,21982,135285,25245,38765,21652,36045,29174,37238,25596,25529,25598,21865,142147,40050,143027,20890,13535,134567,20903,21581,21790,21779,30310,36397,157834,30129,32950,34820,34694,35015,33206,33820,135361,17644,29444,149254,23440,33547,157843,22139,141044,163119,147875,163187,159440,160438,37232,135641,37384,146684,173737,134828,134905,29286,138402,18254,151490,163833,135147,16634,40029,25887,142752,18675,149472,171388,135148,134666,24674,161187,135149,null,155720,135559,29091,32398,40272,19994,19972,13687,23309,27826,21351,13996,14812,21373,13989,149016,22682,150382,33325,21579,22442,154261,133497,null,14930,140389,29556,171692,19721,39917,146686,171824,19547,151465,169374,171998,33884,146870,160434,157619,145184,25390,32037,147191,146988,14890,36872,21196,15988,13946,17897,132238,30272,23280,134838,30842,163630,22695,16575,22140,39819,23924,30292,173108,40581,19681,30201,14331,24857,143578,148466,null,22109,135849,22439,149859,171526,21044,159918,13741,27722,40316,31830,39737,22494,137068,23635,25811,169168,156469,160100,34477,134440,159010,150242,134513,null,20990,139023,23950,38659,138705,40577,36940,31519,39682,23761,31651,25192,25397,39679,31695,39722,31870,39726,31810,31878,39957,31740,39689,40727,39963,149822,40794,21875,23491,20477,40600,20466,21088,15878,21201,22375,20566,22967,24082,38856,40363,36700,21609,38836,39232,38842,21292,24880,26924,21466,39946,40194,19515,38465,27008,20646,30022,137069,39386,21107,null,37209,38529,37212,null,37201,167575,25471,159011,27338,22033,37262,30074,25221,132092,29519,31856,154657,146685,null,149785,30422,39837,20010,134356,33726,34882,null,23626,27072,20717,22394,21023,24053,20174,27697,131570,20281,21660,21722,21146,36226,13822,24332,13811,null,27474,37244,40869,39831,38958,39092,39610,40616,40580,29050,31508,null,27642,34840,32632,null,22048,173642,36471,40787,null,36308,36431,40476,36353,25218,164733,36392,36469,31443,150135,31294,30936,27882,35431,30215,166490,40742,27854,34774,30147,172722,30803,194624,36108,29410,29553,35629,29442,29937,36075,150203,34351,24506,34976,17591,null,137275,159237,null,35454,140571,null,24829,30311,39639,40260,37742,39823,34805,null,34831,36087,29484,38689,39856,13782,29362,19463,31825,39242,155993,24921,19460,40598,24957,null,22367,24943,25254,25145,25294,14940,25058,21418,144373,25444,26626,13778,23895,166850,36826,167481,null,20697,138566,30982,21298,38456,134971,16485,null,30718,null,31938,155418,31962,31277,32870,32867,32077,29957,29938,35220,33306,26380,32866,160902,32859,29936,33027,30500,35209,157644,30035,159441,34729,34766,33224,34700,35401,36013,35651,30507,29944,34010,13877,27058,36262,null,35241,29800,28089,34753,147473,29927,15835,29046,24740,24988,15569,29026,24695,null,32625,166701,29264,24809,19326,21024,15384,146631,155351,161366,152881,137540,135934,170243,159196,159917,23745,156077,166415,145015,131310,157766,151310,17762,23327,156492,40784,40614,156267,12288,65292,12289,12290,65294,8231,65307,65306,65311,65281,65072,8230,8229,65104,65105,65106,183,65108,65109,65110,65111,65372,8211,65073,8212,65075,9588,65076,65103,65288,65289,65077,65078,65371,65373,65079,65080,12308,12309,65081,65082,12304,12305,65083,65084,12298,12299,65085,65086,12296,12297,65087,65088,12300,12301,65089,65090,12302,12303,65091,65092,65113,65114,65115,65116,65117,65118,8216,8217,8220,8221,12317,12318,8245,8242,65283,65286,65290,8251,167,12291,9675,9679,9651,9650,9678,9734,9733,9671,9670,9633,9632,9661,9660,12963,8453,175,65507,65343,717,65097,65098,65101,65102,65099,65100,65119,65120,65121,65291,65293,215,247,177,8730,65308,65310,65309,8806,8807,8800,8734,8786,8801,65122,65123,65124,65125,65126,65374,8745,8746,8869,8736,8735,8895,13266,13265,8747,8750,8757,8756,9792,9794,8853,8857,8593,8595,8592,8594,8598,8599,8601,8600,8741,8739,65295,65340,8725,65128,65284,65509,12306,65504,65505,65285,65312,8451,8457,65129,65130,65131,13269,13212,13213,13214,13262,13217,13198,13199,13252,176,20825,20827,20830,20829,20833,20835,21991,29929,31950,9601,9602,9603,9604,9605,9606,9607,9608,9615,9614,9613,9612,9611,9610,9609,9532,9524,9516,9508,9500,9620,9472,9474,9621,9484,9488,9492,9496,9581,9582,9584,9583,9552,9566,9578,9569,9698,9699,9701,9700,9585,9586,9587,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,12321,12322,12323,12324,12325,12326,12327,12328,12329,21313,21316,21317,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,729,713,714,711,715,9216,9217,9218,9219,9220,9221,9222,9223,9224,9225,9226,9227,9228,9229,9230,9231,9232,9233,9234,9235,9236,9237,9238,9239,9240,9241,9242,9243,9244,9245,9246,9247,9249,8364,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19968,20057,19969,19971,20035,20061,20102,20108,20154,20799,20837,20843,20960,20992,20993,21147,21269,21313,21340,21448,19977,19979,19976,19978,20011,20024,20961,20037,20040,20063,20062,20110,20129,20800,20995,21242,21315,21449,21475,22303,22763,22805,22823,22899,23376,23377,23379,23544,23567,23586,23608,23665,24029,24037,24049,24050,24051,24062,24178,24318,24331,24339,25165,19985,19984,19981,20013,20016,20025,20043,23609,20104,20113,20117,20114,20116,20130,20161,20160,20163,20166,20167,20173,20170,20171,20164,20803,20801,20839,20845,20846,20844,20887,20982,20998,20999,21000,21243,21246,21247,21270,21305,21320,21319,21317,21342,21380,21451,21450,21453,22764,22825,22827,22826,22829,23380,23569,23588,23610,23663,24052,24187,24319,24340,24341,24515,25096,25142,25163,25166,25903,25991,26007,26020,26041,26085,26352,26376,26408,27424,27490,27513,27595,27604,27611,27663,27700,28779,29226,29238,29243,29255,29273,29275,29356,29579,19993,19990,19989,19988,19992,20027,20045,20047,20046,20197,20184,20180,20181,20182,20183,20195,20196,20185,20190,20805,20804,20873,20874,20908,20985,20986,20984,21002,21152,21151,21253,21254,21271,21277,20191,21322,21321,21345,21344,21359,21358,21435,21487,21476,21491,21484,21486,21481,21480,21500,21496,21493,21483,21478,21482,21490,21489,21488,21477,21485,21499,22235,22234,22806,22830,22833,22900,22902,23381,23427,23612,24040,24039,24038,24066,24067,24179,24188,24321,24344,24343,24517,25098,25171,25172,25170,25169,26021,26086,26414,26412,26410,26411,26413,27491,27597,27665,27664,27704,27713,27712,27710,29359,29572,29577,29916,29926,29976,29983,29992,29993,30000,30001,30002,30003,30091,30333,30382,30399,30446,30683,30690,30707,31034,31166,31348,31435,19998,19999,20050,20051,20073,20121,20132,20134,20133,20223,20233,20249,20234,20245,20237,20240,20241,20239,20210,20214,20219,20208,20211,20221,20225,20235,20809,20807,20806,20808,20840,20849,20877,20912,21015,21009,21010,21006,21014,21155,21256,21281,21280,21360,21361,21513,21519,21516,21514,21520,21505,21515,21508,21521,21517,21512,21507,21518,21510,21522,22240,22238,22237,22323,22320,22312,22317,22316,22319,22313,22809,22810,22839,22840,22916,22904,22915,22909,22905,22914,22913,23383,23384,23431,23432,23429,23433,23546,23574,23673,24030,24070,24182,24180,24335,24347,24537,24534,25102,25100,25101,25104,25187,25179,25176,25910,26089,26088,26092,26093,26354,26355,26377,26429,26420,26417,26421,27425,27492,27515,27670,27741,27735,27737,27743,27744,27728,27733,27745,27739,27725,27726,28784,29279,29277,30334,31481,31859,31992,32566,32650,32701,32769,32771,32780,32786,32819,32895,32905,32907,32908,33251,33258,33267,33276,33292,33307,33311,33390,33394,33406,34411,34880,34892,34915,35199,38433,20018,20136,20301,20303,20295,20311,20318,20276,20315,20309,20272,20304,20305,20285,20282,20280,20291,20308,20284,20294,20323,20316,20320,20271,20302,20278,20313,20317,20296,20314,20812,20811,20813,20853,20918,20919,21029,21028,21033,21034,21032,21163,21161,21162,21164,21283,21363,21365,21533,21549,21534,21566,21542,21582,21543,21574,21571,21555,21576,21570,21531,21545,21578,21561,21563,21560,21550,21557,21558,21536,21564,21568,21553,21547,21535,21548,22250,22256,22244,22251,22346,22353,22336,22349,22343,22350,22334,22352,22351,22331,22767,22846,22941,22930,22952,22942,22947,22937,22934,22925,22948,22931,22922,22949,23389,23388,23386,23387,23436,23435,23439,23596,23616,23617,23615,23614,23696,23697,23700,23692,24043,24076,24207,24199,24202,24311,24324,24351,24420,24418,24439,24441,24536,24524,24535,24525,24561,24555,24568,24554,25106,25105,25220,25239,25238,25216,25206,25225,25197,25226,25212,25214,25209,25203,25234,25199,25240,25198,25237,25235,25233,25222,25913,25915,25912,26097,26356,26463,26446,26447,26448,26449,26460,26454,26462,26441,26438,26464,26451,26455,27493,27599,27714,27742,27801,27777,27784,27785,27781,27803,27754,27770,27792,27760,27788,27752,27798,27794,27773,27779,27762,27774,27764,27782,27766,27789,27796,27800,27778,28790,28796,28797,28792,29282,29281,29280,29380,29378,29590,29996,29995,30007,30008,30338,30447,30691,31169,31168,31167,31350,31995,32597,32918,32915,32925,32920,32923,32922,32946,33391,33426,33419,33421,35211,35282,35328,35895,35910,35925,35997,36196,36208,36275,36523,36554,36763,36784,36802,36806,36805,36804,24033,37009,37026,37034,37030,37027,37193,37318,37324,38450,38446,38449,38442,38444,20006,20054,20083,20107,20123,20126,20139,20140,20335,20381,20365,20339,20351,20332,20379,20363,20358,20355,20336,20341,20360,20329,20347,20374,20350,20367,20369,20346,20820,20818,20821,20841,20855,20854,20856,20925,20989,21051,21048,21047,21050,21040,21038,21046,21057,21182,21179,21330,21332,21331,21329,21350,21367,21368,21369,21462,21460,21463,21619,21621,21654,21624,21653,21632,21627,21623,21636,21650,21638,21628,21648,21617,21622,21644,21658,21602,21608,21643,21629,21646,22266,22403,22391,22378,22377,22369,22374,22372,22396,22812,22857,22855,22856,22852,22868,22974,22971,22996,22969,22958,22993,22982,22992,22989,22987,22995,22986,22959,22963,22994,22981,23391,23396,23395,23447,23450,23448,23452,23449,23451,23578,23624,23621,23622,23735,23713,23736,23721,23723,23729,23731,24088,24090,24086,24085,24091,24081,24184,24218,24215,24220,24213,24214,24310,24358,24359,24361,24448,24449,24447,24444,24541,24544,24573,24565,24575,24591,24596,24623,24629,24598,24618,24597,24609,24615,24617,24619,24603,25110,25109,25151,25150,25152,25215,25289,25292,25284,25279,25282,25273,25298,25307,25259,25299,25300,25291,25288,25256,25277,25276,25296,25305,25287,25293,25269,25306,25265,25304,25302,25303,25286,25260,25294,25918,26023,26044,26106,26132,26131,26124,26118,26114,26126,26112,26127,26133,26122,26119,26381,26379,26477,26507,26517,26481,26524,26483,26487,26503,26525,26519,26479,26480,26495,26505,26494,26512,26485,26522,26515,26492,26474,26482,27427,27494,27495,27519,27667,27675,27875,27880,27891,27825,27852,27877,27827,27837,27838,27836,27874,27819,27861,27859,27832,27844,27833,27841,27822,27863,27845,27889,27839,27835,27873,27867,27850,27820,27887,27868,27862,27872,28821,28814,28818,28810,28825,29228,29229,29240,29256,29287,29289,29376,29390,29401,29399,29392,29609,29608,29599,29611,29605,30013,30109,30105,30106,30340,30402,30450,30452,30693,30717,31038,31040,31041,31177,31176,31354,31353,31482,31998,32596,32652,32651,32773,32954,32933,32930,32945,32929,32939,32937,32948,32938,32943,33253,33278,33293,33459,33437,33433,33453,33469,33439,33465,33457,33452,33445,33455,33464,33443,33456,33470,33463,34382,34417,21021,34920,36555,36814,36820,36817,37045,37048,37041,37046,37319,37329,38263,38272,38428,38464,38463,38459,38468,38466,38585,38632,38738,38750,20127,20141,20142,20449,20405,20399,20415,20448,20433,20431,20445,20419,20406,20440,20447,20426,20439,20398,20432,20420,20418,20442,20430,20446,20407,20823,20882,20881,20896,21070,21059,21066,21069,21068,21067,21063,21191,21193,21187,21185,21261,21335,21371,21402,21467,21676,21696,21672,21710,21705,21688,21670,21683,21703,21698,21693,21674,21697,21700,21704,21679,21675,21681,21691,21673,21671,21695,22271,22402,22411,22432,22435,22434,22478,22446,22419,22869,22865,22863,22862,22864,23004,23000,23039,23011,23016,23043,23013,23018,23002,23014,23041,23035,23401,23459,23462,23460,23458,23461,23553,23630,23631,23629,23627,23769,23762,24055,24093,24101,24095,24189,24224,24230,24314,24328,24365,24421,24456,24453,24458,24459,24455,24460,24457,24594,24605,24608,24613,24590,24616,24653,24688,24680,24674,24646,24643,24684,24683,24682,24676,25153,25308,25366,25353,25340,25325,25345,25326,25341,25351,25329,25335,25327,25324,25342,25332,25361,25346,25919,25925,26027,26045,26082,26149,26157,26144,26151,26159,26143,26152,26161,26148,26359,26623,26579,26609,26580,26576,26604,26550,26543,26613,26601,26607,26564,26577,26548,26586,26597,26552,26575,26590,26611,26544,26585,26594,26589,26578,27498,27523,27526,27573,27602,27607,27679,27849,27915,27954,27946,27969,27941,27916,27953,27934,27927,27963,27965,27966,27958,27931,27893,27961,27943,27960,27945,27950,27957,27918,27947,28843,28858,28851,28844,28847,28845,28856,28846,28836,29232,29298,29295,29300,29417,29408,29409,29623,29642,29627,29618,29645,29632,29619,29978,29997,30031,30028,30030,30027,30123,30116,30117,30114,30115,30328,30342,30343,30344,30408,30406,30403,30405,30465,30457,30456,30473,30475,30462,30460,30471,30684,30722,30740,30732,30733,31046,31049,31048,31047,31161,31162,31185,31186,31179,31359,31361,31487,31485,31869,32002,32005,32000,32009,32007,32004,32006,32568,32654,32703,32772,32784,32781,32785,32822,32982,32997,32986,32963,32964,32972,32993,32987,32974,32990,32996,32989,33268,33314,33511,33539,33541,33507,33499,33510,33540,33509,33538,33545,33490,33495,33521,33537,33500,33492,33489,33502,33491,33503,33519,33542,34384,34425,34427,34426,34893,34923,35201,35284,35336,35330,35331,35998,36000,36212,36211,36276,36557,36556,36848,36838,36834,36842,36837,36845,36843,36836,36840,37066,37070,37057,37059,37195,37194,37325,38274,38480,38475,38476,38477,38754,38761,38859,38893,38899,38913,39080,39131,39135,39318,39321,20056,20147,20492,20493,20515,20463,20518,20517,20472,20521,20502,20486,20540,20511,20506,20498,20497,20474,20480,20500,20520,20465,20513,20491,20505,20504,20467,20462,20525,20522,20478,20523,20489,20860,20900,20901,20898,20941,20940,20934,20939,21078,21084,21076,21083,21085,21290,21375,21407,21405,21471,21736,21776,21761,21815,21756,21733,21746,21766,21754,21780,21737,21741,21729,21769,21742,21738,21734,21799,21767,21757,21775,22275,22276,22466,22484,22475,22467,22537,22799,22871,22872,22874,23057,23064,23068,23071,23067,23059,23020,23072,23075,23081,23077,23052,23049,23403,23640,23472,23475,23478,23476,23470,23477,23481,23480,23556,23633,23637,23632,23789,23805,23803,23786,23784,23792,23798,23809,23796,24046,24109,24107,24235,24237,24231,24369,24466,24465,24464,24665,24675,24677,24656,24661,24685,24681,24687,24708,24735,24730,24717,24724,24716,24709,24726,25159,25331,25352,25343,25422,25406,25391,25429,25410,25414,25423,25417,25402,25424,25405,25386,25387,25384,25421,25420,25928,25929,26009,26049,26053,26178,26185,26191,26179,26194,26188,26181,26177,26360,26388,26389,26391,26657,26680,26696,26694,26707,26681,26690,26708,26665,26803,26647,26700,26705,26685,26612,26704,26688,26684,26691,26666,26693,26643,26648,26689,27530,27529,27575,27683,27687,27688,27686,27684,27888,28010,28053,28040,28039,28006,28024,28023,27993,28051,28012,28041,28014,27994,28020,28009,28044,28042,28025,28037,28005,28052,28874,28888,28900,28889,28872,28879,29241,29305,29436,29433,29437,29432,29431,29574,29677,29705,29678,29664,29674,29662,30036,30045,30044,30042,30041,30142,30149,30151,30130,30131,30141,30140,30137,30146,30136,30347,30384,30410,30413,30414,30505,30495,30496,30504,30697,30768,30759,30776,30749,30772,30775,30757,30765,30752,30751,30770,31061,31056,31072,31071,31062,31070,31069,31063,31066,31204,31203,31207,31199,31206,31209,31192,31364,31368,31449,31494,31505,31881,32033,32023,32011,32010,32032,32034,32020,32016,32021,32026,32028,32013,32025,32027,32570,32607,32660,32709,32705,32774,32792,32789,32793,32791,32829,32831,33009,33026,33008,33029,33005,33012,33030,33016,33011,33032,33021,33034,33020,33007,33261,33260,33280,33296,33322,33323,33320,33324,33467,33579,33618,33620,33610,33592,33616,33609,33589,33588,33615,33586,33593,33590,33559,33600,33585,33576,33603,34388,34442,34474,34451,34468,34473,34444,34467,34460,34928,34935,34945,34946,34941,34937,35352,35344,35342,35340,35349,35338,35351,35347,35350,35343,35345,35912,35962,35961,36001,36002,36215,36524,36562,36564,36559,36785,36865,36870,36855,36864,36858,36852,36867,36861,36869,36856,37013,37089,37085,37090,37202,37197,37196,37336,37341,37335,37340,37337,38275,38498,38499,38497,38491,38493,38500,38488,38494,38587,39138,39340,39592,39640,39717,39730,39740,20094,20602,20605,20572,20551,20547,20556,20570,20553,20581,20598,20558,20565,20597,20596,20599,20559,20495,20591,20589,20828,20885,20976,21098,21103,21202,21209,21208,21205,21264,21263,21273,21311,21312,21310,21443,26364,21830,21866,21862,21828,21854,21857,21827,21834,21809,21846,21839,21845,21807,21860,21816,21806,21852,21804,21859,21811,21825,21847,22280,22283,22281,22495,22533,22538,22534,22496,22500,22522,22530,22581,22519,22521,22816,22882,23094,23105,23113,23142,23146,23104,23100,23138,23130,23110,23114,23408,23495,23493,23492,23490,23487,23494,23561,23560,23559,23648,23644,23645,23815,23814,23822,23835,23830,23842,23825,23849,23828,23833,23844,23847,23831,24034,24120,24118,24115,24119,24247,24248,24246,24245,24254,24373,24375,24407,24428,24425,24427,24471,24473,24478,24472,24481,24480,24476,24703,24739,24713,24736,24744,24779,24756,24806,24765,24773,24763,24757,24796,24764,24792,24789,24774,24799,24760,24794,24775,25114,25115,25160,25504,25511,25458,25494,25506,25509,25463,25447,25496,25514,25457,25513,25481,25475,25499,25451,25512,25476,25480,25497,25505,25516,25490,25487,25472,25467,25449,25448,25466,25949,25942,25937,25945,25943,21855,25935,25944,25941,25940,26012,26011,26028,26063,26059,26060,26062,26205,26202,26212,26216,26214,26206,26361,21207,26395,26753,26799,26786,26771,26805,26751,26742,26801,26791,26775,26800,26755,26820,26797,26758,26757,26772,26781,26792,26783,26785,26754,27442,27578,27627,27628,27691,28046,28092,28147,28121,28082,28129,28108,28132,28155,28154,28165,28103,28107,28079,28113,28078,28126,28153,28088,28151,28149,28101,28114,28186,28085,28122,28139,28120,28138,28145,28142,28136,28102,28100,28074,28140,28095,28134,28921,28937,28938,28925,28911,29245,29309,29313,29468,29467,29462,29459,29465,29575,29701,29706,29699,29702,29694,29709,29920,29942,29943,29980,29986,30053,30054,30050,30064,30095,30164,30165,30133,30154,30157,30350,30420,30418,30427,30519,30526,30524,30518,30520,30522,30827,30787,30798,31077,31080,31085,31227,31378,31381,31520,31528,31515,31532,31526,31513,31518,31534,31890,31895,31893,32070,32067,32113,32046,32057,32060,32064,32048,32051,32068,32047,32066,32050,32049,32573,32670,32666,32716,32718,32722,32796,32842,32838,33071,33046,33059,33067,33065,33072,33060,33282,33333,33335,33334,33337,33678,33694,33688,33656,33698,33686,33725,33707,33682,33674,33683,33673,33696,33655,33659,33660,33670,33703,34389,24426,34503,34496,34486,34500,34485,34502,34507,34481,34479,34505,34899,34974,34952,34987,34962,34966,34957,34955,35219,35215,35370,35357,35363,35365,35377,35373,35359,35355,35362,35913,35930,36009,36012,36011,36008,36010,36007,36199,36198,36286,36282,36571,36575,36889,36877,36890,36887,36899,36895,36893,36880,36885,36894,36896,36879,36898,36886,36891,36884,37096,37101,37117,37207,37326,37365,37350,37347,37351,37357,37353,38281,38506,38517,38515,38520,38512,38516,38518,38519,38508,38592,38634,38633,31456,31455,38914,38915,39770,40165,40565,40575,40613,40635,20642,20621,20613,20633,20625,20608,20630,20632,20634,26368,20977,21106,21108,21109,21097,21214,21213,21211,21338,21413,21883,21888,21927,21884,21898,21917,21912,21890,21916,21930,21908,21895,21899,21891,21939,21934,21919,21822,21938,21914,21947,21932,21937,21886,21897,21931,21913,22285,22575,22570,22580,22564,22576,22577,22561,22557,22560,22777,22778,22880,23159,23194,23167,23186,23195,23207,23411,23409,23506,23500,23507,23504,23562,23563,23601,23884,23888,23860,23879,24061,24133,24125,24128,24131,24190,24266,24257,24258,24260,24380,24429,24489,24490,24488,24785,24801,24754,24758,24800,24860,24867,24826,24853,24816,24827,24820,24936,24817,24846,24822,24841,24832,24850,25119,25161,25507,25484,25551,25536,25577,25545,25542,25549,25554,25571,25552,25569,25558,25581,25582,25462,25588,25578,25563,25682,25562,25593,25950,25958,25954,25955,26001,26000,26031,26222,26224,26228,26230,26223,26257,26234,26238,26231,26366,26367,26399,26397,26874,26837,26848,26840,26839,26885,26847,26869,26862,26855,26873,26834,26866,26851,26827,26829,26893,26898,26894,26825,26842,26990,26875,27454,27450,27453,27544,27542,27580,27631,27694,27695,27692,28207,28216,28244,28193,28210,28263,28234,28192,28197,28195,28187,28251,28248,28196,28246,28270,28205,28198,28271,28212,28237,28218,28204,28227,28189,28222,28363,28297,28185,28238,28259,28228,28274,28265,28255,28953,28954,28966,28976,28961,28982,29038,28956,29260,29316,29312,29494,29477,29492,29481,29754,29738,29747,29730,29733,29749,29750,29748,29743,29723,29734,29736,29989,29990,30059,30058,30178,30171,30179,30169,30168,30174,30176,30331,30332,30358,30355,30388,30428,30543,30701,30813,30828,30831,31245,31240,31243,31237,31232,31384,31383,31382,31461,31459,31561,31574,31558,31568,31570,31572,31565,31563,31567,31569,31903,31909,32094,32080,32104,32085,32043,32110,32114,32097,32102,32098,32112,32115,21892,32724,32725,32779,32850,32901,33109,33108,33099,33105,33102,33081,33094,33086,33100,33107,33140,33298,33308,33769,33795,33784,33805,33760,33733,33803,33729,33775,33777,33780,33879,33802,33776,33804,33740,33789,33778,33738,33848,33806,33796,33756,33799,33748,33759,34395,34527,34521,34541,34516,34523,34532,34512,34526,34903,35009,35010,34993,35203,35222,35387,35424,35413,35422,35388,35393,35412,35419,35408,35398,35380,35386,35382,35414,35937,35970,36015,36028,36019,36029,36033,36027,36032,36020,36023,36022,36031,36024,36234,36229,36225,36302,36317,36299,36314,36305,36300,36315,36294,36603,36600,36604,36764,36910,36917,36913,36920,36914,36918,37122,37109,37129,37118,37219,37221,37327,37396,37397,37411,37385,37406,37389,37392,37383,37393,38292,38287,38283,38289,38291,38290,38286,38538,38542,38539,38525,38533,38534,38541,38514,38532,38593,38597,38596,38598,38599,38639,38642,38860,38917,38918,38920,39143,39146,39151,39145,39154,39149,39342,39341,40643,40653,40657,20098,20653,20661,20658,20659,20677,20670,20652,20663,20667,20655,20679,21119,21111,21117,21215,21222,21220,21218,21219,21295,21983,21992,21971,21990,21966,21980,21959,21969,21987,21988,21999,21978,21985,21957,21958,21989,21961,22290,22291,22622,22609,22616,22615,22618,22612,22635,22604,22637,22602,22626,22610,22603,22887,23233,23241,23244,23230,23229,23228,23219,23234,23218,23913,23919,24140,24185,24265,24264,24338,24409,24492,24494,24858,24847,24904,24863,24819,24859,24825,24833,24840,24910,24908,24900,24909,24894,24884,24871,24845,24838,24887,25121,25122,25619,25662,25630,25642,25645,25661,25644,25615,25628,25620,25613,25654,25622,25623,25606,25964,26015,26032,26263,26249,26247,26248,26262,26244,26264,26253,26371,27028,26989,26970,26999,26976,26964,26997,26928,27010,26954,26984,26987,26974,26963,27001,27014,26973,26979,26971,27463,27506,27584,27583,27603,27645,28322,28335,28371,28342,28354,28304,28317,28359,28357,28325,28312,28348,28346,28331,28369,28310,28316,28356,28372,28330,28327,28340,29006,29017,29033,29028,29001,29031,29020,29036,29030,29004,29029,29022,28998,29032,29014,29242,29266,29495,29509,29503,29502,29807,29786,29781,29791,29790,29761,29759,29785,29787,29788,30070,30072,30208,30192,30209,30194,30193,30202,30207,30196,30195,30430,30431,30555,30571,30566,30558,30563,30585,30570,30572,30556,30565,30568,30562,30702,30862,30896,30871,30872,30860,30857,30844,30865,30867,30847,31098,31103,31105,33836,31165,31260,31258,31264,31252,31263,31262,31391,31392,31607,31680,31584,31598,31591,31921,31923,31925,32147,32121,32145,32129,32143,32091,32622,32617,32618,32626,32681,32680,32676,32854,32856,32902,32900,33137,33136,33144,33125,33134,33139,33131,33145,33146,33126,33285,33351,33922,33911,33853,33841,33909,33894,33899,33865,33900,33883,33852,33845,33889,33891,33897,33901,33862,34398,34396,34399,34553,34579,34568,34567,34560,34558,34555,34562,34563,34566,34570,34905,35039,35028,35033,35036,35032,35037,35041,35018,35029,35026,35228,35299,35435,35442,35443,35430,35433,35440,35463,35452,35427,35488,35441,35461,35437,35426,35438,35436,35449,35451,35390,35432,35938,35978,35977,36042,36039,36040,36036,36018,36035,36034,36037,36321,36319,36328,36335,36339,36346,36330,36324,36326,36530,36611,36617,36606,36618,36767,36786,36939,36938,36947,36930,36948,36924,36949,36944,36935,36943,36942,36941,36945,36926,36929,37138,37143,37228,37226,37225,37321,37431,37463,37432,37437,37440,37438,37467,37451,37476,37457,37428,37449,37453,37445,37433,37439,37466,38296,38552,38548,38549,38605,38603,38601,38602,38647,38651,38649,38646,38742,38772,38774,38928,38929,38931,38922,38930,38924,39164,39156,39165,39166,39347,39345,39348,39649,40169,40578,40718,40723,40736,20711,20718,20709,20694,20717,20698,20693,20687,20689,20721,20686,20713,20834,20979,21123,21122,21297,21421,22014,22016,22043,22039,22013,22036,22022,22025,22029,22030,22007,22038,22047,22024,22032,22006,22296,22294,22645,22654,22659,22675,22666,22649,22661,22653,22781,22821,22818,22820,22890,22889,23265,23270,23273,23255,23254,23256,23267,23413,23518,23527,23521,23525,23526,23528,23522,23524,23519,23565,23650,23940,23943,24155,24163,24149,24151,24148,24275,24278,24330,24390,24432,24505,24903,24895,24907,24951,24930,24931,24927,24922,24920,24949,25130,25735,25688,25684,25764,25720,25695,25722,25681,25703,25652,25709,25723,25970,26017,26071,26070,26274,26280,26269,27036,27048,27029,27073,27054,27091,27083,27035,27063,27067,27051,27060,27088,27085,27053,27084,27046,27075,27043,27465,27468,27699,28467,28436,28414,28435,28404,28457,28478,28448,28460,28431,28418,28450,28415,28399,28422,28465,28472,28466,28451,28437,28459,28463,28552,28458,28396,28417,28402,28364,28407,29076,29081,29053,29066,29060,29074,29246,29330,29334,29508,29520,29796,29795,29802,29808,29805,29956,30097,30247,30221,30219,30217,30227,30433,30435,30596,30589,30591,30561,30913,30879,30887,30899,30889,30883,31118,31119,31117,31278,31281,31402,31401,31469,31471,31649,31637,31627,31605,31639,31645,31636,31631,31672,31623,31620,31929,31933,31934,32187,32176,32156,32189,32190,32160,32202,32180,32178,32177,32186,32162,32191,32181,32184,32173,32210,32199,32172,32624,32736,32737,32735,32862,32858,32903,33104,33152,33167,33160,33162,33151,33154,33255,33274,33287,33300,33310,33355,33993,33983,33990,33988,33945,33950,33970,33948,33995,33976,33984,34003,33936,33980,34001,33994,34623,34588,34619,34594,34597,34612,34584,34645,34615,34601,35059,35074,35060,35065,35064,35069,35048,35098,35055,35494,35468,35486,35491,35469,35489,35475,35492,35498,35493,35496,35480,35473,35482,35495,35946,35981,35980,36051,36049,36050,36203,36249,36245,36348,36628,36626,36629,36627,36771,36960,36952,36956,36963,36953,36958,36962,36957,36955,37145,37144,37150,37237,37240,37239,37236,37496,37504,37509,37528,37526,37499,37523,37532,37544,37500,37521,38305,38312,38313,38307,38309,38308,38553,38556,38555,38604,38610,38656,38780,38789,38902,38935,38936,39087,39089,39171,39173,39180,39177,39361,39599,39600,39654,39745,39746,40180,40182,40179,40636,40763,40778,20740,20736,20731,20725,20729,20738,20744,20745,20741,20956,21127,21128,21129,21133,21130,21232,21426,22062,22075,22073,22066,22079,22068,22057,22099,22094,22103,22132,22070,22063,22064,22656,22687,22686,22707,22684,22702,22697,22694,22893,23305,23291,23307,23285,23308,23304,23534,23532,23529,23531,23652,23653,23965,23956,24162,24159,24161,24290,24282,24287,24285,24291,24288,24392,24433,24503,24501,24950,24935,24942,24925,24917,24962,24956,24944,24939,24958,24999,24976,25003,24974,25004,24986,24996,24980,25006,25134,25705,25711,25721,25758,25778,25736,25744,25776,25765,25747,25749,25769,25746,25774,25773,25771,25754,25772,25753,25762,25779,25973,25975,25976,26286,26283,26292,26289,27171,27167,27112,27137,27166,27161,27133,27169,27155,27146,27123,27138,27141,27117,27153,27472,27470,27556,27589,27590,28479,28540,28548,28497,28518,28500,28550,28525,28507,28536,28526,28558,28538,28528,28516,28567,28504,28373,28527,28512,28511,29087,29100,29105,29096,29270,29339,29518,29527,29801,29835,29827,29822,29824,30079,30240,30249,30239,30244,30246,30241,30242,30362,30394,30436,30606,30599,30604,30609,30603,30923,30917,30906,30922,30910,30933,30908,30928,31295,31292,31296,31293,31287,31291,31407,31406,31661,31665,31684,31668,31686,31687,31681,31648,31692,31946,32224,32244,32239,32251,32216,32236,32221,32232,32227,32218,32222,32233,32158,32217,32242,32249,32629,32631,32687,32745,32806,33179,33180,33181,33184,33178,33176,34071,34109,34074,34030,34092,34093,34067,34065,34083,34081,34068,34028,34085,34047,34054,34690,34676,34678,34656,34662,34680,34664,34649,34647,34636,34643,34907,34909,35088,35079,35090,35091,35093,35082,35516,35538,35527,35524,35477,35531,35576,35506,35529,35522,35519,35504,35542,35533,35510,35513,35547,35916,35918,35948,36064,36062,36070,36068,36076,36077,36066,36067,36060,36074,36065,36205,36255,36259,36395,36368,36381,36386,36367,36393,36383,36385,36382,36538,36637,36635,36639,36649,36646,36650,36636,36638,36645,36969,36974,36968,36973,36983,37168,37165,37159,37169,37255,37257,37259,37251,37573,37563,37559,37610,37548,37604,37569,37555,37564,37586,37575,37616,37554,38317,38321,38660,38662,38663,38665,38752,38797,38795,38799,38945,38955,38940,39091,39178,39187,39186,39192,39389,39376,39391,39387,39377,39381,39378,39385,39607,39662,39663,39719,39749,39748,39799,39791,40198,40201,40195,40617,40638,40654,22696,40786,20754,20760,20756,20752,20757,20864,20906,20957,21137,21139,21235,22105,22123,22137,22121,22116,22136,22122,22120,22117,22129,22127,22124,22114,22134,22721,22718,22727,22725,22894,23325,23348,23416,23536,23566,24394,25010,24977,25001,24970,25037,25014,25022,25034,25032,25136,25797,25793,25803,25787,25788,25818,25796,25799,25794,25805,25791,25810,25812,25790,25972,26310,26313,26297,26308,26311,26296,27197,27192,27194,27225,27243,27224,27193,27204,27234,27233,27211,27207,27189,27231,27208,27481,27511,27653,28610,28593,28577,28611,28580,28609,28583,28595,28608,28601,28598,28582,28576,28596,29118,29129,29136,29138,29128,29141,29113,29134,29145,29148,29123,29124,29544,29852,29859,29848,29855,29854,29922,29964,29965,30260,30264,30266,30439,30437,30624,30622,30623,30629,30952,30938,30956,30951,31142,31309,31310,31302,31308,31307,31418,31705,31761,31689,31716,31707,31713,31721,31718,31957,31958,32266,32273,32264,32283,32291,32286,32285,32265,32272,32633,32690,32752,32753,32750,32808,33203,33193,33192,33275,33288,33368,33369,34122,34137,34120,34152,34153,34115,34121,34157,34154,34142,34691,34719,34718,34722,34701,34913,35114,35122,35109,35115,35105,35242,35238,35558,35578,35563,35569,35584,35548,35559,35566,35582,35585,35586,35575,35565,35571,35574,35580,35947,35949,35987,36084,36420,36401,36404,36418,36409,36405,36667,36655,36664,36659,36776,36774,36981,36980,36984,36978,36988,36986,37172,37266,37664,37686,37624,37683,37679,37666,37628,37675,37636,37658,37648,37670,37665,37653,37678,37657,38331,38567,38568,38570,38613,38670,38673,38678,38669,38675,38671,38747,38748,38758,38808,38960,38968,38971,38967,38957,38969,38948,39184,39208,39198,39195,39201,39194,39405,39394,39409,39608,39612,39675,39661,39720,39825,40213,40227,40230,40232,40210,40219,40664,40660,40845,40860,20778,20767,20769,20786,21237,22158,22144,22160,22149,22151,22159,22741,22739,22737,22734,23344,23338,23332,23418,23607,23656,23996,23994,23997,23992,24171,24396,24509,25033,25026,25031,25062,25035,25138,25140,25806,25802,25816,25824,25840,25830,25836,25841,25826,25837,25986,25987,26329,26326,27264,27284,27268,27298,27292,27355,27299,27262,27287,27280,27296,27484,27566,27610,27656,28632,28657,28639,28640,28635,28644,28651,28655,28544,28652,28641,28649,28629,28654,28656,29159,29151,29166,29158,29157,29165,29164,29172,29152,29237,29254,29552,29554,29865,29872,29862,29864,30278,30274,30284,30442,30643,30634,30640,30636,30631,30637,30703,30967,30970,30964,30959,30977,31143,31146,31319,31423,31751,31757,31742,31735,31756,31712,31968,31964,31966,31970,31967,31961,31965,32302,32318,32326,32311,32306,32323,32299,32317,32305,32325,32321,32308,32313,32328,32309,32319,32303,32580,32755,32764,32881,32882,32880,32879,32883,33222,33219,33210,33218,33216,33215,33213,33225,33214,33256,33289,33393,34218,34180,34174,34204,34193,34196,34223,34203,34183,34216,34186,34407,34752,34769,34739,34770,34758,34731,34747,34746,34760,34763,35131,35126,35140,35128,35133,35244,35598,35607,35609,35611,35594,35616,35613,35588,35600,35905,35903,35955,36090,36093,36092,36088,36091,36264,36425,36427,36424,36426,36676,36670,36674,36677,36671,36991,36989,36996,36993,36994,36992,37177,37283,37278,37276,37709,37762,37672,37749,37706,37733,37707,37656,37758,37740,37723,37744,37722,37716,38346,38347,38348,38344,38342,38577,38584,38614,38684,38686,38816,38867,38982,39094,39221,39425,39423,39854,39851,39850,39853,40251,40255,40587,40655,40670,40668,40669,40667,40766,40779,21474,22165,22190,22745,22744,23352,24413,25059,25139,25844,25842,25854,25862,25850,25851,25847,26039,26332,26406,27315,27308,27331,27323,27320,27330,27310,27311,27487,27512,27567,28681,28683,28670,28678,28666,28689,28687,29179,29180,29182,29176,29559,29557,29863,29887,29973,30294,30296,30290,30653,30655,30651,30652,30990,31150,31329,31330,31328,31428,31429,31787,31783,31786,31774,31779,31777,31975,32340,32341,32350,32346,32353,32338,32345,32584,32761,32763,32887,32886,33229,33231,33290,34255,34217,34253,34256,34249,34224,34234,34233,34214,34799,34796,34802,34784,35206,35250,35316,35624,35641,35628,35627,35920,36101,36441,36451,36454,36452,36447,36437,36544,36681,36685,36999,36995,37000,37291,37292,37328,37780,37770,37782,37794,37811,37806,37804,37808,37784,37786,37783,38356,38358,38352,38357,38626,38620,38617,38619,38622,38692,38819,38822,38829,38905,38989,38991,38988,38990,38995,39098,39230,39231,39229,39214,39333,39438,39617,39683,39686,39759,39758,39757,39882,39881,39933,39880,39872,40273,40285,40288,40672,40725,40748,20787,22181,22750,22751,22754,23541,40848,24300,25074,25079,25078,25077,25856,25871,26336,26333,27365,27357,27354,27347,28699,28703,28712,28698,28701,28693,28696,29190,29197,29272,29346,29560,29562,29885,29898,29923,30087,30086,30303,30305,30663,31001,31153,31339,31337,31806,31807,31800,31805,31799,31808,32363,32365,32377,32361,32362,32645,32371,32694,32697,32696,33240,34281,34269,34282,34261,34276,34277,34295,34811,34821,34829,34809,34814,35168,35167,35158,35166,35649,35676,35672,35657,35674,35662,35663,35654,35673,36104,36106,36476,36466,36487,36470,36460,36474,36468,36692,36686,36781,37002,37003,37297,37294,37857,37841,37855,37827,37832,37852,37853,37846,37858,37837,37848,37860,37847,37864,38364,38580,38627,38698,38695,38753,38876,38907,39006,39000,39003,39100,39237,39241,39446,39449,39693,39912,39911,39894,39899,40329,40289,40306,40298,40300,40594,40599,40595,40628,21240,22184,22199,22198,22196,22204,22756,23360,23363,23421,23542,24009,25080,25082,25880,25876,25881,26342,26407,27372,28734,28720,28722,29200,29563,29903,30306,30309,31014,31018,31020,31019,31431,31478,31820,31811,31821,31983,31984,36782,32381,32380,32386,32588,32768,33242,33382,34299,34297,34321,34298,34310,34315,34311,34314,34836,34837,35172,35258,35320,35696,35692,35686,35695,35679,35691,36111,36109,36489,36481,36485,36482,37300,37323,37912,37891,37885,38369,38704,39108,39250,39249,39336,39467,39472,39479,39477,39955,39949,40569,40629,40680,40751,40799,40803,40801,20791,20792,22209,22208,22210,22804,23660,24013,25084,25086,25885,25884,26005,26345,27387,27396,27386,27570,28748,29211,29351,29910,29908,30313,30675,31824,32399,32396,32700,34327,34349,34330,34851,34850,34849,34847,35178,35180,35261,35700,35703,35709,36115,36490,36493,36491,36703,36783,37306,37934,37939,37941,37946,37944,37938,37931,38370,38712,38713,38706,38911,39015,39013,39255,39493,39491,39488,39486,39631,39764,39761,39981,39973,40367,40372,40386,40376,40605,40687,40729,40796,40806,40807,20796,20795,22216,22218,22217,23423,24020,24018,24398,25087,25892,27402,27489,28753,28760,29568,29924,30090,30318,30316,31155,31840,31839,32894,32893,33247,35186,35183,35324,35712,36118,36119,36497,36499,36705,37192,37956,37969,37970,38717,38718,38851,38849,39019,39253,39509,39501,39634,39706,40009,39985,39998,39995,40403,40407,40756,40812,40810,40852,22220,24022,25088,25891,25899,25898,26348,27408,29914,31434,31844,31843,31845,32403,32406,32404,33250,34360,34367,34865,35722,37008,37007,37987,37984,37988,38760,39023,39260,39514,39515,39511,39635,39636,39633,40020,40023,40022,40421,40607,40692,22225,22761,25900,28766,30321,30322,30679,32592,32648,34870,34873,34914,35731,35730,35734,33399,36123,37312,37994,38722,38728,38724,38854,39024,39519,39714,39768,40031,40441,40442,40572,40573,40711,40823,40818,24307,27414,28771,31852,31854,34875,35264,36513,37313,38002,38000,39025,39262,39638,39715,40652,28772,30682,35738,38007,38857,39522,39525,32412,35740,36522,37317,38013,38014,38012,40055,40056,40695,35924,38015,40474,29224,39530,39729,40475,40478,31858,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,20022,20031,20101,20128,20866,20886,20907,21241,21304,21353,21430,22794,23424,24027,12083,24191,24308,24400,24417,25908,26080,30098,30326,36789,38582,168,710,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,65339,65341,10045,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8679,8632,8633,12751,131276,20058,131210,20994,17553,40880,20872,40881,161287,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65506,65508,65287,65282,12849,8470,8481,12443,12444,11904,11908,11910,11911,11912,11914,11916,11917,11925,11932,11933,11941,11943,11946,11948,11950,11958,11964,11966,11974,11978,11980,11981,11983,11990,11991,11998,12003,null,null,null,643,592,603,596,629,339,248,331,650,618,20034,20060,20981,21274,21378,19975,19980,20039,20109,22231,64012,23662,24435,19983,20871,19982,20014,20115,20162,20169,20168,20888,21244,21356,21433,22304,22787,22828,23568,24063,26081,27571,27596,27668,29247,20017,20028,20200,20188,20201,20193,20189,20186,21004,21276,21324,22306,22307,22807,22831,23425,23428,23570,23611,23668,23667,24068,24192,24194,24521,25097,25168,27669,27702,27715,27711,27707,29358,29360,29578,31160,32906,38430,20238,20248,20268,20213,20244,20209,20224,20215,20232,20253,20226,20229,20258,20243,20228,20212,20242,20913,21011,21001,21008,21158,21282,21279,21325,21386,21511,22241,22239,22318,22314,22324,22844,22912,22908,22917,22907,22910,22903,22911,23382,23573,23589,23676,23674,23675,23678,24031,24181,24196,24322,24346,24436,24533,24532,24527,25180,25182,25188,25185,25190,25186,25177,25184,25178,25189,26095,26094,26430,26425,26424,26427,26426,26431,26428,26419,27672,27718,27730,27740,27727,27722,27732,27723,27724,28785,29278,29364,29365,29582,29994,30335,31349,32593,33400,33404,33408,33405,33407,34381,35198,37017,37015,37016,37019,37012,38434,38436,38432,38435,20310,20283,20322,20297,20307,20324,20286,20327,20306,20319,20289,20312,20269,20275,20287,20321,20879,20921,21020,21022,21025,21165,21166,21257,21347,21362,21390,21391,21552,21559,21546,21588,21573,21529,21532,21541,21528,21565,21583,21569,21544,21540,21575,22254,22247,22245,22337,22341,22348,22345,22347,22354,22790,22848,22950,22936,22944,22935,22926,22946,22928,22927,22951,22945,23438,23442,23592,23594,23693,23695,23688,23691,23689,23698,23690,23686,23699,23701,24032,24074,24078,24203,24201,24204,24200,24205,24325,24349,24440,24438,24530,24529,24528,24557,24552,24558,24563,24545,24548,24547,24570,24559,24567,24571,24576,24564,25146,25219,25228,25230,25231,25236,25223,25201,25211,25210,25200,25217,25224,25207,25213,25202,25204,25911,26096,26100,26099,26098,26101,26437,26439,26457,26453,26444,26440,26461,26445,26458,26443,27600,27673,27674,27768,27751,27755,27780,27787,27791,27761,27759,27753,27802,27757,27783,27797,27804,27750,27763,27749,27771,27790,28788,28794,29283,29375,29373,29379,29382,29377,29370,29381,29589,29591,29587,29588,29586,30010,30009,30100,30101,30337,31037,32820,32917,32921,32912,32914,32924,33424,33423,33413,33422,33425,33427,33418,33411,33412,35960,36809,36799,37023,37025,37029,37022,37031,37024,38448,38440,38447,38445,20019,20376,20348,20357,20349,20352,20359,20342,20340,20361,20356,20343,20300,20375,20330,20378,20345,20353,20344,20368,20380,20372,20382,20370,20354,20373,20331,20334,20894,20924,20926,21045,21042,21043,21062,21041,21180,21258,21259,21308,21394,21396,21639,21631,21633,21649,21634,21640,21611,21626,21630,21605,21612,21620,21606,21645,21615,21601,21600,21656,21603,21607,21604,22263,22265,22383,22386,22381,22379,22385,22384,22390,22400,22389,22395,22387,22388,22370,22376,22397,22796,22853,22965,22970,22991,22990,22962,22988,22977,22966,22972,22979,22998,22961,22973,22976,22984,22964,22983,23394,23397,23443,23445,23620,23623,23726,23716,23712,23733,23727,23720,23724,23711,23715,23725,23714,23722,23719,23709,23717,23734,23728,23718,24087,24084,24089,24360,24354,24355,24356,24404,24450,24446,24445,24542,24549,24621,24614,24601,24626,24587,24628,24586,24599,24627,24602,24606,24620,24610,24589,24592,24622,24595,24593,24588,24585,24604,25108,25149,25261,25268,25297,25278,25258,25270,25290,25262,25267,25263,25275,25257,25264,25272,25917,26024,26043,26121,26108,26116,26130,26120,26107,26115,26123,26125,26117,26109,26129,26128,26358,26378,26501,26476,26510,26514,26486,26491,26520,26502,26500,26484,26509,26508,26490,26527,26513,26521,26499,26493,26497,26488,26489,26516,27429,27520,27518,27614,27677,27795,27884,27883,27886,27865,27830,27860,27821,27879,27831,27856,27842,27834,27843,27846,27885,27890,27858,27869,27828,27786,27805,27776,27870,27840,27952,27853,27847,27824,27897,27855,27881,27857,28820,28824,28805,28819,28806,28804,28817,28822,28802,28826,28803,29290,29398,29387,29400,29385,29404,29394,29396,29402,29388,29393,29604,29601,29613,29606,29602,29600,29612,29597,29917,29928,30015,30016,30014,30092,30104,30383,30451,30449,30448,30453,30712,30716,30713,30715,30714,30711,31042,31039,31173,31352,31355,31483,31861,31997,32821,32911,32942,32931,32952,32949,32941,33312,33440,33472,33451,33434,33432,33435,33461,33447,33454,33468,33438,33466,33460,33448,33441,33449,33474,33444,33475,33462,33442,34416,34415,34413,34414,35926,36818,36811,36819,36813,36822,36821,36823,37042,37044,37039,37043,37040,38457,38461,38460,38458,38467,20429,20421,20435,20402,20425,20427,20417,20436,20444,20441,20411,20403,20443,20423,20438,20410,20416,20409,20460,21060,21065,21184,21186,21309,21372,21399,21398,21401,21400,21690,21665,21677,21669,21711,21699,33549,21687,21678,21718,21686,21701,21702,21664,21616,21692,21666,21694,21618,21726,21680,22453,22430,22431,22436,22412,22423,22429,22427,22420,22424,22415,22425,22437,22426,22421,22772,22797,22867,23009,23006,23022,23040,23025,23005,23034,23037,23036,23030,23012,23026,23031,23003,23017,23027,23029,23008,23038,23028,23021,23464,23628,23760,23768,23756,23767,23755,23771,23774,23770,23753,23751,23754,23766,23763,23764,23759,23752,23750,23758,23775,23800,24057,24097,24098,24099,24096,24100,24240,24228,24226,24219,24227,24229,24327,24366,24406,24454,24631,24633,24660,24690,24670,24645,24659,24647,24649,24667,24652,24640,24642,24671,24612,24644,24664,24678,24686,25154,25155,25295,25357,25355,25333,25358,25347,25323,25337,25359,25356,25336,25334,25344,25363,25364,25338,25365,25339,25328,25921,25923,26026,26047,26166,26145,26162,26165,26140,26150,26146,26163,26155,26170,26141,26164,26169,26158,26383,26384,26561,26610,26568,26554,26588,26555,26616,26584,26560,26551,26565,26603,26596,26591,26549,26573,26547,26615,26614,26606,26595,26562,26553,26574,26599,26608,26546,26620,26566,26605,26572,26542,26598,26587,26618,26569,26570,26563,26602,26571,27432,27522,27524,27574,27606,27608,27616,27680,27681,27944,27956,27949,27935,27964,27967,27922,27914,27866,27955,27908,27929,27962,27930,27921,27904,27933,27970,27905,27928,27959,27907,27919,27968,27911,27936,27948,27912,27938,27913,27920,28855,28831,28862,28849,28848,28833,28852,28853,28841,29249,29257,29258,29292,29296,29299,29294,29386,29412,29416,29419,29407,29418,29414,29411,29573,29644,29634,29640,29637,29625,29622,29621,29620,29675,29631,29639,29630,29635,29638,29624,29643,29932,29934,29998,30023,30024,30119,30122,30329,30404,30472,30467,30468,30469,30474,30455,30459,30458,30695,30696,30726,30737,30738,30725,30736,30735,30734,30729,30723,30739,31050,31052,31051,31045,31044,31189,31181,31183,31190,31182,31360,31358,31441,31488,31489,31866,31864,31865,31871,31872,31873,32003,32008,32001,32600,32657,32653,32702,32775,32782,32783,32788,32823,32984,32967,32992,32977,32968,32962,32976,32965,32995,32985,32988,32970,32981,32969,32975,32983,32998,32973,33279,33313,33428,33497,33534,33529,33543,33512,33536,33493,33594,33515,33494,33524,33516,33505,33522,33525,33548,33531,33526,33520,33514,33508,33504,33530,33523,33517,34423,34420,34428,34419,34881,34894,34919,34922,34921,35283,35332,35335,36210,36835,36833,36846,36832,37105,37053,37055,37077,37061,37054,37063,37067,37064,37332,37331,38484,38479,38481,38483,38474,38478,20510,20485,20487,20499,20514,20528,20507,20469,20468,20531,20535,20524,20470,20471,20503,20508,20512,20519,20533,20527,20529,20494,20826,20884,20883,20938,20932,20933,20936,20942,21089,21082,21074,21086,21087,21077,21090,21197,21262,21406,21798,21730,21783,21778,21735,21747,21732,21786,21759,21764,21768,21739,21777,21765,21745,21770,21755,21751,21752,21728,21774,21763,21771,22273,22274,22476,22578,22485,22482,22458,22470,22461,22460,22456,22454,22463,22471,22480,22457,22465,22798,22858,23065,23062,23085,23086,23061,23055,23063,23050,23070,23091,23404,23463,23469,23468,23555,23638,23636,23788,23807,23790,23793,23799,23808,23801,24105,24104,24232,24238,24234,24236,24371,24368,24423,24669,24666,24679,24641,24738,24712,24704,24722,24705,24733,24707,24725,24731,24727,24711,24732,24718,25113,25158,25330,25360,25430,25388,25412,25413,25398,25411,25572,25401,25419,25418,25404,25385,25409,25396,25432,25428,25433,25389,25415,25395,25434,25425,25400,25431,25408,25416,25930,25926,26054,26051,26052,26050,26186,26207,26183,26193,26386,26387,26655,26650,26697,26674,26675,26683,26699,26703,26646,26673,26652,26677,26667,26669,26671,26702,26692,26676,26653,26642,26644,26662,26664,26670,26701,26682,26661,26656,27436,27439,27437,27441,27444,27501,32898,27528,27622,27620,27624,27619,27618,27623,27685,28026,28003,28004,28022,27917,28001,28050,27992,28002,28013,28015,28049,28045,28143,28031,28038,27998,28007,28000,28055,28016,28028,27999,28034,28056,27951,28008,28043,28030,28032,28036,27926,28035,28027,28029,28021,28048,28892,28883,28881,28893,28875,32569,28898,28887,28882,28894,28896,28884,28877,28869,28870,28871,28890,28878,28897,29250,29304,29303,29302,29440,29434,29428,29438,29430,29427,29435,29441,29651,29657,29669,29654,29628,29671,29667,29673,29660,29650,29659,29652,29661,29658,29655,29656,29672,29918,29919,29940,29941,29985,30043,30047,30128,30145,30139,30148,30144,30143,30134,30138,30346,30409,30493,30491,30480,30483,30482,30499,30481,30485,30489,30490,30498,30503,30755,30764,30754,30773,30767,30760,30766,30763,30753,30761,30771,30762,30769,31060,31067,31055,31068,31059,31058,31057,31211,31212,31200,31214,31213,31210,31196,31198,31197,31366,31369,31365,31371,31372,31370,31367,31448,31504,31492,31507,31493,31503,31496,31498,31502,31497,31506,31876,31889,31882,31884,31880,31885,31877,32030,32029,32017,32014,32024,32022,32019,32031,32018,32015,32012,32604,32609,32606,32608,32605,32603,32662,32658,32707,32706,32704,32790,32830,32825,33018,33010,33017,33013,33025,33019,33024,33281,33327,33317,33587,33581,33604,33561,33617,33573,33622,33599,33601,33574,33564,33570,33602,33614,33563,33578,33544,33596,33613,33558,33572,33568,33591,33583,33577,33607,33605,33612,33619,33566,33580,33611,33575,33608,34387,34386,34466,34472,34454,34445,34449,34462,34439,34455,34438,34443,34458,34437,34469,34457,34465,34471,34453,34456,34446,34461,34448,34452,34883,34884,34925,34933,34934,34930,34944,34929,34943,34927,34947,34942,34932,34940,35346,35911,35927,35963,36004,36003,36214,36216,36277,36279,36278,36561,36563,36862,36853,36866,36863,36859,36868,36860,36854,37078,37088,37081,37082,37091,37087,37093,37080,37083,37079,37084,37092,37200,37198,37199,37333,37346,37338,38492,38495,38588,39139,39647,39727,20095,20592,20586,20577,20574,20576,20563,20555,20573,20594,20552,20557,20545,20571,20554,20578,20501,20549,20575,20585,20587,20579,20580,20550,20544,20590,20595,20567,20561,20944,21099,21101,21100,21102,21206,21203,21293,21404,21877,21878,21820,21837,21840,21812,21802,21841,21858,21814,21813,21808,21842,21829,21772,21810,21861,21838,21817,21832,21805,21819,21824,21835,22282,22279,22523,22548,22498,22518,22492,22516,22528,22509,22525,22536,22520,22539,22515,22479,22535,22510,22499,22514,22501,22508,22497,22542,22524,22544,22503,22529,22540,22513,22505,22512,22541,22532,22876,23136,23128,23125,23143,23134,23096,23093,23149,23120,23135,23141,23148,23123,23140,23127,23107,23133,23122,23108,23131,23112,23182,23102,23117,23097,23116,23152,23145,23111,23121,23126,23106,23132,23410,23406,23489,23488,23641,23838,23819,23837,23834,23840,23820,23848,23821,23846,23845,23823,23856,23826,23843,23839,23854,24126,24116,24241,24244,24249,24242,24243,24374,24376,24475,24470,24479,24714,24720,24710,24766,24752,24762,24787,24788,24783,24804,24793,24797,24776,24753,24795,24759,24778,24767,24771,24781,24768,25394,25445,25482,25474,25469,25533,25502,25517,25501,25495,25515,25486,25455,25479,25488,25454,25519,25461,25500,25453,25518,25468,25508,25403,25503,25464,25477,25473,25489,25485,25456,25939,26061,26213,26209,26203,26201,26204,26210,26392,26745,26759,26768,26780,26733,26734,26798,26795,26966,26735,26787,26796,26793,26741,26740,26802,26767,26743,26770,26748,26731,26738,26794,26752,26737,26750,26779,26774,26763,26784,26761,26788,26744,26747,26769,26764,26762,26749,27446,27443,27447,27448,27537,27535,27533,27534,27532,27690,28096,28075,28084,28083,28276,28076,28137,28130,28087,28150,28116,28160,28104,28128,28127,28118,28094,28133,28124,28125,28123,28148,28106,28093,28141,28144,28090,28117,28098,28111,28105,28112,28146,28115,28157,28119,28109,28131,28091,28922,28941,28919,28951,28916,28940,28912,28932,28915,28944,28924,28927,28934,28947,28928,28920,28918,28939,28930,28942,29310,29307,29308,29311,29469,29463,29447,29457,29464,29450,29448,29439,29455,29470,29576,29686,29688,29685,29700,29697,29693,29703,29696,29690,29692,29695,29708,29707,29684,29704,30052,30051,30158,30162,30159,30155,30156,30161,30160,30351,30345,30419,30521,30511,30509,30513,30514,30516,30515,30525,30501,30523,30517,30792,30802,30793,30797,30794,30796,30758,30789,30800,31076,31079,31081,31082,31075,31083,31073,31163,31226,31224,31222,31223,31375,31380,31376,31541,31559,31540,31525,31536,31522,31524,31539,31512,31530,31517,31537,31531,31533,31535,31538,31544,31514,31523,31892,31896,31894,31907,32053,32061,32056,32054,32058,32069,32044,32041,32065,32071,32062,32063,32074,32059,32040,32611,32661,32668,32669,32667,32714,32715,32717,32720,32721,32711,32719,32713,32799,32798,32795,32839,32835,32840,33048,33061,33049,33051,33069,33055,33068,33054,33057,33045,33063,33053,33058,33297,33336,33331,33338,33332,33330,33396,33680,33699,33704,33677,33658,33651,33700,33652,33679,33665,33685,33689,33653,33684,33705,33661,33667,33676,33693,33691,33706,33675,33662,33701,33711,33672,33687,33712,33663,33702,33671,33710,33654,33690,34393,34390,34495,34487,34498,34497,34501,34490,34480,34504,34489,34483,34488,34508,34484,34491,34492,34499,34493,34494,34898,34953,34965,34984,34978,34986,34970,34961,34977,34975,34968,34983,34969,34971,34967,34980,34988,34956,34963,34958,35202,35286,35289,35285,35376,35367,35372,35358,35897,35899,35932,35933,35965,36005,36221,36219,36217,36284,36290,36281,36287,36289,36568,36574,36573,36572,36567,36576,36577,36900,36875,36881,36892,36876,36897,37103,37098,37104,37108,37106,37107,37076,37099,37100,37097,37206,37208,37210,37203,37205,37356,37364,37361,37363,37368,37348,37369,37354,37355,37367,37352,37358,38266,38278,38280,38524,38509,38507,38513,38511,38591,38762,38916,39141,39319,20635,20629,20628,20638,20619,20643,20611,20620,20622,20637,20584,20636,20626,20610,20615,20831,20948,21266,21265,21412,21415,21905,21928,21925,21933,21879,22085,21922,21907,21896,21903,21941,21889,21923,21906,21924,21885,21900,21926,21887,21909,21921,21902,22284,22569,22583,22553,22558,22567,22563,22568,22517,22600,22565,22556,22555,22579,22591,22582,22574,22585,22584,22573,22572,22587,22881,23215,23188,23199,23162,23202,23198,23160,23206,23164,23205,23212,23189,23214,23095,23172,23178,23191,23171,23179,23209,23163,23165,23180,23196,23183,23187,23197,23530,23501,23499,23508,23505,23498,23502,23564,23600,23863,23875,23915,23873,23883,23871,23861,23889,23886,23893,23859,23866,23890,23869,23857,23897,23874,23865,23881,23864,23868,23858,23862,23872,23877,24132,24129,24408,24486,24485,24491,24777,24761,24780,24802,24782,24772,24852,24818,24842,24854,24837,24821,24851,24824,24828,24830,24769,24835,24856,24861,24848,24831,24836,24843,25162,25492,25521,25520,25550,25573,25576,25583,25539,25757,25587,25546,25568,25590,25557,25586,25589,25697,25567,25534,25565,25564,25540,25560,25555,25538,25543,25548,25547,25544,25584,25559,25561,25906,25959,25962,25956,25948,25960,25957,25996,26013,26014,26030,26064,26066,26236,26220,26235,26240,26225,26233,26218,26226,26369,26892,26835,26884,26844,26922,26860,26858,26865,26895,26838,26871,26859,26852,26870,26899,26896,26867,26849,26887,26828,26888,26992,26804,26897,26863,26822,26900,26872,26832,26877,26876,26856,26891,26890,26903,26830,26824,26845,26846,26854,26868,26833,26886,26836,26857,26901,26917,26823,27449,27451,27455,27452,27540,27543,27545,27541,27581,27632,27634,27635,27696,28156,28230,28231,28191,28233,28296,28220,28221,28229,28258,28203,28223,28225,28253,28275,28188,28211,28235,28224,28241,28219,28163,28206,28254,28264,28252,28257,28209,28200,28256,28273,28267,28217,28194,28208,28243,28261,28199,28280,28260,28279,28245,28281,28242,28262,28213,28214,28250,28960,28958,28975,28923,28974,28977,28963,28965,28962,28978,28959,28968,28986,28955,29259,29274,29320,29321,29318,29317,29323,29458,29451,29488,29474,29489,29491,29479,29490,29485,29478,29475,29493,29452,29742,29740,29744,29739,29718,29722,29729,29741,29745,29732,29731,29725,29737,29728,29746,29947,29999,30063,30060,30183,30170,30177,30182,30173,30175,30180,30167,30357,30354,30426,30534,30535,30532,30541,30533,30538,30542,30539,30540,30686,30700,30816,30820,30821,30812,30829,30833,30826,30830,30832,30825,30824,30814,30818,31092,31091,31090,31088,31234,31242,31235,31244,31236,31385,31462,31460,31562,31547,31556,31560,31564,31566,31552,31576,31557,31906,31902,31912,31905,32088,32111,32099,32083,32086,32103,32106,32079,32109,32092,32107,32082,32084,32105,32081,32095,32078,32574,32575,32613,32614,32674,32672,32673,32727,32849,32847,32848,33022,32980,33091,33098,33106,33103,33095,33085,33101,33082,33254,33262,33271,33272,33273,33284,33340,33341,33343,33397,33595,33743,33785,33827,33728,33768,33810,33767,33764,33788,33782,33808,33734,33736,33771,33763,33727,33793,33757,33765,33752,33791,33761,33739,33742,33750,33781,33737,33801,33807,33758,33809,33798,33730,33779,33749,33786,33735,33745,33770,33811,33731,33772,33774,33732,33787,33751,33762,33819,33755,33790,34520,34530,34534,34515,34531,34522,34538,34525,34539,34524,34540,34537,34519,34536,34513,34888,34902,34901,35002,35031,35001,35000,35008,35006,34998,35004,34999,35005,34994,35073,35017,35221,35224,35223,35293,35290,35291,35406,35405,35385,35417,35392,35415,35416,35396,35397,35410,35400,35409,35402,35404,35407,35935,35969,35968,36026,36030,36016,36025,36021,36228,36224,36233,36312,36307,36301,36295,36310,36316,36303,36309,36313,36296,36311,36293,36591,36599,36602,36601,36582,36590,36581,36597,36583,36584,36598,36587,36593,36588,36596,36585,36909,36916,36911,37126,37164,37124,37119,37116,37128,37113,37115,37121,37120,37127,37125,37123,37217,37220,37215,37218,37216,37377,37386,37413,37379,37402,37414,37391,37388,37376,37394,37375,37373,37382,37380,37415,37378,37404,37412,37401,37399,37381,37398,38267,38285,38284,38288,38535,38526,38536,38537,38531,38528,38594,38600,38595,38641,38640,38764,38768,38766,38919,39081,39147,40166,40697,20099,20100,20150,20669,20671,20678,20654,20676,20682,20660,20680,20674,20656,20673,20666,20657,20683,20681,20662,20664,20951,21114,21112,21115,21116,21955,21979,21964,21968,21963,21962,21981,21952,21972,21956,21993,21951,21970,21901,21967,21973,21986,21974,21960,22002,21965,21977,21954,22292,22611,22632,22628,22607,22605,22601,22639,22613,22606,22621,22617,22629,22619,22589,22627,22641,22780,23239,23236,23243,23226,23224,23217,23221,23216,23231,23240,23227,23238,23223,23232,23242,23220,23222,23245,23225,23184,23510,23512,23513,23583,23603,23921,23907,23882,23909,23922,23916,23902,23912,23911,23906,24048,24143,24142,24138,24141,24139,24261,24268,24262,24267,24263,24384,24495,24493,24823,24905,24906,24875,24901,24886,24882,24878,24902,24879,24911,24873,24896,25120,37224,25123,25125,25124,25541,25585,25579,25616,25618,25609,25632,25636,25651,25667,25631,25621,25624,25657,25655,25634,25635,25612,25638,25648,25640,25665,25653,25647,25610,25626,25664,25637,25639,25611,25575,25627,25646,25633,25614,25967,26002,26067,26246,26252,26261,26256,26251,26250,26265,26260,26232,26400,26982,26975,26936,26958,26978,26993,26943,26949,26986,26937,26946,26967,26969,27002,26952,26953,26933,26988,26931,26941,26981,26864,27000,26932,26985,26944,26991,26948,26998,26968,26945,26996,26956,26939,26955,26935,26972,26959,26961,26930,26962,26927,27003,26940,27462,27461,27459,27458,27464,27457,27547,64013,27643,27644,27641,27639,27640,28315,28374,28360,28303,28352,28319,28307,28308,28320,28337,28345,28358,28370,28349,28353,28318,28361,28343,28336,28365,28326,28367,28338,28350,28355,28380,28376,28313,28306,28302,28301,28324,28321,28351,28339,28368,28362,28311,28334,28323,28999,29012,29010,29027,29024,28993,29021,29026,29042,29048,29034,29025,28994,29016,28995,29003,29040,29023,29008,29011,28996,29005,29018,29263,29325,29324,29329,29328,29326,29500,29506,29499,29498,29504,29514,29513,29764,29770,29771,29778,29777,29783,29760,29775,29776,29774,29762,29766,29773,29780,29921,29951,29950,29949,29981,30073,30071,27011,30191,30223,30211,30199,30206,30204,30201,30200,30224,30203,30198,30189,30197,30205,30361,30389,30429,30549,30559,30560,30546,30550,30554,30569,30567,30548,30553,30573,30688,30855,30874,30868,30863,30852,30869,30853,30854,30881,30851,30841,30873,30848,30870,30843,31100,31106,31101,31097,31249,31256,31257,31250,31255,31253,31266,31251,31259,31248,31395,31394,31390,31467,31590,31588,31597,31604,31593,31602,31589,31603,31601,31600,31585,31608,31606,31587,31922,31924,31919,32136,32134,32128,32141,32127,32133,32122,32142,32123,32131,32124,32140,32148,32132,32125,32146,32621,32619,32615,32616,32620,32678,32677,32679,32731,32732,32801,33124,33120,33143,33116,33129,33115,33122,33138,26401,33118,33142,33127,33135,33092,33121,33309,33353,33348,33344,33346,33349,34033,33855,33878,33910,33913,33935,33933,33893,33873,33856,33926,33895,33840,33869,33917,33882,33881,33908,33907,33885,34055,33886,33847,33850,33844,33914,33859,33912,33842,33861,33833,33753,33867,33839,33858,33837,33887,33904,33849,33870,33868,33874,33903,33989,33934,33851,33863,33846,33843,33896,33918,33860,33835,33888,33876,33902,33872,34571,34564,34551,34572,34554,34518,34549,34637,34552,34574,34569,34561,34550,34573,34565,35030,35019,35021,35022,35038,35035,35034,35020,35024,35205,35227,35295,35301,35300,35297,35296,35298,35292,35302,35446,35462,35455,35425,35391,35447,35458,35460,35445,35459,35457,35444,35450,35900,35915,35914,35941,35940,35942,35974,35972,35973,36044,36200,36201,36241,36236,36238,36239,36237,36243,36244,36240,36242,36336,36320,36332,36337,36334,36304,36329,36323,36322,36327,36338,36331,36340,36614,36607,36609,36608,36613,36615,36616,36610,36619,36946,36927,36932,36937,36925,37136,37133,37135,37137,37142,37140,37131,37134,37230,37231,37448,37458,37424,37434,37478,37427,37477,37470,37507,37422,37450,37446,37485,37484,37455,37472,37479,37487,37430,37473,37488,37425,37460,37475,37456,37490,37454,37459,37452,37462,37426,38303,38300,38302,38299,38546,38547,38545,38551,38606,38650,38653,38648,38645,38771,38775,38776,38770,38927,38925,38926,39084,39158,39161,39343,39346,39344,39349,39597,39595,39771,40170,40173,40167,40576,40701,20710,20692,20695,20712,20723,20699,20714,20701,20708,20691,20716,20720,20719,20707,20704,20952,21120,21121,21225,21227,21296,21420,22055,22037,22028,22034,22012,22031,22044,22017,22035,22018,22010,22045,22020,22015,22009,22665,22652,22672,22680,22662,22657,22655,22644,22667,22650,22663,22673,22670,22646,22658,22664,22651,22676,22671,22782,22891,23260,23278,23269,23253,23274,23258,23277,23275,23283,23266,23264,23259,23276,23262,23261,23257,23272,23263,23415,23520,23523,23651,23938,23936,23933,23942,23930,23937,23927,23946,23945,23944,23934,23932,23949,23929,23935,24152,24153,24147,24280,24273,24279,24270,24284,24277,24281,24274,24276,24388,24387,24431,24502,24876,24872,24897,24926,24945,24947,24914,24915,24946,24940,24960,24948,24916,24954,24923,24933,24891,24938,24929,24918,25129,25127,25131,25643,25677,25691,25693,25716,25718,25714,25715,25725,25717,25702,25766,25678,25730,25694,25692,25675,25683,25696,25680,25727,25663,25708,25707,25689,25701,25719,25971,26016,26273,26272,26271,26373,26372,26402,27057,27062,27081,27040,27086,27030,27056,27052,27068,27025,27033,27022,27047,27021,27049,27070,27055,27071,27076,27069,27044,27092,27065,27082,27034,27087,27059,27027,27050,27041,27038,27097,27031,27024,27074,27061,27045,27078,27466,27469,27467,27550,27551,27552,27587,27588,27646,28366,28405,28401,28419,28453,28408,28471,28411,28462,28425,28494,28441,28442,28455,28440,28475,28434,28397,28426,28470,28531,28409,28398,28461,28480,28464,28476,28469,28395,28423,28430,28483,28421,28413,28406,28473,28444,28412,28474,28447,28429,28446,28424,28449,29063,29072,29065,29056,29061,29058,29071,29051,29062,29057,29079,29252,29267,29335,29333,29331,29507,29517,29521,29516,29794,29811,29809,29813,29810,29799,29806,29952,29954,29955,30077,30096,30230,30216,30220,30229,30225,30218,30228,30392,30593,30588,30597,30594,30574,30592,30575,30590,30595,30898,30890,30900,30893,30888,30846,30891,30878,30885,30880,30892,30882,30884,31128,31114,31115,31126,31125,31124,31123,31127,31112,31122,31120,31275,31306,31280,31279,31272,31270,31400,31403,31404,31470,31624,31644,31626,31633,31632,31638,31629,31628,31643,31630,31621,31640,21124,31641,31652,31618,31931,31935,31932,31930,32167,32183,32194,32163,32170,32193,32192,32197,32157,32206,32196,32198,32203,32204,32175,32185,32150,32188,32159,32166,32174,32169,32161,32201,32627,32738,32739,32741,32734,32804,32861,32860,33161,33158,33155,33159,33165,33164,33163,33301,33943,33956,33953,33951,33978,33998,33986,33964,33966,33963,33977,33972,33985,33997,33962,33946,33969,34000,33949,33959,33979,33954,33940,33991,33996,33947,33961,33967,33960,34006,33944,33974,33999,33952,34007,34004,34002,34011,33968,33937,34401,34611,34595,34600,34667,34624,34606,34590,34593,34585,34587,34627,34604,34625,34622,34630,34592,34610,34602,34605,34620,34578,34618,34609,34613,34626,34598,34599,34616,34596,34586,34608,34577,35063,35047,35057,35058,35066,35070,35054,35068,35062,35067,35056,35052,35051,35229,35233,35231,35230,35305,35307,35304,35499,35481,35467,35474,35471,35478,35901,35944,35945,36053,36047,36055,36246,36361,36354,36351,36365,36349,36362,36355,36359,36358,36357,36350,36352,36356,36624,36625,36622,36621,37155,37148,37152,37154,37151,37149,37146,37156,37153,37147,37242,37234,37241,37235,37541,37540,37494,37531,37498,37536,37524,37546,37517,37542,37530,37547,37497,37527,37503,37539,37614,37518,37506,37525,37538,37501,37512,37537,37514,37510,37516,37529,37543,37502,37511,37545,37533,37515,37421,38558,38561,38655,38744,38781,38778,38782,38787,38784,38786,38779,38788,38785,38783,38862,38861,38934,39085,39086,39170,39168,39175,39325,39324,39363,39353,39355,39354,39362,39357,39367,39601,39651,39655,39742,39743,39776,39777,39775,40177,40178,40181,40615,20735,20739,20784,20728,20742,20743,20726,20734,20747,20748,20733,20746,21131,21132,21233,21231,22088,22082,22092,22069,22081,22090,22089,22086,22104,22106,22080,22067,22077,22060,22078,22072,22058,22074,22298,22699,22685,22705,22688,22691,22703,22700,22693,22689,22783,23295,23284,23293,23287,23286,23299,23288,23298,23289,23297,23303,23301,23311,23655,23961,23959,23967,23954,23970,23955,23957,23968,23964,23969,23962,23966,24169,24157,24160,24156,32243,24283,24286,24289,24393,24498,24971,24963,24953,25009,25008,24994,24969,24987,24979,25007,25005,24991,24978,25002,24993,24973,24934,25011,25133,25710,25712,25750,25760,25733,25751,25756,25743,25739,25738,25740,25763,25759,25704,25777,25752,25974,25978,25977,25979,26034,26035,26293,26288,26281,26290,26295,26282,26287,27136,27142,27159,27109,27128,27157,27121,27108,27168,27135,27116,27106,27163,27165,27134,27175,27122,27118,27156,27127,27111,27200,27144,27110,27131,27149,27132,27115,27145,27140,27160,27173,27151,27126,27174,27143,27124,27158,27473,27557,27555,27554,27558,27649,27648,27647,27650,28481,28454,28542,28551,28614,28562,28557,28553,28556,28514,28495,28549,28506,28566,28534,28524,28546,28501,28530,28498,28496,28503,28564,28563,28509,28416,28513,28523,28541,28519,28560,28499,28555,28521,28543,28565,28515,28535,28522,28539,29106,29103,29083,29104,29088,29082,29097,29109,29085,29093,29086,29092,29089,29098,29084,29095,29107,29336,29338,29528,29522,29534,29535,29536,29533,29531,29537,29530,29529,29538,29831,29833,29834,29830,29825,29821,29829,29832,29820,29817,29960,29959,30078,30245,30238,30233,30237,30236,30243,30234,30248,30235,30364,30365,30366,30363,30605,30607,30601,30600,30925,30907,30927,30924,30929,30926,30932,30920,30915,30916,30921,31130,31137,31136,31132,31138,31131,27510,31289,31410,31412,31411,31671,31691,31678,31660,31694,31663,31673,31690,31669,31941,31944,31948,31947,32247,32219,32234,32231,32215,32225,32259,32250,32230,32246,32241,32240,32238,32223,32630,32684,32688,32685,32749,32747,32746,32748,32742,32744,32868,32871,33187,33183,33182,33173,33186,33177,33175,33302,33359,33363,33362,33360,33358,33361,34084,34107,34063,34048,34089,34062,34057,34061,34079,34058,34087,34076,34043,34091,34042,34056,34060,34036,34090,34034,34069,34039,34027,34035,34044,34066,34026,34025,34070,34046,34088,34077,34094,34050,34045,34078,34038,34097,34086,34023,34024,34032,34031,34041,34072,34080,34096,34059,34073,34095,34402,34646,34659,34660,34679,34785,34675,34648,34644,34651,34642,34657,34650,34641,34654,34669,34666,34640,34638,34655,34653,34671,34668,34682,34670,34652,34661,34639,34683,34677,34658,34663,34665,34906,35077,35084,35092,35083,35095,35096,35097,35078,35094,35089,35086,35081,35234,35236,35235,35309,35312,35308,35535,35526,35512,35539,35537,35540,35541,35515,35543,35518,35520,35525,35544,35523,35514,35517,35545,35902,35917,35983,36069,36063,36057,36072,36058,36061,36071,36256,36252,36257,36251,36384,36387,36389,36388,36398,36373,36379,36374,36369,36377,36390,36391,36372,36370,36376,36371,36380,36375,36378,36652,36644,36632,36634,36640,36643,36630,36631,36979,36976,36975,36967,36971,37167,37163,37161,37162,37170,37158,37166,37253,37254,37258,37249,37250,37252,37248,37584,37571,37572,37568,37593,37558,37583,37617,37599,37592,37609,37591,37597,37580,37615,37570,37608,37578,37576,37582,37606,37581,37589,37577,37600,37598,37607,37585,37587,37557,37601,37574,37556,38268,38316,38315,38318,38320,38564,38562,38611,38661,38664,38658,38746,38794,38798,38792,38864,38863,38942,38941,38950,38953,38952,38944,38939,38951,39090,39176,39162,39185,39188,39190,39191,39189,39388,39373,39375,39379,39380,39374,39369,39382,39384,39371,39383,39372,39603,39660,39659,39667,39666,39665,39750,39747,39783,39796,39793,39782,39798,39797,39792,39784,39780,39788,40188,40186,40189,40191,40183,40199,40192,40185,40187,40200,40197,40196,40579,40659,40719,40720,20764,20755,20759,20762,20753,20958,21300,21473,22128,22112,22126,22131,22118,22115,22125,22130,22110,22135,22300,22299,22728,22717,22729,22719,22714,22722,22716,22726,23319,23321,23323,23329,23316,23315,23312,23318,23336,23322,23328,23326,23535,23980,23985,23977,23975,23989,23984,23982,23978,23976,23986,23981,23983,23988,24167,24168,24166,24175,24297,24295,24294,24296,24293,24395,24508,24989,25000,24982,25029,25012,25030,25025,25036,25018,25023,25016,24972,25815,25814,25808,25807,25801,25789,25737,25795,25819,25843,25817,25907,25983,25980,26018,26312,26302,26304,26314,26315,26319,26301,26299,26298,26316,26403,27188,27238,27209,27239,27186,27240,27198,27229,27245,27254,27227,27217,27176,27226,27195,27199,27201,27242,27236,27216,27215,27220,27247,27241,27232,27196,27230,27222,27221,27213,27214,27206,27477,27476,27478,27559,27562,27563,27592,27591,27652,27651,27654,28589,28619,28579,28615,28604,28622,28616,28510,28612,28605,28574,28618,28584,28676,28581,28590,28602,28588,28586,28623,28607,28600,28578,28617,28587,28621,28591,28594,28592,29125,29122,29119,29112,29142,29120,29121,29131,29140,29130,29127,29135,29117,29144,29116,29126,29146,29147,29341,29342,29545,29542,29543,29548,29541,29547,29546,29823,29850,29856,29844,29842,29845,29857,29963,30080,30255,30253,30257,30269,30259,30268,30261,30258,30256,30395,30438,30618,30621,30625,30620,30619,30626,30627,30613,30617,30615,30941,30953,30949,30954,30942,30947,30939,30945,30946,30957,30943,30944,31140,31300,31304,31303,31414,31416,31413,31409,31415,31710,31715,31719,31709,31701,31717,31706,31720,31737,31700,31722,31714,31708,31723,31704,31711,31954,31956,31959,31952,31953,32274,32289,32279,32268,32287,32288,32275,32270,32284,32277,32282,32290,32267,32271,32278,32269,32276,32293,32292,32579,32635,32636,32634,32689,32751,32810,32809,32876,33201,33190,33198,33209,33205,33195,33200,33196,33204,33202,33207,33191,33266,33365,33366,33367,34134,34117,34155,34125,34131,34145,34136,34112,34118,34148,34113,34146,34116,34129,34119,34147,34110,34139,34161,34126,34158,34165,34133,34151,34144,34188,34150,34141,34132,34149,34156,34403,34405,34404,34715,34703,34711,34707,34706,34696,34689,34710,34712,34681,34695,34723,34693,34704,34705,34717,34692,34708,34716,34714,34697,35102,35110,35120,35117,35118,35111,35121,35106,35113,35107,35119,35116,35103,35313,35552,35554,35570,35572,35573,35549,35604,35556,35551,35568,35528,35550,35553,35560,35583,35567,35579,35985,35986,35984,36085,36078,36081,36080,36083,36204,36206,36261,36263,36403,36414,36408,36416,36421,36406,36412,36413,36417,36400,36415,36541,36662,36654,36661,36658,36665,36663,36660,36982,36985,36987,36998,37114,37171,37173,37174,37267,37264,37265,37261,37263,37671,37662,37640,37663,37638,37647,37754,37688,37692,37659,37667,37650,37633,37702,37677,37646,37645,37579,37661,37626,37669,37651,37625,37623,37684,37634,37668,37631,37673,37689,37685,37674,37652,37644,37643,37630,37641,37632,37627,37654,38332,38349,38334,38329,38330,38326,38335,38325,38333,38569,38612,38667,38674,38672,38809,38807,38804,38896,38904,38965,38959,38962,39204,39199,39207,39209,39326,39406,39404,39397,39396,39408,39395,39402,39401,39399,39609,39615,39604,39611,39670,39674,39673,39671,39731,39808,39813,39815,39804,39806,39803,39810,39827,39826,39824,39802,39829,39805,39816,40229,40215,40224,40222,40212,40233,40221,40216,40226,40208,40217,40223,40584,40582,40583,40622,40621,40661,40662,40698,40722,40765,20774,20773,20770,20772,20768,20777,21236,22163,22156,22157,22150,22148,22147,22142,22146,22143,22145,22742,22740,22735,22738,23341,23333,23346,23331,23340,23335,23334,23343,23342,23419,23537,23538,23991,24172,24170,24510,24507,25027,25013,25020,25063,25056,25061,25060,25064,25054,25839,25833,25827,25835,25828,25832,25985,25984,26038,26074,26322,27277,27286,27265,27301,27273,27295,27291,27297,27294,27271,27283,27278,27285,27267,27304,27300,27281,27263,27302,27290,27269,27276,27282,27483,27565,27657,28620,28585,28660,28628,28643,28636,28653,28647,28646,28638,28658,28637,28642,28648,29153,29169,29160,29170,29156,29168,29154,29555,29550,29551,29847,29874,29867,29840,29866,29869,29873,29861,29871,29968,29969,29970,29967,30084,30275,30280,30281,30279,30372,30441,30645,30635,30642,30647,30646,30644,30641,30632,30704,30963,30973,30978,30971,30972,30962,30981,30969,30974,30980,31147,31144,31324,31323,31318,31320,31316,31322,31422,31424,31425,31749,31759,31730,31744,31743,31739,31758,31732,31755,31731,31746,31753,31747,31745,31736,31741,31750,31728,31729,31760,31754,31976,32301,32316,32322,32307,38984,32312,32298,32329,32320,32327,32297,32332,32304,32315,32310,32324,32314,32581,32639,32638,32637,32756,32754,32812,33211,33220,33228,33226,33221,33223,33212,33257,33371,33370,33372,34179,34176,34191,34215,34197,34208,34187,34211,34171,34212,34202,34206,34167,34172,34185,34209,34170,34168,34135,34190,34198,34182,34189,34201,34205,34177,34210,34178,34184,34181,34169,34166,34200,34192,34207,34408,34750,34730,34733,34757,34736,34732,34745,34741,34748,34734,34761,34755,34754,34764,34743,34735,34756,34762,34740,34742,34751,34744,34749,34782,34738,35125,35123,35132,35134,35137,35154,35127,35138,35245,35247,35246,35314,35315,35614,35608,35606,35601,35589,35595,35618,35599,35602,35605,35591,35597,35592,35590,35612,35603,35610,35919,35952,35954,35953,35951,35989,35988,36089,36207,36430,36429,36435,36432,36428,36423,36675,36672,36997,36990,37176,37274,37282,37275,37273,37279,37281,37277,37280,37793,37763,37807,37732,37718,37703,37756,37720,37724,37750,37705,37712,37713,37728,37741,37775,37708,37738,37753,37719,37717,37714,37711,37745,37751,37755,37729,37726,37731,37735,37760,37710,37721,38343,38336,38345,38339,38341,38327,38574,38576,38572,38688,38687,38680,38685,38681,38810,38817,38812,38814,38813,38869,38868,38897,38977,38980,38986,38985,38981,38979,39205,39211,39212,39210,39219,39218,39215,39213,39217,39216,39320,39331,39329,39426,39418,39412,39415,39417,39416,39414,39419,39421,39422,39420,39427,39614,39678,39677,39681,39676,39752,39834,39848,39838,39835,39846,39841,39845,39844,39814,39842,39840,39855,40243,40257,40295,40246,40238,40239,40241,40248,40240,40261,40258,40259,40254,40247,40256,40253,32757,40237,40586,40585,40589,40624,40648,40666,40699,40703,40740,40739,40738,40788,40864,20785,20781,20782,22168,22172,22167,22170,22173,22169,22896,23356,23657,23658,24000,24173,24174,25048,25055,25069,25070,25073,25066,25072,25067,25046,25065,25855,25860,25853,25848,25857,25859,25852,26004,26075,26330,26331,26328,27333,27321,27325,27361,27334,27322,27318,27319,27335,27316,27309,27486,27593,27659,28679,28684,28685,28673,28677,28692,28686,28671,28672,28667,28710,28668,28663,28682,29185,29183,29177,29187,29181,29558,29880,29888,29877,29889,29886,29878,29883,29890,29972,29971,30300,30308,30297,30288,30291,30295,30298,30374,30397,30444,30658,30650,30975,30988,30995,30996,30985,30992,30994,30993,31149,31148,31327,31772,31785,31769,31776,31775,31789,31773,31782,31784,31778,31781,31792,32348,32336,32342,32355,32344,32354,32351,32337,32352,32343,32339,32693,32691,32759,32760,32885,33233,33234,33232,33375,33374,34228,34246,34240,34243,34242,34227,34229,34237,34247,34244,34239,34251,34254,34248,34245,34225,34230,34258,34340,34232,34231,34238,34409,34791,34790,34786,34779,34795,34794,34789,34783,34803,34788,34772,34780,34771,34797,34776,34787,34724,34775,34777,34817,34804,34792,34781,35155,35147,35151,35148,35142,35152,35153,35145,35626,35623,35619,35635,35632,35637,35655,35631,35644,35646,35633,35621,35639,35622,35638,35630,35620,35643,35645,35642,35906,35957,35993,35992,35991,36094,36100,36098,36096,36444,36450,36448,36439,36438,36446,36453,36455,36443,36442,36449,36445,36457,36436,36678,36679,36680,36683,37160,37178,37179,37182,37288,37285,37287,37295,37290,37813,37772,37778,37815,37787,37789,37769,37799,37774,37802,37790,37798,37781,37768,37785,37791,37773,37809,37777,37810,37796,37800,37812,37795,37797,38354,38355,38353,38579,38615,38618,24002,38623,38616,38621,38691,38690,38693,38828,38830,38824,38827,38820,38826,38818,38821,38871,38873,38870,38872,38906,38992,38993,38994,39096,39233,39228,39226,39439,39435,39433,39437,39428,39441,39434,39429,39431,39430,39616,39644,39688,39684,39685,39721,39733,39754,39756,39755,39879,39878,39875,39871,39873,39861,39864,39891,39862,39876,39865,39869,40284,40275,40271,40266,40283,40267,40281,40278,40268,40279,40274,40276,40287,40280,40282,40590,40588,40671,40705,40704,40726,40741,40747,40746,40745,40744,40780,40789,20788,20789,21142,21239,21428,22187,22189,22182,22183,22186,22188,22746,22749,22747,22802,23357,23358,23359,24003,24176,24511,25083,25863,25872,25869,25865,25868,25870,25988,26078,26077,26334,27367,27360,27340,27345,27353,27339,27359,27356,27344,27371,27343,27341,27358,27488,27568,27660,28697,28711,28704,28694,28715,28705,28706,28707,28713,28695,28708,28700,28714,29196,29194,29191,29186,29189,29349,29350,29348,29347,29345,29899,29893,29879,29891,29974,30304,30665,30666,30660,30705,31005,31003,31009,31004,30999,31006,31152,31335,31336,31795,31804,31801,31788,31803,31980,31978,32374,32373,32376,32368,32375,32367,32378,32370,32372,32360,32587,32586,32643,32646,32695,32765,32766,32888,33239,33237,33380,33377,33379,34283,34289,34285,34265,34273,34280,34266,34263,34284,34290,34296,34264,34271,34275,34268,34257,34288,34278,34287,34270,34274,34816,34810,34819,34806,34807,34825,34828,34827,34822,34812,34824,34815,34826,34818,35170,35162,35163,35159,35169,35164,35160,35165,35161,35208,35255,35254,35318,35664,35656,35658,35648,35667,35670,35668,35659,35669,35665,35650,35666,35671,35907,35959,35958,35994,36102,36103,36105,36268,36266,36269,36267,36461,36472,36467,36458,36463,36475,36546,36690,36689,36687,36688,36691,36788,37184,37183,37296,37293,37854,37831,37839,37826,37850,37840,37881,37868,37836,37849,37801,37862,37834,37844,37870,37859,37845,37828,37838,37824,37842,37863,38269,38362,38363,38625,38697,38699,38700,38696,38694,38835,38839,38838,38877,38878,38879,39004,39001,39005,38999,39103,39101,39099,39102,39240,39239,39235,39334,39335,39450,39445,39461,39453,39460,39451,39458,39456,39463,39459,39454,39452,39444,39618,39691,39690,39694,39692,39735,39914,39915,39904,39902,39908,39910,39906,39920,39892,39895,39916,39900,39897,39909,39893,39905,39898,40311,40321,40330,40324,40328,40305,40320,40312,40326,40331,40332,40317,40299,40308,40309,40304,40297,40325,40307,40315,40322,40303,40313,40319,40327,40296,40596,40593,40640,40700,40749,40768,40769,40781,40790,40791,40792,21303,22194,22197,22195,22755,23365,24006,24007,24302,24303,24512,24513,25081,25879,25878,25877,25875,26079,26344,26339,26340,27379,27376,27370,27368,27385,27377,27374,27375,28732,28725,28719,28727,28724,28721,28738,28728,28735,28730,28729,28736,28731,28723,28737,29203,29204,29352,29565,29564,29882,30379,30378,30398,30445,30668,30670,30671,30669,30706,31013,31011,31015,31016,31012,31017,31154,31342,31340,31341,31479,31817,31816,31818,31815,31813,31982,32379,32382,32385,32384,32698,32767,32889,33243,33241,33291,33384,33385,34338,34303,34305,34302,34331,34304,34294,34308,34313,34309,34316,34301,34841,34832,34833,34839,34835,34838,35171,35174,35257,35319,35680,35690,35677,35688,35683,35685,35687,35693,36270,36486,36488,36484,36697,36694,36695,36693,36696,36698,37005,37187,37185,37303,37301,37298,37299,37899,37907,37883,37920,37903,37908,37886,37909,37904,37928,37913,37901,37877,37888,37879,37895,37902,37910,37906,37882,37897,37880,37898,37887,37884,37900,37878,37905,37894,38366,38368,38367,38702,38703,38841,38843,38909,38910,39008,39010,39011,39007,39105,39106,39248,39246,39257,39244,39243,39251,39474,39476,39473,39468,39466,39478,39465,39470,39480,39469,39623,39626,39622,39696,39698,39697,39947,39944,39927,39941,39954,39928,40000,39943,39950,39942,39959,39956,39945,40351,40345,40356,40349,40338,40344,40336,40347,40352,40340,40348,40362,40343,40353,40346,40354,40360,40350,40355,40383,40361,40342,40358,40359,40601,40603,40602,40677,40676,40679,40678,40752,40750,40795,40800,40798,40797,40793,40849,20794,20793,21144,21143,22211,22205,22206,23368,23367,24011,24015,24305,25085,25883,27394,27388,27395,27384,27392,28739,28740,28746,28744,28745,28741,28742,29213,29210,29209,29566,29975,30314,30672,31021,31025,31023,31828,31827,31986,32394,32391,32392,32395,32390,32397,32589,32699,32816,33245,34328,34346,34342,34335,34339,34332,34329,34343,34350,34337,34336,34345,34334,34341,34857,34845,34843,34848,34852,34844,34859,34890,35181,35177,35182,35179,35322,35705,35704,35653,35706,35707,36112,36116,36271,36494,36492,36702,36699,36701,37190,37188,37189,37305,37951,37947,37942,37929,37949,37948,37936,37945,37930,37943,37932,37952,37937,38373,38372,38371,38709,38714,38847,38881,39012,39113,39110,39104,39256,39254,39481,39485,39494,39492,39490,39489,39482,39487,39629,39701,39703,39704,39702,39738,39762,39979,39965,39964,39980,39971,39976,39977,39972,39969,40375,40374,40380,40385,40391,40394,40399,40382,40389,40387,40379,40373,40398,40377,40378,40364,40392,40369,40365,40396,40371,40397,40370,40570,40604,40683,40686,40685,40731,40728,40730,40753,40782,40805,40804,40850,20153,22214,22213,22219,22897,23371,23372,24021,24017,24306,25889,25888,25894,25890,27403,27400,27401,27661,28757,28758,28759,28754,29214,29215,29353,29567,29912,29909,29913,29911,30317,30381,31029,31156,31344,31345,31831,31836,31833,31835,31834,31988,31985,32401,32591,32647,33246,33387,34356,34357,34355,34348,34354,34358,34860,34856,34854,34858,34853,35185,35263,35262,35323,35710,35716,35714,35718,35717,35711,36117,36501,36500,36506,36498,36496,36502,36503,36704,36706,37191,37964,37968,37962,37963,37967,37959,37957,37960,37961,37958,38719,38883,39018,39017,39115,39252,39259,39502,39507,39508,39500,39503,39496,39498,39497,39506,39504,39632,39705,39723,39739,39766,39765,40006,40008,39999,40004,39993,39987,40001,39996,39991,39988,39986,39997,39990,40411,40402,40414,40410,40395,40400,40412,40401,40415,40425,40409,40408,40406,40437,40405,40413,40630,40688,40757,40755,40754,40770,40811,40853,40866,20797,21145,22760,22759,22898,23373,24024,34863,24399,25089,25091,25092,25897,25893,26006,26347,27409,27410,27407,27594,28763,28762,29218,29570,29569,29571,30320,30676,31847,31846,32405,33388,34362,34368,34361,34364,34353,34363,34366,34864,34866,34862,34867,35190,35188,35187,35326,35724,35726,35723,35720,35909,36121,36504,36708,36707,37308,37986,37973,37981,37975,37982,38852,38853,38912,39510,39513,39710,39711,39712,40018,40024,40016,40010,40013,40011,40021,40025,40012,40014,40443,40439,40431,40419,40427,40440,40420,40438,40417,40430,40422,40434,40432,40418,40428,40436,40435,40424,40429,40642,40656,40690,40691,40710,40732,40760,40759,40758,40771,40783,40817,40816,40814,40815,22227,22221,23374,23661,25901,26349,26350,27411,28767,28769,28765,28768,29219,29915,29925,30677,31032,31159,31158,31850,32407,32649,33389,34371,34872,34871,34869,34891,35732,35733,36510,36511,36512,36509,37310,37309,37314,37995,37992,37993,38629,38726,38723,38727,38855,38885,39518,39637,39769,40035,40039,40038,40034,40030,40032,40450,40446,40455,40451,40454,40453,40448,40449,40457,40447,40445,40452,40608,40734,40774,40820,40821,40822,22228,25902,26040,27416,27417,27415,27418,28770,29222,29354,30680,30681,31033,31849,31851,31990,32410,32408,32411,32409,33248,33249,34374,34375,34376,35193,35194,35196,35195,35327,35736,35737,36517,36516,36515,37998,37997,37999,38001,38003,38729,39026,39263,40040,40046,40045,40459,40461,40464,40463,40466,40465,40609,40693,40713,40775,40824,40827,40826,40825,22302,28774,31855,34876,36274,36518,37315,38004,38008,38006,38005,39520,40052,40051,40049,40053,40468,40467,40694,40714,40868,28776,28773,31991,34410,34878,34877,34879,35742,35996,36521,36553,38731,39027,39028,39116,39265,39339,39524,39526,39527,39716,40469,40471,40776,25095,27422,29223,34380,36520,38018,38016,38017,39529,39528,39726,40473,29225,34379,35743,38019,40057,40631,30325,39531,40058,40477,28777,28778,40612,40830,40777,40856,30849,37561,35023,22715,24658,31911,23290,9556,9574,9559,9568,9580,9571,9562,9577,9565,9554,9572,9557,9566,9578,9569,9560,9575,9563,9555,9573,9558,9567,9579,9570,9561,9576,9564,9553,9552,9581,9582,9584,9583,65517,132423,37595,132575,147397,34124,17077,29679,20917,13897,149826,166372,37700,137691,33518,146632,30780,26436,25311,149811,166314,131744,158643,135941,20395,140525,20488,159017,162436,144896,150193,140563,20521,131966,24484,131968,131911,28379,132127,20605,20737,13434,20750,39020,14147,33814,149924,132231,20832,144308,20842,134143,139516,131813,140592,132494,143923,137603,23426,34685,132531,146585,20914,20920,40244,20937,20943,20945,15580,20947,150182,20915,20962,21314,20973,33741,26942,145197,24443,21003,21030,21052,21173,21079,21140,21177,21189,31765,34114,21216,34317,158483,21253,166622,21833,28377,147328,133460,147436,21299,21316,134114,27851,136998,26651,29653,24650,16042,14540,136936,29149,17570,21357,21364,165547,21374,21375,136598,136723,30694,21395,166555,21408,21419,21422,29607,153458,16217,29596,21441,21445,27721,20041,22526,21465,15019,134031,21472,147435,142755,21494,134263,21523,28793,21803,26199,27995,21613,158547,134516,21853,21647,21668,18342,136973,134877,15796,134477,166332,140952,21831,19693,21551,29719,21894,21929,22021,137431,147514,17746,148533,26291,135348,22071,26317,144010,26276,26285,22093,22095,30961,22257,38791,21502,22272,22255,22253,166758,13859,135759,22342,147877,27758,28811,22338,14001,158846,22502,136214,22531,136276,148323,22566,150517,22620,22698,13665,22752,22748,135740,22779,23551,22339,172368,148088,37843,13729,22815,26790,14019,28249,136766,23076,21843,136850,34053,22985,134478,158849,159018,137180,23001,137211,137138,159142,28017,137256,136917,23033,159301,23211,23139,14054,149929,23159,14088,23190,29797,23251,159649,140628,15749,137489,14130,136888,24195,21200,23414,25992,23420,162318,16388,18525,131588,23509,24928,137780,154060,132517,23539,23453,19728,23557,138052,23571,29646,23572,138405,158504,23625,18653,23685,23785,23791,23947,138745,138807,23824,23832,23878,138916,23738,24023,33532,14381,149761,139337,139635,33415,14390,15298,24110,27274,24181,24186,148668,134355,21414,20151,24272,21416,137073,24073,24308,164994,24313,24315,14496,24316,26686,37915,24333,131521,194708,15070,18606,135994,24378,157832,140240,24408,140401,24419,38845,159342,24434,37696,166454,24487,23990,15711,152144,139114,159992,140904,37334,131742,166441,24625,26245,137335,14691,15815,13881,22416,141236,31089,15936,24734,24740,24755,149890,149903,162387,29860,20705,23200,24932,33828,24898,194726,159442,24961,20980,132694,24967,23466,147383,141407,25043,166813,170333,25040,14642,141696,141505,24611,24924,25886,25483,131352,25285,137072,25301,142861,25452,149983,14871,25656,25592,136078,137212,25744,28554,142902,38932,147596,153373,25825,25829,38011,14950,25658,14935,25933,28438,150056,150051,25989,25965,25951,143486,26037,149824,19255,26065,16600,137257,26080,26083,24543,144384,26136,143863,143864,26180,143780,143781,26187,134773,26215,152038,26227,26228,138813,143921,165364,143816,152339,30661,141559,39332,26370,148380,150049,15147,27130,145346,26462,26471,26466,147917,168173,26583,17641,26658,28240,37436,26625,144358,159136,26717,144495,27105,27147,166623,26995,26819,144845,26881,26880,15666,14849,144956,15232,26540,26977,166474,17148,26934,27032,15265,132041,33635,20624,27129,144985,139562,27205,145155,27293,15347,26545,27336,168348,15373,27421,133411,24798,27445,27508,141261,28341,146139,132021,137560,14144,21537,146266,27617,147196,27612,27703,140427,149745,158545,27738,33318,27769,146876,17605,146877,147876,149772,149760,146633,14053,15595,134450,39811,143865,140433,32655,26679,159013,159137,159211,28054,27996,28284,28420,149887,147589,159346,34099,159604,20935,27804,28189,33838,166689,28207,146991,29779,147330,31180,28239,23185,143435,28664,14093,28573,146992,28410,136343,147517,17749,37872,28484,28508,15694,28532,168304,15675,28575,147780,28627,147601,147797,147513,147440,147380,147775,20959,147798,147799,147776,156125,28747,28798,28839,28801,28876,28885,28886,28895,16644,15848,29108,29078,148087,28971,28997,23176,29002,29038,23708,148325,29007,37730,148161,28972,148570,150055,150050,29114,166888,28861,29198,37954,29205,22801,37955,29220,37697,153093,29230,29248,149876,26813,29269,29271,15957,143428,26637,28477,29314,29482,29483,149539,165931,18669,165892,29480,29486,29647,29610,134202,158254,29641,29769,147938,136935,150052,26147,14021,149943,149901,150011,29687,29717,26883,150054,29753,132547,16087,29788,141485,29792,167602,29767,29668,29814,33721,29804,14128,29812,37873,27180,29826,18771,150156,147807,150137,166799,23366,166915,137374,29896,137608,29966,29929,29982,167641,137803,23511,167596,37765,30029,30026,30055,30062,151426,16132,150803,30094,29789,30110,30132,30210,30252,30289,30287,30319,30326,156661,30352,33263,14328,157969,157966,30369,30373,30391,30412,159647,33890,151709,151933,138780,30494,30502,30528,25775,152096,30552,144044,30639,166244,166248,136897,30708,30729,136054,150034,26826,30895,30919,30931,38565,31022,153056,30935,31028,30897,161292,36792,34948,166699,155779,140828,31110,35072,26882,31104,153687,31133,162617,31036,31145,28202,160038,16040,31174,168205,31188],"euc-kr":[44034,44035,44037,44038,44043,44044,44045,44046,44047,44056,44062,44063,44065,44066,44067,44069,44070,44071,44072,44073,44074,44075,44078,44082,44083,44084,null,null,null,null,null,null,44085,44086,44087,44090,44091,44093,44094,44095,44097,44098,44099,44100,44101,44102,44103,44104,44105,44106,44108,44110,44111,44112,44113,44114,44115,44117,null,null,null,null,null,null,44118,44119,44121,44122,44123,44125,44126,44127,44128,44129,44130,44131,44132,44133,44134,44135,44136,44137,44138,44139,44140,44141,44142,44143,44146,44147,44149,44150,44153,44155,44156,44157,44158,44159,44162,44167,44168,44173,44174,44175,44177,44178,44179,44181,44182,44183,44184,44185,44186,44187,44190,44194,44195,44196,44197,44198,44199,44203,44205,44206,44209,44210,44211,44212,44213,44214,44215,44218,44222,44223,44224,44226,44227,44229,44230,44231,44233,44234,44235,44237,44238,44239,44240,44241,44242,44243,44244,44246,44248,44249,44250,44251,44252,44253,44254,44255,44258,44259,44261,44262,44265,44267,44269,44270,44274,44276,44279,44280,44281,44282,44283,44286,44287,44289,44290,44291,44293,44295,44296,44297,44298,44299,44302,44304,44306,44307,44308,44309,44310,44311,44313,44314,44315,44317,44318,44319,44321,44322,44323,44324,44325,44326,44327,44328,44330,44331,44334,44335,44336,44337,44338,44339,null,null,null,null,null,null,44342,44343,44345,44346,44347,44349,44350,44351,44352,44353,44354,44355,44358,44360,44362,44363,44364,44365,44366,44367,44369,44370,44371,44373,44374,44375,null,null,null,null,null,null,44377,44378,44379,44380,44381,44382,44383,44384,44386,44388,44389,44390,44391,44392,44393,44394,44395,44398,44399,44401,44402,44407,44408,44409,44410,44414,44416,44419,44420,44421,44422,44423,44426,44427,44429,44430,44431,44433,44434,44435,44436,44437,44438,44439,44440,44441,44442,44443,44446,44447,44448,44449,44450,44451,44453,44454,44455,44456,44457,44458,44459,44460,44461,44462,44463,44464,44465,44466,44467,44468,44469,44470,44472,44473,44474,44475,44476,44477,44478,44479,44482,44483,44485,44486,44487,44489,44490,44491,44492,44493,44494,44495,44498,44500,44501,44502,44503,44504,44505,44506,44507,44509,44510,44511,44513,44514,44515,44517,44518,44519,44520,44521,44522,44523,44524,44525,44526,44527,44528,44529,44530,44531,44532,44533,44534,44535,44538,44539,44541,44542,44546,44547,44548,44549,44550,44551,44554,44556,44558,44559,44560,44561,44562,44563,44565,44566,44567,44568,44569,44570,44571,44572,null,null,null,null,null,null,44573,44574,44575,44576,44577,44578,44579,44580,44581,44582,44583,44584,44585,44586,44587,44588,44589,44590,44591,44594,44595,44597,44598,44601,44603,44604,null,null,null,null,null,null,44605,44606,44607,44610,44612,44615,44616,44617,44619,44623,44625,44626,44627,44629,44631,44632,44633,44634,44635,44638,44642,44643,44644,44646,44647,44650,44651,44653,44654,44655,44657,44658,44659,44660,44661,44662,44663,44666,44670,44671,44672,44673,44674,44675,44678,44679,44680,44681,44682,44683,44685,44686,44687,44688,44689,44690,44691,44692,44693,44694,44695,44696,44697,44698,44699,44700,44701,44702,44703,44704,44705,44706,44707,44708,44709,44710,44711,44712,44713,44714,44715,44716,44717,44718,44719,44720,44721,44722,44723,44724,44725,44726,44727,44728,44729,44730,44731,44735,44737,44738,44739,44741,44742,44743,44744,44745,44746,44747,44750,44754,44755,44756,44757,44758,44759,44762,44763,44765,44766,44767,44768,44769,44770,44771,44772,44773,44774,44775,44777,44778,44780,44782,44783,44784,44785,44786,44787,44789,44790,44791,44793,44794,44795,44797,44798,44799,44800,44801,44802,44803,44804,44805,null,null,null,null,null,null,44806,44809,44810,44811,44812,44814,44815,44817,44818,44819,44820,44821,44822,44823,44824,44825,44826,44827,44828,44829,44830,44831,44832,44833,44834,44835,null,null,null,null,null,null,44836,44837,44838,44839,44840,44841,44842,44843,44846,44847,44849,44851,44853,44854,44855,44856,44857,44858,44859,44862,44864,44868,44869,44870,44871,44874,44875,44876,44877,44878,44879,44881,44882,44883,44884,44885,44886,44887,44888,44889,44890,44891,44894,44895,44896,44897,44898,44899,44902,44903,44904,44905,44906,44907,44908,44909,44910,44911,44912,44913,44914,44915,44916,44917,44918,44919,44920,44922,44923,44924,44925,44926,44927,44929,44930,44931,44933,44934,44935,44937,44938,44939,44940,44941,44942,44943,44946,44947,44948,44950,44951,44952,44953,44954,44955,44957,44958,44959,44960,44961,44962,44963,44964,44965,44966,44967,44968,44969,44970,44971,44972,44973,44974,44975,44976,44977,44978,44979,44980,44981,44982,44983,44986,44987,44989,44990,44991,44993,44994,44995,44996,44997,44998,45002,45004,45007,45008,45009,45010,45011,45013,45014,45015,45016,45017,45018,45019,45021,45022,45023,45024,45025,null,null,null,null,null,null,45026,45027,45028,45029,45030,45031,45034,45035,45036,45037,45038,45039,45042,45043,45045,45046,45047,45049,45050,45051,45052,45053,45054,45055,45058,45059,null,null,null,null,null,null,45061,45062,45063,45064,45065,45066,45067,45069,45070,45071,45073,45074,45075,45077,45078,45079,45080,45081,45082,45083,45086,45087,45088,45089,45090,45091,45092,45093,45094,45095,45097,45098,45099,45100,45101,45102,45103,45104,45105,45106,45107,45108,45109,45110,45111,45112,45113,45114,45115,45116,45117,45118,45119,45120,45121,45122,45123,45126,45127,45129,45131,45133,45135,45136,45137,45138,45142,45144,45146,45147,45148,45150,45151,45152,45153,45154,45155,45156,45157,45158,45159,45160,45161,45162,45163,45164,45165,45166,45167,45168,45169,45170,45171,45172,45173,45174,45175,45176,45177,45178,45179,45182,45183,45185,45186,45187,45189,45190,45191,45192,45193,45194,45195,45198,45200,45202,45203,45204,45205,45206,45207,45211,45213,45214,45219,45220,45221,45222,45223,45226,45232,45234,45238,45239,45241,45242,45243,45245,45246,45247,45248,45249,45250,45251,45254,45258,45259,45260,45261,45262,45263,45266,null,null,null,null,null,null,45267,45269,45270,45271,45273,45274,45275,45276,45277,45278,45279,45281,45282,45283,45284,45286,45287,45288,45289,45290,45291,45292,45293,45294,45295,45296,null,null,null,null,null,null,45297,45298,45299,45300,45301,45302,45303,45304,45305,45306,45307,45308,45309,45310,45311,45312,45313,45314,45315,45316,45317,45318,45319,45322,45325,45326,45327,45329,45332,45333,45334,45335,45338,45342,45343,45344,45345,45346,45350,45351,45353,45354,45355,45357,45358,45359,45360,45361,45362,45363,45366,45370,45371,45372,45373,45374,45375,45378,45379,45381,45382,45383,45385,45386,45387,45388,45389,45390,45391,45394,45395,45398,45399,45401,45402,45403,45405,45406,45407,45409,45410,45411,45412,45413,45414,45415,45416,45417,45418,45419,45420,45421,45422,45423,45424,45425,45426,45427,45428,45429,45430,45431,45434,45435,45437,45438,45439,45441,45443,45444,45445,45446,45447,45450,45452,45454,45455,45456,45457,45461,45462,45463,45465,45466,45467,45469,45470,45471,45472,45473,45474,45475,45476,45477,45478,45479,45481,45482,45483,45484,45485,45486,45487,45488,45489,45490,45491,45492,45493,45494,45495,45496,null,null,null,null,null,null,45497,45498,45499,45500,45501,45502,45503,45504,45505,45506,45507,45508,45509,45510,45511,45512,45513,45514,45515,45517,45518,45519,45521,45522,45523,45525,null,null,null,null,null,null,45526,45527,45528,45529,45530,45531,45534,45536,45537,45538,45539,45540,45541,45542,45543,45546,45547,45549,45550,45551,45553,45554,45555,45556,45557,45558,45559,45560,45562,45564,45566,45567,45568,45569,45570,45571,45574,45575,45577,45578,45581,45582,45583,45584,45585,45586,45587,45590,45592,45594,45595,45596,45597,45598,45599,45601,45602,45603,45604,45605,45606,45607,45608,45609,45610,45611,45612,45613,45614,45615,45616,45617,45618,45619,45621,45622,45623,45624,45625,45626,45627,45629,45630,45631,45632,45633,45634,45635,45636,45637,45638,45639,45640,45641,45642,45643,45644,45645,45646,45647,45648,45649,45650,45651,45652,45653,45654,45655,45657,45658,45659,45661,45662,45663,45665,45666,45667,45668,45669,45670,45671,45674,45675,45676,45677,45678,45679,45680,45681,45682,45683,45686,45687,45688,45689,45690,45691,45693,45694,45695,45696,45697,45698,45699,45702,45703,45704,45706,45707,45708,45709,45710,null,null,null,null,null,null,45711,45714,45715,45717,45718,45719,45723,45724,45725,45726,45727,45730,45732,45735,45736,45737,45739,45741,45742,45743,45745,45746,45747,45749,45750,45751,null,null,null,null,null,null,45752,45753,45754,45755,45756,45757,45758,45759,45760,45761,45762,45763,45764,45765,45766,45767,45770,45771,45773,45774,45775,45777,45779,45780,45781,45782,45783,45786,45788,45790,45791,45792,45793,45795,45799,45801,45802,45808,45809,45810,45814,45820,45821,45822,45826,45827,45829,45830,45831,45833,45834,45835,45836,45837,45838,45839,45842,45846,45847,45848,45849,45850,45851,45853,45854,45855,45856,45857,45858,45859,45860,45861,45862,45863,45864,45865,45866,45867,45868,45869,45870,45871,45872,45873,45874,45875,45876,45877,45878,45879,45880,45881,45882,45883,45884,45885,45886,45887,45888,45889,45890,45891,45892,45893,45894,45895,45896,45897,45898,45899,45900,45901,45902,45903,45904,45905,45906,45907,45911,45913,45914,45917,45920,45921,45922,45923,45926,45928,45930,45932,45933,45935,45938,45939,45941,45942,45943,45945,45946,45947,45948,45949,45950,45951,45954,45958,45959,45960,45961,45962,45963,45965,null,null,null,null,null,null,45966,45967,45969,45970,45971,45973,45974,45975,45976,45977,45978,45979,45980,45981,45982,45983,45986,45987,45988,45989,45990,45991,45993,45994,45995,45997,null,null,null,null,null,null,45998,45999,46000,46001,46002,46003,46004,46005,46006,46007,46008,46009,46010,46011,46012,46013,46014,46015,46016,46017,46018,46019,46022,46023,46025,46026,46029,46031,46033,46034,46035,46038,46040,46042,46044,46046,46047,46049,46050,46051,46053,46054,46055,46057,46058,46059,46060,46061,46062,46063,46064,46065,46066,46067,46068,46069,46070,46071,46072,46073,46074,46075,46077,46078,46079,46080,46081,46082,46083,46084,46085,46086,46087,46088,46089,46090,46091,46092,46093,46094,46095,46097,46098,46099,46100,46101,46102,46103,46105,46106,46107,46109,46110,46111,46113,46114,46115,46116,46117,46118,46119,46122,46124,46125,46126,46127,46128,46129,46130,46131,46133,46134,46135,46136,46137,46138,46139,46140,46141,46142,46143,46144,46145,46146,46147,46148,46149,46150,46151,46152,46153,46154,46155,46156,46157,46158,46159,46162,46163,46165,46166,46167,46169,46170,46171,46172,46173,46174,46175,46178,46180,46182,null,null,null,null,null,null,46183,46184,46185,46186,46187,46189,46190,46191,46192,46193,46194,46195,46196,46197,46198,46199,46200,46201,46202,46203,46204,46205,46206,46207,46209,46210,null,null,null,null,null,null,46211,46212,46213,46214,46215,46217,46218,46219,46220,46221,46222,46223,46224,46225,46226,46227,46228,46229,46230,46231,46232,46233,46234,46235,46236,46238,46239,46240,46241,46242,46243,46245,46246,46247,46249,46250,46251,46253,46254,46255,46256,46257,46258,46259,46260,46262,46264,46266,46267,46268,46269,46270,46271,46273,46274,46275,46277,46278,46279,46281,46282,46283,46284,46285,46286,46287,46289,46290,46291,46292,46294,46295,46296,46297,46298,46299,46302,46303,46305,46306,46309,46311,46312,46313,46314,46315,46318,46320,46322,46323,46324,46325,46326,46327,46329,46330,46331,46332,46333,46334,46335,46336,46337,46338,46339,46340,46341,46342,46343,46344,46345,46346,46347,46348,46349,46350,46351,46352,46353,46354,46355,46358,46359,46361,46362,46365,46366,46367,46368,46369,46370,46371,46374,46379,46380,46381,46382,46383,46386,46387,46389,46390,46391,46393,46394,46395,46396,46397,46398,46399,46402,46406,null,null,null,null,null,null,46407,46408,46409,46410,46414,46415,46417,46418,46419,46421,46422,46423,46424,46425,46426,46427,46430,46434,46435,46436,46437,46438,46439,46440,46441,46442,null,null,null,null,null,null,46443,46444,46445,46446,46447,46448,46449,46450,46451,46452,46453,46454,46455,46456,46457,46458,46459,46460,46461,46462,46463,46464,46465,46466,46467,46468,46469,46470,46471,46472,46473,46474,46475,46476,46477,46478,46479,46480,46481,46482,46483,46484,46485,46486,46487,46488,46489,46490,46491,46492,46493,46494,46495,46498,46499,46501,46502,46503,46505,46508,46509,46510,46511,46514,46518,46519,46520,46521,46522,46526,46527,46529,46530,46531,46533,46534,46535,46536,46537,46538,46539,46542,46546,46547,46548,46549,46550,46551,46553,46554,46555,46556,46557,46558,46559,46560,46561,46562,46563,46564,46565,46566,46567,46568,46569,46570,46571,46573,46574,46575,46576,46577,46578,46579,46580,46581,46582,46583,46584,46585,46586,46587,46588,46589,46590,46591,46592,46593,46594,46595,46596,46597,46598,46599,46600,46601,46602,46603,46604,46605,46606,46607,46610,46611,46613,46614,46615,46617,46618,46619,46620,46621,null,null,null,null,null,null,46622,46623,46624,46625,46626,46627,46628,46630,46631,46632,46633,46634,46635,46637,46638,46639,46640,46641,46642,46643,46645,46646,46647,46648,46649,46650,null,null,null,null,null,null,46651,46652,46653,46654,46655,46656,46657,46658,46659,46660,46661,46662,46663,46665,46666,46667,46668,46669,46670,46671,46672,46673,46674,46675,46676,46677,46678,46679,46680,46681,46682,46683,46684,46685,46686,46687,46688,46689,46690,46691,46693,46694,46695,46697,46698,46699,46700,46701,46702,46703,46704,46705,46706,46707,46708,46709,46710,46711,46712,46713,46714,46715,46716,46717,46718,46719,46720,46721,46722,46723,46724,46725,46726,46727,46728,46729,46730,46731,46732,46733,46734,46735,46736,46737,46738,46739,46740,46741,46742,46743,46744,46745,46746,46747,46750,46751,46753,46754,46755,46757,46758,46759,46760,46761,46762,46765,46766,46767,46768,46770,46771,46772,46773,46774,46775,46776,46777,46778,46779,46780,46781,46782,46783,46784,46785,46786,46787,46788,46789,46790,46791,46792,46793,46794,46795,46796,46797,46798,46799,46800,46801,46802,46803,46805,46806,46807,46808,46809,46810,46811,46812,46813,null,null,null,null,null,null,46814,46815,46816,46817,46818,46819,46820,46821,46822,46823,46824,46825,46826,46827,46828,46829,46830,46831,46833,46834,46835,46837,46838,46839,46841,46842,null,null,null,null,null,null,46843,46844,46845,46846,46847,46850,46851,46852,46854,46855,46856,46857,46858,46859,46860,46861,46862,46863,46864,46865,46866,46867,46868,46869,46870,46871,46872,46873,46874,46875,46876,46877,46878,46879,46880,46881,46882,46883,46884,46885,46886,46887,46890,46891,46893,46894,46897,46898,46899,46900,46901,46902,46903,46906,46908,46909,46910,46911,46912,46913,46914,46915,46917,46918,46919,46921,46922,46923,46925,46926,46927,46928,46929,46930,46931,46934,46935,46936,46937,46938,46939,46940,46941,46942,46943,46945,46946,46947,46949,46950,46951,46953,46954,46955,46956,46957,46958,46959,46962,46964,46966,46967,46968,46969,46970,46971,46974,46975,46977,46978,46979,46981,46982,46983,46984,46985,46986,46987,46990,46995,46996,46997,47002,47003,47005,47006,47007,47009,47010,47011,47012,47013,47014,47015,47018,47022,47023,47024,47025,47026,47027,47030,47031,47033,47034,47035,47036,47037,47038,47039,47040,47041,null,null,null,null,null,null,47042,47043,47044,47045,47046,47048,47050,47051,47052,47053,47054,47055,47056,47057,47058,47059,47060,47061,47062,47063,47064,47065,47066,47067,47068,47069,null,null,null,null,null,null,47070,47071,47072,47073,47074,47075,47076,47077,47078,47079,47080,47081,47082,47083,47086,47087,47089,47090,47091,47093,47094,47095,47096,47097,47098,47099,47102,47106,47107,47108,47109,47110,47114,47115,47117,47118,47119,47121,47122,47123,47124,47125,47126,47127,47130,47132,47134,47135,47136,47137,47138,47139,47142,47143,47145,47146,47147,47149,47150,47151,47152,47153,47154,47155,47158,47162,47163,47164,47165,47166,47167,47169,47170,47171,47173,47174,47175,47176,47177,47178,47179,47180,47181,47182,47183,47184,47186,47188,47189,47190,47191,47192,47193,47194,47195,47198,47199,47201,47202,47203,47205,47206,47207,47208,47209,47210,47211,47214,47216,47218,47219,47220,47221,47222,47223,47225,47226,47227,47229,47230,47231,47232,47233,47234,47235,47236,47237,47238,47239,47240,47241,47242,47243,47244,47246,47247,47248,47249,47250,47251,47252,47253,47254,47255,47256,47257,47258,47259,47260,47261,47262,47263,null,null,null,null,null,null,47264,47265,47266,47267,47268,47269,47270,47271,47273,47274,47275,47276,47277,47278,47279,47281,47282,47283,47285,47286,47287,47289,47290,47291,47292,47293,null,null,null,null,null,null,47294,47295,47298,47300,47302,47303,47304,47305,47306,47307,47309,47310,47311,47313,47314,47315,47317,47318,47319,47320,47321,47322,47323,47324,47326,47328,47330,47331,47332,47333,47334,47335,47338,47339,47341,47342,47343,47345,47346,47347,47348,47349,47350,47351,47354,47356,47358,47359,47360,47361,47362,47363,47365,47366,47367,47368,47369,47370,47371,47372,47373,47374,47375,47376,47377,47378,47379,47380,47381,47382,47383,47385,47386,47387,47388,47389,47390,47391,47393,47394,47395,47396,47397,47398,47399,47400,47401,47402,47403,47404,47405,47406,47407,47408,47409,47410,47411,47412,47413,47414,47415,47416,47417,47418,47419,47422,47423,47425,47426,47427,47429,47430,47431,47432,47433,47434,47435,47437,47438,47440,47442,47443,47444,47445,47446,47447,47450,47451,47453,47454,47455,47457,47458,47459,47460,47461,47462,47463,47466,47468,47470,47471,47472,47473,47474,47475,47478,47479,47481,47482,47483,47485,null,null,null,null,null,null,47486,47487,47488,47489,47490,47491,47494,47496,47499,47500,47503,47504,47505,47506,47507,47508,47509,47510,47511,47512,47513,47514,47515,47516,47517,47518,null,null,null,null,null,null,47519,47520,47521,47522,47523,47524,47525,47526,47527,47528,47529,47530,47531,47534,47535,47537,47538,47539,47541,47542,47543,47544,47545,47546,47547,47550,47552,47554,47555,47556,47557,47558,47559,47562,47563,47565,47571,47572,47573,47574,47575,47578,47580,47583,47584,47586,47590,47591,47593,47594,47595,47597,47598,47599,47600,47601,47602,47603,47606,47611,47612,47613,47614,47615,47618,47619,47620,47621,47622,47623,47625,47626,47627,47628,47629,47630,47631,47632,47633,47634,47635,47636,47638,47639,47640,47641,47642,47643,47644,47645,47646,47647,47648,47649,47650,47651,47652,47653,47654,47655,47656,47657,47658,47659,47660,47661,47662,47663,47664,47665,47666,47667,47668,47669,47670,47671,47674,47675,47677,47678,47679,47681,47683,47684,47685,47686,47687,47690,47692,47695,47696,47697,47698,47702,47703,47705,47706,47707,47709,47710,47711,47712,47713,47714,47715,47718,47722,47723,47724,47725,47726,47727,null,null,null,null,null,null,47730,47731,47733,47734,47735,47737,47738,47739,47740,47741,47742,47743,47744,47745,47746,47750,47752,47753,47754,47755,47757,47758,47759,47760,47761,47762,null,null,null,null,null,null,47763,47764,47765,47766,47767,47768,47769,47770,47771,47772,47773,47774,47775,47776,47777,47778,47779,47780,47781,47782,47783,47786,47789,47790,47791,47793,47795,47796,47797,47798,47799,47802,47804,47806,47807,47808,47809,47810,47811,47813,47814,47815,47817,47818,47819,47820,47821,47822,47823,47824,47825,47826,47827,47828,47829,47830,47831,47834,47835,47836,47837,47838,47839,47840,47841,47842,47843,47844,47845,47846,47847,47848,47849,47850,47851,47852,47853,47854,47855,47856,47857,47858,47859,47860,47861,47862,47863,47864,47865,47866,47867,47869,47870,47871,47873,47874,47875,47877,47878,47879,47880,47881,47882,47883,47884,47886,47888,47890,47891,47892,47893,47894,47895,47897,47898,47899,47901,47902,47903,47905,47906,47907,47908,47909,47910,47911,47912,47914,47916,47917,47918,47919,47920,47921,47922,47923,47927,47929,47930,47935,47936,47937,47938,47939,47942,47944,47946,47947,47948,47950,47953,47954,null,null,null,null,null,null,47955,47957,47958,47959,47961,47962,47963,47964,47965,47966,47967,47968,47970,47972,47973,47974,47975,47976,47977,47978,47979,47981,47982,47983,47984,47985,null,null,null,null,null,null,47986,47987,47988,47989,47990,47991,47992,47993,47994,47995,47996,47997,47998,47999,48000,48001,48002,48003,48004,48005,48006,48007,48009,48010,48011,48013,48014,48015,48017,48018,48019,48020,48021,48022,48023,48024,48025,48026,48027,48028,48029,48030,48031,48032,48033,48034,48035,48037,48038,48039,48041,48042,48043,48045,48046,48047,48048,48049,48050,48051,48053,48054,48056,48057,48058,48059,48060,48061,48062,48063,48065,48066,48067,48069,48070,48071,48073,48074,48075,48076,48077,48078,48079,48081,48082,48084,48085,48086,48087,48088,48089,48090,48091,48092,48093,48094,48095,48096,48097,48098,48099,48100,48101,48102,48103,48104,48105,48106,48107,48108,48109,48110,48111,48112,48113,48114,48115,48116,48117,48118,48119,48122,48123,48125,48126,48129,48131,48132,48133,48134,48135,48138,48142,48144,48146,48147,48153,48154,48160,48161,48162,48163,48166,48168,48170,48171,48172,48174,48175,48178,48179,48181,null,null,null,null,null,null,48182,48183,48185,48186,48187,48188,48189,48190,48191,48194,48198,48199,48200,48202,48203,48206,48207,48209,48210,48211,48212,48213,48214,48215,48216,48217,null,null,null,null,null,null,48218,48219,48220,48222,48223,48224,48225,48226,48227,48228,48229,48230,48231,48232,48233,48234,48235,48236,48237,48238,48239,48240,48241,48242,48243,48244,48245,48246,48247,48248,48249,48250,48251,48252,48253,48254,48255,48256,48257,48258,48259,48262,48263,48265,48266,48269,48271,48272,48273,48274,48275,48278,48280,48283,48284,48285,48286,48287,48290,48291,48293,48294,48297,48298,48299,48300,48301,48302,48303,48306,48310,48311,48312,48313,48314,48315,48318,48319,48321,48322,48323,48325,48326,48327,48328,48329,48330,48331,48332,48334,48338,48339,48340,48342,48343,48345,48346,48347,48349,48350,48351,48352,48353,48354,48355,48356,48357,48358,48359,48360,48361,48362,48363,48364,48365,48366,48367,48368,48369,48370,48371,48375,48377,48378,48379,48381,48382,48383,48384,48385,48386,48387,48390,48392,48394,48395,48396,48397,48398,48399,48401,48402,48403,48405,48406,48407,48408,48409,48410,48411,48412,48413,null,null,null,null,null,null,48414,48415,48416,48417,48418,48419,48421,48422,48423,48424,48425,48426,48427,48429,48430,48431,48432,48433,48434,48435,48436,48437,48438,48439,48440,48441,null,null,null,null,null,null,48442,48443,48444,48445,48446,48447,48449,48450,48451,48452,48453,48454,48455,48458,48459,48461,48462,48463,48465,48466,48467,48468,48469,48470,48471,48474,48475,48476,48477,48478,48479,48480,48481,48482,48483,48485,48486,48487,48489,48490,48491,48492,48493,48494,48495,48496,48497,48498,48499,48500,48501,48502,48503,48504,48505,48506,48507,48508,48509,48510,48511,48514,48515,48517,48518,48523,48524,48525,48526,48527,48530,48532,48534,48535,48536,48539,48541,48542,48543,48544,48545,48546,48547,48549,48550,48551,48552,48553,48554,48555,48556,48557,48558,48559,48561,48562,48563,48564,48565,48566,48567,48569,48570,48571,48572,48573,48574,48575,48576,48577,48578,48579,48580,48581,48582,48583,48584,48585,48586,48587,48588,48589,48590,48591,48592,48593,48594,48595,48598,48599,48601,48602,48603,48605,48606,48607,48608,48609,48610,48611,48612,48613,48614,48615,48616,48618,48619,48620,48621,48622,48623,48625,null,null,null,null,null,null,48626,48627,48629,48630,48631,48633,48634,48635,48636,48637,48638,48639,48641,48642,48644,48646,48647,48648,48649,48650,48651,48654,48655,48657,48658,48659,null,null,null,null,null,null,48661,48662,48663,48664,48665,48666,48667,48670,48672,48673,48674,48675,48676,48677,48678,48679,48680,48681,48682,48683,48684,48685,48686,48687,48688,48689,48690,48691,48692,48693,48694,48695,48696,48697,48698,48699,48700,48701,48702,48703,48704,48705,48706,48707,48710,48711,48713,48714,48715,48717,48719,48720,48721,48722,48723,48726,48728,48732,48733,48734,48735,48738,48739,48741,48742,48743,48745,48747,48748,48749,48750,48751,48754,48758,48759,48760,48761,48762,48766,48767,48769,48770,48771,48773,48774,48775,48776,48777,48778,48779,48782,48786,48787,48788,48789,48790,48791,48794,48795,48796,48797,48798,48799,48800,48801,48802,48803,48804,48805,48806,48807,48809,48810,48811,48812,48813,48814,48815,48816,48817,48818,48819,48820,48821,48822,48823,48824,48825,48826,48827,48828,48829,48830,48831,48832,48833,48834,48835,48836,48837,48838,48839,48840,48841,48842,48843,48844,48845,48846,48847,48850,48851,null,null,null,null,null,null,48853,48854,48857,48858,48859,48860,48861,48862,48863,48865,48866,48870,48871,48872,48873,48874,48875,48877,48878,48879,48880,48881,48882,48883,48884,48885,null,null,null,null,null,null,48886,48887,48888,48889,48890,48891,48892,48893,48894,48895,48896,48898,48899,48900,48901,48902,48903,48906,48907,48908,48909,48910,48911,48912,48913,48914,48915,48916,48917,48918,48919,48922,48926,48927,48928,48929,48930,48931,48932,48933,48934,48935,48936,48937,48938,48939,48940,48941,48942,48943,48944,48945,48946,48947,48948,48949,48950,48951,48952,48953,48954,48955,48956,48957,48958,48959,48962,48963,48965,48966,48967,48969,48970,48971,48972,48973,48974,48975,48978,48979,48980,48982,48983,48984,48985,48986,48987,48988,48989,48990,48991,48992,48993,48994,48995,48996,48997,48998,48999,49000,49001,49002,49003,49004,49005,49006,49007,49008,49009,49010,49011,49012,49013,49014,49015,49016,49017,49018,49019,49020,49021,49022,49023,49024,49025,49026,49027,49028,49029,49030,49031,49032,49033,49034,49035,49036,49037,49038,49039,49040,49041,49042,49043,49045,49046,49047,49048,49049,49050,49051,49052,49053,null,null,null,null,null,null,49054,49055,49056,49057,49058,49059,49060,49061,49062,49063,49064,49065,49066,49067,49068,49069,49070,49071,49073,49074,49075,49076,49077,49078,49079,49080,null,null,null,null,null,null,49081,49082,49083,49084,49085,49086,49087,49088,49089,49090,49091,49092,49094,49095,49096,49097,49098,49099,49102,49103,49105,49106,49107,49109,49110,49111,49112,49113,49114,49115,49117,49118,49120,49122,49123,49124,49125,49126,49127,49128,49129,49130,49131,49132,49133,49134,49135,49136,49137,49138,49139,49140,49141,49142,49143,49144,49145,49146,49147,49148,49149,49150,49151,49152,49153,49154,49155,49156,49157,49158,49159,49160,49161,49162,49163,49164,49165,49166,49167,49168,49169,49170,49171,49172,49173,49174,49175,49176,49177,49178,49179,49180,49181,49182,49183,49184,49185,49186,49187,49188,49189,49190,49191,49192,49193,49194,49195,49196,49197,49198,49199,49200,49201,49202,49203,49204,49205,49206,49207,49208,49209,49210,49211,49213,49214,49215,49216,49217,49218,49219,49220,49221,49222,49223,49224,49225,49226,49227,49228,49229,49230,49231,49232,49234,49235,49236,49237,49238,49239,49241,49242,49243,null,null,null,null,null,null,49245,49246,49247,49249,49250,49251,49252,49253,49254,49255,49258,49259,49260,49261,49262,49263,49264,49265,49266,49267,49268,49269,49270,49271,49272,49273,null,null,null,null,null,null,49274,49275,49276,49277,49278,49279,49280,49281,49282,49283,49284,49285,49286,49287,49288,49289,49290,49291,49292,49293,49294,49295,49298,49299,49301,49302,49303,49305,49306,49307,49308,49309,49310,49311,49314,49316,49318,49319,49320,49321,49322,49323,49326,49329,49330,49335,49336,49337,49338,49339,49342,49346,49347,49348,49350,49351,49354,49355,49357,49358,49359,49361,49362,49363,49364,49365,49366,49367,49370,49374,49375,49376,49377,49378,49379,49382,49383,49385,49386,49387,49389,49390,49391,49392,49393,49394,49395,49398,49400,49402,49403,49404,49405,49406,49407,49409,49410,49411,49413,49414,49415,49417,49418,49419,49420,49421,49422,49423,49425,49426,49427,49428,49430,49431,49432,49433,49434,49435,49441,49442,49445,49448,49449,49450,49451,49454,49458,49459,49460,49461,49463,49466,49467,49469,49470,49471,49473,49474,49475,49476,49477,49478,49479,49482,49486,49487,49488,49489,49490,49491,49494,49495,null,null,null,null,null,null,49497,49498,49499,49501,49502,49503,49504,49505,49506,49507,49510,49514,49515,49516,49517,49518,49519,49521,49522,49523,49525,49526,49527,49529,49530,49531,null,null,null,null,null,null,49532,49533,49534,49535,49536,49537,49538,49539,49540,49542,49543,49544,49545,49546,49547,49551,49553,49554,49555,49557,49559,49560,49561,49562,49563,49566,49568,49570,49571,49572,49574,49575,49578,49579,49581,49582,49583,49585,49586,49587,49588,49589,49590,49591,49592,49593,49594,49595,49596,49598,49599,49600,49601,49602,49603,49605,49606,49607,49609,49610,49611,49613,49614,49615,49616,49617,49618,49619,49621,49622,49625,49626,49627,49628,49629,49630,49631,49633,49634,49635,49637,49638,49639,49641,49642,49643,49644,49645,49646,49647,49650,49652,49653,49654,49655,49656,49657,49658,49659,49662,49663,49665,49666,49667,49669,49670,49671,49672,49673,49674,49675,49678,49680,49682,49683,49684,49685,49686,49687,49690,49691,49693,49694,49697,49698,49699,49700,49701,49702,49703,49706,49708,49710,49712,49715,49717,49718,49719,49720,49721,49722,49723,49724,49725,49726,49727,49728,49729,49730,49731,49732,49733,null,null,null,null,null,null,49734,49735,49737,49738,49739,49740,49741,49742,49743,49746,49747,49749,49750,49751,49753,49754,49755,49756,49757,49758,49759,49761,49762,49763,49764,49766,null,null,null,null,null,null,49767,49768,49769,49770,49771,49774,49775,49777,49778,49779,49781,49782,49783,49784,49785,49786,49787,49790,49792,49794,49795,49796,49797,49798,49799,49802,49803,49804,49805,49806,49807,49809,49810,49811,49812,49813,49814,49815,49817,49818,49820,49822,49823,49824,49825,49826,49827,49830,49831,49833,49834,49835,49838,49839,49840,49841,49842,49843,49846,49848,49850,49851,49852,49853,49854,49855,49856,49857,49858,49859,49860,49861,49862,49863,49864,49865,49866,49867,49868,49869,49870,49871,49872,49873,49874,49875,49876,49877,49878,49879,49880,49881,49882,49883,49886,49887,49889,49890,49893,49894,49895,49896,49897,49898,49902,49904,49906,49907,49908,49909,49911,49914,49917,49918,49919,49921,49922,49923,49924,49925,49926,49927,49930,49931,49934,49935,49936,49937,49938,49942,49943,49945,49946,49947,49949,49950,49951,49952,49953,49954,49955,49958,49959,49962,49963,49964,49965,49966,49967,49968,49969,49970,null,null,null,null,null,null,49971,49972,49973,49974,49975,49976,49977,49978,49979,49980,49981,49982,49983,49984,49985,49986,49987,49988,49990,49991,49992,49993,49994,49995,49996,49997,null,null,null,null,null,null,49998,49999,50000,50001,50002,50003,50004,50005,50006,50007,50008,50009,50010,50011,50012,50013,50014,50015,50016,50017,50018,50019,50020,50021,50022,50023,50026,50027,50029,50030,50031,50033,50035,50036,50037,50038,50039,50042,50043,50046,50047,50048,50049,50050,50051,50053,50054,50055,50057,50058,50059,50061,50062,50063,50064,50065,50066,50067,50068,50069,50070,50071,50072,50073,50074,50075,50076,50077,50078,50079,50080,50081,50082,50083,50084,50085,50086,50087,50088,50089,50090,50091,50092,50093,50094,50095,50096,50097,50098,50099,50100,50101,50102,50103,50104,50105,50106,50107,50108,50109,50110,50111,50113,50114,50115,50116,50117,50118,50119,50120,50121,50122,50123,50124,50125,50126,50127,50128,50129,50130,50131,50132,50133,50134,50135,50138,50139,50141,50142,50145,50147,50148,50149,50150,50151,50154,50155,50156,50158,50159,50160,50161,50162,50163,50166,50167,50169,50170,50171,50172,50173,50174,null,null,null,null,null,null,50175,50176,50177,50178,50179,50180,50181,50182,50183,50185,50186,50187,50188,50189,50190,50191,50193,50194,50195,50196,50197,50198,50199,50200,50201,50202,null,null,null,null,null,null,50203,50204,50205,50206,50207,50208,50209,50210,50211,50213,50214,50215,50216,50217,50218,50219,50221,50222,50223,50225,50226,50227,50229,50230,50231,50232,50233,50234,50235,50238,50239,50240,50241,50242,50243,50244,50245,50246,50247,50249,50250,50251,50252,50253,50254,50255,50256,50257,50258,50259,50260,50261,50262,50263,50264,50265,50266,50267,50268,50269,50270,50271,50272,50273,50274,50275,50278,50279,50281,50282,50283,50285,50286,50287,50288,50289,50290,50291,50294,50295,50296,50298,50299,50300,50301,50302,50303,50305,50306,50307,50308,50309,50310,50311,50312,50313,50314,50315,50316,50317,50318,50319,50320,50321,50322,50323,50325,50326,50327,50328,50329,50330,50331,50333,50334,50335,50336,50337,50338,50339,50340,50341,50342,50343,50344,50345,50346,50347,50348,50349,50350,50351,50352,50353,50354,50355,50356,50357,50358,50359,50361,50362,50363,50365,50366,50367,50368,50369,50370,50371,50372,50373,null,null,null,null,null,null,50374,50375,50376,50377,50378,50379,50380,50381,50382,50383,50384,50385,50386,50387,50388,50389,50390,50391,50392,50393,50394,50395,50396,50397,50398,50399,null,null,null,null,null,null,50400,50401,50402,50403,50404,50405,50406,50407,50408,50410,50411,50412,50413,50414,50415,50418,50419,50421,50422,50423,50425,50427,50428,50429,50430,50434,50435,50436,50437,50438,50439,50440,50441,50442,50443,50445,50446,50447,50449,50450,50451,50453,50454,50455,50456,50457,50458,50459,50461,50462,50463,50464,50465,50466,50467,50468,50469,50470,50471,50474,50475,50477,50478,50479,50481,50482,50483,50484,50485,50486,50487,50490,50492,50494,50495,50496,50497,50498,50499,50502,50503,50507,50511,50512,50513,50514,50518,50522,50523,50524,50527,50530,50531,50533,50534,50535,50537,50538,50539,50540,50541,50542,50543,50546,50550,50551,50552,50553,50554,50555,50558,50559,50561,50562,50563,50565,50566,50568,50569,50570,50571,50574,50576,50578,50579,50580,50582,50585,50586,50587,50589,50590,50591,50593,50594,50595,50596,50597,50598,50599,50600,50602,50603,50604,50605,50606,50607,50608,50609,50610,50611,50614,null,null,null,null,null,null,50615,50618,50623,50624,50625,50626,50627,50635,50637,50639,50642,50643,50645,50646,50647,50649,50650,50651,50652,50653,50654,50655,50658,50660,50662,50663,null,null,null,null,null,null,50664,50665,50666,50667,50671,50673,50674,50675,50677,50680,50681,50682,50683,50690,50691,50692,50697,50698,50699,50701,50702,50703,50705,50706,50707,50708,50709,50710,50711,50714,50717,50718,50719,50720,50721,50722,50723,50726,50727,50729,50730,50731,50735,50737,50738,50742,50744,50746,50748,50749,50750,50751,50754,50755,50757,50758,50759,50761,50762,50763,50764,50765,50766,50767,50770,50774,50775,50776,50777,50778,50779,50782,50783,50785,50786,50787,50788,50789,50790,50791,50792,50793,50794,50795,50797,50798,50800,50802,50803,50804,50805,50806,50807,50810,50811,50813,50814,50815,50817,50818,50819,50820,50821,50822,50823,50826,50828,50830,50831,50832,50833,50834,50835,50838,50839,50841,50842,50843,50845,50846,50847,50848,50849,50850,50851,50854,50856,50858,50859,50860,50861,50862,50863,50866,50867,50869,50870,50871,50875,50876,50877,50878,50879,50882,50884,50886,50887,50888,50889,50890,50891,50894,null,null,null,null,null,null,50895,50897,50898,50899,50901,50902,50903,50904,50905,50906,50907,50910,50911,50914,50915,50916,50917,50918,50919,50922,50923,50925,50926,50927,50929,50930,null,null,null,null,null,null,50931,50932,50933,50934,50935,50938,50939,50940,50942,50943,50944,50945,50946,50947,50950,50951,50953,50954,50955,50957,50958,50959,50960,50961,50962,50963,50966,50968,50970,50971,50972,50973,50974,50975,50978,50979,50981,50982,50983,50985,50986,50987,50988,50989,50990,50991,50994,50996,50998,51000,51001,51002,51003,51006,51007,51009,51010,51011,51013,51014,51015,51016,51017,51019,51022,51024,51033,51034,51035,51037,51038,51039,51041,51042,51043,51044,51045,51046,51047,51049,51050,51052,51053,51054,51055,51056,51057,51058,51059,51062,51063,51065,51066,51067,51071,51072,51073,51074,51078,51083,51084,51085,51087,51090,51091,51093,51097,51099,51100,51101,51102,51103,51106,51111,51112,51113,51114,51115,51118,51119,51121,51122,51123,51125,51126,51127,51128,51129,51130,51131,51134,51138,51139,51140,51141,51142,51143,51146,51147,51149,51151,51153,51154,51155,51156,51157,51158,51159,51161,51162,51163,51164,null,null,null,null,null,null,51166,51167,51168,51169,51170,51171,51173,51174,51175,51177,51178,51179,51181,51182,51183,51184,51185,51186,51187,51188,51189,51190,51191,51192,51193,51194,null,null,null,null,null,null,51195,51196,51197,51198,51199,51202,51203,51205,51206,51207,51209,51211,51212,51213,51214,51215,51218,51220,51223,51224,51225,51226,51227,51230,51231,51233,51234,51235,51237,51238,51239,51240,51241,51242,51243,51246,51248,51250,51251,51252,51253,51254,51255,51257,51258,51259,51261,51262,51263,51265,51266,51267,51268,51269,51270,51271,51274,51275,51278,51279,51280,51281,51282,51283,51285,51286,51287,51288,51289,51290,51291,51292,51293,51294,51295,51296,51297,51298,51299,51300,51301,51302,51303,51304,51305,51306,51307,51308,51309,51310,51311,51314,51315,51317,51318,51319,51321,51323,51324,51325,51326,51327,51330,51332,51336,51337,51338,51342,51343,51344,51345,51346,51347,51349,51350,51351,51352,51353,51354,51355,51356,51358,51360,51362,51363,51364,51365,51366,51367,51369,51370,51371,51372,51373,51374,51375,51376,51377,51378,51379,51380,51381,51382,51383,51384,51385,51386,51387,51390,51391,51392,51393,null,null,null,null,null,null,51394,51395,51397,51398,51399,51401,51402,51403,51405,51406,51407,51408,51409,51410,51411,51414,51416,51418,51419,51420,51421,51422,51423,51426,51427,51429,null,null,null,null,null,null,51430,51431,51432,51433,51434,51435,51436,51437,51438,51439,51440,51441,51442,51443,51444,51446,51447,51448,51449,51450,51451,51454,51455,51457,51458,51459,51463,51464,51465,51466,51467,51470,12288,12289,12290,183,8229,8230,168,12291,173,8213,8741,65340,8764,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,177,215,247,8800,8804,8805,8734,8756,176,8242,8243,8451,8491,65504,65505,65509,9794,9792,8736,8869,8978,8706,8711,8801,8786,167,8251,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8594,8592,8593,8595,8596,12307,8810,8811,8730,8765,8733,8757,8747,8748,8712,8715,8838,8839,8834,8835,8746,8745,8743,8744,65506,51472,51474,51475,51476,51477,51478,51479,51481,51482,51483,51484,51485,51486,51487,51488,51489,51490,51491,51492,51493,51494,51495,51496,51497,51498,51499,null,null,null,null,null,null,51501,51502,51503,51504,51505,51506,51507,51509,51510,51511,51512,51513,51514,51515,51516,51517,51518,51519,51520,51521,51522,51523,51524,51525,51526,51527,null,null,null,null,null,null,51528,51529,51530,51531,51532,51533,51534,51535,51538,51539,51541,51542,51543,51545,51546,51547,51548,51549,51550,51551,51554,51556,51557,51558,51559,51560,51561,51562,51563,51565,51566,51567,8658,8660,8704,8707,180,65374,711,728,733,730,729,184,731,161,191,720,8750,8721,8719,164,8457,8240,9665,9664,9655,9654,9828,9824,9825,9829,9831,9827,8857,9672,9635,9680,9681,9618,9636,9637,9640,9639,9638,9641,9832,9743,9742,9756,9758,182,8224,8225,8597,8599,8601,8598,8600,9837,9833,9834,9836,12927,12828,8470,13255,8482,13250,13272,8481,8364,174,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51569,51570,51571,51573,51574,51575,51576,51577,51578,51579,51581,51582,51583,51584,51585,51586,51587,51588,51589,51590,51591,51594,51595,51597,51598,51599,null,null,null,null,null,null,51601,51602,51603,51604,51605,51606,51607,51610,51612,51614,51615,51616,51617,51618,51619,51620,51621,51622,51623,51624,51625,51626,51627,51628,51629,51630,null,null,null,null,null,null,51631,51632,51633,51634,51635,51636,51637,51638,51639,51640,51641,51642,51643,51644,51645,51646,51647,51650,51651,51653,51654,51657,51659,51660,51661,51662,51663,51666,51668,51671,51672,51675,65281,65282,65283,65284,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65510,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,51678,51679,51681,51683,51685,51686,51688,51689,51690,51691,51694,51698,51699,51700,51701,51702,51703,51706,51707,51709,51710,51711,51713,51714,51715,51716,null,null,null,null,null,null,51717,51718,51719,51722,51726,51727,51728,51729,51730,51731,51733,51734,51735,51737,51738,51739,51740,51741,51742,51743,51744,51745,51746,51747,51748,51749,null,null,null,null,null,null,51750,51751,51752,51754,51755,51756,51757,51758,51759,51760,51761,51762,51763,51764,51765,51766,51767,51768,51769,51770,51771,51772,51773,51774,51775,51776,51777,51778,51779,51780,51781,51782,12593,12594,12595,12596,12597,12598,12599,12600,12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616,12617,12618,12619,12620,12621,12622,12623,12624,12625,12626,12627,12628,12629,12630,12631,12632,12633,12634,12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646,12647,12648,12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663,12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676,12677,12678,12679,12680,12681,12682,12683,12684,12685,12686,51783,51784,51785,51786,51787,51790,51791,51793,51794,51795,51797,51798,51799,51800,51801,51802,51803,51806,51810,51811,51812,51813,51814,51815,51817,51818,null,null,null,null,null,null,51819,51820,51821,51822,51823,51824,51825,51826,51827,51828,51829,51830,51831,51832,51833,51834,51835,51836,51838,51839,51840,51841,51842,51843,51845,51846,null,null,null,null,null,null,51847,51848,51849,51850,51851,51852,51853,51854,51855,51856,51857,51858,51859,51860,51861,51862,51863,51865,51866,51867,51868,51869,51870,51871,51872,51873,51874,51875,51876,51877,51878,51879,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,null,null,null,null,null,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,51880,51881,51882,51883,51884,51885,51886,51887,51888,51889,51890,51891,51892,51893,51894,51895,51896,51897,51898,51899,51902,51903,51905,51906,51907,51909,null,null,null,null,null,null,51910,51911,51912,51913,51914,51915,51918,51920,51922,51924,51925,51926,51927,51930,51931,51932,51933,51934,51935,51937,51938,51939,51940,51941,51942,51943,null,null,null,null,null,null,51944,51945,51946,51947,51949,51950,51951,51952,51953,51954,51955,51957,51958,51959,51960,51961,51962,51963,51964,51965,51966,51967,51968,51969,51970,51971,51972,51973,51974,51975,51977,51978,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,9490,9489,9498,9497,9494,9493,9486,9485,9502,9503,9505,9506,9510,9511,9513,9514,9517,9518,9521,9522,9525,9526,9529,9530,9533,9534,9536,9537,9539,9540,9541,9542,9543,9544,9545,9546,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51979,51980,51981,51982,51983,51985,51986,51987,51989,51990,51991,51993,51994,51995,51996,51997,51998,51999,52002,52003,52004,52005,52006,52007,52008,52009,null,null,null,null,null,null,52010,52011,52012,52013,52014,52015,52016,52017,52018,52019,52020,52021,52022,52023,52024,52025,52026,52027,52028,52029,52030,52031,52032,52034,52035,52036,null,null,null,null,null,null,52037,52038,52039,52042,52043,52045,52046,52047,52049,52050,52051,52052,52053,52054,52055,52058,52059,52060,52062,52063,52064,52065,52066,52067,52069,52070,52071,52072,52073,52074,52075,52076,13205,13206,13207,8467,13208,13252,13219,13220,13221,13222,13209,13210,13211,13212,13213,13214,13215,13216,13217,13218,13258,13197,13198,13199,13263,13192,13193,13256,13223,13224,13232,13233,13234,13235,13236,13237,13238,13239,13240,13241,13184,13185,13186,13187,13188,13242,13243,13244,13245,13246,13247,13200,13201,13202,13203,13204,8486,13248,13249,13194,13195,13196,13270,13253,13229,13230,13231,13275,13225,13226,13227,13228,13277,13264,13267,13251,13257,13276,13254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52077,52078,52079,52080,52081,52082,52083,52084,52085,52086,52087,52090,52091,52092,52093,52094,52095,52096,52097,52098,52099,52100,52101,52102,52103,52104,null,null,null,null,null,null,52105,52106,52107,52108,52109,52110,52111,52112,52113,52114,52115,52116,52117,52118,52119,52120,52121,52122,52123,52125,52126,52127,52128,52129,52130,52131,null,null,null,null,null,null,52132,52133,52134,52135,52136,52137,52138,52139,52140,52141,52142,52143,52144,52145,52146,52147,52148,52149,52150,52151,52153,52154,52155,52156,52157,52158,52159,52160,52161,52162,52163,52164,198,208,170,294,null,306,null,319,321,216,338,186,222,358,330,null,12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911,12912,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12923,9424,9425,9426,9427,9428,9429,9430,9431,9432,9433,9434,9435,9436,9437,9438,9439,9440,9441,9442,9443,9444,9445,9446,9447,9448,9449,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,189,8531,8532,188,190,8539,8540,8541,8542,52165,52166,52167,52168,52169,52170,52171,52172,52173,52174,52175,52176,52177,52178,52179,52181,52182,52183,52184,52185,52186,52187,52188,52189,52190,52191,null,null,null,null,null,null,52192,52193,52194,52195,52197,52198,52200,52202,52203,52204,52205,52206,52207,52208,52209,52210,52211,52212,52213,52214,52215,52216,52217,52218,52219,52220,null,null,null,null,null,null,52221,52222,52223,52224,52225,52226,52227,52228,52229,52230,52231,52232,52233,52234,52235,52238,52239,52241,52242,52243,52245,52246,52247,52248,52249,52250,52251,52254,52255,52256,52259,52260,230,273,240,295,305,307,312,320,322,248,339,223,254,359,331,329,12800,12801,12802,12803,12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819,12820,12821,12822,12823,12824,12825,12826,12827,9372,9373,9374,9375,9376,9377,9378,9379,9380,9381,9382,9383,9384,9385,9386,9387,9388,9389,9390,9391,9392,9393,9394,9395,9396,9397,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,185,178,179,8308,8319,8321,8322,8323,8324,52261,52262,52266,52267,52269,52271,52273,52274,52275,52276,52277,52278,52279,52282,52287,52288,52289,52290,52291,52294,52295,52297,52298,52299,52301,52302,null,null,null,null,null,null,52303,52304,52305,52306,52307,52310,52314,52315,52316,52317,52318,52319,52321,52322,52323,52325,52327,52329,52330,52331,52332,52333,52334,52335,52337,52338,null,null,null,null,null,null,52339,52340,52342,52343,52344,52345,52346,52347,52348,52349,52350,52351,52352,52353,52354,52355,52356,52357,52358,52359,52360,52361,52362,52363,52364,52365,52366,52367,52368,52369,52370,52371,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,52372,52373,52374,52375,52378,52379,52381,52382,52383,52385,52386,52387,52388,52389,52390,52391,52394,52398,52399,52400,52401,52402,52403,52406,52407,52409,null,null,null,null,null,null,52410,52411,52413,52414,52415,52416,52417,52418,52419,52422,52424,52426,52427,52428,52429,52430,52431,52433,52434,52435,52437,52438,52439,52440,52441,52442,null,null,null,null,null,null,52443,52444,52445,52446,52447,52448,52449,52450,52451,52453,52454,52455,52456,52457,52458,52459,52461,52462,52463,52465,52466,52467,52468,52469,52470,52471,52472,52473,52474,52475,52476,52477,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,52478,52479,52480,52482,52483,52484,52485,52486,52487,52490,52491,52493,52494,52495,52497,52498,52499,52500,52501,52502,52503,52506,52508,52510,52511,52512,null,null,null,null,null,null,52513,52514,52515,52517,52518,52519,52521,52522,52523,52525,52526,52527,52528,52529,52530,52531,52532,52533,52534,52535,52536,52538,52539,52540,52541,52542,null,null,null,null,null,null,52543,52544,52545,52546,52547,52548,52549,52550,52551,52552,52553,52554,52555,52556,52557,52558,52559,52560,52561,52562,52563,52564,52565,52566,52567,52568,52569,52570,52571,52573,52574,52575,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,52577,52578,52579,52581,52582,52583,52584,52585,52586,52587,52590,52592,52594,52595,52596,52597,52598,52599,52601,52602,52603,52604,52605,52606,52607,52608,null,null,null,null,null,null,52609,52610,52611,52612,52613,52614,52615,52617,52618,52619,52620,52621,52622,52623,52624,52625,52626,52627,52630,52631,52633,52634,52635,52637,52638,52639,null,null,null,null,null,null,52640,52641,52642,52643,52646,52648,52650,52651,52652,52653,52654,52655,52657,52658,52659,52660,52661,52662,52663,52664,52665,52666,52667,52668,52669,52670,52671,52672,52673,52674,52675,52677,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52678,52679,52680,52681,52682,52683,52685,52686,52687,52689,52690,52691,52692,52693,52694,52695,52696,52697,52698,52699,52700,52701,52702,52703,52704,52705,null,null,null,null,null,null,52706,52707,52708,52709,52710,52711,52713,52714,52715,52717,52718,52719,52721,52722,52723,52724,52725,52726,52727,52730,52732,52734,52735,52736,52737,52738,null,null,null,null,null,null,52739,52741,52742,52743,52745,52746,52747,52749,52750,52751,52752,52753,52754,52755,52757,52758,52759,52760,52762,52763,52764,52765,52766,52767,52770,52771,52773,52774,52775,52777,52778,52779,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52780,52781,52782,52783,52786,52788,52790,52791,52792,52793,52794,52795,52796,52797,52798,52799,52800,52801,52802,52803,52804,52805,52806,52807,52808,52809,null,null,null,null,null,null,52810,52811,52812,52813,52814,52815,52816,52817,52818,52819,52820,52821,52822,52823,52826,52827,52829,52830,52834,52835,52836,52837,52838,52839,52842,52844,null,null,null,null,null,null,52846,52847,52848,52849,52850,52851,52854,52855,52857,52858,52859,52861,52862,52863,52864,52865,52866,52867,52870,52872,52874,52875,52876,52877,52878,52879,52882,52883,52885,52886,52887,52889,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52890,52891,52892,52893,52894,52895,52898,52902,52903,52904,52905,52906,52907,52910,52911,52912,52913,52914,52915,52916,52917,52918,52919,52920,52921,52922,null,null,null,null,null,null,52923,52924,52925,52926,52927,52928,52930,52931,52932,52933,52934,52935,52936,52937,52938,52939,52940,52941,52942,52943,52944,52945,52946,52947,52948,52949,null,null,null,null,null,null,52950,52951,52952,52953,52954,52955,52956,52957,52958,52959,52960,52961,52962,52963,52966,52967,52969,52970,52973,52974,52975,52976,52977,52978,52979,52982,52986,52987,52988,52989,52990,52991,44032,44033,44036,44039,44040,44041,44042,44048,44049,44050,44051,44052,44053,44054,44055,44057,44058,44059,44060,44061,44064,44068,44076,44077,44079,44080,44081,44088,44089,44092,44096,44107,44109,44116,44120,44124,44144,44145,44148,44151,44152,44154,44160,44161,44163,44164,44165,44166,44169,44170,44171,44172,44176,44180,44188,44189,44191,44192,44193,44200,44201,44202,44204,44207,44208,44216,44217,44219,44220,44221,44225,44228,44232,44236,44245,44247,44256,44257,44260,44263,44264,44266,44268,44271,44272,44273,44275,44277,44278,44284,44285,44288,44292,44294,52994,52995,52997,52998,52999,53001,53002,53003,53004,53005,53006,53007,53010,53012,53014,53015,53016,53017,53018,53019,53021,53022,53023,53025,53026,53027,null,null,null,null,null,null,53029,53030,53031,53032,53033,53034,53035,53038,53042,53043,53044,53045,53046,53047,53049,53050,53051,53052,53053,53054,53055,53056,53057,53058,53059,53060,null,null,null,null,null,null,53061,53062,53063,53064,53065,53066,53067,53068,53069,53070,53071,53072,53073,53074,53075,53078,53079,53081,53082,53083,53085,53086,53087,53088,53089,53090,53091,53094,53096,53098,53099,53100,44300,44301,44303,44305,44312,44316,44320,44329,44332,44333,44340,44341,44344,44348,44356,44357,44359,44361,44368,44372,44376,44385,44387,44396,44397,44400,44403,44404,44405,44406,44411,44412,44413,44415,44417,44418,44424,44425,44428,44432,44444,44445,44452,44471,44480,44481,44484,44488,44496,44497,44499,44508,44512,44516,44536,44537,44540,44543,44544,44545,44552,44553,44555,44557,44564,44592,44593,44596,44599,44600,44602,44608,44609,44611,44613,44614,44618,44620,44621,44622,44624,44628,44630,44636,44637,44639,44640,44641,44645,44648,44649,44652,44656,44664,53101,53102,53103,53106,53107,53109,53110,53111,53113,53114,53115,53116,53117,53118,53119,53121,53122,53123,53124,53126,53127,53128,53129,53130,53131,53133,null,null,null,null,null,null,53134,53135,53136,53137,53138,53139,53140,53141,53142,53143,53144,53145,53146,53147,53148,53149,53150,53151,53152,53154,53155,53156,53157,53158,53159,53161,null,null,null,null,null,null,53162,53163,53164,53165,53166,53167,53169,53170,53171,53172,53173,53174,53175,53176,53177,53178,53179,53180,53181,53182,53183,53184,53185,53186,53187,53189,53190,53191,53192,53193,53194,53195,44665,44667,44668,44669,44676,44677,44684,44732,44733,44734,44736,44740,44748,44749,44751,44752,44753,44760,44761,44764,44776,44779,44781,44788,44792,44796,44807,44808,44813,44816,44844,44845,44848,44850,44852,44860,44861,44863,44865,44866,44867,44872,44873,44880,44892,44893,44900,44901,44921,44928,44932,44936,44944,44945,44949,44956,44984,44985,44988,44992,44999,45000,45001,45003,45005,45006,45012,45020,45032,45033,45040,45041,45044,45048,45056,45057,45060,45068,45072,45076,45084,45085,45096,45124,45125,45128,45130,45132,45134,45139,45140,45141,45143,45145,53196,53197,53198,53199,53200,53201,53202,53203,53204,53205,53206,53207,53208,53209,53210,53211,53212,53213,53214,53215,53218,53219,53221,53222,53223,53225,null,null,null,null,null,null,53226,53227,53228,53229,53230,53231,53234,53236,53238,53239,53240,53241,53242,53243,53245,53246,53247,53249,53250,53251,53253,53254,53255,53256,53257,53258,null,null,null,null,null,null,53259,53260,53261,53262,53263,53264,53266,53267,53268,53269,53270,53271,53273,53274,53275,53276,53277,53278,53279,53280,53281,53282,53283,53284,53285,53286,53287,53288,53289,53290,53291,53292,45149,45180,45181,45184,45188,45196,45197,45199,45201,45208,45209,45210,45212,45215,45216,45217,45218,45224,45225,45227,45228,45229,45230,45231,45233,45235,45236,45237,45240,45244,45252,45253,45255,45256,45257,45264,45265,45268,45272,45280,45285,45320,45321,45323,45324,45328,45330,45331,45336,45337,45339,45340,45341,45347,45348,45349,45352,45356,45364,45365,45367,45368,45369,45376,45377,45380,45384,45392,45393,45396,45397,45400,45404,45408,45432,45433,45436,45440,45442,45448,45449,45451,45453,45458,45459,45460,45464,45468,45480,45516,45520,45524,45532,45533,53294,53295,53296,53297,53298,53299,53302,53303,53305,53306,53307,53309,53310,53311,53312,53313,53314,53315,53318,53320,53322,53323,53324,53325,53326,53327,null,null,null,null,null,null,53329,53330,53331,53333,53334,53335,53337,53338,53339,53340,53341,53342,53343,53345,53346,53347,53348,53349,53350,53351,53352,53353,53354,53355,53358,53359,null,null,null,null,null,null,53361,53362,53363,53365,53366,53367,53368,53369,53370,53371,53374,53375,53376,53378,53379,53380,53381,53382,53383,53384,53385,53386,53387,53388,53389,53390,53391,53392,53393,53394,53395,53396,45535,45544,45545,45548,45552,45561,45563,45565,45572,45573,45576,45579,45580,45588,45589,45591,45593,45600,45620,45628,45656,45660,45664,45672,45673,45684,45685,45692,45700,45701,45705,45712,45713,45716,45720,45721,45722,45728,45729,45731,45733,45734,45738,45740,45744,45748,45768,45769,45772,45776,45778,45784,45785,45787,45789,45794,45796,45797,45798,45800,45803,45804,45805,45806,45807,45811,45812,45813,45815,45816,45817,45818,45819,45823,45824,45825,45828,45832,45840,45841,45843,45844,45845,45852,45908,45909,45910,45912,45915,45916,45918,45919,45924,45925,53397,53398,53399,53400,53401,53402,53403,53404,53405,53406,53407,53408,53409,53410,53411,53414,53415,53417,53418,53419,53421,53422,53423,53424,53425,53426,null,null,null,null,null,null,53427,53430,53432,53434,53435,53436,53437,53438,53439,53442,53443,53445,53446,53447,53450,53451,53452,53453,53454,53455,53458,53462,53463,53464,53465,53466,null,null,null,null,null,null,53467,53470,53471,53473,53474,53475,53477,53478,53479,53480,53481,53482,53483,53486,53490,53491,53492,53493,53494,53495,53497,53498,53499,53500,53501,53502,53503,53504,53505,53506,53507,53508,45927,45929,45931,45934,45936,45937,45940,45944,45952,45953,45955,45956,45957,45964,45968,45972,45984,45985,45992,45996,46020,46021,46024,46027,46028,46030,46032,46036,46037,46039,46041,46043,46045,46048,46052,46056,46076,46096,46104,46108,46112,46120,46121,46123,46132,46160,46161,46164,46168,46176,46177,46179,46181,46188,46208,46216,46237,46244,46248,46252,46261,46263,46265,46272,46276,46280,46288,46293,46300,46301,46304,46307,46308,46310,46316,46317,46319,46321,46328,46356,46357,46360,46363,46364,46372,46373,46375,46376,46377,46378,46384,46385,46388,46392,53509,53510,53511,53512,53513,53514,53515,53516,53518,53519,53520,53521,53522,53523,53524,53525,53526,53527,53528,53529,53530,53531,53532,53533,53534,53535,null,null,null,null,null,null,53536,53537,53538,53539,53540,53541,53542,53543,53544,53545,53546,53547,53548,53549,53550,53551,53554,53555,53557,53558,53559,53561,53563,53564,53565,53566,null,null,null,null,null,null,53567,53570,53574,53575,53576,53577,53578,53579,53582,53583,53585,53586,53587,53589,53590,53591,53592,53593,53594,53595,53598,53600,53602,53603,53604,53605,53606,53607,53609,53610,53611,53613,46400,46401,46403,46404,46405,46411,46412,46413,46416,46420,46428,46429,46431,46432,46433,46496,46497,46500,46504,46506,46507,46512,46513,46515,46516,46517,46523,46524,46525,46528,46532,46540,46541,46543,46544,46545,46552,46572,46608,46609,46612,46616,46629,46636,46644,46664,46692,46696,46748,46749,46752,46756,46763,46764,46769,46804,46832,46836,46840,46848,46849,46853,46888,46889,46892,46895,46896,46904,46905,46907,46916,46920,46924,46932,46933,46944,46948,46952,46960,46961,46963,46965,46972,46973,46976,46980,46988,46989,46991,46992,46993,46994,46998,46999,53614,53615,53616,53617,53618,53619,53620,53621,53622,53623,53624,53625,53626,53627,53629,53630,53631,53632,53633,53634,53635,53637,53638,53639,53641,53642,null,null,null,null,null,null,53643,53644,53645,53646,53647,53648,53649,53650,53651,53652,53653,53654,53655,53656,53657,53658,53659,53660,53661,53662,53663,53666,53667,53669,53670,53671,null,null,null,null,null,null,53673,53674,53675,53676,53677,53678,53679,53682,53684,53686,53687,53688,53689,53691,53693,53694,53695,53697,53698,53699,53700,53701,53702,53703,53704,53705,53706,53707,53708,53709,53710,53711,47000,47001,47004,47008,47016,47017,47019,47020,47021,47028,47029,47032,47047,47049,47084,47085,47088,47092,47100,47101,47103,47104,47105,47111,47112,47113,47116,47120,47128,47129,47131,47133,47140,47141,47144,47148,47156,47157,47159,47160,47161,47168,47172,47185,47187,47196,47197,47200,47204,47212,47213,47215,47217,47224,47228,47245,47272,47280,47284,47288,47296,47297,47299,47301,47308,47312,47316,47325,47327,47329,47336,47337,47340,47344,47352,47353,47355,47357,47364,47384,47392,47420,47421,47424,47428,47436,47439,47441,47448,47449,47452,47456,47464,47465,53712,53713,53714,53715,53716,53717,53718,53719,53721,53722,53723,53724,53725,53726,53727,53728,53729,53730,53731,53732,53733,53734,53735,53736,53737,53738,null,null,null,null,null,null,53739,53740,53741,53742,53743,53744,53745,53746,53747,53749,53750,53751,53753,53754,53755,53756,53757,53758,53759,53760,53761,53762,53763,53764,53765,53766,null,null,null,null,null,null,53768,53770,53771,53772,53773,53774,53775,53777,53778,53779,53780,53781,53782,53783,53784,53785,53786,53787,53788,53789,53790,53791,53792,53793,53794,53795,53796,53797,53798,53799,53800,53801,47467,47469,47476,47477,47480,47484,47492,47493,47495,47497,47498,47501,47502,47532,47533,47536,47540,47548,47549,47551,47553,47560,47561,47564,47566,47567,47568,47569,47570,47576,47577,47579,47581,47582,47585,47587,47588,47589,47592,47596,47604,47605,47607,47608,47609,47610,47616,47617,47624,47637,47672,47673,47676,47680,47682,47688,47689,47691,47693,47694,47699,47700,47701,47704,47708,47716,47717,47719,47720,47721,47728,47729,47732,47736,47747,47748,47749,47751,47756,47784,47785,47787,47788,47792,47794,47800,47801,47803,47805,47812,47816,47832,47833,47868,53802,53803,53806,53807,53809,53810,53811,53813,53814,53815,53816,53817,53818,53819,53822,53824,53826,53827,53828,53829,53830,53831,53833,53834,53835,53836,null,null,null,null,null,null,53837,53838,53839,53840,53841,53842,53843,53844,53845,53846,53847,53848,53849,53850,53851,53853,53854,53855,53856,53857,53858,53859,53861,53862,53863,53864,null,null,null,null,null,null,53865,53866,53867,53868,53869,53870,53871,53872,53873,53874,53875,53876,53877,53878,53879,53880,53881,53882,53883,53884,53885,53886,53887,53890,53891,53893,53894,53895,53897,53898,53899,53900,47872,47876,47885,47887,47889,47896,47900,47904,47913,47915,47924,47925,47926,47928,47931,47932,47933,47934,47940,47941,47943,47945,47949,47951,47952,47956,47960,47969,47971,47980,48008,48012,48016,48036,48040,48044,48052,48055,48064,48068,48072,48080,48083,48120,48121,48124,48127,48128,48130,48136,48137,48139,48140,48141,48143,48145,48148,48149,48150,48151,48152,48155,48156,48157,48158,48159,48164,48165,48167,48169,48173,48176,48177,48180,48184,48192,48193,48195,48196,48197,48201,48204,48205,48208,48221,48260,48261,48264,48267,48268,48270,48276,48277,48279,53901,53902,53903,53906,53907,53908,53910,53911,53912,53913,53914,53915,53917,53918,53919,53921,53922,53923,53925,53926,53927,53928,53929,53930,53931,53933,null,null,null,null,null,null,53934,53935,53936,53938,53939,53940,53941,53942,53943,53946,53947,53949,53950,53953,53955,53956,53957,53958,53959,53962,53964,53965,53966,53967,53968,53969,null,null,null,null,null,null,53970,53971,53973,53974,53975,53977,53978,53979,53981,53982,53983,53984,53985,53986,53987,53990,53991,53992,53993,53994,53995,53996,53997,53998,53999,54002,54003,54005,54006,54007,54009,54010,48281,48282,48288,48289,48292,48295,48296,48304,48305,48307,48308,48309,48316,48317,48320,48324,48333,48335,48336,48337,48341,48344,48348,48372,48373,48374,48376,48380,48388,48389,48391,48393,48400,48404,48420,48428,48448,48456,48457,48460,48464,48472,48473,48484,48488,48512,48513,48516,48519,48520,48521,48522,48528,48529,48531,48533,48537,48538,48540,48548,48560,48568,48596,48597,48600,48604,48617,48624,48628,48632,48640,48643,48645,48652,48653,48656,48660,48668,48669,48671,48708,48709,48712,48716,48718,48724,48725,48727,48729,48730,48731,48736,48737,48740,54011,54012,54013,54014,54015,54018,54020,54022,54023,54024,54025,54026,54027,54031,54033,54034,54035,54037,54039,54040,54041,54042,54043,54046,54050,54051,null,null,null,null,null,null,54052,54054,54055,54058,54059,54061,54062,54063,54065,54066,54067,54068,54069,54070,54071,54074,54078,54079,54080,54081,54082,54083,54086,54087,54088,54089,null,null,null,null,null,null,54090,54091,54092,54093,54094,54095,54096,54097,54098,54099,54100,54101,54102,54103,54104,54105,54106,54107,54108,54109,54110,54111,54112,54113,54114,54115,54116,54117,54118,54119,54120,54121,48744,48746,48752,48753,48755,48756,48757,48763,48764,48765,48768,48772,48780,48781,48783,48784,48785,48792,48793,48808,48848,48849,48852,48855,48856,48864,48867,48868,48869,48876,48897,48904,48905,48920,48921,48923,48924,48925,48960,48961,48964,48968,48976,48977,48981,49044,49072,49093,49100,49101,49104,49108,49116,49119,49121,49212,49233,49240,49244,49248,49256,49257,49296,49297,49300,49304,49312,49313,49315,49317,49324,49325,49327,49328,49331,49332,49333,49334,49340,49341,49343,49344,49345,49349,49352,49353,49356,49360,49368,49369,49371,49372,49373,49380,54122,54123,54124,54125,54126,54127,54128,54129,54130,54131,54132,54133,54134,54135,54136,54137,54138,54139,54142,54143,54145,54146,54147,54149,54150,54151,null,null,null,null,null,null,54152,54153,54154,54155,54158,54162,54163,54164,54165,54166,54167,54170,54171,54173,54174,54175,54177,54178,54179,54180,54181,54182,54183,54186,54188,54190,null,null,null,null,null,null,54191,54192,54193,54194,54195,54197,54198,54199,54201,54202,54203,54205,54206,54207,54208,54209,54210,54211,54214,54215,54218,54219,54220,54221,54222,54223,54225,54226,54227,54228,54229,54230,49381,49384,49388,49396,49397,49399,49401,49408,49412,49416,49424,49429,49436,49437,49438,49439,49440,49443,49444,49446,49447,49452,49453,49455,49456,49457,49462,49464,49465,49468,49472,49480,49481,49483,49484,49485,49492,49493,49496,49500,49508,49509,49511,49512,49513,49520,49524,49528,49541,49548,49549,49550,49552,49556,49558,49564,49565,49567,49569,49573,49576,49577,49580,49584,49597,49604,49608,49612,49620,49623,49624,49632,49636,49640,49648,49649,49651,49660,49661,49664,49668,49676,49677,49679,49681,49688,49689,49692,49695,49696,49704,49705,49707,49709,54231,54233,54234,54235,54236,54237,54238,54239,54240,54242,54244,54245,54246,54247,54248,54249,54250,54251,54254,54255,54257,54258,54259,54261,54262,54263,null,null,null,null,null,null,54264,54265,54266,54267,54270,54272,54274,54275,54276,54277,54278,54279,54281,54282,54283,54284,54285,54286,54287,54288,54289,54290,54291,54292,54293,54294,null,null,null,null,null,null,54295,54296,54297,54298,54299,54300,54302,54303,54304,54305,54306,54307,54308,54309,54310,54311,54312,54313,54314,54315,54316,54317,54318,54319,54320,54321,54322,54323,54324,54325,54326,54327,49711,49713,49714,49716,49736,49744,49745,49748,49752,49760,49765,49772,49773,49776,49780,49788,49789,49791,49793,49800,49801,49808,49816,49819,49821,49828,49829,49832,49836,49837,49844,49845,49847,49849,49884,49885,49888,49891,49892,49899,49900,49901,49903,49905,49910,49912,49913,49915,49916,49920,49928,49929,49932,49933,49939,49940,49941,49944,49948,49956,49957,49960,49961,49989,50024,50025,50028,50032,50034,50040,50041,50044,50045,50052,50056,50060,50112,50136,50137,50140,50143,50144,50146,50152,50153,50157,50164,50165,50168,50184,50192,50212,50220,50224,54328,54329,54330,54331,54332,54333,54334,54335,54337,54338,54339,54341,54342,54343,54344,54345,54346,54347,54348,54349,54350,54351,54352,54353,54354,54355,null,null,null,null,null,null,54356,54357,54358,54359,54360,54361,54362,54363,54365,54366,54367,54369,54370,54371,54373,54374,54375,54376,54377,54378,54379,54380,54382,54384,54385,54386,null,null,null,null,null,null,54387,54388,54389,54390,54391,54394,54395,54397,54398,54401,54403,54404,54405,54406,54407,54410,54412,54414,54415,54416,54417,54418,54419,54421,54422,54423,54424,54425,54426,54427,54428,54429,50228,50236,50237,50248,50276,50277,50280,50284,50292,50293,50297,50304,50324,50332,50360,50364,50409,50416,50417,50420,50424,50426,50431,50432,50433,50444,50448,50452,50460,50472,50473,50476,50480,50488,50489,50491,50493,50500,50501,50504,50505,50506,50508,50509,50510,50515,50516,50517,50519,50520,50521,50525,50526,50528,50529,50532,50536,50544,50545,50547,50548,50549,50556,50557,50560,50564,50567,50572,50573,50575,50577,50581,50583,50584,50588,50592,50601,50612,50613,50616,50617,50619,50620,50621,50622,50628,50629,50630,50631,50632,50633,50634,50636,50638,54430,54431,54432,54433,54434,54435,54436,54437,54438,54439,54440,54442,54443,54444,54445,54446,54447,54448,54449,54450,54451,54452,54453,54454,54455,54456,null,null,null,null,null,null,54457,54458,54459,54460,54461,54462,54463,54464,54465,54466,54467,54468,54469,54470,54471,54472,54473,54474,54475,54477,54478,54479,54481,54482,54483,54485,null,null,null,null,null,null,54486,54487,54488,54489,54490,54491,54493,54494,54496,54497,54498,54499,54500,54501,54502,54503,54505,54506,54507,54509,54510,54511,54513,54514,54515,54516,54517,54518,54519,54521,54522,54524,50640,50641,50644,50648,50656,50657,50659,50661,50668,50669,50670,50672,50676,50678,50679,50684,50685,50686,50687,50688,50689,50693,50694,50695,50696,50700,50704,50712,50713,50715,50716,50724,50725,50728,50732,50733,50734,50736,50739,50740,50741,50743,50745,50747,50752,50753,50756,50760,50768,50769,50771,50772,50773,50780,50781,50784,50796,50799,50801,50808,50809,50812,50816,50824,50825,50827,50829,50836,50837,50840,50844,50852,50853,50855,50857,50864,50865,50868,50872,50873,50874,50880,50881,50883,50885,50892,50893,50896,50900,50908,50909,50912,50913,50920,54526,54527,54528,54529,54530,54531,54533,54534,54535,54537,54538,54539,54541,54542,54543,54544,54545,54546,54547,54550,54552,54553,54554,54555,54556,54557,null,null,null,null,null,null,54558,54559,54560,54561,54562,54563,54564,54565,54566,54567,54568,54569,54570,54571,54572,54573,54574,54575,54576,54577,54578,54579,54580,54581,54582,54583,null,null,null,null,null,null,54584,54585,54586,54587,54590,54591,54593,54594,54595,54597,54598,54599,54600,54601,54602,54603,54606,54608,54610,54611,54612,54613,54614,54615,54618,54619,54621,54622,54623,54625,54626,54627,50921,50924,50928,50936,50937,50941,50948,50949,50952,50956,50964,50965,50967,50969,50976,50977,50980,50984,50992,50993,50995,50997,50999,51004,51005,51008,51012,51018,51020,51021,51023,51025,51026,51027,51028,51029,51030,51031,51032,51036,51040,51048,51051,51060,51061,51064,51068,51069,51070,51075,51076,51077,51079,51080,51081,51082,51086,51088,51089,51092,51094,51095,51096,51098,51104,51105,51107,51108,51109,51110,51116,51117,51120,51124,51132,51133,51135,51136,51137,51144,51145,51148,51150,51152,51160,51165,51172,51176,51180,51200,51201,51204,51208,51210,54628,54630,54631,54634,54636,54638,54639,54640,54641,54642,54643,54646,54647,54649,54650,54651,54653,54654,54655,54656,54657,54658,54659,54662,54666,54667,null,null,null,null,null,null,54668,54669,54670,54671,54673,54674,54675,54676,54677,54678,54679,54680,54681,54682,54683,54684,54685,54686,54687,54688,54689,54690,54691,54692,54694,54695,null,null,null,null,null,null,54696,54697,54698,54699,54700,54701,54702,54703,54704,54705,54706,54707,54708,54709,54710,54711,54712,54713,54714,54715,54716,54717,54718,54719,54720,54721,54722,54723,54724,54725,54726,54727,51216,51217,51219,51221,51222,51228,51229,51232,51236,51244,51245,51247,51249,51256,51260,51264,51272,51273,51276,51277,51284,51312,51313,51316,51320,51322,51328,51329,51331,51333,51334,51335,51339,51340,51341,51348,51357,51359,51361,51368,51388,51389,51396,51400,51404,51412,51413,51415,51417,51424,51425,51428,51445,51452,51453,51456,51460,51461,51462,51468,51469,51471,51473,51480,51500,51508,51536,51537,51540,51544,51552,51553,51555,51564,51568,51572,51580,51592,51593,51596,51600,51608,51609,51611,51613,51648,51649,51652,51655,51656,51658,51664,51665,51667,54730,54731,54733,54734,54735,54737,54739,54740,54741,54742,54743,54746,54748,54750,54751,54752,54753,54754,54755,54758,54759,54761,54762,54763,54765,54766,null,null,null,null,null,null,54767,54768,54769,54770,54771,54774,54776,54778,54779,54780,54781,54782,54783,54786,54787,54789,54790,54791,54793,54794,54795,54796,54797,54798,54799,54802,null,null,null,null,null,null,54806,54807,54808,54809,54810,54811,54813,54814,54815,54817,54818,54819,54821,54822,54823,54824,54825,54826,54827,54828,54830,54831,54832,54833,54834,54835,54836,54837,54838,54839,54842,54843,51669,51670,51673,51674,51676,51677,51680,51682,51684,51687,51692,51693,51695,51696,51697,51704,51705,51708,51712,51720,51721,51723,51724,51725,51732,51736,51753,51788,51789,51792,51796,51804,51805,51807,51808,51809,51816,51837,51844,51864,51900,51901,51904,51908,51916,51917,51919,51921,51923,51928,51929,51936,51948,51956,51976,51984,51988,51992,52000,52001,52033,52040,52041,52044,52048,52056,52057,52061,52068,52088,52089,52124,52152,52180,52196,52199,52201,52236,52237,52240,52244,52252,52253,52257,52258,52263,52264,52265,52268,52270,52272,52280,52281,52283,54845,54846,54847,54849,54850,54851,54852,54854,54855,54858,54860,54862,54863,54864,54866,54867,54870,54871,54873,54874,54875,54877,54878,54879,54880,54881,null,null,null,null,null,null,54882,54883,54884,54885,54886,54888,54890,54891,54892,54893,54894,54895,54898,54899,54901,54902,54903,54904,54905,54906,54907,54908,54909,54910,54911,54912,null,null,null,null,null,null,54913,54914,54916,54918,54919,54920,54921,54922,54923,54926,54927,54929,54930,54931,54933,54934,54935,54936,54937,54938,54939,54940,54942,54944,54946,54947,54948,54949,54950,54951,54953,54954,52284,52285,52286,52292,52293,52296,52300,52308,52309,52311,52312,52313,52320,52324,52326,52328,52336,52341,52376,52377,52380,52384,52392,52393,52395,52396,52397,52404,52405,52408,52412,52420,52421,52423,52425,52432,52436,52452,52460,52464,52481,52488,52489,52492,52496,52504,52505,52507,52509,52516,52520,52524,52537,52572,52576,52580,52588,52589,52591,52593,52600,52616,52628,52629,52632,52636,52644,52645,52647,52649,52656,52676,52684,52688,52712,52716,52720,52728,52729,52731,52733,52740,52744,52748,52756,52761,52768,52769,52772,52776,52784,52785,52787,52789,54955,54957,54958,54959,54961,54962,54963,54964,54965,54966,54967,54968,54970,54972,54973,54974,54975,54976,54977,54978,54979,54982,54983,54985,54986,54987,null,null,null,null,null,null,54989,54990,54991,54992,54994,54995,54997,54998,55000,55002,55003,55004,55005,55006,55007,55009,55010,55011,55013,55014,55015,55017,55018,55019,55020,55021,null,null,null,null,null,null,55022,55023,55025,55026,55027,55028,55030,55031,55032,55033,55034,55035,55038,55039,55041,55042,55043,55045,55046,55047,55048,55049,55050,55051,55052,55053,55054,55055,55056,55058,55059,55060,52824,52825,52828,52831,52832,52833,52840,52841,52843,52845,52852,52853,52856,52860,52868,52869,52871,52873,52880,52881,52884,52888,52896,52897,52899,52900,52901,52908,52909,52929,52964,52965,52968,52971,52972,52980,52981,52983,52984,52985,52992,52993,52996,53000,53008,53009,53011,53013,53020,53024,53028,53036,53037,53039,53040,53041,53048,53076,53077,53080,53084,53092,53093,53095,53097,53104,53105,53108,53112,53120,53125,53132,53153,53160,53168,53188,53216,53217,53220,53224,53232,53233,53235,53237,53244,53248,53252,53265,53272,53293,53300,53301,53304,53308,55061,55062,55063,55066,55067,55069,55070,55071,55073,55074,55075,55076,55077,55078,55079,55082,55084,55086,55087,55088,55089,55090,55091,55094,55095,55097,null,null,null,null,null,null,55098,55099,55101,55102,55103,55104,55105,55106,55107,55109,55110,55112,55114,55115,55116,55117,55118,55119,55122,55123,55125,55130,55131,55132,55133,55134,null,null,null,null,null,null,55135,55138,55140,55142,55143,55144,55146,55147,55149,55150,55151,55153,55154,55155,55157,55158,55159,55160,55161,55162,55163,55166,55167,55168,55170,55171,55172,55173,55174,55175,55178,55179,53316,53317,53319,53321,53328,53332,53336,53344,53356,53357,53360,53364,53372,53373,53377,53412,53413,53416,53420,53428,53429,53431,53433,53440,53441,53444,53448,53449,53456,53457,53459,53460,53461,53468,53469,53472,53476,53484,53485,53487,53488,53489,53496,53517,53552,53553,53556,53560,53562,53568,53569,53571,53572,53573,53580,53581,53584,53588,53596,53597,53599,53601,53608,53612,53628,53636,53640,53664,53665,53668,53672,53680,53681,53683,53685,53690,53692,53696,53720,53748,53752,53767,53769,53776,53804,53805,53808,53812,53820,53821,53823,53825,53832,53852,55181,55182,55183,55185,55186,55187,55188,55189,55190,55191,55194,55196,55198,55199,55200,55201,55202,55203,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,53860,53888,53889,53892,53896,53904,53905,53909,53916,53920,53924,53932,53937,53944,53945,53948,53951,53952,53954,53960,53961,53963,53972,53976,53980,53988,53989,54000,54001,54004,54008,54016,54017,54019,54021,54028,54029,54030,54032,54036,54038,54044,54045,54047,54048,54049,54053,54056,54057,54060,54064,54072,54073,54075,54076,54077,54084,54085,54140,54141,54144,54148,54156,54157,54159,54160,54161,54168,54169,54172,54176,54184,54185,54187,54189,54196,54200,54204,54212,54213,54216,54217,54224,54232,54241,54243,54252,54253,54256,54260,54268,54269,54271,54273,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54280,54301,54336,54340,54364,54368,54372,54381,54383,54392,54393,54396,54399,54400,54402,54408,54409,54411,54413,54420,54441,54476,54480,54484,54492,54495,54504,54508,54512,54520,54523,54525,54532,54536,54540,54548,54549,54551,54588,54589,54592,54596,54604,54605,54607,54609,54616,54617,54620,54624,54629,54632,54633,54635,54637,54644,54645,54648,54652,54660,54661,54663,54664,54665,54672,54693,54728,54729,54732,54736,54738,54744,54745,54747,54749,54756,54757,54760,54764,54772,54773,54775,54777,54784,54785,54788,54792,54800,54801,54803,54804,54805,54812,54816,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54820,54829,54840,54841,54844,54848,54853,54856,54857,54859,54861,54865,54868,54869,54872,54876,54887,54889,54896,54897,54900,54915,54917,54924,54925,54928,54932,54941,54943,54945,54952,54956,54960,54969,54971,54980,54981,54984,54988,54993,54996,54999,55001,55008,55012,55016,55024,55029,55036,55037,55040,55044,55057,55064,55065,55068,55072,55080,55081,55083,55085,55092,55093,55096,55100,55108,55111,55113,55120,55121,55124,55126,55127,55128,55129,55136,55137,55139,55141,55145,55148,55152,55156,55164,55165,55169,55176,55177,55180,55184,55192,55193,55195,55197,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20285,20339,20551,20729,21152,21487,21621,21733,22025,23233,23478,26247,26550,26551,26607,27468,29634,30146,31292,33499,33540,34903,34952,35382,36040,36303,36603,36838,39381,21051,21364,21508,24682,24932,27580,29647,33050,35258,35282,38307,20355,21002,22718,22904,23014,24178,24185,25031,25536,26438,26604,26751,28567,30286,30475,30965,31240,31487,31777,32925,33390,33393,35563,38291,20075,21917,26359,28212,30883,31469,33883,35088,34638,38824,21208,22350,22570,23884,24863,25022,25121,25954,26577,27204,28187,29976,30131,30435,30640,32058,37039,37969,37970,40853,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21283,23724,30002,32987,37440,38296,21083,22536,23004,23713,23831,24247,24378,24394,24951,27743,30074,30086,31968,32115,32177,32652,33108,33313,34193,35137,35611,37628,38477,40007,20171,20215,20491,20977,22607,24887,24894,24936,25913,27114,28433,30117,30342,30422,31623,33445,33995,63744,37799,38283,21888,23458,22353,63745,31923,32697,37301,20520,21435,23621,24040,25298,25454,25818,25831,28192,28844,31067,36317,36382,63746,36989,37445,37624,20094,20214,20581,24062,24314,24838,26967,33137,34388,36423,37749,39467,20062,20625,26480,26688,20745,21133,21138,27298,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30652,37392,40660,21163,24623,36850,20552,25001,25581,25802,26684,27268,28608,33160,35233,38548,22533,29309,29356,29956,32121,32365,32937,35211,35700,36963,40273,25225,27770,28500,32080,32570,35363,20860,24906,31645,35609,37463,37772,20140,20435,20510,20670,20742,21185,21197,21375,22384,22659,24218,24465,24950,25004,25806,25964,26223,26299,26356,26775,28039,28805,28913,29855,29861,29898,30169,30828,30956,31455,31478,32069,32147,32789,32831,33051,33686,35686,36629,36885,37857,38915,38968,39514,39912,20418,21843,22586,22865,23395,23622,24760,25106,26690,26800,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26856,28330,30028,30328,30926,31293,31995,32363,32380,35336,35489,35903,38542,40388,21476,21481,21578,21617,22266,22993,23396,23611,24235,25335,25911,25925,25970,26272,26543,27073,27837,30204,30352,30590,31295,32660,32771,32929,33167,33510,33533,33776,34241,34865,34996,35493,63747,36764,37678,38599,39015,39640,40723,21741,26011,26354,26767,31296,35895,40288,22256,22372,23825,26118,26801,26829,28414,29736,34974,39908,27752,63748,39592,20379,20844,20849,21151,23380,24037,24656,24685,25329,25511,25915,29657,31354,34467,36002,38799,20018,23521,25096,26524,29916,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31185,33747,35463,35506,36328,36942,37707,38982,24275,27112,34303,37101,63749,20896,23448,23532,24931,26874,27454,28748,29743,29912,31649,32592,33733,35264,36011,38364,39208,21038,24669,25324,36866,20362,20809,21281,22745,24291,26336,27960,28826,29378,29654,31568,33009,37979,21350,25499,32619,20054,20608,22602,22750,24618,24871,25296,27088,39745,23439,32024,32945,36703,20132,20689,21676,21932,23308,23968,24039,25898,25934,26657,27211,29409,30350,30703,32094,32761,33184,34126,34527,36611,36686,37066,39171,39509,39851,19992,20037,20061,20167,20465,20855,21246,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21312,21475,21477,21646,22036,22389,22434,23495,23943,24272,25084,25304,25937,26552,26601,27083,27472,27590,27628,27714,28317,28792,29399,29590,29699,30655,30697,31350,32127,32777,33276,33285,33290,33503,34914,35635,36092,36544,36881,37041,37476,37558,39378,39493,40169,40407,40860,22283,23616,33738,38816,38827,40628,21531,31384,32676,35033,36557,37089,22528,23624,25496,31391,23470,24339,31353,31406,33422,36524,20518,21048,21240,21367,22280,25331,25458,27402,28099,30519,21413,29527,34152,36470,38357,26426,27331,28528,35437,36556,39243,63750,26231,27512,36020,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,39740,63751,21483,22317,22862,25542,27131,29674,30789,31418,31429,31998,33909,35215,36211,36917,38312,21243,22343,30023,31584,33740,37406,63752,27224,20811,21067,21127,25119,26840,26997,38553,20677,21156,21220,25027,26020,26681,27135,29822,31563,33465,33771,35250,35641,36817,39241,63753,20170,22935,25810,26129,27278,29748,31105,31165,33449,34942,34943,35167,63754,37670,20235,21450,24613,25201,27762,32026,32102,20120,20834,30684,32943,20225,20238,20854,20864,21980,22120,22331,22522,22524,22804,22855,22931,23492,23696,23822,24049,24190,24524,25216,26071,26083,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26398,26399,26462,26827,26820,27231,27450,27683,27773,27778,28103,29592,29734,29738,29826,29859,30072,30079,30849,30959,31041,31047,31048,31098,31637,32000,32186,32648,32774,32813,32908,35352,35663,35912,36215,37665,37668,39138,39249,39438,39439,39525,40594,32202,20342,21513,25326,26708,37329,21931,20794,63755,63756,23068,25062,63757,25295,25343,63758,63759,63760,63761,63762,63763,37027,63764,63765,63766,63767,63768,35582,63769,63770,63771,63772,26262,63773,29014,63774,63775,38627,63776,25423,25466,21335,63777,26511,26976,28275,63778,30007,63779,63780,63781,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32013,63782,63783,34930,22218,23064,63784,63785,63786,63787,63788,20035,63789,20839,22856,26608,32784,63790,22899,24180,25754,31178,24565,24684,25288,25467,23527,23511,21162,63791,22900,24361,24594,63792,63793,63794,29785,63795,63796,63797,63798,63799,63800,39377,63801,63802,63803,63804,63805,63806,63807,63808,63809,63810,63811,28611,63812,63813,33215,36786,24817,63814,63815,33126,63816,63817,23615,63818,63819,63820,63821,63822,63823,63824,63825,23273,35365,26491,32016,63826,63827,63828,63829,63830,63831,33021,63832,63833,23612,27877,21311,28346,22810,33590,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20025,20150,20294,21934,22296,22727,24406,26039,26086,27264,27573,28237,30701,31471,31774,32222,34507,34962,37170,37723,25787,28606,29562,30136,36948,21846,22349,25018,25812,26311,28129,28251,28525,28601,30192,32835,33213,34113,35203,35527,35674,37663,27795,30035,31572,36367,36957,21776,22530,22616,24162,25095,25758,26848,30070,31958,34739,40680,20195,22408,22382,22823,23565,23729,24118,24453,25140,25825,29619,33274,34955,36024,38538,40667,23429,24503,24755,20498,20992,21040,22294,22581,22615,23566,23648,23798,23947,24230,24466,24764,25361,25481,25623,26691,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26873,27330,28120,28193,28372,28644,29182,30428,30585,31153,31291,33796,35241,36077,36339,36424,36867,36884,36947,37117,37709,38518,38876,27602,28678,29272,29346,29544,30563,31167,31716,32411,35712,22697,24775,25958,26109,26302,27788,28958,29129,35930,38931,20077,31361,20189,20908,20941,21205,21516,24999,26481,26704,26847,27934,28540,30140,30643,31461,33012,33891,37509,20828,26007,26460,26515,30168,31431,33651,63834,35910,36887,38957,23663,33216,33434,36929,36975,37389,24471,23965,27225,29128,30331,31561,34276,35588,37159,39472,21895,25078,63835,30313,32645,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34367,34746,35064,37007,63836,27931,28889,29662,32097,33853,63837,37226,39409,63838,20098,21365,27396,27410,28734,29211,34349,40478,21068,36771,23888,25829,25900,27414,28651,31811,32412,34253,35172,35261,25289,33240,34847,24266,26391,28010,29436,29701,29807,34690,37086,20358,23821,24480,33802,20919,25504,30053,20142,20486,20841,20937,26753,27153,31918,31921,31975,33391,35538,36635,37327,20406,20791,21237,21570,24300,24942,25150,26053,27354,28670,31018,34268,34851,38317,39522,39530,40599,40654,21147,26310,27511,28701,31019,36706,38722,24976,25088,25891,28451,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29001,29833,32244,32879,34030,36646,36899,37706,20925,21015,21155,27916,28872,35010,24265,25986,27566,28610,31806,29557,20196,20278,22265,63839,23738,23994,24604,29618,31533,32666,32718,32838,36894,37428,38646,38728,38936,40801,20363,28583,31150,37300,38583,21214,63840,25736,25796,27347,28510,28696,29200,30439,32769,34310,34396,36335,36613,38706,39791,40442,40565,30860,31103,32160,33737,37636,40575,40595,35542,22751,24324,26407,28711,29903,31840,32894,20769,28712,29282,30922,36034,36058,36084,38647,20102,20698,23534,24278,26009,29134,30274,30637,32842,34044,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36988,39719,40845,22744,23105,23650,27155,28122,28431,30267,32047,32311,34078,35128,37860,38475,21129,26066,26611,27060,27969,28316,28687,29705,29792,30041,30244,30827,35628,39006,20845,25134,38520,20374,20523,23833,28138,32184,36650,24459,24900,26647,63841,38534,21202,32907,20956,20940,26974,31260,32190,33777,38517,20442,21033,21400,21519,21774,23653,24743,26446,26792,28012,29313,29432,29702,29827,63842,30178,31852,32633,32696,33673,35023,35041,37324,37328,38626,39881,21533,28542,29136,29848,34298,36522,38563,40023,40607,26519,28107,29747,33256,38678,30764,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31435,31520,31890,25705,29802,30194,30908,30952,39340,39764,40635,23518,24149,28448,33180,33707,37000,19975,21325,23081,24018,24398,24930,25405,26217,26364,28415,28459,28771,30622,33836,34067,34875,36627,39237,39995,21788,25273,26411,27819,33545,35178,38778,20129,22916,24536,24537,26395,32178,32596,33426,33579,33725,36638,37017,22475,22969,23186,23504,26151,26522,26757,27599,29028,32629,36023,36067,36993,39749,33032,35978,38476,39488,40613,23391,27667,29467,30450,30431,33804,20906,35219,20813,20885,21193,26825,27796,30468,30496,32191,32236,38754,40629,28357,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34065,20901,21517,21629,26126,26269,26919,28319,30399,30609,33559,33986,34719,37225,37528,40180,34946,20398,20882,21215,22982,24125,24917,25720,25721,26286,26576,27169,27597,27611,29279,29281,29761,30520,30683,32791,33468,33541,35584,35624,35980,26408,27792,29287,30446,30566,31302,40361,27519,27794,22818,26406,33945,21359,22675,22937,24287,25551,26164,26483,28218,29483,31447,33495,37672,21209,24043,25006,25035,25098,25287,25771,26080,26969,27494,27595,28961,29687,30045,32326,33310,33538,34154,35491,36031,38695,40289,22696,40664,20497,21006,21563,21839,25991,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27766,32010,32011,32862,34442,38272,38639,21247,27797,29289,21619,23194,23614,23883,24396,24494,26410,26806,26979,28220,28228,30473,31859,32654,34183,35598,36855,38753,40692,23735,24758,24845,25003,25935,26107,26108,27665,27887,29599,29641,32225,38292,23494,34588,35600,21085,21338,25293,25615,25778,26420,27192,27850,29632,29854,31636,31893,32283,33162,33334,34180,36843,38649,39361,20276,21322,21453,21467,25292,25644,25856,26001,27075,27886,28504,29677,30036,30242,30436,30460,30928,30971,31020,32070,33324,34784,36820,38930,39151,21187,25300,25765,28196,28497,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30332,36299,37297,37474,39662,39747,20515,20621,22346,22952,23592,24135,24439,25151,25918,26041,26049,26121,26507,27036,28354,30917,32033,32938,33152,33323,33459,33953,34444,35370,35607,37030,38450,40848,20493,20467,63843,22521,24472,25308,25490,26479,28227,28953,30403,32972,32986,35060,35061,35097,36064,36649,37197,38506,20271,20336,24091,26575,26658,30333,30334,39748,24161,27146,29033,29140,30058,63844,32321,34115,34281,39132,20240,31567,32624,38309,20961,24070,26805,27710,27726,27867,29359,31684,33539,27861,29754,20731,21128,22721,25816,27287,29863,30294,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30887,34327,38370,38713,63845,21342,24321,35722,36776,36783,37002,21029,30629,40009,40712,19993,20482,20853,23643,24183,26142,26170,26564,26821,28851,29953,30149,31177,31453,36647,39200,39432,20445,22561,22577,23542,26222,27493,27921,28282,28541,29668,29995,33769,35036,35091,35676,36628,20239,20693,21264,21340,23443,24489,26381,31119,33145,33583,34068,35079,35206,36665,36667,39333,39954,26412,20086,20472,22857,23553,23791,23792,25447,26834,28925,29090,29739,32299,34028,34562,36898,37586,40179,19981,20184,20463,20613,21078,21103,21542,21648,22496,22827,23142,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23386,23413,23500,24220,63846,25206,25975,26023,28014,28325,29238,31526,31807,32566,33104,33105,33178,33344,33433,33705,35331,36000,36070,36091,36212,36282,37096,37340,38428,38468,39385,40167,21271,20998,21545,22132,22707,22868,22894,24575,24996,25198,26128,27774,28954,30406,31881,31966,32027,33452,36033,38640,63847,20315,24343,24447,25282,23849,26379,26842,30844,32323,40300,19989,20633,21269,21290,21329,22915,23138,24199,24754,24970,25161,25209,26000,26503,27047,27604,27606,27607,27608,27832,63848,29749,30202,30738,30865,31189,31192,31875,32203,32737,32933,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,33086,33218,33778,34586,35048,35513,35692,36027,37145,38750,39131,40763,22188,23338,24428,25996,27315,27567,27996,28657,28693,29277,29613,36007,36051,38971,24977,27703,32856,39425,20045,20107,20123,20181,20282,20284,20351,20447,20735,21490,21496,21766,21987,22235,22763,22882,23057,23531,23546,23556,24051,24107,24473,24605,25448,26012,26031,26614,26619,26797,27515,27801,27863,28195,28681,29509,30722,31038,31040,31072,31169,31721,32023,32114,32902,33293,33678,34001,34503,35039,35408,35422,35613,36060,36198,36781,37034,39164,39391,40605,21066,63849,26388,63850,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20632,21034,23665,25955,27733,29642,29987,30109,31639,33948,37240,38704,20087,25746,27578,29022,34217,19977,63851,26441,26862,28183,33439,34072,34923,25591,28545,37394,39087,19978,20663,20687,20767,21830,21930,22039,23360,23577,23776,24120,24202,24224,24258,24819,26705,27233,28248,29245,29248,29376,30456,31077,31665,32724,35059,35316,35443,35937,36062,38684,22622,29885,36093,21959,63852,31329,32034,33394,29298,29983,29989,63853,31513,22661,22779,23996,24207,24246,24464,24661,25234,25471,25933,26257,26329,26360,26646,26866,29312,29790,31598,32110,32214,32626,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32997,33298,34223,35199,35475,36893,37604,40653,40736,22805,22893,24109,24796,26132,26227,26512,27728,28101,28511,30707,30889,33990,37323,37675,20185,20682,20808,21892,23307,23459,25159,25982,26059,28210,29053,29697,29764,29831,29887,30316,31146,32218,32341,32680,33146,33203,33337,34330,34796,35445,36323,36984,37521,37925,39245,39854,21352,23633,26964,27844,27945,28203,33292,34203,35131,35373,35498,38634,40807,21089,26297,27570,32406,34814,36109,38275,38493,25885,28041,29166,63854,22478,22995,23468,24615,24826,25104,26143,26207,29481,29689,30427,30465,31596,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32854,32882,33125,35488,37266,19990,21218,27506,27927,31237,31545,32048,63855,36016,21484,22063,22609,23477,23567,23569,24034,25152,25475,25620,26157,26803,27836,28040,28335,28703,28836,29138,29990,30095,30094,30233,31505,31712,31787,32032,32057,34092,34157,34311,35380,36877,36961,37045,37559,38902,39479,20439,23660,26463,28049,31903,32396,35606,36118,36895,23403,24061,25613,33984,36956,39137,29575,23435,24730,26494,28126,35359,35494,36865,38924,21047,63856,28753,30862,37782,34928,37335,20462,21463,22013,22234,22402,22781,23234,23432,23723,23744,24101,24833,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,25101,25163,25480,25628,25910,25976,27193,27530,27700,27929,28465,29159,29417,29560,29703,29874,30246,30561,31168,31319,31466,31929,32143,32172,32353,32670,33065,33585,33936,34010,34282,34966,35504,35728,36664,36930,36995,37228,37526,37561,38539,38567,38568,38614,38656,38920,39318,39635,39706,21460,22654,22809,23408,23487,28113,28506,29087,29729,29881,32901,33789,24033,24455,24490,24642,26092,26642,26991,27219,27529,27957,28147,29667,30462,30636,31565,32020,33059,33308,33600,34036,34147,35426,35524,37255,37662,38918,39348,25100,34899,36848,37477,23815,23847,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23913,29791,33181,34664,28629,25342,32722,35126,35186,19998,20056,20711,21213,21319,25215,26119,32361,34821,38494,20365,21273,22070,22987,23204,23608,23630,23629,24066,24337,24643,26045,26159,26178,26558,26612,29468,30690,31034,32709,33940,33997,35222,35430,35433,35553,35925,35962,22516,23508,24335,24687,25325,26893,27542,28252,29060,31698,34645,35672,36606,39135,39166,20280,20353,20449,21627,23072,23480,24892,26032,26216,29180,30003,31070,32051,33102,33251,33688,34218,34254,34563,35338,36523,36763,63857,36805,22833,23460,23526,24713,23529,23563,24515,27777,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63858,28145,28683,29978,33455,35574,20160,21313,63859,38617,27663,20126,20420,20818,21854,23077,23784,25105,29273,33469,33706,34558,34905,35357,38463,38597,39187,40201,40285,22538,23731,23997,24132,24801,24853,25569,27138,28197,37122,37716,38990,39952,40823,23433,23736,25353,26191,26696,30524,38593,38797,38996,39839,26017,35585,36555,38332,21813,23721,24022,24245,26263,30284,33780,38343,22739,25276,29390,40232,20208,22830,24591,26171,27523,31207,40230,21395,21696,22467,23830,24859,26326,28079,30861,33406,38552,38724,21380,25212,25494,28082,32266,33099,38989,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27387,32588,40367,40474,20063,20539,20918,22812,24825,25590,26928,29242,32822,63860,37326,24369,63861,63862,32004,33509,33903,33979,34277,36493,63863,20335,63864,63865,22756,23363,24665,25562,25880,25965,26264,63866,26954,27171,27915,28673,29036,30162,30221,31155,31344,63867,32650,63868,35140,63869,35731,37312,38525,63870,39178,22276,24481,26044,28417,30208,31142,35486,39341,39770,40812,20740,25014,25233,27277,33222,20547,22576,24422,28937,35328,35578,23420,34326,20474,20796,22196,22852,25513,28153,23978,26989,20870,20104,20313,63871,63872,63873,22914,63874,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63875,27487,27741,63876,29877,30998,63877,33287,33349,33593,36671,36701,63878,39192,63879,63880,63881,20134,63882,22495,24441,26131,63883,63884,30123,32377,35695,63885,36870,39515,22181,22567,23032,23071,23476,63886,24310,63887,63888,25424,25403,63889,26941,27783,27839,28046,28051,28149,28436,63890,28895,28982,29017,63891,29123,29141,63892,30799,30831,63893,31605,32227,63894,32303,63895,34893,36575,63896,63897,63898,37467,63899,40182,63900,63901,63902,24709,28037,63903,29105,63904,63905,38321,21421,63906,63907,63908,26579,63909,28814,28976,29744,33398,33490,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63910,38331,39653,40573,26308,63911,29121,33865,63912,63913,22603,63914,63915,23992,24433,63916,26144,26254,27001,27054,27704,27891,28214,28481,28634,28699,28719,29008,29151,29552,63917,29787,63918,29908,30408,31310,32403,63919,63920,33521,35424,36814,63921,37704,63922,38681,63923,63924,20034,20522,63925,21000,21473,26355,27757,28618,29450,30591,31330,33454,34269,34306,63926,35028,35427,35709,35947,63927,37555,63928,38675,38928,20116,20237,20425,20658,21320,21566,21555,21978,22626,22714,22887,23067,23524,24735,63929,25034,25942,26111,26212,26791,27738,28595,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28879,29100,29522,31613,34568,35492,39986,40711,23627,27779,29508,29577,37434,28331,29797,30239,31337,32277,34314,20800,22725,25793,29934,29973,30320,32705,37013,38605,39252,28198,29926,31401,31402,33253,34521,34680,35355,23113,23436,23451,26785,26880,28003,29609,29715,29740,30871,32233,32747,33048,33109,33694,35916,38446,38929,26352,24448,26106,26505,27754,29579,20525,23043,27498,30702,22806,23916,24013,29477,30031,63930,63931,20709,20985,22575,22829,22934,23002,23525,63932,63933,23970,25303,25622,25747,25854,63934,26332,63935,27208,63936,29183,29796,63937,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31368,31407,32327,32350,32768,33136,63938,34799,35201,35616,36953,63939,36992,39250,24958,27442,28020,32287,35109,36785,20433,20653,20887,21191,22471,22665,23481,24248,24898,27029,28044,28263,28342,29076,29794,29992,29996,32883,33592,33993,36362,37780,37854,63940,20110,20305,20598,20778,21448,21451,21491,23431,23507,23588,24858,24962,26100,29275,29591,29760,30402,31056,31121,31161,32006,32701,33419,34261,34398,36802,36935,37109,37354,38533,38632,38633,21206,24423,26093,26161,26671,29020,31286,37057,38922,20113,63941,27218,27550,28560,29065,32792,33464,34131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36939,38549,38642,38907,34074,39729,20112,29066,38596,20803,21407,21729,22291,22290,22435,23195,23236,23491,24616,24895,25588,27781,27961,28274,28304,29232,29503,29783,33489,34945,36677,36960,63942,38498,39000,40219,26376,36234,37470,20301,20553,20702,21361,22285,22996,23041,23561,24944,26256,28205,29234,29771,32239,32963,33806,33894,34111,34655,34907,35096,35586,36949,38859,39759,20083,20369,20754,20842,63943,21807,21929,23418,23461,24188,24189,24254,24736,24799,24840,24841,25540,25912,26377,63944,26580,26586,63945,26977,26978,27833,27943,63946,28216,63947,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28641,29494,29495,63948,29788,30001,63949,30290,63950,63951,32173,33278,33848,35029,35480,35547,35565,36400,36418,36938,36926,36986,37193,37321,37742,63952,63953,22537,63954,27603,32905,32946,63955,63956,20801,22891,23609,63957,63958,28516,29607,32996,36103,63959,37399,38287,63960,63961,63962,63963,32895,25102,28700,32104,34701,63964,22432,24681,24903,27575,35518,37504,38577,20057,21535,28139,34093,38512,38899,39150,25558,27875,37009,20957,25033,33210,40441,20381,20506,20736,23452,24847,25087,25836,26885,27589,30097,30691,32681,33380,34191,34811,34915,35516,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,35696,37291,20108,20197,20234,63965,63966,22839,23016,63967,24050,24347,24411,24609,63968,63969,63970,63971,29246,29669,63972,30064,30157,63973,31227,63974,32780,32819,32900,33505,33617,63975,63976,36029,36019,36999,63977,63978,39156,39180,63979,63980,28727,30410,32714,32716,32764,35610,20154,20161,20995,21360,63981,21693,22240,23035,23493,24341,24525,28270,63982,63983,32106,33589,63984,34451,35469,63985,38765,38775,63986,63987,19968,20314,20350,22777,26085,28322,36920,37808,39353,20219,22764,22922,23001,24641,63988,63989,31252,63990,33615,36035,20837,21316,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63991,63992,63993,20173,21097,23381,33471,20180,21050,21672,22985,23039,23376,23383,23388,24675,24904,28363,28825,29038,29574,29943,30133,30913,32043,32773,33258,33576,34071,34249,35566,36039,38604,20316,21242,22204,26027,26152,28796,28856,29237,32189,33421,37196,38592,40306,23409,26855,27544,28538,30430,23697,26283,28507,31668,31786,34870,38620,19976,20183,21280,22580,22715,22767,22892,23559,24115,24196,24373,25484,26290,26454,27167,27299,27404,28479,29254,63994,29520,29835,31456,31911,33144,33247,33255,33674,33900,34083,34196,34255,35037,36115,37292,38263,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38556,20877,21705,22312,23472,25165,26448,26685,26771,28221,28371,28797,32289,35009,36001,36617,40779,40782,29229,31631,35533,37658,20295,20302,20786,21632,22992,24213,25269,26485,26990,27159,27822,28186,29401,29482,30141,31672,32053,33511,33785,33879,34295,35419,36015,36487,36889,37048,38606,40799,21219,21514,23265,23490,25688,25973,28404,29380,63995,30340,31309,31515,31821,32318,32735,33659,35627,36042,36196,36321,36447,36842,36857,36969,37841,20291,20346,20659,20840,20856,21069,21098,22625,22652,22880,23560,23637,24283,24731,25136,26643,27583,27656,28593,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29006,29728,30000,30008,30033,30322,31564,31627,31661,31686,32399,35438,36670,36681,37439,37523,37666,37931,38651,39002,39019,39198,20999,25130,25240,27993,30308,31434,31680,32118,21344,23742,24215,28472,28857,31896,38673,39822,40670,25509,25722,34678,19969,20117,20141,20572,20597,21576,22979,23450,24128,24237,24311,24449,24773,25402,25919,25972,26060,26230,26232,26622,26984,27273,27491,27712,28096,28136,28191,28254,28702,28833,29582,29693,30010,30555,30855,31118,31243,31357,31934,32142,33351,35330,35562,35998,37165,37194,37336,37478,37580,37664,38662,38742,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38748,38914,40718,21046,21137,21884,22564,24093,24351,24716,25552,26799,28639,31085,31532,33229,34234,35069,35576,36420,37261,38500,38555,38717,38988,40778,20430,20806,20939,21161,22066,24340,24427,25514,25805,26089,26177,26362,26361,26397,26781,26839,27133,28437,28526,29031,29157,29226,29866,30522,31062,31066,31199,31264,31381,31895,31967,32068,32368,32903,34299,34468,35412,35519,36249,36481,36896,36973,37347,38459,38613,40165,26063,31751,36275,37827,23384,23562,21330,25305,29469,20519,23447,24478,24752,24939,26837,28121,29742,31278,32066,32156,32305,33131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36394,36405,37758,37912,20304,22352,24038,24231,25387,32618,20027,20303,20367,20570,23005,32964,21610,21608,22014,22863,23449,24030,24282,26205,26417,26609,26666,27880,27954,28234,28557,28855,29664,30087,31820,32002,32044,32162,33311,34523,35387,35461,36208,36490,36659,36913,37198,37202,37956,39376,31481,31909,20426,20737,20934,22472,23535,23803,26201,27197,27994,28310,28652,28940,30063,31459,34850,36897,36981,38603,39423,33537,20013,20210,34886,37325,21373,27355,26987,27713,33914,22686,24974,26366,25327,28893,29969,30151,32338,33976,35657,36104,20043,21482,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21675,22320,22336,24535,25345,25351,25711,25903,26088,26234,26525,26547,27490,27744,27802,28460,30693,30757,31049,31063,32025,32930,33026,33267,33437,33463,34584,35468,63996,36100,36286,36978,30452,31257,31287,32340,32887,21767,21972,22645,25391,25634,26185,26187,26733,27035,27524,27941,28337,29645,29800,29857,30043,30137,30433,30494,30603,31206,32265,32285,33275,34095,34967,35386,36049,36587,36784,36914,37805,38499,38515,38663,20356,21489,23018,23241,24089,26702,29894,30142,31209,31378,33187,34541,36074,36300,36845,26015,26389,63997,22519,28503,32221,36655,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37878,38598,24501,25074,28548,19988,20376,20511,21449,21983,23919,24046,27425,27492,30923,31642,63998,36425,36554,36974,25417,25662,30528,31364,37679,38015,40810,25776,28591,29158,29864,29914,31428,31762,32386,31922,32408,35738,36106,38013,39184,39244,21049,23519,25830,26413,32046,20717,21443,22649,24920,24921,25082,26028,31449,35730,35734,20489,20513,21109,21809,23100,24288,24432,24884,25950,26124,26166,26274,27085,28356,28466,29462,30241,31379,33081,33369,33750,33980,20661,22512,23488,23528,24425,25505,30758,32181,33756,34081,37319,37365,20874,26613,31574,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36012,20932,22971,24765,34389,20508,63999,21076,23610,24957,25114,25299,25842,26021,28364,30240,33034,36448,38495,38587,20191,21315,21912,22825,24029,25797,27849,28154,29588,31359,33307,34214,36068,36368,36983,37351,38369,38433,38854,20984,21746,21894,24505,25764,28552,32180,36639,36685,37941,20681,23574,27838,28155,29979,30651,31805,31844,35449,35522,22558,22974,24086,25463,29266,30090,30571,35548,36028,36626,24307,26228,28152,32893,33729,35531,38737,39894,64000,21059,26367,28053,28399,32224,35558,36910,36958,39636,21021,21119,21736,24980,25220,25307,26786,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26898,26970,27189,28818,28966,30813,30977,30990,31186,31245,32918,33400,33493,33609,34121,35970,36229,37218,37259,37294,20419,22225,29165,30679,34560,35320,23544,24534,26449,37032,21474,22618,23541,24740,24961,25696,32317,32880,34085,37507,25774,20652,23828,26368,22684,25277,25512,26894,27000,27166,28267,30394,31179,33467,33833,35535,36264,36861,37138,37195,37276,37648,37656,37786,38619,39478,39949,19985,30044,31069,31482,31569,31689,32302,33988,36441,36468,36600,36880,26149,26943,29763,20986,26414,40668,20805,24544,27798,34802,34909,34935,24756,33205,33795,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36101,21462,21561,22068,23094,23601,28810,32736,32858,33030,33261,36259,37257,39519,40434,20596,20164,21408,24827,28204,23652,20360,20516,21988,23769,24159,24677,26772,27835,28100,29118,30164,30196,30305,31258,31305,32199,32251,32622,33268,34473,36636,38601,39347,40786,21063,21189,39149,35242,19971,26578,28422,20405,23522,26517,27784,28024,29723,30759,37341,37756,34756,31204,31281,24555,20182,21668,21822,22702,22949,24816,25171,25302,26422,26965,33333,38464,39345,39389,20524,21331,21828,22396,64001,25176,64002,25826,26219,26589,28609,28655,29730,29752,35351,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37944,21585,22022,22374,24392,24986,27470,28760,28845,32187,35477,22890,33067,25506,30472,32829,36010,22612,25645,27067,23445,24081,28271,64003,34153,20812,21488,22826,24608,24907,27526,27760,27888,31518,32974,33492,36294,37040,39089,64004,25799,28580,25745,25860,20814,21520,22303,35342,24927,26742,64005,30171,31570,32113,36890,22534,27084,33151,35114,36864,38969,20600,22871,22956,25237,36879,39722,24925,29305,38358,22369,23110,24052,25226,25773,25850,26487,27874,27966,29228,29750,30772,32631,33453,36315,38935,21028,22338,26495,29256,29923,36009,36774,37393,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38442,20843,21485,25420,20329,21764,24726,25943,27803,28031,29260,29437,31255,35207,35997,24429,28558,28921,33192,24846,20415,20559,25153,29255,31687,32232,32745,36941,38829,39449,36022,22378,24179,26544,33805,35413,21536,23318,24163,24290,24330,25987,32954,34109,38281,38491,20296,21253,21261,21263,21638,21754,22275,24067,24598,25243,25265,25429,64006,27873,28006,30129,30770,32990,33071,33502,33889,33970,34957,35090,36875,37610,39165,39825,24133,26292,26333,28689,29190,64007,20469,21117,24426,24915,26451,27161,28418,29922,31080,34920,35961,39111,39108,39491,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21697,31263,26963,35575,35914,39080,39342,24444,25259,30130,30382,34987,36991,38466,21305,24380,24517,27852,29644,30050,30091,31558,33534,39325,20047,36924,19979,20309,21414,22799,24264,26160,27827,29781,33655,34662,36032,36944,38686,39957,22737,23416,34384,35604,40372,23506,24680,24717,26097,27735,28450,28579,28698,32597,32752,38289,38290,38480,38867,21106,36676,20989,21547,21688,21859,21898,27323,28085,32216,33382,37532,38519,40569,21512,21704,30418,34532,38308,38356,38492,20130,20233,23022,23270,24055,24658,25239,26477,26689,27782,28207,32568,32923,33322,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,64008,64009,38917,20133,20565,21683,22419,22874,23401,23475,25032,26999,28023,28707,34809,35299,35442,35559,36994,39405,39608,21182,26680,20502,24184,26447,33607,34892,20139,21521,22190,29670,37141,38911,39177,39255,39321,22099,22687,34395,35377,25010,27382,29563,36562,27463,38570,39511,22869,29184,36203,38761,20436,23796,24358,25080,26203,27883,28843,29572,29625,29694,30505,30541,32067,32098,32291,33335,34898,64010,36066,37449,39023,23377,31348,34880,38913,23244,20448,21332,22846,23805,25406,28025,29433,33029,33031,33698,37583,38960,20136,20804,21009,22411,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24418,27842,28366,28677,28752,28847,29074,29673,29801,33610,34722,34913,36872,37026,37795,39336,20846,24407,24800,24935,26291,34137,36426,37295,38795,20046,20114,21628,22741,22778,22909,23733,24359,25142,25160,26122,26215,27627,28009,28111,28246,28408,28564,28640,28649,28765,29392,29733,29786,29920,30355,31068,31946,32286,32993,33446,33899,33983,34382,34399,34676,35703,35946,37804,38912,39013,24785,25110,37239,23130,26127,28151,28222,29759,39746,24573,24794,31503,21700,24344,27742,27859,27946,28888,32005,34425,35340,40251,21270,21644,23301,27194,28779,30069,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31117,31166,33457,33775,35441,35649,36008,38772,64011,25844,25899,30906,30907,31339,20024,21914,22864,23462,24187,24739,25563,27489,26213,26707,28185,29029,29872,32008,36996,39529,39973,27963,28369,29502,35905,38346,20976,24140,24488,24653,24822,24880,24908,26179,26180,27045,27841,28255,28361,28514,29004,29852,30343,31681,31783,33618,34647,36945,38541,40643,21295,22238,24315,24458,24674,24724,25079,26214,26371,27292,28142,28590,28784,29546,32362,33214,33588,34516,35496,36036,21123,29554,23446,27243,37892,21742,22150,23389,25928,25989,26313,26783,28045,28102,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29243,32948,37237,39501,20399,20505,21402,21518,21564,21897,21957,24127,24460,26429,29030,29661,36869,21211,21235,22628,22734,28932,29071,29179,34224,35347,26248,34216,21927,26244,29002,33841,21321,21913,27585,24409,24509,25582,26249,28999,35569,36637,40638,20241,25658,28875,30054,34407,24676,35662,40440,20807,20982,21256,27958,33016,40657,26133,27427,28824,30165,21507,23673,32007,35350,27424,27453,27462,21560,24688,27965,32725,33288,20694,20958,21916,22123,22221,23020,23305,24076,24985,24984,25137,26206,26342,29081,29113,29114,29351,31143,31232,32690,35440,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"gb18030":[19970,19972,19973,19974,19983,19986,19991,19999,20000,20001,20003,20006,20009,20014,20015,20017,20019,20021,20023,20028,20032,20033,20034,20036,20038,20042,20049,20053,20055,20058,20059,20066,20067,20068,20069,20071,20072,20074,20075,20076,20077,20078,20079,20082,20084,20085,20086,20087,20088,20089,20090,20091,20092,20093,20095,20096,20097,20098,20099,20100,20101,20103,20106,20112,20118,20119,20121,20124,20125,20126,20131,20138,20143,20144,20145,20148,20150,20151,20152,20153,20156,20157,20158,20168,20172,20175,20176,20178,20186,20187,20188,20192,20194,20198,20199,20201,20205,20206,20207,20209,20212,20216,20217,20218,20220,20222,20224,20226,20227,20228,20229,20230,20231,20232,20235,20236,20242,20243,20244,20245,20246,20252,20253,20257,20259,20264,20265,20268,20269,20270,20273,20275,20277,20279,20281,20283,20286,20287,20288,20289,20290,20292,20293,20295,20296,20297,20298,20299,20300,20306,20308,20310,20321,20322,20326,20328,20330,20331,20333,20334,20337,20338,20341,20343,20344,20345,20346,20349,20352,20353,20354,20357,20358,20359,20362,20364,20366,20368,20370,20371,20373,20374,20376,20377,20378,20380,20382,20383,20385,20386,20388,20395,20397,20400,20401,20402,20403,20404,20406,20407,20408,20409,20410,20411,20412,20413,20414,20416,20417,20418,20422,20423,20424,20425,20427,20428,20429,20434,20435,20436,20437,20438,20441,20443,20448,20450,20452,20453,20455,20459,20460,20464,20466,20468,20469,20470,20471,20473,20475,20476,20477,20479,20480,20481,20482,20483,20484,20485,20486,20487,20488,20489,20490,20491,20494,20496,20497,20499,20501,20502,20503,20507,20509,20510,20512,20514,20515,20516,20519,20523,20527,20528,20529,20530,20531,20532,20533,20534,20535,20536,20537,20539,20541,20543,20544,20545,20546,20548,20549,20550,20553,20554,20555,20557,20560,20561,20562,20563,20564,20566,20567,20568,20569,20571,20573,20574,20575,20576,20577,20578,20579,20580,20582,20583,20584,20585,20586,20587,20589,20590,20591,20592,20593,20594,20595,20596,20597,20600,20601,20602,20604,20605,20609,20610,20611,20612,20614,20615,20617,20618,20619,20620,20622,20623,20624,20625,20626,20627,20628,20629,20630,20631,20632,20633,20634,20635,20636,20637,20638,20639,20640,20641,20642,20644,20646,20650,20651,20653,20654,20655,20656,20657,20659,20660,20661,20662,20663,20664,20665,20668,20669,20670,20671,20672,20673,20674,20675,20676,20677,20678,20679,20680,20681,20682,20683,20684,20685,20686,20688,20689,20690,20691,20692,20693,20695,20696,20697,20699,20700,20701,20702,20703,20704,20705,20706,20707,20708,20709,20712,20713,20714,20715,20719,20720,20721,20722,20724,20726,20727,20728,20729,20730,20732,20733,20734,20735,20736,20737,20738,20739,20740,20741,20744,20745,20746,20748,20749,20750,20751,20752,20753,20755,20756,20757,20758,20759,20760,20761,20762,20763,20764,20765,20766,20767,20768,20770,20771,20772,20773,20774,20775,20776,20777,20778,20779,20780,20781,20782,20783,20784,20785,20786,20787,20788,20789,20790,20791,20792,20793,20794,20795,20796,20797,20798,20802,20807,20810,20812,20814,20815,20816,20818,20819,20823,20824,20825,20827,20829,20830,20831,20832,20833,20835,20836,20838,20839,20841,20842,20847,20850,20858,20862,20863,20867,20868,20870,20871,20874,20875,20878,20879,20880,20881,20883,20884,20888,20890,20893,20894,20895,20897,20899,20902,20903,20904,20905,20906,20909,20910,20916,20920,20921,20922,20926,20927,20929,20930,20931,20933,20936,20938,20941,20942,20944,20946,20947,20948,20949,20950,20951,20952,20953,20954,20956,20958,20959,20962,20963,20965,20966,20967,20968,20969,20970,20972,20974,20977,20978,20980,20983,20990,20996,20997,21001,21003,21004,21007,21008,21011,21012,21013,21020,21022,21023,21025,21026,21027,21029,21030,21031,21034,21036,21039,21041,21042,21044,21045,21052,21054,21060,21061,21062,21063,21064,21065,21067,21070,21071,21074,21075,21077,21079,21080,21081,21082,21083,21085,21087,21088,21090,21091,21092,21094,21096,21099,21100,21101,21102,21104,21105,21107,21108,21109,21110,21111,21112,21113,21114,21115,21116,21118,21120,21123,21124,21125,21126,21127,21129,21130,21131,21132,21133,21134,21135,21137,21138,21140,21141,21142,21143,21144,21145,21146,21148,21156,21157,21158,21159,21166,21167,21168,21172,21173,21174,21175,21176,21177,21178,21179,21180,21181,21184,21185,21186,21188,21189,21190,21192,21194,21196,21197,21198,21199,21201,21203,21204,21205,21207,21209,21210,21211,21212,21213,21214,21216,21217,21218,21219,21221,21222,21223,21224,21225,21226,21227,21228,21229,21230,21231,21233,21234,21235,21236,21237,21238,21239,21240,21243,21244,21245,21249,21250,21251,21252,21255,21257,21258,21259,21260,21262,21265,21266,21267,21268,21272,21275,21276,21278,21279,21282,21284,21285,21287,21288,21289,21291,21292,21293,21295,21296,21297,21298,21299,21300,21301,21302,21303,21304,21308,21309,21312,21314,21316,21318,21323,21324,21325,21328,21332,21336,21337,21339,21341,21349,21352,21354,21356,21357,21362,21366,21369,21371,21372,21373,21374,21376,21377,21379,21383,21384,21386,21390,21391,21392,21393,21394,21395,21396,21398,21399,21401,21403,21404,21406,21408,21409,21412,21415,21418,21419,21420,21421,21423,21424,21425,21426,21427,21428,21429,21431,21432,21433,21434,21436,21437,21438,21440,21443,21444,21445,21446,21447,21454,21455,21456,21458,21459,21461,21466,21468,21469,21470,21473,21474,21479,21492,21498,21502,21503,21504,21506,21509,21511,21515,21524,21528,21529,21530,21532,21538,21540,21541,21546,21552,21555,21558,21559,21562,21565,21567,21569,21570,21572,21573,21575,21577,21580,21581,21582,21583,21585,21594,21597,21598,21599,21600,21601,21603,21605,21607,21609,21610,21611,21612,21613,21614,21615,21616,21620,21625,21626,21630,21631,21633,21635,21637,21639,21640,21641,21642,21645,21649,21651,21655,21656,21660,21662,21663,21664,21665,21666,21669,21678,21680,21682,21685,21686,21687,21689,21690,21692,21694,21699,21701,21706,21707,21718,21720,21723,21728,21729,21730,21731,21732,21739,21740,21743,21744,21745,21748,21749,21750,21751,21752,21753,21755,21758,21760,21762,21763,21764,21765,21768,21770,21771,21772,21773,21774,21778,21779,21781,21782,21783,21784,21785,21786,21788,21789,21790,21791,21793,21797,21798,21800,21801,21803,21805,21810,21812,21813,21814,21816,21817,21818,21819,21821,21824,21826,21829,21831,21832,21835,21836,21837,21838,21839,21841,21842,21843,21844,21847,21848,21849,21850,21851,21853,21854,21855,21856,21858,21859,21864,21865,21867,21871,21872,21873,21874,21875,21876,21881,21882,21885,21887,21893,21894,21900,21901,21902,21904,21906,21907,21909,21910,21911,21914,21915,21918,21920,21921,21922,21923,21924,21925,21926,21928,21929,21930,21931,21932,21933,21934,21935,21936,21938,21940,21942,21944,21946,21948,21951,21952,21953,21954,21955,21958,21959,21960,21962,21963,21966,21967,21968,21973,21975,21976,21977,21978,21979,21982,21984,21986,21991,21993,21997,21998,22000,22001,22004,22006,22008,22009,22010,22011,22012,22015,22018,22019,22020,22021,22022,22023,22026,22027,22029,22032,22033,22034,22035,22036,22037,22038,22039,22041,22042,22044,22045,22048,22049,22050,22053,22054,22056,22057,22058,22059,22062,22063,22064,22067,22069,22071,22072,22074,22076,22077,22078,22080,22081,22082,22083,22084,22085,22086,22087,22088,22089,22090,22091,22095,22096,22097,22098,22099,22101,22102,22106,22107,22109,22110,22111,22112,22113,22115,22117,22118,22119,22125,22126,22127,22128,22130,22131,22132,22133,22135,22136,22137,22138,22141,22142,22143,22144,22145,22146,22147,22148,22151,22152,22153,22154,22155,22156,22157,22160,22161,22162,22164,22165,22166,22167,22168,22169,22170,22171,22172,22173,22174,22175,22176,22177,22178,22180,22181,22182,22183,22184,22185,22186,22187,22188,22189,22190,22192,22193,22194,22195,22196,22197,22198,22200,22201,22202,22203,22205,22206,22207,22208,22209,22210,22211,22212,22213,22214,22215,22216,22217,22219,22220,22221,22222,22223,22224,22225,22226,22227,22229,22230,22232,22233,22236,22243,22245,22246,22247,22248,22249,22250,22252,22254,22255,22258,22259,22262,22263,22264,22267,22268,22272,22273,22274,22277,22279,22283,22284,22285,22286,22287,22288,22289,22290,22291,22292,22293,22294,22295,22296,22297,22298,22299,22301,22302,22304,22305,22306,22308,22309,22310,22311,22315,22321,22322,22324,22325,22326,22327,22328,22332,22333,22335,22337,22339,22340,22341,22342,22344,22345,22347,22354,22355,22356,22357,22358,22360,22361,22370,22371,22373,22375,22380,22382,22384,22385,22386,22388,22389,22392,22393,22394,22397,22398,22399,22400,22401,22407,22408,22409,22410,22413,22414,22415,22416,22417,22420,22421,22422,22423,22424,22425,22426,22428,22429,22430,22431,22437,22440,22442,22444,22447,22448,22449,22451,22453,22454,22455,22457,22458,22459,22460,22461,22462,22463,22464,22465,22468,22469,22470,22471,22472,22473,22474,22476,22477,22480,22481,22483,22486,22487,22491,22492,22494,22497,22498,22499,22501,22502,22503,22504,22505,22506,22507,22508,22510,22512,22513,22514,22515,22517,22518,22519,22523,22524,22526,22527,22529,22531,22532,22533,22536,22537,22538,22540,22542,22543,22544,22546,22547,22548,22550,22551,22552,22554,22555,22556,22557,22559,22562,22563,22565,22566,22567,22568,22569,22571,22572,22573,22574,22575,22577,22578,22579,22580,22582,22583,22584,22585,22586,22587,22588,22589,22590,22591,22592,22593,22594,22595,22597,22598,22599,22600,22601,22602,22603,22606,22607,22608,22610,22611,22613,22614,22615,22617,22618,22619,22620,22621,22623,22624,22625,22626,22627,22628,22630,22631,22632,22633,22634,22637,22638,22639,22640,22641,22642,22643,22644,22645,22646,22647,22648,22649,22650,22651,22652,22653,22655,22658,22660,22662,22663,22664,22666,22667,22668,22669,22670,22671,22672,22673,22676,22677,22678,22679,22680,22683,22684,22685,22688,22689,22690,22691,22692,22693,22694,22695,22698,22699,22700,22701,22702,22703,22704,22705,22706,22707,22708,22709,22710,22711,22712,22713,22714,22715,22717,22718,22719,22720,22722,22723,22724,22726,22727,22728,22729,22730,22731,22732,22733,22734,22735,22736,22738,22739,22740,22742,22743,22744,22745,22746,22747,22748,22749,22750,22751,22752,22753,22754,22755,22757,22758,22759,22760,22761,22762,22765,22767,22769,22770,22772,22773,22775,22776,22778,22779,22780,22781,22782,22783,22784,22785,22787,22789,22790,22792,22793,22794,22795,22796,22798,22800,22801,22802,22803,22807,22808,22811,22813,22814,22816,22817,22818,22819,22822,22824,22828,22832,22834,22835,22837,22838,22843,22845,22846,22847,22848,22851,22853,22854,22858,22860,22861,22864,22866,22867,22873,22875,22876,22877,22878,22879,22881,22883,22884,22886,22887,22888,22889,22890,22891,22892,22893,22894,22895,22896,22897,22898,22901,22903,22906,22907,22908,22910,22911,22912,22917,22921,22923,22924,22926,22927,22928,22929,22932,22933,22936,22938,22939,22940,22941,22943,22944,22945,22946,22950,22951,22956,22957,22960,22961,22963,22964,22965,22966,22967,22968,22970,22972,22973,22975,22976,22977,22978,22979,22980,22981,22983,22984,22985,22988,22989,22990,22991,22997,22998,23001,23003,23006,23007,23008,23009,23010,23012,23014,23015,23017,23018,23019,23021,23022,23023,23024,23025,23026,23027,23028,23029,23030,23031,23032,23034,23036,23037,23038,23040,23042,23050,23051,23053,23054,23055,23056,23058,23060,23061,23062,23063,23065,23066,23067,23069,23070,23073,23074,23076,23078,23079,23080,23082,23083,23084,23085,23086,23087,23088,23091,23093,23095,23096,23097,23098,23099,23101,23102,23103,23105,23106,23107,23108,23109,23111,23112,23115,23116,23117,23118,23119,23120,23121,23122,23123,23124,23126,23127,23128,23129,23131,23132,23133,23134,23135,23136,23137,23139,23140,23141,23142,23144,23145,23147,23148,23149,23150,23151,23152,23153,23154,23155,23160,23161,23163,23164,23165,23166,23168,23169,23170,23171,23172,23173,23174,23175,23176,23177,23178,23179,23180,23181,23182,23183,23184,23185,23187,23188,23189,23190,23191,23192,23193,23196,23197,23198,23199,23200,23201,23202,23203,23204,23205,23206,23207,23208,23209,23211,23212,23213,23214,23215,23216,23217,23220,23222,23223,23225,23226,23227,23228,23229,23231,23232,23235,23236,23237,23238,23239,23240,23242,23243,23245,23246,23247,23248,23249,23251,23253,23255,23257,23258,23259,23261,23262,23263,23266,23268,23269,23271,23272,23274,23276,23277,23278,23279,23280,23282,23283,23284,23285,23286,23287,23288,23289,23290,23291,23292,23293,23294,23295,23296,23297,23298,23299,23300,23301,23302,23303,23304,23306,23307,23308,23309,23310,23311,23312,23313,23314,23315,23316,23317,23320,23321,23322,23323,23324,23325,23326,23327,23328,23329,23330,23331,23332,23333,23334,23335,23336,23337,23338,23339,23340,23341,23342,23343,23344,23345,23347,23349,23350,23352,23353,23354,23355,23356,23357,23358,23359,23361,23362,23363,23364,23365,23366,23367,23368,23369,23370,23371,23372,23373,23374,23375,23378,23382,23390,23392,23393,23399,23400,23403,23405,23406,23407,23410,23412,23414,23415,23416,23417,23419,23420,23422,23423,23426,23430,23434,23437,23438,23440,23441,23442,23444,23446,23455,23463,23464,23465,23468,23469,23470,23471,23473,23474,23479,23482,23483,23484,23488,23489,23491,23496,23497,23498,23499,23501,23502,23503,23505,23508,23509,23510,23511,23512,23513,23514,23515,23516,23520,23522,23523,23526,23527,23529,23530,23531,23532,23533,23535,23537,23538,23539,23540,23541,23542,23543,23549,23550,23552,23554,23555,23557,23559,23560,23563,23564,23565,23566,23568,23570,23571,23575,23577,23579,23582,23583,23584,23585,23587,23590,23592,23593,23594,23595,23597,23598,23599,23600,23602,23603,23605,23606,23607,23619,23620,23622,23623,23628,23629,23634,23635,23636,23638,23639,23640,23642,23643,23644,23645,23647,23650,23652,23655,23656,23657,23658,23659,23660,23661,23664,23666,23667,23668,23669,23670,23671,23672,23675,23676,23677,23678,23680,23683,23684,23685,23686,23687,23689,23690,23691,23694,23695,23698,23699,23701,23709,23710,23711,23712,23713,23716,23717,23718,23719,23720,23722,23726,23727,23728,23730,23732,23734,23737,23738,23739,23740,23742,23744,23746,23747,23749,23750,23751,23752,23753,23754,23756,23757,23758,23759,23760,23761,23763,23764,23765,23766,23767,23768,23770,23771,23772,23773,23774,23775,23776,23778,23779,23783,23785,23787,23788,23790,23791,23793,23794,23795,23796,23797,23798,23799,23800,23801,23802,23804,23805,23806,23807,23808,23809,23812,23813,23816,23817,23818,23819,23820,23821,23823,23824,23825,23826,23827,23829,23831,23832,23833,23834,23836,23837,23839,23840,23841,23842,23843,23845,23848,23850,23851,23852,23855,23856,23857,23858,23859,23861,23862,23863,23864,23865,23866,23867,23868,23871,23872,23873,23874,23875,23876,23877,23878,23880,23881,23885,23886,23887,23888,23889,23890,23891,23892,23893,23894,23895,23897,23898,23900,23902,23903,23904,23905,23906,23907,23908,23909,23910,23911,23912,23914,23917,23918,23920,23921,23922,23923,23925,23926,23927,23928,23929,23930,23931,23932,23933,23934,23935,23936,23937,23939,23940,23941,23942,23943,23944,23945,23946,23947,23948,23949,23950,23951,23952,23953,23954,23955,23956,23957,23958,23959,23960,23962,23963,23964,23966,23967,23968,23969,23970,23971,23972,23973,23974,23975,23976,23977,23978,23979,23980,23981,23982,23983,23984,23985,23986,23987,23988,23989,23990,23992,23993,23994,23995,23996,23997,23998,23999,24000,24001,24002,24003,24004,24006,24007,24008,24009,24010,24011,24012,24014,24015,24016,24017,24018,24019,24020,24021,24022,24023,24024,24025,24026,24028,24031,24032,24035,24036,24042,24044,24045,24048,24053,24054,24056,24057,24058,24059,24060,24063,24064,24068,24071,24073,24074,24075,24077,24078,24082,24083,24087,24094,24095,24096,24097,24098,24099,24100,24101,24104,24105,24106,24107,24108,24111,24112,24114,24115,24116,24117,24118,24121,24122,24126,24127,24128,24129,24131,24134,24135,24136,24137,24138,24139,24141,24142,24143,24144,24145,24146,24147,24150,24151,24152,24153,24154,24156,24157,24159,24160,24163,24164,24165,24166,24167,24168,24169,24170,24171,24172,24173,24174,24175,24176,24177,24181,24183,24185,24190,24193,24194,24195,24197,24200,24201,24204,24205,24206,24210,24216,24219,24221,24225,24226,24227,24228,24232,24233,24234,24235,24236,24238,24239,24240,24241,24242,24244,24250,24251,24252,24253,24255,24256,24257,24258,24259,24260,24261,24262,24263,24264,24267,24268,24269,24270,24271,24272,24276,24277,24279,24280,24281,24282,24284,24285,24286,24287,24288,24289,24290,24291,24292,24293,24294,24295,24297,24299,24300,24301,24302,24303,24304,24305,24306,24307,24309,24312,24313,24315,24316,24317,24325,24326,24327,24329,24332,24333,24334,24336,24338,24340,24342,24345,24346,24348,24349,24350,24353,24354,24355,24356,24360,24363,24364,24366,24368,24370,24371,24372,24373,24374,24375,24376,24379,24381,24382,24383,24385,24386,24387,24388,24389,24390,24391,24392,24393,24394,24395,24396,24397,24398,24399,24401,24404,24409,24410,24411,24412,24414,24415,24416,24419,24421,24423,24424,24427,24430,24431,24434,24436,24437,24438,24440,24442,24445,24446,24447,24451,24454,24461,24462,24463,24465,24467,24468,24470,24474,24475,24477,24478,24479,24480,24482,24483,24484,24485,24486,24487,24489,24491,24492,24495,24496,24497,24498,24499,24500,24502,24504,24505,24506,24507,24510,24511,24512,24513,24514,24519,24520,24522,24523,24526,24531,24532,24533,24538,24539,24540,24542,24543,24546,24547,24549,24550,24552,24553,24556,24559,24560,24562,24563,24564,24566,24567,24569,24570,24572,24583,24584,24585,24587,24588,24592,24593,24595,24599,24600,24602,24606,24607,24610,24611,24612,24620,24621,24622,24624,24625,24626,24627,24628,24630,24631,24632,24633,24634,24637,24638,24640,24644,24645,24646,24647,24648,24649,24650,24652,24654,24655,24657,24659,24660,24662,24663,24664,24667,24668,24670,24671,24672,24673,24677,24678,24686,24689,24690,24692,24693,24695,24702,24704,24705,24706,24709,24710,24711,24712,24714,24715,24718,24719,24720,24721,24723,24725,24727,24728,24729,24732,24734,24737,24738,24740,24741,24743,24745,24746,24750,24752,24755,24757,24758,24759,24761,24762,24765,24766,24767,24768,24769,24770,24771,24772,24775,24776,24777,24780,24781,24782,24783,24784,24786,24787,24788,24790,24791,24793,24795,24798,24801,24802,24803,24804,24805,24810,24817,24818,24821,24823,24824,24827,24828,24829,24830,24831,24834,24835,24836,24837,24839,24842,24843,24844,24848,24849,24850,24851,24852,24854,24855,24856,24857,24859,24860,24861,24862,24865,24866,24869,24872,24873,24874,24876,24877,24878,24879,24880,24881,24882,24883,24884,24885,24886,24887,24888,24889,24890,24891,24892,24893,24894,24896,24897,24898,24899,24900,24901,24902,24903,24905,24907,24909,24911,24912,24914,24915,24916,24918,24919,24920,24921,24922,24923,24924,24926,24927,24928,24929,24931,24932,24933,24934,24937,24938,24939,24940,24941,24942,24943,24945,24946,24947,24948,24950,24952,24953,24954,24955,24956,24957,24958,24959,24960,24961,24962,24963,24964,24965,24966,24967,24968,24969,24970,24972,24973,24975,24976,24977,24978,24979,24981,24982,24983,24984,24985,24986,24987,24988,24990,24991,24992,24993,24994,24995,24996,24997,24998,25002,25003,25005,25006,25007,25008,25009,25010,25011,25012,25013,25014,25016,25017,25018,25019,25020,25021,25023,25024,25025,25027,25028,25029,25030,25031,25033,25036,25037,25038,25039,25040,25043,25045,25046,25047,25048,25049,25050,25051,25052,25053,25054,25055,25056,25057,25058,25059,25060,25061,25063,25064,25065,25066,25067,25068,25069,25070,25071,25072,25073,25074,25075,25076,25078,25079,25080,25081,25082,25083,25084,25085,25086,25088,25089,25090,25091,25092,25093,25095,25097,25107,25108,25113,25116,25117,25118,25120,25123,25126,25127,25128,25129,25131,25133,25135,25136,25137,25138,25141,25142,25144,25145,25146,25147,25148,25154,25156,25157,25158,25162,25167,25168,25173,25174,25175,25177,25178,25180,25181,25182,25183,25184,25185,25186,25188,25189,25192,25201,25202,25204,25205,25207,25208,25210,25211,25213,25217,25218,25219,25221,25222,25223,25224,25227,25228,25229,25230,25231,25232,25236,25241,25244,25245,25246,25251,25254,25255,25257,25258,25261,25262,25263,25264,25266,25267,25268,25270,25271,25272,25274,25278,25280,25281,25283,25291,25295,25297,25301,25309,25310,25312,25313,25316,25322,25323,25328,25330,25333,25336,25337,25338,25339,25344,25347,25348,25349,25350,25354,25355,25356,25357,25359,25360,25362,25363,25364,25365,25367,25368,25369,25372,25382,25383,25385,25388,25389,25390,25392,25393,25395,25396,25397,25398,25399,25400,25403,25404,25406,25407,25408,25409,25412,25415,25416,25418,25425,25426,25427,25428,25430,25431,25432,25433,25434,25435,25436,25437,25440,25444,25445,25446,25448,25450,25451,25452,25455,25456,25458,25459,25460,25461,25464,25465,25468,25469,25470,25471,25473,25475,25476,25477,25478,25483,25485,25489,25491,25492,25493,25495,25497,25498,25499,25500,25501,25502,25503,25505,25508,25510,25515,25519,25521,25522,25525,25526,25529,25531,25533,25535,25536,25537,25538,25539,25541,25543,25544,25546,25547,25548,25553,25555,25556,25557,25559,25560,25561,25562,25563,25564,25565,25567,25570,25572,25573,25574,25575,25576,25579,25580,25582,25583,25584,25585,25587,25589,25591,25593,25594,25595,25596,25598,25603,25604,25606,25607,25608,25609,25610,25613,25614,25617,25618,25621,25622,25623,25624,25625,25626,25629,25631,25634,25635,25636,25637,25639,25640,25641,25643,25646,25647,25648,25649,25650,25651,25653,25654,25655,25656,25657,25659,25660,25662,25664,25666,25667,25673,25675,25676,25677,25678,25679,25680,25681,25683,25685,25686,25687,25689,25690,25691,25692,25693,25695,25696,25697,25698,25699,25700,25701,25702,25704,25706,25707,25708,25710,25711,25712,25713,25714,25715,25716,25717,25718,25719,25723,25724,25725,25726,25727,25728,25729,25731,25734,25736,25737,25738,25739,25740,25741,25742,25743,25744,25747,25748,25751,25752,25754,25755,25756,25757,25759,25760,25761,25762,25763,25765,25766,25767,25768,25770,25771,25775,25777,25778,25779,25780,25782,25785,25787,25789,25790,25791,25793,25795,25796,25798,25799,25800,25801,25802,25803,25804,25807,25809,25811,25812,25813,25814,25817,25818,25819,25820,25821,25823,25824,25825,25827,25829,25831,25832,25833,25834,25835,25836,25837,25838,25839,25840,25841,25842,25843,25844,25845,25846,25847,25848,25849,25850,25851,25852,25853,25854,25855,25857,25858,25859,25860,25861,25862,25863,25864,25866,25867,25868,25869,25870,25871,25872,25873,25875,25876,25877,25878,25879,25881,25882,25883,25884,25885,25886,25887,25888,25889,25890,25891,25892,25894,25895,25896,25897,25898,25900,25901,25904,25905,25906,25907,25911,25914,25916,25917,25920,25921,25922,25923,25924,25926,25927,25930,25931,25933,25934,25936,25938,25939,25940,25943,25944,25946,25948,25951,25952,25953,25956,25957,25959,25960,25961,25962,25965,25966,25967,25969,25971,25973,25974,25976,25977,25978,25979,25980,25981,25982,25983,25984,25985,25986,25987,25988,25989,25990,25992,25993,25994,25997,25998,25999,26002,26004,26005,26006,26008,26010,26013,26014,26016,26018,26019,26022,26024,26026,26028,26030,26033,26034,26035,26036,26037,26038,26039,26040,26042,26043,26046,26047,26048,26050,26055,26056,26057,26058,26061,26064,26065,26067,26068,26069,26072,26073,26074,26075,26076,26077,26078,26079,26081,26083,26084,26090,26091,26098,26099,26100,26101,26104,26105,26107,26108,26109,26110,26111,26113,26116,26117,26119,26120,26121,26123,26125,26128,26129,26130,26134,26135,26136,26138,26139,26140,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26162,26163,26167,26168,26169,26170,26171,26173,26175,26176,26178,26180,26181,26182,26183,26184,26185,26186,26189,26190,26192,26193,26200,26201,26203,26204,26205,26206,26208,26210,26211,26213,26215,26217,26218,26219,26220,26221,26225,26226,26227,26229,26232,26233,26235,26236,26237,26239,26240,26241,26243,26245,26246,26248,26249,26250,26251,26253,26254,26255,26256,26258,26259,26260,26261,26264,26265,26266,26267,26268,26270,26271,26272,26273,26274,26275,26276,26277,26278,26281,26282,26283,26284,26285,26287,26288,26289,26290,26291,26293,26294,26295,26296,26298,26299,26300,26301,26303,26304,26305,26306,26307,26308,26309,26310,26311,26312,26313,26314,26315,26316,26317,26318,26319,26320,26321,26322,26323,26324,26325,26326,26327,26328,26330,26334,26335,26336,26337,26338,26339,26340,26341,26343,26344,26346,26347,26348,26349,26350,26351,26353,26357,26358,26360,26362,26363,26365,26369,26370,26371,26372,26373,26374,26375,26380,26382,26383,26385,26386,26387,26390,26392,26393,26394,26396,26398,26400,26401,26402,26403,26404,26405,26407,26409,26414,26416,26418,26419,26422,26423,26424,26425,26427,26428,26430,26431,26433,26436,26437,26439,26442,26443,26445,26450,26452,26453,26455,26456,26457,26458,26459,26461,26466,26467,26468,26470,26471,26475,26476,26478,26481,26484,26486,26488,26489,26490,26491,26493,26496,26498,26499,26501,26502,26504,26506,26508,26509,26510,26511,26513,26514,26515,26516,26518,26521,26523,26527,26528,26529,26532,26534,26537,26540,26542,26545,26546,26548,26553,26554,26555,26556,26557,26558,26559,26560,26562,26565,26566,26567,26568,26569,26570,26571,26572,26573,26574,26581,26582,26583,26587,26591,26593,26595,26596,26598,26599,26600,26602,26603,26605,26606,26610,26613,26614,26615,26616,26617,26618,26619,26620,26622,26625,26626,26627,26628,26630,26637,26640,26642,26644,26645,26648,26649,26650,26651,26652,26654,26655,26656,26658,26659,26660,26661,26662,26663,26664,26667,26668,26669,26670,26671,26672,26673,26676,26677,26678,26682,26683,26687,26695,26699,26701,26703,26706,26710,26711,26712,26713,26714,26715,26716,26717,26718,26719,26730,26732,26733,26734,26735,26736,26737,26738,26739,26741,26744,26745,26746,26747,26748,26749,26750,26751,26752,26754,26756,26759,26760,26761,26762,26763,26764,26765,26766,26768,26769,26770,26772,26773,26774,26776,26777,26778,26779,26780,26781,26782,26783,26784,26785,26787,26788,26789,26793,26794,26795,26796,26798,26801,26802,26804,26806,26807,26808,26809,26810,26811,26812,26813,26814,26815,26817,26819,26820,26821,26822,26823,26824,26826,26828,26830,26831,26832,26833,26835,26836,26838,26839,26841,26843,26844,26845,26846,26847,26849,26850,26852,26853,26854,26855,26856,26857,26858,26859,26860,26861,26863,26866,26867,26868,26870,26871,26872,26875,26877,26878,26879,26880,26882,26883,26884,26886,26887,26888,26889,26890,26892,26895,26897,26899,26900,26901,26902,26903,26904,26905,26906,26907,26908,26909,26910,26913,26914,26915,26917,26918,26919,26920,26921,26922,26923,26924,26926,26927,26929,26930,26931,26933,26934,26935,26936,26938,26939,26940,26942,26944,26945,26947,26948,26949,26950,26951,26952,26953,26954,26955,26956,26957,26958,26959,26960,26961,26962,26963,26965,26966,26968,26969,26971,26972,26975,26977,26978,26980,26981,26983,26984,26985,26986,26988,26989,26991,26992,26994,26995,26996,26997,26998,27002,27003,27005,27006,27007,27009,27011,27013,27018,27019,27020,27022,27023,27024,27025,27026,27027,27030,27031,27033,27034,27037,27038,27039,27040,27041,27042,27043,27044,27045,27046,27049,27050,27052,27054,27055,27056,27058,27059,27061,27062,27064,27065,27066,27068,27069,27070,27071,27072,27074,27075,27076,27077,27078,27079,27080,27081,27083,27085,27087,27089,27090,27091,27093,27094,27095,27096,27097,27098,27100,27101,27102,27105,27106,27107,27108,27109,27110,27111,27112,27113,27114,27115,27116,27118,27119,27120,27121,27123,27124,27125,27126,27127,27128,27129,27130,27131,27132,27134,27136,27137,27138,27139,27140,27141,27142,27143,27144,27145,27147,27148,27149,27150,27151,27152,27153,27154,27155,27156,27157,27158,27161,27162,27163,27164,27165,27166,27168,27170,27171,27172,27173,27174,27175,27177,27179,27180,27181,27182,27184,27186,27187,27188,27190,27191,27192,27193,27194,27195,27196,27199,27200,27201,27202,27203,27205,27206,27208,27209,27210,27211,27212,27213,27214,27215,27217,27218,27219,27220,27221,27222,27223,27226,27228,27229,27230,27231,27232,27234,27235,27236,27238,27239,27240,27241,27242,27243,27244,27245,27246,27247,27248,27250,27251,27252,27253,27254,27255,27256,27258,27259,27261,27262,27263,27265,27266,27267,27269,27270,27271,27272,27273,27274,27275,27276,27277,27279,27282,27283,27284,27285,27286,27288,27289,27290,27291,27292,27293,27294,27295,27297,27298,27299,27300,27301,27302,27303,27304,27306,27309,27310,27311,27312,27313,27314,27315,27316,27317,27318,27319,27320,27321,27322,27323,27324,27325,27326,27327,27328,27329,27330,27331,27332,27333,27334,27335,27336,27337,27338,27339,27340,27341,27342,27343,27344,27345,27346,27347,27348,27349,27350,27351,27352,27353,27354,27355,27356,27357,27358,27359,27360,27361,27362,27363,27364,27365,27366,27367,27368,27369,27370,27371,27372,27373,27374,27375,27376,27377,27378,27379,27380,27381,27382,27383,27384,27385,27386,27387,27388,27389,27390,27391,27392,27393,27394,27395,27396,27397,27398,27399,27400,27401,27402,27403,27404,27405,27406,27407,27408,27409,27410,27411,27412,27413,27414,27415,27416,27417,27418,27419,27420,27421,27422,27423,27429,27430,27432,27433,27434,27435,27436,27437,27438,27439,27440,27441,27443,27444,27445,27446,27448,27451,27452,27453,27455,27456,27457,27458,27460,27461,27464,27466,27467,27469,27470,27471,27472,27473,27474,27475,27476,27477,27478,27479,27480,27482,27483,27484,27485,27486,27487,27488,27489,27496,27497,27499,27500,27501,27502,27503,27504,27505,27506,27507,27508,27509,27510,27511,27512,27514,27517,27518,27519,27520,27525,27528,27532,27534,27535,27536,27537,27540,27541,27543,27544,27545,27548,27549,27550,27551,27552,27554,27555,27556,27557,27558,27559,27560,27561,27563,27564,27565,27566,27567,27568,27569,27570,27574,27576,27577,27578,27579,27580,27581,27582,27584,27587,27588,27590,27591,27592,27593,27594,27596,27598,27600,27601,27608,27610,27612,27613,27614,27615,27616,27618,27619,27620,27621,27622,27623,27624,27625,27628,27629,27630,27632,27633,27634,27636,27638,27639,27640,27642,27643,27644,27646,27647,27648,27649,27650,27651,27652,27656,27657,27658,27659,27660,27662,27666,27671,27676,27677,27678,27680,27683,27685,27691,27692,27693,27697,27699,27702,27703,27705,27706,27707,27708,27710,27711,27715,27716,27717,27720,27723,27724,27725,27726,27727,27729,27730,27731,27734,27736,27737,27738,27746,27747,27749,27750,27751,27755,27756,27757,27758,27759,27761,27763,27765,27767,27768,27770,27771,27772,27775,27776,27780,27783,27786,27787,27789,27790,27793,27794,27797,27798,27799,27800,27802,27804,27805,27806,27808,27810,27816,27820,27823,27824,27828,27829,27830,27831,27834,27840,27841,27842,27843,27846,27847,27848,27851,27853,27854,27855,27857,27858,27864,27865,27866,27868,27869,27871,27876,27878,27879,27881,27884,27885,27890,27892,27897,27903,27904,27906,27907,27909,27910,27912,27913,27914,27917,27919,27920,27921,27923,27924,27925,27926,27928,27932,27933,27935,27936,27937,27938,27939,27940,27942,27944,27945,27948,27949,27951,27952,27956,27958,27959,27960,27962,27967,27968,27970,27972,27977,27980,27984,27989,27990,27991,27992,27995,27997,27999,28001,28002,28004,28005,28007,28008,28011,28012,28013,28016,28017,28018,28019,28021,28022,28025,28026,28027,28029,28030,28031,28032,28033,28035,28036,28038,28039,28042,28043,28045,28047,28048,28050,28054,28055,28056,28057,28058,28060,28066,28069,28076,28077,28080,28081,28083,28084,28086,28087,28089,28090,28091,28092,28093,28094,28097,28098,28099,28104,28105,28106,28109,28110,28111,28112,28114,28115,28116,28117,28119,28122,28123,28124,28127,28130,28131,28133,28135,28136,28137,28138,28141,28143,28144,28146,28148,28149,28150,28152,28154,28157,28158,28159,28160,28161,28162,28163,28164,28166,28167,28168,28169,28171,28175,28178,28179,28181,28184,28185,28187,28188,28190,28191,28194,28198,28199,28200,28202,28204,28206,28208,28209,28211,28213,28214,28215,28217,28219,28220,28221,28222,28223,28224,28225,28226,28229,28230,28231,28232,28233,28234,28235,28236,28239,28240,28241,28242,28245,28247,28249,28250,28252,28253,28254,28256,28257,28258,28259,28260,28261,28262,28263,28264,28265,28266,28268,28269,28271,28272,28273,28274,28275,28276,28277,28278,28279,28280,28281,28282,28283,28284,28285,28288,28289,28290,28292,28295,28296,28298,28299,28300,28301,28302,28305,28306,28307,28308,28309,28310,28311,28313,28314,28315,28317,28318,28320,28321,28323,28324,28326,28328,28329,28331,28332,28333,28334,28336,28339,28341,28344,28345,28348,28350,28351,28352,28355,28356,28357,28358,28360,28361,28362,28364,28365,28366,28368,28370,28374,28376,28377,28379,28380,28381,28387,28391,28394,28395,28396,28397,28398,28399,28400,28401,28402,28403,28405,28406,28407,28408,28410,28411,28412,28413,28414,28415,28416,28417,28419,28420,28421,28423,28424,28426,28427,28428,28429,28430,28432,28433,28434,28438,28439,28440,28441,28442,28443,28444,28445,28446,28447,28449,28450,28451,28453,28454,28455,28456,28460,28462,28464,28466,28468,28469,28471,28472,28473,28474,28475,28476,28477,28479,28480,28481,28482,28483,28484,28485,28488,28489,28490,28492,28494,28495,28496,28497,28498,28499,28500,28501,28502,28503,28505,28506,28507,28509,28511,28512,28513,28515,28516,28517,28519,28520,28521,28522,28523,28524,28527,28528,28529,28531,28533,28534,28535,28537,28539,28541,28542,28543,28544,28545,28546,28547,28549,28550,28551,28554,28555,28559,28560,28561,28562,28563,28564,28565,28566,28567,28568,28569,28570,28571,28573,28574,28575,28576,28578,28579,28580,28581,28582,28584,28585,28586,28587,28588,28589,28590,28591,28592,28593,28594,28596,28597,28599,28600,28602,28603,28604,28605,28606,28607,28609,28611,28612,28613,28614,28615,28616,28618,28619,28620,28621,28622,28623,28624,28627,28628,28629,28630,28631,28632,28633,28634,28635,28636,28637,28639,28642,28643,28644,28645,28646,28647,28648,28649,28650,28651,28652,28653,28656,28657,28658,28659,28660,28661,28662,28663,28664,28665,28666,28667,28668,28669,28670,28671,28672,28673,28674,28675,28676,28677,28678,28679,28680,28681,28682,28683,28684,28685,28686,28687,28688,28690,28691,28692,28693,28694,28695,28696,28697,28700,28701,28702,28703,28704,28705,28706,28708,28709,28710,28711,28712,28713,28714,28715,28716,28717,28718,28719,28720,28721,28722,28723,28724,28726,28727,28728,28730,28731,28732,28733,28734,28735,28736,28737,28738,28739,28740,28741,28742,28743,28744,28745,28746,28747,28749,28750,28752,28753,28754,28755,28756,28757,28758,28759,28760,28761,28762,28763,28764,28765,28767,28768,28769,28770,28771,28772,28773,28774,28775,28776,28777,28778,28782,28785,28786,28787,28788,28791,28793,28794,28795,28797,28801,28802,28803,28804,28806,28807,28808,28811,28812,28813,28815,28816,28817,28819,28823,28824,28826,28827,28830,28831,28832,28833,28834,28835,28836,28837,28838,28839,28840,28841,28842,28848,28850,28852,28853,28854,28858,28862,28863,28868,28869,28870,28871,28873,28875,28876,28877,28878,28879,28880,28881,28882,28883,28884,28885,28886,28887,28890,28892,28893,28894,28896,28897,28898,28899,28901,28906,28910,28912,28913,28914,28915,28916,28917,28918,28920,28922,28923,28924,28926,28927,28928,28929,28930,28931,28932,28933,28934,28935,28936,28939,28940,28941,28942,28943,28945,28946,28948,28951,28955,28956,28957,28958,28959,28960,28961,28962,28963,28964,28965,28967,28968,28969,28970,28971,28972,28973,28974,28978,28979,28980,28981,28983,28984,28985,28986,28987,28988,28989,28990,28991,28992,28993,28994,28995,28996,28998,28999,29000,29001,29003,29005,29007,29008,29009,29010,29011,29012,29013,29014,29015,29016,29017,29018,29019,29021,29023,29024,29025,29026,29027,29029,29033,29034,29035,29036,29037,29039,29040,29041,29044,29045,29046,29047,29049,29051,29052,29054,29055,29056,29057,29058,29059,29061,29062,29063,29064,29065,29067,29068,29069,29070,29072,29073,29074,29075,29077,29078,29079,29082,29083,29084,29085,29086,29089,29090,29091,29092,29093,29094,29095,29097,29098,29099,29101,29102,29103,29104,29105,29106,29108,29110,29111,29112,29114,29115,29116,29117,29118,29119,29120,29121,29122,29124,29125,29126,29127,29128,29129,29130,29131,29132,29133,29135,29136,29137,29138,29139,29142,29143,29144,29145,29146,29147,29148,29149,29150,29151,29153,29154,29155,29156,29158,29160,29161,29162,29163,29164,29165,29167,29168,29169,29170,29171,29172,29173,29174,29175,29176,29178,29179,29180,29181,29182,29183,29184,29185,29186,29187,29188,29189,29191,29192,29193,29194,29195,29196,29197,29198,29199,29200,29201,29202,29203,29204,29205,29206,29207,29208,29209,29210,29211,29212,29214,29215,29216,29217,29218,29219,29220,29221,29222,29223,29225,29227,29229,29230,29231,29234,29235,29236,29242,29244,29246,29248,29249,29250,29251,29252,29253,29254,29257,29258,29259,29262,29263,29264,29265,29267,29268,29269,29271,29272,29274,29276,29278,29280,29283,29284,29285,29288,29290,29291,29292,29293,29296,29297,29299,29300,29302,29303,29304,29307,29308,29309,29314,29315,29317,29318,29319,29320,29321,29324,29326,29328,29329,29331,29332,29333,29334,29335,29336,29337,29338,29339,29340,29341,29342,29344,29345,29346,29347,29348,29349,29350,29351,29352,29353,29354,29355,29358,29361,29362,29363,29365,29370,29371,29372,29373,29374,29375,29376,29381,29382,29383,29385,29386,29387,29388,29391,29393,29395,29396,29397,29398,29400,29402,29403,58566,58567,58568,58569,58570,58571,58572,58573,58574,58575,58576,58577,58578,58579,58580,58581,58582,58583,58584,58585,58586,58587,58588,58589,58590,58591,58592,58593,58594,58595,58596,58597,58598,58599,58600,58601,58602,58603,58604,58605,58606,58607,58608,58609,58610,58611,58612,58613,58614,58615,58616,58617,58618,58619,58620,58621,58622,58623,58624,58625,58626,58627,58628,58629,58630,58631,58632,58633,58634,58635,58636,58637,58638,58639,58640,58641,58642,58643,58644,58645,58646,58647,58648,58649,58650,58651,58652,58653,58654,58655,58656,58657,58658,58659,58660,58661,12288,12289,12290,183,713,711,168,12291,12293,8212,65374,8214,8230,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12310,12311,12304,12305,177,215,247,8758,8743,8744,8721,8719,8746,8745,8712,8759,8730,8869,8741,8736,8978,8857,8747,8750,8801,8780,8776,8765,8733,8800,8814,8815,8804,8805,8734,8757,8756,9794,9792,176,8242,8243,8451,65284,164,65504,65505,8240,167,8470,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,8251,8594,8592,8593,8595,12307,58662,58663,58664,58665,58666,58667,58668,58669,58670,58671,58672,58673,58674,58675,58676,58677,58678,58679,58680,58681,58682,58683,58684,58685,58686,58687,58688,58689,58690,58691,58692,58693,58694,58695,58696,58697,58698,58699,58700,58701,58702,58703,58704,58705,58706,58707,58708,58709,58710,58711,58712,58713,58714,58715,58716,58717,58718,58719,58720,58721,58722,58723,58724,58725,58726,58727,58728,58729,58730,58731,58732,58733,58734,58735,58736,58737,58738,58739,58740,58741,58742,58743,58744,58745,58746,58747,58748,58749,58750,58751,58752,58753,58754,58755,58756,58757,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,59238,59239,59240,59241,59242,59243,9352,9353,9354,9355,9356,9357,9358,9359,9360,9361,9362,9363,9364,9365,9366,9367,9368,9369,9370,9371,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,9347,9348,9349,9350,9351,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,8364,59245,12832,12833,12834,12835,12836,12837,12838,12839,12840,12841,59246,59247,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8555,59248,59249,58758,58759,58760,58761,58762,58763,58764,58765,58766,58767,58768,58769,58770,58771,58772,58773,58774,58775,58776,58777,58778,58779,58780,58781,58782,58783,58784,58785,58786,58787,58788,58789,58790,58791,58792,58793,58794,58795,58796,58797,58798,58799,58800,58801,58802,58803,58804,58805,58806,58807,58808,58809,58810,58811,58812,58813,58814,58815,58816,58817,58818,58819,58820,58821,58822,58823,58824,58825,58826,58827,58828,58829,58830,58831,58832,58833,58834,58835,58836,58837,58838,58839,58840,58841,58842,58843,58844,58845,58846,58847,58848,58849,58850,58851,58852,12288,65281,65282,65283,65509,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65340,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,58854,58855,58856,58857,58858,58859,58860,58861,58862,58863,58864,58865,58866,58867,58868,58869,58870,58871,58872,58873,58874,58875,58876,58877,58878,58879,58880,58881,58882,58883,58884,58885,58886,58887,58888,58889,58890,58891,58892,58893,58894,58895,58896,58897,58898,58899,58900,58901,58902,58903,58904,58905,58906,58907,58908,58909,58910,58911,58912,58913,58914,58915,58916,58917,58918,58919,58920,58921,58922,58923,58924,58925,58926,58927,58928,58929,58930,58931,58932,58933,58934,58935,58936,58937,58938,58939,58940,58941,58942,58943,58944,58945,58946,58947,58948,58949,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,59250,59251,59252,59253,59254,59255,59256,59257,59258,59259,59260,58950,58951,58952,58953,58954,58955,58956,58957,58958,58959,58960,58961,58962,58963,58964,58965,58966,58967,58968,58969,58970,58971,58972,58973,58974,58975,58976,58977,58978,58979,58980,58981,58982,58983,58984,58985,58986,58987,58988,58989,58990,58991,58992,58993,58994,58995,58996,58997,58998,58999,59000,59001,59002,59003,59004,59005,59006,59007,59008,59009,59010,59011,59012,59013,59014,59015,59016,59017,59018,59019,59020,59021,59022,59023,59024,59025,59026,59027,59028,59029,59030,59031,59032,59033,59034,59035,59036,59037,59038,59039,59040,59041,59042,59043,59044,59045,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,59261,59262,59263,59264,59265,59266,59267,59268,59046,59047,59048,59049,59050,59051,59052,59053,59054,59055,59056,59057,59058,59059,59060,59061,59062,59063,59064,59065,59066,59067,59068,59069,59070,59071,59072,59073,59074,59075,59076,59077,59078,59079,59080,59081,59082,59083,59084,59085,59086,59087,59088,59089,59090,59091,59092,59093,59094,59095,59096,59097,59098,59099,59100,59101,59102,59103,59104,59105,59106,59107,59108,59109,59110,59111,59112,59113,59114,59115,59116,59117,59118,59119,59120,59121,59122,59123,59124,59125,59126,59127,59128,59129,59130,59131,59132,59133,59134,59135,59136,59137,59138,59139,59140,59141,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,59269,59270,59271,59272,59273,59274,59275,59276,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,59277,59278,59279,59280,59281,59282,59283,65077,65078,65081,65082,65087,65088,65085,65086,65089,65090,65091,65092,59284,59285,65083,65084,65079,65080,65073,59286,65075,65076,59287,59288,59289,59290,59291,59292,59293,59294,59295,59142,59143,59144,59145,59146,59147,59148,59149,59150,59151,59152,59153,59154,59155,59156,59157,59158,59159,59160,59161,59162,59163,59164,59165,59166,59167,59168,59169,59170,59171,59172,59173,59174,59175,59176,59177,59178,59179,59180,59181,59182,59183,59184,59185,59186,59187,59188,59189,59190,59191,59192,59193,59194,59195,59196,59197,59198,59199,59200,59201,59202,59203,59204,59205,59206,59207,59208,59209,59210,59211,59212,59213,59214,59215,59216,59217,59218,59219,59220,59221,59222,59223,59224,59225,59226,59227,59228,59229,59230,59231,59232,59233,59234,59235,59236,59237,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,59296,59297,59298,59299,59300,59301,59302,59303,59304,59305,59306,59307,59308,59309,59310,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,59311,59312,59313,59314,59315,59316,59317,59318,59319,59320,59321,59322,59323,714,715,729,8211,8213,8229,8245,8453,8457,8598,8599,8600,8601,8725,8735,8739,8786,8806,8807,8895,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9581,9582,9583,9584,9585,9586,9587,9601,9602,9603,9604,9605,9606,9607,9608,9609,9610,9611,9612,9613,9614,9615,9619,9620,9621,9660,9661,9698,9699,9700,9701,9737,8853,12306,12317,12318,59324,59325,59326,59327,59328,59329,59330,59331,59332,59333,59334,257,225,462,224,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,234,593,7743,324,328,505,609,59337,59338,59339,59340,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,59341,59342,59343,59344,59345,59346,59347,59348,59349,59350,59351,59352,59353,59354,59355,59356,59357,59358,59359,59360,59361,12321,12322,12323,12324,12325,12326,12327,12328,12329,12963,13198,13199,13212,13213,13214,13217,13252,13262,13265,13266,13269,65072,65506,65508,59362,8481,12849,59363,8208,59364,59365,59366,12540,12443,12444,12541,12542,12294,12445,12446,65097,65098,65099,65100,65101,65102,65103,65104,65105,65106,65108,65109,65110,65111,65113,65114,65115,65116,65117,65118,65119,65120,65121,65122,65123,65124,65125,65126,65128,65129,65130,65131,12350,12272,12273,12274,12275,12276,12277,12278,12279,12280,12281,12282,12283,12295,59380,59381,59382,59383,59384,59385,59386,59387,59388,59389,59390,59391,59392,9472,9473,9474,9475,9476,9477,9478,9479,9480,9481,9482,9483,9484,9485,9486,9487,9488,9489,9490,9491,9492,9493,9494,9495,9496,9497,9498,9499,9500,9501,9502,9503,9504,9505,9506,9507,9508,9509,9510,9511,9512,9513,9514,9515,9516,9517,9518,9519,9520,9521,9522,9523,9524,9525,9526,9527,9528,9529,9530,9531,9532,9533,9534,9535,9536,9537,9538,9539,9540,9541,9542,9543,9544,9545,9546,9547,59393,59394,59395,59396,59397,59398,59399,59400,59401,59402,59403,59404,59405,59406,59407,29404,29405,29407,29410,29411,29412,29413,29414,29415,29418,29419,29429,29430,29433,29437,29438,29439,29440,29442,29444,29445,29446,29447,29448,29449,29451,29452,29453,29455,29456,29457,29458,29460,29464,29465,29466,29471,29472,29475,29476,29478,29479,29480,29485,29487,29488,29490,29491,29493,29494,29498,29499,29500,29501,29504,29505,29506,29507,29508,29509,29510,29511,29512,29513,29514,29515,29516,29518,29519,29521,29523,29524,29525,29526,29528,29529,29530,29531,29532,29533,29534,29535,29537,29538,29539,29540,29541,29542,29543,29544,29545,29546,29547,29550,29552,29553,57344,57345,57346,57347,57348,57349,57350,57351,57352,57353,57354,57355,57356,57357,57358,57359,57360,57361,57362,57363,57364,57365,57366,57367,57368,57369,57370,57371,57372,57373,57374,57375,57376,57377,57378,57379,57380,57381,57382,57383,57384,57385,57386,57387,57388,57389,57390,57391,57392,57393,57394,57395,57396,57397,57398,57399,57400,57401,57402,57403,57404,57405,57406,57407,57408,57409,57410,57411,57412,57413,57414,57415,57416,57417,57418,57419,57420,57421,57422,57423,57424,57425,57426,57427,57428,57429,57430,57431,57432,57433,57434,57435,57436,57437,29554,29555,29556,29557,29558,29559,29560,29561,29562,29563,29564,29565,29567,29568,29569,29570,29571,29573,29574,29576,29578,29580,29581,29583,29584,29586,29587,29588,29589,29591,29592,29593,29594,29596,29597,29598,29600,29601,29603,29604,29605,29606,29607,29608,29610,29612,29613,29617,29620,29621,29622,29624,29625,29628,29629,29630,29631,29633,29635,29636,29637,29638,29639,29643,29644,29646,29650,29651,29652,29653,29654,29655,29656,29658,29659,29660,29661,29663,29665,29666,29667,29668,29670,29672,29674,29675,29676,29678,29679,29680,29681,29683,29684,29685,29686,29687,57438,57439,57440,57441,57442,57443,57444,57445,57446,57447,57448,57449,57450,57451,57452,57453,57454,57455,57456,57457,57458,57459,57460,57461,57462,57463,57464,57465,57466,57467,57468,57469,57470,57471,57472,57473,57474,57475,57476,57477,57478,57479,57480,57481,57482,57483,57484,57485,57486,57487,57488,57489,57490,57491,57492,57493,57494,57495,57496,57497,57498,57499,57500,57501,57502,57503,57504,57505,57506,57507,57508,57509,57510,57511,57512,57513,57514,57515,57516,57517,57518,57519,57520,57521,57522,57523,57524,57525,57526,57527,57528,57529,57530,57531,29688,29689,29690,29691,29692,29693,29694,29695,29696,29697,29698,29700,29703,29704,29707,29708,29709,29710,29713,29714,29715,29716,29717,29718,29719,29720,29721,29724,29725,29726,29727,29728,29729,29731,29732,29735,29737,29739,29741,29743,29745,29746,29751,29752,29753,29754,29755,29757,29758,29759,29760,29762,29763,29764,29765,29766,29767,29768,29769,29770,29771,29772,29773,29774,29775,29776,29777,29778,29779,29780,29782,29784,29789,29792,29793,29794,29795,29796,29797,29798,29799,29800,29801,29802,29803,29804,29806,29807,29809,29810,29811,29812,29813,29816,29817,29818,57532,57533,57534,57535,57536,57537,57538,57539,57540,57541,57542,57543,57544,57545,57546,57547,57548,57549,57550,57551,57552,57553,57554,57555,57556,57557,57558,57559,57560,57561,57562,57563,57564,57565,57566,57567,57568,57569,57570,57571,57572,57573,57574,57575,57576,57577,57578,57579,57580,57581,57582,57583,57584,57585,57586,57587,57588,57589,57590,57591,57592,57593,57594,57595,57596,57597,57598,57599,57600,57601,57602,57603,57604,57605,57606,57607,57608,57609,57610,57611,57612,57613,57614,57615,57616,57617,57618,57619,57620,57621,57622,57623,57624,57625,29819,29820,29821,29823,29826,29828,29829,29830,29832,29833,29834,29836,29837,29839,29841,29842,29843,29844,29845,29846,29847,29848,29849,29850,29851,29853,29855,29856,29857,29858,29859,29860,29861,29862,29866,29867,29868,29869,29870,29871,29872,29873,29874,29875,29876,29877,29878,29879,29880,29881,29883,29884,29885,29886,29887,29888,29889,29890,29891,29892,29893,29894,29895,29896,29897,29898,29899,29900,29901,29902,29903,29904,29905,29907,29908,29909,29910,29911,29912,29913,29914,29915,29917,29919,29921,29925,29927,29928,29929,29930,29931,29932,29933,29936,29937,29938,57626,57627,57628,57629,57630,57631,57632,57633,57634,57635,57636,57637,57638,57639,57640,57641,57642,57643,57644,57645,57646,57647,57648,57649,57650,57651,57652,57653,57654,57655,57656,57657,57658,57659,57660,57661,57662,57663,57664,57665,57666,57667,57668,57669,57670,57671,57672,57673,57674,57675,57676,57677,57678,57679,57680,57681,57682,57683,57684,57685,57686,57687,57688,57689,57690,57691,57692,57693,57694,57695,57696,57697,57698,57699,57700,57701,57702,57703,57704,57705,57706,57707,57708,57709,57710,57711,57712,57713,57714,57715,57716,57717,57718,57719,29939,29941,29944,29945,29946,29947,29948,29949,29950,29952,29953,29954,29955,29957,29958,29959,29960,29961,29962,29963,29964,29966,29968,29970,29972,29973,29974,29975,29979,29981,29982,29984,29985,29986,29987,29988,29990,29991,29994,29998,30004,30006,30009,30012,30013,30015,30017,30018,30019,30020,30022,30023,30025,30026,30029,30032,30033,30034,30035,30037,30038,30039,30040,30045,30046,30047,30048,30049,30050,30051,30052,30055,30056,30057,30059,30060,30061,30062,30063,30064,30065,30067,30069,30070,30071,30074,30075,30076,30077,30078,30080,30081,30082,30084,30085,30087,57720,57721,57722,57723,57724,57725,57726,57727,57728,57729,57730,57731,57732,57733,57734,57735,57736,57737,57738,57739,57740,57741,57742,57743,57744,57745,57746,57747,57748,57749,57750,57751,57752,57753,57754,57755,57756,57757,57758,57759,57760,57761,57762,57763,57764,57765,57766,57767,57768,57769,57770,57771,57772,57773,57774,57775,57776,57777,57778,57779,57780,57781,57782,57783,57784,57785,57786,57787,57788,57789,57790,57791,57792,57793,57794,57795,57796,57797,57798,57799,57800,57801,57802,57803,57804,57805,57806,57807,57808,57809,57810,57811,57812,57813,30088,30089,30090,30092,30093,30094,30096,30099,30101,30104,30107,30108,30110,30114,30118,30119,30120,30121,30122,30125,30134,30135,30138,30139,30143,30144,30145,30150,30155,30156,30158,30159,30160,30161,30163,30167,30169,30170,30172,30173,30175,30176,30177,30181,30185,30188,30189,30190,30191,30194,30195,30197,30198,30199,30200,30202,30203,30205,30206,30210,30212,30214,30215,30216,30217,30219,30221,30222,30223,30225,30226,30227,30228,30230,30234,30236,30237,30238,30241,30243,30247,30248,30252,30254,30255,30257,30258,30262,30263,30265,30266,30267,30269,30273,30274,30276,57814,57815,57816,57817,57818,57819,57820,57821,57822,57823,57824,57825,57826,57827,57828,57829,57830,57831,57832,57833,57834,57835,57836,57837,57838,57839,57840,57841,57842,57843,57844,57845,57846,57847,57848,57849,57850,57851,57852,57853,57854,57855,57856,57857,57858,57859,57860,57861,57862,57863,57864,57865,57866,57867,57868,57869,57870,57871,57872,57873,57874,57875,57876,57877,57878,57879,57880,57881,57882,57883,57884,57885,57886,57887,57888,57889,57890,57891,57892,57893,57894,57895,57896,57897,57898,57899,57900,57901,57902,57903,57904,57905,57906,57907,30277,30278,30279,30280,30281,30282,30283,30286,30287,30288,30289,30290,30291,30293,30295,30296,30297,30298,30299,30301,30303,30304,30305,30306,30308,30309,30310,30311,30312,30313,30314,30316,30317,30318,30320,30321,30322,30323,30324,30325,30326,30327,30329,30330,30332,30335,30336,30337,30339,30341,30345,30346,30348,30349,30351,30352,30354,30356,30357,30359,30360,30362,30363,30364,30365,30366,30367,30368,30369,30370,30371,30373,30374,30375,30376,30377,30378,30379,30380,30381,30383,30384,30387,30389,30390,30391,30392,30393,30394,30395,30396,30397,30398,30400,30401,30403,21834,38463,22467,25384,21710,21769,21696,30353,30284,34108,30702,33406,30861,29233,38552,38797,27688,23433,20474,25353,26263,23736,33018,26696,32942,26114,30414,20985,25942,29100,32753,34948,20658,22885,25034,28595,33453,25420,25170,21485,21543,31494,20843,30116,24052,25300,36299,38774,25226,32793,22365,38712,32610,29240,30333,26575,30334,25670,20336,36133,25308,31255,26001,29677,25644,25203,33324,39041,26495,29256,25198,25292,20276,29923,21322,21150,32458,37030,24110,26758,27036,33152,32465,26834,30917,34444,38225,20621,35876,33502,32990,21253,35090,21093,30404,30407,30409,30411,30412,30419,30421,30425,30426,30428,30429,30430,30432,30433,30434,30435,30436,30438,30439,30440,30441,30442,30443,30444,30445,30448,30451,30453,30454,30455,30458,30459,30461,30463,30464,30466,30467,30469,30470,30474,30476,30478,30479,30480,30481,30482,30483,30484,30485,30486,30487,30488,30491,30492,30493,30494,30497,30499,30500,30501,30503,30506,30507,30508,30510,30512,30513,30514,30515,30516,30521,30523,30525,30526,30527,30530,30532,30533,30534,30536,30537,30538,30539,30540,30541,30542,30543,30546,30547,30548,30549,30550,30551,30552,30553,30556,34180,38649,20445,22561,39281,23453,25265,25253,26292,35961,40077,29190,26479,30865,24754,21329,21271,36744,32972,36125,38049,20493,29384,22791,24811,28953,34987,22868,33519,26412,31528,23849,32503,29997,27893,36454,36856,36924,40763,27604,37145,31508,24444,30887,34006,34109,27605,27609,27606,24065,24199,30201,38381,25949,24330,24517,36767,22721,33218,36991,38491,38829,36793,32534,36140,25153,20415,21464,21342,36776,36777,36779,36941,26631,24426,33176,34920,40150,24971,21035,30250,24428,25996,28626,28392,23486,25672,20853,20912,26564,19993,31177,39292,28851,30557,30558,30559,30560,30564,30567,30569,30570,30573,30574,30575,30576,30577,30578,30579,30580,30581,30582,30583,30584,30586,30587,30588,30593,30594,30595,30598,30599,30600,30601,30602,30603,30607,30608,30611,30612,30613,30614,30615,30616,30617,30618,30619,30620,30621,30622,30625,30627,30628,30630,30632,30635,30637,30638,30639,30641,30642,30644,30646,30647,30648,30649,30650,30652,30654,30656,30657,30658,30659,30660,30661,30662,30663,30664,30665,30666,30667,30668,30670,30671,30672,30673,30674,30675,30676,30677,30678,30680,30681,30682,30685,30686,30687,30688,30689,30692,30149,24182,29627,33760,25773,25320,38069,27874,21338,21187,25615,38082,31636,20271,24091,33334,33046,33162,28196,27850,39539,25429,21340,21754,34917,22496,19981,24067,27493,31807,37096,24598,25830,29468,35009,26448,25165,36130,30572,36393,37319,24425,33756,34081,39184,21442,34453,27531,24813,24808,28799,33485,33329,20179,27815,34255,25805,31961,27133,26361,33609,21397,31574,20391,20876,27979,23618,36461,25554,21449,33580,33590,26597,30900,25661,23519,23700,24046,35815,25286,26612,35962,25600,25530,34633,39307,35863,32544,38130,20135,38416,39076,26124,29462,30694,30696,30698,30703,30704,30705,30706,30708,30709,30711,30713,30714,30715,30716,30723,30724,30725,30726,30727,30728,30730,30731,30734,30735,30736,30739,30741,30745,30747,30750,30752,30753,30754,30756,30760,30762,30763,30766,30767,30769,30770,30771,30773,30774,30781,30783,30785,30786,30787,30788,30790,30792,30793,30794,30795,30797,30799,30801,30803,30804,30808,30809,30810,30811,30812,30814,30815,30816,30817,30818,30819,30820,30821,30822,30823,30824,30825,30831,30832,30833,30834,30835,30836,30837,30838,30840,30841,30842,30843,30845,30846,30847,30848,30849,30850,30851,22330,23581,24120,38271,20607,32928,21378,25950,30021,21809,20513,36229,25220,38046,26397,22066,28526,24034,21557,28818,36710,25199,25764,25507,24443,28552,37108,33251,36784,23576,26216,24561,27785,38472,36225,34924,25745,31216,22478,27225,25104,21576,20056,31243,24809,28548,35802,25215,36894,39563,31204,21507,30196,25345,21273,27744,36831,24347,39536,32827,40831,20360,23610,36196,32709,26021,28861,20805,20914,34411,23815,23456,25277,37228,30068,36364,31264,24833,31609,20167,32504,30597,19985,33261,21021,20986,27249,21416,36487,38148,38607,28353,38500,26970,30852,30853,30854,30856,30858,30859,30863,30864,30866,30868,30869,30870,30873,30877,30878,30880,30882,30884,30886,30888,30889,30890,30891,30892,30893,30894,30895,30901,30902,30903,30904,30906,30907,30908,30909,30911,30912,30914,30915,30916,30918,30919,30920,30924,30925,30926,30927,30929,30930,30931,30934,30935,30936,30938,30939,30940,30941,30942,30943,30944,30945,30946,30947,30948,30949,30950,30951,30953,30954,30955,30957,30958,30959,30960,30961,30963,30965,30966,30968,30969,30971,30972,30973,30974,30975,30976,30978,30979,30980,30982,30983,30984,30985,30986,30987,30988,30784,20648,30679,25616,35302,22788,25571,24029,31359,26941,20256,33337,21912,20018,30126,31383,24162,24202,38383,21019,21561,28810,25462,38180,22402,26149,26943,37255,21767,28147,32431,34850,25139,32496,30133,33576,30913,38604,36766,24904,29943,35789,27492,21050,36176,27425,32874,33905,22257,21254,20174,19995,20945,31895,37259,31751,20419,36479,31713,31388,25703,23828,20652,33030,30209,31929,28140,32736,26449,23384,23544,30923,25774,25619,25514,25387,38169,25645,36798,31572,30249,25171,22823,21574,27513,20643,25140,24102,27526,20195,36151,34955,24453,36910,30989,30990,30991,30992,30993,30994,30996,30997,30998,30999,31000,31001,31002,31003,31004,31005,31007,31008,31009,31010,31011,31013,31014,31015,31016,31017,31018,31019,31020,31021,31022,31023,31024,31025,31026,31027,31029,31030,31031,31032,31033,31037,31039,31042,31043,31044,31045,31047,31050,31051,31052,31053,31054,31055,31056,31057,31058,31060,31061,31064,31065,31073,31075,31076,31078,31081,31082,31083,31084,31086,31088,31089,31090,31091,31092,31093,31094,31097,31099,31100,31101,31102,31103,31106,31107,31110,31111,31112,31113,31115,31116,31117,31118,31120,31121,31122,24608,32829,25285,20025,21333,37112,25528,32966,26086,27694,20294,24814,28129,35806,24377,34507,24403,25377,20826,33633,26723,20992,25443,36424,20498,23707,31095,23548,21040,31291,24764,36947,30423,24503,24471,30340,36460,28783,30331,31561,30634,20979,37011,22564,20302,28404,36842,25932,31515,29380,28068,32735,23265,25269,24213,22320,33922,31532,24093,24351,36882,32532,39072,25474,28359,30872,28857,20856,38747,22443,30005,20291,30008,24215,24806,22880,28096,27583,30857,21500,38613,20939,20993,25481,21514,38035,35843,36300,29241,30879,34678,36845,35853,21472,31123,31124,31125,31126,31127,31128,31129,31131,31132,31133,31134,31135,31136,31137,31138,31139,31140,31141,31142,31144,31145,31146,31147,31148,31149,31150,31151,31152,31153,31154,31156,31157,31158,31159,31160,31164,31167,31170,31172,31173,31175,31176,31178,31180,31182,31183,31184,31187,31188,31190,31191,31193,31194,31195,31196,31197,31198,31200,31201,31202,31205,31208,31210,31212,31214,31217,31218,31219,31220,31221,31222,31223,31225,31226,31228,31230,31231,31233,31236,31237,31239,31240,31241,31242,31244,31247,31248,31249,31250,31251,31253,31254,31256,31257,31259,31260,19969,30447,21486,38025,39030,40718,38189,23450,35746,20002,19996,20908,33891,25026,21160,26635,20375,24683,20923,27934,20828,25238,26007,38497,35910,36887,30168,37117,30563,27602,29322,29420,35835,22581,30585,36172,26460,38208,32922,24230,28193,22930,31471,30701,38203,27573,26029,32526,22534,20817,38431,23545,22697,21544,36466,25958,39039,22244,38045,30462,36929,25479,21702,22810,22842,22427,36530,26421,36346,33333,21057,24816,22549,34558,23784,40517,20420,39069,35769,23077,24694,21380,25212,36943,37122,39295,24681,32780,20799,32819,23572,39285,27953,20108,31261,31263,31265,31266,31268,31269,31270,31271,31272,31273,31274,31275,31276,31277,31278,31279,31280,31281,31282,31284,31285,31286,31288,31290,31294,31296,31297,31298,31299,31300,31301,31303,31304,31305,31306,31307,31308,31309,31310,31311,31312,31314,31315,31316,31317,31318,31320,31321,31322,31323,31324,31325,31326,31327,31328,31329,31330,31331,31332,31333,31334,31335,31336,31337,31338,31339,31340,31341,31342,31343,31345,31346,31347,31349,31355,31356,31357,31358,31362,31365,31367,31369,31370,31371,31372,31374,31375,31376,31379,31380,31385,31386,31387,31390,31393,31394,36144,21457,32602,31567,20240,20047,38400,27861,29648,34281,24070,30058,32763,27146,30718,38034,32321,20961,28902,21453,36820,33539,36137,29359,39277,27867,22346,33459,26041,32938,25151,38450,22952,20223,35775,32442,25918,33778,38750,21857,39134,32933,21290,35837,21536,32954,24223,27832,36153,33452,37210,21545,27675,20998,32439,22367,28954,27774,31881,22859,20221,24575,24868,31914,20016,23553,26539,34562,23792,38155,39118,30127,28925,36898,20911,32541,35773,22857,20964,20315,21542,22827,25975,32932,23413,25206,25282,36752,24133,27679,31526,20239,20440,26381,31395,31396,31399,31401,31402,31403,31406,31407,31408,31409,31410,31412,31413,31414,31415,31416,31417,31418,31419,31420,31421,31422,31424,31425,31426,31427,31428,31429,31430,31431,31432,31433,31434,31436,31437,31438,31439,31440,31441,31442,31443,31444,31445,31447,31448,31450,31451,31452,31453,31457,31458,31460,31463,31464,31465,31466,31467,31468,31470,31472,31473,31474,31475,31476,31477,31478,31479,31480,31483,31484,31486,31488,31489,31490,31493,31495,31497,31500,31501,31502,31504,31506,31507,31510,31511,31512,31514,31516,31517,31519,31521,31522,31523,31527,31529,31533,28014,28074,31119,34993,24343,29995,25242,36741,20463,37340,26023,33071,33105,24220,33104,36212,21103,35206,36171,22797,20613,20184,38428,29238,33145,36127,23500,35747,38468,22919,32538,21648,22134,22030,35813,25913,27010,38041,30422,28297,24178,29976,26438,26577,31487,32925,36214,24863,31174,25954,36195,20872,21018,38050,32568,32923,32434,23703,28207,26464,31705,30347,39640,33167,32660,31957,25630,38224,31295,21578,21733,27468,25601,25096,40509,33011,30105,21106,38761,33883,26684,34532,38401,38548,38124,20010,21508,32473,26681,36319,32789,26356,24218,32697,31535,31536,31538,31540,31541,31542,31543,31545,31547,31549,31551,31552,31553,31554,31555,31556,31558,31560,31562,31565,31566,31571,31573,31575,31577,31580,31582,31583,31585,31587,31588,31589,31590,31591,31592,31593,31594,31595,31596,31597,31599,31600,31603,31604,31606,31608,31610,31612,31613,31615,31617,31618,31619,31620,31622,31623,31624,31625,31626,31627,31628,31630,31631,31633,31634,31635,31638,31640,31641,31642,31643,31646,31647,31648,31651,31652,31653,31662,31663,31664,31666,31667,31669,31670,31671,31673,31674,31675,31676,31677,31678,31679,31680,31682,31683,31684,22466,32831,26775,24037,25915,21151,24685,40858,20379,36524,20844,23467,24339,24041,27742,25329,36129,20849,38057,21246,27807,33503,29399,22434,26500,36141,22815,36764,33735,21653,31629,20272,27837,23396,22993,40723,21476,34506,39592,35895,32929,25925,39038,22266,38599,21038,29916,21072,23521,25346,35074,20054,25296,24618,26874,20851,23448,20896,35266,31649,39302,32592,24815,28748,36143,20809,24191,36891,29808,35268,22317,30789,24402,40863,38394,36712,39740,35809,30328,26690,26588,36330,36149,21053,36746,28378,26829,38149,37101,22269,26524,35065,36807,21704,31685,31688,31689,31690,31691,31693,31694,31695,31696,31698,31700,31701,31702,31703,31704,31707,31708,31710,31711,31712,31714,31715,31716,31719,31720,31721,31723,31724,31725,31727,31728,31730,31731,31732,31733,31734,31736,31737,31738,31739,31741,31743,31744,31745,31746,31747,31748,31749,31750,31752,31753,31754,31757,31758,31760,31761,31762,31763,31764,31765,31767,31768,31769,31770,31771,31772,31773,31774,31776,31777,31778,31779,31780,31781,31784,31785,31787,31788,31789,31790,31791,31792,31793,31794,31795,31796,31797,31798,31799,31801,31802,31803,31804,31805,31806,31810,39608,23401,28023,27686,20133,23475,39559,37219,25000,37039,38889,21547,28085,23506,20989,21898,32597,32752,25788,25421,26097,25022,24717,28938,27735,27721,22831,26477,33322,22741,22158,35946,27627,37085,22909,32791,21495,28009,21621,21917,33655,33743,26680,31166,21644,20309,21512,30418,35977,38402,27827,28088,36203,35088,40548,36154,22079,40657,30165,24456,29408,24680,21756,20136,27178,34913,24658,36720,21700,28888,34425,40511,27946,23439,24344,32418,21897,20399,29492,21564,21402,20505,21518,21628,20046,24573,29786,22774,33899,32993,34676,29392,31946,28246,31811,31812,31813,31814,31815,31816,31817,31818,31819,31820,31822,31823,31824,31825,31826,31827,31828,31829,31830,31831,31832,31833,31834,31835,31836,31837,31838,31839,31840,31841,31842,31843,31844,31845,31846,31847,31848,31849,31850,31851,31852,31853,31854,31855,31856,31857,31858,31861,31862,31863,31864,31865,31866,31870,31871,31872,31873,31874,31875,31876,31877,31878,31879,31880,31882,31883,31884,31885,31886,31887,31888,31891,31892,31894,31897,31898,31899,31904,31905,31907,31910,31911,31912,31913,31915,31916,31917,31919,31920,31924,31925,31926,31927,31928,31930,31931,24359,34382,21804,25252,20114,27818,25143,33457,21719,21326,29502,28369,30011,21010,21270,35805,27088,24458,24576,28142,22351,27426,29615,26707,36824,32531,25442,24739,21796,30186,35938,28949,28067,23462,24187,33618,24908,40644,30970,34647,31783,30343,20976,24822,29004,26179,24140,24653,35854,28784,25381,36745,24509,24674,34516,22238,27585,24724,24935,21321,24800,26214,36159,31229,20250,28905,27719,35763,35826,32472,33636,26127,23130,39746,27985,28151,35905,27963,20249,28779,33719,25110,24785,38669,36135,31096,20987,22334,22522,26426,30072,31293,31215,31637,31935,31936,31938,31939,31940,31942,31945,31947,31950,31951,31952,31953,31954,31955,31956,31960,31962,31963,31965,31966,31969,31970,31971,31972,31973,31974,31975,31977,31978,31979,31980,31981,31982,31984,31985,31986,31987,31988,31989,31990,31991,31993,31994,31996,31997,31998,31999,32000,32001,32002,32003,32004,32005,32006,32007,32008,32009,32011,32012,32013,32014,32015,32016,32017,32018,32019,32020,32021,32022,32023,32024,32025,32026,32027,32028,32029,32030,32031,32033,32035,32036,32037,32038,32040,32041,32042,32044,32045,32046,32048,32049,32050,32051,32052,32053,32054,32908,39269,36857,28608,35749,40481,23020,32489,32521,21513,26497,26840,36753,31821,38598,21450,24613,30142,27762,21363,23241,32423,25380,20960,33034,24049,34015,25216,20864,23395,20238,31085,21058,24760,27982,23492,23490,35745,35760,26082,24524,38469,22931,32487,32426,22025,26551,22841,20339,23478,21152,33626,39050,36158,30002,38078,20551,31292,20215,26550,39550,23233,27516,30417,22362,23574,31546,38388,29006,20860,32937,33392,22904,32516,33575,26816,26604,30897,30839,25315,25441,31616,20461,21098,20943,33616,27099,37492,36341,36145,35265,38190,31661,20214,32055,32056,32057,32058,32059,32060,32061,32062,32063,32064,32065,32066,32067,32068,32069,32070,32071,32072,32073,32074,32075,32076,32077,32078,32079,32080,32081,32082,32083,32084,32085,32086,32087,32088,32089,32090,32091,32092,32093,32094,32095,32096,32097,32098,32099,32100,32101,32102,32103,32104,32105,32106,32107,32108,32109,32111,32112,32113,32114,32115,32116,32117,32118,32120,32121,32122,32123,32124,32125,32126,32127,32128,32129,32130,32131,32132,32133,32134,32135,32136,32137,32138,32139,32140,32141,32142,32143,32144,32145,32146,32147,32148,32149,32150,32151,32152,20581,33328,21073,39279,28176,28293,28071,24314,20725,23004,23558,27974,27743,30086,33931,26728,22870,35762,21280,37233,38477,34121,26898,30977,28966,33014,20132,37066,27975,39556,23047,22204,25605,38128,30699,20389,33050,29409,35282,39290,32564,32478,21119,25945,37237,36735,36739,21483,31382,25581,25509,30342,31224,34903,38454,25130,21163,33410,26708,26480,25463,30571,31469,27905,32467,35299,22992,25106,34249,33445,30028,20511,20171,30117,35819,23626,24062,31563,26020,37329,20170,27941,35167,32039,38182,20165,35880,36827,38771,26187,31105,36817,28908,28024,32153,32154,32155,32156,32157,32158,32159,32160,32161,32162,32163,32164,32165,32167,32168,32169,32170,32171,32172,32173,32175,32176,32177,32178,32179,32180,32181,32182,32183,32184,32185,32186,32187,32188,32189,32190,32191,32192,32193,32194,32195,32196,32197,32198,32199,32200,32201,32202,32203,32204,32205,32206,32207,32208,32209,32210,32211,32212,32213,32214,32215,32216,32217,32218,32219,32220,32221,32222,32223,32224,32225,32226,32227,32228,32229,32230,32231,32232,32233,32234,32235,32236,32237,32238,32239,32240,32241,32242,32243,32244,32245,32246,32247,32248,32249,32250,23613,21170,33606,20834,33550,30555,26230,40120,20140,24778,31934,31923,32463,20117,35686,26223,39048,38745,22659,25964,38236,24452,30153,38742,31455,31454,20928,28847,31384,25578,31350,32416,29590,38893,20037,28792,20061,37202,21417,25937,26087,33276,33285,21646,23601,30106,38816,25304,29401,30141,23621,39545,33738,23616,21632,30697,20030,27822,32858,25298,25454,24040,20855,36317,36382,38191,20465,21477,24807,28844,21095,25424,40515,23071,20518,30519,21367,32482,25733,25899,25225,25496,20500,29237,35273,20915,35776,32477,22343,33740,38055,20891,21531,23803,32251,32252,32253,32254,32255,32256,32257,32258,32259,32260,32261,32262,32263,32264,32265,32266,32267,32268,32269,32270,32271,32272,32273,32274,32275,32276,32277,32278,32279,32280,32281,32282,32283,32284,32285,32286,32287,32288,32289,32290,32291,32292,32293,32294,32295,32296,32297,32298,32299,32300,32301,32302,32303,32304,32305,32306,32307,32308,32309,32310,32311,32312,32313,32314,32316,32317,32318,32319,32320,32322,32323,32324,32325,32326,32328,32329,32330,32331,32332,32333,32334,32335,32336,32337,32338,32339,32340,32341,32342,32343,32344,32345,32346,32347,32348,32349,20426,31459,27994,37089,39567,21888,21654,21345,21679,24320,25577,26999,20975,24936,21002,22570,21208,22350,30733,30475,24247,24951,31968,25179,25239,20130,28821,32771,25335,28900,38752,22391,33499,26607,26869,30933,39063,31185,22771,21683,21487,28212,20811,21051,23458,35838,32943,21827,22438,24691,22353,21549,31354,24656,23380,25511,25248,21475,25187,23495,26543,21741,31391,33510,37239,24211,35044,22840,22446,25358,36328,33007,22359,31607,20393,24555,23485,27454,21281,31568,29378,26694,30719,30518,26103,20917,20111,30420,23743,31397,33909,22862,39745,20608,32350,32351,32352,32353,32354,32355,32356,32357,32358,32359,32360,32361,32362,32363,32364,32365,32366,32367,32368,32369,32370,32371,32372,32373,32374,32375,32376,32377,32378,32379,32380,32381,32382,32383,32384,32385,32387,32388,32389,32390,32391,32392,32393,32394,32395,32396,32397,32398,32399,32400,32401,32402,32403,32404,32405,32406,32407,32408,32409,32410,32412,32413,32414,32430,32436,32443,32444,32470,32484,32492,32505,32522,32528,32542,32567,32569,32571,32572,32573,32574,32575,32576,32577,32579,32582,32583,32584,32585,32586,32587,32588,32589,32590,32591,32594,32595,39304,24871,28291,22372,26118,25414,22256,25324,25193,24275,38420,22403,25289,21895,34593,33098,36771,21862,33713,26469,36182,34013,23146,26639,25318,31726,38417,20848,28572,35888,25597,35272,25042,32518,28866,28389,29701,27028,29436,24266,37070,26391,28010,25438,21171,29282,32769,20332,23013,37226,28889,28061,21202,20048,38647,38253,34174,30922,32047,20769,22418,25794,32907,31867,27882,26865,26974,20919,21400,26792,29313,40654,31729,29432,31163,28435,29702,26446,37324,40100,31036,33673,33620,21519,26647,20029,21385,21169,30782,21382,21033,20616,20363,20432,32598,32601,32603,32604,32605,32606,32608,32611,32612,32613,32614,32615,32619,32620,32621,32623,32624,32627,32629,32630,32631,32632,32634,32635,32636,32637,32639,32640,32642,32643,32644,32645,32646,32647,32648,32649,32651,32653,32655,32656,32657,32658,32659,32661,32662,32663,32664,32665,32667,32668,32672,32674,32675,32677,32678,32680,32681,32682,32683,32684,32685,32686,32689,32691,32692,32693,32694,32695,32698,32699,32702,32704,32706,32707,32708,32710,32711,32712,32713,32715,32717,32719,32720,32721,32722,32723,32726,32727,32729,32730,32731,32732,32733,32734,32738,32739,30178,31435,31890,27813,38582,21147,29827,21737,20457,32852,33714,36830,38256,24265,24604,28063,24088,25947,33080,38142,24651,28860,32451,31918,20937,26753,31921,33391,20004,36742,37327,26238,20142,35845,25769,32842,20698,30103,29134,23525,36797,28518,20102,25730,38243,24278,26009,21015,35010,28872,21155,29454,29747,26519,30967,38678,20020,37051,40158,28107,20955,36161,21533,25294,29618,33777,38646,40836,38083,20278,32666,20940,28789,38517,23725,39046,21478,20196,28316,29705,27060,30827,39311,30041,21016,30244,27969,26611,20845,40857,32843,21657,31548,31423,32740,32743,32744,32746,32747,32748,32749,32751,32754,32756,32757,32758,32759,32760,32761,32762,32765,32766,32767,32770,32775,32776,32777,32778,32782,32783,32785,32787,32794,32795,32797,32798,32799,32801,32803,32804,32811,32812,32813,32814,32815,32816,32818,32820,32825,32826,32828,32830,32832,32833,32836,32837,32839,32840,32841,32846,32847,32848,32849,32851,32853,32854,32855,32857,32859,32860,32861,32862,32863,32864,32865,32866,32867,32868,32869,32870,32871,32872,32875,32876,32877,32878,32879,32880,32882,32883,32884,32885,32886,32887,32888,32889,32890,32891,32892,32893,38534,22404,25314,38471,27004,23044,25602,31699,28431,38475,33446,21346,39045,24208,28809,25523,21348,34383,40065,40595,30860,38706,36335,36162,40575,28510,31108,24405,38470,25134,39540,21525,38109,20387,26053,23653,23649,32533,34385,27695,24459,29575,28388,32511,23782,25371,23402,28390,21365,20081,25504,30053,25249,36718,20262,20177,27814,32438,35770,33821,34746,32599,36923,38179,31657,39585,35064,33853,27931,39558,32476,22920,40635,29595,30721,34434,39532,39554,22043,21527,22475,20080,40614,21334,36808,33033,30610,39314,34542,28385,34067,26364,24930,28459,32894,32897,32898,32901,32904,32906,32909,32910,32911,32912,32913,32914,32916,32917,32919,32921,32926,32931,32934,32935,32936,32940,32944,32947,32949,32950,32952,32953,32955,32965,32967,32968,32969,32970,32971,32975,32976,32977,32978,32979,32980,32981,32984,32991,32992,32994,32995,32998,33006,33013,33015,33017,33019,33022,33023,33024,33025,33027,33028,33029,33031,33032,33035,33036,33045,33047,33049,33051,33052,33053,33055,33056,33057,33058,33059,33060,33061,33062,33063,33064,33065,33066,33067,33069,33070,33072,33075,33076,33077,33079,33081,33082,33083,33084,33085,33087,35881,33426,33579,30450,27667,24537,33725,29483,33541,38170,27611,30683,38086,21359,33538,20882,24125,35980,36152,20040,29611,26522,26757,37238,38665,29028,27809,30473,23186,38209,27599,32654,26151,23504,22969,23194,38376,38391,20204,33804,33945,27308,30431,38192,29467,26790,23391,30511,37274,38753,31964,36855,35868,24357,31859,31192,35269,27852,34588,23494,24130,26825,30496,32501,20885,20813,21193,23081,32517,38754,33495,25551,30596,34256,31186,28218,24217,22937,34065,28781,27665,25279,30399,25935,24751,38397,26126,34719,40483,38125,21517,21629,35884,25720,33088,33089,33090,33091,33092,33093,33095,33097,33101,33102,33103,33106,33110,33111,33112,33115,33116,33117,33118,33119,33121,33122,33123,33124,33126,33128,33130,33131,33132,33135,33138,33139,33141,33142,33143,33144,33153,33155,33156,33157,33158,33159,33161,33163,33164,33165,33166,33168,33170,33171,33172,33173,33174,33175,33177,33178,33182,33183,33184,33185,33186,33188,33189,33191,33193,33195,33196,33197,33198,33199,33200,33201,33202,33204,33205,33206,33207,33208,33209,33212,33213,33214,33215,33220,33221,33223,33224,33225,33227,33229,33230,33231,33232,33233,33234,33235,25721,34321,27169,33180,30952,25705,39764,25273,26411,33707,22696,40664,27819,28448,23518,38476,35851,29279,26576,25287,29281,20137,22982,27597,22675,26286,24149,21215,24917,26408,30446,30566,29287,31302,25343,21738,21584,38048,37027,23068,32435,27670,20035,22902,32784,22856,21335,30007,38590,22218,25376,33041,24700,38393,28118,21602,39297,20869,23273,33021,22958,38675,20522,27877,23612,25311,20320,21311,33147,36870,28346,34091,25288,24180,30910,25781,25467,24565,23064,37247,40479,23615,25423,32834,23421,21870,38218,38221,28037,24744,26592,29406,20957,23425,33236,33237,33238,33239,33240,33241,33242,33243,33244,33245,33246,33247,33248,33249,33250,33252,33253,33254,33256,33257,33259,33262,33263,33264,33265,33266,33269,33270,33271,33272,33273,33274,33277,33279,33283,33287,33288,33289,33290,33291,33294,33295,33297,33299,33301,33302,33303,33304,33305,33306,33309,33312,33316,33317,33318,33319,33321,33326,33330,33338,33340,33341,33343,33344,33345,33346,33347,33349,33350,33352,33354,33356,33357,33358,33360,33361,33362,33363,33364,33365,33366,33367,33369,33371,33372,33373,33374,33376,33377,33378,33379,33380,33381,33382,33383,33385,25319,27870,29275,25197,38062,32445,33043,27987,20892,24324,22900,21162,24594,22899,26262,34384,30111,25386,25062,31983,35834,21734,27431,40485,27572,34261,21589,20598,27812,21866,36276,29228,24085,24597,29750,25293,25490,29260,24472,28227,27966,25856,28504,30424,30928,30460,30036,21028,21467,20051,24222,26049,32810,32982,25243,21638,21032,28846,34957,36305,27873,21624,32986,22521,35060,36180,38506,37197,20329,27803,21943,30406,30768,25256,28921,28558,24429,34028,26842,30844,31735,33192,26379,40527,25447,30896,22383,30738,38713,25209,25259,21128,29749,27607,33386,33387,33388,33389,33393,33397,33398,33399,33400,33403,33404,33408,33409,33411,33413,33414,33415,33417,33420,33424,33427,33428,33429,33430,33434,33435,33438,33440,33442,33443,33447,33458,33461,33462,33466,33467,33468,33471,33472,33474,33475,33477,33478,33481,33488,33494,33497,33498,33501,33506,33511,33512,33513,33514,33516,33517,33518,33520,33522,33523,33525,33526,33528,33530,33532,33533,33534,33535,33536,33546,33547,33549,33552,33554,33555,33558,33560,33561,33565,33566,33567,33568,33569,33570,33571,33572,33573,33574,33577,33578,33582,33584,33586,33591,33595,33597,21860,33086,30130,30382,21305,30174,20731,23617,35692,31687,20559,29255,39575,39128,28418,29922,31080,25735,30629,25340,39057,36139,21697,32856,20050,22378,33529,33805,24179,20973,29942,35780,23631,22369,27900,39047,23110,30772,39748,36843,31893,21078,25169,38138,20166,33670,33889,33769,33970,22484,26420,22275,26222,28006,35889,26333,28689,26399,27450,26646,25114,22971,19971,20932,28422,26578,27791,20854,26827,22855,27495,30054,23822,33040,40784,26071,31048,31041,39569,36215,23682,20062,20225,21551,22865,30732,22120,27668,36804,24323,27773,27875,35755,25488,33598,33599,33601,33602,33604,33605,33608,33610,33611,33612,33613,33614,33619,33621,33622,33623,33624,33625,33629,33634,33648,33649,33650,33651,33652,33653,33654,33657,33658,33662,33663,33664,33665,33666,33667,33668,33671,33672,33674,33675,33676,33677,33679,33680,33681,33684,33685,33686,33687,33689,33690,33693,33695,33697,33698,33699,33700,33701,33702,33703,33708,33709,33710,33711,33717,33723,33726,33727,33730,33731,33732,33734,33736,33737,33739,33741,33742,33744,33745,33746,33747,33749,33751,33753,33754,33755,33758,33762,33763,33764,33766,33767,33768,33771,33772,33773,24688,27965,29301,25190,38030,38085,21315,36801,31614,20191,35878,20094,40660,38065,38067,21069,28508,36963,27973,35892,22545,23884,27424,27465,26538,21595,33108,32652,22681,34103,24378,25250,27207,38201,25970,24708,26725,30631,20052,20392,24039,38808,25772,32728,23789,20431,31373,20999,33540,19988,24623,31363,38054,20405,20146,31206,29748,21220,33465,25810,31165,23517,27777,38738,36731,27682,20542,21375,28165,25806,26228,27696,24773,39031,35831,24198,29756,31351,31179,19992,37041,29699,27714,22234,37195,27845,36235,21306,34502,26354,36527,23624,39537,28192,33774,33775,33779,33780,33781,33782,33783,33786,33787,33788,33790,33791,33792,33794,33797,33799,33800,33801,33802,33808,33810,33811,33812,33813,33814,33815,33817,33818,33819,33822,33823,33824,33825,33826,33827,33833,33834,33835,33836,33837,33838,33839,33840,33842,33843,33844,33845,33846,33847,33849,33850,33851,33854,33855,33856,33857,33858,33859,33860,33861,33863,33864,33865,33866,33867,33868,33869,33870,33871,33872,33874,33875,33876,33877,33878,33880,33885,33886,33887,33888,33890,33892,33893,33894,33895,33896,33898,33902,33903,33904,33906,33908,33911,33913,33915,33916,21462,23094,40843,36259,21435,22280,39079,26435,37275,27849,20840,30154,25331,29356,21048,21149,32570,28820,30264,21364,40522,27063,30830,38592,35033,32676,28982,29123,20873,26579,29924,22756,25880,22199,35753,39286,25200,32469,24825,28909,22764,20161,20154,24525,38887,20219,35748,20995,22922,32427,25172,20173,26085,25102,33592,33993,33635,34701,29076,28342,23481,32466,20887,25545,26580,32905,33593,34837,20754,23418,22914,36785,20083,27741,20837,35109,36719,38446,34122,29790,38160,38384,28070,33509,24369,25746,27922,33832,33134,40131,22622,36187,19977,21441,33917,33918,33919,33920,33921,33923,33924,33925,33926,33930,33933,33935,33936,33937,33938,33939,33940,33941,33942,33944,33946,33947,33949,33950,33951,33952,33954,33955,33956,33957,33958,33959,33960,33961,33962,33963,33964,33965,33966,33968,33969,33971,33973,33974,33975,33979,33980,33982,33984,33986,33987,33989,33990,33991,33992,33995,33996,33998,33999,34002,34004,34005,34007,34008,34009,34010,34011,34012,34014,34017,34018,34020,34023,34024,34025,34026,34027,34029,34030,34031,34033,34034,34035,34036,34037,34038,34039,34040,34041,34042,34043,34045,34046,34048,34049,34050,20254,25955,26705,21971,20007,25620,39578,25195,23234,29791,33394,28073,26862,20711,33678,30722,26432,21049,27801,32433,20667,21861,29022,31579,26194,29642,33515,26441,23665,21024,29053,34923,38378,38485,25797,36193,33203,21892,27733,25159,32558,22674,20260,21830,36175,26188,19978,23578,35059,26786,25422,31245,28903,33421,21242,38902,23569,21736,37045,32461,22882,36170,34503,33292,33293,36198,25668,23556,24913,28041,31038,35774,30775,30003,21627,20280,36523,28145,23072,32453,31070,27784,23457,23158,29978,32958,24910,28183,22768,29983,29989,29298,21319,32499,34051,34052,34053,34054,34055,34056,34057,34058,34059,34061,34062,34063,34064,34066,34068,34069,34070,34072,34073,34075,34076,34077,34078,34080,34082,34083,34084,34085,34086,34087,34088,34089,34090,34093,34094,34095,34096,34097,34098,34099,34100,34101,34102,34110,34111,34112,34113,34114,34116,34117,34118,34119,34123,34124,34125,34126,34127,34128,34129,34130,34131,34132,34133,34135,34136,34138,34139,34140,34141,34143,34144,34145,34146,34147,34149,34150,34151,34153,34154,34155,34156,34157,34158,34159,34160,34161,34163,34165,34166,34167,34168,34172,34173,34175,34176,34177,30465,30427,21097,32988,22307,24072,22833,29422,26045,28287,35799,23608,34417,21313,30707,25342,26102,20160,39135,34432,23454,35782,21490,30690,20351,23630,39542,22987,24335,31034,22763,19990,26623,20107,25325,35475,36893,21183,26159,21980,22124,36866,20181,20365,37322,39280,27663,24066,24643,23460,35270,35797,25910,25163,39318,23432,23551,25480,21806,21463,30246,20861,34092,26530,26803,27530,25234,36755,21460,33298,28113,30095,20070,36174,23408,29087,34223,26257,26329,32626,34560,40653,40736,23646,26415,36848,26641,26463,25101,31446,22661,24246,25968,28465,34178,34179,34182,34184,34185,34186,34187,34188,34189,34190,34192,34193,34194,34195,34196,34197,34198,34199,34200,34201,34202,34205,34206,34207,34208,34209,34210,34211,34213,34214,34215,34217,34219,34220,34221,34225,34226,34227,34228,34229,34230,34232,34234,34235,34236,34237,34238,34239,34240,34242,34243,34244,34245,34246,34247,34248,34250,34251,34252,34253,34254,34257,34258,34260,34262,34263,34264,34265,34266,34267,34269,34270,34271,34272,34273,34274,34275,34277,34278,34279,34280,34282,34283,34284,34285,34286,34287,34288,34289,34290,34291,34292,34293,34294,34295,34296,24661,21047,32781,25684,34928,29993,24069,26643,25332,38684,21452,29245,35841,27700,30561,31246,21550,30636,39034,33308,35828,30805,26388,28865,26031,25749,22070,24605,31169,21496,19997,27515,32902,23546,21987,22235,20282,20284,39282,24051,26494,32824,24578,39042,36865,23435,35772,35829,25628,33368,25822,22013,33487,37221,20439,32032,36895,31903,20723,22609,28335,23487,35785,32899,37240,33948,31639,34429,38539,38543,32485,39635,30862,23681,31319,36930,38567,31071,23385,25439,31499,34001,26797,21766,32553,29712,32034,38145,25152,22604,20182,23427,22905,22612,34297,34298,34300,34301,34302,34304,34305,34306,34307,34308,34310,34311,34312,34313,34314,34315,34316,34317,34318,34319,34320,34322,34323,34324,34325,34327,34328,34329,34330,34331,34332,34333,34334,34335,34336,34337,34338,34339,34340,34341,34342,34344,34346,34347,34348,34349,34350,34351,34352,34353,34354,34355,34356,34357,34358,34359,34361,34362,34363,34365,34366,34367,34368,34369,34370,34371,34372,34373,34374,34375,34376,34377,34378,34379,34380,34386,34387,34389,34390,34391,34392,34393,34395,34396,34397,34399,34400,34401,34403,34404,34405,34406,34407,34408,34409,34410,29549,25374,36427,36367,32974,33492,25260,21488,27888,37214,22826,24577,27760,22349,25674,36138,30251,28393,22363,27264,30192,28525,35885,35848,22374,27631,34962,30899,25506,21497,28845,27748,22616,25642,22530,26848,33179,21776,31958,20504,36538,28108,36255,28907,25487,28059,28372,32486,33796,26691,36867,28120,38518,35752,22871,29305,34276,33150,30140,35466,26799,21076,36386,38161,25552,39064,36420,21884,20307,26367,22159,24789,28053,21059,23625,22825,28155,22635,30000,29980,24684,33300,33094,25361,26465,36834,30522,36339,36148,38081,24086,21381,21548,28867,34413,34415,34416,34418,34419,34420,34421,34422,34423,34424,34435,34436,34437,34438,34439,34440,34441,34446,34447,34448,34449,34450,34452,34454,34455,34456,34457,34458,34459,34462,34463,34464,34465,34466,34469,34470,34475,34477,34478,34482,34483,34487,34488,34489,34491,34492,34493,34494,34495,34497,34498,34499,34501,34504,34508,34509,34514,34515,34517,34518,34519,34522,34524,34525,34528,34529,34530,34531,34533,34534,34535,34536,34538,34539,34540,34543,34549,34550,34551,34554,34555,34556,34557,34559,34561,34564,34565,34566,34571,34572,34574,34575,34576,34577,34580,34582,27712,24311,20572,20141,24237,25402,33351,36890,26704,37230,30643,21516,38108,24420,31461,26742,25413,31570,32479,30171,20599,25237,22836,36879,20984,31171,31361,22270,24466,36884,28034,23648,22303,21520,20820,28237,22242,25512,39059,33151,34581,35114,36864,21534,23663,33216,25302,25176,33073,40501,38464,39534,39548,26925,22949,25299,21822,25366,21703,34521,27964,23043,29926,34972,27498,22806,35916,24367,28286,29609,39037,20024,28919,23436,30871,25405,26202,30358,24779,23451,23113,19975,33109,27754,29579,20129,26505,32593,24448,26106,26395,24536,22916,23041,34585,34587,34589,34591,34592,34596,34598,34599,34600,34602,34603,34604,34605,34607,34608,34610,34611,34613,34614,34616,34617,34618,34620,34621,34624,34625,34626,34627,34628,34629,34630,34634,34635,34637,34639,34640,34641,34642,34644,34645,34646,34648,34650,34651,34652,34653,34654,34655,34657,34658,34662,34663,34664,34665,34666,34667,34668,34669,34671,34673,34674,34675,34677,34679,34680,34681,34682,34687,34688,34689,34692,34694,34695,34697,34698,34700,34702,34703,34704,34705,34706,34708,34709,34710,34712,34713,34714,34715,34716,34717,34718,34720,34721,34722,34723,34724,24013,24494,21361,38886,36829,26693,22260,21807,24799,20026,28493,32500,33479,33806,22996,20255,20266,23614,32428,26410,34074,21619,30031,32963,21890,39759,20301,28205,35859,23561,24944,21355,30239,28201,34442,25991,38395,32441,21563,31283,32010,38382,21985,32705,29934,25373,34583,28065,31389,25105,26017,21351,25569,27779,24043,21596,38056,20044,27745,35820,23627,26080,33436,26791,21566,21556,27595,27494,20116,25410,21320,33310,20237,20398,22366,25098,38654,26212,29289,21247,21153,24735,35823,26132,29081,26512,35199,30802,30717,26224,22075,21560,38177,29306,34725,34726,34727,34729,34730,34734,34736,34737,34738,34740,34742,34743,34744,34745,34747,34748,34750,34751,34753,34754,34755,34756,34757,34759,34760,34761,34764,34765,34766,34767,34768,34772,34773,34774,34775,34776,34777,34778,34780,34781,34782,34783,34785,34786,34787,34788,34790,34791,34792,34793,34795,34796,34797,34799,34800,34801,34802,34803,34804,34805,34806,34807,34808,34810,34811,34812,34813,34815,34816,34817,34818,34820,34821,34822,34823,34824,34825,34827,34828,34829,34830,34831,34832,34833,34834,34836,34839,34840,34841,34842,34844,34845,34846,34847,34848,34851,31232,24687,24076,24713,33181,22805,24796,29060,28911,28330,27728,29312,27268,34989,24109,20064,23219,21916,38115,27927,31995,38553,25103,32454,30606,34430,21283,38686,36758,26247,23777,20384,29421,19979,21414,22799,21523,25472,38184,20808,20185,40092,32420,21688,36132,34900,33335,38386,28046,24358,23244,26174,38505,29616,29486,21439,33146,39301,32673,23466,38519,38480,32447,30456,21410,38262,39321,31665,35140,28248,20065,32724,31077,35814,24819,21709,20139,39033,24055,27233,20687,21521,35937,33831,30813,38660,21066,21742,22179,38144,28040,23477,28102,26195,34852,34853,34854,34855,34856,34857,34858,34859,34860,34861,34862,34863,34864,34865,34867,34868,34869,34870,34871,34872,34874,34875,34877,34878,34879,34881,34882,34883,34886,34887,34888,34889,34890,34891,34894,34895,34896,34897,34898,34899,34901,34902,34904,34906,34907,34908,34909,34910,34911,34912,34918,34919,34922,34925,34927,34929,34931,34932,34933,34934,34936,34937,34938,34939,34940,34944,34947,34950,34951,34953,34954,34956,34958,34959,34960,34961,34963,34964,34965,34967,34968,34969,34970,34971,34973,34974,34975,34976,34977,34979,34981,34982,34983,34984,34985,34986,23567,23389,26657,32918,21880,31505,25928,26964,20123,27463,34638,38795,21327,25375,25658,37034,26012,32961,35856,20889,26800,21368,34809,25032,27844,27899,35874,23633,34218,33455,38156,27427,36763,26032,24571,24515,20449,34885,26143,33125,29481,24826,20852,21009,22411,24418,37026,34892,37266,24184,26447,24615,22995,20804,20982,33016,21256,27769,38596,29066,20241,20462,32670,26429,21957,38152,31168,34966,32483,22687,25100,38656,34394,22040,39035,24464,35768,33988,37207,21465,26093,24207,30044,24676,32110,23167,32490,32493,36713,21927,23459,24748,26059,29572,34988,34990,34991,34992,34994,34995,34996,34997,34998,35000,35001,35002,35003,35005,35006,35007,35008,35011,35012,35015,35016,35018,35019,35020,35021,35023,35024,35025,35027,35030,35031,35034,35035,35036,35037,35038,35040,35041,35046,35047,35049,35050,35051,35052,35053,35054,35055,35058,35061,35062,35063,35066,35067,35069,35071,35072,35073,35075,35076,35077,35078,35079,35080,35081,35083,35084,35085,35086,35087,35089,35092,35093,35094,35095,35096,35100,35101,35102,35103,35104,35106,35107,35108,35110,35111,35112,35113,35116,35117,35118,35119,35121,35122,35123,35125,35127,36873,30307,30505,32474,38772,34203,23398,31348,38634,34880,21195,29071,24490,26092,35810,23547,39535,24033,27529,27739,35757,35759,36874,36805,21387,25276,40486,40493,21568,20011,33469,29273,34460,23830,34905,28079,38597,21713,20122,35766,28937,21693,38409,28895,28153,30416,20005,30740,34578,23721,24310,35328,39068,38414,28814,27839,22852,25513,30524,34893,28436,33395,22576,29141,21388,30746,38593,21761,24422,28976,23476,35866,39564,27523,22830,40495,31207,26472,25196,20335,30113,32650,27915,38451,27687,20208,30162,20859,26679,28478,36992,33136,22934,29814,35128,35129,35130,35131,35132,35133,35134,35135,35136,35138,35139,35141,35142,35143,35144,35145,35146,35147,35148,35149,35150,35151,35152,35153,35154,35155,35156,35157,35158,35159,35160,35161,35162,35163,35164,35165,35168,35169,35170,35171,35172,35173,35175,35176,35177,35178,35179,35180,35181,35182,35183,35184,35185,35186,35187,35188,35189,35190,35191,35192,35193,35194,35196,35197,35198,35200,35202,35204,35205,35207,35208,35209,35210,35211,35212,35213,35214,35215,35216,35217,35218,35219,35220,35221,35222,35223,35224,35225,35226,35227,35228,35229,35230,35231,35232,35233,25671,23591,36965,31377,35875,23002,21676,33280,33647,35201,32768,26928,22094,32822,29239,37326,20918,20063,39029,25494,19994,21494,26355,33099,22812,28082,19968,22777,21307,25558,38129,20381,20234,34915,39056,22839,36951,31227,20202,33008,30097,27778,23452,23016,24413,26885,34433,20506,24050,20057,30691,20197,33402,25233,26131,37009,23673,20159,24441,33222,36920,32900,30123,20134,35028,24847,27589,24518,20041,30410,28322,35811,35758,35850,35793,24322,32764,32716,32462,33589,33643,22240,27575,38899,38452,23035,21535,38134,28139,23493,39278,23609,24341,38544,35234,35235,35236,35237,35238,35239,35240,35241,35242,35243,35244,35245,35246,35247,35248,35249,35250,35251,35252,35253,35254,35255,35256,35257,35258,35259,35260,35261,35262,35263,35264,35267,35277,35283,35284,35285,35287,35288,35289,35291,35293,35295,35296,35297,35298,35300,35303,35304,35305,35306,35308,35309,35310,35312,35313,35314,35316,35317,35318,35319,35320,35321,35322,35323,35324,35325,35326,35327,35329,35330,35331,35332,35333,35334,35336,35337,35338,35339,35340,35341,35342,35343,35344,35345,35346,35347,35348,35349,35350,35351,35352,35353,35354,35355,35356,35357,21360,33521,27185,23156,40560,24212,32552,33721,33828,33829,33639,34631,36814,36194,30408,24433,39062,30828,26144,21727,25317,20323,33219,30152,24248,38605,36362,34553,21647,27891,28044,27704,24703,21191,29992,24189,20248,24736,24551,23588,30001,37038,38080,29369,27833,28216,37193,26377,21451,21491,20305,37321,35825,21448,24188,36802,28132,20110,30402,27014,34398,24858,33286,20313,20446,36926,40060,24841,28189,28180,38533,20104,23089,38632,19982,23679,31161,23431,35821,32701,29577,22495,33419,37057,21505,36935,21947,23786,24481,24840,27442,29425,32946,35465,35358,35359,35360,35361,35362,35363,35364,35365,35366,35367,35368,35369,35370,35371,35372,35373,35374,35375,35376,35377,35378,35379,35380,35381,35382,35383,35384,35385,35386,35387,35388,35389,35391,35392,35393,35394,35395,35396,35397,35398,35399,35401,35402,35403,35404,35405,35406,35407,35408,35409,35410,35411,35412,35413,35414,35415,35416,35417,35418,35419,35420,35421,35422,35423,35424,35425,35426,35427,35428,35429,35430,35431,35432,35433,35434,35435,35436,35437,35438,35439,35440,35441,35442,35443,35444,35445,35446,35447,35448,35450,35451,35452,35453,35454,35455,35456,28020,23507,35029,39044,35947,39533,40499,28170,20900,20803,22435,34945,21407,25588,36757,22253,21592,22278,29503,28304,32536,36828,33489,24895,24616,38498,26352,32422,36234,36291,38053,23731,31908,26376,24742,38405,32792,20113,37095,21248,38504,20801,36816,34164,37213,26197,38901,23381,21277,30776,26434,26685,21705,28798,23472,36733,20877,22312,21681,25874,26242,36190,36163,33039,33900,36973,31967,20991,34299,26531,26089,28577,34468,36481,22122,36896,30338,28790,29157,36131,25321,21017,27901,36156,24590,22686,24974,26366,36192,25166,21939,28195,26413,36711,35457,35458,35459,35460,35461,35462,35463,35464,35467,35468,35469,35470,35471,35472,35473,35474,35476,35477,35478,35479,35480,35481,35482,35483,35484,35485,35486,35487,35488,35489,35490,35491,35492,35493,35494,35495,35496,35497,35498,35499,35500,35501,35502,35503,35504,35505,35506,35507,35508,35509,35510,35511,35512,35513,35514,35515,35516,35517,35518,35519,35520,35521,35522,35523,35524,35525,35526,35527,35528,35529,35530,35531,35532,35533,35534,35535,35536,35537,35538,35539,35540,35541,35542,35543,35544,35545,35546,35547,35548,35549,35550,35551,35552,35553,35554,35555,38113,38392,30504,26629,27048,21643,20045,28856,35784,25688,25995,23429,31364,20538,23528,30651,27617,35449,31896,27838,30415,26025,36759,23853,23637,34360,26632,21344,25112,31449,28251,32509,27167,31456,24432,28467,24352,25484,28072,26454,19976,24080,36134,20183,32960,30260,38556,25307,26157,25214,27836,36213,29031,32617,20806,32903,21484,36974,25240,21746,34544,36761,32773,38167,34071,36825,27993,29645,26015,30495,29956,30759,33275,36126,38024,20390,26517,30137,35786,38663,25391,38215,38453,33976,25379,30529,24449,29424,20105,24596,25972,25327,27491,25919,35556,35557,35558,35559,35560,35561,35562,35563,35564,35565,35566,35567,35568,35569,35570,35571,35572,35573,35574,35575,35576,35577,35578,35579,35580,35581,35582,35583,35584,35585,35586,35587,35588,35589,35590,35592,35593,35594,35595,35596,35597,35598,35599,35600,35601,35602,35603,35604,35605,35606,35607,35608,35609,35610,35611,35612,35613,35614,35615,35616,35617,35618,35619,35620,35621,35623,35624,35625,35626,35627,35628,35629,35630,35631,35632,35633,35634,35635,35636,35637,35638,35639,35640,35641,35642,35643,35644,35645,35646,35647,35648,35649,35650,35651,35652,35653,24103,30151,37073,35777,33437,26525,25903,21553,34584,30693,32930,33026,27713,20043,32455,32844,30452,26893,27542,25191,20540,20356,22336,25351,27490,36286,21482,26088,32440,24535,25370,25527,33267,33268,32622,24092,23769,21046,26234,31209,31258,36136,28825,30164,28382,27835,31378,20013,30405,24544,38047,34935,32456,31181,32959,37325,20210,20247,33311,21608,24030,27954,35788,31909,36724,32920,24090,21650,30385,23449,26172,39588,29664,26666,34523,26417,29482,35832,35803,36880,31481,28891,29038,25284,30633,22065,20027,33879,26609,21161,34496,36142,38136,31569,35654,35655,35656,35657,35658,35659,35660,35661,35662,35663,35664,35665,35666,35667,35668,35669,35670,35671,35672,35673,35674,35675,35676,35677,35678,35679,35680,35681,35682,35683,35684,35685,35687,35688,35689,35690,35691,35693,35694,35695,35696,35697,35698,35699,35700,35701,35702,35703,35704,35705,35706,35707,35708,35709,35710,35711,35712,35713,35714,35715,35716,35717,35718,35719,35720,35721,35722,35723,35724,35725,35726,35727,35728,35729,35730,35731,35732,35733,35734,35735,35736,35737,35738,35739,35740,35741,35742,35743,35756,35761,35771,35783,35792,35818,35849,35870,20303,27880,31069,39547,25235,29226,25341,19987,30742,36716,25776,36186,31686,26729,24196,35013,22918,25758,22766,29366,26894,38181,36861,36184,22368,32512,35846,20934,25417,25305,21331,26700,29730,33537,37196,21828,30528,28796,27978,20857,21672,36164,23039,28363,28100,23388,32043,20180,31869,28371,23376,33258,28173,23383,39683,26837,36394,23447,32508,24635,32437,37049,36208,22863,25549,31199,36275,21330,26063,31062,35781,38459,32452,38075,32386,22068,37257,26368,32618,23562,36981,26152,24038,20304,26590,20570,20316,22352,24231,59408,59409,59410,59411,59412,35896,35897,35898,35899,35900,35901,35902,35903,35904,35906,35907,35908,35909,35912,35914,35915,35917,35918,35919,35920,35921,35922,35923,35924,35926,35927,35928,35929,35931,35932,35933,35934,35935,35936,35939,35940,35941,35942,35943,35944,35945,35948,35949,35950,35951,35952,35953,35954,35956,35957,35958,35959,35963,35964,35965,35966,35967,35968,35969,35971,35972,35974,35975,35976,35979,35981,35982,35983,35984,35985,35986,35987,35989,35990,35991,35993,35994,35995,35996,35997,35998,35999,36000,36001,36002,36003,36004,36005,36006,36007,36008,36009,36010,36011,36012,36013,20109,19980,20800,19984,24319,21317,19989,20120,19998,39730,23404,22121,20008,31162,20031,21269,20039,22829,29243,21358,27664,22239,32996,39319,27603,30590,40727,20022,20127,40720,20060,20073,20115,33416,23387,21868,22031,20164,21389,21405,21411,21413,21422,38757,36189,21274,21493,21286,21294,21310,36188,21350,21347,20994,21000,21006,21037,21043,21055,21056,21068,21086,21089,21084,33967,21117,21122,21121,21136,21139,20866,32596,20155,20163,20169,20162,20200,20193,20203,20190,20251,20211,20258,20324,20213,20261,20263,20233,20267,20318,20327,25912,20314,20317,36014,36015,36016,36017,36018,36019,36020,36021,36022,36023,36024,36025,36026,36027,36028,36029,36030,36031,36032,36033,36034,36035,36036,36037,36038,36039,36040,36041,36042,36043,36044,36045,36046,36047,36048,36049,36050,36051,36052,36053,36054,36055,36056,36057,36058,36059,36060,36061,36062,36063,36064,36065,36066,36067,36068,36069,36070,36071,36072,36073,36074,36075,36076,36077,36078,36079,36080,36081,36082,36083,36084,36085,36086,36087,36088,36089,36090,36091,36092,36093,36094,36095,36096,36097,36098,36099,36100,36101,36102,36103,36104,36105,36106,36107,36108,36109,20319,20311,20274,20285,20342,20340,20369,20361,20355,20367,20350,20347,20394,20348,20396,20372,20454,20456,20458,20421,20442,20451,20444,20433,20447,20472,20521,20556,20467,20524,20495,20526,20525,20478,20508,20492,20517,20520,20606,20547,20565,20552,20558,20588,20603,20645,20647,20649,20666,20694,20742,20717,20716,20710,20718,20743,20747,20189,27709,20312,20325,20430,40864,27718,31860,20846,24061,40649,39320,20865,22804,21241,21261,35335,21264,20971,22809,20821,20128,20822,20147,34926,34980,20149,33044,35026,31104,23348,34819,32696,20907,20913,20925,20924,36110,36111,36112,36113,36114,36115,36116,36117,36118,36119,36120,36121,36122,36123,36124,36128,36177,36178,36183,36191,36197,36200,36201,36202,36204,36206,36207,36209,36210,36216,36217,36218,36219,36220,36221,36222,36223,36224,36226,36227,36230,36231,36232,36233,36236,36237,36238,36239,36240,36242,36243,36245,36246,36247,36248,36249,36250,36251,36252,36253,36254,36256,36257,36258,36260,36261,36262,36263,36264,36265,36266,36267,36268,36269,36270,36271,36272,36274,36278,36279,36281,36283,36285,36288,36289,36290,36293,36295,36296,36297,36298,36301,36304,36306,36307,36308,20935,20886,20898,20901,35744,35750,35751,35754,35764,35765,35767,35778,35779,35787,35791,35790,35794,35795,35796,35798,35800,35801,35804,35807,35808,35812,35816,35817,35822,35824,35827,35830,35833,35836,35839,35840,35842,35844,35847,35852,35855,35857,35858,35860,35861,35862,35865,35867,35864,35869,35871,35872,35873,35877,35879,35882,35883,35886,35887,35890,35891,35893,35894,21353,21370,38429,38434,38433,38449,38442,38461,38460,38466,38473,38484,38495,38503,38508,38514,38516,38536,38541,38551,38576,37015,37019,37021,37017,37036,37025,37044,37043,37046,37050,36309,36312,36313,36316,36320,36321,36322,36325,36326,36327,36329,36333,36334,36336,36337,36338,36340,36342,36348,36350,36351,36352,36353,36354,36355,36356,36358,36359,36360,36363,36365,36366,36368,36369,36370,36371,36373,36374,36375,36376,36377,36378,36379,36380,36384,36385,36388,36389,36390,36391,36392,36395,36397,36400,36402,36403,36404,36406,36407,36408,36411,36412,36414,36415,36419,36421,36422,36428,36429,36430,36431,36432,36435,36436,36437,36438,36439,36440,36442,36443,36444,36445,36446,36447,36448,36449,36450,36451,36452,36453,36455,36456,36458,36459,36462,36465,37048,37040,37071,37061,37054,37072,37060,37063,37075,37094,37090,37084,37079,37083,37099,37103,37118,37124,37154,37150,37155,37169,37167,37177,37187,37190,21005,22850,21154,21164,21165,21182,21759,21200,21206,21232,21471,29166,30669,24308,20981,20988,39727,21430,24321,30042,24047,22348,22441,22433,22654,22716,22725,22737,22313,22316,22314,22323,22329,22318,22319,22364,22331,22338,22377,22405,22379,22406,22396,22395,22376,22381,22390,22387,22445,22436,22412,22450,22479,22439,22452,22419,22432,22485,22488,22490,22489,22482,22456,22516,22511,22520,22500,22493,36467,36469,36471,36472,36473,36474,36475,36477,36478,36480,36482,36483,36484,36486,36488,36489,36490,36491,36492,36493,36494,36497,36498,36499,36501,36502,36503,36504,36505,36506,36507,36509,36511,36512,36513,36514,36515,36516,36517,36518,36519,36520,36521,36522,36525,36526,36528,36529,36531,36532,36533,36534,36535,36536,36537,36539,36540,36541,36542,36543,36544,36545,36546,36547,36548,36549,36550,36551,36552,36553,36554,36555,36556,36557,36559,36560,36561,36562,36563,36564,36565,36566,36567,36568,36569,36570,36571,36572,36573,36574,36575,36576,36577,36578,36579,36580,22539,22541,22525,22509,22528,22558,22553,22596,22560,22629,22636,22657,22665,22682,22656,39336,40729,25087,33401,33405,33407,33423,33418,33448,33412,33422,33425,33431,33433,33451,33464,33470,33456,33480,33482,33507,33432,33463,33454,33483,33484,33473,33449,33460,33441,33450,33439,33476,33486,33444,33505,33545,33527,33508,33551,33543,33500,33524,33490,33496,33548,33531,33491,33553,33562,33542,33556,33557,33504,33493,33564,33617,33627,33628,33544,33682,33596,33588,33585,33691,33630,33583,33615,33607,33603,33631,33600,33559,33632,33581,33594,33587,33638,33637,36581,36582,36583,36584,36585,36586,36587,36588,36589,36590,36591,36592,36593,36594,36595,36596,36597,36598,36599,36600,36601,36602,36603,36604,36605,36606,36607,36608,36609,36610,36611,36612,36613,36614,36615,36616,36617,36618,36619,36620,36621,36622,36623,36624,36625,36626,36627,36628,36629,36630,36631,36632,36633,36634,36635,36636,36637,36638,36639,36640,36641,36642,36643,36644,36645,36646,36647,36648,36649,36650,36651,36652,36653,36654,36655,36656,36657,36658,36659,36660,36661,36662,36663,36664,36665,36666,36667,36668,36669,36670,36671,36672,36673,36674,36675,36676,33640,33563,33641,33644,33642,33645,33646,33712,33656,33715,33716,33696,33706,33683,33692,33669,33660,33718,33705,33661,33720,33659,33688,33694,33704,33722,33724,33729,33793,33765,33752,22535,33816,33803,33757,33789,33750,33820,33848,33809,33798,33748,33759,33807,33795,33784,33785,33770,33733,33728,33830,33776,33761,33884,33873,33882,33881,33907,33927,33928,33914,33929,33912,33852,33862,33897,33910,33932,33934,33841,33901,33985,33997,34000,34022,33981,34003,33994,33983,33978,34016,33953,33977,33972,33943,34021,34019,34060,29965,34104,34032,34105,34079,34106,36677,36678,36679,36680,36681,36682,36683,36684,36685,36686,36687,36688,36689,36690,36691,36692,36693,36694,36695,36696,36697,36698,36699,36700,36701,36702,36703,36704,36705,36706,36707,36708,36709,36714,36736,36748,36754,36765,36768,36769,36770,36772,36773,36774,36775,36778,36780,36781,36782,36783,36786,36787,36788,36789,36791,36792,36794,36795,36796,36799,36800,36803,36806,36809,36810,36811,36812,36813,36815,36818,36822,36823,36826,36832,36833,36835,36839,36844,36847,36849,36850,36852,36853,36854,36858,36859,36860,36862,36863,36871,36872,36876,36878,36883,36885,36888,34134,34107,34047,34044,34137,34120,34152,34148,34142,34170,30626,34115,34162,34171,34212,34216,34183,34191,34169,34222,34204,34181,34233,34231,34224,34259,34241,34268,34303,34343,34309,34345,34326,34364,24318,24328,22844,22849,32823,22869,22874,22872,21263,23586,23589,23596,23604,25164,25194,25247,25275,25290,25306,25303,25326,25378,25334,25401,25419,25411,25517,25590,25457,25466,25486,25524,25453,25516,25482,25449,25518,25532,25586,25592,25568,25599,25540,25566,25550,25682,25542,25534,25669,25665,25611,25627,25632,25612,25638,25633,25694,25732,25709,25750,36889,36892,36899,36900,36901,36903,36904,36905,36906,36907,36908,36912,36913,36914,36915,36916,36919,36921,36922,36925,36927,36928,36931,36933,36934,36936,36937,36938,36939,36940,36942,36948,36949,36950,36953,36954,36956,36957,36958,36959,36960,36961,36964,36966,36967,36969,36970,36971,36972,36975,36976,36977,36978,36979,36982,36983,36984,36985,36986,36987,36988,36990,36993,36996,36997,36998,36999,37001,37002,37004,37005,37006,37007,37008,37010,37012,37014,37016,37018,37020,37022,37023,37024,37028,37029,37031,37032,37033,37035,37037,37042,37047,37052,37053,37055,37056,25722,25783,25784,25753,25786,25792,25808,25815,25828,25826,25865,25893,25902,24331,24530,29977,24337,21343,21489,21501,21481,21480,21499,21522,21526,21510,21579,21586,21587,21588,21590,21571,21537,21591,21593,21539,21554,21634,21652,21623,21617,21604,21658,21659,21636,21622,21606,21661,21712,21677,21698,21684,21714,21671,21670,21715,21716,21618,21667,21717,21691,21695,21708,21721,21722,21724,21673,21674,21668,21725,21711,21726,21787,21735,21792,21757,21780,21747,21794,21795,21775,21777,21799,21802,21863,21903,21941,21833,21869,21825,21845,21823,21840,21820,37058,37059,37062,37064,37065,37067,37068,37069,37074,37076,37077,37078,37080,37081,37082,37086,37087,37088,37091,37092,37093,37097,37098,37100,37102,37104,37105,37106,37107,37109,37110,37111,37113,37114,37115,37116,37119,37120,37121,37123,37125,37126,37127,37128,37129,37130,37131,37132,37133,37134,37135,37136,37137,37138,37139,37140,37141,37142,37143,37144,37146,37147,37148,37149,37151,37152,37153,37156,37157,37158,37159,37160,37161,37162,37163,37164,37165,37166,37168,37170,37171,37172,37173,37174,37175,37176,37178,37179,37180,37181,37182,37183,37184,37185,37186,37188,21815,21846,21877,21878,21879,21811,21808,21852,21899,21970,21891,21937,21945,21896,21889,21919,21886,21974,21905,21883,21983,21949,21950,21908,21913,21994,22007,21961,22047,21969,21995,21996,21972,21990,21981,21956,21999,21989,22002,22003,21964,21965,21992,22005,21988,36756,22046,22024,22028,22017,22052,22051,22014,22016,22055,22061,22104,22073,22103,22060,22093,22114,22105,22108,22092,22100,22150,22116,22129,22123,22139,22140,22149,22163,22191,22228,22231,22237,22241,22261,22251,22265,22271,22276,22282,22281,22300,24079,24089,24084,24081,24113,24123,24124,37189,37191,37192,37201,37203,37204,37205,37206,37208,37209,37211,37212,37215,37216,37222,37223,37224,37227,37229,37235,37242,37243,37244,37248,37249,37250,37251,37252,37254,37256,37258,37262,37263,37267,37268,37269,37270,37271,37272,37273,37276,37277,37278,37279,37280,37281,37284,37285,37286,37287,37288,37289,37291,37292,37296,37297,37298,37299,37302,37303,37304,37305,37307,37308,37309,37310,37311,37312,37313,37314,37315,37316,37317,37318,37320,37323,37328,37330,37331,37332,37333,37334,37335,37336,37337,37338,37339,37341,37342,37343,37344,37345,37346,37347,37348,37349,24119,24132,24148,24155,24158,24161,23692,23674,23693,23696,23702,23688,23704,23705,23697,23706,23708,23733,23714,23741,23724,23723,23729,23715,23745,23735,23748,23762,23780,23755,23781,23810,23811,23847,23846,23854,23844,23838,23814,23835,23896,23870,23860,23869,23916,23899,23919,23901,23915,23883,23882,23913,23924,23938,23961,23965,35955,23991,24005,24435,24439,24450,24455,24457,24460,24469,24473,24476,24488,24493,24501,24508,34914,24417,29357,29360,29364,29367,29368,29379,29377,29390,29389,29394,29416,29423,29417,29426,29428,29431,29441,29427,29443,29434,37350,37351,37352,37353,37354,37355,37356,37357,37358,37359,37360,37361,37362,37363,37364,37365,37366,37367,37368,37369,37370,37371,37372,37373,37374,37375,37376,37377,37378,37379,37380,37381,37382,37383,37384,37385,37386,37387,37388,37389,37390,37391,37392,37393,37394,37395,37396,37397,37398,37399,37400,37401,37402,37403,37404,37405,37406,37407,37408,37409,37410,37411,37412,37413,37414,37415,37416,37417,37418,37419,37420,37421,37422,37423,37424,37425,37426,37427,37428,37429,37430,37431,37432,37433,37434,37435,37436,37437,37438,37439,37440,37441,37442,37443,37444,37445,29435,29463,29459,29473,29450,29470,29469,29461,29474,29497,29477,29484,29496,29489,29520,29517,29527,29536,29548,29551,29566,33307,22821,39143,22820,22786,39267,39271,39272,39273,39274,39275,39276,39284,39287,39293,39296,39300,39303,39306,39309,39312,39313,39315,39316,39317,24192,24209,24203,24214,24229,24224,24249,24245,24254,24243,36179,24274,24273,24283,24296,24298,33210,24516,24521,24534,24527,24579,24558,24580,24545,24548,24574,24581,24582,24554,24557,24568,24601,24629,24614,24603,24591,24589,24617,24619,24586,24639,24609,24696,24697,24699,24698,24642,37446,37447,37448,37449,37450,37451,37452,37453,37454,37455,37456,37457,37458,37459,37460,37461,37462,37463,37464,37465,37466,37467,37468,37469,37470,37471,37472,37473,37474,37475,37476,37477,37478,37479,37480,37481,37482,37483,37484,37485,37486,37487,37488,37489,37490,37491,37493,37494,37495,37496,37497,37498,37499,37500,37501,37502,37503,37504,37505,37506,37507,37508,37509,37510,37511,37512,37513,37514,37515,37516,37517,37519,37520,37521,37522,37523,37524,37525,37526,37527,37528,37529,37530,37531,37532,37533,37534,37535,37536,37537,37538,37539,37540,37541,37542,37543,24682,24701,24726,24730,24749,24733,24707,24722,24716,24731,24812,24763,24753,24797,24792,24774,24794,24756,24864,24870,24853,24867,24820,24832,24846,24875,24906,24949,25004,24980,24999,25015,25044,25077,24541,38579,38377,38379,38385,38387,38389,38390,38396,38398,38403,38404,38406,38408,38410,38411,38412,38413,38415,38418,38421,38422,38423,38425,38426,20012,29247,25109,27701,27732,27740,27722,27811,27781,27792,27796,27788,27752,27753,27764,27766,27782,27817,27856,27860,27821,27895,27896,27889,27863,27826,27872,27862,27898,27883,27886,27825,27859,27887,27902,37544,37545,37546,37547,37548,37549,37551,37552,37553,37554,37555,37556,37557,37558,37559,37560,37561,37562,37563,37564,37565,37566,37567,37568,37569,37570,37571,37572,37573,37574,37575,37577,37578,37579,37580,37581,37582,37583,37584,37585,37586,37587,37588,37589,37590,37591,37592,37593,37594,37595,37596,37597,37598,37599,37600,37601,37602,37603,37604,37605,37606,37607,37608,37609,37610,37611,37612,37613,37614,37615,37616,37617,37618,37619,37620,37621,37622,37623,37624,37625,37626,37627,37628,37629,37630,37631,37632,37633,37634,37635,37636,37637,37638,37639,37640,37641,27961,27943,27916,27971,27976,27911,27908,27929,27918,27947,27981,27950,27957,27930,27983,27986,27988,27955,28049,28015,28062,28064,27998,28051,28052,27996,28000,28028,28003,28186,28103,28101,28126,28174,28095,28128,28177,28134,28125,28121,28182,28075,28172,28078,28203,28270,28238,28267,28338,28255,28294,28243,28244,28210,28197,28228,28383,28337,28312,28384,28461,28386,28325,28327,28349,28347,28343,28375,28340,28367,28303,28354,28319,28514,28486,28487,28452,28437,28409,28463,28470,28491,28532,28458,28425,28457,28553,28557,28556,28536,28530,28540,28538,28625,37642,37643,37644,37645,37646,37647,37648,37649,37650,37651,37652,37653,37654,37655,37656,37657,37658,37659,37660,37661,37662,37663,37664,37665,37666,37667,37668,37669,37670,37671,37672,37673,37674,37675,37676,37677,37678,37679,37680,37681,37682,37683,37684,37685,37686,37687,37688,37689,37690,37691,37692,37693,37695,37696,37697,37698,37699,37700,37701,37702,37703,37704,37705,37706,37707,37708,37709,37710,37711,37712,37713,37714,37715,37716,37717,37718,37719,37720,37721,37722,37723,37724,37725,37726,37727,37728,37729,37730,37731,37732,37733,37734,37735,37736,37737,37739,28617,28583,28601,28598,28610,28641,28654,28638,28640,28655,28698,28707,28699,28729,28725,28751,28766,23424,23428,23445,23443,23461,23480,29999,39582,25652,23524,23534,35120,23536,36423,35591,36790,36819,36821,36837,36846,36836,36841,36838,36851,36840,36869,36868,36875,36902,36881,36877,36886,36897,36917,36918,36909,36911,36932,36945,36946,36944,36968,36952,36962,36955,26297,36980,36989,36994,37000,36995,37003,24400,24407,24406,24408,23611,21675,23632,23641,23409,23651,23654,32700,24362,24361,24365,33396,24380,39739,23662,22913,22915,22925,22953,22954,22947,37740,37741,37742,37743,37744,37745,37746,37747,37748,37749,37750,37751,37752,37753,37754,37755,37756,37757,37758,37759,37760,37761,37762,37763,37764,37765,37766,37767,37768,37769,37770,37771,37772,37773,37774,37776,37777,37778,37779,37780,37781,37782,37783,37784,37785,37786,37787,37788,37789,37790,37791,37792,37793,37794,37795,37796,37797,37798,37799,37800,37801,37802,37803,37804,37805,37806,37807,37808,37809,37810,37811,37812,37813,37814,37815,37816,37817,37818,37819,37820,37821,37822,37823,37824,37825,37826,37827,37828,37829,37830,37831,37832,37833,37835,37836,37837,22935,22986,22955,22942,22948,22994,22962,22959,22999,22974,23045,23046,23005,23048,23011,23000,23033,23052,23049,23090,23092,23057,23075,23059,23104,23143,23114,23125,23100,23138,23157,33004,23210,23195,23159,23162,23230,23275,23218,23250,23252,23224,23264,23267,23281,23254,23270,23256,23260,23305,23319,23318,23346,23351,23360,23573,23580,23386,23397,23411,23377,23379,23394,39541,39543,39544,39546,39551,39549,39552,39553,39557,39560,39562,39568,39570,39571,39574,39576,39579,39580,39581,39583,39584,39586,39587,39589,39591,32415,32417,32419,32421,32424,32425,37838,37839,37840,37841,37842,37843,37844,37845,37847,37848,37849,37850,37851,37852,37853,37854,37855,37856,37857,37858,37859,37860,37861,37862,37863,37864,37865,37866,37867,37868,37869,37870,37871,37872,37873,37874,37875,37876,37877,37878,37879,37880,37881,37882,37883,37884,37885,37886,37887,37888,37889,37890,37891,37892,37893,37894,37895,37896,37897,37898,37899,37900,37901,37902,37903,37904,37905,37906,37907,37908,37909,37910,37911,37912,37913,37914,37915,37916,37917,37918,37919,37920,37921,37922,37923,37924,37925,37926,37927,37928,37929,37930,37931,37932,37933,37934,32429,32432,32446,32448,32449,32450,32457,32459,32460,32464,32468,32471,32475,32480,32481,32488,32491,32494,32495,32497,32498,32525,32502,32506,32507,32510,32513,32514,32515,32519,32520,32523,32524,32527,32529,32530,32535,32537,32540,32539,32543,32545,32546,32547,32548,32549,32550,32551,32554,32555,32556,32557,32559,32560,32561,32562,32563,32565,24186,30079,24027,30014,37013,29582,29585,29614,29602,29599,29647,29634,29649,29623,29619,29632,29641,29640,29669,29657,39036,29706,29673,29671,29662,29626,29682,29711,29738,29787,29734,29733,29736,29744,29742,29740,37935,37936,37937,37938,37939,37940,37941,37942,37943,37944,37945,37946,37947,37948,37949,37951,37952,37953,37954,37955,37956,37957,37958,37959,37960,37961,37962,37963,37964,37965,37966,37967,37968,37969,37970,37971,37972,37973,37974,37975,37976,37977,37978,37979,37980,37981,37982,37983,37984,37985,37986,37987,37988,37989,37990,37991,37992,37993,37994,37996,37997,37998,37999,38000,38001,38002,38003,38004,38005,38006,38007,38008,38009,38010,38011,38012,38013,38014,38015,38016,38017,38018,38019,38020,38033,38038,38040,38087,38095,38099,38100,38106,38118,38139,38172,38176,29723,29722,29761,29788,29783,29781,29785,29815,29805,29822,29852,29838,29824,29825,29831,29835,29854,29864,29865,29840,29863,29906,29882,38890,38891,38892,26444,26451,26462,26440,26473,26533,26503,26474,26483,26520,26535,26485,26536,26526,26541,26507,26487,26492,26608,26633,26584,26634,26601,26544,26636,26585,26549,26586,26547,26589,26624,26563,26552,26594,26638,26561,26621,26674,26675,26720,26721,26702,26722,26692,26724,26755,26653,26709,26726,26689,26727,26688,26686,26698,26697,26665,26805,26767,26740,26743,26771,26731,26818,26990,26876,26911,26912,26873,38183,38195,38205,38211,38216,38219,38229,38234,38240,38254,38260,38261,38263,38264,38265,38266,38267,38268,38269,38270,38272,38273,38274,38275,38276,38277,38278,38279,38280,38281,38282,38283,38284,38285,38286,38287,38288,38289,38290,38291,38292,38293,38294,38295,38296,38297,38298,38299,38300,38301,38302,38303,38304,38305,38306,38307,38308,38309,38310,38311,38312,38313,38314,38315,38316,38317,38318,38319,38320,38321,38322,38323,38324,38325,38326,38327,38328,38329,38330,38331,38332,38333,38334,38335,38336,38337,38338,38339,38340,38341,38342,38343,38344,38345,38346,38347,26916,26864,26891,26881,26967,26851,26896,26993,26937,26976,26946,26973,27012,26987,27008,27032,27000,26932,27084,27015,27016,27086,27017,26982,26979,27001,27035,27047,27067,27051,27053,27092,27057,27073,27082,27103,27029,27104,27021,27135,27183,27117,27159,27160,27237,27122,27204,27198,27296,27216,27227,27189,27278,27257,27197,27176,27224,27260,27281,27280,27305,27287,27307,29495,29522,27521,27522,27527,27524,27538,27539,27533,27546,27547,27553,27562,36715,36717,36721,36722,36723,36725,36726,36728,36727,36729,36730,36732,36734,36737,36738,36740,36743,36747,38348,38349,38350,38351,38352,38353,38354,38355,38356,38357,38358,38359,38360,38361,38362,38363,38364,38365,38366,38367,38368,38369,38370,38371,38372,38373,38374,38375,38380,38399,38407,38419,38424,38427,38430,38432,38435,38436,38437,38438,38439,38440,38441,38443,38444,38445,38447,38448,38455,38456,38457,38458,38462,38465,38467,38474,38478,38479,38481,38482,38483,38486,38487,38488,38489,38490,38492,38493,38494,38496,38499,38501,38502,38507,38509,38510,38511,38512,38513,38515,38520,38521,38522,38523,38524,38525,38526,38527,38528,38529,38530,38531,38532,38535,38537,38538,36749,36750,36751,36760,36762,36558,25099,25111,25115,25119,25122,25121,25125,25124,25132,33255,29935,29940,29951,29967,29969,29971,25908,26094,26095,26096,26122,26137,26482,26115,26133,26112,28805,26359,26141,26164,26161,26166,26165,32774,26207,26196,26177,26191,26198,26209,26199,26231,26244,26252,26279,26269,26302,26331,26332,26342,26345,36146,36147,36150,36155,36157,36160,36165,36166,36168,36169,36167,36173,36181,36185,35271,35274,35275,35276,35278,35279,35280,35281,29294,29343,29277,29286,29295,29310,29311,29316,29323,29325,29327,29330,25352,25394,25520,38540,38542,38545,38546,38547,38549,38550,38554,38555,38557,38558,38559,38560,38561,38562,38563,38564,38565,38566,38568,38569,38570,38571,38572,38573,38574,38575,38577,38578,38580,38581,38583,38584,38586,38587,38591,38594,38595,38600,38602,38603,38608,38609,38611,38612,38614,38615,38616,38617,38618,38619,38620,38621,38622,38623,38625,38626,38627,38628,38629,38630,38631,38635,38636,38637,38638,38640,38641,38642,38644,38645,38648,38650,38651,38652,38653,38655,38658,38659,38661,38666,38667,38668,38672,38673,38674,38676,38677,38679,38680,38681,38682,38683,38685,38687,38688,25663,25816,32772,27626,27635,27645,27637,27641,27653,27655,27654,27661,27669,27672,27673,27674,27681,27689,27684,27690,27698,25909,25941,25963,29261,29266,29270,29232,34402,21014,32927,32924,32915,32956,26378,32957,32945,32939,32941,32948,32951,32999,33000,33001,33002,32987,32962,32964,32985,32973,32983,26384,32989,33003,33009,33012,33005,33037,33038,33010,33020,26389,33042,35930,33078,33054,33068,33048,33074,33096,33100,33107,33140,33113,33114,33137,33120,33129,33148,33149,33133,33127,22605,23221,33160,33154,33169,28373,33187,33194,33228,26406,33226,33211,38689,38690,38691,38692,38693,38694,38695,38696,38697,38699,38700,38702,38703,38705,38707,38708,38709,38710,38711,38714,38715,38716,38717,38719,38720,38721,38722,38723,38724,38725,38726,38727,38728,38729,38730,38731,38732,38733,38734,38735,38736,38737,38740,38741,38743,38744,38746,38748,38749,38751,38755,38756,38758,38759,38760,38762,38763,38764,38765,38766,38767,38768,38769,38770,38773,38775,38776,38777,38778,38779,38781,38782,38783,38784,38785,38786,38787,38788,38790,38791,38792,38793,38794,38796,38798,38799,38800,38803,38805,38806,38807,38809,38810,38811,38812,38813,33217,33190,27428,27447,27449,27459,27462,27481,39121,39122,39123,39125,39129,39130,27571,24384,27586,35315,26000,40785,26003,26044,26054,26052,26051,26060,26062,26066,26070,28800,28828,28822,28829,28859,28864,28855,28843,28849,28904,28874,28944,28947,28950,28975,28977,29043,29020,29032,28997,29042,29002,29048,29050,29080,29107,29109,29096,29088,29152,29140,29159,29177,29213,29224,28780,28952,29030,29113,25150,25149,25155,25160,25161,31035,31040,31046,31049,31067,31068,31059,31066,31074,31063,31072,31087,31079,31098,31109,31114,31130,31143,31155,24529,24528,38814,38815,38817,38818,38820,38821,38822,38823,38824,38825,38826,38828,38830,38832,38833,38835,38837,38838,38839,38840,38841,38842,38843,38844,38845,38846,38847,38848,38849,38850,38851,38852,38853,38854,38855,38856,38857,38858,38859,38860,38861,38862,38863,38864,38865,38866,38867,38868,38869,38870,38871,38872,38873,38874,38875,38876,38877,38878,38879,38880,38881,38882,38883,38884,38885,38888,38894,38895,38896,38897,38898,38900,38903,38904,38905,38906,38907,38908,38909,38910,38911,38912,38913,38914,38915,38916,38917,38918,38919,38920,38921,38922,38923,38924,38925,38926,24636,24669,24666,24679,24641,24665,24675,24747,24838,24845,24925,25001,24989,25035,25041,25094,32896,32895,27795,27894,28156,30710,30712,30720,30729,30743,30744,30737,26027,30765,30748,30749,30777,30778,30779,30751,30780,30757,30764,30755,30761,30798,30829,30806,30807,30758,30800,30791,30796,30826,30875,30867,30874,30855,30876,30881,30883,30898,30905,30885,30932,30937,30921,30956,30962,30981,30964,30995,31012,31006,31028,40859,40697,40699,40700,30449,30468,30477,30457,30471,30472,30490,30498,30489,30509,30502,30517,30520,30544,30545,30535,30531,30554,30568,38927,38928,38929,38930,38931,38932,38933,38934,38935,38936,38937,38938,38939,38940,38941,38942,38943,38944,38945,38946,38947,38948,38949,38950,38951,38952,38953,38954,38955,38956,38957,38958,38959,38960,38961,38962,38963,38964,38965,38966,38967,38968,38969,38970,38971,38972,38973,38974,38975,38976,38977,38978,38979,38980,38981,38982,38983,38984,38985,38986,38987,38988,38989,38990,38991,38992,38993,38994,38995,38996,38997,38998,38999,39000,39001,39002,39003,39004,39005,39006,39007,39008,39009,39010,39011,39012,39013,39014,39015,39016,39017,39018,39019,39020,39021,39022,30562,30565,30591,30605,30589,30592,30604,30609,30623,30624,30640,30645,30653,30010,30016,30030,30027,30024,30043,30066,30073,30083,32600,32609,32607,35400,32616,32628,32625,32633,32641,32638,30413,30437,34866,38021,38022,38023,38027,38026,38028,38029,38031,38032,38036,38039,38037,38042,38043,38044,38051,38052,38059,38058,38061,38060,38063,38064,38066,38068,38070,38071,38072,38073,38074,38076,38077,38079,38084,38088,38089,38090,38091,38092,38093,38094,38096,38097,38098,38101,38102,38103,38105,38104,38107,38110,38111,38112,38114,38116,38117,38119,38120,38122,39023,39024,39025,39026,39027,39028,39051,39054,39058,39061,39065,39075,39080,39081,39082,39083,39084,39085,39086,39087,39088,39089,39090,39091,39092,39093,39094,39095,39096,39097,39098,39099,39100,39101,39102,39103,39104,39105,39106,39107,39108,39109,39110,39111,39112,39113,39114,39115,39116,39117,39119,39120,39124,39126,39127,39131,39132,39133,39136,39137,39138,39139,39140,39141,39142,39145,39146,39147,39148,39149,39150,39151,39152,39153,39154,39155,39156,39157,39158,39159,39160,39161,39162,39163,39164,39165,39166,39167,39168,39169,39170,39171,39172,39173,39174,39175,38121,38123,38126,38127,38131,38132,38133,38135,38137,38140,38141,38143,38147,38146,38150,38151,38153,38154,38157,38158,38159,38162,38163,38164,38165,38166,38168,38171,38173,38174,38175,38178,38186,38187,38185,38188,38193,38194,38196,38198,38199,38200,38204,38206,38207,38210,38197,38212,38213,38214,38217,38220,38222,38223,38226,38227,38228,38230,38231,38232,38233,38235,38238,38239,38237,38241,38242,38244,38245,38246,38247,38248,38249,38250,38251,38252,38255,38257,38258,38259,38202,30695,30700,38601,31189,31213,31203,31211,31238,23879,31235,31234,31262,31252,39176,39177,39178,39179,39180,39182,39183,39185,39186,39187,39188,39189,39190,39191,39192,39193,39194,39195,39196,39197,39198,39199,39200,39201,39202,39203,39204,39205,39206,39207,39208,39209,39210,39211,39212,39213,39215,39216,39217,39218,39219,39220,39221,39222,39223,39224,39225,39226,39227,39228,39229,39230,39231,39232,39233,39234,39235,39236,39237,39238,39239,39240,39241,39242,39243,39244,39245,39246,39247,39248,39249,39250,39251,39254,39255,39256,39257,39258,39259,39260,39261,39262,39263,39264,39265,39266,39268,39270,39283,39288,39289,39291,39294,39298,39299,39305,31289,31287,31313,40655,39333,31344,30344,30350,30355,30361,30372,29918,29920,29996,40480,40482,40488,40489,40490,40491,40492,40498,40497,40502,40504,40503,40505,40506,40510,40513,40514,40516,40518,40519,40520,40521,40523,40524,40526,40529,40533,40535,40538,40539,40540,40542,40547,40550,40551,40552,40553,40554,40555,40556,40561,40557,40563,30098,30100,30102,30112,30109,30124,30115,30131,30132,30136,30148,30129,30128,30147,30146,30166,30157,30179,30184,30182,30180,30187,30183,30211,30193,30204,30207,30224,30208,30213,30220,30231,30218,30245,30232,30229,30233,39308,39310,39322,39323,39324,39325,39326,39327,39328,39329,39330,39331,39332,39334,39335,39337,39338,39339,39340,39341,39342,39343,39344,39345,39346,39347,39348,39349,39350,39351,39352,39353,39354,39355,39356,39357,39358,39359,39360,39361,39362,39363,39364,39365,39366,39367,39368,39369,39370,39371,39372,39373,39374,39375,39376,39377,39378,39379,39380,39381,39382,39383,39384,39385,39386,39387,39388,39389,39390,39391,39392,39393,39394,39395,39396,39397,39398,39399,39400,39401,39402,39403,39404,39405,39406,39407,39408,39409,39410,39411,39412,39413,39414,39415,39416,39417,30235,30268,30242,30240,30272,30253,30256,30271,30261,30275,30270,30259,30285,30302,30292,30300,30294,30315,30319,32714,31462,31352,31353,31360,31366,31368,31381,31398,31392,31404,31400,31405,31411,34916,34921,34930,34941,34943,34946,34978,35014,34999,35004,35017,35042,35022,35043,35045,35057,35098,35068,35048,35070,35056,35105,35097,35091,35099,35082,35124,35115,35126,35137,35174,35195,30091,32997,30386,30388,30684,32786,32788,32790,32796,32800,32802,32805,32806,32807,32809,32808,32817,32779,32821,32835,32838,32845,32850,32873,32881,35203,39032,39040,39043,39418,39419,39420,39421,39422,39423,39424,39425,39426,39427,39428,39429,39430,39431,39432,39433,39434,39435,39436,39437,39438,39439,39440,39441,39442,39443,39444,39445,39446,39447,39448,39449,39450,39451,39452,39453,39454,39455,39456,39457,39458,39459,39460,39461,39462,39463,39464,39465,39466,39467,39468,39469,39470,39471,39472,39473,39474,39475,39476,39477,39478,39479,39480,39481,39482,39483,39484,39485,39486,39487,39488,39489,39490,39491,39492,39493,39494,39495,39496,39497,39498,39499,39500,39501,39502,39503,39504,39505,39506,39507,39508,39509,39510,39511,39512,39513,39049,39052,39053,39055,39060,39066,39067,39070,39071,39073,39074,39077,39078,34381,34388,34412,34414,34431,34426,34428,34427,34472,34445,34443,34476,34461,34471,34467,34474,34451,34473,34486,34500,34485,34510,34480,34490,34481,34479,34505,34511,34484,34537,34545,34546,34541,34547,34512,34579,34526,34548,34527,34520,34513,34563,34567,34552,34568,34570,34573,34569,34595,34619,34590,34597,34606,34586,34622,34632,34612,34609,34601,34615,34623,34690,34594,34685,34686,34683,34656,34672,34636,34670,34699,34643,34659,34684,34660,34649,34661,34707,34735,34728,34770,39514,39515,39516,39517,39518,39519,39520,39521,39522,39523,39524,39525,39526,39527,39528,39529,39530,39531,39538,39555,39561,39565,39566,39572,39573,39577,39590,39593,39594,39595,39596,39597,39598,39599,39602,39603,39604,39605,39609,39611,39613,39614,39615,39619,39620,39622,39623,39624,39625,39626,39629,39630,39631,39632,39634,39636,39637,39638,39639,39641,39642,39643,39644,39645,39646,39648,39650,39651,39652,39653,39655,39656,39657,39658,39660,39662,39664,39665,39666,39667,39668,39669,39670,39671,39672,39674,39676,39677,39678,39679,39680,39681,39682,39684,39685,39686,34758,34696,34693,34733,34711,34691,34731,34789,34732,34741,34739,34763,34771,34749,34769,34752,34762,34779,34794,34784,34798,34838,34835,34814,34826,34843,34849,34873,34876,32566,32578,32580,32581,33296,31482,31485,31496,31491,31492,31509,31498,31531,31503,31559,31544,31530,31513,31534,31537,31520,31525,31524,31539,31550,31518,31576,31578,31557,31605,31564,31581,31584,31598,31611,31586,31602,31601,31632,31654,31655,31672,31660,31645,31656,31621,31658,31644,31650,31659,31668,31697,31681,31692,31709,31706,31717,31718,31722,31756,31742,31740,31759,31766,31755,39687,39689,39690,39691,39692,39693,39694,39696,39697,39698,39700,39701,39702,39703,39704,39705,39706,39707,39708,39709,39710,39712,39713,39714,39716,39717,39718,39719,39720,39721,39722,39723,39724,39725,39726,39728,39729,39731,39732,39733,39734,39735,39736,39737,39738,39741,39742,39743,39744,39750,39754,39755,39756,39758,39760,39762,39763,39765,39766,39767,39768,39769,39770,39771,39772,39773,39774,39775,39776,39777,39778,39779,39780,39781,39782,39783,39784,39785,39786,39787,39788,39789,39790,39791,39792,39793,39794,39795,39796,39797,39798,39799,39800,39801,39802,39803,31775,31786,31782,31800,31809,31808,33278,33281,33282,33284,33260,34884,33313,33314,33315,33325,33327,33320,33323,33336,33339,33331,33332,33342,33348,33353,33355,33359,33370,33375,33384,34942,34949,34952,35032,35039,35166,32669,32671,32679,32687,32688,32690,31868,25929,31889,31901,31900,31902,31906,31922,31932,31933,31937,31943,31948,31949,31944,31941,31959,31976,33390,26280,32703,32718,32725,32741,32737,32742,32745,32750,32755,31992,32119,32166,32174,32327,32411,40632,40628,36211,36228,36244,36241,36273,36199,36205,35911,35913,37194,37200,37198,37199,37220,39804,39805,39806,39807,39808,39809,39810,39811,39812,39813,39814,39815,39816,39817,39818,39819,39820,39821,39822,39823,39824,39825,39826,39827,39828,39829,39830,39831,39832,39833,39834,39835,39836,39837,39838,39839,39840,39841,39842,39843,39844,39845,39846,39847,39848,39849,39850,39851,39852,39853,39854,39855,39856,39857,39858,39859,39860,39861,39862,39863,39864,39865,39866,39867,39868,39869,39870,39871,39872,39873,39874,39875,39876,39877,39878,39879,39880,39881,39882,39883,39884,39885,39886,39887,39888,39889,39890,39891,39892,39893,39894,39895,39896,39897,39898,39899,37218,37217,37232,37225,37231,37245,37246,37234,37236,37241,37260,37253,37264,37261,37265,37282,37283,37290,37293,37294,37295,37301,37300,37306,35925,40574,36280,36331,36357,36441,36457,36277,36287,36284,36282,36292,36310,36311,36314,36318,36302,36303,36315,36294,36332,36343,36344,36323,36345,36347,36324,36361,36349,36372,36381,36383,36396,36398,36387,36399,36410,36416,36409,36405,36413,36401,36425,36417,36418,36433,36434,36426,36464,36470,36476,36463,36468,36485,36495,36500,36496,36508,36510,35960,35970,35978,35973,35992,35988,26011,35286,35294,35290,35292,39900,39901,39902,39903,39904,39905,39906,39907,39908,39909,39910,39911,39912,39913,39914,39915,39916,39917,39918,39919,39920,39921,39922,39923,39924,39925,39926,39927,39928,39929,39930,39931,39932,39933,39934,39935,39936,39937,39938,39939,39940,39941,39942,39943,39944,39945,39946,39947,39948,39949,39950,39951,39952,39953,39954,39955,39956,39957,39958,39959,39960,39961,39962,39963,39964,39965,39966,39967,39968,39969,39970,39971,39972,39973,39974,39975,39976,39977,39978,39979,39980,39981,39982,39983,39984,39985,39986,39987,39988,39989,39990,39991,39992,39993,39994,39995,35301,35307,35311,35390,35622,38739,38633,38643,38639,38662,38657,38664,38671,38670,38698,38701,38704,38718,40832,40835,40837,40838,40839,40840,40841,40842,40844,40702,40715,40717,38585,38588,38589,38606,38610,30655,38624,37518,37550,37576,37694,37738,37834,37775,37950,37995,40063,40066,40069,40070,40071,40072,31267,40075,40078,40080,40081,40082,40084,40085,40090,40091,40094,40095,40096,40097,40098,40099,40101,40102,40103,40104,40105,40107,40109,40110,40112,40113,40114,40115,40116,40117,40118,40119,40122,40123,40124,40125,40132,40133,40134,40135,40138,40139,39996,39997,39998,39999,40000,40001,40002,40003,40004,40005,40006,40007,40008,40009,40010,40011,40012,40013,40014,40015,40016,40017,40018,40019,40020,40021,40022,40023,40024,40025,40026,40027,40028,40029,40030,40031,40032,40033,40034,40035,40036,40037,40038,40039,40040,40041,40042,40043,40044,40045,40046,40047,40048,40049,40050,40051,40052,40053,40054,40055,40056,40057,40058,40059,40061,40062,40064,40067,40068,40073,40074,40076,40079,40083,40086,40087,40088,40089,40093,40106,40108,40111,40121,40126,40127,40128,40129,40130,40136,40137,40145,40146,40154,40155,40160,40161,40140,40141,40142,40143,40144,40147,40148,40149,40151,40152,40153,40156,40157,40159,40162,38780,38789,38801,38802,38804,38831,38827,38819,38834,38836,39601,39600,39607,40536,39606,39610,39612,39617,39616,39621,39618,39627,39628,39633,39749,39747,39751,39753,39752,39757,39761,39144,39181,39214,39253,39252,39647,39649,39654,39663,39659,39675,39661,39673,39688,39695,39699,39711,39715,40637,40638,32315,40578,40583,40584,40587,40594,37846,40605,40607,40667,40668,40669,40672,40671,40674,40681,40679,40677,40682,40687,40738,40748,40751,40761,40759,40765,40766,40772,40163,40164,40165,40166,40167,40168,40169,40170,40171,40172,40173,40174,40175,40176,40177,40178,40179,40180,40181,40182,40183,40184,40185,40186,40187,40188,40189,40190,40191,40192,40193,40194,40195,40196,40197,40198,40199,40200,40201,40202,40203,40204,40205,40206,40207,40208,40209,40210,40211,40212,40213,40214,40215,40216,40217,40218,40219,40220,40221,40222,40223,40224,40225,40226,40227,40228,40229,40230,40231,40232,40233,40234,40235,40236,40237,40238,40239,40240,40241,40242,40243,40244,40245,40246,40247,40248,40249,40250,40251,40252,40253,40254,40255,40256,40257,40258,57908,57909,57910,57911,57912,57913,57914,57915,57916,57917,57918,57919,57920,57921,57922,57923,57924,57925,57926,57927,57928,57929,57930,57931,57932,57933,57934,57935,57936,57937,57938,57939,57940,57941,57942,57943,57944,57945,57946,57947,57948,57949,57950,57951,57952,57953,57954,57955,57956,57957,57958,57959,57960,57961,57962,57963,57964,57965,57966,57967,57968,57969,57970,57971,57972,57973,57974,57975,57976,57977,57978,57979,57980,57981,57982,57983,57984,57985,57986,57987,57988,57989,57990,57991,57992,57993,57994,57995,57996,57997,57998,57999,58000,58001,40259,40260,40261,40262,40263,40264,40265,40266,40267,40268,40269,40270,40271,40272,40273,40274,40275,40276,40277,40278,40279,40280,40281,40282,40283,40284,40285,40286,40287,40288,40289,40290,40291,40292,40293,40294,40295,40296,40297,40298,40299,40300,40301,40302,40303,40304,40305,40306,40307,40308,40309,40310,40311,40312,40313,40314,40315,40316,40317,40318,40319,40320,40321,40322,40323,40324,40325,40326,40327,40328,40329,40330,40331,40332,40333,40334,40335,40336,40337,40338,40339,40340,40341,40342,40343,40344,40345,40346,40347,40348,40349,40350,40351,40352,40353,40354,58002,58003,58004,58005,58006,58007,58008,58009,58010,58011,58012,58013,58014,58015,58016,58017,58018,58019,58020,58021,58022,58023,58024,58025,58026,58027,58028,58029,58030,58031,58032,58033,58034,58035,58036,58037,58038,58039,58040,58041,58042,58043,58044,58045,58046,58047,58048,58049,58050,58051,58052,58053,58054,58055,58056,58057,58058,58059,58060,58061,58062,58063,58064,58065,58066,58067,58068,58069,58070,58071,58072,58073,58074,58075,58076,58077,58078,58079,58080,58081,58082,58083,58084,58085,58086,58087,58088,58089,58090,58091,58092,58093,58094,58095,40355,40356,40357,40358,40359,40360,40361,40362,40363,40364,40365,40366,40367,40368,40369,40370,40371,40372,40373,40374,40375,40376,40377,40378,40379,40380,40381,40382,40383,40384,40385,40386,40387,40388,40389,40390,40391,40392,40393,40394,40395,40396,40397,40398,40399,40400,40401,40402,40403,40404,40405,40406,40407,40408,40409,40410,40411,40412,40413,40414,40415,40416,40417,40418,40419,40420,40421,40422,40423,40424,40425,40426,40427,40428,40429,40430,40431,40432,40433,40434,40435,40436,40437,40438,40439,40440,40441,40442,40443,40444,40445,40446,40447,40448,40449,40450,58096,58097,58098,58099,58100,58101,58102,58103,58104,58105,58106,58107,58108,58109,58110,58111,58112,58113,58114,58115,58116,58117,58118,58119,58120,58121,58122,58123,58124,58125,58126,58127,58128,58129,58130,58131,58132,58133,58134,58135,58136,58137,58138,58139,58140,58141,58142,58143,58144,58145,58146,58147,58148,58149,58150,58151,58152,58153,58154,58155,58156,58157,58158,58159,58160,58161,58162,58163,58164,58165,58166,58167,58168,58169,58170,58171,58172,58173,58174,58175,58176,58177,58178,58179,58180,58181,58182,58183,58184,58185,58186,58187,58188,58189,40451,40452,40453,40454,40455,40456,40457,40458,40459,40460,40461,40462,40463,40464,40465,40466,40467,40468,40469,40470,40471,40472,40473,40474,40475,40476,40477,40478,40484,40487,40494,40496,40500,40507,40508,40512,40525,40528,40530,40531,40532,40534,40537,40541,40543,40544,40545,40546,40549,40558,40559,40562,40564,40565,40566,40567,40568,40569,40570,40571,40572,40573,40576,40577,40579,40580,40581,40582,40585,40586,40588,40589,40590,40591,40592,40593,40596,40597,40598,40599,40600,40601,40602,40603,40604,40606,40608,40609,40610,40611,40612,40613,40615,40616,40617,40618,58190,58191,58192,58193,58194,58195,58196,58197,58198,58199,58200,58201,58202,58203,58204,58205,58206,58207,58208,58209,58210,58211,58212,58213,58214,58215,58216,58217,58218,58219,58220,58221,58222,58223,58224,58225,58226,58227,58228,58229,58230,58231,58232,58233,58234,58235,58236,58237,58238,58239,58240,58241,58242,58243,58244,58245,58246,58247,58248,58249,58250,58251,58252,58253,58254,58255,58256,58257,58258,58259,58260,58261,58262,58263,58264,58265,58266,58267,58268,58269,58270,58271,58272,58273,58274,58275,58276,58277,58278,58279,58280,58281,58282,58283,40619,40620,40621,40622,40623,40624,40625,40626,40627,40629,40630,40631,40633,40634,40636,40639,40640,40641,40642,40643,40645,40646,40647,40648,40650,40651,40652,40656,40658,40659,40661,40662,40663,40665,40666,40670,40673,40675,40676,40678,40680,40683,40684,40685,40686,40688,40689,40690,40691,40692,40693,40694,40695,40696,40698,40701,40703,40704,40705,40706,40707,40708,40709,40710,40711,40712,40713,40714,40716,40719,40721,40722,40724,40725,40726,40728,40730,40731,40732,40733,40734,40735,40737,40739,40740,40741,40742,40743,40744,40745,40746,40747,40749,40750,40752,40753,58284,58285,58286,58287,58288,58289,58290,58291,58292,58293,58294,58295,58296,58297,58298,58299,58300,58301,58302,58303,58304,58305,58306,58307,58308,58309,58310,58311,58312,58313,58314,58315,58316,58317,58318,58319,58320,58321,58322,58323,58324,58325,58326,58327,58328,58329,58330,58331,58332,58333,58334,58335,58336,58337,58338,58339,58340,58341,58342,58343,58344,58345,58346,58347,58348,58349,58350,58351,58352,58353,58354,58355,58356,58357,58358,58359,58360,58361,58362,58363,58364,58365,58366,58367,58368,58369,58370,58371,58372,58373,58374,58375,58376,58377,40754,40755,40756,40757,40758,40760,40762,40764,40767,40768,40769,40770,40771,40773,40774,40775,40776,40777,40778,40779,40780,40781,40782,40783,40786,40787,40788,40789,40790,40791,40792,40793,40794,40795,40796,40797,40798,40799,40800,40801,40802,40803,40804,40805,40806,40807,40808,40809,40810,40811,40812,40813,40814,40815,40816,40817,40818,40819,40820,40821,40822,40823,40824,40825,40826,40827,40828,40829,40830,40833,40834,40845,40846,40847,40848,40849,40850,40851,40852,40853,40854,40855,40856,40860,40861,40862,40865,40866,40867,40868,40869,63788,63865,63893,63975,63985,58378,58379,58380,58381,58382,58383,58384,58385,58386,58387,58388,58389,58390,58391,58392,58393,58394,58395,58396,58397,58398,58399,58400,58401,58402,58403,58404,58405,58406,58407,58408,58409,58410,58411,58412,58413,58414,58415,58416,58417,58418,58419,58420,58421,58422,58423,58424,58425,58426,58427,58428,58429,58430,58431,58432,58433,58434,58435,58436,58437,58438,58439,58440,58441,58442,58443,58444,58445,58446,58447,58448,58449,58450,58451,58452,58453,58454,58455,58456,58457,58458,58459,58460,58461,58462,58463,58464,58465,58466,58467,58468,58469,58470,58471,64012,64013,64014,64015,64017,64019,64020,64024,64031,64032,64033,64035,64036,64039,64040,64041,11905,59414,59415,59416,11908,13427,13383,11912,11915,59422,13726,13850,13838,11916,11927,14702,14616,59430,14799,14815,14963,14800,59435,59436,15182,15470,15584,11943,59441,59442,11946,16470,16735,11950,17207,11955,11958,11959,59451,17329,17324,11963,17373,17622,18017,17996,59459,18211,18217,18300,18317,11978,18759,18810,18813,18818,18819,18821,18822,18847,18843,18871,18870,59476,59477,19619,19615,19616,19617,19575,19618,19731,19732,19733,19734,19735,19736,19737,19886,59492,58472,58473,58474,58475,58476,58477,58478,58479,58480,58481,58482,58483,58484,58485,58486,58487,58488,58489,58490,58491,58492,58493,58494,58495,58496,58497,58498,58499,58500,58501,58502,58503,58504,58505,58506,58507,58508,58509,58510,58511,58512,58513,58514,58515,58516,58517,58518,58519,58520,58521,58522,58523,58524,58525,58526,58527,58528,58529,58530,58531,58532,58533,58534,58535,58536,58537,58538,58539,58540,58541,58542,58543,58544,58545,58546,58547,58548,58549,58550,58551,58552,58553,58554,58555,58556,58557,58558,58559,58560,58561,58562,58563,58564,58565],"gb18030-ranges":[[0,128],[36,165],[38,169],[45,178],[50,184],[81,216],[89,226],[95,235],[96,238],[100,244],[103,248],[104,251],[105,253],[109,258],[126,276],[133,284],[148,300],[172,325],[175,329],[179,334],[208,364],[306,463],[307,465],[308,467],[309,469],[310,471],[311,473],[312,475],[313,477],[341,506],[428,594],[443,610],[544,712],[545,716],[558,730],[741,930],[742,938],[749,962],[750,970],[805,1026],[819,1104],[820,1106],[7922,8209],[7924,8215],[7925,8218],[7927,8222],[7934,8231],[7943,8241],[7944,8244],[7945,8246],[7950,8252],[8062,8365],[8148,8452],[8149,8454],[8152,8458],[8164,8471],[8174,8482],[8236,8556],[8240,8570],[8262,8596],[8264,8602],[8374,8713],[8380,8720],[8381,8722],[8384,8726],[8388,8731],[8390,8737],[8392,8740],[8393,8742],[8394,8748],[8396,8751],[8401,8760],[8406,8766],[8416,8777],[8419,8781],[8424,8787],[8437,8802],[8439,8808],[8445,8816],[8482,8854],[8485,8858],[8496,8870],[8521,8896],[8603,8979],[8936,9322],[8946,9372],[9046,9548],[9050,9588],[9063,9616],[9066,9622],[9076,9634],[9092,9652],[9100,9662],[9108,9672],[9111,9676],[9113,9680],[9131,9702],[9162,9735],[9164,9738],[9218,9793],[9219,9795],[11329,11906],[11331,11909],[11334,11913],[11336,11917],[11346,11928],[11361,11944],[11363,11947],[11366,11951],[11370,11956],[11372,11960],[11375,11964],[11389,11979],[11682,12284],[11686,12292],[11687,12312],[11692,12319],[11694,12330],[11714,12351],[11716,12436],[11723,12447],[11725,12535],[11730,12543],[11736,12586],[11982,12842],[11989,12850],[12102,12964],[12336,13200],[12348,13215],[12350,13218],[12384,13253],[12393,13263],[12395,13267],[12397,13270],[12510,13384],[12553,13428],[12851,13727],[12962,13839],[12973,13851],[13738,14617],[13823,14703],[13919,14801],[13933,14816],[14080,14964],[14298,15183],[14585,15471],[14698,15585],[15583,16471],[15847,16736],[16318,17208],[16434,17325],[16438,17330],[16481,17374],[16729,17623],[17102,17997],[17122,18018],[17315,18212],[17320,18218],[17402,18301],[17418,18318],[17859,18760],[17909,18811],[17911,18814],[17915,18820],[17916,18823],[17936,18844],[17939,18848],[17961,18872],[18664,19576],[18703,19620],[18814,19738],[18962,19887],[19043,40870],[33469,59244],[33470,59336],[33471,59367],[33484,59413],[33485,59417],[33490,59423],[33497,59431],[33501,59437],[33505,59443],[33513,59452],[33520,59460],[33536,59478],[33550,59493],[37845,63789],[37921,63866],[37948,63894],[38029,63976],[38038,63986],[38064,64016],[38065,64018],[38066,64021],[38069,64025],[38075,64034],[38076,64037],[38078,64042],[39108,65074],[39109,65093],[39113,65107],[39114,65112],[39115,65127],[39116,65132],[39265,65375],[39394,65510],[189000,65536]],"jis0208":[12288,12289,12290,65292,65294,12539,65306,65307,65311,65281,12443,12444,180,65344,168,65342,65507,65343,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,8213,8208,65295,65340,65374,8741,65372,8230,8229,8216,8217,8220,8221,65288,65289,12308,12309,65339,65341,65371,65373,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,65291,65293,177,215,247,65309,8800,65308,65310,8806,8807,8734,8756,9794,9792,176,8242,8243,8451,65509,65284,65504,65505,65285,65283,65286,65290,65312,167,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8251,12306,8594,8592,8593,8595,12307,null,null,null,null,null,null,null,null,null,null,null,8712,8715,8838,8839,8834,8835,8746,8745,null,null,null,null,null,null,null,null,8743,8744,65506,8658,8660,8704,8707,null,null,null,null,null,null,null,null,null,null,null,8736,8869,8978,8706,8711,8801,8786,8810,8811,8730,8765,8733,8757,8747,8748,null,null,null,null,null,null,null,8491,8240,9839,9837,9834,8224,8225,182,null,null,null,null,9711,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,null,null,null,null,null,null,null,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,null,null,null,null,null,null,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,null,null,null,null,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,9327,9328,9329,9330,9331,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,13129,13076,13090,13133,13080,13095,13059,13110,13137,13143,13069,13094,13091,13099,13130,13115,13212,13213,13214,13198,13199,13252,13217,null,null,null,null,null,null,null,null,13179,12317,12319,8470,13261,8481,12964,12965,12966,12967,12968,12849,12850,12857,13182,13181,13180,8786,8801,8747,8750,8721,8730,8869,8736,8735,8895,8757,8745,8746,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20124,21782,23043,38463,21696,24859,25384,23030,36898,33909,33564,31312,24746,25569,28197,26093,33894,33446,39925,26771,22311,26017,25201,23451,22992,34427,39156,32098,32190,39822,25110,31903,34999,23433,24245,25353,26263,26696,38343,38797,26447,20197,20234,20301,20381,20553,22258,22839,22996,23041,23561,24799,24847,24944,26131,26885,28858,30031,30064,31227,32173,32239,32963,33806,34915,35586,36949,36986,21307,20117,20133,22495,32946,37057,30959,19968,22769,28322,36920,31282,33576,33419,39983,20801,21360,21693,21729,22240,23035,24341,39154,28139,32996,34093,38498,38512,38560,38907,21515,21491,23431,28879,32701,36802,38632,21359,40284,31418,19985,30867,33276,28198,22040,21764,27421,34074,39995,23013,21417,28006,29916,38287,22082,20113,36939,38642,33615,39180,21473,21942,23344,24433,26144,26355,26628,27704,27891,27945,29787,30408,31310,38964,33521,34907,35424,37613,28082,30123,30410,39365,24742,35585,36234,38322,27022,21421,20870,22290,22576,22852,23476,24310,24616,25513,25588,27839,28436,28814,28948,29017,29141,29503,32257,33398,33489,34199,36960,37467,40219,22633,26044,27738,29989,20985,22830,22885,24448,24540,25276,26106,27178,27431,27572,29579,32705,35158,40236,40206,40644,23713,27798,33659,20740,23627,25014,33222,26742,29281,20057,20474,21368,24681,28201,31311,38899,19979,21270,20206,20309,20285,20385,20339,21152,21487,22025,22799,23233,23478,23521,31185,26247,26524,26550,27468,27827,28779,29634,31117,31166,31292,31623,33457,33499,33540,33655,33775,33747,34662,35506,22057,36008,36838,36942,38686,34442,20420,23784,25105,29273,30011,33253,33469,34558,36032,38597,39187,39381,20171,20250,35299,22238,22602,22730,24315,24555,24618,24724,24674,25040,25106,25296,25913,39745,26214,26800,28023,28784,30028,30342,32117,33445,34809,38283,38542,35997,20977,21182,22806,21683,23475,23830,24936,27010,28079,30861,33995,34903,35442,37799,39608,28012,39336,34521,22435,26623,34510,37390,21123,22151,21508,24275,25313,25785,26684,26680,27579,29554,30906,31339,35226,35282,36203,36611,37101,38307,38548,38761,23398,23731,27005,38989,38990,25499,31520,27179,27263,26806,39949,28511,21106,21917,24688,25324,27963,28167,28369,33883,35088,36676,19988,39993,21494,26907,27194,38788,26666,20828,31427,33970,37340,37772,22107,40232,26658,33541,33841,31909,21000,33477,29926,20094,20355,20896,23506,21002,21208,21223,24059,21914,22570,23014,23436,23448,23515,24178,24185,24739,24863,24931,25022,25563,25954,26577,26707,26874,27454,27475,27735,28450,28567,28485,29872,29976,30435,30475,31487,31649,31777,32233,32566,32752,32925,33382,33694,35251,35532,36011,36996,37969,38291,38289,38306,38501,38867,39208,33304,20024,21547,23736,24012,29609,30284,30524,23721,32747,36107,38593,38929,38996,39000,20225,20238,21361,21916,22120,22522,22855,23305,23492,23696,24076,24190,24524,25582,26426,26071,26082,26399,26827,26820,27231,24112,27589,27671,27773,30079,31048,23395,31232,32000,24509,35215,35352,36020,36215,36556,36637,39138,39438,39740,20096,20605,20736,22931,23452,25135,25216,25836,27450,29344,30097,31047,32681,34811,35516,35696,25516,33738,38816,21513,21507,21931,26708,27224,35440,30759,26485,40653,21364,23458,33050,34384,36870,19992,20037,20167,20241,21450,21560,23470,24339,24613,25937,26429,27714,27762,27875,28792,29699,31350,31406,31496,32026,31998,32102,26087,29275,21435,23621,24040,25298,25312,25369,28192,34394,35377,36317,37624,28417,31142,39770,20136,20139,20140,20379,20384,20689,20807,31478,20849,20982,21332,21281,21375,21483,21932,22659,23777,24375,24394,24623,24656,24685,25375,25945,27211,27841,29378,29421,30703,33016,33029,33288,34126,37111,37857,38911,39255,39514,20208,20957,23597,26241,26989,23616,26354,26997,29577,26704,31873,20677,21220,22343,24062,37670,26020,27427,27453,29748,31105,31165,31563,32202,33465,33740,34943,35167,35641,36817,37329,21535,37504,20061,20534,21477,21306,29399,29590,30697,33510,36527,39366,39368,39378,20855,24858,34398,21936,31354,20598,23507,36935,38533,20018,27355,37351,23633,23624,25496,31391,27795,38772,36705,31402,29066,38536,31874,26647,32368,26705,37740,21234,21531,34219,35347,32676,36557,37089,21350,34952,31041,20418,20670,21009,20804,21843,22317,29674,22411,22865,24418,24452,24693,24950,24935,25001,25522,25658,25964,26223,26690,28179,30054,31293,31995,32076,32153,32331,32619,33550,33610,34509,35336,35427,35686,36605,38938,40335,33464,36814,39912,21127,25119,25731,28608,38553,26689,20625,27424,27770,28500,31348,32080,34880,35363,26376,20214,20537,20518,20581,20860,21048,21091,21927,22287,22533,23244,24314,25010,25080,25331,25458,26908,27177,29309,29356,29486,30740,30831,32121,30476,32937,35211,35609,36066,36562,36963,37749,38522,38997,39443,40568,20803,21407,21427,24187,24358,28187,28304,29572,29694,32067,33335,35328,35578,38480,20046,20491,21476,21628,22266,22993,23396,24049,24235,24359,25144,25925,26543,28246,29392,31946,34996,32929,32993,33776,34382,35463,36328,37431,38599,39015,40723,20116,20114,20237,21320,21577,21566,23087,24460,24481,24735,26791,27278,29786,30849,35486,35492,35703,37264,20062,39881,20132,20348,20399,20505,20502,20809,20844,21151,21177,21246,21402,21475,21521,21518,21897,22353,22434,22909,23380,23389,23439,24037,24039,24055,24184,24195,24218,24247,24344,24658,24908,25239,25304,25511,25915,26114,26179,26356,26477,26657,26775,27083,27743,27946,28009,28207,28317,30002,30343,30828,31295,31968,32005,32024,32094,32177,32789,32771,32943,32945,33108,33167,33322,33618,34892,34913,35611,36002,36092,37066,37237,37489,30783,37628,38308,38477,38917,39321,39640,40251,21083,21163,21495,21512,22741,25335,28640,35946,36703,40633,20811,21051,21578,22269,31296,37239,40288,40658,29508,28425,33136,29969,24573,24794,39592,29403,36796,27492,38915,20170,22256,22372,22718,23130,24680,25031,26127,26118,26681,26801,28151,30165,32058,33390,39746,20123,20304,21449,21766,23919,24038,24046,26619,27801,29811,30722,35408,37782,35039,22352,24231,25387,20661,20652,20877,26368,21705,22622,22971,23472,24425,25165,25505,26685,27507,28168,28797,37319,29312,30741,30758,31085,25998,32048,33756,35009,36617,38555,21092,22312,26448,32618,36001,20916,22338,38442,22586,27018,32948,21682,23822,22524,30869,40442,20316,21066,21643,25662,26152,26388,26613,31364,31574,32034,37679,26716,39853,31545,21273,20874,21047,23519,25334,25774,25830,26413,27578,34217,38609,30352,39894,25420,37638,39851,30399,26194,19977,20632,21442,23665,24808,25746,25955,26719,29158,29642,29987,31639,32386,34453,35715,36059,37240,39184,26028,26283,27531,20181,20180,20282,20351,21050,21496,21490,21987,22235,22763,22987,22985,23039,23376,23629,24066,24107,24535,24605,25351,25903,23388,26031,26045,26088,26525,27490,27515,27663,29509,31049,31169,31992,32025,32043,32930,33026,33267,35222,35422,35433,35430,35468,35566,36039,36060,38604,39164,27503,20107,20284,20365,20816,23383,23546,24904,25345,26178,27425,28363,27835,29246,29885,30164,30913,31034,32780,32819,33258,33940,36766,27728,40575,24335,35672,40235,31482,36600,23437,38635,19971,21489,22519,22833,23241,23460,24713,28287,28422,30142,36074,23455,34048,31712,20594,26612,33437,23649,34122,32286,33294,20889,23556,25448,36198,26012,29038,31038,32023,32773,35613,36554,36974,34503,37034,20511,21242,23610,26451,28796,29237,37196,37320,37675,33509,23490,24369,24825,20027,21462,23432,25163,26417,27530,29417,29664,31278,33131,36259,37202,39318,20754,21463,21610,23551,25480,27193,32172,38656,22234,21454,21608,23447,23601,24030,20462,24833,25342,27954,31168,31179,32066,32333,32722,33261,33311,33936,34886,35186,35728,36468,36655,36913,37195,37228,38598,37276,20160,20303,20805,21313,24467,25102,26580,27713,28171,29539,32294,37325,37507,21460,22809,23487,28113,31069,32302,31899,22654,29087,20986,34899,36848,20426,23803,26149,30636,31459,33308,39423,20934,24490,26092,26991,27529,28147,28310,28516,30462,32020,24033,36981,37255,38918,20966,21021,25152,26257,26329,28186,24246,32210,32626,26360,34223,34295,35576,21161,21465,22899,24207,24464,24661,37604,38500,20663,20767,21213,21280,21319,21484,21736,21830,21809,22039,22888,22974,23100,23477,23558,23567,23569,23578,24196,24202,24288,24432,25215,25220,25307,25484,25463,26119,26124,26157,26230,26494,26786,27167,27189,27836,28040,28169,28248,28988,28966,29031,30151,30465,30813,30977,31077,31216,31456,31505,31911,32057,32918,33750,33931,34121,34909,35059,35359,35388,35412,35443,35937,36062,37284,37478,37758,37912,38556,38808,19978,19976,19998,20055,20887,21104,22478,22580,22732,23330,24120,24773,25854,26465,26454,27972,29366,30067,31331,33976,35698,37304,37664,22065,22516,39166,25325,26893,27542,29165,32340,32887,33394,35302,39135,34645,36785,23611,20280,20449,20405,21767,23072,23517,23529,24515,24910,25391,26032,26187,26862,27035,28024,28145,30003,30137,30495,31070,31206,32051,33251,33455,34218,35242,35386,36523,36763,36914,37341,38663,20154,20161,20995,22645,22764,23563,29978,23613,33102,35338,36805,38499,38765,31525,35535,38920,37218,22259,21416,36887,21561,22402,24101,25512,27700,28810,30561,31883,32736,34928,36930,37204,37648,37656,38543,29790,39620,23815,23913,25968,26530,36264,38619,25454,26441,26905,33733,38935,38592,35070,28548,25722,23544,19990,28716,30045,26159,20932,21046,21218,22995,24449,24615,25104,25919,25972,26143,26228,26866,26646,27491,28165,29298,29983,30427,31934,32854,22768,35069,35199,35488,35475,35531,36893,37266,38738,38745,25993,31246,33030,38587,24109,24796,25114,26021,26132,26512,30707,31309,31821,32318,33034,36012,36196,36321,36447,30889,20999,25305,25509,25666,25240,35373,31363,31680,35500,38634,32118,33292,34633,20185,20808,21315,21344,23459,23554,23574,24029,25126,25159,25776,26643,26676,27849,27973,27927,26579,28508,29006,29053,26059,31359,31661,32218,32330,32680,33146,33307,33337,34214,35438,36046,36341,36984,36983,37549,37521,38275,39854,21069,21892,28472,28982,20840,31109,32341,33203,31950,22092,22609,23720,25514,26366,26365,26970,29401,30095,30094,30990,31062,31199,31895,32032,32068,34311,35380,38459,36961,40736,20711,21109,21452,21474,20489,21930,22766,22863,29245,23435,23652,21277,24803,24819,25436,25475,25407,25531,25805,26089,26361,24035,27085,27133,28437,29157,20105,30185,30456,31379,31967,32207,32156,32865,33609,33624,33900,33980,34299,35013,36208,36865,36973,37783,38684,39442,20687,22679,24974,33235,34101,36104,36896,20419,20596,21063,21363,24687,25417,26463,28204,36275,36895,20439,23646,36042,26063,32154,21330,34966,20854,25539,23384,23403,23562,25613,26449,36956,20182,22810,22826,27760,35409,21822,22549,22949,24816,25171,26561,33333,26965,38464,39364,39464,20307,22534,23550,32784,23729,24111,24453,24608,24907,25140,26367,27888,28382,32974,33151,33492,34955,36024,36864,36910,38538,40667,39899,20195,21488,22823,31532,37261,38988,40441,28381,28711,21331,21828,23429,25176,25246,25299,27810,28655,29730,35351,37944,28609,35582,33592,20967,34552,21482,21481,20294,36948,36784,22890,33073,24061,31466,36799,26842,35895,29432,40008,27197,35504,20025,21336,22022,22374,25285,25506,26086,27470,28129,28251,28845,30701,31471,31658,32187,32829,32966,34507,35477,37723,22243,22727,24382,26029,26262,27264,27573,30007,35527,20516,30693,22320,24347,24677,26234,27744,30196,31258,32622,33268,34584,36933,39347,31689,30044,31481,31569,33988,36880,31209,31378,33590,23265,30528,20013,20210,23449,24544,25277,26172,26609,27880,34411,34935,35387,37198,37619,39376,27159,28710,29482,33511,33879,36015,19969,20806,20939,21899,23541,24086,24115,24193,24340,24373,24427,24500,25074,25361,26274,26397,28526,29266,30010,30522,32884,33081,33144,34678,35519,35548,36229,36339,37530,38263,38914,40165,21189,25431,30452,26389,27784,29645,36035,37806,38515,27941,22684,26894,27084,36861,37786,30171,36890,22618,26626,25524,27131,20291,28460,26584,36795,34086,32180,37716,26943,28528,22378,22775,23340,32044,29226,21514,37347,40372,20141,20302,20572,20597,21059,35998,21576,22564,23450,24093,24213,24237,24311,24351,24716,25269,25402,25552,26799,27712,30855,31118,31243,32224,33351,35330,35558,36420,36883,37048,37165,37336,40718,27877,25688,25826,25973,28404,30340,31515,36969,37841,28346,21746,24505,25764,36685,36845,37444,20856,22635,22825,23637,24215,28155,32399,29980,36028,36578,39003,28857,20253,27583,28593,30000,38651,20814,21520,22581,22615,22956,23648,24466,26007,26460,28193,30331,33759,36077,36884,37117,37709,30757,30778,21162,24230,22303,22900,24594,20498,20826,20908,20941,20992,21776,22612,22616,22871,23445,23798,23947,24764,25237,25645,26481,26691,26812,26847,30423,28120,28271,28059,28783,29128,24403,30168,31095,31561,31572,31570,31958,32113,21040,33891,34153,34276,35342,35588,35910,36367,36867,36879,37913,38518,38957,39472,38360,20685,21205,21516,22530,23566,24999,25758,27934,30643,31461,33012,33796,36947,37509,23776,40199,21311,24471,24499,28060,29305,30563,31167,31716,27602,29420,35501,26627,27233,20984,31361,26932,23626,40182,33515,23493,37193,28702,22136,23663,24775,25958,27788,35930,36929,38931,21585,26311,37389,22856,37027,20869,20045,20970,34201,35598,28760,25466,37707,26978,39348,32260,30071,21335,26976,36575,38627,27741,20108,23612,24336,36841,21250,36049,32905,34425,24319,26085,20083,20837,22914,23615,38894,20219,22922,24525,35469,28641,31152,31074,23527,33905,29483,29105,24180,24565,25467,25754,29123,31896,20035,24316,20043,22492,22178,24745,28611,32013,33021,33075,33215,36786,35223,34468,24052,25226,25773,35207,26487,27874,27966,29750,30772,23110,32629,33453,39340,20467,24259,25309,25490,25943,26479,30403,29260,32972,32954,36649,37197,20493,22521,23186,26757,26995,29028,29437,36023,22770,36064,38506,36889,34687,31204,30695,33833,20271,21093,21338,25293,26575,27850,30333,31636,31893,33334,34180,36843,26333,28448,29190,32283,33707,39361,40614,20989,31665,30834,31672,32903,31560,27368,24161,32908,30033,30048,20843,37474,28300,30330,37271,39658,20240,32624,25244,31567,38309,40169,22138,22617,34532,38588,20276,21028,21322,21453,21467,24070,25644,26001,26495,27710,27726,29256,29359,29677,30036,32321,33324,34281,36009,31684,37318,29033,38930,39151,25405,26217,30058,30436,30928,34115,34542,21290,21329,21542,22915,24199,24444,24754,25161,25209,25259,26000,27604,27852,30130,30382,30865,31192,32203,32631,32933,34987,35513,36027,36991,38750,39131,27147,31800,20633,23614,24494,26503,27608,29749,30473,32654,40763,26570,31255,21305,30091,39661,24422,33181,33777,32920,24380,24517,30050,31558,36924,26727,23019,23195,32016,30334,35628,20469,24426,27161,27703,28418,29922,31080,34920,35413,35961,24287,25551,30149,31186,33495,37672,37618,33948,34541,39981,21697,24428,25996,27996,28693,36007,36051,38971,25935,29942,19981,20184,22496,22827,23142,23500,20904,24067,24220,24598,25206,25975,26023,26222,28014,29238,31526,33104,33178,33433,35676,36000,36070,36212,38428,38468,20398,25771,27494,33310,33889,34154,37096,23553,26963,39080,33914,34135,20239,21103,24489,24133,26381,31119,33145,35079,35206,28149,24343,25173,27832,20175,29289,39826,20998,21563,22132,22707,24996,25198,28954,22894,31881,31966,32027,38640,25991,32862,19993,20341,20853,22592,24163,24179,24330,26564,20006,34109,38281,38491,31859,38913,20731,22721,30294,30887,21029,30629,34065,31622,20559,22793,29255,31687,32232,36794,36820,36941,20415,21193,23081,24321,38829,20445,33303,37610,22275,25429,27497,29995,35036,36628,31298,21215,22675,24917,25098,26286,27597,31807,33769,20515,20472,21253,21574,22577,22857,23453,23792,23791,23849,24214,25265,25447,25918,26041,26379,27861,27873,28921,30770,32299,32990,33459,33804,34028,34562,35090,35370,35914,37030,37586,39165,40179,40300,20047,20129,20621,21078,22346,22952,24125,24536,24537,25151,26292,26395,26576,26834,20882,32033,32938,33192,35584,35980,36031,37502,38450,21536,38956,21271,20693,21340,22696,25778,26420,29287,30566,31302,37350,21187,27809,27526,22528,24140,22868,26412,32763,20961,30406,25705,30952,39764,40635,22475,22969,26151,26522,27598,21737,27097,24149,33180,26517,39850,26622,40018,26717,20134,20451,21448,25273,26411,27819,36804,20397,32365,40639,19975,24930,28288,28459,34067,21619,26410,39749,24051,31637,23724,23494,34588,28234,34001,31252,33032,22937,31885,27665,30496,21209,22818,28961,29279,30683,38695,40289,26891,23167,23064,20901,21517,21629,26126,30431,36855,37528,40180,23018,29277,28357,20813,26825,32191,32236,38754,40634,25720,27169,33538,22916,23391,27611,29467,30450,32178,32791,33945,20786,26408,40665,30446,26466,21247,39173,23588,25147,31870,36016,21839,24758,32011,38272,21249,20063,20918,22812,29242,32822,37326,24357,30690,21380,24441,32004,34220,35379,36493,38742,26611,34222,37971,24841,24840,27833,30290,35565,36664,21807,20305,20778,21191,21451,23461,24189,24736,24962,25558,26377,26586,28263,28044,29494,29495,30001,31056,35029,35480,36938,37009,37109,38596,34701,22805,20104,20313,19982,35465,36671,38928,20653,24188,22934,23481,24248,25562,25594,25793,26332,26954,27096,27915,28342,29076,29992,31407,32650,32768,33865,33993,35201,35617,36362,36965,38525,39178,24958,25233,27442,27779,28020,32716,32764,28096,32645,34746,35064,26469,33713,38972,38647,27931,32097,33853,37226,20081,21365,23888,27396,28651,34253,34349,35239,21033,21519,23653,26446,26792,29702,29827,30178,35023,35041,37324,38626,38520,24459,29575,31435,33870,25504,30053,21129,27969,28316,29705,30041,30827,31890,38534,31452,40845,20406,24942,26053,34396,20102,20142,20698,20001,20940,23534,26009,26753,28092,29471,30274,30637,31260,31975,33391,35538,36988,37327,38517,38936,21147,32209,20523,21400,26519,28107,29136,29747,33256,36650,38563,40023,40607,29792,22593,28057,32047,39006,20196,20278,20363,20919,21169,23994,24604,29618,31036,33491,37428,38583,38646,38666,40599,40802,26278,27508,21015,21155,28872,35010,24265,24651,24976,28451,29001,31806,32244,32879,34030,36899,37676,21570,39791,27347,28809,36034,36335,38706,21172,23105,24266,24324,26391,27004,27028,28010,28431,29282,29436,31725,32769,32894,34635,37070,20845,40595,31108,32907,37682,35542,20525,21644,35441,27498,36036,33031,24785,26528,40434,20121,20120,39952,35435,34241,34152,26880,28286,30871,33109,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24332,19984,19989,20010,20017,20022,20028,20031,20034,20054,20056,20098,20101,35947,20106,33298,24333,20110,20126,20127,20128,20130,20144,20147,20150,20174,20173,20164,20166,20162,20183,20190,20205,20191,20215,20233,20314,20272,20315,20317,20311,20295,20342,20360,20367,20376,20347,20329,20336,20369,20335,20358,20374,20760,20436,20447,20430,20440,20443,20433,20442,20432,20452,20453,20506,20520,20500,20522,20517,20485,20252,20470,20513,20521,20524,20478,20463,20497,20486,20547,20551,26371,20565,20560,20552,20570,20566,20588,20600,20608,20634,20613,20660,20658,20681,20682,20659,20674,20694,20702,20709,20717,20707,20718,20729,20725,20745,20737,20738,20758,20757,20756,20762,20769,20794,20791,20796,20795,20799,20800,20818,20812,20820,20834,31480,20841,20842,20846,20864,20866,22232,20876,20873,20879,20881,20883,20885,20886,20900,20902,20898,20905,20906,20907,20915,20913,20914,20912,20917,20925,20933,20937,20955,20960,34389,20969,20973,20976,20981,20990,20996,21003,21012,21006,21031,21034,21038,21043,21049,21071,21060,21067,21068,21086,21076,21098,21108,21097,21107,21119,21117,21133,21140,21138,21105,21128,21137,36776,36775,21164,21165,21180,21173,21185,21197,21207,21214,21219,21222,39149,21216,21235,21237,21240,21241,21254,21256,30008,21261,21264,21263,21269,21274,21283,21295,21297,21299,21304,21312,21318,21317,19991,21321,21325,20950,21342,21353,21358,22808,21371,21367,21378,21398,21408,21414,21413,21422,21424,21430,21443,31762,38617,21471,26364,29166,21486,21480,21485,21498,21505,21565,21568,21548,21549,21564,21550,21558,21545,21533,21582,21647,21621,21646,21599,21617,21623,21616,21650,21627,21632,21622,21636,21648,21638,21703,21666,21688,21669,21676,21700,21704,21672,21675,21698,21668,21694,21692,21720,21733,21734,21775,21780,21757,21742,21741,21754,21730,21817,21824,21859,21836,21806,21852,21829,21846,21847,21816,21811,21853,21913,21888,21679,21898,21919,21883,21886,21912,21918,21934,21884,21891,21929,21895,21928,21978,21957,21983,21956,21980,21988,21972,22036,22007,22038,22014,22013,22043,22009,22094,22096,29151,22068,22070,22066,22072,22123,22116,22063,22124,22122,22150,22144,22154,22176,22164,22159,22181,22190,22198,22196,22210,22204,22209,22211,22208,22216,22222,22225,22227,22231,22254,22265,22272,22271,22276,22281,22280,22283,22285,22291,22296,22294,21959,22300,22310,22327,22328,22350,22331,22336,22351,22377,22464,22408,22369,22399,22409,22419,22432,22451,22436,22442,22448,22467,22470,22484,22482,22483,22538,22486,22499,22539,22553,22557,22642,22561,22626,22603,22640,27584,22610,22589,22649,22661,22713,22687,22699,22714,22750,22715,22712,22702,22725,22739,22737,22743,22745,22744,22757,22748,22756,22751,22767,22778,22777,22779,22780,22781,22786,22794,22800,22811,26790,22821,22828,22829,22834,22840,22846,31442,22869,22864,22862,22874,22872,22882,22880,22887,22892,22889,22904,22913,22941,20318,20395,22947,22962,22982,23016,23004,22925,23001,23002,23077,23071,23057,23068,23049,23066,23104,23148,23113,23093,23094,23138,23146,23194,23228,23230,23243,23234,23229,23267,23255,23270,23273,23254,23290,23291,23308,23307,23318,23346,23248,23338,23350,23358,23363,23365,23360,23377,23381,23386,23387,23397,23401,23408,23411,23413,23416,25992,23418,23424,23427,23462,23480,23491,23495,23497,23508,23504,23524,23526,23522,23518,23525,23531,23536,23542,23539,23557,23559,23560,23565,23571,23584,23586,23592,23608,23609,23617,23622,23630,23635,23632,23631,23409,23660,23662,20066,23670,23673,23692,23697,23700,22939,23723,23739,23734,23740,23735,23749,23742,23751,23769,23785,23805,23802,23789,23948,23786,23819,23829,23831,23900,23839,23835,23825,23828,23842,23834,23833,23832,23884,23890,23886,23883,23916,23923,23926,23943,23940,23938,23970,23965,23980,23982,23997,23952,23991,23996,24009,24013,24019,24018,24022,24027,24043,24050,24053,24075,24090,24089,24081,24091,24118,24119,24132,24131,24128,24142,24151,24148,24159,24162,24164,24135,24181,24182,24186,40636,24191,24224,24257,24258,24264,24272,24271,24278,24291,24285,24282,24283,24290,24289,24296,24297,24300,24305,24307,24304,24308,24312,24318,24323,24329,24413,24412,24331,24337,24342,24361,24365,24376,24385,24392,24396,24398,24367,24401,24406,24407,24409,24417,24429,24435,24439,24451,24450,24447,24458,24456,24465,24455,24478,24473,24472,24480,24488,24493,24508,24534,24571,24548,24568,24561,24541,24755,24575,24609,24672,24601,24592,24617,24590,24625,24603,24597,24619,24614,24591,24634,24666,24641,24682,24695,24671,24650,24646,24653,24675,24643,24676,24642,24684,24683,24665,24705,24717,24807,24707,24730,24708,24731,24726,24727,24722,24743,24715,24801,24760,24800,24787,24756,24560,24765,24774,24757,24792,24909,24853,24838,24822,24823,24832,24820,24826,24835,24865,24827,24817,24845,24846,24903,24894,24872,24871,24906,24895,24892,24876,24884,24893,24898,24900,24947,24951,24920,24921,24922,24939,24948,24943,24933,24945,24927,24925,24915,24949,24985,24982,24967,25004,24980,24986,24970,24977,25003,25006,25036,25034,25033,25079,25032,25027,25030,25018,25035,32633,25037,25062,25059,25078,25082,25076,25087,25085,25084,25086,25088,25096,25097,25101,25100,25108,25115,25118,25121,25130,25134,25136,25138,25139,25153,25166,25182,25187,25179,25184,25192,25212,25218,25225,25214,25234,25235,25238,25300,25219,25236,25303,25297,25275,25295,25343,25286,25812,25288,25308,25292,25290,25282,25287,25243,25289,25356,25326,25329,25383,25346,25352,25327,25333,25424,25406,25421,25628,25423,25494,25486,25472,25515,25462,25507,25487,25481,25503,25525,25451,25449,25534,25577,25536,25542,25571,25545,25554,25590,25540,25622,25652,25606,25619,25638,25654,25885,25623,25640,25615,25703,25711,25718,25678,25898,25749,25747,25765,25769,25736,25788,25818,25810,25797,25799,25787,25816,25794,25841,25831,33289,25824,25825,25260,25827,25839,25900,25846,25844,25842,25850,25856,25853,25880,25884,25861,25892,25891,25899,25908,25909,25911,25910,25912,30027,25928,25942,25941,25933,25944,25950,25949,25970,25976,25986,25987,35722,26011,26015,26027,26039,26051,26054,26049,26052,26060,26066,26075,26073,26080,26081,26097,26482,26122,26115,26107,26483,26165,26166,26164,26140,26191,26180,26185,26177,26206,26205,26212,26215,26216,26207,26210,26224,26243,26248,26254,26249,26244,26264,26269,26305,26297,26313,26302,26300,26308,26296,26326,26330,26336,26175,26342,26345,26352,26357,26359,26383,26390,26398,26406,26407,38712,26414,26431,26422,26433,26424,26423,26438,26462,26464,26457,26467,26468,26505,26480,26537,26492,26474,26508,26507,26534,26529,26501,26551,26607,26548,26604,26547,26601,26552,26596,26590,26589,26594,26606,26553,26574,26566,26599,27292,26654,26694,26665,26688,26701,26674,26702,26803,26667,26713,26723,26743,26751,26783,26767,26797,26772,26781,26779,26755,27310,26809,26740,26805,26784,26810,26895,26765,26750,26881,26826,26888,26840,26914,26918,26849,26892,26829,26836,26855,26837,26934,26898,26884,26839,26851,26917,26873,26848,26863,26920,26922,26906,26915,26913,26822,27001,26999,26972,27000,26987,26964,27006,26990,26937,26996,26941,26969,26928,26977,26974,26973,27009,26986,27058,27054,27088,27071,27073,27091,27070,27086,23528,27082,27101,27067,27075,27047,27182,27025,27040,27036,27029,27060,27102,27112,27138,27163,27135,27402,27129,27122,27111,27141,27057,27166,27117,27156,27115,27146,27154,27329,27171,27155,27204,27148,27250,27190,27256,27207,27234,27225,27238,27208,27192,27170,27280,27277,27296,27268,27298,27299,27287,34327,27323,27331,27330,27320,27315,27308,27358,27345,27359,27306,27354,27370,27387,27397,34326,27386,27410,27414,39729,27423,27448,27447,30428,27449,39150,27463,27459,27465,27472,27481,27476,27483,27487,27489,27512,27513,27519,27520,27524,27523,27533,27544,27541,27550,27556,27562,27563,27567,27570,27569,27571,27575,27580,27590,27595,27603,27615,27628,27627,27635,27631,40638,27656,27667,27668,27675,27684,27683,27742,27733,27746,27754,27778,27789,27802,27777,27803,27774,27752,27763,27794,27792,27844,27889,27859,27837,27863,27845,27869,27822,27825,27838,27834,27867,27887,27865,27882,27935,34893,27958,27947,27965,27960,27929,27957,27955,27922,27916,28003,28051,28004,27994,28025,27993,28046,28053,28644,28037,28153,28181,28170,28085,28103,28134,28088,28102,28140,28126,28108,28136,28114,28101,28154,28121,28132,28117,28138,28142,28205,28270,28206,28185,28274,28255,28222,28195,28267,28203,28278,28237,28191,28227,28218,28238,28196,28415,28189,28216,28290,28330,28312,28361,28343,28371,28349,28335,28356,28338,28372,28373,28303,28325,28354,28319,28481,28433,28748,28396,28408,28414,28479,28402,28465,28399,28466,28364,28478,28435,28407,28550,28538,28536,28545,28544,28527,28507,28659,28525,28546,28540,28504,28558,28561,28610,28518,28595,28579,28577,28580,28601,28614,28586,28639,28629,28652,28628,28632,28657,28654,28635,28681,28683,28666,28689,28673,28687,28670,28699,28698,28532,28701,28696,28703,28720,28734,28722,28753,28771,28825,28818,28847,28913,28844,28856,28851,28846,28895,28875,28893,28889,28937,28925,28956,28953,29029,29013,29064,29030,29026,29004,29014,29036,29071,29179,29060,29077,29096,29100,29143,29113,29118,29138,29129,29140,29134,29152,29164,29159,29173,29180,29177,29183,29197,29200,29211,29224,29229,29228,29232,29234,29243,29244,29247,29248,29254,29259,29272,29300,29310,29314,29313,29319,29330,29334,29346,29351,29369,29362,29379,29382,29380,29390,29394,29410,29408,29409,29433,29431,20495,29463,29450,29468,29462,29469,29492,29487,29481,29477,29502,29518,29519,40664,29527,29546,29544,29552,29560,29557,29563,29562,29640,29619,29646,29627,29632,29669,29678,29662,29858,29701,29807,29733,29688,29746,29754,29781,29759,29791,29785,29761,29788,29801,29808,29795,29802,29814,29822,29835,29854,29863,29898,29903,29908,29681,29920,29923,29927,29929,29934,29938,29936,29937,29944,29943,29956,29955,29957,29964,29966,29965,29973,29971,29982,29990,29996,30012,30020,30029,30026,30025,30043,30022,30042,30057,30052,30055,30059,30061,30072,30070,30086,30087,30068,30090,30089,30082,30100,30106,30109,30117,30115,30146,30131,30147,30133,30141,30136,30140,30129,30157,30154,30162,30169,30179,30174,30206,30207,30204,30209,30192,30202,30194,30195,30219,30221,30217,30239,30247,30240,30241,30242,30244,30260,30256,30267,30279,30280,30278,30300,30296,30305,30306,30312,30313,30314,30311,30316,30320,30322,30326,30328,30332,30336,30339,30344,30347,30350,30358,30355,30361,30362,30384,30388,30392,30393,30394,30402,30413,30422,30418,30430,30433,30437,30439,30442,34351,30459,30472,30471,30468,30505,30500,30494,30501,30502,30491,30519,30520,30535,30554,30568,30571,30555,30565,30591,30590,30585,30606,30603,30609,30624,30622,30640,30646,30649,30655,30652,30653,30651,30663,30669,30679,30682,30684,30691,30702,30716,30732,30738,31014,30752,31018,30789,30862,30836,30854,30844,30874,30860,30883,30901,30890,30895,30929,30918,30923,30932,30910,30908,30917,30922,30956,30951,30938,30973,30964,30983,30994,30993,31001,31020,31019,31040,31072,31063,31071,31066,31061,31059,31098,31103,31114,31133,31143,40779,31146,31150,31155,31161,31162,31177,31189,31207,31212,31201,31203,31240,31245,31256,31257,31264,31263,31104,31281,31291,31294,31287,31299,31319,31305,31329,31330,31337,40861,31344,31353,31357,31368,31383,31381,31384,31382,31401,31432,31408,31414,31429,31428,31423,36995,31431,31434,31437,31439,31445,31443,31449,31450,31453,31457,31458,31462,31469,31472,31490,31503,31498,31494,31539,31512,31513,31518,31541,31528,31542,31568,31610,31492,31565,31499,31564,31557,31605,31589,31604,31591,31600,31601,31596,31598,31645,31640,31647,31629,31644,31642,31627,31634,31631,31581,31641,31691,31681,31692,31695,31668,31686,31709,31721,31761,31764,31718,31717,31840,31744,31751,31763,31731,31735,31767,31757,31734,31779,31783,31786,31775,31799,31787,31805,31820,31811,31828,31823,31808,31824,31832,31839,31844,31830,31845,31852,31861,31875,31888,31908,31917,31906,31915,31905,31912,31923,31922,31921,31918,31929,31933,31936,31941,31938,31960,31954,31964,31970,39739,31983,31986,31988,31990,31994,32006,32002,32028,32021,32010,32069,32075,32046,32050,32063,32053,32070,32115,32086,32078,32114,32104,32110,32079,32099,32147,32137,32091,32143,32125,32155,32186,32174,32163,32181,32199,32189,32171,32317,32162,32175,32220,32184,32159,32176,32216,32221,32228,32222,32251,32242,32225,32261,32266,32291,32289,32274,32305,32287,32265,32267,32290,32326,32358,32315,32309,32313,32323,32311,32306,32314,32359,32349,32342,32350,32345,32346,32377,32362,32361,32380,32379,32387,32213,32381,36782,32383,32392,32393,32396,32402,32400,32403,32404,32406,32398,32411,32412,32568,32570,32581,32588,32589,32590,32592,32593,32597,32596,32600,32607,32608,32616,32617,32615,32632,32642,32646,32643,32648,32647,32652,32660,32670,32669,32666,32675,32687,32690,32697,32686,32694,32696,35697,32709,32710,32714,32725,32724,32737,32742,32745,32755,32761,39132,32774,32772,32779,32786,32792,32793,32796,32801,32808,32831,32827,32842,32838,32850,32856,32858,32863,32866,32872,32883,32882,32880,32886,32889,32893,32895,32900,32902,32901,32923,32915,32922,32941,20880,32940,32987,32997,32985,32989,32964,32986,32982,33033,33007,33009,33051,33065,33059,33071,33099,38539,33094,33086,33107,33105,33020,33137,33134,33125,33126,33140,33155,33160,33162,33152,33154,33184,33173,33188,33187,33119,33171,33193,33200,33205,33214,33208,33213,33216,33218,33210,33225,33229,33233,33241,33240,33224,33242,33247,33248,33255,33274,33275,33278,33281,33282,33285,33287,33290,33293,33296,33302,33321,33323,33336,33331,33344,33369,33368,33373,33370,33375,33380,33378,33384,33386,33387,33326,33393,33399,33400,33406,33421,33426,33451,33439,33467,33452,33505,33507,33503,33490,33524,33523,33530,33683,33539,33531,33529,33502,33542,33500,33545,33497,33589,33588,33558,33586,33585,33600,33593,33616,33605,33583,33579,33559,33560,33669,33690,33706,33695,33698,33686,33571,33678,33671,33674,33660,33717,33651,33653,33696,33673,33704,33780,33811,33771,33742,33789,33795,33752,33803,33729,33783,33799,33760,33778,33805,33826,33824,33725,33848,34054,33787,33901,33834,33852,34138,33924,33911,33899,33965,33902,33922,33897,33862,33836,33903,33913,33845,33994,33890,33977,33983,33951,34009,33997,33979,34010,34000,33985,33990,34006,33953,34081,34047,34036,34071,34072,34092,34079,34069,34068,34044,34112,34147,34136,34120,34113,34306,34123,34133,34176,34212,34184,34193,34186,34216,34157,34196,34203,34282,34183,34204,34167,34174,34192,34249,34234,34255,34233,34256,34261,34269,34277,34268,34297,34314,34323,34315,34302,34298,34310,34338,34330,34352,34367,34381,20053,34388,34399,34407,34417,34451,34467,34473,34474,34443,34444,34486,34479,34500,34502,34480,34505,34851,34475,34516,34526,34537,34540,34527,34523,34543,34578,34566,34568,34560,34563,34555,34577,34569,34573,34553,34570,34612,34623,34615,34619,34597,34601,34586,34656,34655,34680,34636,34638,34676,34647,34664,34670,34649,34643,34659,34666,34821,34722,34719,34690,34735,34763,34749,34752,34768,38614,34731,34756,34739,34759,34758,34747,34799,34802,34784,34831,34829,34814,34806,34807,34830,34770,34833,34838,34837,34850,34849,34865,34870,34873,34855,34875,34884,34882,34898,34905,34910,34914,34923,34945,34942,34974,34933,34941,34997,34930,34946,34967,34962,34990,34969,34978,34957,34980,34992,35007,34993,35011,35012,35028,35032,35033,35037,35065,35074,35068,35060,35048,35058,35076,35084,35082,35091,35139,35102,35109,35114,35115,35137,35140,35131,35126,35128,35148,35101,35168,35166,35174,35172,35181,35178,35183,35188,35191,35198,35203,35208,35210,35219,35224,35233,35241,35238,35244,35247,35250,35258,35261,35263,35264,35290,35292,35293,35303,35316,35320,35331,35350,35344,35340,35355,35357,35365,35382,35393,35419,35410,35398,35400,35452,35437,35436,35426,35461,35458,35460,35496,35489,35473,35493,35494,35482,35491,35524,35533,35522,35546,35563,35571,35559,35556,35569,35604,35552,35554,35575,35550,35547,35596,35591,35610,35553,35606,35600,35607,35616,35635,38827,35622,35627,35646,35624,35649,35660,35663,35662,35657,35670,35675,35674,35691,35679,35692,35695,35700,35709,35712,35724,35726,35730,35731,35734,35737,35738,35898,35905,35903,35912,35916,35918,35920,35925,35938,35948,35960,35962,35970,35977,35973,35978,35981,35982,35988,35964,35992,25117,36013,36010,36029,36018,36019,36014,36022,36040,36033,36068,36067,36058,36093,36090,36091,36100,36101,36106,36103,36111,36109,36112,40782,36115,36045,36116,36118,36199,36205,36209,36211,36225,36249,36290,36286,36282,36303,36314,36310,36300,36315,36299,36330,36331,36319,36323,36348,36360,36361,36351,36381,36382,36368,36383,36418,36405,36400,36404,36426,36423,36425,36428,36432,36424,36441,36452,36448,36394,36451,36437,36470,36466,36476,36481,36487,36485,36484,36491,36490,36499,36497,36500,36505,36522,36513,36524,36528,36550,36529,36542,36549,36552,36555,36571,36579,36604,36603,36587,36606,36618,36613,36629,36626,36633,36627,36636,36639,36635,36620,36646,36659,36667,36665,36677,36674,36670,36684,36681,36678,36686,36695,36700,36706,36707,36708,36764,36767,36771,36781,36783,36791,36826,36837,36834,36842,36847,36999,36852,36869,36857,36858,36881,36885,36897,36877,36894,36886,36875,36903,36918,36917,36921,36856,36943,36944,36945,36946,36878,36937,36926,36950,36952,36958,36968,36975,36982,38568,36978,36994,36989,36993,36992,37002,37001,37007,37032,37039,37041,37045,37090,37092,25160,37083,37122,37138,37145,37170,37168,37194,37206,37208,37219,37221,37225,37235,37234,37259,37257,37250,37282,37291,37295,37290,37301,37300,37306,37312,37313,37321,37323,37328,37334,37343,37345,37339,37372,37365,37366,37406,37375,37396,37420,37397,37393,37470,37463,37445,37449,37476,37448,37525,37439,37451,37456,37532,37526,37523,37531,37466,37583,37561,37559,37609,37647,37626,37700,37678,37657,37666,37658,37667,37690,37685,37691,37724,37728,37756,37742,37718,37808,37804,37805,37780,37817,37846,37847,37864,37861,37848,37827,37853,37840,37832,37860,37914,37908,37907,37891,37895,37904,37942,37931,37941,37921,37946,37953,37970,37956,37979,37984,37986,37982,37994,37417,38000,38005,38007,38013,37978,38012,38014,38017,38015,38274,38279,38282,38292,38294,38296,38297,38304,38312,38311,38317,38332,38331,38329,38334,38346,28662,38339,38349,38348,38357,38356,38358,38364,38369,38373,38370,38433,38440,38446,38447,38466,38476,38479,38475,38519,38492,38494,38493,38495,38502,38514,38508,38541,38552,38549,38551,38570,38567,38577,38578,38576,38580,38582,38584,38585,38606,38603,38601,38605,35149,38620,38669,38613,38649,38660,38662,38664,38675,38670,38673,38671,38678,38681,38692,38698,38704,38713,38717,38718,38724,38726,38728,38722,38729,38748,38752,38756,38758,38760,21202,38763,38769,38777,38789,38780,38785,38778,38790,38795,38799,38800,38812,38824,38822,38819,38835,38836,38851,38854,38856,38859,38876,38893,40783,38898,31455,38902,38901,38927,38924,38968,38948,38945,38967,38973,38982,38991,38987,39019,39023,39024,39025,39028,39027,39082,39087,39089,39094,39108,39107,39110,39145,39147,39171,39177,39186,39188,39192,39201,39197,39198,39204,39200,39212,39214,39229,39230,39234,39241,39237,39248,39243,39249,39250,39244,39253,39319,39320,39333,39341,39342,39356,39391,39387,39389,39384,39377,39405,39406,39409,39410,39419,39416,39425,39439,39429,39394,39449,39467,39479,39493,39490,39488,39491,39486,39509,39501,39515,39511,39519,39522,39525,39524,39529,39531,39530,39597,39600,39612,39616,39631,39633,39635,39636,39646,39647,39650,39651,39654,39663,39659,39662,39668,39665,39671,39675,39686,39704,39706,39711,39714,39715,39717,39719,39720,39721,39722,39726,39727,39730,39748,39747,39759,39757,39758,39761,39768,39796,39827,39811,39825,39830,39831,39839,39840,39848,39860,39872,39882,39865,39878,39887,39889,39890,39907,39906,39908,39892,39905,39994,39922,39921,39920,39957,39956,39945,39955,39948,39942,39944,39954,39946,39940,39982,39963,39973,39972,39969,39984,40007,39986,40006,39998,40026,40032,40039,40054,40056,40167,40172,40176,40201,40200,40171,40195,40198,40234,40230,40367,40227,40223,40260,40213,40210,40257,40255,40254,40262,40264,40285,40286,40292,40273,40272,40281,40306,40329,40327,40363,40303,40314,40346,40356,40361,40370,40388,40385,40379,40376,40378,40390,40399,40386,40409,40403,40440,40422,40429,40431,40445,40474,40475,40478,40565,40569,40573,40577,40584,40587,40588,40594,40597,40593,40605,40613,40617,40632,40618,40621,38753,40652,40654,40655,40656,40660,40668,40670,40669,40672,40677,40680,40687,40692,40694,40695,40697,40699,40700,40701,40711,40712,30391,40725,40737,40748,40766,40778,40786,40788,40803,40799,40800,40801,40806,40807,40812,40810,40823,40818,40822,40853,40860,40864,22575,27079,36953,29796,20956,29081,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,65506,65508,65287,65282,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,65506,65508,65287,65282,12849,8470,8481,8757,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jis0212":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,728,711,184,729,733,175,731,730,65374,900,901,null,null,null,null,null,null,null,null,161,166,191,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,186,170,169,174,8482,164,8470,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,902,904,905,906,938,null,908,null,910,939,null,911,null,null,null,null,940,941,942,943,970,912,972,962,973,971,944,974,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1038,1039,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1118,1119,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,198,272,null,294,null,306,null,321,319,null,330,216,338,null,358,222,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,230,273,240,295,305,307,312,322,320,329,331,248,339,223,359,254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,193,192,196,194,258,461,256,260,197,195,262,264,268,199,266,270,201,200,203,202,282,278,274,280,null,284,286,290,288,292,205,204,207,206,463,304,298,302,296,308,310,313,317,315,323,327,325,209,211,210,214,212,465,336,332,213,340,344,342,346,348,352,350,356,354,218,217,220,219,364,467,368,362,370,366,360,471,475,473,469,372,221,376,374,377,381,379,null,null,null,null,null,null,null,225,224,228,226,259,462,257,261,229,227,263,265,269,231,267,271,233,232,235,234,283,279,275,281,501,285,287,null,289,293,237,236,239,238,464,null,299,303,297,309,311,314,318,316,324,328,326,241,243,242,246,244,466,337,333,245,341,345,343,347,349,353,351,357,355,250,249,252,251,365,468,369,363,371,367,361,472,476,474,470,373,253,255,375,378,382,380,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19970,19972,19973,19980,19986,19999,20003,20004,20008,20011,20014,20015,20016,20021,20032,20033,20036,20039,20049,20058,20060,20067,20072,20073,20084,20085,20089,20095,20109,20118,20119,20125,20143,20153,20163,20176,20186,20187,20192,20193,20194,20200,20207,20209,20211,20213,20221,20222,20223,20224,20226,20227,20232,20235,20236,20242,20245,20246,20247,20249,20270,20273,20320,20275,20277,20279,20281,20283,20286,20288,20290,20296,20297,20299,20300,20306,20308,20310,20312,20319,20323,20330,20332,20334,20337,20343,20344,20345,20346,20349,20350,20353,20354,20356,20357,20361,20362,20364,20366,20368,20370,20371,20372,20375,20377,20378,20382,20383,20402,20407,20409,20411,20412,20413,20414,20416,20417,20421,20422,20424,20425,20427,20428,20429,20431,20434,20444,20448,20450,20464,20466,20476,20477,20479,20480,20481,20484,20487,20490,20492,20494,20496,20499,20503,20504,20507,20508,20509,20510,20514,20519,20526,20528,20530,20531,20533,20544,20545,20546,20549,20550,20554,20556,20558,20561,20562,20563,20567,20569,20575,20576,20578,20579,20582,20583,20586,20589,20592,20593,20539,20609,20611,20612,20614,20618,20622,20623,20624,20626,20627,20628,20630,20635,20636,20638,20639,20640,20641,20642,20650,20655,20656,20665,20666,20669,20672,20675,20676,20679,20684,20686,20688,20691,20692,20696,20700,20701,20703,20706,20708,20710,20712,20713,20719,20721,20726,20730,20734,20739,20742,20743,20744,20747,20748,20749,20750,20722,20752,20759,20761,20763,20764,20765,20766,20771,20775,20776,20780,20781,20783,20785,20787,20788,20789,20792,20793,20802,20810,20815,20819,20821,20823,20824,20831,20836,20838,20862,20867,20868,20875,20878,20888,20893,20897,20899,20909,20920,20922,20924,20926,20927,20930,20936,20943,20945,20946,20947,20949,20952,20958,20962,20965,20974,20978,20979,20980,20983,20993,20994,20997,21010,21011,21013,21014,21016,21026,21032,21041,21042,21045,21052,21061,21065,21077,21079,21080,21082,21084,21087,21088,21089,21094,21102,21111,21112,21113,21120,21122,21125,21130,21132,21139,21141,21142,21143,21144,21146,21148,21156,21157,21158,21159,21167,21168,21174,21175,21176,21178,21179,21181,21184,21188,21190,21192,21196,21199,21201,21204,21206,21211,21212,21217,21221,21224,21225,21226,21228,21232,21233,21236,21238,21239,21248,21251,21258,21259,21260,21265,21267,21272,21275,21276,21278,21279,21285,21287,21288,21289,21291,21292,21293,21296,21298,21301,21308,21309,21310,21314,21324,21323,21337,21339,21345,21347,21349,21356,21357,21362,21369,21374,21379,21383,21384,21390,21395,21396,21401,21405,21409,21412,21418,21419,21423,21426,21428,21429,21431,21432,21434,21437,21440,21445,21455,21458,21459,21461,21466,21469,21470,21472,21478,21479,21493,21506,21523,21530,21537,21543,21544,21546,21551,21553,21556,21557,21571,21572,21575,21581,21583,21598,21602,21604,21606,21607,21609,21611,21613,21614,21620,21631,21633,21635,21637,21640,21641,21645,21649,21653,21654,21660,21663,21665,21670,21671,21673,21674,21677,21678,21681,21687,21689,21690,21691,21695,21702,21706,21709,21710,21728,21738,21740,21743,21750,21756,21758,21759,21760,21761,21765,21768,21769,21772,21773,21774,21781,21802,21803,21810,21813,21814,21819,21820,21821,21825,21831,21833,21834,21837,21840,21841,21848,21850,21851,21854,21856,21857,21860,21862,21887,21889,21890,21894,21896,21902,21903,21905,21906,21907,21908,21911,21923,21924,21933,21938,21951,21953,21955,21958,21961,21963,21964,21966,21969,21970,21971,21975,21976,21979,21982,21986,21993,22006,22015,22021,22024,22026,22029,22030,22031,22032,22033,22034,22041,22060,22064,22067,22069,22071,22073,22075,22076,22077,22079,22080,22081,22083,22084,22086,22089,22091,22093,22095,22100,22110,22112,22113,22114,22115,22118,22121,22125,22127,22129,22130,22133,22148,22149,22152,22155,22156,22165,22169,22170,22173,22174,22175,22182,22183,22184,22185,22187,22188,22189,22193,22195,22199,22206,22213,22217,22218,22219,22223,22224,22220,22221,22233,22236,22237,22239,22241,22244,22245,22246,22247,22248,22257,22251,22253,22262,22263,22273,22274,22279,22282,22284,22289,22293,22298,22299,22301,22304,22306,22307,22308,22309,22313,22314,22316,22318,22319,22323,22324,22333,22334,22335,22341,22342,22348,22349,22354,22370,22373,22375,22376,22379,22381,22382,22383,22384,22385,22387,22388,22389,22391,22393,22394,22395,22396,22398,22401,22403,22412,22420,22423,22425,22426,22428,22429,22430,22431,22433,22421,22439,22440,22441,22444,22456,22461,22471,22472,22476,22479,22485,22493,22494,22500,22502,22503,22505,22509,22512,22517,22518,22520,22525,22526,22527,22531,22532,22536,22537,22497,22540,22541,22555,22558,22559,22560,22566,22567,22573,22578,22585,22591,22601,22604,22605,22607,22608,22613,22623,22625,22628,22631,22632,22648,22652,22655,22656,22657,22663,22664,22665,22666,22668,22669,22671,22672,22676,22678,22685,22688,22689,22690,22694,22697,22705,22706,22724,22716,22722,22728,22733,22734,22736,22738,22740,22742,22746,22749,22753,22754,22761,22771,22789,22790,22795,22796,22802,22803,22804,34369,22813,22817,22819,22820,22824,22831,22832,22835,22837,22838,22847,22851,22854,22866,22867,22873,22875,22877,22878,22879,22881,22883,22891,22893,22895,22898,22901,22902,22905,22907,22908,22923,22924,22926,22930,22933,22935,22943,22948,22951,22957,22958,22959,22960,22963,22967,22970,22972,22977,22979,22980,22984,22986,22989,22994,23005,23006,23007,23011,23012,23015,23022,23023,23025,23026,23028,23031,23040,23044,23052,23053,23054,23058,23059,23070,23075,23076,23079,23080,23082,23085,23088,23108,23109,23111,23112,23116,23120,23125,23134,23139,23141,23143,23149,23159,23162,23163,23166,23179,23184,23187,23190,23193,23196,23198,23199,23200,23202,23207,23212,23217,23218,23219,23221,23224,23226,23227,23231,23236,23238,23240,23247,23258,23260,23264,23269,23274,23278,23285,23286,23293,23296,23297,23304,23319,23348,23321,23323,23325,23329,23333,23341,23352,23361,23371,23372,23378,23382,23390,23400,23406,23407,23420,23421,23422,23423,23425,23428,23430,23434,23438,23440,23441,23443,23444,23446,23464,23465,23468,23469,23471,23473,23474,23479,23482,23484,23488,23489,23501,23503,23510,23511,23512,23513,23514,23520,23535,23537,23540,23549,23564,23575,23582,23583,23587,23590,23593,23595,23596,23598,23600,23602,23605,23606,23641,23642,23644,23650,23651,23655,23656,23657,23661,23664,23668,23669,23674,23675,23676,23677,23687,23688,23690,23695,23698,23709,23711,23712,23714,23715,23718,23722,23730,23732,23733,23738,23753,23755,23762,23773,23767,23790,23793,23794,23796,23809,23814,23821,23826,23851,23843,23844,23846,23847,23857,23860,23865,23869,23871,23874,23875,23878,23880,23893,23889,23897,23882,23903,23904,23905,23906,23908,23914,23917,23920,23929,23930,23934,23935,23937,23939,23944,23946,23954,23955,23956,23957,23961,23963,23967,23968,23975,23979,23984,23988,23992,23993,24003,24007,24011,24016,24014,24024,24025,24032,24036,24041,24056,24057,24064,24071,24077,24082,24084,24085,24088,24095,24096,24110,24104,24114,24117,24126,24139,24144,24137,24145,24150,24152,24155,24156,24158,24168,24170,24171,24172,24173,24174,24176,24192,24203,24206,24226,24228,24229,24232,24234,24236,24241,24243,24253,24254,24255,24262,24268,24267,24270,24273,24274,24276,24277,24284,24286,24293,24299,24322,24326,24327,24328,24334,24345,24348,24349,24353,24354,24355,24356,24360,24363,24364,24366,24368,24372,24374,24379,24381,24383,24384,24388,24389,24391,24397,24400,24404,24408,24411,24416,24419,24420,24423,24431,24434,24436,24437,24440,24442,24445,24446,24457,24461,24463,24470,24476,24477,24482,24487,24491,24484,24492,24495,24496,24497,24504,24516,24519,24520,24521,24523,24528,24529,24530,24531,24532,24542,24545,24546,24552,24553,24554,24556,24557,24558,24559,24562,24563,24566,24570,24572,24583,24586,24589,24595,24596,24599,24600,24602,24607,24612,24621,24627,24629,24640,24647,24648,24649,24652,24657,24660,24662,24663,24669,24673,24679,24689,24702,24703,24706,24710,24712,24714,24718,24721,24723,24725,24728,24733,24734,24738,24740,24741,24744,24752,24753,24759,24763,24766,24770,24772,24776,24777,24778,24779,24782,24783,24788,24789,24793,24795,24797,24798,24802,24805,24818,24821,24824,24828,24829,24834,24839,24842,24844,24848,24849,24850,24851,24852,24854,24855,24857,24860,24862,24866,24874,24875,24880,24881,24885,24886,24887,24889,24897,24901,24902,24905,24926,24928,24940,24946,24952,24955,24956,24959,24960,24961,24963,24964,24971,24973,24978,24979,24983,24984,24988,24989,24991,24992,24997,25000,25002,25005,25016,25017,25020,25024,25025,25026,25038,25039,25045,25052,25053,25054,25055,25057,25058,25063,25065,25061,25068,25069,25071,25089,25091,25092,25095,25107,25109,25116,25120,25122,25123,25127,25129,25131,25145,25149,25154,25155,25156,25158,25164,25168,25169,25170,25172,25174,25178,25180,25188,25197,25199,25203,25210,25213,25229,25230,25231,25232,25254,25256,25267,25270,25271,25274,25278,25279,25284,25294,25301,25302,25306,25322,25330,25332,25340,25341,25347,25348,25354,25355,25357,25360,25363,25366,25368,25385,25386,25389,25397,25398,25401,25404,25409,25410,25411,25412,25414,25418,25419,25422,25426,25427,25428,25432,25435,25445,25446,25452,25453,25457,25460,25461,25464,25468,25469,25471,25474,25476,25479,25482,25488,25492,25493,25497,25498,25502,25508,25510,25517,25518,25519,25533,25537,25541,25544,25550,25553,25555,25556,25557,25564,25568,25573,25578,25580,25586,25587,25589,25592,25593,25609,25610,25616,25618,25620,25624,25630,25632,25634,25636,25637,25641,25642,25647,25648,25653,25661,25663,25675,25679,25681,25682,25683,25684,25690,25691,25692,25693,25695,25696,25697,25699,25709,25715,25716,25723,25725,25733,25735,25743,25744,25745,25752,25753,25755,25757,25759,25761,25763,25766,25768,25772,25779,25789,25790,25791,25796,25801,25802,25803,25804,25806,25808,25809,25813,25815,25828,25829,25833,25834,25837,25840,25845,25847,25851,25855,25857,25860,25864,25865,25866,25871,25875,25876,25878,25881,25883,25886,25887,25890,25894,25897,25902,25905,25914,25916,25917,25923,25927,25929,25936,25938,25940,25951,25952,25959,25963,25978,25981,25985,25989,25994,26002,26005,26008,26013,26016,26019,26022,26030,26034,26035,26036,26047,26050,26056,26057,26062,26064,26068,26070,26072,26079,26096,26098,26100,26101,26105,26110,26111,26112,26116,26120,26121,26125,26129,26130,26133,26134,26141,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26161,26163,26169,26167,26176,26181,26182,26186,26188,26193,26190,26199,26200,26201,26203,26204,26208,26209,26363,26218,26219,26220,26238,26227,26229,26239,26231,26232,26233,26235,26240,26236,26251,26252,26253,26256,26258,26265,26266,26267,26268,26271,26272,26276,26285,26289,26290,26293,26299,26303,26304,26306,26307,26312,26316,26318,26319,26324,26331,26335,26344,26347,26348,26350,26362,26373,26375,26382,26387,26393,26396,26400,26402,26419,26430,26437,26439,26440,26444,26452,26453,26461,26470,26476,26478,26484,26486,26491,26497,26500,26510,26511,26513,26515,26518,26520,26521,26523,26544,26545,26546,26549,26555,26556,26557,26617,26560,26562,26563,26565,26568,26569,26578,26583,26585,26588,26593,26598,26608,26610,26614,26615,26706,26644,26649,26653,26655,26664,26663,26668,26669,26671,26672,26673,26675,26683,26687,26692,26693,26698,26700,26709,26711,26712,26715,26731,26734,26735,26736,26737,26738,26741,26745,26746,26747,26748,26754,26756,26758,26760,26774,26776,26778,26780,26785,26787,26789,26793,26794,26798,26802,26811,26821,26824,26828,26831,26832,26833,26835,26838,26841,26844,26845,26853,26856,26858,26859,26860,26861,26864,26865,26869,26870,26875,26876,26877,26886,26889,26890,26896,26897,26899,26902,26903,26929,26931,26933,26936,26939,26946,26949,26953,26958,26967,26971,26979,26980,26981,26982,26984,26985,26988,26992,26993,26994,27002,27003,27007,27008,27021,27026,27030,27032,27041,27045,27046,27048,27051,27053,27055,27063,27064,27066,27068,27077,27080,27089,27094,27095,27106,27109,27118,27119,27121,27123,27125,27134,27136,27137,27139,27151,27153,27157,27162,27165,27168,27172,27176,27184,27186,27188,27191,27195,27198,27199,27205,27206,27209,27210,27214,27216,27217,27218,27221,27222,27227,27236,27239,27242,27249,27251,27262,27265,27267,27270,27271,27273,27275,27281,27291,27293,27294,27295,27301,27307,27311,27312,27313,27316,27325,27326,27327,27334,27337,27336,27340,27344,27348,27349,27350,27356,27357,27364,27367,27372,27376,27377,27378,27388,27389,27394,27395,27398,27399,27401,27407,27408,27409,27415,27419,27422,27428,27432,27435,27436,27439,27445,27446,27451,27455,27462,27466,27469,27474,27478,27480,27485,27488,27495,27499,27502,27504,27509,27517,27518,27522,27525,27543,27547,27551,27552,27554,27555,27560,27561,27564,27565,27566,27568,27576,27577,27581,27582,27587,27588,27593,27596,27606,27610,27617,27619,27622,27623,27630,27633,27639,27641,27647,27650,27652,27653,27657,27661,27662,27664,27666,27673,27679,27686,27687,27688,27692,27694,27699,27701,27702,27706,27707,27711,27722,27723,27725,27727,27730,27732,27737,27739,27740,27755,27757,27759,27764,27766,27768,27769,27771,27781,27782,27783,27785,27796,27797,27799,27800,27804,27807,27824,27826,27828,27842,27846,27853,27855,27856,27857,27858,27860,27862,27866,27868,27872,27879,27881,27883,27884,27886,27890,27892,27908,27911,27914,27918,27919,27921,27923,27930,27942,27943,27944,27751,27950,27951,27953,27961,27964,27967,27991,27998,27999,28001,28005,28007,28015,28016,28028,28034,28039,28049,28050,28052,28054,28055,28056,28074,28076,28084,28087,28089,28093,28095,28100,28104,28106,28110,28111,28118,28123,28125,28127,28128,28130,28133,28137,28143,28144,28148,28150,28156,28160,28164,28190,28194,28199,28210,28214,28217,28219,28220,28228,28229,28232,28233,28235,28239,28241,28242,28243,28244,28247,28252,28253,28254,28258,28259,28264,28275,28283,28285,28301,28307,28313,28320,28327,28333,28334,28337,28339,28347,28351,28352,28353,28355,28359,28360,28362,28365,28366,28367,28395,28397,28398,28409,28411,28413,28420,28424,28426,28428,28429,28438,28440,28442,28443,28454,28457,28458,28463,28464,28467,28470,28475,28476,28461,28495,28497,28498,28499,28503,28505,28506,28509,28510,28513,28514,28520,28524,28541,28542,28547,28551,28552,28555,28556,28557,28560,28562,28563,28564,28566,28570,28575,28576,28581,28582,28583,28584,28590,28591,28592,28597,28598,28604,28613,28615,28616,28618,28634,28638,28648,28649,28656,28661,28665,28668,28669,28672,28677,28678,28679,28685,28695,28704,28707,28719,28724,28727,28729,28732,28739,28740,28744,28745,28746,28747,28756,28757,28765,28766,28750,28772,28773,28780,28782,28789,28790,28798,28801,28805,28806,28820,28821,28822,28823,28824,28827,28836,28843,28848,28849,28852,28855,28874,28881,28883,28884,28885,28886,28888,28892,28900,28922,28931,28932,28933,28934,28935,28939,28940,28943,28958,28960,28971,28973,28975,28976,28977,28984,28993,28997,28998,28999,29002,29003,29008,29010,29015,29018,29020,29022,29024,29032,29049,29056,29061,29063,29068,29074,29082,29083,29088,29090,29103,29104,29106,29107,29114,29119,29120,29121,29124,29131,29132,29139,29142,29145,29146,29148,29176,29182,29184,29191,29192,29193,29203,29207,29210,29213,29215,29220,29227,29231,29236,29240,29241,29249,29250,29251,29253,29262,29263,29264,29267,29269,29270,29274,29276,29278,29280,29283,29288,29291,29294,29295,29297,29303,29304,29307,29308,29311,29316,29321,29325,29326,29331,29339,29352,29357,29358,29361,29364,29374,29377,29383,29385,29388,29397,29398,29400,29407,29413,29427,29428,29434,29435,29438,29442,29444,29445,29447,29451,29453,29458,29459,29464,29465,29470,29474,29476,29479,29480,29484,29489,29490,29493,29498,29499,29501,29507,29517,29520,29522,29526,29528,29533,29534,29535,29536,29542,29543,29545,29547,29548,29550,29551,29553,29559,29561,29564,29568,29569,29571,29573,29574,29582,29584,29587,29589,29591,29592,29596,29598,29599,29600,29602,29605,29606,29610,29611,29613,29621,29623,29625,29628,29629,29631,29637,29638,29641,29643,29644,29647,29650,29651,29654,29657,29661,29665,29667,29670,29671,29673,29684,29685,29687,29689,29690,29691,29693,29695,29696,29697,29700,29703,29706,29713,29722,29723,29732,29734,29736,29737,29738,29739,29740,29741,29742,29743,29744,29745,29753,29760,29763,29764,29766,29767,29771,29773,29777,29778,29783,29789,29794,29798,29799,29800,29803,29805,29806,29809,29810,29824,29825,29829,29830,29831,29833,29839,29840,29841,29842,29848,29849,29850,29852,29855,29856,29857,29859,29862,29864,29865,29866,29867,29870,29871,29873,29874,29877,29881,29883,29887,29896,29897,29900,29904,29907,29912,29914,29915,29918,29919,29924,29928,29930,29931,29935,29940,29946,29947,29948,29951,29958,29970,29974,29975,29984,29985,29988,29991,29993,29994,29999,30006,30009,30013,30014,30015,30016,30019,30023,30024,30030,30032,30034,30039,30046,30047,30049,30063,30065,30073,30074,30075,30076,30077,30078,30081,30085,30096,30098,30099,30101,30105,30108,30114,30116,30132,30138,30143,30144,30145,30148,30150,30156,30158,30159,30167,30172,30175,30176,30177,30180,30183,30188,30190,30191,30193,30201,30208,30210,30211,30212,30215,30216,30218,30220,30223,30226,30227,30229,30230,30233,30235,30236,30237,30238,30243,30245,30246,30249,30253,30258,30259,30261,30264,30265,30266,30268,30282,30272,30273,30275,30276,30277,30281,30283,30293,30297,30303,30308,30309,30317,30318,30319,30321,30324,30337,30341,30348,30349,30357,30363,30364,30365,30367,30368,30370,30371,30372,30373,30374,30375,30376,30378,30381,30397,30401,30405,30409,30411,30412,30414,30420,30425,30432,30438,30440,30444,30448,30449,30454,30457,30460,30464,30470,30474,30478,30482,30484,30485,30487,30489,30490,30492,30498,30504,30509,30510,30511,30516,30517,30518,30521,30525,30526,30530,30533,30534,30538,30541,30542,30543,30546,30550,30551,30556,30558,30559,30560,30562,30564,30567,30570,30572,30576,30578,30579,30580,30586,30589,30592,30596,30604,30605,30612,30613,30614,30618,30623,30626,30631,30634,30638,30639,30641,30645,30654,30659,30665,30673,30674,30677,30681,30686,30687,30688,30692,30694,30698,30700,30704,30705,30708,30712,30715,30725,30726,30729,30733,30734,30737,30749,30753,30754,30755,30765,30766,30768,30773,30775,30787,30788,30791,30792,30796,30798,30802,30812,30814,30816,30817,30819,30820,30824,30826,30830,30842,30846,30858,30863,30868,30872,30881,30877,30878,30879,30884,30888,30892,30893,30896,30897,30898,30899,30907,30909,30911,30919,30920,30921,30924,30926,30930,30931,30933,30934,30948,30939,30943,30944,30945,30950,30954,30962,30963,30976,30966,30967,30970,30971,30975,30982,30988,30992,31002,31004,31006,31007,31008,31013,31015,31017,31021,31025,31028,31029,31035,31037,31039,31044,31045,31046,31050,31051,31055,31057,31060,31064,31067,31068,31079,31081,31083,31090,31097,31099,31100,31102,31115,31116,31121,31123,31124,31125,31126,31128,31131,31132,31137,31144,31145,31147,31151,31153,31156,31160,31163,31170,31172,31175,31176,31178,31183,31188,31190,31194,31197,31198,31200,31202,31205,31210,31211,31213,31217,31224,31228,31234,31235,31239,31241,31242,31244,31249,31253,31259,31262,31265,31271,31275,31277,31279,31280,31284,31285,31288,31289,31290,31300,31301,31303,31304,31308,31317,31318,31321,31324,31325,31327,31328,31333,31335,31338,31341,31349,31352,31358,31360,31362,31365,31366,31370,31371,31376,31377,31380,31390,31392,31395,31404,31411,31413,31417,31419,31420,31430,31433,31436,31438,31441,31451,31464,31465,31467,31468,31473,31476,31483,31485,31486,31495,31508,31519,31523,31527,31529,31530,31531,31533,31534,31535,31536,31537,31540,31549,31551,31552,31553,31559,31566,31573,31584,31588,31590,31593,31594,31597,31599,31602,31603,31607,31620,31625,31630,31632,31633,31638,31643,31646,31648,31653,31660,31663,31664,31666,31669,31670,31674,31675,31676,31677,31682,31685,31688,31690,31700,31702,31703,31705,31706,31707,31720,31722,31730,31732,31733,31736,31737,31738,31740,31742,31745,31746,31747,31748,31750,31753,31755,31756,31758,31759,31769,31771,31776,31781,31782,31784,31788,31793,31795,31796,31798,31801,31802,31814,31818,31829,31825,31826,31827,31833,31834,31835,31836,31837,31838,31841,31843,31847,31849,31853,31854,31856,31858,31865,31868,31869,31878,31879,31887,31892,31902,31904,31910,31920,31926,31927,31930,31931,31932,31935,31940,31943,31944,31945,31949,31951,31955,31956,31957,31959,31961,31962,31965,31974,31977,31979,31989,32003,32007,32008,32009,32015,32017,32018,32019,32022,32029,32030,32035,32038,32042,32045,32049,32060,32061,32062,32064,32065,32071,32072,32077,32081,32083,32087,32089,32090,32092,32093,32101,32103,32106,32112,32120,32122,32123,32127,32129,32130,32131,32133,32134,32136,32139,32140,32141,32145,32150,32151,32157,32158,32166,32167,32170,32179,32182,32183,32185,32194,32195,32196,32197,32198,32204,32205,32206,32215,32217,32256,32226,32229,32230,32234,32235,32237,32241,32245,32246,32249,32250,32264,32272,32273,32277,32279,32284,32285,32288,32295,32296,32300,32301,32303,32307,32310,32319,32324,32325,32327,32334,32336,32338,32344,32351,32353,32354,32357,32363,32366,32367,32371,32376,32382,32385,32390,32391,32394,32397,32401,32405,32408,32410,32413,32414,32572,32571,32573,32574,32575,32579,32580,32583,32591,32594,32595,32603,32604,32605,32609,32611,32612,32613,32614,32621,32625,32637,32638,32639,32640,32651,32653,32655,32656,32657,32662,32663,32668,32673,32674,32678,32682,32685,32692,32700,32703,32704,32707,32712,32718,32719,32731,32735,32739,32741,32744,32748,32750,32751,32754,32762,32765,32766,32767,32775,32776,32778,32781,32782,32783,32785,32787,32788,32790,32797,32798,32799,32800,32804,32806,32812,32814,32816,32820,32821,32823,32825,32826,32828,32830,32832,32836,32864,32868,32870,32877,32881,32885,32897,32904,32910,32924,32926,32934,32935,32939,32952,32953,32968,32973,32975,32978,32980,32981,32983,32984,32992,33005,33006,33008,33010,33011,33014,33017,33018,33022,33027,33035,33046,33047,33048,33052,33054,33056,33060,33063,33068,33072,33077,33082,33084,33093,33095,33098,33100,33106,33111,33120,33121,33127,33128,33129,33133,33135,33143,33153,33168,33156,33157,33158,33163,33166,33174,33176,33179,33182,33186,33198,33202,33204,33211,33227,33219,33221,33226,33230,33231,33237,33239,33243,33245,33246,33249,33252,33259,33260,33264,33265,33266,33269,33270,33272,33273,33277,33279,33280,33283,33295,33299,33300,33305,33306,33309,33313,33314,33320,33330,33332,33338,33347,33348,33349,33350,33355,33358,33359,33361,33366,33372,33376,33379,33383,33389,33396,33403,33405,33407,33408,33409,33411,33412,33415,33417,33418,33422,33425,33428,33430,33432,33434,33435,33440,33441,33443,33444,33447,33448,33449,33450,33454,33456,33458,33460,33463,33466,33468,33470,33471,33478,33488,33493,33498,33504,33506,33508,33512,33514,33517,33519,33526,33527,33533,33534,33536,33537,33543,33544,33546,33547,33620,33563,33565,33566,33567,33569,33570,33580,33581,33582,33584,33587,33591,33594,33596,33597,33602,33603,33604,33607,33613,33614,33617,33621,33622,33623,33648,33656,33661,33663,33664,33666,33668,33670,33677,33682,33684,33685,33688,33689,33691,33692,33693,33702,33703,33705,33708,33726,33727,33728,33735,33737,33743,33744,33745,33748,33757,33619,33768,33770,33782,33784,33785,33788,33793,33798,33802,33807,33809,33813,33817,33709,33839,33849,33861,33863,33864,33866,33869,33871,33873,33874,33878,33880,33881,33882,33884,33888,33892,33893,33895,33898,33904,33907,33908,33910,33912,33916,33917,33921,33925,33938,33939,33941,33950,33958,33960,33961,33962,33967,33969,33972,33978,33981,33982,33984,33986,33991,33992,33996,33999,34003,34012,34023,34026,34031,34032,34033,34034,34039,34098,34042,34043,34045,34050,34051,34055,34060,34062,34064,34076,34078,34082,34083,34084,34085,34087,34090,34091,34095,34099,34100,34102,34111,34118,34127,34128,34129,34130,34131,34134,34137,34140,34141,34142,34143,34144,34145,34146,34148,34155,34159,34169,34170,34171,34173,34175,34177,34181,34182,34185,34187,34188,34191,34195,34200,34205,34207,34208,34210,34213,34215,34228,34230,34231,34232,34236,34237,34238,34239,34242,34247,34250,34251,34254,34221,34264,34266,34271,34272,34278,34280,34285,34291,34294,34300,34303,34304,34308,34309,34317,34318,34320,34321,34322,34328,34329,34331,34334,34337,34343,34345,34358,34360,34362,34364,34365,34368,34370,34374,34386,34387,34390,34391,34392,34393,34397,34400,34401,34402,34403,34404,34409,34412,34415,34421,34422,34423,34426,34445,34449,34454,34456,34458,34460,34465,34470,34471,34472,34477,34481,34483,34484,34485,34487,34488,34489,34495,34496,34497,34499,34501,34513,34514,34517,34519,34522,34524,34528,34531,34533,34535,34440,34554,34556,34557,34564,34565,34567,34571,34574,34575,34576,34579,34580,34585,34590,34591,34593,34595,34600,34606,34607,34609,34610,34617,34618,34620,34621,34622,34624,34627,34629,34637,34648,34653,34657,34660,34661,34671,34673,34674,34683,34691,34692,34693,34694,34695,34696,34697,34699,34700,34704,34707,34709,34711,34712,34713,34718,34720,34723,34727,34732,34733,34734,34737,34741,34750,34751,34753,34760,34761,34762,34766,34773,34774,34777,34778,34780,34783,34786,34787,34788,34794,34795,34797,34801,34803,34808,34810,34815,34817,34819,34822,34825,34826,34827,34832,34841,34834,34835,34836,34840,34842,34843,34844,34846,34847,34856,34861,34862,34864,34866,34869,34874,34876,34881,34883,34885,34888,34889,34890,34891,34894,34897,34901,34902,34904,34906,34908,34911,34912,34916,34921,34929,34937,34939,34944,34968,34970,34971,34972,34975,34976,34984,34986,35002,35005,35006,35008,35018,35019,35020,35021,35022,35025,35026,35027,35035,35038,35047,35055,35056,35057,35061,35063,35073,35078,35085,35086,35087,35093,35094,35096,35097,35098,35100,35104,35110,35111,35112,35120,35121,35122,35125,35129,35130,35134,35136,35138,35141,35142,35145,35151,35154,35159,35162,35163,35164,35169,35170,35171,35179,35182,35184,35187,35189,35194,35195,35196,35197,35209,35213,35216,35220,35221,35227,35228,35231,35232,35237,35248,35252,35253,35254,35255,35260,35284,35285,35286,35287,35288,35301,35305,35307,35309,35313,35315,35318,35321,35325,35327,35332,35333,35335,35343,35345,35346,35348,35349,35358,35360,35362,35364,35366,35371,35372,35375,35381,35383,35389,35390,35392,35395,35397,35399,35401,35405,35406,35411,35414,35415,35416,35420,35421,35425,35429,35431,35445,35446,35447,35449,35450,35451,35454,35455,35456,35459,35462,35467,35471,35472,35474,35478,35479,35481,35487,35495,35497,35502,35503,35507,35510,35511,35515,35518,35523,35526,35528,35529,35530,35537,35539,35540,35541,35543,35549,35551,35564,35568,35572,35573,35574,35580,35583,35589,35590,35595,35601,35612,35614,35615,35594,35629,35632,35639,35644,35650,35651,35652,35653,35654,35656,35666,35667,35668,35673,35661,35678,35683,35693,35702,35704,35705,35708,35710,35713,35716,35717,35723,35725,35727,35732,35733,35740,35742,35743,35896,35897,35901,35902,35909,35911,35913,35915,35919,35921,35923,35924,35927,35928,35931,35933,35929,35939,35940,35942,35944,35945,35949,35955,35957,35958,35963,35966,35974,35975,35979,35984,35986,35987,35993,35995,35996,36004,36025,36026,36037,36038,36041,36043,36047,36054,36053,36057,36061,36065,36072,36076,36079,36080,36082,36085,36087,36088,36094,36095,36097,36099,36105,36114,36119,36123,36197,36201,36204,36206,36223,36226,36228,36232,36237,36240,36241,36245,36254,36255,36256,36262,36267,36268,36271,36274,36277,36279,36281,36283,36288,36293,36294,36295,36296,36298,36302,36305,36308,36309,36311,36313,36324,36325,36327,36332,36336,36284,36337,36338,36340,36349,36353,36356,36357,36358,36363,36369,36372,36374,36384,36385,36386,36387,36390,36391,36401,36403,36406,36407,36408,36409,36413,36416,36417,36427,36429,36430,36431,36436,36443,36444,36445,36446,36449,36450,36457,36460,36461,36463,36464,36465,36473,36474,36475,36482,36483,36489,36496,36498,36501,36506,36507,36509,36510,36514,36519,36521,36525,36526,36531,36533,36538,36539,36544,36545,36547,36548,36551,36559,36561,36564,36572,36584,36590,36592,36593,36599,36601,36602,36589,36608,36610,36615,36616,36623,36624,36630,36631,36632,36638,36640,36641,36643,36645,36647,36648,36652,36653,36654,36660,36661,36662,36663,36666,36672,36673,36675,36679,36687,36689,36690,36691,36692,36693,36696,36701,36702,36709,36765,36768,36769,36772,36773,36774,36789,36790,36792,36798,36800,36801,36806,36810,36811,36813,36816,36818,36819,36821,36832,36835,36836,36840,36846,36849,36853,36854,36859,36862,36866,36868,36872,36876,36888,36891,36904,36905,36911,36906,36908,36909,36915,36916,36919,36927,36931,36932,36940,36955,36957,36962,36966,36967,36972,36976,36980,36985,36997,37000,37003,37004,37006,37008,37013,37015,37016,37017,37019,37024,37025,37026,37029,37040,37042,37043,37044,37046,37053,37068,37054,37059,37060,37061,37063,37064,37077,37079,37080,37081,37084,37085,37087,37093,37074,37110,37099,37103,37104,37108,37118,37119,37120,37124,37125,37126,37128,37133,37136,37140,37142,37143,37144,37146,37148,37150,37152,37157,37154,37155,37159,37161,37166,37167,37169,37172,37174,37175,37177,37178,37180,37181,37187,37191,37192,37199,37203,37207,37209,37210,37211,37217,37220,37223,37229,37236,37241,37242,37243,37249,37251,37253,37254,37258,37262,37265,37267,37268,37269,37272,37278,37281,37286,37288,37292,37293,37294,37296,37297,37298,37299,37302,37307,37308,37309,37311,37314,37315,37317,37331,37332,37335,37337,37338,37342,37348,37349,37353,37354,37356,37357,37358,37359,37360,37361,37367,37369,37371,37373,37376,37377,37380,37381,37382,37383,37385,37386,37388,37392,37394,37395,37398,37400,37404,37405,37411,37412,37413,37414,37416,37422,37423,37424,37427,37429,37430,37432,37433,37434,37436,37438,37440,37442,37443,37446,37447,37450,37453,37454,37455,37457,37464,37465,37468,37469,37472,37473,37477,37479,37480,37481,37486,37487,37488,37493,37494,37495,37496,37497,37499,37500,37501,37503,37512,37513,37514,37517,37518,37522,37527,37529,37535,37536,37540,37541,37543,37544,37547,37551,37554,37558,37560,37562,37563,37564,37565,37567,37568,37569,37570,37571,37573,37574,37575,37576,37579,37580,37581,37582,37584,37587,37589,37591,37592,37593,37596,37597,37599,37600,37601,37603,37605,37607,37608,37612,37614,37616,37625,37627,37631,37632,37634,37640,37645,37649,37652,37653,37660,37661,37662,37663,37665,37668,37669,37671,37673,37674,37683,37684,37686,37687,37703,37704,37705,37712,37713,37714,37717,37719,37720,37722,37726,37732,37733,37735,37737,37738,37741,37743,37744,37745,37747,37748,37750,37754,37757,37759,37760,37761,37762,37768,37770,37771,37773,37775,37778,37781,37784,37787,37790,37793,37795,37796,37798,37800,37803,37812,37813,37814,37818,37801,37825,37828,37829,37830,37831,37833,37834,37835,37836,37837,37843,37849,37852,37854,37855,37858,37862,37863,37881,37879,37880,37882,37883,37885,37889,37890,37892,37896,37897,37901,37902,37903,37909,37910,37911,37919,37934,37935,37937,37938,37939,37940,37947,37951,37949,37955,37957,37960,37962,37964,37973,37977,37980,37983,37985,37987,37992,37995,37997,37998,37999,38001,38002,38020,38019,38264,38265,38270,38276,38280,38284,38285,38286,38301,38302,38303,38305,38310,38313,38315,38316,38324,38326,38330,38333,38335,38342,38344,38345,38347,38352,38353,38354,38355,38361,38362,38365,38366,38367,38368,38372,38374,38429,38430,38434,38436,38437,38438,38444,38449,38451,38455,38456,38457,38458,38460,38461,38465,38482,38484,38486,38487,38488,38497,38510,38516,38523,38524,38526,38527,38529,38530,38531,38532,38537,38545,38550,38554,38557,38559,38564,38565,38566,38569,38574,38575,38579,38586,38602,38610,23986,38616,38618,38621,38622,38623,38633,38639,38641,38650,38658,38659,38661,38665,38682,38683,38685,38689,38690,38691,38696,38705,38707,38721,38723,38730,38734,38735,38741,38743,38744,38746,38747,38755,38759,38762,38766,38771,38774,38775,38776,38779,38781,38783,38784,38793,38805,38806,38807,38809,38810,38814,38815,38818,38828,38830,38833,38834,38837,38838,38840,38841,38842,38844,38846,38847,38849,38852,38853,38855,38857,38858,38860,38861,38862,38864,38865,38868,38871,38872,38873,38877,38878,38880,38875,38881,38884,38895,38897,38900,38903,38904,38906,38919,38922,38937,38925,38926,38932,38934,38940,38942,38944,38947,38950,38955,38958,38959,38960,38962,38963,38965,38949,38974,38980,38983,38986,38993,38994,38995,38998,38999,39001,39002,39010,39011,39013,39014,39018,39020,39083,39085,39086,39088,39092,39095,39096,39098,39099,39103,39106,39109,39112,39116,39137,39139,39141,39142,39143,39146,39155,39158,39170,39175,39176,39185,39189,39190,39191,39194,39195,39196,39199,39202,39206,39207,39211,39217,39218,39219,39220,39221,39225,39226,39227,39228,39232,39233,39238,39239,39240,39245,39246,39252,39256,39257,39259,39260,39262,39263,39264,39323,39325,39327,39334,39344,39345,39346,39349,39353,39354,39357,39359,39363,39369,39379,39380,39385,39386,39388,39390,39399,39402,39403,39404,39408,39412,39413,39417,39421,39422,39426,39427,39428,39435,39436,39440,39441,39446,39454,39456,39458,39459,39460,39463,39469,39470,39475,39477,39478,39480,39495,39489,39492,39498,39499,39500,39502,39505,39508,39510,39517,39594,39596,39598,39599,39602,39604,39605,39606,39609,39611,39614,39615,39617,39619,39622,39624,39630,39632,39634,39637,39638,39639,39643,39644,39648,39652,39653,39655,39657,39660,39666,39667,39669,39673,39674,39677,39679,39680,39681,39682,39683,39684,39685,39688,39689,39691,39692,39693,39694,39696,39698,39702,39705,39707,39708,39712,39718,39723,39725,39731,39732,39733,39735,39737,39738,39741,39752,39755,39756,39765,39766,39767,39771,39774,39777,39779,39781,39782,39784,39786,39787,39788,39789,39790,39795,39797,39799,39800,39801,39807,39808,39812,39813,39814,39815,39817,39818,39819,39821,39823,39824,39828,39834,39837,39838,39846,39847,39849,39852,39856,39857,39858,39863,39864,39867,39868,39870,39871,39873,39879,39880,39886,39888,39895,39896,39901,39903,39909,39911,39914,39915,39919,39923,39927,39928,39929,39930,39933,39935,39936,39938,39947,39951,39953,39958,39960,39961,39962,39964,39966,39970,39971,39974,39975,39976,39977,39978,39985,39989,39990,39991,39997,40001,40003,40004,40005,40009,40010,40014,40015,40016,40019,40020,40022,40024,40027,40029,40030,40031,40035,40041,40042,40028,40043,40040,40046,40048,40050,40053,40055,40059,40166,40178,40183,40185,40203,40194,40209,40215,40216,40220,40221,40222,40239,40240,40242,40243,40244,40250,40252,40261,40253,40258,40259,40263,40266,40275,40276,40287,40291,40290,40293,40297,40298,40299,40304,40310,40311,40315,40316,40318,40323,40324,40326,40330,40333,40334,40338,40339,40341,40342,40343,40344,40353,40362,40364,40366,40369,40373,40377,40380,40383,40387,40391,40393,40394,40404,40405,40406,40407,40410,40414,40415,40416,40421,40423,40425,40427,40430,40432,40435,40436,40446,40458,40450,40455,40462,40464,40465,40466,40469,40470,40473,40476,40477,40570,40571,40572,40576,40578,40579,40580,40581,40583,40590,40591,40598,40600,40603,40606,40612,40616,40620,40622,40623,40624,40627,40628,40629,40646,40648,40651,40661,40671,40676,40679,40684,40685,40686,40688,40689,40690,40693,40696,40703,40706,40707,40713,40719,40720,40721,40722,40724,40726,40727,40729,40730,40731,40735,40738,40742,40746,40747,40751,40753,40754,40756,40759,40761,40762,40764,40765,40767,40769,40771,40772,40773,40774,40775,40787,40789,40790,40791,40792,40794,40797,40798,40808,40809,40813,40814,40815,40816,40817,40819,40821,40826,40829,40847,40848,40849,40850,40852,40854,40855,40862,40865,40866,40867,40869,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ibm866":[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,9617,9618,9619,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9561,9560,9554,9555,9579,9578,9496,9484,9608,9604,9612,9616,9600,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1025,1105,1028,1108,1031,1111,1038,1118,176,8729,183,8730,8470,164,9632,160],"iso-8859-2":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,728,321,164,317,346,167,168,352,350,356,377,173,381,379,176,261,731,322,180,318,347,711,184,353,351,357,378,733,382,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"iso-8859-3":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,294,728,163,164,null,292,167,168,304,350,286,308,173,null,379,176,295,178,179,180,181,293,183,184,305,351,287,309,189,null,380,192,193,194,null,196,266,264,199,200,201,202,203,204,205,206,207,null,209,210,211,212,288,214,215,284,217,218,219,220,364,348,223,224,225,226,null,228,267,265,231,232,233,234,235,236,237,238,239,null,241,242,243,244,289,246,247,285,249,250,251,252,365,349,729],"iso-8859-4":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,312,342,164,296,315,167,168,352,274,290,358,173,381,175,176,261,731,343,180,297,316,711,184,353,275,291,359,330,382,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,298,272,325,332,310,212,213,214,215,216,370,218,219,220,360,362,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,299,273,326,333,311,244,245,246,247,248,371,250,251,252,361,363,729],"iso-8859-5":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,173,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8470,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,167,1118,1119],"iso-8859-6":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,null,null,164,null,null,null,null,null,null,null,1548,173,null,null,null,null,null,null,null,null,null,null,null,null,null,1563,null,null,null,1567,null,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,null,null,null,null,null,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,null,null,null,null,null,null,null,null,null,null,null,null,null],"iso-8859-7":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8216,8217,163,8364,8367,166,167,168,169,890,171,172,173,null,8213,176,177,178,179,900,901,902,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"iso-8859-8":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,162,163,164,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8215,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"iso-8859-10":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,274,290,298,296,310,167,315,272,352,358,381,173,362,330,176,261,275,291,299,297,311,183,316,273,353,359,382,8213,363,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,207,208,325,332,211,212,213,214,360,216,370,218,219,220,221,222,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,239,240,326,333,243,244,245,246,361,248,371,250,251,252,253,254,312],"iso-8859-13":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8221,162,163,164,8222,166,167,216,169,342,171,172,173,174,198,176,177,178,179,8220,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,8217],"iso-8859-14":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,7682,7683,163,266,267,7690,167,7808,169,7810,7691,7922,173,174,376,7710,7711,288,289,7744,7745,182,7766,7809,7767,7811,7776,7923,7812,7813,7777,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,372,209,210,211,212,213,214,7786,216,217,218,219,220,221,374,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,373,241,242,243,244,245,246,7787,248,249,250,251,252,253,375,255],"iso-8859-15":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,8364,165,352,167,353,169,170,171,172,173,174,175,176,177,178,179,381,181,182,183,382,185,186,187,338,339,376,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"iso-8859-16":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,261,321,8364,8222,352,167,353,169,536,171,377,173,378,379,176,177,268,322,381,8221,182,183,382,269,537,187,338,339,376,380,192,193,194,258,196,262,198,199,200,201,202,203,204,205,206,207,272,323,210,211,212,336,214,346,368,217,218,219,220,280,538,223,224,225,226,259,228,263,230,231,232,233,234,235,236,237,238,239,273,324,242,243,244,337,246,347,369,249,250,251,252,281,539,255],"koi8-r":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,1025,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],"koi8-u":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,1108,9556,1110,1111,9559,9560,9561,9562,9563,1169,1118,9566,9567,9568,9569,1025,1028,9571,1030,1031,9574,9575,9576,9577,9578,1168,1038,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],"macintosh":[196,197,199,201,209,214,220,225,224,226,228,227,229,231,233,232,234,235,237,236,238,239,241,243,242,244,246,245,250,249,251,252,8224,176,162,163,167,8226,182,223,174,169,8482,180,168,8800,198,216,8734,177,8804,8805,165,181,8706,8721,8719,960,8747,170,186,937,230,248,191,161,172,8730,402,8776,8710,171,187,8230,160,192,195,213,338,339,8211,8212,8220,8221,8216,8217,247,9674,255,376,8260,8364,8249,8250,64257,64258,8225,183,8218,8222,8240,194,202,193,203,200,205,206,207,204,211,212,63743,210,218,219,217,305,710,732,175,728,729,730,184,733,731,711],"windows-874":[8364,129,130,131,132,8230,134,135,136,137,138,139,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,153,154,155,156,157,158,159,160,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3631,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,null,null,null,null,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,null,null,null,null],"windows-1250":[8364,129,8218,131,8222,8230,8224,8225,136,8240,352,8249,346,356,381,377,144,8216,8217,8220,8221,8226,8211,8212,152,8482,353,8250,347,357,382,378,160,711,728,321,164,260,166,167,168,169,350,171,172,173,174,379,176,177,731,322,180,181,182,183,184,261,351,187,317,733,318,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"windows-1251":[1026,1027,8218,1107,8222,8230,8224,8225,8364,8240,1033,8249,1034,1036,1035,1039,1106,8216,8217,8220,8221,8226,8211,8212,152,8482,1113,8250,1114,1116,1115,1119,160,1038,1118,1032,164,1168,166,167,1025,169,1028,171,172,173,174,1031,176,177,1030,1110,1169,181,182,183,1105,8470,1108,187,1112,1029,1109,1111,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103],"windows-1252":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,381,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,382,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"windows-1253":[8364,129,8218,402,8222,8230,8224,8225,136,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,157,158,159,160,901,902,163,164,165,166,167,168,169,null,171,172,173,174,8213,176,177,178,179,900,181,182,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"windows-1254":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,286,209,210,211,212,213,214,215,216,217,218,219,220,304,350,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,287,241,242,243,244,245,246,247,248,249,250,251,252,305,351,255],"windows-1255":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,156,157,158,159,160,161,162,163,8362,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,191,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1520,1521,1522,1523,1524,null,null,null,null,null,null,null,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"windows-1256":[8364,1662,8218,402,8222,8230,8224,8225,710,8240,1657,8249,338,1670,1688,1672,1711,8216,8217,8220,8221,8226,8211,8212,1705,8482,1681,8250,339,8204,8205,1722,160,1548,162,163,164,165,166,167,168,169,1726,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,1563,187,188,189,190,1567,1729,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,215,1591,1592,1593,1594,1600,1601,1602,1603,224,1604,226,1605,1606,1607,1608,231,232,233,234,235,1609,1610,238,239,1611,1612,1613,1614,244,1615,1616,247,1617,249,1618,251,252,8206,8207,1746],"windows-1257":[8364,129,8218,131,8222,8230,8224,8225,136,8240,138,8249,140,168,711,184,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,175,731,159,160,null,162,163,164,null,166,167,216,169,342,171,172,173,174,198,176,177,178,179,180,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,729],"windows-1258":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,258,196,197,198,199,200,201,202,203,768,205,206,207,272,209,777,211,212,416,214,215,216,217,218,219,220,431,771,223,224,225,226,259,228,229,230,231,232,233,234,235,769,237,238,239,273,241,803,243,244,417,246,247,248,249,250,251,252,432,8363,255],"x-mac-cyrillic":[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,8224,176,1168,163,167,8226,182,1030,174,169,8482,1026,1106,8800,1027,1107,8734,177,8804,8805,1110,181,1169,1032,1028,1108,1031,1111,1033,1113,1034,1114,1112,1029,172,8730,402,8776,8710,171,187,8230,160,1035,1115,1036,1116,1109,8211,8212,8220,8221,8216,8217,247,8222,1038,1118,1039,1119,8470,1025,1105,1103,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,8364]};}(this||{}));(function(global){'use strict';if(typeof module!=="undefined"&&module.exports&&!global["encoding-indexes"]){global["encoding-indexes"]=require("./encoding-indexes.js")["encoding-indexes"];}
function inRange(a,min,max){return min<=a&&a<=max;}
function includes(array,item){return array.indexOf(item)!==-1;}
var floor=Math.floor;function ToDictionary(o){if(o===undefined)return{};if(o===Object(o))return o;throw TypeError('Could not convert argument to dictionary');}
function stringToCodePoints(string){var s=String(string);var n=s.length;var i=0;var u=[];while(i<n){var c=s.charCodeAt(i);if(c<0xD800||c>0xDFFF){u.push(c);}
else if(0xDC00<=c&&c<=0xDFFF){u.push(0xFFFD);}
else if(0xD800<=c&&c<=0xDBFF){if(i===n-1){u.push(0xFFFD);}
else{var d=s.charCodeAt(i+1);if(0xDC00<=d&&d<=0xDFFF){var a=c&0x3FF;var b=d&0x3FF;u.push(0x10000+(a<<10)+b);i+=1;}
else{u.push(0xFFFD);}}}
i+=1;}
return u;}
function codePointsToString(code_points){var s='';for(var i=0;i<code_points.length;++i){var cp=code_points[i];if(cp<=0xFFFF){s+=String.fromCharCode(cp);}else{cp-=0x10000;s+=String.fromCharCode((cp>>10)+0xD800,(cp&0x3FF)+0xDC00);}}
return s;}
function isASCIIByte(a){return 0x00<=a&&a<=0x7F;}
var isASCIICodePoint=isASCIIByte;var end_of_stream=-1;function Stream(tokens){this.tokens=[].slice.call(tokens);this.tokens.reverse();}
Stream.prototype={endOfStream:function(){return!this.tokens.length;},read:function(){if(!this.tokens.length)
return end_of_stream;return this.tokens.pop();},prepend:function(token){if(Array.isArray(token)){var tokens=(token);while(tokens.length)
this.tokens.push(tokens.pop());}else{this.tokens.push(token);}},push:function(token){if(Array.isArray(token)){var tokens=(token);while(tokens.length)
this.tokens.unshift(tokens.shift());}else{this.tokens.unshift(token);}}};var finished=-1;function decoderError(fatal,opt_code_point){if(fatal)
throw TypeError('Decoder error');return opt_code_point||0xFFFD;}
function encoderError(code_point){throw TypeError('The code point '+code_point+' could not be encoded.');}
function Decoder(){}
Decoder.prototype={handler:function(stream,bite){}};function Encoder(){}
Encoder.prototype={handler:function(stream,code_point){}};function getEncoding(label){label=String(label).trim().toLowerCase();if(Object.prototype.hasOwnProperty.call(label_to_encoding,label)){return label_to_encoding[label];}
return null;}
var encodings=[{"encodings":[{"labels":["unicode-1-1-utf-8","utf-8","utf8"],"name":"UTF-8"}],"heading":"The Encoding"},{"encodings":[{"labels":["866","cp866","csibm866","ibm866"],"name":"IBM866"},{"labels":["csisolatin2","iso-8859-2","iso-ir-101","iso8859-2","iso88592","iso_8859-2","iso_8859-2:1987","l2","latin2"],"name":"ISO-8859-2"},{"labels":["csisolatin3","iso-8859-3","iso-ir-109","iso8859-3","iso88593","iso_8859-3","iso_8859-3:1988","l3","latin3"],"name":"ISO-8859-3"},{"labels":["csisolatin4","iso-8859-4","iso-ir-110","iso8859-4","iso88594","iso_8859-4","iso_8859-4:1988","l4","latin4"],"name":"ISO-8859-4"},{"labels":["csisolatincyrillic","cyrillic","iso-8859-5","iso-ir-144","iso8859-5","iso88595","iso_8859-5","iso_8859-5:1988"],"name":"ISO-8859-5"},{"labels":["arabic","asmo-708","csiso88596e","csiso88596i","csisolatinarabic","ecma-114","iso-8859-6","iso-8859-6-e","iso-8859-6-i","iso-ir-127","iso8859-6","iso88596","iso_8859-6","iso_8859-6:1987"],"name":"ISO-8859-6"},{"labels":["csisolatingreek","ecma-118","elot_928","greek","greek8","iso-8859-7","iso-ir-126","iso8859-7","iso88597","iso_8859-7","iso_8859-7:1987","sun_eu_greek"],"name":"ISO-8859-7"},{"labels":["csiso88598e","csisolatinhebrew","hebrew","iso-8859-8","iso-8859-8-e","iso-ir-138","iso8859-8","iso88598","iso_8859-8","iso_8859-8:1988","visual"],"name":"ISO-8859-8"},{"labels":["csiso88598i","iso-8859-8-i","logical"],"name":"ISO-8859-8-I"},{"labels":["csisolatin6","iso-8859-10","iso-ir-157","iso8859-10","iso885910","l6","latin6"],"name":"ISO-8859-10"},{"labels":["iso-8859-13","iso8859-13","iso885913"],"name":"ISO-8859-13"},{"labels":["iso-8859-14","iso8859-14","iso885914"],"name":"ISO-8859-14"},{"labels":["csisolatin9","iso-8859-15","iso8859-15","iso885915","iso_8859-15","l9"],"name":"ISO-8859-15"},{"labels":["iso-8859-16"],"name":"ISO-8859-16"},{"labels":["cskoi8r","koi","koi8","koi8-r","koi8_r"],"name":"KOI8-R"},{"labels":["koi8-ru","koi8-u"],"name":"KOI8-U"},{"labels":["csmacintosh","mac","macintosh","x-mac-roman"],"name":"macintosh"},{"labels":["dos-874","iso-8859-11","iso8859-11","iso885911","tis-620","windows-874"],"name":"windows-874"},{"labels":["cp1250","windows-1250","x-cp1250"],"name":"windows-1250"},{"labels":["cp1251","windows-1251","x-cp1251"],"name":"windows-1251"},{"labels":["ansi_x3.4-1968","ascii","cp1252","cp819","csisolatin1","ibm819","iso-8859-1","iso-ir-100","iso8859-1","iso88591","iso_8859-1","iso_8859-1:1987","l1","latin1","us-ascii","windows-1252","x-cp1252"],"name":"windows-1252"},{"labels":["cp1253","windows-1253","x-cp1253"],"name":"windows-1253"},{"labels":["cp1254","csisolatin5","iso-8859-9","iso-ir-148","iso8859-9","iso88599","iso_8859-9","iso_8859-9:1989","l5","latin5","windows-1254","x-cp1254"],"name":"windows-1254"},{"labels":["cp1255","windows-1255","x-cp1255"],"name":"windows-1255"},{"labels":["cp1256","windows-1256","x-cp1256"],"name":"windows-1256"},{"labels":["cp1257","windows-1257","x-cp1257"],"name":"windows-1257"},{"labels":["cp1258","windows-1258","x-cp1258"],"name":"windows-1258"},{"labels":["x-mac-cyrillic","x-mac-ukrainian"],"name":"x-mac-cyrillic"}],"heading":"Legacy single-byte encodings"},{"encodings":[{"labels":["chinese","csgb2312","csiso58gb231280","gb2312","gb_2312","gb_2312-80","gbk","iso-ir-58","x-gbk"],"name":"GBK"},{"labels":["gb18030"],"name":"gb18030"}],"heading":"Legacy multi-byte Chinese (simplified) encodings"},{"encodings":[{"labels":["big5","big5-hkscs","cn-big5","csbig5","x-x-big5"],"name":"Big5"}],"heading":"Legacy multi-byte Chinese (traditional) encodings"},{"encodings":[{"labels":["cseucpkdfmtjapanese","euc-jp","x-euc-jp"],"name":"EUC-JP"},{"labels":["csiso2022jp","iso-2022-jp"],"name":"ISO-2022-JP"},{"labels":["csshiftjis","ms932","ms_kanji","shift-jis","shift_jis","sjis","windows-31j","x-sjis"],"name":"Shift_JIS"}],"heading":"Legacy multi-byte Japanese encodings"},{"encodings":[{"labels":["cseuckr","csksc56011987","euc-kr","iso-ir-149","korean","ks_c_5601-1987","ks_c_5601-1989","ksc5601","ksc_5601","windows-949"],"name":"EUC-KR"}],"heading":"Legacy multi-byte Korean encodings"},{"encodings":[{"labels":["csiso2022kr","hz-gb-2312","iso-2022-cn","iso-2022-cn-ext","iso-2022-kr"],"name":"replacement"},{"labels":["utf-16be"],"name":"UTF-16BE"},{"labels":["utf-16","utf-16le"],"name":"UTF-16LE"},{"labels":["x-user-defined"],"name":"x-user-defined"}],"heading":"Legacy miscellaneous encodings"}];var label_to_encoding={};encodings.forEach(function(category){category.encodings.forEach(function(encoding){encoding.labels.forEach(function(label){label_to_encoding[label]=encoding;});});});var encoders={};var decoders={};function indexCodePointFor(pointer,index){if(!index)return null;return index[pointer]||null;}
function indexPointerFor(code_point,index){var pointer=index.indexOf(code_point);return pointer===-1?null:pointer;}
function index(name){if(!('encoding-indexes'in global)){throw Error("Indexes missing."+
" Did you forget to include encoding-indexes.js first?");}
return global['encoding-indexes'][name];}
function indexGB18030RangesCodePointFor(pointer){if((pointer>39419&&pointer<189000)||(pointer>1237575))
return null;if(pointer===7457)return 0xE7C7;var offset=0;var code_point_offset=0;var idx=index('gb18030-ranges');var i;for(i=0;i<idx.length;++i){var entry=idx[i];if(entry[0]<=pointer){offset=entry[0];code_point_offset=entry[1];}else{break;}}
return code_point_offset+pointer-offset;}
function indexGB18030RangesPointerFor(code_point){if(code_point===0xE7C7)return 7457;var offset=0;var pointer_offset=0;var idx=index('gb18030-ranges');var i;for(i=0;i<idx.length;++i){var entry=idx[i];if(entry[1]<=code_point){offset=entry[1];pointer_offset=entry[0];}else{break;}}
return pointer_offset+code_point-offset;}
function indexShiftJISPointerFor(code_point){shift_jis_index=shift_jis_index||index('jis0208').map(function(code_point,pointer){return inRange(pointer,8272,8835)?null:code_point;});var index_=shift_jis_index;return index_.indexOf(code_point);}
var shift_jis_index;function indexBig5PointerFor(code_point){big5_index_no_hkscs=big5_index_no_hkscs||index('big5').map(function(code_point,pointer){return(pointer<(0xA1-0x81)*157)?null:code_point;});var index_=big5_index_no_hkscs;if(code_point===0x2550||code_point===0x255E||code_point===0x2561||code_point===0x256A||code_point===0x5341||code_point===0x5345){return index_.lastIndexOf(code_point);}
return indexPointerFor(code_point,index_);}
var big5_index_no_hkscs;var DEFAULT_ENCODING='utf-8';function TextDecoder(label,options){if(!(this instanceof TextDecoder))
throw TypeError('Called as a function. Did you forget \'new\'?');label=label!==undefined?String(label):DEFAULT_ENCODING;options=ToDictionary(options);this._encoding=null;this._decoder=null;this._ignoreBOM=false;this._BOMseen=false;this._error_mode='replacement';this._do_not_flush=false;var encoding=getEncoding(label);if(encoding===null||encoding.name==='replacement')
throw RangeError('Unknown encoding: '+label);if(!decoders[encoding.name]){throw Error('Decoder not present.'+
' Did you forget to include encoding-indexes.js first?');}
var dec=this;dec._encoding=encoding;if(Boolean(options['fatal']))
dec._error_mode='fatal';if(Boolean(options['ignoreBOM']))
dec._ignoreBOM=true;if(!Object.defineProperty){this.encoding=dec._encoding.name.toLowerCase();this.fatal=dec._error_mode==='fatal';this.ignoreBOM=dec._ignoreBOM;}
return dec;}
if(Object.defineProperty){Object.defineProperty(TextDecoder.prototype,'encoding',{get:function(){return this._encoding.name.toLowerCase();}});Object.defineProperty(TextDecoder.prototype,'fatal',{get:function(){return this._error_mode==='fatal';}});Object.defineProperty(TextDecoder.prototype,'ignoreBOM',{get:function(){return this._ignoreBOM;}});}
TextDecoder.prototype.decode=function decode(input,options){var bytes;if(typeof input==='object'&&input instanceof ArrayBuffer){bytes=new Uint8Array(input);}else if(typeof input==='object'&&'buffer'in input&&input.buffer instanceof ArrayBuffer){bytes=new Uint8Array(input.buffer,input.byteOffset,input.byteLength);}else{bytes=new Uint8Array(0);}
options=ToDictionary(options);if(!this._do_not_flush){this._decoder=decoders[this._encoding.name]({fatal:this._error_mode==='fatal'});this._BOMseen=false;}
this._do_not_flush=Boolean(options['stream']);var input_stream=new Stream(bytes);var output=[];var result;while(true){var token=input_stream.read();if(token===end_of_stream)
break;result=this._decoder.handler(input_stream,token);if(result===finished)
break;if(result!==null){if(Array.isArray(result))
output.push.apply(output,(result));else
output.push(result);}
}
if(!this._do_not_flush){do{result=this._decoder.handler(input_stream,input_stream.read());if(result===finished)
break;if(result===null)
continue;if(Array.isArray(result))
output.push.apply(output,(result));else
output.push(result);}while(!input_stream.endOfStream());this._decoder=null;}
function serializeStream(stream){if(includes(['UTF-8','UTF-16LE','UTF-16BE'],this._encoding.name)&&!this._ignoreBOM&&!this._BOMseen){if(stream.length>0&&stream[0]===0xFEFF){this._BOMseen=true;stream.shift();}else if(stream.length>0){this._BOMseen=true;}else{}}
return codePointsToString(stream);}
return serializeStream.call(this,output);};function TextEncoder(label,options){if(!(this instanceof TextEncoder))
throw TypeError('Called as a function. Did you forget \'new\'?');options=ToDictionary(options);this._encoding=null;this._encoder=null;this._do_not_flush=false;this._fatal=Boolean(options['fatal'])?'fatal':'replacement';var enc=this;if(Boolean(options['NONSTANDARD_allowLegacyEncoding'])){label=label!==undefined?String(label):DEFAULT_ENCODING;var encoding=getEncoding(label);if(encoding===null||encoding.name==='replacement')
throw RangeError('Unknown encoding: '+label);if(!encoders[encoding.name]){throw Error('Encoder not present.'+
' Did you forget to include encoding-indexes.js first?');}
enc._encoding=encoding;}else{enc._encoding=getEncoding('utf-8');if(label!==undefined&&'console'in global){console.warn('TextEncoder constructor called with encoding label, '
+'which is ignored.');}}
if(!Object.defineProperty)
this.encoding=enc._encoding.name.toLowerCase();return enc;}
if(Object.defineProperty){Object.defineProperty(TextEncoder.prototype,'encoding',{get:function(){return this._encoding.name.toLowerCase();}});}
TextEncoder.prototype.encode=function encode(opt_string,options){opt_string=opt_string===undefined?'':String(opt_string);options=ToDictionary(options);if(!this._do_not_flush)
this._encoder=encoders[this._encoding.name]({fatal:this._fatal==='fatal'});this._do_not_flush=Boolean(options['stream']);var input=new Stream(stringToCodePoints(opt_string));var output=[];var result;while(true){var token=input.read();if(token===end_of_stream)
break;result=this._encoder.handler(input,token);if(result===finished)
break;if(Array.isArray(result))
output.push.apply(output,(result));else
output.push(result);}
if(!this._do_not_flush){while(true){result=this._encoder.handler(input,input.read());if(result===finished)
break;if(Array.isArray(result))
output.push.apply(output,(result));else
output.push(result);}
this._encoder=null;}
return new Uint8Array(output);};function UTF8Decoder(options){var fatal=options.fatal;var utf8_code_point=0,utf8_bytes_seen=0,utf8_bytes_needed=0,utf8_lower_boundary=0x80,utf8_upper_boundary=0xBF;this.handler=function(stream,bite){if(bite===end_of_stream&&utf8_bytes_needed!==0){utf8_bytes_needed=0;return decoderError(fatal);}
if(bite===end_of_stream)
return finished;if(utf8_bytes_needed===0){if(inRange(bite,0x00,0x7F)){return bite;}
else if(inRange(bite,0xC2,0xDF)){utf8_bytes_needed=1;utf8_code_point=bite&0x1F;}
else if(inRange(bite,0xE0,0xEF)){if(bite===0xE0)
utf8_lower_boundary=0xA0;if(bite===0xED)
utf8_upper_boundary=0x9F;utf8_bytes_needed=2;utf8_code_point=bite&0xF;}
else if(inRange(bite,0xF0,0xF4)){if(bite===0xF0)
utf8_lower_boundary=0x90;if(bite===0xF4)
utf8_upper_boundary=0x8F;utf8_bytes_needed=3;utf8_code_point=bite&0x7;}
else{return decoderError(fatal);}
return null;}
if(!inRange(bite,utf8_lower_boundary,utf8_upper_boundary)){utf8_code_point=utf8_bytes_needed=utf8_bytes_seen=0;utf8_lower_boundary=0x80;utf8_upper_boundary=0xBF;stream.prepend(bite);return decoderError(fatal);}
utf8_lower_boundary=0x80;utf8_upper_boundary=0xBF;utf8_code_point=(utf8_code_point<<6)|(bite&0x3F);utf8_bytes_seen+=1;if(utf8_bytes_seen!==utf8_bytes_needed)
return null;var code_point=utf8_code_point;utf8_code_point=utf8_bytes_needed=utf8_bytes_seen=0;return code_point;};}
function UTF8Encoder(options){var fatal=options.fatal;this.handler=function(stream,code_point){if(code_point===end_of_stream)
return finished;if(isASCIICodePoint(code_point))
return code_point;var count,offset;if(inRange(code_point,0x0080,0x07FF)){count=1;offset=0xC0;}
else if(inRange(code_point,0x0800,0xFFFF)){count=2;offset=0xE0;}
else if(inRange(code_point,0x10000,0x10FFFF)){count=3;offset=0xF0;}
var bytes=[(code_point>>(6*count))+offset];while(count>0){var temp=code_point>>(6*(count-1));bytes.push(0x80|(temp&0x3F));count-=1;}
return bytes;};}
encoders['UTF-8']=function(options){return new UTF8Encoder(options);};decoders['UTF-8']=function(options){return new UTF8Decoder(options);};function SingleByteDecoder(index,options){var fatal=options.fatal;this.handler=function(stream,bite){if(bite===end_of_stream)
return finished;if(isASCIIByte(bite))
return bite;var code_point=index[bite-0x80];if(code_point===null)
return decoderError(fatal);return code_point;};}
function SingleByteEncoder(index,options){var fatal=options.fatal;this.handler=function(stream,code_point){if(code_point===end_of_stream)
return finished;if(isASCIICodePoint(code_point))
return code_point;var pointer=indexPointerFor(code_point,index);if(pointer===null)
encoderError(code_point);return pointer+0x80;};}
(function(){if(!('encoding-indexes'in global))
return;encodings.forEach(function(category){if(category.heading!=='Legacy single-byte encodings')
return;category.encodings.forEach(function(encoding){var name=encoding.name;var idx=index(name.toLowerCase());decoders[name]=function(options){return new SingleByteDecoder(idx,options);};encoders[name]=function(options){return new SingleByteEncoder(idx,options);};});});}());decoders['GBK']=function(options){return new GB18030Decoder(options);};encoders['GBK']=function(options){return new GB18030Encoder(options,true);};function GB18030Decoder(options){var fatal=options.fatal;var gb18030_first=0x00,gb18030_second=0x00,gb18030_third=0x00;this.handler=function(stream,bite){if(bite===end_of_stream&&gb18030_first===0x00&&gb18030_second===0x00&&gb18030_third===0x00){return finished;}
if(bite===end_of_stream&&(gb18030_first!==0x00||gb18030_second!==0x00||gb18030_third!==0x00)){gb18030_first=0x00;gb18030_second=0x00;gb18030_third=0x00;decoderError(fatal);}
var code_point;if(gb18030_third!==0x00){code_point=null;if(inRange(bite,0x30,0x39)){code_point=indexGB18030RangesCodePointFor((((gb18030_first-0x81)*10+gb18030_second-0x30)*126+
gb18030_third-0x81)*10+bite-0x30);}
var buffer=[gb18030_second,gb18030_third,bite];gb18030_first=0x00;gb18030_second=0x00;gb18030_third=0x00;if(code_point===null){stream.prepend(buffer);return decoderError(fatal);}
return code_point;}
if(gb18030_second!==0x00){if(inRange(bite,0x81,0xFE)){gb18030_third=bite;return null;}
stream.prepend([gb18030_second,bite]);gb18030_first=0x00;gb18030_second=0x00;return decoderError(fatal);}
if(gb18030_first!==0x00){if(inRange(bite,0x30,0x39)){gb18030_second=bite;return null;}
var lead=gb18030_first;var pointer=null;gb18030_first=0x00;var offset=bite<0x7F?0x40:0x41;if(inRange(bite,0x40,0x7E)||inRange(bite,0x80,0xFE))
pointer=(lead-0x81)*190+(bite-offset);code_point=pointer===null?null:indexCodePointFor(pointer,index('gb18030'));if(code_point===null&&isASCIIByte(bite))
stream.prepend(bite);if(code_point===null)
return decoderError(fatal);return code_point;}
if(isASCIIByte(bite))
return bite;if(bite===0x80)
return 0x20AC;if(inRange(bite,0x81,0xFE)){gb18030_first=bite;return null;}
return decoderError(fatal);};}
function GB18030Encoder(options,gbk_flag){var fatal=options.fatal;this.handler=function(stream,code_point){if(code_point===end_of_stream)
return finished;if(isASCIICodePoint(code_point))
return code_point;if(code_point===0xE5E5)
return encoderError(code_point);if(gbk_flag&&code_point===0x20AC)
return 0x80;var pointer=indexPointerFor(code_point,index('gb18030'));if(pointer!==null){var lead=floor(pointer/190)+0x81;var trail=pointer%190;var offset=trail<0x3F?0x40:0x41;return[lead,trail+offset];}
if(gbk_flag)
return encoderError(code_point);pointer=indexGB18030RangesPointerFor(code_point);var byte1=floor(pointer/10/126/10);pointer=pointer-byte1*10*126*10;var byte2=floor(pointer/10/126);pointer=pointer-byte2*10*126;var byte3=floor(pointer/10);var byte4=pointer-byte3*10;return[byte1+0x81,byte2+0x30,byte3+0x81,byte4+0x30];};}
encoders['gb18030']=function(options){return new GB18030Encoder(options);};decoders['gb18030']=function(options){return new GB18030Decoder(options);};function Big5Decoder(options){var fatal=options.fatal;var Big5_lead=0x00;this.handler=function(stream,bite){if(bite===end_of_stream&&Big5_lead!==0x00){Big5_lead=0x00;return decoderError(fatal);}
if(bite===end_of_stream&&Big5_lead===0x00)
return finished;if(Big5_lead!==0x00){var lead=Big5_lead;var pointer=null;Big5_lead=0x00;var offset=bite<0x7F?0x40:0x62;if(inRange(bite,0x40,0x7E)||inRange(bite,0xA1,0xFE))
pointer=(lead-0x81)*157+(bite-offset);switch(pointer){case 1133:return[0x00CA,0x0304];case 1135:return[0x00CA,0x030C];case 1164:return[0x00EA,0x0304];case 1166:return[0x00EA,0x030C];}
var code_point=(pointer===null)?null:indexCodePointFor(pointer,index('big5'));if(code_point===null&&isASCIIByte(bite))
stream.prepend(bite);if(code_point===null)
return decoderError(fatal);return code_point;}
if(isASCIIByte(bite))
return bite;if(inRange(bite,0x81,0xFE)){Big5_lead=bite;return null;}
return decoderError(fatal);};}
function Big5Encoder(options){var fatal=options.fatal;this.handler=function(stream,code_point){if(code_point===end_of_stream)
return finished;if(isASCIICodePoint(code_point))
return code_point;var pointer=indexBig5PointerFor(code_point);if(pointer===null)
return encoderError(code_point);var lead=floor(pointer/157)+0x81;if(lead<0xA1)
return encoderError(code_point);var trail=pointer%157;var offset=trail<0x3F?0x40:0x62;return[lead,trail+offset];};}
encoders['Big5']=function(options){return new Big5Encoder(options);};decoders['Big5']=function(options){return new Big5Decoder(options);};function EUCJPDecoder(options){var fatal=options.fatal;var eucjp_jis0212_flag=false,eucjp_lead=0x00;this.handler=function(stream,bite){if(bite===end_of_stream&&eucjp_lead!==0x00){eucjp_lead=0x00;return decoderError(fatal);}
if(bite===end_of_stream&&eucjp_lead===0x00)
return finished;if(eucjp_lead===0x8E&&inRange(bite,0xA1,0xDF)){eucjp_lead=0x00;return 0xFF61-0xA1+bite;}
if(eucjp_lead===0x8F&&inRange(bite,0xA1,0xFE)){eucjp_jis0212_flag=true;eucjp_lead=bite;return null;}
if(eucjp_lead!==0x00){var lead=eucjp_lead;eucjp_lead=0x00;var code_point=null;if(inRange(lead,0xA1,0xFE)&&inRange(bite,0xA1,0xFE)){code_point=indexCodePointFor((lead-0xA1)*94+(bite-0xA1),index(!eucjp_jis0212_flag?'jis0208':'jis0212'));}
eucjp_jis0212_flag=false;if(!inRange(bite,0xA1,0xFE))
stream.prepend(bite);if(code_point===null)
return decoderError(fatal);return code_point;}
if(isASCIIByte(bite))
return bite;if(bite===0x8E||bite===0x8F||inRange(bite,0xA1,0xFE)){eucjp_lead=bite;return null;}
return decoderError(fatal);};}
function EUCJPEncoder(options){var fatal=options.fatal;this.handler=function(stream,code_point){if(code_point===end_of_stream)
return finished;if(isASCIICodePoint(code_point))
return code_point;if(code_point===0x00A5)
return 0x5C;if(code_point===0x203E)
return 0x7E;if(inRange(code_point,0xFF61,0xFF9F))
return[0x8E,code_point-0xFF61+0xA1];if(code_point===0x2212)
code_point=0xFF0D;var pointer=indexPointerFor(code_point,index('jis0208'));if(pointer===null)
return encoderError(code_point);var lead=floor(pointer/94)+0xA1;var trail=pointer%94+0xA1;return[lead,trail];};}
encoders['EUC-JP']=function(options){return new EUCJPEncoder(options);};decoders['EUC-JP']=function(options){return new EUCJPDecoder(options);};function ISO2022JPDecoder(options){var fatal=options.fatal;var states={ASCII:0,Roman:1,Katakana:2,LeadByte:3,TrailByte:4,EscapeStart:5,Escape:6};var iso2022jp_decoder_state=states.ASCII,iso2022jp_decoder_output_state=states.ASCII,iso2022jp_lead=0x00,iso2022jp_output_flag=false;this.handler=function(stream,bite){switch(iso2022jp_decoder_state){default:case states.ASCII:if(bite===0x1B){iso2022jp_decoder_state=states.EscapeStart;return null;}
if(inRange(bite,0x00,0x7F)&&bite!==0x0E&&bite!==0x0F&&bite!==0x1B){iso2022jp_output_flag=false;return bite;}
if(bite===end_of_stream){return finished;}
iso2022jp_output_flag=false;return decoderError(fatal);case states.Roman:if(bite===0x1B){iso2022jp_decoder_state=states.EscapeStart;return null;}
if(bite===0x5C){iso2022jp_output_flag=false;return 0x00A5;}
if(bite===0x7E){iso2022jp_output_flag=false;return 0x203E;}
if(inRange(bite,0x00,0x7F)&&bite!==0x0E&&bite!==0x0F&&bite!==0x1B&&bite!==0x5C&&bite!==0x7E){iso2022jp_output_flag=false;return bite;}
if(bite===end_of_stream){return finished;}
iso2022jp_output_flag=false;return decoderError(fatal);case states.Katakana:if(bite===0x1B){iso2022jp_decoder_state=states.EscapeStart;return null;}
if(inRange(bite,0x21,0x5F)){iso2022jp_output_flag=false;return 0xFF61-0x21+bite;}
if(bite===end_of_stream){return finished;}
iso2022jp_output_flag=false;return decoderError(fatal);case states.LeadByte:if(bite===0x1B){iso2022jp_decoder_state=states.EscapeStart;return null;}
if(inRange(bite,0x21,0x7E)){iso2022jp_output_flag=false;iso2022jp_lead=bite;iso2022jp_decoder_state=states.TrailByte;return null;}
if(bite===end_of_stream){return finished;}
iso2022jp_output_flag=false;return decoderError(fatal);case states.TrailByte:if(bite===0x1B){iso2022jp_decoder_state=states.EscapeStart;return decoderError(fatal);}
if(inRange(bite,0x21,0x7E)){iso2022jp_decoder_state=states.LeadByte;var pointer=(iso2022jp_lead-0x21)*94+bite-0x21;var code_point=indexCodePointFor(pointer,index('jis0208'));if(code_point===null)
return decoderError(fatal);return code_point;}
if(bite===end_of_stream){iso2022jp_decoder_state=states.LeadByte;stream.prepend(bite);return decoderError(fatal);}
iso2022jp_decoder_state=states.LeadByte;return decoderError(fatal);case states.EscapeStart:if(bite===0x24||bite===0x28){iso2022jp_lead=bite;iso2022jp_decoder_state=states.Escape;return null;}
stream.prepend(bite);iso2022jp_output_flag=false;iso2022jp_decoder_state=iso2022jp_decoder_output_state;return decoderError(fatal);case states.Escape:var lead=iso2022jp_lead;iso2022jp_lead=0x00;var state=null;if(lead===0x28&&bite===0x42)
state=states.ASCII;if(lead===0x28&&bite===0x4A)
state=states.Roman;if(lead===0x28&&bite===0x49)
state=states.Katakana;if(lead===0x24&&(bite===0x40||bite===0x42))
state=states.LeadByte;if(state!==null){iso2022jp_decoder_state=iso2022jp_decoder_state=state;var output_flag=iso2022jp_output_flag;iso2022jp_output_flag=true;return!output_flag?null:decoderError(fatal);}
stream.prepend([lead,bite]);iso2022jp_output_flag=false;iso2022jp_decoder_state=iso2022jp_decoder_output_state;return decoderError(fatal);}};}
function ISO2022JPEncoder(options){var fatal=options.fatal;var states={ASCII:0,Roman:1,jis0208:2};var iso2022jp_state=states.ASCII;this.handler=function(stream,code_point){if(code_point===end_of_stream&&iso2022jp_state!==states.ASCII){stream.prepend(code_point);iso2022jp_state=states.ASCII;return[0x1B,0x28,0x42];}
if(code_point===end_of_stream&&iso2022jp_state===states.ASCII)
return finished;if((iso2022jp_state===states.ASCII||iso2022jp_state===states.Roman)&&(code_point===0x000E||code_point===0x000F||code_point===0x001B)){return encoderError(0xFFFD);}
if(iso2022jp_state===states.ASCII&&isASCIICodePoint(code_point))
return code_point;if(iso2022jp_state===states.Roman&&((isASCIICodePoint(code_point)&&code_point!==0x005C&&code_point!==0x007E)||(code_point==0x00A5||code_point==0x203E))){if(isASCIICodePoint(code_point))
return code_point;if(code_point===0x00A5)
return 0x5C;if(code_point===0x203E)
return 0x7E;}
if(isASCIICodePoint(code_point)&&iso2022jp_state!==states.ASCII){stream.prepend(code_point);iso2022jp_state=states.ASCII;return[0x1B,0x28,0x42];}
if((code_point===0x00A5||code_point===0x203E)&&iso2022jp_state!==states.Roman){stream.prepend(code_point);iso2022jp_state=states.Roman;return[0x1B,0x28,0x4A];}
if(code_point===0x2212)
code_point=0xFF0D;var pointer=indexPointerFor(code_point,index('jis0208'));if(pointer===null)
return encoderError(code_point);if(iso2022jp_state!==states.jis0208){stream.prepend(code_point);iso2022jp_state=states.jis0208;return[0x1B,0x24,0x42];}
var lead=floor(pointer/94)+0x21;var trail=pointer%94+0x21;return[lead,trail];};}
encoders['ISO-2022-JP']=function(options){return new ISO2022JPEncoder(options);};decoders['ISO-2022-JP']=function(options){return new ISO2022JPDecoder(options);};function ShiftJISDecoder(options){var fatal=options.fatal;var Shift_JIS_lead=0x00;this.handler=function(stream,bite){if(bite===end_of_stream&&Shift_JIS_lead!==0x00){Shift_JIS_lead=0x00;return decoderError(fatal);}
if(bite===end_of_stream&&Shift_JIS_lead===0x00)
return finished;if(Shift_JIS_lead!==0x00){var lead=Shift_JIS_lead;var pointer=null;Shift_JIS_lead=0x00;var offset=(bite<0x7F)?0x40:0x41;var lead_offset=(lead<0xA0)?0x81:0xC1;if(inRange(bite,0x40,0x7E)||inRange(bite,0x80,0xFC))
pointer=(lead-lead_offset)*188+bite-offset;if(inRange(pointer,8836,10715))
return 0xE000-8836+pointer;var code_point=(pointer===null)?null:indexCodePointFor(pointer,index('jis0208'));if(code_point===null&&isASCIIByte(bite))
stream.prepend(bite);if(code_point===null)
return decoderError(fatal);return code_point;}
if(isASCIIByte(bite)||bite===0x80)
return bite;if(inRange(bite,0xA1,0xDF))
return 0xFF61-0xA1+bite;if(inRange(bite,0x81,0x9F)||inRange(bite,0xE0,0xFC)){Shift_JIS_lead=bite;return null;}
return decoderError(fatal);};}
function ShiftJISEncoder(options){var fatal=options.fatal;this.handler=function(stream,code_point){if(code_point===end_of_stream)
return finished;if(isASCIICodePoint(code_point)||code_point===0x0080)
return code_point;if(code_point===0x00A5)
return 0x5C;if(code_point===0x203E)
return 0x7E;if(inRange(code_point,0xFF61,0xFF9F))
return code_point-0xFF61+0xA1;if(code_point===0x2212)
code_point=0xFF0D;var pointer=indexShiftJISPointerFor(code_point);if(pointer===null)
return encoderError(code_point);var lead=floor(pointer/188);var lead_offset=(lead<0x1F)?0x81:0xC1;var trail=pointer%188;var offset=(trail<0x3F)?0x40:0x41;return[lead+lead_offset,trail+offset];};}
encoders['Shift_JIS']=function(options){return new ShiftJISEncoder(options);};decoders['Shift_JIS']=function(options){return new ShiftJISDecoder(options);};function EUCKRDecoder(options){var fatal=options.fatal;var euckr_lead=0x00;this.handler=function(stream,bite){if(bite===end_of_stream&&euckr_lead!==0){euckr_lead=0x00;return decoderError(fatal);}
if(bite===end_of_stream&&euckr_lead===0)
return finished;if(euckr_lead!==0x00){var lead=euckr_lead;var pointer=null;euckr_lead=0x00;if(inRange(bite,0x41,0xFE))
pointer=(lead-0x81)*190+(bite-0x41);var code_point=(pointer===null)?null:indexCodePointFor(pointer,index('euc-kr'));if(pointer===null&&isASCIIByte(bite))
stream.prepend(bite);if(code_point===null)
return decoderError(fatal);return code_point;}
if(isASCIIByte(bite))
return bite;if(inRange(bite,0x81,0xFE)){euckr_lead=bite;return null;}
return decoderError(fatal);};}
function EUCKREncoder(options){var fatal=options.fatal;this.handler=function(stream,code_point){if(code_point===end_of_stream)
return finished;if(isASCIICodePoint(code_point))
return code_point;var pointer=indexPointerFor(code_point,index('euc-kr'));if(pointer===null)
return encoderError(code_point);var lead=floor(pointer/190)+0x81;var trail=(pointer%190)+0x41;return[lead,trail];};}
encoders['EUC-KR']=function(options){return new EUCKREncoder(options);};decoders['EUC-KR']=function(options){return new EUCKRDecoder(options);};function convertCodeUnitToBytes(code_unit,utf16be){var byte1=code_unit>>8;var byte2=code_unit&0x00FF;if(utf16be)
return[byte1,byte2];return[byte2,byte1];}
function UTF16Decoder(utf16_be,options){var fatal=options.fatal;var utf16_lead_byte=null,utf16_lead_surrogate=null;this.handler=function(stream,bite){if(bite===end_of_stream&&(utf16_lead_byte!==null||utf16_lead_surrogate!==null)){return decoderError(fatal);}
if(bite===end_of_stream&&utf16_lead_byte===null&&utf16_lead_surrogate===null){return finished;}
if(utf16_lead_byte===null){utf16_lead_byte=bite;return null;}
var code_unit;if(utf16_be){code_unit=(utf16_lead_byte<<8)+bite;}else{code_unit=(bite<<8)+utf16_lead_byte;}
utf16_lead_byte=null;if(utf16_lead_surrogate!==null){var lead_surrogate=utf16_lead_surrogate;utf16_lead_surrogate=null;if(inRange(code_unit,0xDC00,0xDFFF)){return 0x10000+(lead_surrogate-0xD800)*0x400+
(code_unit-0xDC00);}
stream.prepend(convertCodeUnitToBytes(code_unit,utf16_be));return decoderError(fatal);}
if(inRange(code_unit,0xD800,0xDBFF)){utf16_lead_surrogate=code_unit;return null;}
if(inRange(code_unit,0xDC00,0xDFFF))
return decoderError(fatal);return code_unit;};}
function UTF16Encoder(utf16_be,options){var fatal=options.fatal;this.handler=function(stream,code_point){if(code_point===end_of_stream)
return finished;if(inRange(code_point,0x0000,0xFFFF))
return convertCodeUnitToBytes(code_point,utf16_be);var lead=convertCodeUnitToBytes(((code_point-0x10000)>>10)+0xD800,utf16_be);var trail=convertCodeUnitToBytes(((code_point-0x10000)&0x3FF)+0xDC00,utf16_be);return lead.concat(trail);};}
encoders['UTF-16BE']=function(options){return new UTF16Encoder(true,options);};decoders['UTF-16BE']=function(options){return new UTF16Decoder(true,options);};encoders['UTF-16LE']=function(options){return new UTF16Encoder(false,options);};decoders['UTF-16LE']=function(options){return new UTF16Decoder(false,options);};function XUserDefinedDecoder(options){var fatal=options.fatal;this.handler=function(stream,bite){if(bite===end_of_stream)
return finished;if(isASCIIByte(bite))
return bite;return 0xF780+bite-0x80;};}
function XUserDefinedEncoder(options){var fatal=options.fatal;this.handler=function(stream,code_point){if(code_point===end_of_stream)
return finished;if(isASCIICodePoint(code_point))
return code_point;if(inRange(code_point,0xF780,0xF7FF))
return code_point-0xF780+0x80;return encoderError(code_point);};}
encoders['x-user-defined']=function(options){return new XUserDefinedEncoder(options);};decoders['x-user-defined']=function(options){return new XUserDefinedDecoder(options);};if(!global['TextEncoder'])
global['TextEncoder']=TextEncoder;if(!global['TextDecoder'])
global['TextDecoder']=TextDecoder;if(typeof module!=="undefined"&&module.exports){module.exports={TextEncoder:global['TextEncoder'],TextDecoder:global['TextDecoder'],EncodingIndexes:global["encoding-indexes"]};}
}(this||{}));var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf;var __hasOwnProp=Object.prototype.hasOwnProperty;var __esm=(fn,res)=>function __init(){return fn&&(res=(0,fn[__getOwnPropNames(fn)[0]])(fn=0)),res;};var __commonJS=(cb,mod2)=>function __require(){return mod2||(0,cb[__getOwnPropNames(cb)[0]])((mod2={exports:{}}).exports,mod2),mod2.exports;};var __export=(target,all)=>{for(var name in all)
__defProp(target,name,{get:all[name],enumerable:true});};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from==="object"||typeof from==="function"){for(let key of __getOwnPropNames(from))
if(!__hasOwnProp.call(to,key)&&key!==except)
__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});}
return to;};var __toESM=(mod2,isNodeMode,target)=>(target=mod2!=null?__create(__getProtoOf(mod2)):{},__copyProps(isNodeMode||!mod2||!mod2.__esModule?__defProp(target,"default",{value:mod2,enumerable:true}):target,mod2));var __toCommonJS=(mod2)=>__copyProps(__defProp({},"__esModule",{value:true}),mod2);var __toBinary=(()=>{var table=new Uint8Array(128);for(var i2=0;i2<64;i2++)
table[i2<26?i2+65:i2<52?i2+71:i2<62?i2-4:i2*4-205]=i2;return(base64)=>{var n2=base64.length,bytes=new Uint8Array((n2-(base64[n2-1]=="=")-(base64[n2-2]=="="))*3/4|0);for(var i3=0,j=0;i3<n2;){var c0=table[base64.charCodeAt(i3++)],c1=table[base64.charCodeAt(i3++)];var c2=table[base64.charCodeAt(i3++)],c3=table[base64.charCodeAt(i3++)];bytes[j++]=c0<<2|c1>>4;bytes[j++]=c1<<4|c2>>2;bytes[j++]=c2<<6|c3;}
return bytes;};})();var require_cjs=__commonJS({"../../node_modules/.pnpm/deepmerge@4.3.1/node_modules/deepmerge/dist/cjs.js"(exports2,module2){"use strict";var isMergeableObject=function isMergeableObject2(value){return isNonNullObject(value)&&!isSpecial(value);};function isNonNullObject(value){return!!value&&typeof value==="object";}
function isSpecial(value){var stringValue=Object.prototype.toString.call(value);return stringValue==="[object RegExp]"||stringValue==="[object Date]"||isReactElement(value);}
var canUseSymbol=typeof Symbol==="function"&&Symbol.for;var REACT_ELEMENT_TYPE=canUseSymbol?Symbol.for("react.element"):60103;function isReactElement(value){return value.$$typeof===REACT_ELEMENT_TYPE;}
function emptyTarget(val){return Array.isArray(val)?[]:{};}
function cloneUnlessOtherwiseSpecified(value,options){return options.clone!==false&&options.isMergeableObject(value)?deepmerge2(emptyTarget(value),value,options):value;}
function defaultArrayMerge(target,source,options){return target.concat(source).map(function(element){return cloneUnlessOtherwiseSpecified(element,options);});}
function getMergeFunction(key,options){if(!options.customMerge){return deepmerge2;}
var customMerge=options.customMerge(key);return typeof customMerge==="function"?customMerge:deepmerge2;}
function getEnumerableOwnPropertySymbols(target){return Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(target).filter(function(symbol){return Object.propertyIsEnumerable.call(target,symbol);}):[];}
function getKeys(target){return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));}
function propertyIsOnObject(object,property3){try{return property3 in object;}catch(_3){return false;}}
function propertyIsUnsafe(target,key){return propertyIsOnObject(target,key)&&!(Object.hasOwnProperty.call(target,key)&&Object.propertyIsEnumerable.call(target,key));}
function mergeObject(target,source,options){var destination={};if(options.isMergeableObject(target)){getKeys(target).forEach(function(key){destination[key]=cloneUnlessOtherwiseSpecified(target[key],options);});}
getKeys(source).forEach(function(key){if(propertyIsUnsafe(target,key)){return;}
if(propertyIsOnObject(target,key)&&options.isMergeableObject(source[key])){destination[key]=getMergeFunction(key,options)(target[key],source[key],options);}else{destination[key]=cloneUnlessOtherwiseSpecified(source[key],options);}});return destination;}
function deepmerge2(target,source,options){options=options||{};options.arrayMerge=options.arrayMerge||defaultArrayMerge;options.isMergeableObject=options.isMergeableObject||isMergeableObject;options.cloneUnlessOtherwiseSpecified=cloneUnlessOtherwiseSpecified;var sourceIsArray=Array.isArray(source);var targetIsArray=Array.isArray(target);var sourceAndTargetTypesMatch=sourceIsArray===targetIsArray;if(!sourceAndTargetTypesMatch){return cloneUnlessOtherwiseSpecified(source,options);}else if(sourceIsArray){return options.arrayMerge(target,source,options);}else{return mergeObject(target,source,options);}}
deepmerge2.all=function deepmergeAll(array,options){if(!Array.isArray(array)){throw new Error("first argument should be an array");}
return array.reduce(function(prev,next){return deepmerge2(prev,next,options);},{});};var deepmerge_1=deepmerge2;module2.exports=deepmerge_1;}});var require_kind_of=__commonJS({"../../node_modules/.pnpm/kind-of@6.0.3/node_modules/kind-of/index.js"(exports2,module2){var toString5=Object.prototype.toString;module2.exports=function kindOf(val){if(val===void 0)
return"undefined";if(val===null)
return"null";var type=typeof val;if(type==="boolean")
return"boolean";if(type==="string")
return"string";if(type==="number")
return"number";if(type==="symbol")
return"symbol";if(type==="function"){return isGeneratorFn(val)?"generatorfunction":"function";}
if(isArray3(val))
return"array";if(isBuffer3(val))
return"buffer";if(isArguments3(val))
return"arguments";if(isDate(val))
return"date";if(isError(val))
return"error";if(isRegexp(val))
return"regexp";switch(ctorName(val)){case"Symbol":return"symbol";case"Promise":return"promise";case"WeakMap":return"weakmap";case"WeakSet":return"weakset";case"Map":return"map";case"Set":return"set";case"Int8Array":return"int8array";case"Uint8Array":return"uint8array";case"Uint8ClampedArray":return"uint8clampedarray";case"Int16Array":return"int16array";case"Uint16Array":return"uint16array";case"Int32Array":return"int32array";case"Uint32Array":return"uint32array";case"Float32Array":return"float32array";case"Float64Array":return"float64array";}
if(isGeneratorObj(val)){return"generator";}
type=toString5.call(val);switch(type){case"[object Object]":return"object";case"[object Map Iterator]":return"mapiterator";case"[object Set Iterator]":return"setiterator";case"[object String Iterator]":return"stringiterator";case"[object Array Iterator]":return"arrayiterator";}
return type.slice(8,-1).toLowerCase().replace(/\s/g,"");};function ctorName(val){return typeof val.constructor==="function"?val.constructor.name:null;}
function isArray3(val){if(Array.isArray)
return Array.isArray(val);return val instanceof Array;}
function isError(val){return val instanceof Error||typeof val.message==="string"&&val.constructor&&typeof val.constructor.stackTraceLimit==="number";}
function isDate(val){if(val instanceof Date)
return true;return typeof val.toDateString==="function"&&typeof val.getDate==="function"&&typeof val.setDate==="function";}
function isRegexp(val){if(val instanceof RegExp)
return true;return typeof val.flags==="string"&&typeof val.ignoreCase==="boolean"&&typeof val.multiline==="boolean"&&typeof val.global==="boolean";}
function isGeneratorFn(name,val){return ctorName(name)==="GeneratorFunction";}
function isGeneratorObj(val){return typeof val.throw==="function"&&typeof val.return==="function"&&typeof val.next==="function";}
function isArguments3(val){try{if(typeof val.length==="number"&&typeof val.callee==="function"){return true;}}catch(err){if(err.message.indexOf("callee")!==-1){return true;}}
return false;}
function isBuffer3(val){if(val.constructor&&typeof val.constructor.isBuffer==="function"){return val.constructor.isBuffer(val);}
return false;}}});var require_shallow_clone=__commonJS({"../../node_modules/.pnpm/shallow-clone@3.0.1/node_modules/shallow-clone/index.js"(exports2,module2){"use strict";var valueOf=Symbol.prototype.valueOf;var typeOf=require_kind_of();function clone3(val,deep){switch(typeOf(val)){case"array":return val.slice();case"object":return Object.assign({},val);case"date":return new val.constructor(Number(val));case"map":return new Map(val);case"set":return new Set(val);case"buffer":return cloneBuffer2(val);case"symbol":return cloneSymbol2(val);case"arraybuffer":return cloneArrayBuffer2(val);case"float32array":case"float64array":case"int16array":case"int32array":case"int8array":case"uint16array":case"uint32array":case"uint8clampedarray":case"uint8array":return cloneTypedArray2(val);case"regexp":return cloneRegExp2(val);case"error":return Object.create(val);default:{return val;}}}
function cloneRegExp2(val){const flags=val.flags!==void 0?val.flags:/\w+$/.exec(val)||void 0;const re=new val.constructor(val.source,flags);re.lastIndex=val.lastIndex;return re;}
function cloneArrayBuffer2(val){const res=new val.constructor(val.byteLength);new Uint8Array(res).set(new Uint8Array(val));return res;}
function cloneTypedArray2(val,deep){return new val.constructor(val.buffer,val.byteOffset,val.length);}
function cloneBuffer2(val){const len2=val.length;const buf=Buffer.allocUnsafe?Buffer.allocUnsafe(len2):Buffer.from(len2);val.copy(buf);return buf;}
function cloneSymbol2(val){return valueOf?Object(valueOf.call(val)):{};}
module2.exports=clone3;}});var require_isobject=__commonJS({"../../node_modules/.pnpm/isobject@3.0.1/node_modules/isobject/index.js"(exports2,module2){"use strict";module2.exports=function isObject3(val){return val!=null&&typeof val==="object"&&Array.isArray(val)===false;};}});var require_is_plain_object=__commonJS({"../../node_modules/.pnpm/is-plain-object@2.0.4/node_modules/is-plain-object/index.js"(exports2,module2){"use strict";var isObject3=require_isobject();function isObjectObject(o){return isObject3(o)===true&&Object.prototype.toString.call(o)==="[object Object]";}
module2.exports=function isPlainObject(o){var ctor,prot;if(isObjectObject(o)===false)
return false;ctor=o.constructor;if(typeof ctor!=="function")
return false;prot=ctor.prototype;if(isObjectObject(prot)===false)
return false;if(prot.hasOwnProperty("isPrototypeOf")===false){return false;}
return true;};}});var require_clone_deep=__commonJS({"../../node_modules/.pnpm/clone-deep@4.0.1/node_modules/clone-deep/index.js"(exports2,module2){"use strict";var clone3=require_shallow_clone();var typeOf=require_kind_of();var isPlainObject=require_is_plain_object();function cloneDeep3(val,instanceClone){switch(typeOf(val)){case"object":return cloneObjectDeep(val,instanceClone);case"array":return cloneArrayDeep(val,instanceClone);default:{return clone3(val);}}}
function cloneObjectDeep(val,instanceClone){if(typeof instanceClone==="function"){return instanceClone(val);}
if(instanceClone||isPlainObject(val)){const res=new val.constructor();for(let key in val){res[key]=cloneDeep3(val[key],instanceClone);}
return res;}
return val;}
function cloneArrayDeep(val,instanceClone){const res=new val.constructor(val.length);for(let i2=0;i2<val.length;i2++){res[i2]=cloneDeep3(val[i2],instanceClone);}
return res;}
module2.exports=cloneDeep3;}});var require_tinycolor=__commonJS({"../../node_modules/.pnpm/tinycolor2@1.4.2/node_modules/tinycolor2/tinycolor.js"(exports2,module2){(function(Math2){var trimLeft=/^\s+/,trimRight=/\s+$/,tinyCounter=0,mathRound=Math2.round,mathMin=Math2.min,mathMax=Math2.max,mathRandom=Math2.random;function tinycolor2(color2,opts){color2=color2?color2:"";opts=opts||{};if(color2 instanceof tinycolor2){return color2;}
if(!(this instanceof tinycolor2)){return new tinycolor2(color2,opts);}
var rgb2=inputToRGB(color2);this._originalInput=color2,this._r=rgb2.r,this._g=rgb2.g,this._b=rgb2.b,this._a=rgb2.a,this._roundA=mathRound(100*this._a)/100,this._format=opts.format||rgb2.format;this._gradientType=opts.gradientType;if(this._r<1){this._r=mathRound(this._r);}
if(this._g<1){this._g=mathRound(this._g);}
if(this._b<1){this._b=mathRound(this._b);}
this._ok=rgb2.ok;this._tc_id=tinyCounter++;}
tinycolor2.prototype={isDark:function(){return this.getBrightness()<128;},isLight:function(){return!this.isDark();},isValid:function(){return this._ok;},getOriginalInput:function(){return this._originalInput;},getFormat:function(){return this._format;},getAlpha:function(){return this._a;},getBrightness:function(){var rgb2=this.toRgb();return(rgb2.r*299+rgb2.g*587+rgb2.b*114)/1e3;},getLuminance:function(){var rgb2=this.toRgb();var RsRGB,GsRGB,BsRGB,R,G,B;RsRGB=rgb2.r/255;GsRGB=rgb2.g/255;BsRGB=rgb2.b/255;if(RsRGB<=0.03928){R=RsRGB/12.92;}else{R=Math2.pow((RsRGB+0.055)/1.055,2.4);}
if(GsRGB<=0.03928){G=GsRGB/12.92;}else{G=Math2.pow((GsRGB+0.055)/1.055,2.4);}
if(BsRGB<=0.03928){B=BsRGB/12.92;}else{B=Math2.pow((BsRGB+0.055)/1.055,2.4);}
return 0.2126*R+0.7152*G+0.0722*B;},setAlpha:function(value){this._a=boundAlpha(value);this._roundA=mathRound(100*this._a)/100;return this;},toHsv:function(){var hsv=rgbToHsv(this._r,this._g,this._b);return{h:hsv.h*360,s:hsv.s,v:hsv.v,a:this._a};},toHsvString:function(){var hsv=rgbToHsv(this._r,this._g,this._b);var h=mathRound(hsv.h*360),s=mathRound(hsv.s*100),v=mathRound(hsv.v*100);return this._a==1?"hsv("+h+", "+s+"%, "+v+"%)":"hsva("+h+", "+s+"%, "+v+"%, "+this._roundA+")";},toHsl:function(){var hsl2=rgbToHsl(this._r,this._g,this._b);return{h:hsl2.h*360,s:hsl2.s,l:hsl2.l,a:this._a};},toHslString:function(){var hsl2=rgbToHsl(this._r,this._g,this._b);var h=mathRound(hsl2.h*360),s=mathRound(hsl2.s*100),l=mathRound(hsl2.l*100);return this._a==1?"hsl("+h+", "+s+"%, "+l+"%)":"hsla("+h+", "+s+"%, "+l+"%, "+this._roundA+")";},toHex:function(allow3Char){return rgbToHex(this._r,this._g,this._b,allow3Char);},toHexString:function(allow3Char){return"#"+this.toHex(allow3Char);},toHex8:function(allow4Char){return rgbaToHex(this._r,this._g,this._b,this._a,allow4Char);},toHex8String:function(allow4Char){return"#"+this.toHex8(allow4Char);},toRgb:function(){return{r:mathRound(this._r),g:mathRound(this._g),b:mathRound(this._b),a:this._a};},toRgbString:function(){return this._a==1?"rgb("+mathRound(this._r)+", "+mathRound(this._g)+", "+mathRound(this._b)+")":"rgba("+mathRound(this._r)+", "+mathRound(this._g)+", "+mathRound(this._b)+", "+this._roundA+")";},toPercentageRgb:function(){return{r:mathRound(bound01(this._r,255)*100)+"%",g:mathRound(bound01(this._g,255)*100)+"%",b:mathRound(bound01(this._b,255)*100)+"%",a:this._a};},toPercentageRgbString:function(){return this._a==1?"rgb("+mathRound(bound01(this._r,255)*100)+"%, "+mathRound(bound01(this._g,255)*100)+"%, "+mathRound(bound01(this._b,255)*100)+"%)":"rgba("+mathRound(bound01(this._r,255)*100)+"%, "+mathRound(bound01(this._g,255)*100)+"%, "+mathRound(bound01(this._b,255)*100)+"%, "+this._roundA+")";},toName:function(){if(this._a===0){return"transparent";}
if(this._a<1){return false;}
return hexNames[rgbToHex(this._r,this._g,this._b,true)]||false;},toFilter:function(secondColor){var hex8String="#"+rgbaToArgbHex(this._r,this._g,this._b,this._a);var secondHex8String=hex8String;var gradientType=this._gradientType?"GradientType = 1, ":"";if(secondColor){var s=tinycolor2(secondColor);secondHex8String="#"+rgbaToArgbHex(s._r,s._g,s._b,s._a);}
return"progid:DXImageTransform.Microsoft.gradient("+gradientType+"startColorstr="+hex8String+",endColorstr="+secondHex8String+")";},toString:function(format){var formatSet=!!format;format=format||this._format;var formattedString=false;var hasAlpha=this._a<1&&this._a>=0;var needsAlphaFormat=!formatSet&&hasAlpha&&(format==="hex"||format==="hex6"||format==="hex3"||format==="hex4"||format==="hex8"||format==="name");if(needsAlphaFormat){if(format==="name"&&this._a===0){return this.toName();}
return this.toRgbString();}
if(format==="rgb"){formattedString=this.toRgbString();}
if(format==="prgb"){formattedString=this.toPercentageRgbString();}
if(format==="hex"||format==="hex6"){formattedString=this.toHexString();}
if(format==="hex3"){formattedString=this.toHexString(true);}
if(format==="hex4"){formattedString=this.toHex8String(true);}
if(format==="hex8"){formattedString=this.toHex8String();}
if(format==="name"){formattedString=this.toName();}
if(format==="hsl"){formattedString=this.toHslString();}
if(format==="hsv"){formattedString=this.toHsvString();}
return formattedString||this.toHexString();},clone:function(){return tinycolor2(this.toString());},_applyModification:function(fn,args){var color2=fn.apply(null,[this].concat([].slice.call(args)));this._r=color2._r;this._g=color2._g;this._b=color2._b;this.setAlpha(color2._a);return this;},lighten:function(){return this._applyModification(lighten,arguments);},brighten:function(){return this._applyModification(brighten,arguments);},darken:function(){return this._applyModification(darken,arguments);},desaturate:function(){return this._applyModification(desaturate,arguments);},saturate:function(){return this._applyModification(saturate,arguments);},greyscale:function(){return this._applyModification(greyscale,arguments);},spin:function(){return this._applyModification(spin,arguments);},_applyCombination:function(fn,args){return fn.apply(null,[this].concat([].slice.call(args)));},analogous:function(){return this._applyCombination(analogous,arguments);},complement:function(){return this._applyCombination(complement,arguments);},monochromatic:function(){return this._applyCombination(monochromatic,arguments);},splitcomplement:function(){return this._applyCombination(splitcomplement,arguments);},triad:function(){return this._applyCombination(triad,arguments);},tetrad:function(){return this._applyCombination(tetrad,arguments);}};tinycolor2.fromRatio=function(color2,opts){if(typeof color2=="object"){var newColor={};for(var i2 in color2){if(color2.hasOwnProperty(i2)){if(i2==="a"){newColor[i2]=color2[i2];}else{newColor[i2]=convertToPercentage(color2[i2]);}}}
color2=newColor;}
return tinycolor2(color2,opts);};function inputToRGB(color2){var rgb2={r:0,g:0,b:0};var a=1;var s=null;var v=null;var l=null;var ok=false;var format=false;if(typeof color2=="string"){color2=stringInputToObject(color2);}
if(typeof color2=="object"){if(isValidCSSUnit(color2.r)&&isValidCSSUnit(color2.g)&&isValidCSSUnit(color2.b)){rgb2=rgbToRgb(color2.r,color2.g,color2.b);ok=true;format=String(color2.r).substr(-1)==="%"?"prgb":"rgb";}else if(isValidCSSUnit(color2.h)&&isValidCSSUnit(color2.s)&&isValidCSSUnit(color2.v)){s=convertToPercentage(color2.s);v=convertToPercentage(color2.v);rgb2=hsvToRgb(color2.h,s,v);ok=true;format="hsv";}else if(isValidCSSUnit(color2.h)&&isValidCSSUnit(color2.s)&&isValidCSSUnit(color2.l)){s=convertToPercentage(color2.s);l=convertToPercentage(color2.l);rgb2=hslToRgb(color2.h,s,l);ok=true;format="hsl";}
if(color2.hasOwnProperty("a")){a=color2.a;}}
a=boundAlpha(a);return{ok,format:color2.format||format,r:mathMin(255,mathMax(rgb2.r,0)),g:mathMin(255,mathMax(rgb2.g,0)),b:mathMin(255,mathMax(rgb2.b,0)),a};}
function rgbToRgb(r,g,b10){return{r:bound01(r,255)*255,g:bound01(g,255)*255,b:bound01(b10,255)*255};}
function rgbToHsl(r,g,b10){r=bound01(r,255);g=bound01(g,255);b10=bound01(b10,255);var max4=mathMax(r,g,b10),min4=mathMin(r,g,b10);var h,s,l=(max4+min4)/2;if(max4==min4){h=s=0;}else{var d=max4-min4;s=l>0.5?d/(2-max4-min4):d/(max4+min4);switch(max4){case r:h=(g-b10)/d+(g<b10?6:0);break;case g:h=(b10-r)/d+2;break;case b10:h=(r-g)/d+4;break;}
h/=6;}
return{h,s,l};}
function hslToRgb(h,s,l){var r,g,b10;h=bound01(h,360);s=bound01(s,100);l=bound01(l,100);function hue2rgb(p2,q2,t){if(t<0)
t+=1;if(t>1)
t-=1;if(t<1/6)
return p2+(q2-p2)*6*t;if(t<1/2)
return q2;if(t<2/3)
return p2+(q2-p2)*(2/3-t)*6;return p2;}
if(s===0){r=g=b10=l;}else{var q=l<0.5?l*(1+s):l+s-l*s;var p=2*l-q;r=hue2rgb(p,q,h+1/3);g=hue2rgb(p,q,h);b10=hue2rgb(p,q,h-1/3);}
return{r:r*255,g:g*255,b:b10*255};}
function rgbToHsv(r,g,b10){r=bound01(r,255);g=bound01(g,255);b10=bound01(b10,255);var max4=mathMax(r,g,b10),min4=mathMin(r,g,b10);var h,s,v=max4;var d=max4-min4;s=max4===0?0:d/max4;if(max4==min4){h=0;}else{switch(max4){case r:h=(g-b10)/d+(g<b10?6:0);break;case g:h=(b10-r)/d+2;break;case b10:h=(r-g)/d+4;break;}
h/=6;}
return{h,s,v};}
function hsvToRgb(h,s,v){h=bound01(h,360)*6;s=bound01(s,100);v=bound01(v,100);var i2=Math2.floor(h),f=h-i2,p=v*(1-s),q=v*(1-f*s),t=v*(1-(1-f)*s),mod2=i2%6,r=[v,q,p,p,t,v][mod2],g=[t,v,v,q,p,p][mod2],b10=[p,p,t,v,v,q][mod2];return{r:r*255,g:g*255,b:b10*255};}
function rgbToHex(r,g,b10,allow3Char){var hex2=[pad2(mathRound(r).toString(16)),pad2(mathRound(g).toString(16)),pad2(mathRound(b10).toString(16))];if(allow3Char&&hex2[0].charAt(0)==hex2[0].charAt(1)&&hex2[1].charAt(0)==hex2[1].charAt(1)&&hex2[2].charAt(0)==hex2[2].charAt(1)){return hex2[0].charAt(0)+hex2[1].charAt(0)+hex2[2].charAt(0);}
return hex2.join("");}
function rgbaToHex(r,g,b10,a,allow4Char){var hex2=[pad2(mathRound(r).toString(16)),pad2(mathRound(g).toString(16)),pad2(mathRound(b10).toString(16)),pad2(convertDecimalToHex(a))];if(allow4Char&&hex2[0].charAt(0)==hex2[0].charAt(1)&&hex2[1].charAt(0)==hex2[1].charAt(1)&&hex2[2].charAt(0)==hex2[2].charAt(1)&&hex2[3].charAt(0)==hex2[3].charAt(1)){return hex2[0].charAt(0)+hex2[1].charAt(0)+hex2[2].charAt(0)+hex2[3].charAt(0);}
return hex2.join("");}
function rgbaToArgbHex(r,g,b10,a){var hex2=[pad2(convertDecimalToHex(a)),pad2(mathRound(r).toString(16)),pad2(mathRound(g).toString(16)),pad2(mathRound(b10).toString(16))];return hex2.join("");}
tinycolor2.equals=function(color1,color2){if(!color1||!color2){return false;}
return tinycolor2(color1).toRgbString()==tinycolor2(color2).toRgbString();};tinycolor2.random=function(){return tinycolor2.fromRatio({r:mathRandom(),g:mathRandom(),b:mathRandom()});};function desaturate(color2,amount){amount=amount===0?0:amount||10;var hsl2=tinycolor2(color2).toHsl();hsl2.s-=amount/100;hsl2.s=clamp01(hsl2.s);return tinycolor2(hsl2);}
function saturate(color2,amount){amount=amount===0?0:amount||10;var hsl2=tinycolor2(color2).toHsl();hsl2.s+=amount/100;hsl2.s=clamp01(hsl2.s);return tinycolor2(hsl2);}
function greyscale(color2){return tinycolor2(color2).desaturate(100);}
function lighten(color2,amount){amount=amount===0?0:amount||10;var hsl2=tinycolor2(color2).toHsl();hsl2.l+=amount/100;hsl2.l=clamp01(hsl2.l);return tinycolor2(hsl2);}
function brighten(color2,amount){amount=amount===0?0:amount||10;var rgb2=tinycolor2(color2).toRgb();rgb2.r=mathMax(0,mathMin(255,rgb2.r-mathRound(255*-(amount/100))));rgb2.g=mathMax(0,mathMin(255,rgb2.g-mathRound(255*-(amount/100))));rgb2.b=mathMax(0,mathMin(255,rgb2.b-mathRound(255*-(amount/100))));return tinycolor2(rgb2);}
function darken(color2,amount){amount=amount===0?0:amount||10;var hsl2=tinycolor2(color2).toHsl();hsl2.l-=amount/100;hsl2.l=clamp01(hsl2.l);return tinycolor2(hsl2);}
function spin(color2,amount){var hsl2=tinycolor2(color2).toHsl();var hue=(hsl2.h+amount)%360;hsl2.h=hue<0?360+hue:hue;return tinycolor2(hsl2);}
function complement(color2){var hsl2=tinycolor2(color2).toHsl();hsl2.h=(hsl2.h+180)%360;return tinycolor2(hsl2);}
function triad(color2){var hsl2=tinycolor2(color2).toHsl();var h=hsl2.h;return[tinycolor2(color2),tinycolor2({h:(h+120)%360,s:hsl2.s,l:hsl2.l}),tinycolor2({h:(h+240)%360,s:hsl2.s,l:hsl2.l})];}
function tetrad(color2){var hsl2=tinycolor2(color2).toHsl();var h=hsl2.h;return[tinycolor2(color2),tinycolor2({h:(h+90)%360,s:hsl2.s,l:hsl2.l}),tinycolor2({h:(h+180)%360,s:hsl2.s,l:hsl2.l}),tinycolor2({h:(h+270)%360,s:hsl2.s,l:hsl2.l})];}
function splitcomplement(color2){var hsl2=tinycolor2(color2).toHsl();var h=hsl2.h;return[tinycolor2(color2),tinycolor2({h:(h+72)%360,s:hsl2.s,l:hsl2.l}),tinycolor2({h:(h+216)%360,s:hsl2.s,l:hsl2.l})];}
function analogous(color2,results,slices){results=results||6;slices=slices||30;var hsl2=tinycolor2(color2).toHsl();var part=360/slices;var ret=[tinycolor2(color2)];for(hsl2.h=(hsl2.h-(part*results>>1)+720)%360;--results;){hsl2.h=(hsl2.h+part)%360;ret.push(tinycolor2(hsl2));}
return ret;}
function monochromatic(color2,results){results=results||6;var hsv=tinycolor2(color2).toHsv();var h=hsv.h,s=hsv.s,v=hsv.v;var ret=[];var modification=1/results;while(results--){ret.push(tinycolor2({h,s,v}));v=(v+modification)%1;}
return ret;}
tinycolor2.mix=function(color1,color2,amount){amount=amount===0?0:amount||50;var rgb1=tinycolor2(color1).toRgb();var rgb2=tinycolor2(color2).toRgb();var p=amount/100;var rgba2={r:(rgb2.r-rgb1.r)*p+rgb1.r,g:(rgb2.g-rgb1.g)*p+rgb1.g,b:(rgb2.b-rgb1.b)*p+rgb1.b,a:(rgb2.a-rgb1.a)*p+rgb1.a};return tinycolor2(rgba2);};tinycolor2.readability=function(color1,color2){var c1=tinycolor2(color1);var c2=tinycolor2(color2);return(Math2.max(c1.getLuminance(),c2.getLuminance())+0.05)/(Math2.min(c1.getLuminance(),c2.getLuminance())+0.05);};tinycolor2.isReadable=function(color1,color2,wcag2){var readability=tinycolor2.readability(color1,color2);var wcag2Parms,out;out=false;wcag2Parms=validateWCAG2Parms(wcag2);switch(wcag2Parms.level+wcag2Parms.size){case"AAsmall":case"AAAlarge":out=readability>=4.5;break;case"AAlarge":out=readability>=3;break;case"AAAsmall":out=readability>=7;break;}
return out;};tinycolor2.mostReadable=function(baseColor,colorList,args){var bestColor=null;var bestScore=0;var readability;var includeFallbackColors,level,size4;args=args||{};includeFallbackColors=args.includeFallbackColors;level=args.level;size4=args.size;for(var i2=0;i2<colorList.length;i2++){readability=tinycolor2.readability(baseColor,colorList[i2]);if(readability>bestScore){bestScore=readability;bestColor=tinycolor2(colorList[i2]);}}
if(tinycolor2.isReadable(baseColor,bestColor,{"level":level,"size":size4})||!includeFallbackColors){return bestColor;}else{args.includeFallbackColors=false;return tinycolor2.mostReadable(baseColor,["#fff","#000"],args);}};var names=tinycolor2.names={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"663399",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"};var hexNames=tinycolor2.hexNames=flip(names);function flip(o){var flipped={};for(var i2 in o){if(o.hasOwnProperty(i2)){flipped[o[i2]]=i2;}}
return flipped;}
function boundAlpha(a){a=parseFloat(a);if(isNaN(a)||a<0||a>1){a=1;}
return a;}
function bound01(n2,max4){if(isOnePointZero(n2)){n2="100%";}
var processPercent=isPercentage(n2);n2=mathMin(max4,mathMax(0,parseFloat(n2)));if(processPercent){n2=parseInt(n2*max4,10)/100;}
if(Math2.abs(n2-max4)<1e-6){return 1;}
return n2%max4/parseFloat(max4);}
function clamp01(val){return mathMin(1,mathMax(0,val));}
function parseIntFromHex(val){return parseInt(val,16);}
function isOnePointZero(n2){return typeof n2=="string"&&n2.indexOf(".")!=-1&&parseFloat(n2)===1;}
function isPercentage(n2){return typeof n2==="string"&&n2.indexOf("%")!=-1;}
function pad2(c){return c.length==1?"0"+c:""+c;}
function convertToPercentage(n2){if(n2<=1){n2=n2*100+"%";}
return n2;}
function convertDecimalToHex(d){return Math2.round(parseFloat(d)*255).toString(16);}
function convertHexToDecimal(h){return parseIntFromHex(h)/255;}
var matchers=function(){var CSS_INTEGER="[-\\+]?\\d+%?";var CSS_NUMBER="[-\\+]?\\d*\\.\\d+%?";var CSS_UNIT="(?:"+CSS_NUMBER+")|(?:"+CSS_INTEGER+")";var PERMISSIVE_MATCH3="[\\s|\\(]+("+CSS_UNIT+")[,|\\s]+("+CSS_UNIT+")[,|\\s]+("+CSS_UNIT+")\\s*\\)?";var PERMISSIVE_MATCH4="[\\s|\\(]+("+CSS_UNIT+")[,|\\s]+("+CSS_UNIT+")[,|\\s]+("+CSS_UNIT+")[,|\\s]+("+CSS_UNIT+")\\s*\\)?";return{CSS_UNIT:new RegExp(CSS_UNIT),rgb:new RegExp("rgb"+PERMISSIVE_MATCH3),rgba:new RegExp("rgba"+PERMISSIVE_MATCH4),hsl:new RegExp("hsl"+PERMISSIVE_MATCH3),hsla:new RegExp("hsla"+PERMISSIVE_MATCH4),hsv:new RegExp("hsv"+PERMISSIVE_MATCH3),hsva:new RegExp("hsva"+PERMISSIVE_MATCH4),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/};}();function isValidCSSUnit(color2){return!!matchers.CSS_UNIT.exec(color2);}
function stringInputToObject(color2){color2=color2.replace(trimLeft,"").replace(trimRight,"").toLowerCase();var named2=false;if(names[color2]){color2=names[color2];named2=true;}else if(color2=="transparent"){return{r:0,g:0,b:0,a:0,format:"name"};}
var match;if(match=matchers.rgb.exec(color2)){return{r:match[1],g:match[2],b:match[3]};}
if(match=matchers.rgba.exec(color2)){return{r:match[1],g:match[2],b:match[3],a:match[4]};}
if(match=matchers.hsl.exec(color2)){return{h:match[1],s:match[2],l:match[3]};}
if(match=matchers.hsla.exec(color2)){return{h:match[1],s:match[2],l:match[3],a:match[4]};}
if(match=matchers.hsv.exec(color2)){return{h:match[1],s:match[2],v:match[3]};}
if(match=matchers.hsva.exec(color2)){return{h:match[1],s:match[2],v:match[3],a:match[4]};}
if(match=matchers.hex8.exec(color2)){return{r:parseIntFromHex(match[1]),g:parseIntFromHex(match[2]),b:parseIntFromHex(match[3]),a:convertHexToDecimal(match[4]),format:named2?"name":"hex8"};}
if(match=matchers.hex6.exec(color2)){return{r:parseIntFromHex(match[1]),g:parseIntFromHex(match[2]),b:parseIntFromHex(match[3]),format:named2?"name":"hex"};}
if(match=matchers.hex4.exec(color2)){return{r:parseIntFromHex(match[1]+""+match[1]),g:parseIntFromHex(match[2]+""+match[2]),b:parseIntFromHex(match[3]+""+match[3]),a:convertHexToDecimal(match[4]+""+match[4]),format:named2?"name":"hex8"};}
if(match=matchers.hex3.exec(color2)){return{r:parseIntFromHex(match[1]+""+match[1]),g:parseIntFromHex(match[2]+""+match[2]),b:parseIntFromHex(match[3]+""+match[3]),format:named2?"name":"hex"};}
return false;}
function validateWCAG2Parms(parms){var level,size4;parms=parms||{"level":"AA","size":"small"};level=(parms.level||"AA").toUpperCase();size4=(parms.size||"small").toLowerCase();if(level!=="AA"&&level!=="AAA"){level="AA";}
if(size4!=="small"&&size4!=="large"){size4="small";}
return{"level":level,"size":size4};}
if(typeof module2!=="undefined"&&module2.exports){module2.exports=tinycolor2;}else if(typeof define==="function"&&define.amd){define(function(){return tinycolor2;});}else{window.tinycolor=tinycolor2;}})(Math);}});var require_moo=__commonJS({"../../node_modules/.pnpm/@hikerpig+moo@0.5.2-beta.2/node_modules/@hikerpig/moo/moo.js"(exports2,module2){(function(root3,factory){if(typeof define==="function"&&define.amd){define([],factory);}else if(typeof module2==="object"&&module2.exports){module2.exports=factory();}else{root3.moo=factory();}})(exports2,function(){"use strict";var hasOwnProperty3=Object.prototype.hasOwnProperty;var toString5=Object.prototype.toString;var hasSticky=typeof new RegExp().sticky==="boolean";function isRegExp(o){return o&&toString5.call(o)==="[object RegExp]";}
function isObject3(o){return o&&typeof o==="object"&&!isRegExp(o)&&!Array.isArray(o);}
function reEscape(s){return s.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&");}
function reGroups(s){var re=new RegExp("|"+s);return re.exec("").length-1;}
function reCapture(s){return"("+s+")";}
function reUnion(regexps){if(!regexps.length)
return"(?!)";var source=regexps.map(function(s){return"(?:"+s+")";}).join("|");return"(?:"+source+")";}
function regexpOrLiteral(obj){if(typeof obj==="string"){return"(?:"+reEscape(obj)+")";}else if(isRegExp(obj)){if(obj.ignoreCase)
throw new Error("RegExp /i flag not allowed");if(obj.global)
throw new Error("RegExp /g flag is implied");if(obj.sticky)
throw new Error("RegExp /y flag is implied");if(obj.multiline)
throw new Error("RegExp /m flag is implied");return obj.source;}else{throw new Error("Not a pattern: "+obj);}}
function objectToRules(object){var keys3=Object.getOwnPropertyNames(object);var result=[];for(var i2=0;i2<keys3.length;i2++){var key=keys3[i2];var thing=object[key];var rules=[].concat(thing);if(key==="include"){for(var j=0;j<rules.length;j++){result.push({include:rules[j]});}
continue;}
var match=[];rules.forEach(function(rule){if(isObject3(rule)){if(match.length)
result.push(ruleOptions(key,match));result.push(ruleOptions(key,rule));match=[];}else{match.push(rule);}});if(match.length)
result.push(ruleOptions(key,match));}
return result;}
function arrayToRules(array){var result=[];for(var i2=0;i2<array.length;i2++){var obj=array[i2];if(obj.include){var include=[].concat(obj.include);for(var j=0;j<include.length;j++){result.push({include:include[j]});}
continue;}
if(!obj.type){throw new Error("Rule has no type: "+JSON.stringify(obj));}
result.push(ruleOptions(obj.type,obj));}
return result;}
function ruleOptions(type,obj){if(!isObject3(obj)){obj={match:obj};}
if(obj.include){throw new Error("Matching rules cannot also include states");}
var options={defaultType:type,lineBreaks:!!obj.error||!!obj.fallback,pop:false,next:null,push:null,error:false,fallback:false,value:null,type:null,shouldThrow:false};for(var key in obj){if(hasOwnProperty3.call(obj,key)){options[key]=obj[key];}}
if(typeof options.type==="string"&&type!==options.type){throw new Error("Type transform cannot be a string (type '"+options.type+"' for token '"+type+"')");}
var match=options.match;options.match=Array.isArray(match)?match:match?[match]:[];options.match.sort(function(a,b10){return isRegExp(a)&&isRegExp(b10)?0:isRegExp(b10)?-1:isRegExp(a)?1:b10.length-a.length;});return options;}
function toRules(spec){return Array.isArray(spec)?arrayToRules(spec):objectToRules(spec);}
var defaultErrorRule=ruleOptions("error",{lineBreaks:true,shouldThrow:true});function compileRules(rules,hasStates){var errorRule=null;var fast=Object.create(null);var fastAllowed=true;var unicodeFlag=null;var groups=[];var parts=[];for(var i2=0;i2<rules.length;i2++){if(rules[i2].fallback){fastAllowed=false;}}
for(var i2=0;i2<rules.length;i2++){var options=rules[i2];if(options.include){throw new Error("Inheritance is not allowed in stateless lexers");}
if(options.error||options.fallback){if(errorRule){if(!options.fallback===!errorRule.fallback){throw new Error("Multiple "+(options.fallback?"fallback":"error")+" rules not allowed (for token '"+options.defaultType+"')");}else{throw new Error("fallback and error are mutually exclusive (for token '"+options.defaultType+"')");}}
errorRule=options;}
var match=options.match.slice();if(fastAllowed){while(match.length&&typeof match[0]==="string"&&match[0].length===1){var word=match.shift();fast[word.charCodeAt(0)]=options;}}
if(options.pop||options.push||options.next){if(!hasStates){throw new Error("State-switching options are not allowed in stateless lexers (for token '"+options.defaultType+"')");}
if(options.fallback){throw new Error("State-switching options are not allowed on fallback tokens (for token '"+options.defaultType+"')");}}
if(match.length===0){continue;}
fastAllowed=false;groups.push(options);for(var j=0;j<match.length;j++){var obj=match[j];if(!isRegExp(obj)){continue;}
if(unicodeFlag===null){unicodeFlag=obj.unicode;}else if(unicodeFlag!==obj.unicode&&options.fallback===false){throw new Error("If one rule is /u then all must be");}}
var pat=reUnion(match.map(regexpOrLiteral));var regexp=new RegExp(pat);if(regexp.test("")){throw new Error("RegExp matches empty string: "+regexp);}
var groupCount=reGroups(pat);if(groupCount>0){throw new Error("RegExp has capture groups: "+regexp+"\nUse (?: \u2026 ) instead");}
if(!options.lineBreaks&&regexp.test("\n")){throw new Error("Rule should declare lineBreaks: "+regexp);}
parts.push(reCapture(pat));}
var fallbackRule=errorRule&&errorRule.fallback;var flags=hasSticky&&!fallbackRule?"ym":"gm";var suffix=hasSticky||fallbackRule?"":"|";if(unicodeFlag===true)
flags+="u";var combined=new RegExp(reUnion(parts)+suffix,flags);return{regexp:combined,groups,fast,error:errorRule||defaultErrorRule};}
function compile2(rules){var result=compileRules(toRules(rules));return new Lexer({start:result},"start");}
function checkStateGroup(g,name,map4){var state=g&&(g.push||g.next);if(state&&!map4[state]){throw new Error("Missing state '"+state+"' (in token '"+g.defaultType+"' of state '"+name+"')");}
if(g&&g.pop&&+g.pop!==1){throw new Error("pop must be 1 (in token '"+g.defaultType+"' of state '"+name+"')");}}
function compileStates(states8,start){var all=states8.$all?toRules(states8.$all):[];delete states8.$all;var keys3=Object.getOwnPropertyNames(states8);if(!start)
start=keys3[0];var ruleMap=Object.create(null);for(var i2=0;i2<keys3.length;i2++){var key=keys3[i2];ruleMap[key]=toRules(states8[key]).concat(all);}
for(var i2=0;i2<keys3.length;i2++){var key=keys3[i2];var rules=ruleMap[key];var included=Object.create(null);for(var j=0;j<rules.length;j++){var rule=rules[j];if(!rule.include)
continue;var splice5=[j,1];if(rule.include!==key&&!included[rule.include]){included[rule.include]=true;var newRules=ruleMap[rule.include];if(!newRules){throw new Error("Cannot include nonexistent state '"+rule.include+"' (in state '"+key+"')");}
for(var k=0;k<newRules.length;k++){var newRule=newRules[k];if(rules.indexOf(newRule)!==-1)
continue;splice5.push(newRule);}}
rules.splice.apply(rules,splice5);j--;}}
var map4=Object.create(null);for(var i2=0;i2<keys3.length;i2++){var key=keys3[i2];map4[key]=compileRules(ruleMap[key],true);}
for(var i2=0;i2<keys3.length;i2++){var name=keys3[i2];var state=map4[name];var groups=state.groups;for(var j=0;j<groups.length;j++){checkStateGroup(groups[j],name,map4);}
var fastKeys=Object.getOwnPropertyNames(state.fast);for(var j=0;j<fastKeys.length;j++){checkStateGroup(state.fast[fastKeys[j]],name,map4);}}
return new Lexer(map4,start);}
function keywordTransform(map4){var reverseMap=Object.create(null);var byLength=Object.create(null);var types=Object.getOwnPropertyNames(map4);for(var i2=0;i2<types.length;i2++){var tokenType=types[i2];var item=map4[tokenType];var keywordList=Array.isArray(item)?item:[item];keywordList.forEach(function(keyword){(byLength[keyword.length]=byLength[keyword.length]||[]).push(keyword);if(typeof keyword!=="string"){throw new Error("keyword must be string (in keyword '"+tokenType+"')");}
reverseMap[keyword]=tokenType;});}
function str3(x2){return JSON.stringify(x2);}
var source="";source+="switch (value.length) {\n";for(var length3 in byLength){var keywords=byLength[length3];source+="case "+length3+":\n";source+="switch (value) {\n";keywords.forEach(function(keyword){var tokenType2=reverseMap[keyword];source+="case "+str3(keyword)+": return "+str3(tokenType2)+"\n";});source+="default: return\n";source+="}\n";}
source+="}\n";return Function("value",source);}
var Lexer=function(states8,state){this.startState=state;this.states=states8;this.buffer="";this.stack=[];this.reset();};Lexer.prototype.reset=function(data,info){this.buffer=data||"";this.index=0;this.line=info?info.line:1;this.col=info?info.col:1;this.queuedToken=info?info.queuedToken:null;this.queuedText=info?info.queuedText:"";this.queuedThrow=info?info.queuedThrow:null;this.setState(info?info.state:this.startState);this.stack=info&&info.stack?info.stack.slice():[];this.queuedGroup=null;return this;};Lexer.prototype.save=function(){return{line:this.line,col:this.col,state:this.state,stack:this.stack.slice(),queuedToken:this.queuedToken,queuedText:this.queuedText,queuedThrow:this.queuedThrow};};Lexer.prototype.setState=function(state){if(!state||this.state===state)
return;this.state=state;var info=this.states[state];this.groups=info.groups;this.error=info.error;this.re=info.regexp;this.fast=info.fast;};Lexer.prototype.popState=function(){this.setState(this.stack.pop());};Lexer.prototype.pushState=function(state){this.stack.push(this.state);this.setState(state);};var eat=hasSticky?function(re,buffer){return re.exec(buffer);}:function(re,buffer){var match=re.exec(buffer);if(match[0].length===0){return null;}
return match;};Lexer.prototype._getGroup=function(match){var groupCount=this.groups.length;for(var i2=0;i2<groupCount;i2++){if(match[i2+1]!==void 0){return this.groups[i2];}}
throw new Error("Cannot find token type for matched text");};function tokenToString(){return this.value;}
Lexer.prototype.next=function(){var index2=this.index;if(this.queuedGroup){var token=this._token(this.queuedGroup,this.queuedText,index2);this.queuedGroup=null;this.queuedText="";return token;}
var buffer=this.buffer;if(index2===buffer.length){return;}
var group=this.fast[buffer.charCodeAt(index2)];if(group){return this._token(group,buffer.charAt(index2),index2);}
var re=this.re;re.lastIndex=index2;var match=eat(re,buffer);var error=this.error;if(match==null){return this._token(error,buffer.slice(index2,buffer.length),index2);}
var group=this._getGroup(match);var text=match[0];if(error.fallback&&match.index!==index2){this.queuedGroup=group;this.queuedText=text;return this._token(error,buffer.slice(index2,match.index),index2);}
return this._token(group,text,index2);};Lexer.prototype._token=function(group,text,offset){var lineBreaks=0;if(group.lineBreaks){var matchNL=/\n/g;var nl2=1;if(text==="\n"){lineBreaks=1;}else{while(matchNL.exec(text)){lineBreaks++;nl2=matchNL.lastIndex;}}}
var token={type:typeof group.type==="function"&&group.type(text)||group.defaultType,value:typeof group.value==="function"?group.value(text):text,text,toString:tokenToString,offset,lineBreaks,line:this.line,col:this.col};var size4=text.length;this.index+=size4;this.line+=lineBreaks;if(lineBreaks!==0){this.col=size4-nl2+1;}else{this.col+=size4;}
if(group.shouldThrow){throw new Error(this.formatError(token,"invalid syntax"));}
if(group.pop)
this.popState();else if(group.push)
this.pushState(group.push);else if(group.next)
this.setState(group.next);return token;};if(typeof Symbol!=="undefined"&&Symbol.iterator){var LexerIterator=function(lexer9){this.lexer=lexer9;};LexerIterator.prototype.next=function(){var token=this.lexer.next();return{value:token,done:!token};};LexerIterator.prototype[Symbol.iterator]=function(){return this;};Lexer.prototype[Symbol.iterator]=function(){return new LexerIterator(this);};}
Lexer.prototype.formatError=function(token,message){if(token==null){var text=this.buffer.slice(this.index);var token={text,offset:this.index,lineBreaks:text.indexOf("\n")===-1?0:1,line:this.line,col:this.col};}
var start=Math.max(0,token.offset-token.col+1);var eol=token.lineBreaks?token.text.indexOf("\n"):token.text.length;var firstLine=this.buffer.substring(start,token.offset+eol);message+=" at line "+token.line+" col "+token.col+":\n\n";message+="  "+firstLine+"\n";message+="  "+Array(token.col).join(" ")+"^";return message;};Lexer.prototype.clone=function(){return new Lexer(this.states,this.state);};Lexer.prototype.has=function(tokenType){return true;};return{compile:compile2,states:compileStates,error:Object.freeze({error:true}),fallback:Object.freeze({fallback:true}),keywords:keywordTransform};});}});var require_nearley=__commonJS({"../../node_modules/.pnpm/@hikerpig+nearley@2.21.0-beta.2/node_modules/@hikerpig/nearley/lib/nearley.js"(exports2,module2){(function(root3,factory){if(typeof module2==="object"&&module2.exports){module2.exports=factory();}else{root3.nearley=factory();}})(exports2,function(){function Rule(name,symbols,postprocess){this.id=++Rule.highestId;this.name=name;this.symbols=symbols;this.postprocess=postprocess;return this;}
Rule.highestId=0;Rule.prototype.toString=function(withCursorAt){var symbolSequence=typeof withCursorAt==="undefined"?this.symbols.map(getSymbolShortDisplay).join(" "):this.symbols.slice(0,withCursorAt).map(getSymbolShortDisplay).join(" ")+" \u25CF "+this.symbols.slice(withCursorAt).map(getSymbolShortDisplay).join(" ");return this.name+" \u2192 "+symbolSequence;};function State(rule,dot2,reference,wantedBy){this.rule=rule;this.dot=dot2;this.reference=reference;this.data=[];this.wantedBy=wantedBy;this.isComplete=this.dot===rule.symbols.length;}
State.prototype.toString=function(){return"{"+this.rule.toString(this.dot)+"}, from: "+(this.reference||0);};State.prototype.nextState=function(child){var state=new State(this.rule,this.dot+1,this.reference,this.wantedBy);state.left=this;state.right=child;if(state.isComplete){state.data=state.build();state.right=void 0;}
return state;};State.prototype.build=function(){var children=[];var node2=this;do{children.push(node2.right.data);node2=node2.left;}while(node2.left);children.reverse();return children;};State.prototype.finish=function(){if(this.rule.postprocess){this.data=this.rule.postprocess(this.data,this.reference,Parser.fail);}};function Column(grammar9,index2){this.grammar=grammar9;this.index=index2;this.states=[];this.wants={};this.scannable=[];this.completed={};}
Column.prototype.process=function(nextColumn){var states8=this.states;var wants=this.wants;var completed=this.completed;for(var w=0;w<states8.length;w++){var state=states8[w];if(state.isComplete){state.finish();if(state.data!==Parser.fail){var wantedBy=state.wantedBy;for(var i2=wantedBy.length;i2--;){var left=wantedBy[i2];this.complete(left,state);}
if(state.reference===this.index){var exp=state.rule.name;(this.completed[exp]=this.completed[exp]||[]).push(state);}}}else{var exp=state.rule.symbols[state.dot];if(typeof exp!=="string"){this.scannable.push(state);continue;}
if(wants[exp]){wants[exp].push(state);if(completed.hasOwnProperty(exp)){var nulls=completed[exp];for(var i2=0;i2<nulls.length;i2++){var right=nulls[i2];this.complete(state,right);}}}else{wants[exp]=[state];this.predict(exp);}}}};Column.prototype.predict=function(exp){var rules=this.grammar.byName[exp]||[];for(var i2=0;i2<rules.length;i2++){var r=rules[i2];var wantedBy=this.wants[exp];var s=new State(r,0,this.index,wantedBy);this.states.push(s);}};Column.prototype.complete=function(left,right){var copy4=left.nextState(right);this.states.push(copy4);};function Grammar(rules,start,options){this.rules=rules;this.start=start||this.rules[0].name;this.options=options||{};var byName=this.byName={};this.rules.forEach(function(rule){if(!byName.hasOwnProperty(rule.name)){byName[rule.name]=[];}
byName[rule.name].push(rule);});}
Grammar.fromCompiled=function(rules,start){var lexer9=rules.Lexer;var options=rules.ParserOptions;if(rules.ParserStart){start=rules.ParserStart;rules=rules.ParserRules;}
var rules=rules.map(function(r){return new Rule(r.name,r.symbols,r.postprocess);});var g=new Grammar(rules,start,options);g.lexer=lexer9;return g;};function StreamLexer(){this.reset("");}
StreamLexer.prototype.reset=function(data,state){this.buffer=data;this.index=0;this.line=state?state.line:1;this.lastLineBreak=state?-state.col:0;};StreamLexer.prototype.next=function(){if(this.index<this.buffer.length){var ch=this.buffer[this.index++];if(ch==="\n"){this.line+=1;this.lastLineBreak=this.index;}
return{value:ch};}};StreamLexer.prototype.save=function(){return{line:this.line,col:this.index-this.lastLineBreak};};StreamLexer.prototype.formatError=function(token,message){var buffer=this.buffer;if(typeof buffer==="string"){var lines=buffer.split("\n").slice(Math.max(0,this.line-5),this.line);var nextLineBreak=buffer.indexOf("\n",this.index);if(nextLineBreak===-1)
nextLineBreak=buffer.length;var col=this.index-this.lastLineBreak;var lastLineDigits=String(this.line).length;message+=" at line "+this.line+" col "+col+":\n\n";message+=lines.map(function(line,i2){return pad2(this.line-lines.length+i2+1,lastLineDigits)+" "+line;},this).join("\n");message+="\n"+pad2("",lastLineDigits+col)+"^\n";return message;}else{return message+" at index "+(this.index-1);}
function pad2(n2,length3){var s=String(n2);return Array(length3-s.length+1).join(" ")+s;}};function Parser(rules,start,options){if(rules instanceof Grammar){var grammar9=rules;var options=start;}else{var grammar9=Grammar.fromCompiled(rules,start,{});}
this.grammar=grammar9;this.options={keepHistory:false,lexer:grammar9.lexer||new StreamLexer()};for(var key in options||{}){this.options[key]=options[key];}
this.lexer=this.options.lexer;this.lexerState=void 0;var column=new Column(grammar9,0);var table=this.table=[column];column.wants[grammar9.start]=[];column.predict(grammar9.start);column.process();this.current=0;}
Parser.fail={};Parser.prototype.feed=function(chunk){var lexer9=this.lexer;lexer9.reset(chunk,this.lexerState);var token;while(true){try{token=lexer9.next();if(!token){break;}}catch(e){var nextColumn=new Column(this.grammar,this.current+1);this.table.push(nextColumn);var err=new Error(this.reportLexerError(e));err.offset=this.current;err.token=e.token;throw err;}
var column=this.table[this.current];if(!this.options.keepHistory){delete this.table[this.current-1];}
var n2=this.current+1;var nextColumn=new Column(this.grammar,n2);this.table.push(nextColumn);var literal=token.text!==void 0?token.text:token.value;var value=lexer9.constructor===StreamLexer?token.value:token;var scannable=column.scannable;for(var w=scannable.length;w--;){var state=scannable[w];var expect=state.rule.symbols[state.dot];if(expect.test?expect.test(value):expect.type?expect.type===token.type:expect.literal===literal){var next=state.nextState({data:value,token,isToken:true,reference:n2-1});nextColumn.states.push(next);}}
nextColumn.process();if(nextColumn.states.length===0){if(nextColumn.grammar.options.skipUnmatchSymbols.length){const shouldIgnore=nextColumn.grammar.options.skipUnmatchSymbols.some(function name(s){if(s.test?s.test(value):s.type?s.type===token.type:s.literal===literal){return true;}});if(shouldIgnore){this.table.pop();continue;}}
var err=new Error(this.reportError(token));err.offset=this.current;err.token=token;throw err;}
if(this.options.keepHistory){column.lexerState=lexer9.save();}
this.current++;}
if(column){this.lexerState=lexer9.save();}
this.results=this.finish();return this;};Parser.prototype.reportLexerError=function(lexerError){var tokenDisplay,lexerMessage;var token=lexerError.token;if(token){tokenDisplay="input "+JSON.stringify(token.text[0])+" (lexer error)";lexerMessage=this.lexer.formatError(token,"Syntax error");}else{tokenDisplay="input (lexer error)";lexerMessage=lexerError.message;}
return this.reportErrorCommon(lexerMessage,tokenDisplay);};Parser.prototype.reportError=function(token){var tokenDisplay=(token.type?token.type+" token: ":"")+JSON.stringify(token.value!==void 0?token.value:token);var lexerMessage=this.lexer.formatError(token,"Syntax error");return this.reportErrorCommon(lexerMessage,tokenDisplay);};Parser.prototype.reportErrorCommon=function(lexerMessage,tokenDisplay){var lines=[];lines.push(lexerMessage);var lastColumnIndex=this.table.length-2;var lastColumn=this.table[lastColumnIndex];var expectantStates=lastColumn.states.filter(function(state){var nextSymbol=state.rule.symbols[state.dot];return nextSymbol&&typeof nextSymbol!=="string";});if(expectantStates.length===0){lines.push("Unexpected "+tokenDisplay+". I did not expect any more input. Here is the state of my parse table:\n");this.displayStateStack(lastColumn.states,lines);}else{lines.push("Unexpected "+tokenDisplay+". Instead, I was expecting to see one of the following:\n");var stateStacks=expectantStates.map(function(state){return this.buildFirstStateStack(state,[])||[state];},this);stateStacks.forEach(function(stateStack){var state=stateStack[0];var nextSymbol=state.rule.symbols[state.dot];var symbolDisplay=this.getSymbolDisplay(nextSymbol);lines.push("A "+symbolDisplay+" based on:");this.displayStateStack(stateStack,lines);},this);}
lines.push("");return lines.join("\n");};Parser.prototype.displayStateStack=function(stateStack,lines){var lastDisplay;var sameDisplayCount=0;for(var j=0;j<stateStack.length;j++){var state=stateStack[j];var display=state.rule.toString(state.dot);if(display===lastDisplay){sameDisplayCount++;}else{if(sameDisplayCount>0){lines.push("    ^ "+sameDisplayCount+" more lines identical to this");}
sameDisplayCount=0;lines.push("    "+display);}
lastDisplay=display;}};Parser.prototype.getSymbolDisplay=function(symbol){return getSymbolLongDisplay(symbol);};Parser.prototype.buildFirstStateStack=function(state,visited){if(visited.indexOf(state)!==-1){return null;}
if(state.wantedBy.length===0){return[state];}
var prevState=state.wantedBy[0];var childVisited=[state].concat(visited);var childResult=this.buildFirstStateStack(prevState,childVisited);if(childResult===null){return null;}
return[state].concat(childResult);};Parser.prototype.save=function(){var column=this.table[this.current];column.lexerState=this.lexerState;return column;};Parser.prototype.restore=function(column){var index2=column.index;this.current=index2;this.table[index2]=column;this.table.splice(index2+1);this.lexerState=column.lexerState;this.results=this.finish();};Parser.prototype.rewind=function(index2){if(!this.options.keepHistory){throw new Error("set option `keepHistory` to enable rewinding");}
this.restore(this.table[index2]);};Parser.prototype.finish=function(){var considerations=[];var start=this.grammar.start;var column=this.table[this.table.length-1];column.states.forEach(function(t){if(t.rule.name===start&&t.dot===t.rule.symbols.length&&t.reference===0&&t.data!==Parser.fail){considerations.push(t);}});return considerations.map(function(c){return c.data;});};function getSymbolLongDisplay(symbol){var type=typeof symbol;if(type==="string"){return symbol;}else if(type==="object"){if(symbol.literal){return JSON.stringify(symbol.literal);}else if(symbol instanceof RegExp){return"character matching "+symbol;}else if(symbol.type){return symbol.type+" token";}else if(symbol.test){return"token matching "+String(symbol.test);}else{throw new Error("Unknown symbol type: "+symbol);}}}
function getSymbolShortDisplay(symbol){var type=typeof symbol;if(type==="string"){return symbol;}else if(type==="object"){if(symbol.literal){return JSON.stringify(symbol.literal);}else if(symbol instanceof RegExp){return symbol.toString();}else if(symbol.type){return"%"+symbol.type;}else if(symbol.test){return"<"+String(symbol.test)+">";}else{throw new Error("Unknown symbol type: "+symbol);}}}
return{Parser,Grammar,Rule};});}});var require_dayjs_min=__commonJS({"../../node_modules/.pnpm/dayjs@1.10.7/node_modules/dayjs/dayjs.min.js"(exports2,module2){!function(t,e){"object"==typeof exports2&&"undefined"!=typeof module2?module2.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).dayjs=e();}(exports2,function(){"use strict";var t=1e3,e=6e4,n2=36e5,r="millisecond",i2="second",s="minute",u="hour",a="day",o="week",f="month",h="quarter",c="year",d="date",$2="Invalid Date",l=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,y2=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_")},m=function(t2,e3,n3){var r2=String(t2);return!r2||r2.length>=e3?t2:""+Array(e3+1-r2.length).join(n3)+t2;},g={s:m,z:function(t2){var e3=-t2.utcOffset(),n3=Math.abs(e3),r2=Math.floor(n3/60),i3=n3%60;return(e3<=0?"+":"-")+m(r2,2,"0")+":"+m(i3,2,"0");},m:function t2(e3,n3){if(e3.date()<n3.date())
return-t2(n3,e3);var r2=12*(n3.year()-e3.year())+(n3.month()-e3.month()),i3=e3.clone().add(r2,f),s2=n3-i3<0,u2=e3.clone().add(r2+(s2?-1:1),f);return+(-(r2+(n3-i3)/(s2?i3-u2:u2-i3))||0);},a:function(t2){return t2<0?Math.ceil(t2)||0:Math.floor(t2);},p:function(t2){return{M:f,y:c,w:o,d:a,D:d,h:u,m:s,s:i2,ms:r,Q:h}[t2]||String(t2||"").toLowerCase().replace(/s$/,"");},u:function(t2){return void 0===t2;}},D="en",v={};v[D]=M;var p=function(t2){return t2 instanceof _3;},S=function(t2,e3,n3){var r2;if(!t2)
return D;if("string"==typeof t2)
v[t2]&&(r2=t2),e3&&(v[t2]=e3,r2=t2);else{var i3=t2.name;v[i3]=t2,r2=i3;}
return!n3&&r2&&(D=r2),r2||!n3&&D;},w=function(t2,e3){if(p(t2))
return t2.clone();var n3="object"==typeof e3?e3:{};return n3.date=t2,n3.args=arguments,new _3(n3);},O=g;O.l=S,O.i=p,O.w=function(t2,e3){return w(t2,{locale:e3.$L,utc:e3.$u,x:e3.$x,$offset:e3.$offset});};var _3=function(){function M2(t2){this.$L=S(t2.locale,null,true),this.parse(t2);}
var m2=M2.prototype;return m2.parse=function(t2){this.$d=function(t3){var e3=t3.date,n3=t3.utc;if(null===e3)
return  new Date(NaN);if(O.u(e3))
return  new Date();if(e3 instanceof Date)
return new Date(e3);if("string"==typeof e3&&!/Z$/i.test(e3)){var r2=e3.match(l);if(r2){var i3=r2[2]-1||0,s2=(r2[7]||"0").substring(0,3);return n3?new Date(Date.UTC(r2[1],i3,r2[3]||1,r2[4]||0,r2[5]||0,r2[6]||0,s2)):new Date(r2[1],i3,r2[3]||1,r2[4]||0,r2[5]||0,r2[6]||0,s2);}}
return new Date(e3);}(t2),this.$x=t2.x||{},this.init();},m2.init=function(){var t2=this.$d;this.$y=t2.getFullYear(),this.$M=t2.getMonth(),this.$D=t2.getDate(),this.$W=t2.getDay(),this.$H=t2.getHours(),this.$m=t2.getMinutes(),this.$s=t2.getSeconds(),this.$ms=t2.getMilliseconds();},m2.$utils=function(){return O;},m2.isValid=function(){return!(this.$d.toString()===$2);},m2.isSame=function(t2,e3){var n3=w(t2);return this.startOf(e3)<=n3&&n3<=this.endOf(e3);},m2.isAfter=function(t2,e3){return w(t2)<this.startOf(e3);},m2.isBefore=function(t2,e3){return this.endOf(e3)<w(t2);},m2.$g=function(t2,e3,n3){return O.u(t2)?this[e3]:this.set(n3,t2);},m2.unix=function(){return Math.floor(this.valueOf()/1e3);},m2.valueOf=function(){return this.$d.getTime();},m2.startOf=function(t2,e3){var n3=this,r2=!!O.u(e3)||e3,h2=O.p(t2),$3=function(t3,e4){var i3=O.w(n3.$u?Date.UTC(n3.$y,e4,t3):new Date(n3.$y,e4,t3),n3);return r2?i3:i3.endOf(a);},l2=function(t3,e4){return O.w(n3.toDate()[t3].apply(n3.toDate("s"),(r2?[0,0,0,0]:[23,59,59,999]).slice(e4)),n3);},y3=this.$W,M3=this.$M,m3=this.$D,g2="set"+(this.$u?"UTC":"");switch(h2){case c:return r2?$3(1,0):$3(31,11);case f:return r2?$3(1,M3):$3(0,M3+1);case o:var D2=this.$locale().weekStart||0,v2=(y3<D2?y3+7:y3)-D2;return $3(r2?m3-v2:m3+(6-v2),M3);case a:case d:return l2(g2+"Hours",0);case u:return l2(g2+"Minutes",1);case s:return l2(g2+"Seconds",2);case i2:return l2(g2+"Milliseconds",3);default:return this.clone();}},m2.endOf=function(t2){return this.startOf(t2,false);},m2.$set=function(t2,e3){var n3,o2=O.p(t2),h2="set"+(this.$u?"UTC":""),$3=(n3={},n3[a]=h2+"Date",n3[d]=h2+"Date",n3[f]=h2+"Month",n3[c]=h2+"FullYear",n3[u]=h2+"Hours",n3[s]=h2+"Minutes",n3[i2]=h2+"Seconds",n3[r]=h2+"Milliseconds",n3)[o2],l2=o2===a?this.$D+(e3-this.$W):e3;if(o2===f||o2===c){var y3=this.clone().set(d,1);y3.$d[$3](l2),y3.init(),this.$d=y3.set(d,Math.min(this.$D,y3.daysInMonth())).$d;}else
$3&&this.$d[$3](l2);return this.init(),this;},m2.set=function(t2,e3){return this.clone().$set(t2,e3);},m2.get=function(t2){return this[O.p(t2)]();},m2.add=function(r2,h2){var d2,$3=this;r2=Number(r2);var l2=O.p(h2),y3=function(t2){var e3=w($3);return O.w(e3.date(e3.date()+Math.round(t2*r2)),$3);};if(l2===f)
return this.set(f,this.$M+r2);if(l2===c)
return this.set(c,this.$y+r2);if(l2===a)
return y3(1);if(l2===o)
return y3(7);var M3=(d2={},d2[s]=e,d2[u]=n2,d2[i2]=t,d2)[l2]||1,m3=this.$d.getTime()+r2*M3;return O.w(m3,this);},m2.subtract=function(t2,e3){return this.add(-1*t2,e3);},m2.format=function(t2){var e3=this,n3=this.$locale();if(!this.isValid())
return n3.invalidDate||$2;var r2=t2||"YYYY-MM-DDTHH:mm:ssZ",i3=O.z(this),s2=this.$H,u2=this.$m,a2=this.$M,o2=n3.weekdays,f2=n3.months,h2=function(t3,n4,i4,s3){return t3&&(t3[n4]||t3(e3,r2))||i4[n4].substr(0,s3);},c2=function(t3){return O.s(s2%12||12,t3,"0");},d2=n3.meridiem||function(t3,e4,n4){var r3=t3<12?"AM":"PM";return n4?r3.toLowerCase():r3;},l2={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a2+1,MM:O.s(a2+1,2,"0"),MMM:h2(n3.monthsShort,a2,f2,3),MMMM:h2(f2,a2),D:this.$D,DD:O.s(this.$D,2,"0"),d:String(this.$W),dd:h2(n3.weekdaysMin,this.$W,o2,2),ddd:h2(n3.weekdaysShort,this.$W,o2,3),dddd:o2[this.$W],H:String(s2),HH:O.s(s2,2,"0"),h:c2(1),hh:c2(2),a:d2(s2,u2,true),A:d2(s2,u2,false),m:String(u2),mm:O.s(u2,2,"0"),s:String(this.$s),ss:O.s(this.$s,2,"0"),SSS:O.s(this.$ms,3,"0"),Z:i3};return r2.replace(y2,function(t3,e4){return e4||l2[t3]||i3.replace(":","");});},m2.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15);},m2.diff=function(r2,d2,$3){var l2,y3=O.p(d2),M3=w(r2),m3=(M3.utcOffset()-this.utcOffset())*e,g2=this-M3,D2=O.m(this,M3);return D2=(l2={},l2[c]=D2/12,l2[f]=D2,l2[h]=D2/3,l2[o]=(g2-m3)/6048e5,l2[a]=(g2-m3)/864e5,l2[u]=g2/n2,l2[s]=g2/e,l2[i2]=g2/t,l2)[y3]||g2,$3?D2:O.a(D2);},m2.daysInMonth=function(){return this.endOf(f).$D;},m2.$locale=function(){return v[this.$L];},m2.locale=function(t2,e3){if(!t2)
return this.$L;var n3=this.clone(),r2=S(t2,e3,true);return r2&&(n3.$L=r2),n3;},m2.clone=function(){return O.w(this.$d,this);},m2.toDate=function(){return new Date(this.valueOf());},m2.toJSON=function(){return this.isValid()?this.toISOString():null;},m2.toISOString=function(){return this.$d.toISOString();},m2.toString=function(){return this.$d.toUTCString();},M2;}(),b10=_3.prototype;return w.prototype=b10,[["$ms",r],["$s",i2],["$m",s],["$H",u],["$W",a],["$M",f],["$y",c],["$D",d]].forEach(function(t2){b10[t2[1]]=function(e3){return this.$g(e3,t2[0],t2[1]);};}),w.extend=function(t2,e3){return t2.$i||(t2(e3,_3,w),t2.$i=true),w;},w.locale=S,w.isDayjs=p,w.unix=function(t2){return w(1e3*t2);},w.en=v[D],w.Ls=v,w.p={},w;});}});var require_canvas=__commonJS({"aliases/canvas.js"(exports2,module2){module2.exports={};}});var require_path_browserify=__commonJS({"node_modules/path-browserify/index.js"(exports2,module2){"use strict";function assertPath(path4){if(typeof path4!=="string"){throw new TypeError("Path must be a string. Received "+JSON.stringify(path4));}}
function normalizeStringPosix(path4,allowAboveRoot){var res="";var lastSegmentLength=0;var lastSlash=-1;var dots2=0;var code;for(var i2=0;i2<=path4.length;++i2){if(i2<path4.length)
code=path4.charCodeAt(i2);else if(code===47)
break;else
code=47;if(code===47){if(lastSlash===i2-1||dots2===1){}else if(lastSlash!==i2-1&&dots2===2){if(res.length<2||lastSegmentLength!==2||res.charCodeAt(res.length-1)!==46||res.charCodeAt(res.length-2)!==46){if(res.length>2){var lastSlashIndex=res.lastIndexOf("/");if(lastSlashIndex!==res.length-1){if(lastSlashIndex===-1){res="";lastSegmentLength=0;}else{res=res.slice(0,lastSlashIndex);lastSegmentLength=res.length-1-res.lastIndexOf("/");}
lastSlash=i2;dots2=0;continue;}}else if(res.length===2||res.length===1){res="";lastSegmentLength=0;lastSlash=i2;dots2=0;continue;}}
if(allowAboveRoot){if(res.length>0)
res+="/..";else
res="..";lastSegmentLength=2;}}else{if(res.length>0)
res+="/"+path4.slice(lastSlash+1,i2);else
res=path4.slice(lastSlash+1,i2);lastSegmentLength=i2-lastSlash-1;}
lastSlash=i2;dots2=0;}else if(code===46&&dots2!==-1){++dots2;}else{dots2=-1;}}
return res;}
function _format(sep,pathObject){var dir=pathObject.dir||pathObject.root;var base=pathObject.base||(pathObject.name||"")+(pathObject.ext||"");if(!dir){return base;}
if(dir===pathObject.root){return dir+base;}
return dir+sep+base;}
var posix={resolve:function resolve(){var resolvedPath="";var resolvedAbsolute=false;var cwd;for(var i2=arguments.length-1;i2>=-1&&!resolvedAbsolute;i2--){var path4;if(i2>=0)
path4=arguments[i2];else{if(cwd===void 0)
cwd=process.cwd();path4=cwd;}
assertPath(path4);if(path4.length===0){continue;}
resolvedPath=path4+"/"+resolvedPath;resolvedAbsolute=path4.charCodeAt(0)===47;}
resolvedPath=normalizeStringPosix(resolvedPath,!resolvedAbsolute);if(resolvedAbsolute){if(resolvedPath.length>0)
return"/"+resolvedPath;else
return"/";}else if(resolvedPath.length>0){return resolvedPath;}else{return".";}},normalize:function normalize4(path4){assertPath(path4);if(path4.length===0)
return".";var isAbsolute=path4.charCodeAt(0)===47;var trailingSeparator=path4.charCodeAt(path4.length-1)===47;path4=normalizeStringPosix(path4,!isAbsolute);if(path4.length===0&&!isAbsolute)
path4=".";if(path4.length>0&&trailingSeparator)
path4+="/";if(isAbsolute)
return"/"+path4;return path4;},isAbsolute:function isAbsolute(path4){assertPath(path4);return path4.length>0&&path4.charCodeAt(0)===47;},join:function join2(){if(arguments.length===0)
return".";var joined;for(var i2=0;i2<arguments.length;++i2){var arg=arguments[i2];assertPath(arg);if(arg.length>0){if(joined===void 0)
joined=arg;else
joined+="/"+arg;}}
if(joined===void 0)
return".";return posix.normalize(joined);},relative:function relative(from,to){assertPath(from);assertPath(to);if(from===to)
return"";from=posix.resolve(from);to=posix.resolve(to);if(from===to)
return"";var fromStart=1;for(;fromStart<from.length;++fromStart){if(from.charCodeAt(fromStart)!==47)
break;}
var fromEnd=from.length;var fromLen=fromEnd-fromStart;var toStart=1;for(;toStart<to.length;++toStart){if(to.charCodeAt(toStart)!==47)
break;}
var toEnd=to.length;var toLen=toEnd-toStart;var length3=fromLen<toLen?fromLen:toLen;var lastCommonSep=-1;var i2=0;for(;i2<=length3;++i2){if(i2===length3){if(toLen>length3){if(to.charCodeAt(toStart+i2)===47){return to.slice(toStart+i2+1);}else if(i2===0){return to.slice(toStart+i2);}}else if(fromLen>length3){if(from.charCodeAt(fromStart+i2)===47){lastCommonSep=i2;}else if(i2===0){lastCommonSep=0;}}
break;}
var fromCode=from.charCodeAt(fromStart+i2);var toCode=to.charCodeAt(toStart+i2);if(fromCode!==toCode)
break;else if(fromCode===47)
lastCommonSep=i2;}
var out="";for(i2=fromStart+lastCommonSep+1;i2<=fromEnd;++i2){if(i2===fromEnd||from.charCodeAt(i2)===47){if(out.length===0)
out+="..";else
out+="/..";}}
if(out.length>0)
return out+to.slice(toStart+lastCommonSep);else{toStart+=lastCommonSep;if(to.charCodeAt(toStart)===47)
++toStart;return to.slice(toStart);}},_makeLong:function _makeLong(path4){return path4;},dirname:function dirname2(path4){assertPath(path4);if(path4.length===0)
return".";var code=path4.charCodeAt(0);var hasRoot=code===47;var end=-1;var matchedSlash=true;for(var i2=path4.length-1;i2>=1;--i2){code=path4.charCodeAt(i2);if(code===47){if(!matchedSlash){end=i2;break;}}else{matchedSlash=false;}}
if(end===-1)
return hasRoot?"/":".";if(hasRoot&&end===1)
return"//";return path4.slice(0,end);},basename:function basename(path4,ext){if(ext!==void 0&&typeof ext!=="string")
throw new TypeError('"ext" argument must be a string');assertPath(path4);var start=0;var end=-1;var matchedSlash=true;var i2;if(ext!==void 0&&ext.length>0&&ext.length<=path4.length){if(ext.length===path4.length&&ext===path4)
return"";var extIdx=ext.length-1;var firstNonSlashEnd=-1;for(i2=path4.length-1;i2>=0;--i2){var code=path4.charCodeAt(i2);if(code===47){if(!matchedSlash){start=i2+1;break;}}else{if(firstNonSlashEnd===-1){matchedSlash=false;firstNonSlashEnd=i2+1;}
if(extIdx>=0){if(code===ext.charCodeAt(extIdx)){if(--extIdx===-1){end=i2;}}else{extIdx=-1;end=firstNonSlashEnd;}}}}
if(start===end)
end=firstNonSlashEnd;else if(end===-1)
end=path4.length;return path4.slice(start,end);}else{for(i2=path4.length-1;i2>=0;--i2){if(path4.charCodeAt(i2)===47){if(!matchedSlash){start=i2+1;break;}}else if(end===-1){matchedSlash=false;end=i2+1;}}
if(end===-1)
return"";return path4.slice(start,end);}},extname:function extname(path4){assertPath(path4);var startDot=-1;var startPart=0;var end=-1;var matchedSlash=true;var preDotState=0;for(var i2=path4.length-1;i2>=0;--i2){var code=path4.charCodeAt(i2);if(code===47){if(!matchedSlash){startPart=i2+1;break;}
continue;}
if(end===-1){matchedSlash=false;end=i2+1;}
if(code===46){if(startDot===-1)
startDot=i2;else if(preDotState!==1)
preDotState=1;}else if(startDot!==-1){preDotState=-1;}}
if(startDot===-1||end===-1||preDotState===0||preDotState===1&&startDot===end-1&&startDot===startPart+1){return"";}
return path4.slice(startDot,end);},format:function format(pathObject){if(pathObject===null||typeof pathObject!=="object"){throw new TypeError('The "pathObject" argument must be of type Object. Received type '+typeof pathObject);}
return _format("/",pathObject);},parse:function parse9(path4){assertPath(path4);var ret={root:"",dir:"",base:"",ext:"",name:""};if(path4.length===0)
return ret;var code=path4.charCodeAt(0);var isAbsolute=code===47;var start;if(isAbsolute){ret.root="/";start=1;}else{start=0;}
var startDot=-1;var startPart=0;var end=-1;var matchedSlash=true;var i2=path4.length-1;var preDotState=0;for(;i2>=start;--i2){code=path4.charCodeAt(i2);if(code===47){if(!matchedSlash){startPart=i2+1;break;}
continue;}
if(end===-1){matchedSlash=false;end=i2+1;}
if(code===46){if(startDot===-1)
startDot=i2;else if(preDotState!==1)
preDotState=1;}else if(startDot!==-1){preDotState=-1;}}
if(startDot===-1||end===-1||preDotState===0||preDotState===1&&startDot===end-1&&startDot===startPart+1){if(end!==-1){if(startPart===0&&isAbsolute)
ret.base=ret.name=path4.slice(1,end);else
ret.base=ret.name=path4.slice(startPart,end);}}else{if(startPart===0&&isAbsolute){ret.name=path4.slice(1,startDot);ret.base=path4.slice(1,end);}else{ret.name=path4.slice(startPart,startDot);ret.base=path4.slice(startPart,end);}
ret.ext=path4.slice(startDot,end);}
if(startPart>0)
ret.dir=path4.slice(0,startPart-1);else if(isAbsolute)
ret.dir="/";return ret;},sep:"/",delimiter:":",win32:null,posix:null};posix.posix=posix;module2.exports=posix;}});var require_punycode=__commonJS({"../../node_modules/.pnpm/punycode@1.4.1/node_modules/punycode/punycode.js"(exports2,module2){(function(root3){var freeExports3=typeof exports2=="object"&&exports2&&!exports2.nodeType&&exports2;var freeModule3=typeof module2=="object"&&module2&&!module2.nodeType&&module2;var freeGlobal3=typeof global=="object"&&global;if(freeGlobal3.global===freeGlobal3||freeGlobal3.window===freeGlobal3||freeGlobal3.self===freeGlobal3){root3=freeGlobal3;}
var punycode,maxInt=2147483647,base=36,tMin=1,tMax=26,skew=38,damp=700,initialBias=72,initialN=128,delimiter2="-",regexPunycode=/^xn--/,regexNonASCII=/[^\x20-\x7E]/,regexSeparators=/[\x2E\u3002\uFF0E\uFF61]/g,errors={"overflow":"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},baseMinusTMin=base-tMin,floor2=Math.floor,stringFromCharCode=String.fromCharCode,key;function error(type){throw new RangeError(errors[type]);}
function map4(array,fn){var length3=array.length;var result=[];while(length3--){result[length3]=fn(array[length3]);}
return result;}
function mapDomain(string,fn){var parts=string.split("@");var result="";if(parts.length>1){result=parts[0]+"@";string=parts[1];}
string=string.replace(regexSeparators,".");var labels=string.split(".");var encoded=map4(labels,fn).join(".");return result+encoded;}
function ucs2decode(string){var output=[],counter=0,length3=string.length,value,extra;while(counter<length3){value=string.charCodeAt(counter++);if(value>=55296&&value<=56319&&counter<length3){extra=string.charCodeAt(counter++);if((extra&64512)==56320){output.push(((value&1023)<<10)+(extra&1023)+65536);}else{output.push(value);counter--;}}else{output.push(value);}}
return output;}
function ucs2encode(array){return map4(array,function(value){var output="";if(value>65535){value-=65536;output+=stringFromCharCode(value>>>10&1023|55296);value=56320|value&1023;}
output+=stringFromCharCode(value);return output;}).join("");}
function basicToDigit(codePoint){if(codePoint-48<10){return codePoint-22;}
if(codePoint-65<26){return codePoint-65;}
if(codePoint-97<26){return codePoint-97;}
return base;}
function digitToBasic(digit,flag){return digit+22+75*(digit<26)-((flag!=0)<<5);}
function adapt(delta,numPoints,firstTime){var k=0;delta=firstTime?floor2(delta/damp):delta>>1;delta+=floor2(delta/numPoints);for(;delta>baseMinusTMin*tMax>>1;k+=base){delta=floor2(delta/baseMinusTMin);}
return floor2(k+(baseMinusTMin+1)*delta/(delta+skew));}
function decode(input){var output=[],inputLength=input.length,out,i2=0,n2=initialN,bias=initialBias,basic,j,index2,oldi,w,k,digit,t,baseMinusT;basic=input.lastIndexOf(delimiter2);if(basic<0){basic=0;}
for(j=0;j<basic;++j){if(input.charCodeAt(j)>=128){error("not-basic");}
output.push(input.charCodeAt(j));}
for(index2=basic>0?basic+1:0;index2<inputLength;){for(oldi=i2,w=1,k=base;;k+=base){if(index2>=inputLength){error("invalid-input");}
digit=basicToDigit(input.charCodeAt(index2++));if(digit>=base||digit>floor2((maxInt-i2)/w)){error("overflow");}
i2+=digit*w;t=k<=bias?tMin:k>=bias+tMax?tMax:k-bias;if(digit<t){break;}
baseMinusT=base-t;if(w>floor2(maxInt/baseMinusT)){error("overflow");}
w*=baseMinusT;}
out=output.length+1;bias=adapt(i2-oldi,out,oldi==0);if(floor2(i2/out)>maxInt-n2){error("overflow");}
n2+=floor2(i2/out);i2%=out;output.splice(i2++,0,n2);}
return ucs2encode(output);}
function encode(input){var n2,delta,handledCPCount,basicLength,bias,j,m,q,k,t,currentValue,output=[],inputLength,handledCPCountPlusOne,baseMinusT,qMinusT;input=ucs2decode(input);inputLength=input.length;n2=initialN;delta=0;bias=initialBias;for(j=0;j<inputLength;++j){currentValue=input[j];if(currentValue<128){output.push(stringFromCharCode(currentValue));}}
handledCPCount=basicLength=output.length;if(basicLength){output.push(delimiter2);}
while(handledCPCount<inputLength){for(m=maxInt,j=0;j<inputLength;++j){currentValue=input[j];if(currentValue>=n2&&currentValue<m){m=currentValue;}}
handledCPCountPlusOne=handledCPCount+1;if(m-n2>floor2((maxInt-delta)/handledCPCountPlusOne)){error("overflow");}
delta+=(m-n2)*handledCPCountPlusOne;n2=m;for(j=0;j<inputLength;++j){currentValue=input[j];if(currentValue<n2&&++delta>maxInt){error("overflow");}
if(currentValue==n2){for(q=delta,k=base;;k+=base){t=k<=bias?tMin:k>=bias+tMax?tMax:k-bias;if(q<t){break;}
qMinusT=q-t;baseMinusT=base-t;output.push(stringFromCharCode(digitToBasic(t+qMinusT%baseMinusT,0)));q=floor2(qMinusT/baseMinusT);}
output.push(stringFromCharCode(digitToBasic(q,0)));bias=adapt(delta,handledCPCountPlusOne,handledCPCount==basicLength);delta=0;++handledCPCount;}}
++delta;++n2;}
return output.join("");}
function toUnicode(input){return mapDomain(input,function(string){return regexPunycode.test(string)?decode(string.slice(4).toLowerCase()):string;});}
function toASCII(input){return mapDomain(input,function(string){return regexNonASCII.test(string)?"xn--"+encode(string):string;});}
punycode={"version":"1.4.1","ucs2":{"decode":ucs2decode,"encode":ucs2encode},"decode":decode,"encode":encode,"toASCII":toASCII,"toUnicode":toUnicode};if(typeof define=="function"&&typeof define.amd=="object"&&define.amd){define("punycode",function(){return punycode;});}else if(freeExports3&&freeModule3){if(module2.exports==freeExports3){freeModule3.exports=punycode;}else{for(key in punycode){punycode.hasOwnProperty(key)&&(freeExports3[key]=punycode[key]);}}}else{root3.punycode=punycode;}})(exports2);}});var require_shams=__commonJS({"../../node_modules/.pnpm/has-symbols@1.0.3/node_modules/has-symbols/shams.js"(exports2,module2){"use strict";module2.exports=function hasSymbols(){if(typeof Symbol!=="function"||typeof Object.getOwnPropertySymbols!=="function"){return false;}
if(typeof Symbol.iterator==="symbol"){return true;}
var obj={};var sym=Symbol("test");var symObj=Object(sym);if(typeof sym==="string"){return false;}
if(Object.prototype.toString.call(sym)!=="[object Symbol]"){return false;}
if(Object.prototype.toString.call(symObj)!=="[object Symbol]"){return false;}
var symVal=42;obj[sym]=symVal;for(sym in obj){return false;}
if(typeof Object.keys==="function"&&Object.keys(obj).length!==0){return false;}
if(typeof Object.getOwnPropertyNames==="function"&&Object.getOwnPropertyNames(obj).length!==0){return false;}
var syms=Object.getOwnPropertySymbols(obj);if(syms.length!==1||syms[0]!==sym){return false;}
if(!Object.prototype.propertyIsEnumerable.call(obj,sym)){return false;}
if(typeof Object.getOwnPropertyDescriptor==="function"){var descriptor=Object.getOwnPropertyDescriptor(obj,sym);if(descriptor.value!==symVal||descriptor.enumerable!==true){return false;}}
return true;};}});var require_has_symbols=__commonJS({"../../node_modules/.pnpm/has-symbols@1.0.3/node_modules/has-symbols/index.js"(exports2,module2){"use strict";var origSymbol=typeof Symbol!=="undefined"&&Symbol;var hasSymbolSham=require_shams();module2.exports=function hasNativeSymbols(){if(typeof origSymbol!=="function"){return false;}
if(typeof Symbol!=="function"){return false;}
if(typeof origSymbol("foo")!=="symbol"){return false;}
if(typeof Symbol("bar")!=="symbol"){return false;}
return hasSymbolSham();};}});var require_has_proto=__commonJS({"../../node_modules/.pnpm/has-proto@1.0.1/node_modules/has-proto/index.js"(exports2,module2){"use strict";var test={foo:{}};var $Object=Object;module2.exports=function hasProto(){return{__proto__:test}.foo===test.foo&&!({__proto__:null}instanceof $Object);};}});var require_implementation=__commonJS({"../../node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/implementation.js"(exports2,module2){"use strict";var ERROR_MESSAGE="Function.prototype.bind called on incompatible ";var toStr=Object.prototype.toString;var max4=Math.max;var funcType="[object Function]";var concatty=function concatty2(a,b10){var arr2=[];for(var i2=0;i2<a.length;i2+=1){arr2[i2]=a[i2];}
for(var j=0;j<b10.length;j+=1){arr2[j+a.length]=b10[j];}
return arr2;};var slicy=function slicy2(arrLike,offset){var arr2=[];for(var i2=offset||0,j=0;i2<arrLike.length;i2+=1,j+=1){arr2[j]=arrLike[i2];}
return arr2;};var joiny=function(arr2,joiner){var str3="";for(var i2=0;i2<arr2.length;i2+=1){str3+=arr2[i2];if(i2+1<arr2.length){str3+=joiner;}}
return str3;};module2.exports=function bind(that){var target=this;if(typeof target!=="function"||toStr.apply(target)!==funcType){throw new TypeError(ERROR_MESSAGE+target);}
var args=slicy(arguments,1);var bound;var binder=function(){if(this instanceof bound){var result=target.apply(this,concatty(args,arguments));if(Object(result)===result){return result;}
return this;}
return target.apply(that,concatty(args,arguments));};var boundLength=max4(0,target.length-args.length);var boundArgs=[];for(var i2=0;i2<boundLength;i2++){boundArgs[i2]="$"+i2;}
bound=Function("binder","return function ("+joiny(boundArgs,",")+"){ return binder.apply(this,arguments); }")(binder);if(target.prototype){var Empty=function Empty2(){};Empty.prototype=target.prototype;bound.prototype=new Empty();Empty.prototype=null;}
return bound;};}});var require_function_bind=__commonJS({"../../node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/index.js"(exports2,module2){"use strict";var implementation=require_implementation();module2.exports=Function.prototype.bind||implementation;}});var require_hasown=__commonJS({"../../node_modules/.pnpm/hasown@2.0.1/node_modules/hasown/index.js"(exports2,module2){"use strict";var call=Function.prototype.call;var $hasOwn=Object.prototype.hasOwnProperty;var bind=require_function_bind();module2.exports=bind.call(call,$hasOwn);}});var require_get_intrinsic=__commonJS({"../../node_modules/.pnpm/get-intrinsic@1.2.2/node_modules/get-intrinsic/index.js"(exports2,module2){"use strict";var undefined2;var $SyntaxError=SyntaxError;var $Function=Function;var $TypeError=TypeError;var getEvalledConstructor=function(expressionSyntax){try{return $Function('"use strict"; return ('+expressionSyntax+").constructor;")();}catch(e){}};var $gOPD=Object.getOwnPropertyDescriptor;if($gOPD){try{$gOPD({},"");}catch(e){$gOPD=null;}}
var throwTypeError=function(){throw new $TypeError();};var ThrowTypeError=$gOPD?function(){try{arguments.callee;return throwTypeError;}catch(calleeThrows){try{return $gOPD(arguments,"callee").get;}catch(gOPDthrows){return throwTypeError;}}}():throwTypeError;var hasSymbols=require_has_symbols()();var hasProto=require_has_proto()();var getProto=Object.getPrototypeOf||(hasProto?function(x2){return x2.__proto__;}:null);var needsEval={};var TypedArray=typeof Uint8Array==="undefined"||!getProto?undefined2:getProto(Uint8Array);var INTRINSICS={"%AggregateError%":typeof AggregateError==="undefined"?undefined2:AggregateError,"%Array%":Array,"%ArrayBuffer%":typeof ArrayBuffer==="undefined"?undefined2:ArrayBuffer,"%ArrayIteratorPrototype%":hasSymbols&&getProto?getProto([][Symbol.iterator]()):undefined2,"%AsyncFromSyncIteratorPrototype%":undefined2,"%AsyncFunction%":needsEval,"%AsyncGenerator%":needsEval,"%AsyncGeneratorFunction%":needsEval,"%AsyncIteratorPrototype%":needsEval,"%Atomics%":typeof Atomics==="undefined"?undefined2:Atomics,"%BigInt%":typeof BigInt==="undefined"?undefined2:BigInt,"%BigInt64Array%":typeof BigInt64Array==="undefined"?undefined2:BigInt64Array,"%BigUint64Array%":typeof BigUint64Array==="undefined"?undefined2:BigUint64Array,"%Boolean%":Boolean,"%DataView%":typeof DataView==="undefined"?undefined2:DataView,"%Date%":Date,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Error,"%eval%":eval,"%EvalError%":EvalError,"%Float32Array%":typeof Float32Array==="undefined"?undefined2:Float32Array,"%Float64Array%":typeof Float64Array==="undefined"?undefined2:Float64Array,"%FinalizationRegistry%":typeof FinalizationRegistry==="undefined"?undefined2:FinalizationRegistry,"%Function%":$Function,"%GeneratorFunction%":needsEval,"%Int8Array%":typeof Int8Array==="undefined"?undefined2:Int8Array,"%Int16Array%":typeof Int16Array==="undefined"?undefined2:Int16Array,"%Int32Array%":typeof Int32Array==="undefined"?undefined2:Int32Array,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":hasSymbols&&getProto?getProto(getProto([][Symbol.iterator]())):undefined2,"%JSON%":typeof JSON==="object"?JSON:undefined2,"%Map%":typeof Map==="undefined"?undefined2:Map,"%MapIteratorPrototype%":typeof Map==="undefined"||!hasSymbols||!getProto?undefined2:getProto((new Map())[Symbol.iterator]()),"%Math%":Math,"%Number%":Number,"%Object%":Object,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":typeof Promise==="undefined"?undefined2:Promise,"%Proxy%":typeof Proxy==="undefined"?undefined2:Proxy,"%RangeError%":RangeError,"%ReferenceError%":ReferenceError,"%Reflect%":typeof Reflect==="undefined"?undefined2:Reflect,"%RegExp%":RegExp,"%Set%":typeof Set==="undefined"?undefined2:Set,"%SetIteratorPrototype%":typeof Set==="undefined"||!hasSymbols||!getProto?undefined2:getProto((new Set())[Symbol.iterator]()),"%SharedArrayBuffer%":typeof SharedArrayBuffer==="undefined"?undefined2:SharedArrayBuffer,"%String%":String,"%StringIteratorPrototype%":hasSymbols&&getProto?getProto(""[Symbol.iterator]()):undefined2,"%Symbol%":hasSymbols?Symbol:undefined2,"%SyntaxError%":$SyntaxError,"%ThrowTypeError%":ThrowTypeError,"%TypedArray%":TypedArray,"%TypeError%":$TypeError,"%Uint8Array%":typeof Uint8Array==="undefined"?undefined2:Uint8Array,"%Uint8ClampedArray%":typeof Uint8ClampedArray==="undefined"?undefined2:Uint8ClampedArray,"%Uint16Array%":typeof Uint16Array==="undefined"?undefined2:Uint16Array,"%Uint32Array%":typeof Uint32Array==="undefined"?undefined2:Uint32Array,"%URIError%":URIError,"%WeakMap%":typeof WeakMap==="undefined"?undefined2:WeakMap,"%WeakRef%":typeof WeakRef==="undefined"?undefined2:WeakRef,"%WeakSet%":typeof WeakSet==="undefined"?undefined2:WeakSet};if(getProto){try{null.error;}catch(e){errorProto=getProto(getProto(e));INTRINSICS["%Error.prototype%"]=errorProto;}}
var errorProto;var doEval=function doEval2(name){var value;if(name==="%AsyncFunction%"){value=getEvalledConstructor("async function () {}");}else if(name==="%GeneratorFunction%"){value=getEvalledConstructor("function* () {}");}else if(name==="%AsyncGeneratorFunction%"){value=getEvalledConstructor("async function* () {}");}else if(name==="%AsyncGenerator%"){var fn=doEval2("%AsyncGeneratorFunction%");if(fn){value=fn.prototype;}}else if(name==="%AsyncIteratorPrototype%"){var gen=doEval2("%AsyncGenerator%");if(gen&&getProto){value=getProto(gen.prototype);}}
INTRINSICS[name]=value;return value;};var LEGACY_ALIASES={"%ArrayBufferPrototype%":["ArrayBuffer","prototype"],"%ArrayPrototype%":["Array","prototype"],"%ArrayProto_entries%":["Array","prototype","entries"],"%ArrayProto_forEach%":["Array","prototype","forEach"],"%ArrayProto_keys%":["Array","prototype","keys"],"%ArrayProto_values%":["Array","prototype","values"],"%AsyncFunctionPrototype%":["AsyncFunction","prototype"],"%AsyncGenerator%":["AsyncGeneratorFunction","prototype"],"%AsyncGeneratorPrototype%":["AsyncGeneratorFunction","prototype","prototype"],"%BooleanPrototype%":["Boolean","prototype"],"%DataViewPrototype%":["DataView","prototype"],"%DatePrototype%":["Date","prototype"],"%ErrorPrototype%":["Error","prototype"],"%EvalErrorPrototype%":["EvalError","prototype"],"%Float32ArrayPrototype%":["Float32Array","prototype"],"%Float64ArrayPrototype%":["Float64Array","prototype"],"%FunctionPrototype%":["Function","prototype"],"%Generator%":["GeneratorFunction","prototype"],"%GeneratorPrototype%":["GeneratorFunction","prototype","prototype"],"%Int8ArrayPrototype%":["Int8Array","prototype"],"%Int16ArrayPrototype%":["Int16Array","prototype"],"%Int32ArrayPrototype%":["Int32Array","prototype"],"%JSONParse%":["JSON","parse"],"%JSONStringify%":["JSON","stringify"],"%MapPrototype%":["Map","prototype"],"%NumberPrototype%":["Number","prototype"],"%ObjectPrototype%":["Object","prototype"],"%ObjProto_toString%":["Object","prototype","toString"],"%ObjProto_valueOf%":["Object","prototype","valueOf"],"%PromisePrototype%":["Promise","prototype"],"%PromiseProto_then%":["Promise","prototype","then"],"%Promise_all%":["Promise","all"],"%Promise_reject%":["Promise","reject"],"%Promise_resolve%":["Promise","resolve"],"%RangeErrorPrototype%":["RangeError","prototype"],"%ReferenceErrorPrototype%":["ReferenceError","prototype"],"%RegExpPrototype%":["RegExp","prototype"],"%SetPrototype%":["Set","prototype"],"%SharedArrayBufferPrototype%":["SharedArrayBuffer","prototype"],"%StringPrototype%":["String","prototype"],"%SymbolPrototype%":["Symbol","prototype"],"%SyntaxErrorPrototype%":["SyntaxError","prototype"],"%TypedArrayPrototype%":["TypedArray","prototype"],"%TypeErrorPrototype%":["TypeError","prototype"],"%Uint8ArrayPrototype%":["Uint8Array","prototype"],"%Uint8ClampedArrayPrototype%":["Uint8ClampedArray","prototype"],"%Uint16ArrayPrototype%":["Uint16Array","prototype"],"%Uint32ArrayPrototype%":["Uint32Array","prototype"],"%URIErrorPrototype%":["URIError","prototype"],"%WeakMapPrototype%":["WeakMap","prototype"],"%WeakSetPrototype%":["WeakSet","prototype"]};var bind=require_function_bind();var hasOwn=require_hasown();var $concat=bind.call(Function.call,Array.prototype.concat);var $spliceApply=bind.call(Function.apply,Array.prototype.splice);var $replace=bind.call(Function.call,String.prototype.replace);var $strSlice=bind.call(Function.call,String.prototype.slice);var $exec=bind.call(Function.call,RegExp.prototype.exec);var rePropName3=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;var reEscapeChar3=/\\(\\)?/g;var stringToPath3=function stringToPath4(string){var first=$strSlice(string,0,1);var last4=$strSlice(string,-1);if(first==="%"&&last4!=="%"){throw new $SyntaxError("invalid intrinsic syntax, expected closing `%`");}else if(last4==="%"&&first!=="%"){throw new $SyntaxError("invalid intrinsic syntax, expected opening `%`");}
var result=[];$replace(string,rePropName3,function(match,number4,quote,subString){result[result.length]=quote?$replace(subString,reEscapeChar3,"$1"):number4||match;});return result;};var getBaseIntrinsic=function getBaseIntrinsic2(name,allowMissing){var intrinsicName=name;var alias;if(hasOwn(LEGACY_ALIASES,intrinsicName)){alias=LEGACY_ALIASES[intrinsicName];intrinsicName="%"+alias[0]+"%";}
if(hasOwn(INTRINSICS,intrinsicName)){var value=INTRINSICS[intrinsicName];if(value===needsEval){value=doEval(intrinsicName);}
if(typeof value==="undefined"&&!allowMissing){throw new $TypeError("intrinsic "+name+" exists, but is not available. Please file an issue!");}
return{alias,name:intrinsicName,value};}
throw new $SyntaxError("intrinsic "+name+" does not exist!");};module2.exports=function GetIntrinsic(name,allowMissing){if(typeof name!=="string"||name.length===0){throw new $TypeError("intrinsic name must be a non-empty string");}
if(arguments.length>1&&typeof allowMissing!=="boolean"){throw new $TypeError('"allowMissing" argument must be a boolean');}
if($exec(/^%?[^%]*%?$/,name)===null){throw new $SyntaxError("`%` may not be present anywhere but at the beginning and end of the intrinsic name");}
var parts=stringToPath3(name);var intrinsicBaseName=parts.length>0?parts[0]:"";var intrinsic=getBaseIntrinsic("%"+intrinsicBaseName+"%",allowMissing);var intrinsicRealName=intrinsic.name;var value=intrinsic.value;var skipFurtherCaching=false;var alias=intrinsic.alias;if(alias){intrinsicBaseName=alias[0];$spliceApply(parts,$concat([0,1],alias));}
for(var i2=1,isOwn=true;i2<parts.length;i2+=1){var part=parts[i2];var first=$strSlice(part,0,1);var last4=$strSlice(part,-1);if((first==='"'||first==="'"||first==="`"||(last4==='"'||last4==="'"||last4==="`"))&&first!==last4){throw new $SyntaxError("property names with quotes must have matching quotes");}
if(part==="constructor"||!isOwn){skipFurtherCaching=true;}
intrinsicBaseName+="."+part;intrinsicRealName="%"+intrinsicBaseName+"%";if(hasOwn(INTRINSICS,intrinsicRealName)){value=INTRINSICS[intrinsicRealName];}else if(value!=null){if(!(part in value)){if(!allowMissing){throw new $TypeError("base intrinsic for "+name+" exists, but the property is not available.");}
return void 0;}
if($gOPD&&i2+1>=parts.length){var desc=$gOPD(value,part);isOwn=!!desc;if(isOwn&&"get"in desc&&!("originalValue"in desc.get)){value=desc.get;}else{value=value[part];}}else{isOwn=hasOwn(value,part);value=value[part];}
if(isOwn&&!skipFurtherCaching){INTRINSICS[intrinsicRealName]=value;}}}
return value;};}});var require_has_property_descriptors=__commonJS({"../../node_modules/.pnpm/has-property-descriptors@1.0.0/node_modules/has-property-descriptors/index.js"(exports2,module2){"use strict";var GetIntrinsic=require_get_intrinsic();var $defineProperty=GetIntrinsic("%Object.defineProperty%",true);var hasPropertyDescriptors=function hasPropertyDescriptors2(){if($defineProperty){try{$defineProperty({},"a",{value:1});return true;}catch(e){return false;}}
return false;};hasPropertyDescriptors.hasArrayLengthDefineBug=function hasArrayLengthDefineBug(){if(!hasPropertyDescriptors()){return null;}
try{return $defineProperty([],"length",{value:1}).length!==1;}catch(e){return true;}};module2.exports=hasPropertyDescriptors;}});var require_gopd=__commonJS({"../../node_modules/.pnpm/gopd@1.0.1/node_modules/gopd/index.js"(exports2,module2){"use strict";var GetIntrinsic=require_get_intrinsic();var $gOPD=GetIntrinsic("%Object.getOwnPropertyDescriptor%",true);if($gOPD){try{$gOPD([],"length");}catch(e){$gOPD=null;}}
module2.exports=$gOPD;}});var require_define_data_property=__commonJS({"../../node_modules/.pnpm/define-data-property@1.1.1/node_modules/define-data-property/index.js"(exports2,module2){"use strict";var hasPropertyDescriptors=require_has_property_descriptors()();var GetIntrinsic=require_get_intrinsic();var $defineProperty=hasPropertyDescriptors&&GetIntrinsic("%Object.defineProperty%",true);if($defineProperty){try{$defineProperty({},"a",{value:1});}catch(e){$defineProperty=false;}}
var $SyntaxError=GetIntrinsic("%SyntaxError%");var $TypeError=GetIntrinsic("%TypeError%");var gopd=require_gopd();module2.exports=function defineDataProperty(obj,property3,value){if(!obj||typeof obj!=="object"&&typeof obj!=="function"){throw new $TypeError("`obj` must be an object or a function`");}
if(typeof property3!=="string"&&typeof property3!=="symbol"){throw new $TypeError("`property` must be a string or a symbol`");}
if(arguments.length>3&&typeof arguments[3]!=="boolean"&&arguments[3]!==null){throw new $TypeError("`nonEnumerable`, if provided, must be a boolean or null");}
if(arguments.length>4&&typeof arguments[4]!=="boolean"&&arguments[4]!==null){throw new $TypeError("`nonWritable`, if provided, must be a boolean or null");}
if(arguments.length>5&&typeof arguments[5]!=="boolean"&&arguments[5]!==null){throw new $TypeError("`nonConfigurable`, if provided, must be a boolean or null");}
if(arguments.length>6&&typeof arguments[6]!=="boolean"){throw new $TypeError("`loose`, if provided, must be a boolean");}
var nonEnumerable=arguments.length>3?arguments[3]:null;var nonWritable=arguments.length>4?arguments[4]:null;var nonConfigurable=arguments.length>5?arguments[5]:null;var loose=arguments.length>6?arguments[6]:false;var desc=!!gopd&&gopd(obj,property3);if($defineProperty){$defineProperty(obj,property3,{configurable:nonConfigurable===null&&desc?desc.configurable:!nonConfigurable,enumerable:nonEnumerable===null&&desc?desc.enumerable:!nonEnumerable,value,writable:nonWritable===null&&desc?desc.writable:!nonWritable});}else if(loose||!nonEnumerable&&!nonWritable&&!nonConfigurable){obj[property3]=value;}else{throw new $SyntaxError("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");}};}});var require_set_function_length=__commonJS({"../../node_modules/.pnpm/set-function-length@1.1.1/node_modules/set-function-length/index.js"(exports2,module2){"use strict";var GetIntrinsic=require_get_intrinsic();var define2=require_define_data_property();var hasDescriptors=require_has_property_descriptors()();var gOPD=require_gopd();var $TypeError=GetIntrinsic("%TypeError%");var $floor=GetIntrinsic("%Math.floor%");module2.exports=function setFunctionLength(fn,length3){if(typeof fn!=="function"){throw new $TypeError("`fn` is not a function");}
if(typeof length3!=="number"||length3<0||length3>4294967295||$floor(length3)!==length3){throw new $TypeError("`length` must be a positive 32-bit integer");}
var loose=arguments.length>2&&!!arguments[2];var functionLengthIsConfigurable=true;var functionLengthIsWritable=true;if("length"in fn&&gOPD){var desc=gOPD(fn,"length");if(desc&&!desc.configurable){functionLengthIsConfigurable=false;}
if(desc&&!desc.writable){functionLengthIsWritable=false;}}
if(functionLengthIsConfigurable||functionLengthIsWritable||!loose){if(hasDescriptors){define2(fn,"length",length3,true,true);}else{define2(fn,"length",length3);}}
return fn;};}});var require_call_bind=__commonJS({"../../node_modules/.pnpm/call-bind@1.0.5/node_modules/call-bind/index.js"(exports2,module2){"use strict";var bind=require_function_bind();var GetIntrinsic=require_get_intrinsic();var setFunctionLength=require_set_function_length();var $TypeError=GetIntrinsic("%TypeError%");var $apply=GetIntrinsic("%Function.prototype.apply%");var $call=GetIntrinsic("%Function.prototype.call%");var $reflectApply=GetIntrinsic("%Reflect.apply%",true)||bind.call($call,$apply);var $defineProperty=GetIntrinsic("%Object.defineProperty%",true);var $max=GetIntrinsic("%Math.max%");if($defineProperty){try{$defineProperty({},"a",{value:1});}catch(e){$defineProperty=null;}}
module2.exports=function callBind(originalFunction){if(typeof originalFunction!=="function"){throw new $TypeError("a function is required");}
var func=$reflectApply(bind,$call,arguments);return setFunctionLength(func,1+$max(0,originalFunction.length-(arguments.length-1)),true);};var applyBind=function applyBind2(){return $reflectApply(bind,$apply,arguments);};if($defineProperty){$defineProperty(module2.exports,"apply",{value:applyBind});}else{module2.exports.apply=applyBind;}}});var require_callBound=__commonJS({"../../node_modules/.pnpm/call-bind@1.0.5/node_modules/call-bind/callBound.js"(exports2,module2){"use strict";var GetIntrinsic=require_get_intrinsic();var callBind=require_call_bind();var $indexOf=callBind(GetIntrinsic("String.prototype.indexOf"));module2.exports=function callBoundIntrinsic(name,allowMissing){var intrinsic=GetIntrinsic(name,!!allowMissing);if(typeof intrinsic==="function"&&$indexOf(name,".prototype.")>-1){return callBind(intrinsic);}
return intrinsic;};}});var require_util=__commonJS({"(disabled):../../node_modules/.pnpm/object-inspect@1.12.2/node_modules/object-inspect/util.inspect"(){}});var require_object_inspect=__commonJS({"../../node_modules/.pnpm/object-inspect@1.12.2/node_modules/object-inspect/index.js"(exports2,module2){var hasMap=typeof Map==="function"&&Map.prototype;var mapSizeDescriptor=Object.getOwnPropertyDescriptor&&hasMap?Object.getOwnPropertyDescriptor(Map.prototype,"size"):null;var mapSize=hasMap&&mapSizeDescriptor&&typeof mapSizeDescriptor.get==="function"?mapSizeDescriptor.get:null;var mapForEach=hasMap&&Map.prototype.forEach;var hasSet=typeof Set==="function"&&Set.prototype;var setSizeDescriptor=Object.getOwnPropertyDescriptor&&hasSet?Object.getOwnPropertyDescriptor(Set.prototype,"size"):null;var setSize=hasSet&&setSizeDescriptor&&typeof setSizeDescriptor.get==="function"?setSizeDescriptor.get:null;var setForEach=hasSet&&Set.prototype.forEach;var hasWeakMap=typeof WeakMap==="function"&&WeakMap.prototype;var weakMapHas=hasWeakMap?WeakMap.prototype.has:null;var hasWeakSet=typeof WeakSet==="function"&&WeakSet.prototype;var weakSetHas=hasWeakSet?WeakSet.prototype.has:null;var hasWeakRef=typeof WeakRef==="function"&&WeakRef.prototype;var weakRefDeref=hasWeakRef?WeakRef.prototype.deref:null;var booleanValueOf=Boolean.prototype.valueOf;var objectToString3=Object.prototype.toString;var functionToString=Function.prototype.toString;var $match=String.prototype.match;var $slice=String.prototype.slice;var $replace=String.prototype.replace;var $toUpperCase=String.prototype.toUpperCase;var $toLowerCase=String.prototype.toLowerCase;var $test=RegExp.prototype.test;var $concat=Array.prototype.concat;var $join=Array.prototype.join;var $arrSlice=Array.prototype.slice;var $floor=Math.floor;var bigIntValueOf=typeof BigInt==="function"?BigInt.prototype.valueOf:null;var gOPS=Object.getOwnPropertySymbols;var symToString=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?Symbol.prototype.toString:null;var hasShammedSymbols=typeof Symbol==="function"&&typeof Symbol.iterator==="object";var toStringTag=typeof Symbol==="function"&&Symbol.toStringTag&&(typeof Symbol.toStringTag===hasShammedSymbols?"object":"symbol")?Symbol.toStringTag:null;var isEnumerable=Object.prototype.propertyIsEnumerable;var gPO=(typeof Reflect==="function"?Reflect.getPrototypeOf:Object.getPrototypeOf)||([].__proto__===Array.prototype?function(O){return O.__proto__;}:null);function addNumericSeparator(num,str3){if(num===Infinity||num===-Infinity||num!==num||num&&num>-1e3&&num<1e3||$test.call(/e/,str3)){return str3;}
var sepRegex=/[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;if(typeof num==="number"){var int=num<0?-$floor(-num):$floor(num);if(int!==num){var intStr=String(int);var dec=$slice.call(str3,intStr.length+1);return $replace.call(intStr,sepRegex,"$&_")+"."+$replace.call($replace.call(dec,/([0-9]{3})/g,"$&_"),/_$/,"");}}
return $replace.call(str3,sepRegex,"$&_");}
var utilInspect=require_util();var inspectCustom=utilInspect.custom;var inspectSymbol=isSymbol3(inspectCustom)?inspectCustom:null;module2.exports=function inspect_(obj,options,depth,seen){var opts=options||{};if(has3(opts,"quoteStyle")&&(opts.quoteStyle!=="single"&&opts.quoteStyle!=="double")){throw new TypeError('option "quoteStyle" must be "single" or "double"');}
if(has3(opts,"maxStringLength")&&(typeof opts.maxStringLength==="number"?opts.maxStringLength<0&&opts.maxStringLength!==Infinity:opts.maxStringLength!==null)){throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');}
var customInspect=has3(opts,"customInspect")?opts.customInspect:true;if(typeof customInspect!=="boolean"&&customInspect!=="symbol"){throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");}
if(has3(opts,"indent")&&opts.indent!==null&&opts.indent!=="	"&&!(parseInt(opts.indent,10)===opts.indent&&opts.indent>0)){throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');}
if(has3(opts,"numericSeparator")&&typeof opts.numericSeparator!=="boolean"){throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');}
var numericSeparator=opts.numericSeparator;if(typeof obj==="undefined"){return"undefined";}
if(obj===null){return"null";}
if(typeof obj==="boolean"){return obj?"true":"false";}
if(typeof obj==="string"){return inspectString(obj,opts);}
if(typeof obj==="number"){if(obj===0){return Infinity/obj>0?"0":"-0";}
var str3=String(obj);return numericSeparator?addNumericSeparator(obj,str3):str3;}
if(typeof obj==="bigint"){var bigIntStr=String(obj)+"n";return numericSeparator?addNumericSeparator(obj,bigIntStr):bigIntStr;}
var maxDepth=typeof opts.depth==="undefined"?5:opts.depth;if(typeof depth==="undefined"){depth=0;}
if(depth>=maxDepth&&maxDepth>0&&typeof obj==="object"){return isArray3(obj)?"[Array]":"[Object]";}
var indent=getIndent(opts,depth);if(typeof seen==="undefined"){seen=[];}else if(indexOf2(seen,obj)>=0){return"[Circular]";}
function inspect(value,from,noIndent){if(from){seen=$arrSlice.call(seen);seen.push(from);}
if(noIndent){var newOpts={depth:opts.depth};if(has3(opts,"quoteStyle")){newOpts.quoteStyle=opts.quoteStyle;}
return inspect_(value,newOpts,depth+1,seen);}
return inspect_(value,opts,depth+1,seen);}
if(typeof obj==="function"&&!isRegExp(obj)){var name=nameOf(obj);var keys3=arrObjKeys(obj,inspect);return"[Function"+(name?": "+name:" (anonymous)")+"]"+(keys3.length>0?" { "+$join.call(keys3,", ")+" }":"");}
if(isSymbol3(obj)){var symString=hasShammedSymbols?$replace.call(String(obj),/^(Symbol\(.*\))_[^)]*$/,"$1"):symToString.call(obj);return typeof obj==="object"&&!hasShammedSymbols?markBoxed(symString):symString;}
if(isElement(obj)){var s="<"+$toLowerCase.call(String(obj.nodeName));var attrs=obj.attributes||[];for(var i2=0;i2<attrs.length;i2++){s+=" "+attrs[i2].name+"="+wrapQuotes(quote(attrs[i2].value),"double",opts);}
s+=">";if(obj.childNodes&&obj.childNodes.length){s+="...";}
s+="</"+$toLowerCase.call(String(obj.nodeName))+">";return s;}
if(isArray3(obj)){if(obj.length===0){return"[]";}
var xs=arrObjKeys(obj,inspect);if(indent&&!singleLineValues(xs)){return"["+indentedJoin(xs,indent)+"]";}
return"[ "+$join.call(xs,", ")+" ]";}
if(isError(obj)){var parts=arrObjKeys(obj,inspect);if(!("cause"in Error.prototype)&&"cause"in obj&&!isEnumerable.call(obj,"cause")){return"{ ["+String(obj)+"] "+$join.call($concat.call("[cause]: "+inspect(obj.cause),parts),", ")+" }";}
if(parts.length===0){return"["+String(obj)+"]";}
return"{ ["+String(obj)+"] "+$join.call(parts,", ")+" }";}
if(typeof obj==="object"&&customInspect){if(inspectSymbol&&typeof obj[inspectSymbol]==="function"&&utilInspect){return utilInspect(obj,{depth:maxDepth-depth});}else if(customInspect!=="symbol"&&typeof obj.inspect==="function"){return obj.inspect();}}
if(isMap2(obj)){var mapParts=[];mapForEach.call(obj,function(value,key){mapParts.push(inspect(key,obj,true)+" => "+inspect(value,obj));});return collectionOf("Map",mapSize.call(obj),mapParts,indent);}
if(isSet2(obj)){var setParts=[];setForEach.call(obj,function(value){setParts.push(inspect(value,obj));});return collectionOf("Set",setSize.call(obj),setParts,indent);}
if(isWeakMap(obj)){return weakCollectionOf("WeakMap");}
if(isWeakSet(obj)){return weakCollectionOf("WeakSet");}
if(isWeakRef(obj)){return weakCollectionOf("WeakRef");}
if(isNumber3(obj)){return markBoxed(inspect(Number(obj)));}
if(isBigInt(obj)){return markBoxed(inspect(bigIntValueOf.call(obj)));}
if(isBoolean(obj)){return markBoxed(booleanValueOf.call(obj));}
if(isString3(obj)){return markBoxed(inspect(String(obj)));}
if(!isDate(obj)&&!isRegExp(obj)){var ys=arrObjKeys(obj,inspect);var isPlainObject=gPO?gPO(obj)===Object.prototype:obj instanceof Object||obj.constructor===Object;var protoTag=obj instanceof Object?"":"null prototype";var stringTag3=!isPlainObject&&toStringTag&&Object(obj)===obj&&toStringTag in obj?$slice.call(toStr(obj),8,-1):protoTag?"Object":"";var constructorTag=isPlainObject||typeof obj.constructor!=="function"?"":obj.constructor.name?obj.constructor.name+" ":"";var tag2=constructorTag+(stringTag3||protoTag?"["+$join.call($concat.call([],stringTag3||[],protoTag||[]),": ")+"] ":"");if(ys.length===0){return tag2+"{}";}
if(indent){return tag2+"{"+indentedJoin(ys,indent)+"}";}
return tag2+"{ "+$join.call(ys,", ")+" }";}
return String(obj);};function wrapQuotes(s,defaultStyle,opts){var quoteChar=(opts.quoteStyle||defaultStyle)==="double"?'"':"'";return quoteChar+s+quoteChar;}
function quote(s){return $replace.call(String(s),/"/g,"&quot;");}
function isArray3(obj){return toStr(obj)==="[object Array]"&&(!toStringTag||!(typeof obj==="object"&&toStringTag in obj));}
function isDate(obj){return toStr(obj)==="[object Date]"&&(!toStringTag||!(typeof obj==="object"&&toStringTag in obj));}
function isRegExp(obj){return toStr(obj)==="[object RegExp]"&&(!toStringTag||!(typeof obj==="object"&&toStringTag in obj));}
function isError(obj){return toStr(obj)==="[object Error]"&&(!toStringTag||!(typeof obj==="object"&&toStringTag in obj));}
function isString3(obj){return toStr(obj)==="[object String]"&&(!toStringTag||!(typeof obj==="object"&&toStringTag in obj));}
function isNumber3(obj){return toStr(obj)==="[object Number]"&&(!toStringTag||!(typeof obj==="object"&&toStringTag in obj));}
function isBoolean(obj){return toStr(obj)==="[object Boolean]"&&(!toStringTag||!(typeof obj==="object"&&toStringTag in obj));}
function isSymbol3(obj){if(hasShammedSymbols){return obj&&typeof obj==="object"&&obj instanceof Symbol;}
if(typeof obj==="symbol"){return true;}
if(!obj||typeof obj!=="object"||!symToString){return false;}
try{symToString.call(obj);return true;}catch(e){}
return false;}
function isBigInt(obj){if(!obj||typeof obj!=="object"||!bigIntValueOf){return false;}
try{bigIntValueOf.call(obj);return true;}catch(e){}
return false;}
var hasOwn=Object.prototype.hasOwnProperty||function(key){return key in this;};function has3(obj,key){return hasOwn.call(obj,key);}
function toStr(obj){return objectToString3.call(obj);}
function nameOf(f){if(f.name){return f.name;}
var m=$match.call(functionToString.call(f),/^function\s*([\w$]+)/);if(m){return m[1];}
return null;}
function indexOf2(xs,x2){if(xs.indexOf){return xs.indexOf(x2);}
for(var i2=0,l=xs.length;i2<l;i2++){if(xs[i2]===x2){return i2;}}
return-1;}
function isMap2(x2){if(!mapSize||!x2||typeof x2!=="object"){return false;}
try{mapSize.call(x2);try{setSize.call(x2);}catch(s){return true;}
return x2 instanceof Map;}catch(e){}
return false;}
function isWeakMap(x2){if(!weakMapHas||!x2||typeof x2!=="object"){return false;}
try{weakMapHas.call(x2,weakMapHas);try{weakSetHas.call(x2,weakSetHas);}catch(s){return true;}
return x2 instanceof WeakMap;}catch(e){}
return false;}
function isWeakRef(x2){if(!weakRefDeref||!x2||typeof x2!=="object"){return false;}
try{weakRefDeref.call(x2);return true;}catch(e){}
return false;}
function isSet2(x2){if(!setSize||!x2||typeof x2!=="object"){return false;}
try{setSize.call(x2);try{mapSize.call(x2);}catch(m){return true;}
return x2 instanceof Set;}catch(e){}
return false;}
function isWeakSet(x2){if(!weakSetHas||!x2||typeof x2!=="object"){return false;}
try{weakSetHas.call(x2,weakSetHas);try{weakMapHas.call(x2,weakMapHas);}catch(s){return true;}
return x2 instanceof WeakSet;}catch(e){}
return false;}
function isElement(x2){if(!x2||typeof x2!=="object"){return false;}
if(typeof HTMLElement!=="undefined"&&x2 instanceof HTMLElement){return true;}
return typeof x2.nodeName==="string"&&typeof x2.getAttribute==="function";}
function inspectString(str3,opts){if(str3.length>opts.maxStringLength){var remaining=str3.length-opts.maxStringLength;var trailer="... "+remaining+" more character"+(remaining>1?"s":"");return inspectString($slice.call(str3,0,opts.maxStringLength),opts)+trailer;}
var s=$replace.call($replace.call(str3,/(['\\])/g,"\\$1"),/[\x00-\x1f]/g,lowbyte);return wrapQuotes(s,"single",opts);}
function lowbyte(c){var n2=c.charCodeAt(0);var x2={8:"b",9:"t",10:"n",12:"f",13:"r"}[n2];if(x2){return"\\"+x2;}
return"\\x"+(n2<16?"0":"")+$toUpperCase.call(n2.toString(16));}
function markBoxed(str3){return"Object("+str3+")";}
function weakCollectionOf(type){return type+" { ? }";}
function collectionOf(type,size4,entries,indent){var joinedEntries=indent?indentedJoin(entries,indent):$join.call(entries,", ");return type+" ("+size4+") {"+joinedEntries+"}";}
function singleLineValues(xs){for(var i2=0;i2<xs.length;i2++){if(indexOf2(xs[i2],"\n")>=0){return false;}}
return true;}
function getIndent(opts,depth){var baseIndent;if(opts.indent==="	"){baseIndent="	";}else if(typeof opts.indent==="number"&&opts.indent>0){baseIndent=$join.call(Array(opts.indent+1)," ");}else{return null;}
return{base:baseIndent,prev:$join.call(Array(depth+1),baseIndent)};}
function indentedJoin(xs,indent){if(xs.length===0){return"";}
var lineJoiner="\n"+indent.prev+indent.base;return lineJoiner+$join.call(xs,","+lineJoiner)+"\n"+indent.prev;}
function arrObjKeys(obj,inspect){var isArr=isArray3(obj);var xs=[];if(isArr){xs.length=obj.length;for(var i2=0;i2<obj.length;i2++){xs[i2]=has3(obj,i2)?inspect(obj[i2],obj):"";}}
var syms=typeof gOPS==="function"?gOPS(obj):[];var symMap;if(hasShammedSymbols){symMap={};for(var k=0;k<syms.length;k++){symMap["$"+syms[k]]=syms[k];}}
for(var key in obj){if(!has3(obj,key)){continue;}
if(isArr&&String(Number(key))===key&&key<obj.length){continue;}
if(hasShammedSymbols&&symMap["$"+key]instanceof Symbol){continue;}else if($test.call(/[^\w$]/,key)){xs.push(inspect(key,obj)+": "+inspect(obj[key],obj));}else{xs.push(key+": "+inspect(obj[key],obj));}}
if(typeof gOPS==="function"){for(var j=0;j<syms.length;j++){if(isEnumerable.call(obj,syms[j])){xs.push("["+inspect(syms[j])+"]: "+inspect(obj[syms[j]],obj));}}}
return xs;}}});var require_side_channel=__commonJS({"../../node_modules/.pnpm/side-channel@1.0.4/node_modules/side-channel/index.js"(exports2,module2){"use strict";var GetIntrinsic=require_get_intrinsic();var callBound=require_callBound();var inspect=require_object_inspect();var $TypeError=GetIntrinsic("%TypeError%");var $WeakMap=GetIntrinsic("%WeakMap%",true);var $Map=GetIntrinsic("%Map%",true);var $weakMapGet=callBound("WeakMap.prototype.get",true);var $weakMapSet=callBound("WeakMap.prototype.set",true);var $weakMapHas=callBound("WeakMap.prototype.has",true);var $mapGet=callBound("Map.prototype.get",true);var $mapSet=callBound("Map.prototype.set",true);var $mapHas=callBound("Map.prototype.has",true);var listGetNode=function(list,key){for(var prev=list,curr;(curr=prev.next)!==null;prev=curr){if(curr.key===key){prev.next=curr.next;curr.next=list.next;list.next=curr;return curr;}}};var listGet=function(objects,key){var node2=listGetNode(objects,key);return node2&&node2.value;};var listSet=function(objects,key,value){var node2=listGetNode(objects,key);if(node2){node2.value=value;}else{objects.next={key,next:objects.next,value};}};var listHas=function(objects,key){return!!listGetNode(objects,key);};module2.exports=function getSideChannel(){var $wm;var $m;var $o;var channel={assert:function(key){if(!channel.has(key)){throw new $TypeError("Side channel does not contain "+inspect(key));}},get:function(key){if($WeakMap&&key&&(typeof key==="object"||typeof key==="function")){if($wm){return $weakMapGet($wm,key);}}else if($Map){if($m){return $mapGet($m,key);}}else{if($o){return listGet($o,key);}}},has:function(key){if($WeakMap&&key&&(typeof key==="object"||typeof key==="function")){if($wm){return $weakMapHas($wm,key);}}else if($Map){if($m){return $mapHas($m,key);}}else{if($o){return listHas($o,key);}}
return false;},set:function(key,value){if($WeakMap&&key&&(typeof key==="object"||typeof key==="function")){if(!$wm){$wm=new $WeakMap();}
$weakMapSet($wm,key,value);}else if($Map){if(!$m){$m=new $Map();}
$mapSet($m,key,value);}else{if(!$o){$o={key:{},next:null};}
listSet($o,key,value);}}};return channel;};}});var require_formats=__commonJS({"../../node_modules/.pnpm/qs@6.11.2/node_modules/qs/lib/formats.js"(exports2,module2){"use strict";var replace=String.prototype.replace;var percentTwenties=/%20/g;var Format={RFC1738:"RFC1738",RFC3986:"RFC3986"};module2.exports={"default":Format.RFC3986,formatters:{RFC1738:function(value){return replace.call(value,percentTwenties,"+");},RFC3986:function(value){return String(value);}},RFC1738:Format.RFC1738,RFC3986:Format.RFC3986};}});var require_utils=__commonJS({"../../node_modules/.pnpm/qs@6.11.2/node_modules/qs/lib/utils.js"(exports2,module2){"use strict";var formats=require_formats();var has3=Object.prototype.hasOwnProperty;var isArray3=Array.isArray;var hexTable=function(){var array=[];for(var i2=0;i2<256;++i2){array.push("%"+((i2<16?"0":"")+i2.toString(16)).toUpperCase());}
return array;}();var compactQueue=function compactQueue2(queue){while(queue.length>1){var item=queue.pop();var obj=item.obj[item.prop];if(isArray3(obj)){var compacted=[];for(var j=0;j<obj.length;++j){if(typeof obj[j]!=="undefined"){compacted.push(obj[j]);}}
item.obj[item.prop]=compacted;}}};var arrayToObject=function arrayToObject2(source,options){var obj=options&&options.plainObjects?Object.create(null):{};for(var i2=0;i2<source.length;++i2){if(typeof source[i2]!=="undefined"){obj[i2]=source[i2];}}
return obj;};var merge=function merge2(target,source,options){if(!source){return target;}
if(typeof source!=="object"){if(isArray3(target)){target.push(source);}else if(target&&typeof target==="object"){if(options&&(options.plainObjects||options.allowPrototypes)||!has3.call(Object.prototype,source)){target[source]=true;}}else{return[target,source];}
return target;}
if(!target||typeof target!=="object"){return[target].concat(source);}
var mergeTarget=target;if(isArray3(target)&&!isArray3(source)){mergeTarget=arrayToObject(target,options);}
if(isArray3(target)&&isArray3(source)){source.forEach(function(item,i2){if(has3.call(target,i2)){var targetItem=target[i2];if(targetItem&&typeof targetItem==="object"&&item&&typeof item==="object"){target[i2]=merge2(targetItem,item,options);}else{target.push(item);}}else{target[i2]=item;}});return target;}
return Object.keys(source).reduce(function(acc,key){var value=source[key];if(has3.call(acc,key)){acc[key]=merge2(acc[key],value,options);}else{acc[key]=value;}
return acc;},mergeTarget);};var assign=function assignSingleSource(target,source){return Object.keys(source).reduce(function(acc,key){acc[key]=source[key];return acc;},target);};var decode=function(str3,decoder,charset){var strWithoutPlus=str3.replace(/\+/g," ");if(charset==="iso-8859-1"){return strWithoutPlus.replace(/%[0-9a-f]{2}/gi,unescape);}
try{return decodeURIComponent(strWithoutPlus);}catch(e){return strWithoutPlus;}};var encode=function encode2(str3,defaultEncoder,charset,kind,format){if(str3.length===0){return str3;}
var string=str3;if(typeof str3==="symbol"){string=Symbol.prototype.toString.call(str3);}else if(typeof str3!=="string"){string=String(str3);}
if(charset==="iso-8859-1"){return escape(string).replace(/%u[0-9a-f]{4}/gi,function($0){return"%26%23"+parseInt($0.slice(2),16)+"%3B";});}
var out="";for(var i2=0;i2<string.length;++i2){var c=string.charCodeAt(i2);if(c===45||c===46||c===95||c===126||c>=48&&c<=57||c>=65&&c<=90||c>=97&&c<=122||format===formats.RFC1738&&(c===40||c===41)){out+=string.charAt(i2);continue;}
if(c<128){out=out+hexTable[c];continue;}
if(c<2048){out=out+(hexTable[192|c>>6]+hexTable[128|c&63]);continue;}
if(c<55296||c>=57344){out=out+(hexTable[224|c>>12]+hexTable[128|c>>6&63]+hexTable[128|c&63]);continue;}
i2+=1;c=65536+((c&1023)<<10|string.charCodeAt(i2)&1023);out+=hexTable[240|c>>18]+hexTable[128|c>>12&63]+hexTable[128|c>>6&63]+hexTable[128|c&63];}
return out;};var compact2=function compact3(value){var queue=[{obj:{o:value},prop:"o"}];var refs=[];for(var i2=0;i2<queue.length;++i2){var item=queue[i2];var obj=item.obj[item.prop];var keys3=Object.keys(obj);for(var j=0;j<keys3.length;++j){var key=keys3[j];var val=obj[key];if(typeof val==="object"&&val!==null&&refs.indexOf(val)===-1){queue.push({obj,prop:key});refs.push(val);}}}
compactQueue(queue);return value;};var isRegExp=function isRegExp2(obj){return Object.prototype.toString.call(obj)==="[object RegExp]";};var isBuffer3=function isBuffer4(obj){if(!obj||typeof obj!=="object"){return false;}
return!!(obj.constructor&&obj.constructor.isBuffer&&obj.constructor.isBuffer(obj));};var combine=function combine2(a,b10){return[].concat(a,b10);};var maybeMap=function maybeMap2(val,fn){if(isArray3(val)){var mapped=[];for(var i2=0;i2<val.length;i2+=1){mapped.push(fn(val[i2]));}
return mapped;}
return fn(val);};module2.exports={arrayToObject,assign,combine,compact:compact2,decode,encode,isBuffer:isBuffer3,isRegExp,maybeMap,merge};}});var require_stringify=__commonJS({"../../node_modules/.pnpm/qs@6.11.2/node_modules/qs/lib/stringify.js"(exports2,module2){"use strict";var getSideChannel=require_side_channel();var utils=require_utils();var formats=require_formats();var has3=Object.prototype.hasOwnProperty;var arrayPrefixGenerators={brackets:function brackets(prefix){return prefix+"[]";},comma:"comma",indices:function indices(prefix,key){return prefix+"["+key+"]";},repeat:function repeat(prefix){return prefix;}};var isArray3=Array.isArray;var push=Array.prototype.push;var pushToArray=function(arr2,valueOrArray){push.apply(arr2,isArray3(valueOrArray)?valueOrArray:[valueOrArray]);};var toISO=Date.prototype.toISOString;var defaultFormat=formats["default"];var defaults2={addQueryPrefix:false,allowDots:false,charset:"utf-8",charsetSentinel:false,delimiter:"&",encode:true,encoder:utils.encode,encodeValuesOnly:false,format:defaultFormat,formatter:formats.formatters[defaultFormat],indices:false,serializeDate:function serializeDate(date2){return toISO.call(date2);},skipNulls:false,strictNullHandling:false};var isNonNullishPrimitive=function isNonNullishPrimitive2(v){return typeof v==="string"||typeof v==="number"||typeof v==="boolean"||typeof v==="symbol"||typeof v==="bigint";};var sentinel={};var stringify=function stringify2(object,prefix,generateArrayPrefix,commaRoundTrip,strictNullHandling,skipNulls,encoder,filter3,sort2,allowDots,serializeDate,format,formatter,encodeValuesOnly,charset,sideChannel){var obj=object;var tmpSc=sideChannel;var step=0;var findFlag=false;while((tmpSc=tmpSc.get(sentinel))!==void 0&&!findFlag){var pos=tmpSc.get(object);step+=1;if(typeof pos!=="undefined"){if(pos===step){throw new RangeError("Cyclic object value");}else{findFlag=true;}}
if(typeof tmpSc.get(sentinel)==="undefined"){step=0;}}
if(typeof filter3==="function"){obj=filter3(prefix,obj);}else if(obj instanceof Date){obj=serializeDate(obj);}else if(generateArrayPrefix==="comma"&&isArray3(obj)){obj=utils.maybeMap(obj,function(value2){if(value2 instanceof Date){return serializeDate(value2);}
return value2;});}
if(obj===null){if(strictNullHandling){return encoder&&!encodeValuesOnly?encoder(prefix,defaults2.encoder,charset,"key",format):prefix;}
obj="";}
if(isNonNullishPrimitive(obj)||utils.isBuffer(obj)){if(encoder){var keyValue=encodeValuesOnly?prefix:encoder(prefix,defaults2.encoder,charset,"key",format);return[formatter(keyValue)+"="+formatter(encoder(obj,defaults2.encoder,charset,"value",format))];}
return[formatter(prefix)+"="+formatter(String(obj))];}
var values4=[];if(typeof obj==="undefined"){return values4;}
var objKeys;if(generateArrayPrefix==="comma"&&isArray3(obj)){if(encodeValuesOnly&&encoder){obj=utils.maybeMap(obj,encoder);}
objKeys=[{value:obj.length>0?obj.join(",")||null:void 0}];}else if(isArray3(filter3)){objKeys=filter3;}else{var keys3=Object.keys(obj);objKeys=sort2?keys3.sort(sort2):keys3;}
var adjustedPrefix=commaRoundTrip&&isArray3(obj)&&obj.length===1?prefix+"[]":prefix;for(var j=0;j<objKeys.length;++j){var key=objKeys[j];var value=typeof key==="object"&&typeof key.value!=="undefined"?key.value:obj[key];if(skipNulls&&value===null){continue;}
var keyPrefix=isArray3(obj)?typeof generateArrayPrefix==="function"?generateArrayPrefix(adjustedPrefix,key):adjustedPrefix:adjustedPrefix+(allowDots?"."+key:"["+key+"]");sideChannel.set(object,step);var valueSideChannel=getSideChannel();valueSideChannel.set(sentinel,sideChannel);pushToArray(values4,stringify2(value,keyPrefix,generateArrayPrefix,commaRoundTrip,strictNullHandling,skipNulls,generateArrayPrefix==="comma"&&encodeValuesOnly&&isArray3(obj)?null:encoder,filter3,sort2,allowDots,serializeDate,format,formatter,encodeValuesOnly,charset,valueSideChannel));}
return values4;};var normalizeStringifyOptions=function normalizeStringifyOptions2(opts){if(!opts){return defaults2;}
if(opts.encoder!==null&&typeof opts.encoder!=="undefined"&&typeof opts.encoder!=="function"){throw new TypeError("Encoder has to be a function.");}
var charset=opts.charset||defaults2.charset;if(typeof opts.charset!=="undefined"&&opts.charset!=="utf-8"&&opts.charset!=="iso-8859-1"){throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");}
var format=formats["default"];if(typeof opts.format!=="undefined"){if(!has3.call(formats.formatters,opts.format)){throw new TypeError("Unknown format option provided.");}
format=opts.format;}
var formatter=formats.formatters[format];var filter3=defaults2.filter;if(typeof opts.filter==="function"||isArray3(opts.filter)){filter3=opts.filter;}
return{addQueryPrefix:typeof opts.addQueryPrefix==="boolean"?opts.addQueryPrefix:defaults2.addQueryPrefix,allowDots:typeof opts.allowDots==="undefined"?defaults2.allowDots:!!opts.allowDots,charset,charsetSentinel:typeof opts.charsetSentinel==="boolean"?opts.charsetSentinel:defaults2.charsetSentinel,delimiter:typeof opts.delimiter==="undefined"?defaults2.delimiter:opts.delimiter,encode:typeof opts.encode==="boolean"?opts.encode:defaults2.encode,encoder:typeof opts.encoder==="function"?opts.encoder:defaults2.encoder,encodeValuesOnly:typeof opts.encodeValuesOnly==="boolean"?opts.encodeValuesOnly:defaults2.encodeValuesOnly,filter:filter3,format,formatter,serializeDate:typeof opts.serializeDate==="function"?opts.serializeDate:defaults2.serializeDate,skipNulls:typeof opts.skipNulls==="boolean"?opts.skipNulls:defaults2.skipNulls,sort:typeof opts.sort==="function"?opts.sort:null,strictNullHandling:typeof opts.strictNullHandling==="boolean"?opts.strictNullHandling:defaults2.strictNullHandling};};module2.exports=function(object,opts){var obj=object;var options=normalizeStringifyOptions(opts);var objKeys;var filter3;if(typeof options.filter==="function"){filter3=options.filter;obj=filter3("",obj);}else if(isArray3(options.filter)){filter3=options.filter;objKeys=filter3;}
var keys3=[];if(typeof obj!=="object"||obj===null){return"";}
var arrayFormat;if(opts&&opts.arrayFormat in arrayPrefixGenerators){arrayFormat=opts.arrayFormat;}else if(opts&&"indices"in opts){arrayFormat=opts.indices?"indices":"repeat";}else{arrayFormat="indices";}
var generateArrayPrefix=arrayPrefixGenerators[arrayFormat];if(opts&&"commaRoundTrip"in opts&&typeof opts.commaRoundTrip!=="boolean"){throw new TypeError("`commaRoundTrip` must be a boolean, or absent");}
var commaRoundTrip=generateArrayPrefix==="comma"&&opts&&opts.commaRoundTrip;if(!objKeys){objKeys=Object.keys(obj);}
if(options.sort){objKeys.sort(options.sort);}
var sideChannel=getSideChannel();for(var i2=0;i2<objKeys.length;++i2){var key=objKeys[i2];if(options.skipNulls&&obj[key]===null){continue;}
pushToArray(keys3,stringify(obj[key],key,generateArrayPrefix,commaRoundTrip,options.strictNullHandling,options.skipNulls,options.encode?options.encoder:null,options.filter,options.sort,options.allowDots,options.serializeDate,options.format,options.formatter,options.encodeValuesOnly,options.charset,sideChannel));}
var joined=keys3.join(options.delimiter);var prefix=options.addQueryPrefix===true?"?":"";if(options.charsetSentinel){if(options.charset==="iso-8859-1"){prefix+="utf8=%26%2310003%3B&";}else{prefix+="utf8=%E2%9C%93&";}}
return joined.length>0?prefix+joined:"";};}});var require_parse=__commonJS({"../../node_modules/.pnpm/qs@6.11.2/node_modules/qs/lib/parse.js"(exports2,module2){"use strict";var utils=require_utils();var has3=Object.prototype.hasOwnProperty;var isArray3=Array.isArray;var defaults2={allowDots:false,allowPrototypes:false,allowSparse:false,arrayLimit:20,charset:"utf-8",charsetSentinel:false,comma:false,decoder:utils.decode,delimiter:"&",depth:5,ignoreQueryPrefix:false,interpretNumericEntities:false,parameterLimit:1e3,parseArrays:true,plainObjects:false,strictNullHandling:false};var interpretNumericEntities=function(str3){return str3.replace(/&#(\d+);/g,function($0,numberStr){return String.fromCharCode(parseInt(numberStr,10));});};var parseArrayValue=function(val,options){if(val&&typeof val==="string"&&options.comma&&val.indexOf(",")>-1){return val.split(",");}
return val;};var isoSentinel="utf8=%26%2310003%3B";var charsetSentinel="utf8=%E2%9C%93";var parseValues=function parseQueryStringValues(str3,options){var obj={__proto__:null};var cleanStr=options.ignoreQueryPrefix?str3.replace(/^\?/,""):str3;var limit=options.parameterLimit===Infinity?void 0:options.parameterLimit;var parts=cleanStr.split(options.delimiter,limit);var skipIndex=-1;var i2;var charset=options.charset;if(options.charsetSentinel){for(i2=0;i2<parts.length;++i2){if(parts[i2].indexOf("utf8=")===0){if(parts[i2]===charsetSentinel){charset="utf-8";}else if(parts[i2]===isoSentinel){charset="iso-8859-1";}
skipIndex=i2;i2=parts.length;}}}
for(i2=0;i2<parts.length;++i2){if(i2===skipIndex){continue;}
var part=parts[i2];var bracketEqualsPos=part.indexOf("]=");var pos=bracketEqualsPos===-1?part.indexOf("="):bracketEqualsPos+1;var key,val;if(pos===-1){key=options.decoder(part,defaults2.decoder,charset,"key");val=options.strictNullHandling?null:"";}else{key=options.decoder(part.slice(0,pos),defaults2.decoder,charset,"key");val=utils.maybeMap(parseArrayValue(part.slice(pos+1),options),function(encodedVal){return options.decoder(encodedVal,defaults2.decoder,charset,"value");});}
if(val&&options.interpretNumericEntities&&charset==="iso-8859-1"){val=interpretNumericEntities(val);}
if(part.indexOf("[]=")>-1){val=isArray3(val)?[val]:val;}
if(has3.call(obj,key)){obj[key]=utils.combine(obj[key],val);}else{obj[key]=val;}}
return obj;};var parseObject=function(chain,val,options,valuesParsed){var leaf=valuesParsed?val:parseArrayValue(val,options);for(var i2=chain.length-1;i2>=0;--i2){var obj;var root3=chain[i2];if(root3==="[]"&&options.parseArrays){obj=[].concat(leaf);}else{obj=options.plainObjects?Object.create(null):{};var cleanRoot=root3.charAt(0)==="["&&root3.charAt(root3.length-1)==="]"?root3.slice(1,-1):root3;var index2=parseInt(cleanRoot,10);if(!options.parseArrays&&cleanRoot===""){obj={0:leaf};}else if(!isNaN(index2)&&root3!==cleanRoot&&String(index2)===cleanRoot&&index2>=0&&(options.parseArrays&&index2<=options.arrayLimit)){obj=[];obj[index2]=leaf;}else if(cleanRoot!=="__proto__"){obj[cleanRoot]=leaf;}}
leaf=obj;}
return leaf;};var parseKeys=function parseQueryStringKeys(givenKey,val,options,valuesParsed){if(!givenKey){return;}
var key=options.allowDots?givenKey.replace(/\.([^.[]+)/g, "[$1]") : givenKey;
      var brackets = /(\[[^[\]]*])/;var child=/(\[[^[\]]*])/g;var segment=options.depth>0&&brackets.exec(key);var parent=segment?key.slice(0,segment.index):key;var keys3=[];if(parent){if(!options.plainObjects&&has3.call(Object.prototype,parent)){if(!options.allowPrototypes){return;}}
keys3.push(parent);}
var i2=0;while(options.depth>0&&(segment=child.exec(key))!==null&&i2<options.depth){i2+=1;if(!options.plainObjects&&has3.call(Object.prototype,segment[1].slice(1,-1))){if(!options.allowPrototypes){return;}}
keys3.push(segment[1]);}
if(segment){keys3.push("["+key.slice(segment.index)+"]");}
return parseObject(keys3,val,options,valuesParsed);};var normalizeParseOptions=function normalizeParseOptions2(opts){if(!opts){return defaults2;}
if(opts.decoder!==null&&opts.decoder!==void 0&&typeof opts.decoder!=="function"){throw new TypeError("Decoder has to be a function.");}
if(typeof opts.charset!=="undefined"&&opts.charset!=="utf-8"&&opts.charset!=="iso-8859-1"){throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");}
var charset=typeof opts.charset==="undefined"?defaults2.charset:opts.charset;return{allowDots:typeof opts.allowDots==="undefined"?defaults2.allowDots:!!opts.allowDots,allowPrototypes:typeof opts.allowPrototypes==="boolean"?opts.allowPrototypes:defaults2.allowPrototypes,allowSparse:typeof opts.allowSparse==="boolean"?opts.allowSparse:defaults2.allowSparse,arrayLimit:typeof opts.arrayLimit==="number"?opts.arrayLimit:defaults2.arrayLimit,charset,charsetSentinel:typeof opts.charsetSentinel==="boolean"?opts.charsetSentinel:defaults2.charsetSentinel,comma:typeof opts.comma==="boolean"?opts.comma:defaults2.comma,decoder:typeof opts.decoder==="function"?opts.decoder:defaults2.decoder,delimiter:typeof opts.delimiter==="string"||utils.isRegExp(opts.delimiter)?opts.delimiter:defaults2.delimiter,depth:typeof opts.depth==="number"||opts.depth===false?+opts.depth:defaults2.depth,ignoreQueryPrefix:opts.ignoreQueryPrefix===true,interpretNumericEntities:typeof opts.interpretNumericEntities==="boolean"?opts.interpretNumericEntities:defaults2.interpretNumericEntities,parameterLimit:typeof opts.parameterLimit==="number"?opts.parameterLimit:defaults2.parameterLimit,parseArrays:opts.parseArrays!==false,plainObjects:typeof opts.plainObjects==="boolean"?opts.plainObjects:defaults2.plainObjects,strictNullHandling:typeof opts.strictNullHandling==="boolean"?opts.strictNullHandling:defaults2.strictNullHandling};};module2.exports=function(str3,opts){var options=normalizeParseOptions(opts);if(str3===""||str3===null||typeof str3==="undefined"){return options.plainObjects?Object.create(null):{};}
var tempObj=typeof str3==="string"?parseValues(str3,options):str3;var obj=options.plainObjects?Object.create(null):{};var keys3=Object.keys(tempObj);for(var i2=0;i2<keys3.length;++i2){var key=keys3[i2];var newObj=parseKeys(key,tempObj[key],options,typeof str3==="string");obj=utils.merge(obj,newObj,options);}
if(options.allowSparse===true){return obj;}
return utils.compact(obj);};}});var require_lib=__commonJS({"../../node_modules/.pnpm/qs@6.11.2/node_modules/qs/lib/index.js"(exports2,module2){"use strict";var stringify=require_stringify();var parse9=require_parse();var formats=require_formats();module2.exports={formats,parse:parse9,stringify};}});var require_url=__commonJS({"../../node_modules/.pnpm/url@0.11.3/node_modules/url/url.js"(exports2){"use strict";var punycode=require_punycode();function Url(){this.protocol=null;this.slashes=null;this.auth=null;this.host=null;this.port=null;this.hostname=null;this.hash=null;this.search=null;this.query=null;this.pathname=null;this.path=null;this.href=null;}
var protocolPattern=/^([a-z0-9.+-]+:)/i;var portPattern=/:[0-9]*$/;var simplePathPattern=/^(\/\/?(?!\/)[^?\s]*)(\?[^\s]*)?$/;var delims=["<",">",'"',"`"," ","\r","\n","	"];var unwise=["{","}","|","\\","^","`"].concat(delims);var autoEscape=["'"].concat(unwise);var nonHostChars=["%","/","?",";","#"].concat(autoEscape);var hostEndingChars=["/","?","#"];var hostnameMaxLen=255;var hostnamePartPattern=/^[+a-z0-9A-Z_-]{0,63}$/;var hostnamePartStart=/^([+a-z0-9A-Z_-]{0,63})(.*)$/;var unsafeProtocol={javascript:true,"javascript:":true};var hostlessProtocol={javascript:true,"javascript:":true};var slashedProtocol={http:true,https:true,ftp:true,gopher:true,file:true,"http:":true,"https:":true,"ftp:":true,"gopher:":true,"file:":true};var querystring=require_lib();function urlParse(url,parseQueryString,slashesDenoteHost){if(url&&typeof url==="object"&&url instanceof Url){return url;}
var u=new Url();u.parse(url,parseQueryString,slashesDenoteHost);return u;}
Url.prototype.parse=function(url,parseQueryString,slashesDenoteHost){if(typeof url!=="string"){throw new TypeError("Parameter 'url' must be a string, not "+typeof url);}
var queryIndex=url.indexOf("?"),splitter=queryIndex!==-1&&queryIndex<url.indexOf("#")?"?":"#",uSplit=url.split(splitter),slashRegex=/\\/g;uSplit[0]=uSplit[0].replace(slashRegex,"/");url=uSplit.join(splitter);var rest=url;rest=rest.trim();if(!slashesDenoteHost&&url.split("#").length===1){var simplePath=simplePathPattern.exec(rest);if(simplePath){this.path=rest;this.href=rest;this.pathname=simplePath[1];if(simplePath[2]){this.search=simplePath[2];if(parseQueryString){this.query=querystring.parse(this.search.substr(1));}else{this.query=this.search.substr(1);}}else if(parseQueryString){this.search="";this.query={};}
return this;}}
var proto=protocolPattern.exec(rest);if(proto){proto=proto[0];var lowerProto=proto.toLowerCase();this.protocol=lowerProto;rest=rest.substr(proto.length);}
if(slashesDenoteHost||proto||rest.match(/^\/\/[^@/]+@[^@/]+/)){var slashes=rest.substr(0,2)==="//";if(slashes&&!(proto&&hostlessProtocol[proto])){rest=rest.substr(2);this.slashes=true;}}
if(!hostlessProtocol[proto]&&(slashes||proto&&!slashedProtocol[proto])){var hostEnd=-1;for(var i2=0;i2<hostEndingChars.length;i2++){var hec=rest.indexOf(hostEndingChars[i2]);if(hec!==-1&&(hostEnd===-1||hec<hostEnd)){hostEnd=hec;}}
var auth,atSign;if(hostEnd===-1){atSign=rest.lastIndexOf("@");}else{atSign=rest.lastIndexOf("@",hostEnd);}
if(atSign!==-1){auth=rest.slice(0,atSign);rest=rest.slice(atSign+1);this.auth=decodeURIComponent(auth);}
hostEnd=-1;for(var i2=0;i2<nonHostChars.length;i2++){var hec=rest.indexOf(nonHostChars[i2]);if(hec!==-1&&(hostEnd===-1||hec<hostEnd)){hostEnd=hec;}}
if(hostEnd===-1){hostEnd=rest.length;}
this.host=rest.slice(0,hostEnd);rest=rest.slice(hostEnd);this.parseHost();this.hostname=this.hostname||"";var ipv6Hostname=this.hostname[0]==="["&&this.hostname[this.hostname.length-1]==="]";if(!ipv6Hostname){var hostparts=this.hostname.split(/\./);for(var i2=0,l=hostparts.length;i2<l;i2++){var part=hostparts[i2];if(!part){continue;}
if(!part.match(hostnamePartPattern)){var newpart="";for(var j=0,k=part.length;j<k;j++){if(part.charCodeAt(j)>127){newpart+="x";}else{newpart+=part[j];}}
if(!newpart.match(hostnamePartPattern)){var validParts=hostparts.slice(0,i2);var notHost=hostparts.slice(i2+1);var bit=part.match(hostnamePartStart);if(bit){validParts.push(bit[1]);notHost.unshift(bit[2]);}
if(notHost.length){rest="/"+notHost.join(".")+rest;}
this.hostname=validParts.join(".");break;}}}}
if(this.hostname.length>hostnameMaxLen){this.hostname="";}else{this.hostname=this.hostname.toLowerCase();}
if(!ipv6Hostname){this.hostname=punycode.toASCII(this.hostname);}
var p=this.port?":"+this.port:"";var h=this.hostname||"";this.host=h+p;this.href+=this.host;if(ipv6Hostname){this.hostname=this.hostname.substr(1,this.hostname.length-2);if(rest[0]!=="/"){rest="/"+rest;}}}
if(!unsafeProtocol[lowerProto]){for(var i2=0,l=autoEscape.length;i2<l;i2++){var ae=autoEscape[i2];if(rest.indexOf(ae)===-1){continue;}
var esc=encodeURIComponent(ae);if(esc===ae){esc=escape(ae);}
rest=rest.split(ae).join(esc);}}
var hash=rest.indexOf("#");if(hash!==-1){this.hash=rest.substr(hash);rest=rest.slice(0,hash);}
var qm=rest.indexOf("?");if(qm!==-1){this.search=rest.substr(qm);this.query=rest.substr(qm+1);if(parseQueryString){this.query=querystring.parse(this.query);}
rest=rest.slice(0,qm);}else if(parseQueryString){this.search="";this.query={};}
if(rest){this.pathname=rest;}
if(slashedProtocol[lowerProto]&&this.hostname&&!this.pathname){this.pathname="/";}
if(this.pathname||this.search){var p=this.pathname||"";var s=this.search||"";this.path=p+s;}
this.href=this.format();return this;};function urlFormat(obj){if(typeof obj==="string"){obj=urlParse(obj);}
if(!(obj instanceof Url)){return Url.prototype.format.call(obj);}
return obj.format();}
Url.prototype.format=function(){var auth=this.auth||"";if(auth){auth=encodeURIComponent(auth);auth=auth.replace(/%3A/i,":");auth+="@";}
var protocol=this.protocol||"",pathname=this.pathname||"",hash=this.hash||"",host=false,query="";if(this.host){host=auth+this.host;}else if(this.hostname){host=auth+(this.hostname.indexOf(":")===-1?this.hostname:"["+this.hostname+"]");if(this.port){host+=":"+this.port;}}
if(this.query&&typeof this.query==="object"&&Object.keys(this.query).length){query=querystring.stringify(this.query,{arrayFormat:"repeat",addQueryPrefix:false});}
var search=this.search||query&&"?"+query||"";if(protocol&&protocol.substr(-1)!==":"){protocol+=":";}
if(this.slashes||(!protocol||slashedProtocol[protocol])&&host!==false){host="//"+(host||"");if(pathname&&pathname.charAt(0)!=="/"){pathname="/"+pathname;}}else if(!host){host="";}
if(hash&&hash.charAt(0)!=="#"){hash="#"+hash;}
if(search&&search.charAt(0)!=="?"){search="?"+search;}
pathname=pathname.replace(/[?#]/g,function(match){return encodeURIComponent(match);});search=search.replace("#","%23");return protocol+host+pathname+search+hash;};function urlResolve(source,relative){return urlParse(source,false,true).resolve(relative);}
Url.prototype.resolve=function(relative){return this.resolveObject(urlParse(relative,false,true)).format();};function urlResolveObject(source,relative){if(!source){return relative;}
return urlParse(source,false,true).resolveObject(relative);}
Url.prototype.resolveObject=function(relative){if(typeof relative==="string"){var rel=new Url();rel.parse(relative,false,true);relative=rel;}
var result=new Url();var tkeys=Object.keys(this);for(var tk=0;tk<tkeys.length;tk++){var tkey=tkeys[tk];result[tkey]=this[tkey];}
result.hash=relative.hash;if(relative.href===""){result.href=result.format();return result;}
if(relative.slashes&&!relative.protocol){var rkeys=Object.keys(relative);for(var rk=0;rk<rkeys.length;rk++){var rkey=rkeys[rk];if(rkey!=="protocol"){result[rkey]=relative[rkey];}}
if(slashedProtocol[result.protocol]&&result.hostname&&!result.pathname){result.pathname="/";result.path=result.pathname;}
result.href=result.format();return result;}
if(relative.protocol&&relative.protocol!==result.protocol){if(!slashedProtocol[relative.protocol]){var keys3=Object.keys(relative);for(var v=0;v<keys3.length;v++){var k=keys3[v];result[k]=relative[k];}
result.href=result.format();return result;}
result.protocol=relative.protocol;if(!relative.host&&!hostlessProtocol[relative.protocol]){var relPath=(relative.pathname||"").split("/");while(relPath.length&&!(relative.host=relPath.shift())){}
if(!relative.host){relative.host="";}
if(!relative.hostname){relative.hostname="";}
if(relPath[0]!==""){relPath.unshift("");}
if(relPath.length<2){relPath.unshift("");}
result.pathname=relPath.join("/");}else{result.pathname=relative.pathname;}
result.search=relative.search;result.query=relative.query;result.host=relative.host||"";result.auth=relative.auth;result.hostname=relative.hostname||relative.host;result.port=relative.port;if(result.pathname||result.search){var p=result.pathname||"";var s=result.search||"";result.path=p+s;}
result.slashes=result.slashes||relative.slashes;result.href=result.format();return result;}
var isSourceAbs=result.pathname&&result.pathname.charAt(0)==="/",isRelAbs=relative.host||relative.pathname&&relative.pathname.charAt(0)==="/",mustEndAbs=isRelAbs||isSourceAbs||result.host&&relative.pathname,removeAllDots=mustEndAbs,srcPath=result.pathname&&result.pathname.split("/")||[],relPath=relative.pathname&&relative.pathname.split("/")||[],psychotic=result.protocol&&!slashedProtocol[result.protocol];if(psychotic){result.hostname="";result.port=null;if(result.host){if(srcPath[0]===""){srcPath[0]=result.host;}else{srcPath.unshift(result.host);}}
result.host="";if(relative.protocol){relative.hostname=null;relative.port=null;if(relative.host){if(relPath[0]===""){relPath[0]=relative.host;}else{relPath.unshift(relative.host);}}
relative.host=null;}
mustEndAbs=mustEndAbs&&(relPath[0]===""||srcPath[0]==="");}
if(isRelAbs){result.host=relative.host||relative.host===""?relative.host:result.host;result.hostname=relative.hostname||relative.hostname===""?relative.hostname:result.hostname;result.search=relative.search;result.query=relative.query;srcPath=relPath;}else if(relPath.length){if(!srcPath){srcPath=[];}
srcPath.pop();srcPath=srcPath.concat(relPath);result.search=relative.search;result.query=relative.query;}else if(relative.search!=null){if(psychotic){result.host=srcPath.shift();result.hostname=result.host;var authInHost=result.host&&result.host.indexOf("@")>0?result.host.split("@"):false;if(authInHost){result.auth=authInHost.shift();result.hostname=authInHost.shift();result.host=result.hostname;}}
result.search=relative.search;result.query=relative.query;if(result.pathname!==null||result.search!==null){result.path=(result.pathname?result.pathname:"")+(result.search?result.search:"");}
result.href=result.format();return result;}
if(!srcPath.length){result.pathname=null;if(result.search){result.path="/"+result.search;}else{result.path=null;}
result.href=result.format();return result;}
var last4=srcPath.slice(-1)[0];var hasTrailingSlash=(result.host||relative.host||srcPath.length>1)&&(last4==="."||last4==="..")||last4==="";var up=0;for(var i2=srcPath.length;i2>=0;i2--){last4=srcPath[i2];if(last4==="."){srcPath.splice(i2,1);}else if(last4===".."){srcPath.splice(i2,1);up++;}else if(up){srcPath.splice(i2,1);up--;}}
if(!mustEndAbs&&!removeAllDots){for(;up--;up){srcPath.unshift("..");}}
if(mustEndAbs&&srcPath[0]!==""&&(!srcPath[0]||srcPath[0].charAt(0)!=="/")){srcPath.unshift("");}
if(hasTrailingSlash&&srcPath.join("/").substr(-1)!=="/"){srcPath.push("");}
var isAbsolute=srcPath[0]===""||srcPath[0]&&srcPath[0].charAt(0)==="/";if(psychotic){result.hostname=isAbsolute?"":srcPath.length?srcPath.shift():"";result.host=result.hostname;var authInHost=result.host&&result.host.indexOf("@")>0?result.host.split("@"):false;if(authInHost){result.auth=authInHost.shift();result.hostname=authInHost.shift();result.host=result.hostname;}}
mustEndAbs=mustEndAbs||result.host&&srcPath.length;if(mustEndAbs&&!isAbsolute){srcPath.unshift("");}
if(srcPath.length>0){result.pathname=srcPath.join("/");}else{result.pathname=null;result.path=null;}
if(result.pathname!==null||result.search!==null){result.path=(result.pathname?result.pathname:"")+(result.search?result.search:"");}
result.auth=relative.auth||result.auth;result.slashes=result.slashes||relative.slashes;result.href=result.format();return result;};Url.prototype.parseHost=function(){var host=this.host;var port=portPattern.exec(host);if(port){port=port[0];if(port!==":"){this.port=port.substr(1);}
host=host.substr(0,host.length-port.length);}
if(host){this.hostname=host;}};exports2.parse=urlParse;exports2.resolve=urlResolve;exports2.resolveObject=urlResolveObject;exports2.format=urlFormat;exports2.Url=Url;}});var require_url2=__commonJS({"aliases/url.js"(exports2,module2){var URL=require_url();module2.exports={...URL,fileURLToPath(s){return s||"";}};}});var require_emitter_component=__commonJS({"../../node_modules/.pnpm/emitter-component@1.1.2/node_modules/emitter-component/index.js"(exports2,module2){module2.exports=Emitter;function Emitter(obj){if(obj)
return mixin2(obj);}
function mixin2(obj){for(var key in Emitter.prototype){obj[key]=Emitter.prototype[key];}
return obj;}
Emitter.prototype.on=Emitter.prototype.addEventListener=function(event,fn){this._callbacks=this._callbacks||{};(this._callbacks[event]=this._callbacks[event]||[]).push(fn);return this;};Emitter.prototype.once=function(event,fn){var self2=this;this._callbacks=this._callbacks||{};function on(){self2.off(event,on);fn.apply(this,arguments);}
on.fn=fn;this.on(event,on);return this;};Emitter.prototype.off=Emitter.prototype.removeListener=Emitter.prototype.removeAllListeners=Emitter.prototype.removeEventListener=function(event,fn){this._callbacks=this._callbacks||{};if(0==arguments.length){this._callbacks={};return this;}
var callbacks=this._callbacks[event];if(!callbacks)
return this;if(1==arguments.length){delete this._callbacks[event];return this;}
var cb;for(var i2=0;i2<callbacks.length;i2++){cb=callbacks[i2];if(cb===fn||cb.fn===fn){callbacks.splice(i2,1);break;}}
return this;};Emitter.prototype.emit=function(event){this._callbacks=this._callbacks||{};var args=[].slice.call(arguments,1),callbacks=this._callbacks[event];if(callbacks){callbacks=callbacks.slice(0);for(var i2=0,len2=callbacks.length;i2<len2;++i2){callbacks[i2].apply(this,args);}}
return this;};Emitter.prototype.listeners=function(event){this._callbacks=this._callbacks||{};return this._callbacks[event]||[];};Emitter.prototype.hasListeners=function(event){return!!this.listeners(event).length;};}});var require_stream=__commonJS({"../../node_modules/.pnpm/stream@0.0.2/node_modules/stream/index.js"(exports2,module2){var Emitter=require_emitter_component();function Stream(){Emitter.call(this);}
Stream.prototype=new Emitter();module2.exports=Stream;Stream.Stream=Stream;Stream.prototype.pipe=function(dest,options){var source=this;function ondata(chunk){if(dest.writable){if(false===dest.write(chunk)&&source.pause){source.pause();}}}
source.on("data",ondata);function ondrain(){if(source.readable&&source.resume){source.resume();}}
dest.on("drain",ondrain);if(!dest._isStdio&&(!options||options.end!==false)){source.on("end",onend);source.on("close",onclose);}
var didOnEnd=false;function onend(){if(didOnEnd)
return;didOnEnd=true;dest.end();}
function onclose(){if(didOnEnd)
return;didOnEnd=true;if(typeof dest.destroy==="function")
dest.destroy();}
function onerror(er){cleanup2();if(!this.hasListeners("error")){throw er;}}
source.on("error",onerror);dest.on("error",onerror);function cleanup2(){source.off("data",ondata);dest.off("drain",ondrain);source.off("end",onend);source.off("close",onclose);source.off("error",onerror);dest.off("error",onerror);source.off("end",cleanup2);source.off("close",cleanup2);dest.off("end",cleanup2);dest.off("close",cleanup2);}
source.on("end",cleanup2);source.on("close",cleanup2);dest.on("end",cleanup2);dest.on("close",cleanup2);dest.emit("pipe",source);return dest;};}});var require_base64_js=__commonJS({"../../node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js"(exports2){"use strict";exports2.byteLength=byteLength2;exports2.toByteArray=toByteArray;exports2.fromByteArray=fromByteArray;var lookup=[];var revLookup=[];var Arr=typeof Uint8Array!=="undefined"?Uint8Array:Array;var code="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";for(i2=0,len2=code.length;i2<len2;++i2){lookup[i2]=code[i2];revLookup[code.charCodeAt(i2)]=i2;}
var i2;var len2;revLookup["-".charCodeAt(0)]=62;revLookup["_".charCodeAt(0)]=63;function getLens(b64){var len3=b64.length;if(len3%4>0){throw new Error("Invalid string. Length must be a multiple of 4");}
var validLen=b64.indexOf("=");if(validLen===-1)
validLen=len3;var placeHoldersLen=validLen===len3?0:4-validLen%4;return[validLen,placeHoldersLen];}
function byteLength2(b64){var lens=getLens(b64);var validLen=lens[0];var placeHoldersLen=lens[1];return(validLen+placeHoldersLen)*3/4-placeHoldersLen;}
function _byteLength(b64,validLen,placeHoldersLen){return(validLen+placeHoldersLen)*3/4-placeHoldersLen;}
function toByteArray(b64){var tmp;var lens=getLens(b64);var validLen=lens[0];var placeHoldersLen=lens[1];var arr2=new Arr(_byteLength(b64,validLen,placeHoldersLen));var curByte=0;var len3=placeHoldersLen>0?validLen-4:validLen;var i3;for(i3=0;i3<len3;i3+=4){tmp=revLookup[b64.charCodeAt(i3)]<<18|revLookup[b64.charCodeAt(i3+1)]<<12|revLookup[b64.charCodeAt(i3+2)]<<6|revLookup[b64.charCodeAt(i3+3)];arr2[curByte++]=tmp>>16&255;arr2[curByte++]=tmp>>8&255;arr2[curByte++]=tmp&255;}
if(placeHoldersLen===2){tmp=revLookup[b64.charCodeAt(i3)]<<2|revLookup[b64.charCodeAt(i3+1)]>>4;arr2[curByte++]=tmp&255;}
if(placeHoldersLen===1){tmp=revLookup[b64.charCodeAt(i3)]<<10|revLookup[b64.charCodeAt(i3+1)]<<4|revLookup[b64.charCodeAt(i3+2)]>>2;arr2[curByte++]=tmp>>8&255;arr2[curByte++]=tmp&255;}
return arr2;}
function tripletToBase64(num){return lookup[num>>18&63]+lookup[num>>12&63]+lookup[num>>6&63]+lookup[num&63];}
function encodeChunk(uint82,start,end){var tmp;var output=[];for(var i3=start;i3<end;i3+=3){tmp=(uint82[i3]<<16&16711680)+(uint82[i3+1]<<8&65280)+(uint82[i3+2]&255);output.push(tripletToBase64(tmp));}
return output.join("");}
function fromByteArray(uint82){var tmp;var len3=uint82.length;var extraBytes=len3%3;var parts=[];var maxChunkLength=16383;for(var i3=0,len22=len3-extraBytes;i3<len22;i3+=maxChunkLength){parts.push(encodeChunk(uint82,i3,i3+maxChunkLength>len22?len22:i3+maxChunkLength));}
if(extraBytes===1){tmp=uint82[len3-1];parts.push(lookup[tmp>>2]+lookup[tmp<<4&63]+"==");}else if(extraBytes===2){tmp=(uint82[len3-2]<<8)+uint82[len3-1];parts.push(lookup[tmp>>10]+lookup[tmp>>4&63]+lookup[tmp<<2&63]+"=");}
return parts.join("");}}});var require_ieee754=__commonJS({"../../node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js"(exports2){exports2.read=function(buffer,offset,isLE,mLen,nBytes){var e,m;var eLen=nBytes*8-mLen-1;var eMax=(1<<eLen)-1;var eBias=eMax>>1;var nBits=-7;var i2=isLE?nBytes-1:0;var d=isLE?-1:1;var s=buffer[offset+i2];i2+=d;e=s&(1<<-nBits)-1;s>>=-nBits;nBits+=eLen;for(;nBits>0;e=e*256+buffer[offset+i2],i2+=d,nBits-=8){}
m=e&(1<<-nBits)-1;e>>=-nBits;nBits+=mLen;for(;nBits>0;m=m*256+buffer[offset+i2],i2+=d,nBits-=8){}
if(e===0){e=1-eBias;}else if(e===eMax){return m?NaN:(s?-1:1)*Infinity;}else{m=m+Math.pow(2,mLen);e=e-eBias;}
return(s?-1:1)*m*Math.pow(2,e-mLen);};exports2.write=function(buffer,value,offset,isLE,mLen,nBytes){var e,m,c;var eLen=nBytes*8-mLen-1;var eMax=(1<<eLen)-1;var eBias=eMax>>1;var rt=mLen===23?Math.pow(2,-24)-Math.pow(2,-77):0;var i2=isLE?0:nBytes-1;var d=isLE?1:-1;var s=value<0||value===0&&1/value<0?1:0;value=Math.abs(value);if(isNaN(value)||value===Infinity){m=isNaN(value)?1:0;e=eMax;}else{e=Math.floor(Math.log(value)/Math.LN2);if(value*(c=Math.pow(2,-e))<1){e--;c*=2;}
if(e+eBias>=1){value+=rt/c;}else{value+=rt*Math.pow(2,1-eBias);}
if(value*c>=2){e++;c/=2;}
if(e+eBias>=eMax){m=0;e=eMax;}else if(e+eBias>=1){m=(value*c-1)*Math.pow(2,mLen);e=e+eBias;}else{m=value*Math.pow(2,eBias-1)*Math.pow(2,mLen);e=0;}}
for(;mLen>=8;buffer[offset+i2]=m&255,i2+=d,m/=256,mLen-=8){}
e=e<<mLen|m;eLen+=mLen;for(;eLen>0;buffer[offset+i2]=e&255,i2+=d,e/=256,eLen-=8){}
buffer[offset+i2-d]|=s*128;};}});var require_buffer=__commonJS({"node_modules/buffer/index.js"(exports2){"use strict";var base64=require_base64_js();var ieee754=require_ieee754();var customInspectSymbol=typeof Symbol==="function"&&typeof Symbol["for"]==="function"?Symbol["for"]("nodejs.util.inspect.custom"):null;exports2.Buffer=Buffer5;exports2.SlowBuffer=SlowBuffer;exports2.INSPECT_MAX_BYTES=50;var K_MAX_LENGTH=2147483647;exports2.kMaxLength=K_MAX_LENGTH;Buffer5.TYPED_ARRAY_SUPPORT=typedArraySupport();if(!Buffer5.TYPED_ARRAY_SUPPORT&&typeof console!=="undefined"&&typeof console.error==="function"){console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");}
function typedArraySupport(){try{const arr2=new Uint8Array(1);const proto={foo:function(){return 42;}};Object.setPrototypeOf(proto,Uint8Array.prototype);Object.setPrototypeOf(arr2,proto);return arr2.foo()===42;}catch(e){return false;}}
Object.defineProperty(Buffer5.prototype,"parent",{enumerable:true,get:function(){if(!Buffer5.isBuffer(this))
return void 0;return this.buffer;}});Object.defineProperty(Buffer5.prototype,"offset",{enumerable:true,get:function(){if(!Buffer5.isBuffer(this))
return void 0;return this.byteOffset;}});function createBuffer(length3){if(length3>K_MAX_LENGTH){throw new RangeError('The value "'+length3+'" is invalid for option "size"');}
const buf=new Uint8Array(length3);Object.setPrototypeOf(buf,Buffer5.prototype);return buf;}
function Buffer5(arg,encodingOrOffset,length3){if(typeof arg==="number"){if(typeof encodingOrOffset==="string"){throw new TypeError('The "string" argument must be of type string. Received type number');}
return allocUnsafe2(arg);}
return from(arg,encodingOrOffset,length3);}
Buffer5.poolSize=8192;function from(value,encodingOrOffset,length3){if(typeof value==="string"){return fromString(value,encodingOrOffset);}
if(ArrayBuffer.isView(value)){return fromArrayView(value);}
if(value==null){throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof value);}
if(isInstance(value,ArrayBuffer)||value&&isInstance(value.buffer,ArrayBuffer)){return fromArrayBuffer(value,encodingOrOffset,length3);}
if(typeof SharedArrayBuffer!=="undefined"&&(isInstance(value,SharedArrayBuffer)||value&&isInstance(value.buffer,SharedArrayBuffer))){return fromArrayBuffer(value,encodingOrOffset,length3);}
if(typeof value==="number"){throw new TypeError('The "value" argument must not be of type number. Received type number');}
const valueOf=value.valueOf&&value.valueOf();if(valueOf!=null&&valueOf!==value){return Buffer5.from(valueOf,encodingOrOffset,length3);}
const b10=fromObject(value);if(b10)
return b10;if(typeof Symbol!=="undefined"&&Symbol.toPrimitive!=null&&typeof value[Symbol.toPrimitive]==="function"){return Buffer5.from(value[Symbol.toPrimitive]("string"),encodingOrOffset,length3);}
throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof value);}
Buffer5.from=function(value,encodingOrOffset,length3){return from(value,encodingOrOffset,length3);};Object.setPrototypeOf(Buffer5.prototype,Uint8Array.prototype);Object.setPrototypeOf(Buffer5,Uint8Array);function assertSize(size4){if(typeof size4!=="number"){throw new TypeError('"size" argument must be of type number');}else if(size4<0){throw new RangeError('The value "'+size4+'" is invalid for option "size"');}}
function alloc(size4,fill,encoding){assertSize(size4);if(size4<=0){return createBuffer(size4);}
if(fill!==void 0){return typeof encoding==="string"?createBuffer(size4).fill(fill,encoding):createBuffer(size4).fill(fill);}
return createBuffer(size4);}
Buffer5.alloc=function(size4,fill,encoding){return alloc(size4,fill,encoding);};function allocUnsafe2(size4){assertSize(size4);return createBuffer(size4<0?0:checked(size4)|0);}
Buffer5.allocUnsafe=function(size4){return allocUnsafe2(size4);};Buffer5.allocUnsafeSlow=function(size4){return allocUnsafe2(size4);};function fromString(string,encoding){if(typeof encoding!=="string"||encoding===""){encoding="utf8";}
if(!Buffer5.isEncoding(encoding)){throw new TypeError("Unknown encoding: "+encoding);}
const length3=byteLength2(string,encoding)|0;let buf=createBuffer(length3);const actual=buf.write(string,encoding);if(actual!==length3){buf=buf.slice(0,actual);}
return buf;}
function fromArrayLike(array){const length3=array.length<0?0:checked(array.length)|0;const buf=createBuffer(length3);for(let i2=0;i2<length3;i2+=1){buf[i2]=array[i2]&255;}
return buf;}
function fromArrayView(arrayView){if(isInstance(arrayView,Uint8Array)){const copy4=new Uint8Array(arrayView);return fromArrayBuffer(copy4.buffer,copy4.byteOffset,copy4.byteLength);}
return fromArrayLike(arrayView);}
function fromArrayBuffer(array,byteOffset,length3){if(byteOffset<0||array.byteLength<byteOffset){throw new RangeError('"offset" is outside of buffer bounds');}
if(array.byteLength<byteOffset+(length3||0)){throw new RangeError('"length" is outside of buffer bounds');}
let buf;if(byteOffset===void 0&&length3===void 0){buf=new Uint8Array(array);}else if(length3===void 0){buf=new Uint8Array(array,byteOffset);}else{buf=new Uint8Array(array,byteOffset,length3);}
Object.setPrototypeOf(buf,Buffer5.prototype);return buf;}
function fromObject(obj){if(Buffer5.isBuffer(obj)){const len2=checked(obj.length)|0;const buf=createBuffer(len2);if(buf.length===0){return buf;}
obj.copy(buf,0,0,len2);return buf;}
if(obj.length!==void 0){if(typeof obj.length!=="number"||numberIsNaN(obj.length)){return createBuffer(0);}
return fromArrayLike(obj);}
if(obj.type==="Buffer"&&Array.isArray(obj.data)){return fromArrayLike(obj.data);}}
function checked(length3){if(length3>=K_MAX_LENGTH){throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+K_MAX_LENGTH.toString(16)+" bytes");}
return length3|0;}
function SlowBuffer(length3){if(+length3!=length3){length3=0;}
return Buffer5.alloc(+length3);}
Buffer5.isBuffer=function isBuffer3(b10){return b10!=null&&b10._isBuffer===true&&b10!==Buffer5.prototype;};Buffer5.compare=function compare(a,b10){if(isInstance(a,Uint8Array))
a=Buffer5.from(a,a.offset,a.byteLength);if(isInstance(b10,Uint8Array))
b10=Buffer5.from(b10,b10.offset,b10.byteLength);if(!Buffer5.isBuffer(a)||!Buffer5.isBuffer(b10)){throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');}
if(a===b10)
return 0;let x2=a.length;let y2=b10.length;for(let i2=0,len2=Math.min(x2,y2);i2<len2;++i2){if(a[i2]!==b10[i2]){x2=a[i2];y2=b10[i2];break;}}
if(x2<y2)
return-1;if(y2<x2)
return 1;return 0;};Buffer5.isEncoding=function isEncoding(encoding){switch(String(encoding).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return true;default:return false;}};Buffer5.concat=function concat(list,length3){if(!Array.isArray(list)){throw new TypeError('"list" argument must be an Array of Buffers');}
if(list.length===0){return Buffer5.alloc(0);}
let i2;if(length3===void 0){length3=0;for(i2=0;i2<list.length;++i2){length3+=list[i2].length;}}
const buffer=Buffer5.allocUnsafe(length3);let pos=0;for(i2=0;i2<list.length;++i2){let buf=list[i2];if(isInstance(buf,Uint8Array)){if(pos+buf.length>buffer.length){if(!Buffer5.isBuffer(buf))
buf=Buffer5.from(buf);buf.copy(buffer,pos);}else{Uint8Array.prototype.set.call(buffer,buf,pos);}}else if(!Buffer5.isBuffer(buf)){throw new TypeError('"list" argument must be an Array of Buffers');}else{buf.copy(buffer,pos);}
pos+=buf.length;}
return buffer;};function byteLength2(string,encoding){if(Buffer5.isBuffer(string)){return string.length;}
if(ArrayBuffer.isView(string)||isInstance(string,ArrayBuffer)){return string.byteLength;}
if(typeof string!=="string"){throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof string);}
const len2=string.length;const mustMatch=arguments.length>2&&arguments[2]===true;if(!mustMatch&&len2===0)
return 0;let loweredCase=false;for(;;){switch(encoding){case"ascii":case"latin1":case"binary":return len2;case"utf8":case"utf-8":return utf8ToBytes(string).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return len2*2;case"hex":return len2>>>1;case"base64":return base64ToBytes(string).length;default:if(loweredCase){return mustMatch?-1:utf8ToBytes(string).length;}
encoding=(""+encoding).toLowerCase();loweredCase=true;}}}
Buffer5.byteLength=byteLength2;function slowToString(encoding,start,end){let loweredCase=false;if(start===void 0||start<0){start=0;}
if(start>this.length){return"";}
if(end===void 0||end>this.length){end=this.length;}
if(end<=0){return"";}
end>>>=0;start>>>=0;if(end<=start){return"";}
if(!encoding)
encoding="utf8";while(true){switch(encoding){case"hex":return hexSlice(this,start,end);case"utf8":case"utf-8":return utf8Slice(this,start,end);case"ascii":return asciiSlice(this,start,end);case"latin1":case"binary":return latin1Slice(this,start,end);case"base64":return base64Slice(this,start,end);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return utf16leSlice(this,start,end);default:if(loweredCase)
throw new TypeError("Unknown encoding: "+encoding);encoding=(encoding+"").toLowerCase();loweredCase=true;}}}
Buffer5.prototype._isBuffer=true;function swap(b10,n2,m){const i2=b10[n2];b10[n2]=b10[m];b10[m]=i2;}
Buffer5.prototype.swap16=function swap16(){const len2=this.length;if(len2%2!==0){throw new RangeError("Buffer size must be a multiple of 16-bits");}
for(let i2=0;i2<len2;i2+=2){swap(this,i2,i2+1);}
return this;};Buffer5.prototype.swap32=function swap32(){const len2=this.length;if(len2%4!==0){throw new RangeError("Buffer size must be a multiple of 32-bits");}
for(let i2=0;i2<len2;i2+=4){swap(this,i2,i2+3);swap(this,i2+1,i2+2);}
return this;};Buffer5.prototype.swap64=function swap64(){const len2=this.length;if(len2%8!==0){throw new RangeError("Buffer size must be a multiple of 64-bits");}
for(let i2=0;i2<len2;i2+=8){swap(this,i2,i2+7);swap(this,i2+1,i2+6);swap(this,i2+2,i2+5);swap(this,i2+3,i2+4);}
return this;};Buffer5.prototype.toString=function toString5(){const length3=this.length;if(length3===0)
return"";if(arguments.length===0)
return utf8Slice(this,0,length3);return slowToString.apply(this,arguments);};Buffer5.prototype.toLocaleString=Buffer5.prototype.toString;Buffer5.prototype.equals=function equals3(b10){if(!Buffer5.isBuffer(b10))
throw new TypeError("Argument must be a Buffer");if(this===b10)
return true;return Buffer5.compare(this,b10)===0;};Buffer5.prototype.inspect=function inspect(){let str3="";const max4=exports2.INSPECT_MAX_BYTES;str3=this.toString("hex",0,max4).replace(/(.{2})/g,"$1 ").trim();if(this.length>max4)
str3+=" ... ";return"<Buffer "+str3+">";};if(customInspectSymbol){Buffer5.prototype[customInspectSymbol]=Buffer5.prototype.inspect;}
Buffer5.prototype.compare=function compare(target,start,end,thisStart,thisEnd){if(isInstance(target,Uint8Array)){target=Buffer5.from(target,target.offset,target.byteLength);}
if(!Buffer5.isBuffer(target)){throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof target);}
if(start===void 0){start=0;}
if(end===void 0){end=target?target.length:0;}
if(thisStart===void 0){thisStart=0;}
if(thisEnd===void 0){thisEnd=this.length;}
if(start<0||end>target.length||thisStart<0||thisEnd>this.length){throw new RangeError("out of range index");}
if(thisStart>=thisEnd&&start>=end){return 0;}
if(thisStart>=thisEnd){return-1;}
if(start>=end){return 1;}
start>>>=0;end>>>=0;thisStart>>>=0;thisEnd>>>=0;if(this===target)
return 0;let x2=thisEnd-thisStart;let y2=end-start;const len2=Math.min(x2,y2);const thisCopy=this.slice(thisStart,thisEnd);const targetCopy=target.slice(start,end);for(let i2=0;i2<len2;++i2){if(thisCopy[i2]!==targetCopy[i2]){x2=thisCopy[i2];y2=targetCopy[i2];break;}}
if(x2<y2)
return-1;if(y2<x2)
return 1;return 0;};function bidirectionalIndexOf(buffer,val,byteOffset,encoding,dir){if(buffer.length===0)
return-1;if(typeof byteOffset==="string"){encoding=byteOffset;byteOffset=0;}else if(byteOffset>2147483647){byteOffset=2147483647;}else if(byteOffset<-2147483648){byteOffset=-2147483648;}
byteOffset=+byteOffset;if(numberIsNaN(byteOffset)){byteOffset=dir?0:buffer.length-1;}
if(byteOffset<0)
byteOffset=buffer.length+byteOffset;if(byteOffset>=buffer.length){if(dir)
return-1;else
byteOffset=buffer.length-1;}else if(byteOffset<0){if(dir)
byteOffset=0;else
return-1;}
if(typeof val==="string"){val=Buffer5.from(val,encoding);}
if(Buffer5.isBuffer(val)){if(val.length===0){return-1;}
return arrayIndexOf(buffer,val,byteOffset,encoding,dir);}else if(typeof val==="number"){val=val&255;if(typeof Uint8Array.prototype.indexOf==="function"){if(dir){return Uint8Array.prototype.indexOf.call(buffer,val,byteOffset);}else{return Uint8Array.prototype.lastIndexOf.call(buffer,val,byteOffset);}}
return arrayIndexOf(buffer,[val],byteOffset,encoding,dir);}
throw new TypeError("val must be string, number or Buffer");}
function arrayIndexOf(arr2,val,byteOffset,encoding,dir){let indexSize=1;let arrLength=arr2.length;let valLength=val.length;if(encoding!==void 0){encoding=String(encoding).toLowerCase();if(encoding==="ucs2"||encoding==="ucs-2"||encoding==="utf16le"||encoding==="utf-16le"){if(arr2.length<2||val.length<2){return-1;}
indexSize=2;arrLength/=2;valLength/=2;byteOffset/=2;}}
function read(buf,i3){if(indexSize===1){return buf[i3];}else{return buf.readUInt16BE(i3*indexSize);}}
let i2;if(dir){let foundIndex=-1;for(i2=byteOffset;i2<arrLength;i2++){if(read(arr2,i2)===read(val,foundIndex===-1?0:i2-foundIndex)){if(foundIndex===-1)
foundIndex=i2;if(i2-foundIndex+1===valLength)
return foundIndex*indexSize;}else{if(foundIndex!==-1)
i2-=i2-foundIndex;foundIndex=-1;}}}else{if(byteOffset+valLength>arrLength)
byteOffset=arrLength-valLength;for(i2=byteOffset;i2>=0;i2--){let found=true;for(let j=0;j<valLength;j++){if(read(arr2,i2+j)!==read(val,j)){found=false;break;}}
if(found)
return i2;}}
return-1;}
Buffer5.prototype.includes=function includes(val,byteOffset,encoding){return this.indexOf(val,byteOffset,encoding)!==-1;};Buffer5.prototype.indexOf=function indexOf2(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,true);};Buffer5.prototype.lastIndexOf=function lastIndexOf(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,false);};function hexWrite(buf,string,offset,length3){offset=Number(offset)||0;const remaining=buf.length-offset;if(!length3){length3=remaining;}else{length3=Number(length3);if(length3>remaining){length3=remaining;}}
const strLen=string.length;if(length3>strLen/2){length3=strLen/2;}
let i2;for(i2=0;i2<length3;++i2){const parsed=parseInt(string.substr(i2*2,2),16);if(numberIsNaN(parsed))
return i2;buf[offset+i2]=parsed;}
return i2;}
function utf8Write(buf,string,offset,length3){return blitBuffer(utf8ToBytes(string,buf.length-offset),buf,offset,length3);}
function asciiWrite(buf,string,offset,length3){return blitBuffer(asciiToBytes(string),buf,offset,length3);}
function base64Write(buf,string,offset,length3){return blitBuffer(base64ToBytes(string),buf,offset,length3);}
function ucs2Write(buf,string,offset,length3){return blitBuffer(utf16leToBytes(string,buf.length-offset),buf,offset,length3);}
Buffer5.prototype.write=function write(string,offset,length3,encoding){if(offset===void 0){encoding="utf8";length3=this.length;offset=0;}else if(length3===void 0&&typeof offset==="string"){encoding=offset;length3=this.length;offset=0;}else if(isFinite(offset)){offset=offset>>>0;if(isFinite(length3)){length3=length3>>>0;if(encoding===void 0)
encoding="utf8";}else{encoding=length3;length3=void 0;}}else{throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");}
const remaining=this.length-offset;if(length3===void 0||length3>remaining)
length3=remaining;if(string.length>0&&(length3<0||offset<0)||offset>this.length){throw new RangeError("Attempt to write outside buffer bounds");}
if(!encoding)
encoding="utf8";let loweredCase=false;for(;;){switch(encoding){case"hex":return hexWrite(this,string,offset,length3);case"utf8":case"utf-8":return utf8Write(this,string,offset,length3);case"ascii":case"latin1":case"binary":return asciiWrite(this,string,offset,length3);case"base64":return base64Write(this,string,offset,length3);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return ucs2Write(this,string,offset,length3);default:if(loweredCase)
throw new TypeError("Unknown encoding: "+encoding);encoding=(""+encoding).toLowerCase();loweredCase=true;}}};Buffer5.prototype.toJSON=function toJSON(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)};};function base64Slice(buf,start,end){if(start===0&&end===buf.length){return base64.fromByteArray(buf);}else{return base64.fromByteArray(buf.slice(start,end));}}
function utf8Slice(buf,start,end){end=Math.min(buf.length,end);const res=[];let i2=start;while(i2<end){const firstByte=buf[i2];let codePoint=null;let bytesPerSequence=firstByte>239?4:firstByte>223?3:firstByte>191?2:1;if(i2+bytesPerSequence<=end){let secondByte,thirdByte,fourthByte,tempCodePoint;switch(bytesPerSequence){case 1:if(firstByte<128){codePoint=firstByte;}
break;case 2:secondByte=buf[i2+1];if((secondByte&192)===128){tempCodePoint=(firstByte&31)<<6|secondByte&63;if(tempCodePoint>127){codePoint=tempCodePoint;}}
break;case 3:secondByte=buf[i2+1];thirdByte=buf[i2+2];if((secondByte&192)===128&&(thirdByte&192)===128){tempCodePoint=(firstByte&15)<<12|(secondByte&63)<<6|thirdByte&63;if(tempCodePoint>2047&&(tempCodePoint<55296||tempCodePoint>57343)){codePoint=tempCodePoint;}}
break;case 4:secondByte=buf[i2+1];thirdByte=buf[i2+2];fourthByte=buf[i2+3];if((secondByte&192)===128&&(thirdByte&192)===128&&(fourthByte&192)===128){tempCodePoint=(firstByte&15)<<18|(secondByte&63)<<12|(thirdByte&63)<<6|fourthByte&63;if(tempCodePoint>65535&&tempCodePoint<1114112){codePoint=tempCodePoint;}}}}
if(codePoint===null){codePoint=65533;bytesPerSequence=1;}else if(codePoint>65535){codePoint-=65536;res.push(codePoint>>>10&1023|55296);codePoint=56320|codePoint&1023;}
res.push(codePoint);i2+=bytesPerSequence;}
return decodeCodePointsArray(res);}
var MAX_ARGUMENTS_LENGTH=4096;function decodeCodePointsArray(codePoints){const len2=codePoints.length;if(len2<=MAX_ARGUMENTS_LENGTH){return String.fromCharCode.apply(String,codePoints);}
let res="";let i2=0;while(i2<len2){res+=String.fromCharCode.apply(String,codePoints.slice(i2,i2+=MAX_ARGUMENTS_LENGTH));}
return res;}
function asciiSlice(buf,start,end){let ret="";end=Math.min(buf.length,end);for(let i2=start;i2<end;++i2){ret+=String.fromCharCode(buf[i2]&127);}
return ret;}
function latin1Slice(buf,start,end){let ret="";end=Math.min(buf.length,end);for(let i2=start;i2<end;++i2){ret+=String.fromCharCode(buf[i2]);}
return ret;}
function hexSlice(buf,start,end){const len2=buf.length;if(!start||start<0)
start=0;if(!end||end<0||end>len2)
end=len2;let out="";for(let i2=start;i2<end;++i2){out+=hexSliceLookupTable[buf[i2]];}
return out;}
function utf16leSlice(buf,start,end){const bytes=buf.slice(start,end);let res="";for(let i2=0;i2<bytes.length-1;i2+=2){res+=String.fromCharCode(bytes[i2]+bytes[i2+1]*256);}
return res;}
Buffer5.prototype.slice=function slice2(start,end){const len2=this.length;start=~~start;end=end===void 0?len2:~~end;if(start<0){start+=len2;if(start<0)
start=0;}else if(start>len2){start=len2;}
if(end<0){end+=len2;if(end<0)
end=0;}else if(end>len2){end=len2;}
if(end<start)
end=start;const newBuf=this.subarray(start,end);Object.setPrototypeOf(newBuf,Buffer5.prototype);return newBuf;};function checkOffset(offset,ext,length3){if(offset%1!==0||offset<0)
throw new RangeError("offset is not uint");if(offset+ext>length3)
throw new RangeError("Trying to access beyond buffer length");}
Buffer5.prototype.readUintLE=Buffer5.prototype.readUIntLE=function readUIntLE(offset,byteLength3,noAssert){offset=offset>>>0;byteLength3=byteLength3>>>0;if(!noAssert)
checkOffset(offset,byteLength3,this.length);let val=this[offset];let mul3=1;let i2=0;while(++i2<byteLength3&&(mul3*=256)){val+=this[offset+i2]*mul3;}
return val;};Buffer5.prototype.readUintBE=Buffer5.prototype.readUIntBE=function readUIntBE(offset,byteLength3,noAssert){offset=offset>>>0;byteLength3=byteLength3>>>0;if(!noAssert){checkOffset(offset,byteLength3,this.length);}
let val=this[offset+--byteLength3];let mul3=1;while(byteLength3>0&&(mul3*=256)){val+=this[offset+--byteLength3]*mul3;}
return val;};Buffer5.prototype.readUint8=Buffer5.prototype.readUInt8=function readUInt8(offset,noAssert){offset=offset>>>0;if(!noAssert)
checkOffset(offset,1,this.length);return this[offset];};Buffer5.prototype.readUint16LE=Buffer5.prototype.readUInt16LE=function readUInt16LE(offset,noAssert){offset=offset>>>0;if(!noAssert)
checkOffset(offset,2,this.length);return this[offset]|this[offset+1]<<8;};Buffer5.prototype.readUint16BE=Buffer5.prototype.readUInt16BE=function readUInt16BE(offset,noAssert){offset=offset>>>0;if(!noAssert)
checkOffset(offset,2,this.length);return this[offset]<<8|this[offset+1];};Buffer5.prototype.readUint32LE=Buffer5.prototype.readUInt32LE=function readUInt32LE(offset,noAssert){offset=offset>>>0;if(!noAssert)
checkOffset(offset,4,this.length);return(this[offset]|this[offset+1]<<8|this[offset+2]<<16)+this[offset+3]*16777216;};Buffer5.prototype.readUint32BE=Buffer5.prototype.readUInt32BE=function readUInt32BE(offset,noAssert){offset=offset>>>0;if(!noAssert)
checkOffset(offset,4,this.length);return this[offset]*16777216+(this[offset+1]<<16|this[offset+2]<<8|this[offset+3]);};Buffer5.prototype.readBigUInt64LE=defineBigIntMethod(function readBigUInt64LE(offset){offset=offset>>>0;validateNumber(offset,"offset");const first=this[offset];const last4=this[offset+7];if(first===void 0||last4===void 0){boundsError(offset,this.length-8);}
const lo=first+this[++offset]*2**8+this[++offset]*2**16+this[++offset]*2**24;const hi=this[++offset]+this[++offset]*2**8+this[++offset]*2**16+last4*2**24;return BigInt(lo)+(BigInt(hi)<<BigInt(32));});Buffer5.prototype.readBigUInt64BE=defineBigIntMethod(function readBigUInt64BE(offset){offset=offset>>>0;validateNumber(offset,"offset");const first=this[offset];const last4=this[offset+7];if(first===void 0||last4===void 0){boundsError(offset,this.length-8);}
const hi=first*2**24+this[++offset]*2**16+this[++offset]*2**8+this[++offset];const lo=this[++offset]*2**24+this[++offset]*2**16+this[++offset]*2**8+last4;return(BigInt(hi)<<BigInt(32))+BigInt(lo);});Buffer5.prototype.readIntLE=function readIntLE(offset,byteLength3,noAssert){offset=offset>>>0;byteLength3=byteLength3>>>0;if(!noAssert)
checkOffset(offset,byteLength3,this.length);let val=this[offset];let mul3=1;let i2=0;while(++i2<byteLength3&&(mul3*=256)){val+=this[offset+i2]*mul3;}
mul3*=128;if(val>=mul3)
val-=Math.pow(2,8*byteLength3);return val;};Buffer5.prototype.readIntBE=function readIntBE(offset,byteLength3,noAssert){offset=offset>>>0;byteLength3=byteLength3>>>0;if(!noAssert)
checkOffset(offset,byteLength3,this.length);let i2=byteLength3;let mul3=1;let val=this[offset+--i2];while(i2>0&&(mul3*=256)){val+=this[offset+--i2]*mul3;}
mul3*=128;if(val>=mul3)
val-=Math.pow(2,8*byteLength3);return val;};Buffer5.prototype.readInt8=function readInt8(offset,noAssert){offset=offset>>>0;if(!noAssert)
checkOffset(offset,1,this.length);if(!(this[offset]&128))
return this[offset];return(255-this[offset]+1)*-1;};Buffer5.prototype.readInt16LE=function readInt16LE(offset,noAssert){offset=offset>>>0;if(!noAssert)
checkOffset(offset,2,this.length);const val=this[offset]|this[offset+1]<<8;return val&32768?val|4294901760:val;};Buffer5.prototype.readInt16BE=function readInt16BE(offset,noAssert){offset=offset>>>0;if(!noAssert)
checkOffset(offset,2,this.length);const val=this[offset+1]|this[offset]<<8;return val&32768?val|4294901760:val;};Buffer5.prototype.readInt32LE=function readInt32LE(offset,noAssert){offset=offset>>>0;if(!noAssert)
checkOffset(offset,4,this.length);return this[offset]|this[offset+1]<<8|this[offset+2]<<16|this[offset+3]<<24;};Buffer5.prototype.readInt32BE=function readInt32BE(offset,noAssert){offset=offset>>>0;if(!noAssert)
checkOffset(offset,4,this.length);return this[offset]<<24|this[offset+1]<<16|this[offset+2]<<8|this[offset+3];};Buffer5.prototype.readBigInt64LE=defineBigIntMethod(function readBigInt64LE(offset){offset=offset>>>0;validateNumber(offset,"offset");const first=this[offset];const last4=this[offset+7];if(first===void 0||last4===void 0){boundsError(offset,this.length-8);}
const val=this[offset+4]+this[offset+5]*2**8+this[offset+6]*2**16+(last4<<24);return(BigInt(val)<<BigInt(32))+BigInt(first+this[++offset]*2**8+this[++offset]*2**16+this[++offset]*2**24);});Buffer5.prototype.readBigInt64BE=defineBigIntMethod(function readBigInt64BE(offset){offset=offset>>>0;validateNumber(offset,"offset");const first=this[offset];const last4=this[offset+7];if(first===void 0||last4===void 0){boundsError(offset,this.length-8);}
const val=(first<<24)+
this[++offset]*2**16+this[++offset]*2**8+this[++offset];return(BigInt(val)<<BigInt(32))+BigInt(this[++offset]*2**24+this[++offset]*2**16+this[++offset]*2**8+last4);});Buffer5.prototype.readFloatLE=function readFloatLE(offset,noAssert){offset=offset>>>0;if(!noAssert)
checkOffset(offset,4,this.length);return ieee754.read(this,offset,true,23,4);};Buffer5.prototype.readFloatBE=function readFloatBE(offset,noAssert){offset=offset>>>0;if(!noAssert)
checkOffset(offset,4,this.length);return ieee754.read(this,offset,false,23,4);};Buffer5.prototype.readDoubleLE=function readDoubleLE(offset,noAssert){offset=offset>>>0;if(!noAssert)
checkOffset(offset,8,this.length);return ieee754.read(this,offset,true,52,8);};Buffer5.prototype.readDoubleBE=function readDoubleBE(offset,noAssert){offset=offset>>>0;if(!noAssert)
checkOffset(offset,8,this.length);return ieee754.read(this,offset,false,52,8);};function checkInt(buf,value,offset,ext,max4,min4){if(!Buffer5.isBuffer(buf))
throw new TypeError('"buffer" argument must be a Buffer instance');if(value>max4||value<min4)
throw new RangeError('"value" argument is out of bounds');if(offset+ext>buf.length)
throw new RangeError("Index out of range");}
Buffer5.prototype.writeUintLE=Buffer5.prototype.writeUIntLE=function writeUIntLE(value,offset,byteLength3,noAssert){value=+value;offset=offset>>>0;byteLength3=byteLength3>>>0;if(!noAssert){const maxBytes=Math.pow(2,8*byteLength3)-1;checkInt(this,value,offset,byteLength3,maxBytes,0);}
let mul3=1;let i2=0;this[offset]=value&255;while(++i2<byteLength3&&(mul3*=256)){this[offset+i2]=value/mul3&255;}
return offset+byteLength3;};Buffer5.prototype.writeUintBE=Buffer5.prototype.writeUIntBE=function writeUIntBE(value,offset,byteLength3,noAssert){value=+value;offset=offset>>>0;byteLength3=byteLength3>>>0;if(!noAssert){const maxBytes=Math.pow(2,8*byteLength3)-1;checkInt(this,value,offset,byteLength3,maxBytes,0);}
let i2=byteLength3-1;let mul3=1;this[offset+i2]=value&255;while(--i2>=0&&(mul3*=256)){this[offset+i2]=value/mul3&255;}
return offset+byteLength3;};Buffer5.prototype.writeUint8=Buffer5.prototype.writeUInt8=function writeUInt8(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)
checkInt(this,value,offset,1,255,0);this[offset]=value&255;return offset+1;};Buffer5.prototype.writeUint16LE=Buffer5.prototype.writeUInt16LE=function writeUInt16LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)
checkInt(this,value,offset,2,65535,0);this[offset]=value&255;this[offset+1]=value>>>8;return offset+2;};Buffer5.prototype.writeUint16BE=Buffer5.prototype.writeUInt16BE=function writeUInt16BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)
checkInt(this,value,offset,2,65535,0);this[offset]=value>>>8;this[offset+1]=value&255;return offset+2;};Buffer5.prototype.writeUint32LE=Buffer5.prototype.writeUInt32LE=function writeUInt32LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)
checkInt(this,value,offset,4,4294967295,0);this[offset+3]=value>>>24;this[offset+2]=value>>>16;this[offset+1]=value>>>8;this[offset]=value&255;return offset+4;};Buffer5.prototype.writeUint32BE=Buffer5.prototype.writeUInt32BE=function writeUInt32BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)
checkInt(this,value,offset,4,4294967295,0);this[offset]=value>>>24;this[offset+1]=value>>>16;this[offset+2]=value>>>8;this[offset+3]=value&255;return offset+4;};function wrtBigUInt64LE(buf,value,offset,min4,max4){checkIntBI(value,min4,max4,buf,offset,7);let lo=Number(value&BigInt(4294967295));buf[offset++]=lo;lo=lo>>8;buf[offset++]=lo;lo=lo>>8;buf[offset++]=lo;lo=lo>>8;buf[offset++]=lo;let hi=Number(value>>BigInt(32)&BigInt(4294967295));buf[offset++]=hi;hi=hi>>8;buf[offset++]=hi;hi=hi>>8;buf[offset++]=hi;hi=hi>>8;buf[offset++]=hi;return offset;}
function wrtBigUInt64BE(buf,value,offset,min4,max4){checkIntBI(value,min4,max4,buf,offset,7);let lo=Number(value&BigInt(4294967295));buf[offset+7]=lo;lo=lo>>8;buf[offset+6]=lo;lo=lo>>8;buf[offset+5]=lo;lo=lo>>8;buf[offset+4]=lo;let hi=Number(value>>BigInt(32)&BigInt(4294967295));buf[offset+3]=hi;hi=hi>>8;buf[offset+2]=hi;hi=hi>>8;buf[offset+1]=hi;hi=hi>>8;buf[offset]=hi;return offset+8;}
Buffer5.prototype.writeBigUInt64LE=defineBigIntMethod(function writeBigUInt64LE(value,offset=0){return wrtBigUInt64LE(this,value,offset,BigInt(0),BigInt("0xffffffffffffffff"));});Buffer5.prototype.writeBigUInt64BE=defineBigIntMethod(function writeBigUInt64BE(value,offset=0){return wrtBigUInt64BE(this,value,offset,BigInt(0),BigInt("0xffffffffffffffff"));});Buffer5.prototype.writeIntLE=function writeIntLE(value,offset,byteLength3,noAssert){value=+value;offset=offset>>>0;if(!noAssert){const limit=Math.pow(2,8*byteLength3-1);checkInt(this,value,offset,byteLength3,limit-1,-limit);}
let i2=0;let mul3=1;let sub3=0;this[offset]=value&255;while(++i2<byteLength3&&(mul3*=256)){if(value<0&&sub3===0&&this[offset+i2-1]!==0){sub3=1;}
this[offset+i2]=(value/mul3>>0)-sub3&255;}
return offset+byteLength3;};Buffer5.prototype.writeIntBE=function writeIntBE(value,offset,byteLength3,noAssert){value=+value;offset=offset>>>0;if(!noAssert){const limit=Math.pow(2,8*byteLength3-1);checkInt(this,value,offset,byteLength3,limit-1,-limit);}
let i2=byteLength3-1;let mul3=1;let sub3=0;this[offset+i2]=value&255;while(--i2>=0&&(mul3*=256)){if(value<0&&sub3===0&&this[offset+i2+1]!==0){sub3=1;}
this[offset+i2]=(value/mul3>>0)-sub3&255;}
return offset+byteLength3;};Buffer5.prototype.writeInt8=function writeInt8(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)
checkInt(this,value,offset,1,127,-128);if(value<0)
value=255+value+1;this[offset]=value&255;return offset+1;};Buffer5.prototype.writeInt16LE=function writeInt16LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)
checkInt(this,value,offset,2,32767,-32768);this[offset]=value&255;this[offset+1]=value>>>8;return offset+2;};Buffer5.prototype.writeInt16BE=function writeInt16BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)
checkInt(this,value,offset,2,32767,-32768);this[offset]=value>>>8;this[offset+1]=value&255;return offset+2;};Buffer5.prototype.writeInt32LE=function writeInt32LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)
checkInt(this,value,offset,4,2147483647,-2147483648);this[offset]=value&255;this[offset+1]=value>>>8;this[offset+2]=value>>>16;this[offset+3]=value>>>24;return offset+4;};Buffer5.prototype.writeInt32BE=function writeInt32BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)
checkInt(this,value,offset,4,2147483647,-2147483648);if(value<0)
value=4294967295+value+1;this[offset]=value>>>24;this[offset+1]=value>>>16;this[offset+2]=value>>>8;this[offset+3]=value&255;return offset+4;};Buffer5.prototype.writeBigInt64LE=defineBigIntMethod(function writeBigInt64LE(value,offset=0){return wrtBigUInt64LE(this,value,offset,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"));});Buffer5.prototype.writeBigInt64BE=defineBigIntMethod(function writeBigInt64BE(value,offset=0){return wrtBigUInt64BE(this,value,offset,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"));});function checkIEEE754(buf,value,offset,ext,max4,min4){if(offset+ext>buf.length)
throw new RangeError("Index out of range");if(offset<0)
throw new RangeError("Index out of range");}
function writeFloat(buf,value,offset,littleEndian,noAssert){value=+value;offset=offset>>>0;if(!noAssert){checkIEEE754(buf,value,offset,4,34028234663852886e22,-34028234663852886e22);}
ieee754.write(buf,value,offset,littleEndian,23,4);return offset+4;}
Buffer5.prototype.writeFloatLE=function writeFloatLE(value,offset,noAssert){return writeFloat(this,value,offset,true,noAssert);};Buffer5.prototype.writeFloatBE=function writeFloatBE(value,offset,noAssert){return writeFloat(this,value,offset,false,noAssert);};function writeDouble(buf,value,offset,littleEndian,noAssert){value=+value;offset=offset>>>0;if(!noAssert){checkIEEE754(buf,value,offset,8,17976931348623157e292,-17976931348623157e292);}
ieee754.write(buf,value,offset,littleEndian,52,8);return offset+8;}
Buffer5.prototype.writeDoubleLE=function writeDoubleLE(value,offset,noAssert){return writeDouble(this,value,offset,true,noAssert);};Buffer5.prototype.writeDoubleBE=function writeDoubleBE(value,offset,noAssert){return writeDouble(this,value,offset,false,noAssert);};Buffer5.prototype.copy=function copy4(target,targetStart,start,end){if(!Buffer5.isBuffer(target))
throw new TypeError("argument should be a Buffer");if(!start)
start=0;if(!end&&end!==0)
end=this.length;if(targetStart>=target.length)
targetStart=target.length;if(!targetStart)
targetStart=0;if(end>0&&end<start)
end=start;if(end===start)
return 0;if(target.length===0||this.length===0)
return 0;if(targetStart<0){throw new RangeError("targetStart out of bounds");}
if(start<0||start>=this.length)
throw new RangeError("Index out of range");if(end<0)
throw new RangeError("sourceEnd out of bounds");if(end>this.length)
end=this.length;if(target.length-targetStart<end-start){end=target.length-targetStart+start;}
const len2=end-start;if(this===target&&typeof Uint8Array.prototype.copyWithin==="function"){this.copyWithin(targetStart,start,end);}else{Uint8Array.prototype.set.call(target,this.subarray(start,end),targetStart);}
return len2;};Buffer5.prototype.fill=function fill(val,start,end,encoding){if(typeof val==="string"){if(typeof start==="string"){encoding=start;start=0;end=this.length;}else if(typeof end==="string"){encoding=end;end=this.length;}
if(encoding!==void 0&&typeof encoding!=="string"){throw new TypeError("encoding must be a string");}
if(typeof encoding==="string"&&!Buffer5.isEncoding(encoding)){throw new TypeError("Unknown encoding: "+encoding);}
if(val.length===1){const code=val.charCodeAt(0);if(encoding==="utf8"&&code<128||encoding==="latin1"){val=code;}}}else if(typeof val==="number"){val=val&255;}else if(typeof val==="boolean"){val=Number(val);}
if(start<0||this.length<start||this.length<end){throw new RangeError("Out of range index");}
if(end<=start){return this;}
start=start>>>0;end=end===void 0?this.length:end>>>0;if(!val)
val=0;let i2;if(typeof val==="number"){for(i2=start;i2<end;++i2){this[i2]=val;}}else{const bytes=Buffer5.isBuffer(val)?val:Buffer5.from(val,encoding);const len2=bytes.length;if(len2===0){throw new TypeError('The value "'+val+'" is invalid for argument "value"');}
for(i2=0;i2<end-start;++i2){this[i2+start]=bytes[i2%len2];}}
return this;};var errors={};function E(sym,getMessage,Base3){errors[sym]=class NodeError extends Base3{constructor(){super();Object.defineProperty(this,"message",{value:getMessage.apply(this,arguments),writable:true,configurable:true});this.name=`${this.name}[${sym}]`;this.stack;delete this.name;}
get code(){return sym;}
set code(value){Object.defineProperty(this,"code",{configurable:true,enumerable:true,value,writable:true});}
toString(){return`${this.name}[${sym}]:${this.message}`;}};}
E("ERR_BUFFER_OUT_OF_BOUNDS",function(name){if(name){return`${name}is outside of buffer bounds`;}
return"Attempt to access memory outside buffer bounds";},RangeError);E("ERR_INVALID_ARG_TYPE",function(name,actual){return`The"${name}"argument must be of type number.Received type ${typeof actual}`;},TypeError);E("ERR_OUT_OF_RANGE",function(str3,range2,input){let msg=`The value of"${str3}"is out of range.`;let received=input;if(Number.isInteger(input)&&Math.abs(input)>2**32){received=addNumericalSeparator(String(input));}else if(typeof input==="bigint"){received=String(input);if(input>BigInt(2)**BigInt(32)||input<-(BigInt(2)**BigInt(32))){received=addNumericalSeparator(received);}
received+="n";}
msg+=`It must be ${range2}.Received ${received}`;return msg;},RangeError);function addNumericalSeparator(val){let res="";let i2=val.length;const start=val[0]==="-"?1:0;for(;i2>=start+4;i2-=3){res=`_${val.slice(i2-3,i2)}${res}`;}
return`${val.slice(0,i2)}${res}`;}
function checkBounds(buf,offset,byteLength3){validateNumber(offset,"offset");if(buf[offset]===void 0||buf[offset+byteLength3]===void 0){boundsError(offset,buf.length-(byteLength3+1));}}
function checkIntBI(value,min4,max4,buf,offset,byteLength3){if(value>max4||value<min4){const n2=typeof min4==="bigint"?"n":"";let range2;if(byteLength3>3){if(min4===0||min4===BigInt(0)){range2=`>=0${n2}and<2${n2}**${(byteLength3+1)*8}${n2}`;}else{range2=`>=-(2${n2}**${(byteLength3+1)*8-1}${n2})and<2**${(byteLength3+1)*8-1}${n2}`;}}else{range2=`>=${min4}${n2}and<=${max4}${n2}`;}
throw new errors.ERR_OUT_OF_RANGE("value",range2,value);}
checkBounds(buf,offset,byteLength3);}
function validateNumber(value,name){if(typeof value!=="number"){throw new errors.ERR_INVALID_ARG_TYPE(name,"number",value);}}
function boundsError(value,length3,type){if(Math.floor(value)!==value){validateNumber(value,type);throw new errors.ERR_OUT_OF_RANGE(type||"offset","an integer",value);}
if(length3<0){throw new errors.ERR_BUFFER_OUT_OF_BOUNDS();}
throw new errors.ERR_OUT_OF_RANGE(type||"offset",`>=${type?1:0}and<=${length3}`,value);}
var INVALID_BASE64_RE=/[^+/0-9A-Za-z-_]/g;function base64clean(str3){str3=str3.split("=")[0];str3=str3.trim().replace(INVALID_BASE64_RE,"");if(str3.length<2)
return"";while(str3.length%4!==0){str3=str3+"=";}
return str3;}
function utf8ToBytes(string,units){units=units||Infinity;let codePoint;const length3=string.length;let leadSurrogate=null;const bytes=[];for(let i2=0;i2<length3;++i2){codePoint=string.charCodeAt(i2);if(codePoint>55295&&codePoint<57344){if(!leadSurrogate){if(codePoint>56319){if((units-=3)>-1)
bytes.push(239,191,189);continue;}else if(i2+1===length3){if((units-=3)>-1)
bytes.push(239,191,189);continue;}
leadSurrogate=codePoint;continue;}
if(codePoint<56320){if((units-=3)>-1)
bytes.push(239,191,189);leadSurrogate=codePoint;continue;}
codePoint=(leadSurrogate-55296<<10|codePoint-56320)+65536;}else if(leadSurrogate){if((units-=3)>-1)
bytes.push(239,191,189);}
leadSurrogate=null;if(codePoint<128){if((units-=1)<0)
break;bytes.push(codePoint);}else if(codePoint<2048){if((units-=2)<0)
break;bytes.push(codePoint>>6|192,codePoint&63|128);}else if(codePoint<65536){if((units-=3)<0)
break;bytes.push(codePoint>>12|224,codePoint>>6&63|128,codePoint&63|128);}else if(codePoint<1114112){if((units-=4)<0)
break;bytes.push(codePoint>>18|240,codePoint>>12&63|128,codePoint>>6&63|128,codePoint&63|128);}else{throw new Error("Invalid code point");}}
return bytes;}
function asciiToBytes(str3){const byteArray=[];for(let i2=0;i2<str3.length;++i2){byteArray.push(str3.charCodeAt(i2)&255);}
return byteArray;}
function utf16leToBytes(str3,units){let c,hi,lo;const byteArray=[];for(let i2=0;i2<str3.length;++i2){if((units-=2)<0)
break;c=str3.charCodeAt(i2);hi=c>>8;lo=c%256;byteArray.push(lo);byteArray.push(hi);}
return byteArray;}
function base64ToBytes(str3){return base64.toByteArray(base64clean(str3));}
function blitBuffer(src,dst,offset,length3){let i2;for(i2=0;i2<length3;++i2){if(i2+offset>=dst.length||i2>=src.length)
break;dst[i2+offset]=src[i2];}
return i2;}
function isInstance(obj,type){return obj instanceof type||obj!=null&&obj.constructor!=null&&obj.constructor.name!=null&&obj.constructor.name===type.name;}
function numberIsNaN(obj){return obj!==obj;}
var hexSliceLookupTable=function(){const alphabet="0123456789abcdef";const table=new Array(256);for(let i2=0;i2<16;++i2){const i16=i2*16;for(let j=0;j<16;++j){table[i16+j]=alphabet[i2]+alphabet[j];}}
return table;}();function defineBigIntMethod(fn){return typeof BigInt==="undefined"?BufferBigIntNotDefined:fn;}
function BufferBigIntNotDefined(){throw new Error("BigInt not supported");}}});var require_safe_buffer=__commonJS({"../../node_modules/.pnpm/safe-buffer@5.2.1/node_modules/safe-buffer/index.js"(exports2,module2){var buffer=require_buffer();var Buffer5=buffer.Buffer;function copyProps(src,dst){for(var key in src){dst[key]=src[key];}}
if(Buffer5.from&&Buffer5.alloc&&Buffer5.allocUnsafe&&Buffer5.allocUnsafeSlow){module2.exports=buffer;}else{copyProps(buffer,exports2);exports2.Buffer=SafeBuffer;}
function SafeBuffer(arg,encodingOrOffset,length3){return Buffer5(arg,encodingOrOffset,length3);}
SafeBuffer.prototype=Object.create(Buffer5.prototype);copyProps(Buffer5,SafeBuffer);SafeBuffer.from=function(arg,encodingOrOffset,length3){if(typeof arg==="number"){throw new TypeError("Argument must not be a number");}
return Buffer5(arg,encodingOrOffset,length3);};SafeBuffer.alloc=function(size4,fill,encoding){if(typeof size4!=="number"){throw new TypeError("Argument must be a number");}
var buf=Buffer5(size4);if(fill!==void 0){if(typeof encoding==="string"){buf.fill(fill,encoding);}else{buf.fill(fill);}}else{buf.fill(0);}
return buf;};SafeBuffer.allocUnsafe=function(size4){if(typeof size4!=="number"){throw new TypeError("Argument must be a number");}
return Buffer5(size4);};SafeBuffer.allocUnsafeSlow=function(size4){if(typeof size4!=="number"){throw new TypeError("Argument must be a number");}
return buffer.SlowBuffer(size4);};}});var require_string_decoder=__commonJS({"../../node_modules/.pnpm/string_decoder@1.3.0/node_modules/string_decoder/lib/string_decoder.js"(exports2){"use strict";var Buffer5=require_safe_buffer().Buffer;var isEncoding=Buffer5.isEncoding||function(encoding){encoding=""+encoding;switch(encoding&&encoding.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return true;default:return false;}};function _normalizeEncoding(enc){if(!enc)
return"utf8";var retried;while(true){switch(enc){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return enc;default:if(retried)
return;enc=(""+enc).toLowerCase();retried=true;}}}
function normalizeEncoding(enc){var nenc=_normalizeEncoding(enc);if(typeof nenc!=="string"&&(Buffer5.isEncoding===isEncoding||!isEncoding(enc)))
throw new Error("Unknown encoding: "+enc);return nenc||enc;}
exports2.StringDecoder=StringDecoder;function StringDecoder(encoding){this.encoding=normalizeEncoding(encoding);var nb;switch(this.encoding){case"utf16le":this.text=utf16Text;this.end=utf16End;nb=4;break;case"utf8":this.fillLast=utf8FillLast;nb=4;break;case"base64":this.text=base64Text;this.end=base64End;nb=3;break;default:this.write=simpleWrite;this.end=simpleEnd;return;}
this.lastNeed=0;this.lastTotal=0;this.lastChar=Buffer5.allocUnsafe(nb);}
StringDecoder.prototype.write=function(buf){if(buf.length===0)
return"";var r;var i2;if(this.lastNeed){r=this.fillLast(buf);if(r===void 0)
return"";i2=this.lastNeed;this.lastNeed=0;}else{i2=0;}
if(i2<buf.length)
return r?r+this.text(buf,i2):this.text(buf,i2);return r||"";};StringDecoder.prototype.end=utf8End;StringDecoder.prototype.text=utf8Text;StringDecoder.prototype.fillLast=function(buf){if(this.lastNeed<=buf.length){buf.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed);return this.lastChar.toString(this.encoding,0,this.lastTotal);}
buf.copy(this.lastChar,this.lastTotal-this.lastNeed,0,buf.length);this.lastNeed-=buf.length;};function utf8CheckByte(byte){if(byte<=127)
return 0;else if(byte>>5===6)
return 2;else if(byte>>4===14)
return 3;else if(byte>>3===30)
return 4;return byte>>6===2?-1:-2;}
function utf8CheckIncomplete(self2,buf,i2){var j=buf.length-1;if(j<i2)
return 0;var nb=utf8CheckByte(buf[j]);if(nb>=0){if(nb>0)
self2.lastNeed=nb-1;return nb;}
if(--j<i2||nb===-2)
return 0;nb=utf8CheckByte(buf[j]);if(nb>=0){if(nb>0)
self2.lastNeed=nb-2;return nb;}
if(--j<i2||nb===-2)
return 0;nb=utf8CheckByte(buf[j]);if(nb>=0){if(nb>0){if(nb===2)
nb=0;else
self2.lastNeed=nb-3;}
return nb;}
return 0;}
function utf8CheckExtraBytes(self2,buf,p){if((buf[0]&192)!==128){self2.lastNeed=0;return"\uFFFD";}
if(self2.lastNeed>1&&buf.length>1){if((buf[1]&192)!==128){self2.lastNeed=1;return"\uFFFD";}
if(self2.lastNeed>2&&buf.length>2){if((buf[2]&192)!==128){self2.lastNeed=2;return"\uFFFD";}}}}
function utf8FillLast(buf){var p=this.lastTotal-this.lastNeed;var r=utf8CheckExtraBytes(this,buf,p);if(r!==void 0)
return r;if(this.lastNeed<=buf.length){buf.copy(this.lastChar,p,0,this.lastNeed);return this.lastChar.toString(this.encoding,0,this.lastTotal);}
buf.copy(this.lastChar,p,0,buf.length);this.lastNeed-=buf.length;}
function utf8Text(buf,i2){var total=utf8CheckIncomplete(this,buf,i2);if(!this.lastNeed)
return buf.toString("utf8",i2);this.lastTotal=total;var end=buf.length-(total-this.lastNeed);buf.copy(this.lastChar,0,end);return buf.toString("utf8",i2,end);}
function utf8End(buf){var r=buf&&buf.length?this.write(buf):"";if(this.lastNeed)
return r+"\uFFFD";return r;}
function utf16Text(buf,i2){if((buf.length-i2)%2===0){var r=buf.toString("utf16le",i2);if(r){var c=r.charCodeAt(r.length-1);if(c>=55296&&c<=56319){this.lastNeed=2;this.lastTotal=4;this.lastChar[0]=buf[buf.length-2];this.lastChar[1]=buf[buf.length-1];return r.slice(0,-1);}}
return r;}
this.lastNeed=1;this.lastTotal=2;this.lastChar[0]=buf[buf.length-1];return buf.toString("utf16le",i2,buf.length-1);}
function utf16End(buf){var r=buf&&buf.length?this.write(buf):"";if(this.lastNeed){var end=this.lastTotal-this.lastNeed;return r+this.lastChar.toString("utf16le",0,end);}
return r;}
function base64Text(buf,i2){var n2=(buf.length-i2)%3;if(n2===0)
return buf.toString("base64",i2);this.lastNeed=3-n2;this.lastTotal=3;if(n2===1){this.lastChar[0]=buf[buf.length-1];}else{this.lastChar[0]=buf[buf.length-2];this.lastChar[1]=buf[buf.length-1];}
return buf.toString("base64",i2,buf.length-n2);}
function base64End(buf){var r=buf&&buf.length?this.write(buf):"";if(this.lastNeed)
return r+this.lastChar.toString("base64",0,3-this.lastNeed);return r;}
function simpleWrite(buf){return buf.toString(this.encoding);}
function simpleEnd(buf){return buf&&buf.length?this.write(buf):"";}}});var require_sax=__commonJS({"../../node_modules/.pnpm/sax@1.2.4/node_modules/sax/lib/sax.js"(exports2){(function(sax2){sax2.parser=function(strict,opt){return new SAXParser(strict,opt);};sax2.SAXParser=SAXParser;sax2.SAXStream=SAXStream;sax2.createStream=createStream;sax2.MAX_BUFFER_LENGTH=64*1024;var buffers=["comment","sgmlDecl","textNode","tagName","doctype","procInstName","procInstBody","entity","attribName","attribValue","cdata","script"];sax2.EVENTS=["text","processinginstruction","sgmldeclaration","doctype","comment","opentagstart","attribute","opentag","closetag","opencdata","cdata","closecdata","error","end","ready","script","opennamespace","closenamespace"];function SAXParser(strict,opt){if(!(this instanceof SAXParser)){return new SAXParser(strict,opt);}
var parser=this;clearBuffers(parser);parser.q=parser.c="";parser.bufferCheckPosition=sax2.MAX_BUFFER_LENGTH;parser.opt=opt||{};parser.opt.lowercase=parser.opt.lowercase||parser.opt.lowercasetags;parser.looseCase=parser.opt.lowercase?"toLowerCase":"toUpperCase";parser.tags=[];parser.closed=parser.closedRoot=parser.sawRoot=false;parser.tag=parser.error=null;parser.strict=!!strict;parser.noscript=!!(strict||parser.opt.noscript);parser.state=S.BEGIN;parser.strictEntities=parser.opt.strictEntities;parser.ENTITIES=parser.strictEntities?Object.create(sax2.XML_ENTITIES):Object.create(sax2.ENTITIES);parser.attribList=[];if(parser.opt.xmlns){parser.ns=Object.create(rootNS);}
parser.trackPosition=parser.opt.position!==false;if(parser.trackPosition){parser.position=parser.line=parser.column=0;}
emit(parser,"onready");}
if(!Object.create){Object.create=function(o){function F(){}
F.prototype=o;var newf=new F();return newf;};}
if(!Object.keys){Object.keys=function(o){var a=[];for(var i2 in o)
if(o.hasOwnProperty(i2))
a.push(i2);return a;};}
function checkBufferLength(parser){var maxAllowed=Math.max(sax2.MAX_BUFFER_LENGTH,10);var maxActual=0;for(var i2=0,l=buffers.length;i2<l;i2++){var len2=parser[buffers[i2]].length;if(len2>maxAllowed){switch(buffers[i2]){case"textNode":closeText(parser);break;case"cdata":emitNode(parser,"oncdata",parser.cdata);parser.cdata="";break;case"script":emitNode(parser,"onscript",parser.script);parser.script="";break;default:error(parser,"Max buffer length exceeded: "+buffers[i2]);}}
maxActual=Math.max(maxActual,len2);}
var m=sax2.MAX_BUFFER_LENGTH-maxActual;parser.bufferCheckPosition=m+parser.position;}
function clearBuffers(parser){for(var i2=0,l=buffers.length;i2<l;i2++){parser[buffers[i2]]="";}}
function flushBuffers(parser){closeText(parser);if(parser.cdata!==""){emitNode(parser,"oncdata",parser.cdata);parser.cdata="";}
if(parser.script!==""){emitNode(parser,"onscript",parser.script);parser.script="";}}
SAXParser.prototype={end:function(){end(this);},write,resume:function(){this.error=null;return this;},close:function(){return this.write(null);},flush:function(){flushBuffers(this);}};var Stream;try{Stream=require_stream().Stream;}catch(ex){Stream=function(){};}
var streamWraps=sax2.EVENTS.filter(function(ev){return ev!=="error"&&ev!=="end";});function createStream(strict,opt){return new SAXStream(strict,opt);}
function SAXStream(strict,opt){if(!(this instanceof SAXStream)){return new SAXStream(strict,opt);}
Stream.apply(this);this._parser=new SAXParser(strict,opt);this.writable=true;this.readable=true;var me=this;this._parser.onend=function(){me.emit("end");};this._parser.onerror=function(er){me.emit("error",er);me._parser.error=null;};this._decoder=null;streamWraps.forEach(function(ev){Object.defineProperty(me,"on"+ev,{get:function(){return me._parser["on"+ev];},set:function(h){if(!h){me.removeAllListeners(ev);me._parser["on"+ev]=h;return h;}
me.on(ev,h);},enumerable:true,configurable:false});});}
SAXStream.prototype=Object.create(Stream.prototype,{constructor:{value:SAXStream}});SAXStream.prototype.write=function(data){if(typeof Buffer==="function"&&typeof Buffer.isBuffer==="function"&&Buffer.isBuffer(data)){if(!this._decoder){var SD=require_string_decoder().StringDecoder;this._decoder=new SD("utf8");}
data=this._decoder.write(data);}
this._parser.write(data.toString());this.emit("data",data);return true;};SAXStream.prototype.end=function(chunk){if(chunk&&chunk.length){this.write(chunk);}
this._parser.end();return true;};SAXStream.prototype.on=function(ev,handler){var me=this;if(!me._parser["on"+ev]&&streamWraps.indexOf(ev)!==-1){me._parser["on"+ev]=function(){var args=arguments.length===1?[arguments[0]]:Array.apply(null,arguments);args.splice(0,0,ev);me.emit.apply(me,args);};}
return Stream.prototype.on.call(me,ev,handler);};var CDATA="[CDATA[";var DOCTYPE="DOCTYPE";var XML_NAMESPACE="http://www.w3.org/XML/1998/namespace";var XMLNS_NAMESPACE="http://www.w3.org/2000/xmlns/";var rootNS={xml:XML_NAMESPACE,xmlns:XMLNS_NAMESPACE};var nameStart=/[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/;var nameBody=/[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040.\d-]/;var entityStart=/[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/;var entityBody=/[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040.\d-]/;function isWhitespace(c){return c===" "||c==="\n"||c==="\r"||c==="	";}
function isQuote(c){return c==='"'||c==="'";}
function isAttribEnd(c){return c===">"||isWhitespace(c);}
function isMatch(regex,c){return regex.test(c);}
function notMatch(regex,c){return!isMatch(regex,c);}
var S=0;sax2.STATE={BEGIN:S++,BEGIN_WHITESPACE:S++,TEXT:S++,TEXT_ENTITY:S++,OPEN_WAKA:S++,SGML_DECL:S++,SGML_DECL_QUOTED:S++,DOCTYPE:S++,DOCTYPE_QUOTED:S++,DOCTYPE_DTD:S++,DOCTYPE_DTD_QUOTED:S++,COMMENT_STARTING:S++,COMMENT:S++,COMMENT_ENDING:S++,COMMENT_ENDED:S++,CDATA:S++,CDATA_ENDING:S++,CDATA_ENDING_2:S++,PROC_INST:S++,PROC_INST_BODY:S++,PROC_INST_ENDING:S++,OPEN_TAG:S++,OPEN_TAG_SLASH:S++,ATTRIB:S++,ATTRIB_NAME:S++,ATTRIB_NAME_SAW_WHITE:S++,ATTRIB_VALUE:S++,ATTRIB_VALUE_QUOTED:S++,ATTRIB_VALUE_CLOSED:S++,ATTRIB_VALUE_UNQUOTED:S++,ATTRIB_VALUE_ENTITY_Q:S++,ATTRIB_VALUE_ENTITY_U:S++,CLOSE_TAG:S++,CLOSE_TAG_SAW_WHITE:S++,SCRIPT:S++,SCRIPT_ENDING:S++
};sax2.XML_ENTITIES={"amp":"&","gt":">","lt":"<","quot":'"',"apos":"'"};sax2.ENTITIES={"amp":"&","gt":">","lt":"<","quot":'"',"apos":"'","AElig":198,"Aacute":193,"Acirc":194,"Agrave":192,"Aring":197,"Atilde":195,"Auml":196,"Ccedil":199,"ETH":208,"Eacute":201,"Ecirc":202,"Egrave":200,"Euml":203,"Iacute":205,"Icirc":206,"Igrave":204,"Iuml":207,"Ntilde":209,"Oacute":211,"Ocirc":212,"Ograve":210,"Oslash":216,"Otilde":213,"Ouml":214,"THORN":222,"Uacute":218,"Ucirc":219,"Ugrave":217,"Uuml":220,"Yacute":221,"aacute":225,"acirc":226,"aelig":230,"agrave":224,"aring":229,"atilde":227,"auml":228,"ccedil":231,"eacute":233,"ecirc":234,"egrave":232,"eth":240,"euml":235,"iacute":237,"icirc":238,"igrave":236,"iuml":239,"ntilde":241,"oacute":243,"ocirc":244,"ograve":242,"oslash":248,"otilde":245,"ouml":246,"szlig":223,"thorn":254,"uacute":250,"ucirc":251,"ugrave":249,"uuml":252,"yacute":253,"yuml":255,"copy":169,"reg":174,"nbsp":160,"iexcl":161,"cent":162,"pound":163,"curren":164,"yen":165,"brvbar":166,"sect":167,"uml":168,"ordf":170,"laquo":171,"not":172,"shy":173,"macr":175,"deg":176,"plusmn":177,"sup1":185,"sup2":178,"sup3":179,"acute":180,"micro":181,"para":182,"middot":183,"cedil":184,"ordm":186,"raquo":187,"frac14":188,"frac12":189,"frac34":190,"iquest":191,"times":215,"divide":247,"OElig":338,"oelig":339,"Scaron":352,"scaron":353,"Yuml":376,"fnof":402,"circ":710,"tilde":732,"Alpha":913,"Beta":914,"Gamma":915,"Delta":916,"Epsilon":917,"Zeta":918,"Eta":919,"Theta":920,"Iota":921,"Kappa":922,"Lambda":923,"Mu":924,"Nu":925,"Xi":926,"Omicron":927,"Pi":928,"Rho":929,"Sigma":931,"Tau":932,"Upsilon":933,"Phi":934,"Chi":935,"Psi":936,"Omega":937,"alpha":945,"beta":946,"gamma":947,"delta":948,"epsilon":949,"zeta":950,"eta":951,"theta":952,"iota":953,"kappa":954,"lambda":955,"mu":956,"nu":957,"xi":958,"omicron":959,"pi":960,"rho":961,"sigmaf":962,"sigma":963,"tau":964,"upsilon":965,"phi":966,"chi":967,"psi":968,"omega":969,"thetasym":977,"upsih":978,"piv":982,"ensp":8194,"emsp":8195,"thinsp":8201,"zwnj":8204,"zwj":8205,"lrm":8206,"rlm":8207,"ndash":8211,"mdash":8212,"lsquo":8216,"rsquo":8217,"sbquo":8218,"ldquo":8220,"rdquo":8221,"bdquo":8222,"dagger":8224,"Dagger":8225,"bull":8226,"hellip":8230,"permil":8240,"prime":8242,"Prime":8243,"lsaquo":8249,"rsaquo":8250,"oline":8254,"frasl":8260,"euro":8364,"image":8465,"weierp":8472,"real":8476,"trade":8482,"alefsym":8501,"larr":8592,"uarr":8593,"rarr":8594,"darr":8595,"harr":8596,"crarr":8629,"lArr":8656,"uArr":8657,"rArr":8658,"dArr":8659,"hArr":8660,"forall":8704,"part":8706,"exist":8707,"empty":8709,"nabla":8711,"isin":8712,"notin":8713,"ni":8715,"prod":8719,"sum":8721,"minus":8722,"lowast":8727,"radic":8730,"prop":8733,"infin":8734,"ang":8736,"and":8743,"or":8744,"cap":8745,"cup":8746,"int":8747,"there4":8756,"sim":8764,"cong":8773,"asymp":8776,"ne":8800,"equiv":8801,"le":8804,"ge":8805,"sub":8834,"sup":8835,"nsub":8836,"sube":8838,"supe":8839,"oplus":8853,"otimes":8855,"perp":8869,"sdot":8901,"lceil":8968,"rceil":8969,"lfloor":8970,"rfloor":8971,"lang":9001,"rang":9002,"loz":9674,"spades":9824,"clubs":9827,"hearts":9829,"diams":9830};Object.keys(sax2.ENTITIES).forEach(function(key){var e=sax2.ENTITIES[key];var s2=typeof e==="number"?String.fromCharCode(e):e;sax2.ENTITIES[key]=s2;});for(var s in sax2.STATE){sax2.STATE[sax2.STATE[s]]=s;}
S=sax2.STATE;function emit(parser,event,data){parser[event]&&parser[event](data);}
function emitNode(parser,nodeType,data){if(parser.textNode)
closeText(parser);emit(parser,nodeType,data);}
function closeText(parser){parser.textNode=textopts(parser.opt,parser.textNode);if(parser.textNode)
emit(parser,"ontext",parser.textNode);parser.textNode="";}
function textopts(opt,text){if(opt.trim)
text=text.trim();if(opt.normalize)
text=text.replace(/\s+/g," ");return text;}
function error(parser,er){closeText(parser);if(parser.trackPosition){er+="\nLine: "+parser.line+"\nColumn: "+parser.column+"\nChar: "+parser.c;}
er=new Error(er);parser.error=er;emit(parser,"onerror",er);return parser;}
function end(parser){if(parser.sawRoot&&!parser.closedRoot)
strictFail(parser,"Unclosed root tag");if(parser.state!==S.BEGIN&&parser.state!==S.BEGIN_WHITESPACE&&parser.state!==S.TEXT){error(parser,"Unexpected end");}
closeText(parser);parser.c="";parser.closed=true;emit(parser,"onend");SAXParser.call(parser,parser.strict,parser.opt);return parser;}
function strictFail(parser,message){if(typeof parser!=="object"||!(parser instanceof SAXParser)){throw new Error("bad call to strictFail");}
if(parser.strict){error(parser,message);}}
function newTag(parser){if(!parser.strict)
parser.tagName=parser.tagName[parser.looseCase]();var parent=parser.tags[parser.tags.length-1]||parser;var tag2=parser.tag={name:parser.tagName,attributes:{}};if(parser.opt.xmlns){tag2.ns=parent.ns;}
parser.attribList.length=0;emitNode(parser,"onopentagstart",tag2);}
function qname(name,attribute){var i2=name.indexOf(":");var qualName=i2<0?["",name]:name.split(":");var prefix=qualName[0];var local=qualName[1];if(attribute&&name==="xmlns"){prefix="xmlns";local="";}
return{prefix,local};}
function attrib(parser){if(!parser.strict){parser.attribName=parser.attribName[parser.looseCase]();}
if(parser.attribList.indexOf(parser.attribName)!==-1||parser.tag.attributes.hasOwnProperty(parser.attribName)){parser.attribName=parser.attribValue="";return;}
if(parser.opt.xmlns){var qn=qname(parser.attribName,true);var prefix=qn.prefix;var local=qn.local;if(prefix==="xmlns"){if(local==="xml"&&parser.attribValue!==XML_NAMESPACE){strictFail(parser,"xml: prefix must be bound to "+XML_NAMESPACE+"\nActual: "+parser.attribValue);}else if(local==="xmlns"&&parser.attribValue!==XMLNS_NAMESPACE){strictFail(parser,"xmlns: prefix must be bound to "+XMLNS_NAMESPACE+"\nActual: "+parser.attribValue);}else{var tag2=parser.tag;var parent=parser.tags[parser.tags.length-1]||parser;if(tag2.ns===parent.ns){tag2.ns=Object.create(parent.ns);}
tag2.ns[local]=parser.attribValue;}}
parser.attribList.push([parser.attribName,parser.attribValue]);}else{parser.tag.attributes[parser.attribName]=parser.attribValue;emitNode(parser,"onattribute",{name:parser.attribName,value:parser.attribValue});}
parser.attribName=parser.attribValue="";}
function openTag(parser,selfClosing){if(parser.opt.xmlns){var tag2=parser.tag;var qn=qname(parser.tagName);tag2.prefix=qn.prefix;tag2.local=qn.local;tag2.uri=tag2.ns[qn.prefix]||"";if(tag2.prefix&&!tag2.uri){strictFail(parser,"Unbound namespace prefix: "+JSON.stringify(parser.tagName));tag2.uri=qn.prefix;}
var parent=parser.tags[parser.tags.length-1]||parser;if(tag2.ns&&parent.ns!==tag2.ns){Object.keys(tag2.ns).forEach(function(p){emitNode(parser,"onopennamespace",{prefix:p,uri:tag2.ns[p]});});}
for(var i2=0,l=parser.attribList.length;i2<l;i2++){var nv=parser.attribList[i2];var name=nv[0];var value=nv[1];var qualName=qname(name,true);var prefix=qualName.prefix;var local=qualName.local;var uri=prefix===""?"":tag2.ns[prefix]||"";var a={name,value,prefix,local,uri};if(prefix&&prefix!=="xmlns"&&!uri){strictFail(parser,"Unbound namespace prefix: "+JSON.stringify(prefix));a.uri=prefix;}
parser.tag.attributes[name]=a;emitNode(parser,"onattribute",a);}
parser.attribList.length=0;}
parser.tag.isSelfClosing=!!selfClosing;parser.sawRoot=true;parser.tags.push(parser.tag);emitNode(parser,"onopentag",parser.tag);if(!selfClosing){if(!parser.noscript&&parser.tagName.toLowerCase()==="script"){parser.state=S.SCRIPT;}else{parser.state=S.TEXT;}
parser.tag=null;parser.tagName="";}
parser.attribName=parser.attribValue="";parser.attribList.length=0;}
function closeTag(parser){if(!parser.tagName){strictFail(parser,"Weird empty close tag.");parser.textNode+="</>";parser.state=S.TEXT;return;}
if(parser.script){if(parser.tagName!=="script"){parser.script+="</"+parser.tagName+">";parser.tagName="";parser.state=S.SCRIPT;return;}
emitNode(parser,"onscript",parser.script);parser.script="";}
var t=parser.tags.length;var tagName=parser.tagName;if(!parser.strict){tagName=tagName[parser.looseCase]();}
var closeTo=tagName;while(t--){var close=parser.tags[t];if(close.name!==closeTo){strictFail(parser,"Unexpected close tag");}else{break;}}
if(t<0){strictFail(parser,"Unmatched closing tag: "+parser.tagName);parser.textNode+="</"+parser.tagName+">";parser.state=S.TEXT;return;}
parser.tagName=tagName;var s2=parser.tags.length;while(s2-->t){var tag2=parser.tag=parser.tags.pop();parser.tagName=parser.tag.name;emitNode(parser,"onclosetag",parser.tagName);var x2={};for(var i2 in tag2.ns){x2[i2]=tag2.ns[i2];}
var parent=parser.tags[parser.tags.length-1]||parser;if(parser.opt.xmlns&&tag2.ns!==parent.ns){Object.keys(tag2.ns).forEach(function(p){var n2=tag2.ns[p];emitNode(parser,"onclosenamespace",{prefix:p,uri:n2});});}}
if(t===0)
parser.closedRoot=true;parser.tagName=parser.attribValue=parser.attribName="";parser.attribList.length=0;parser.state=S.TEXT;}
function parseEntity(parser){var entity=parser.entity;var entityLC=entity.toLowerCase();var num;var numStr="";if(parser.ENTITIES[entity]){return parser.ENTITIES[entity];}
if(parser.ENTITIES[entityLC]){return parser.ENTITIES[entityLC];}
entity=entityLC;if(entity.charAt(0)==="#"){if(entity.charAt(1)==="x"){entity=entity.slice(2);num=parseInt(entity,16);numStr=num.toString(16);}else{entity=entity.slice(1);num=parseInt(entity,10);numStr=num.toString(10);}}
entity=entity.replace(/^0+/,"");if(isNaN(num)||numStr.toLowerCase()!==entity){strictFail(parser,"Invalid character entity");return"&"+parser.entity+";";}
return String.fromCodePoint(num);}
function beginWhiteSpace(parser,c){if(c==="<"){parser.state=S.OPEN_WAKA;parser.startTagPosition=parser.position;}else if(!isWhitespace(c)){strictFail(parser,"Non-whitespace before first tag.");parser.textNode=c;parser.state=S.TEXT;}}
function charAt(chunk,i2){var result="";if(i2<chunk.length){result=chunk.charAt(i2);}
return result;}
function write(chunk){var parser=this;if(this.error){throw this.error;}
if(parser.closed){return error(parser,"Cannot write after close. Assign an onready handler.");}
if(chunk===null){return end(parser);}
if(typeof chunk==="object"){chunk=chunk.toString();}
var i2=0;var c="";while(true){c=charAt(chunk,i2++);parser.c=c;if(!c){break;}
if(parser.trackPosition){parser.position++;if(c==="\n"){parser.line++;parser.column=0;}else{parser.column++;}}
switch(parser.state){case S.BEGIN:parser.state=S.BEGIN_WHITESPACE;if(c==="\uFEFF"){continue;}
beginWhiteSpace(parser,c);continue;case S.BEGIN_WHITESPACE:beginWhiteSpace(parser,c);continue;case S.TEXT:if(parser.sawRoot&&!parser.closedRoot){var starti=i2-1;while(c&&c!=="<"&&c!=="&"){c=charAt(chunk,i2++);if(c&&parser.trackPosition){parser.position++;if(c==="\n"){parser.line++;parser.column=0;}else{parser.column++;}}}
parser.textNode+=chunk.substring(starti,i2-1);}
if(c==="<"&&!(parser.sawRoot&&parser.closedRoot&&!parser.strict)){parser.state=S.OPEN_WAKA;parser.startTagPosition=parser.position;}else{if(!isWhitespace(c)&&(!parser.sawRoot||parser.closedRoot)){strictFail(parser,"Text data outside of root node.");}
if(c==="&"){parser.state=S.TEXT_ENTITY;}else{parser.textNode+=c;}}
continue;case S.SCRIPT:if(c==="<"){parser.state=S.SCRIPT_ENDING;}else{parser.script+=c;}
continue;case S.SCRIPT_ENDING:if(c==="/"){parser.state=S.CLOSE_TAG;}else{parser.script+="<"+c;parser.state=S.SCRIPT;}
continue;case S.OPEN_WAKA:if(c==="!"){parser.state=S.SGML_DECL;parser.sgmlDecl="";}else if(isWhitespace(c)){}else if(isMatch(nameStart,c)){parser.state=S.OPEN_TAG;parser.tagName=c;}else if(c==="/"){parser.state=S.CLOSE_TAG;parser.tagName="";}else if(c==="?"){parser.state=S.PROC_INST;parser.procInstName=parser.procInstBody="";}else{strictFail(parser,"Unencoded <");if(parser.startTagPosition+1<parser.position){var pad2=parser.position-parser.startTagPosition;c=new Array(pad2).join(" ")+c;}
parser.textNode+="<"+c;parser.state=S.TEXT;}
continue;case S.SGML_DECL:if((parser.sgmlDecl+c).toUpperCase()===CDATA){emitNode(parser,"onopencdata");parser.state=S.CDATA;parser.sgmlDecl="";parser.cdata="";}else if(parser.sgmlDecl+c==="--"){parser.state=S.COMMENT;parser.comment="";parser.sgmlDecl="";}else if((parser.sgmlDecl+c).toUpperCase()===DOCTYPE){parser.state=S.DOCTYPE;if(parser.doctype||parser.sawRoot){strictFail(parser,"Inappropriately located doctype declaration");}
parser.doctype="";parser.sgmlDecl="";}else if(c===">"){emitNode(parser,"onsgmldeclaration",parser.sgmlDecl);parser.sgmlDecl="";parser.state=S.TEXT;}else if(isQuote(c)){parser.state=S.SGML_DECL_QUOTED;parser.sgmlDecl+=c;}else{parser.sgmlDecl+=c;}
continue;case S.SGML_DECL_QUOTED:if(c===parser.q){parser.state=S.SGML_DECL;parser.q="";}
parser.sgmlDecl+=c;continue;case S.DOCTYPE:if(c===">"){parser.state=S.TEXT;emitNode(parser,"ondoctype",parser.doctype);parser.doctype=true;}else{parser.doctype+=c;if(c==="["){parser.state=S.DOCTYPE_DTD;}else if(isQuote(c)){parser.state=S.DOCTYPE_QUOTED;parser.q=c;}}
continue;case S.DOCTYPE_QUOTED:parser.doctype+=c;if(c===parser.q){parser.q="";parser.state=S.DOCTYPE;}
continue;case S.DOCTYPE_DTD:parser.doctype+=c;if(c==="]"){parser.state=S.DOCTYPE;}else if(isQuote(c)){parser.state=S.DOCTYPE_DTD_QUOTED;parser.q=c;}
continue;case S.DOCTYPE_DTD_QUOTED:parser.doctype+=c;if(c===parser.q){parser.state=S.DOCTYPE_DTD;parser.q="";}
continue;case S.COMMENT:if(c==="-"){parser.state=S.COMMENT_ENDING;}else{parser.comment+=c;}
continue;case S.COMMENT_ENDING:if(c==="-"){parser.state=S.COMMENT_ENDED;parser.comment=textopts(parser.opt,parser.comment);if(parser.comment){emitNode(parser,"oncomment",parser.comment);}
parser.comment="";}else{parser.comment+="-"+c;parser.state=S.COMMENT;}
continue;case S.COMMENT_ENDED:if(c!==">"){strictFail(parser,"Malformed comment");parser.comment+="--"+c;parser.state=S.COMMENT;}else{parser.state=S.TEXT;}
continue;case S.CDATA:if(c==="]"){parser.state=S.CDATA_ENDING;}else{parser.cdata+=c;}
continue;case S.CDATA_ENDING:if(c==="]"){parser.state=S.CDATA_ENDING_2;}else{parser.cdata+="]"+c;parser.state=S.CDATA;}
continue;case S.CDATA_ENDING_2:if(c===">"){if(parser.cdata){emitNode(parser,"oncdata",parser.cdata);}
emitNode(parser,"onclosecdata");parser.cdata="";parser.state=S.TEXT;}else if(c==="]"){parser.cdata+="]";}else{parser.cdata+="]]"+c;parser.state=S.CDATA;}
continue;case S.PROC_INST:if(c==="?"){parser.state=S.PROC_INST_ENDING;}else if(isWhitespace(c)){parser.state=S.PROC_INST_BODY;}else{parser.procInstName+=c;}
continue;case S.PROC_INST_BODY:if(!parser.procInstBody&&isWhitespace(c)){continue;}else if(c==="?"){parser.state=S.PROC_INST_ENDING;}else{parser.procInstBody+=c;}
continue;case S.PROC_INST_ENDING:if(c===">"){emitNode(parser,"onprocessinginstruction",{name:parser.procInstName,body:parser.procInstBody});parser.procInstName=parser.procInstBody="";parser.state=S.TEXT;}else{parser.procInstBody+="?"+c;parser.state=S.PROC_INST_BODY;}
continue;case S.OPEN_TAG:if(isMatch(nameBody,c)){parser.tagName+=c;}else{newTag(parser);if(c===">"){openTag(parser);}else if(c==="/"){parser.state=S.OPEN_TAG_SLASH;}else{if(!isWhitespace(c)){strictFail(parser,"Invalid character in tag name");}
parser.state=S.ATTRIB;}}
continue;case S.OPEN_TAG_SLASH:if(c===">"){openTag(parser,true);closeTag(parser);}else{strictFail(parser,"Forward-slash in opening tag not followed by >");parser.state=S.ATTRIB;}
continue;case S.ATTRIB:if(isWhitespace(c)){continue;}else if(c===">"){openTag(parser);}else if(c==="/"){parser.state=S.OPEN_TAG_SLASH;}else if(isMatch(nameStart,c)){parser.attribName=c;parser.attribValue="";parser.state=S.ATTRIB_NAME;}else{strictFail(parser,"Invalid attribute name");}
continue;case S.ATTRIB_NAME:if(c==="="){parser.state=S.ATTRIB_VALUE;}else if(c===">"){strictFail(parser,"Attribute without value");parser.attribValue=parser.attribName;attrib(parser);openTag(parser);}else if(isWhitespace(c)){parser.state=S.ATTRIB_NAME_SAW_WHITE;}else if(isMatch(nameBody,c)){parser.attribName+=c;}else{strictFail(parser,"Invalid attribute name");}
continue;case S.ATTRIB_NAME_SAW_WHITE:if(c==="="){parser.state=S.ATTRIB_VALUE;}else if(isWhitespace(c)){continue;}else{strictFail(parser,"Attribute without value");parser.tag.attributes[parser.attribName]="";parser.attribValue="";emitNode(parser,"onattribute",{name:parser.attribName,value:""});parser.attribName="";if(c===">"){openTag(parser);}else if(isMatch(nameStart,c)){parser.attribName=c;parser.state=S.ATTRIB_NAME;}else{strictFail(parser,"Invalid attribute name");parser.state=S.ATTRIB;}}
continue;case S.ATTRIB_VALUE:if(isWhitespace(c)){continue;}else if(isQuote(c)){parser.q=c;parser.state=S.ATTRIB_VALUE_QUOTED;}else{strictFail(parser,"Unquoted attribute value");parser.state=S.ATTRIB_VALUE_UNQUOTED;parser.attribValue=c;}
continue;case S.ATTRIB_VALUE_QUOTED:if(c!==parser.q){if(c==="&"){parser.state=S.ATTRIB_VALUE_ENTITY_Q;}else{parser.attribValue+=c;}
continue;}
attrib(parser);parser.q="";parser.state=S.ATTRIB_VALUE_CLOSED;continue;case S.ATTRIB_VALUE_CLOSED:if(isWhitespace(c)){parser.state=S.ATTRIB;}else if(c===">"){openTag(parser);}else if(c==="/"){parser.state=S.OPEN_TAG_SLASH;}else if(isMatch(nameStart,c)){strictFail(parser,"No whitespace between attributes");parser.attribName=c;parser.attribValue="";parser.state=S.ATTRIB_NAME;}else{strictFail(parser,"Invalid attribute name");}
continue;case S.ATTRIB_VALUE_UNQUOTED:if(!isAttribEnd(c)){if(c==="&"){parser.state=S.ATTRIB_VALUE_ENTITY_U;}else{parser.attribValue+=c;}
continue;}
attrib(parser);if(c===">"){openTag(parser);}else{parser.state=S.ATTRIB;}
continue;case S.CLOSE_TAG:if(!parser.tagName){if(isWhitespace(c)){continue;}else if(notMatch(nameStart,c)){if(parser.script){parser.script+="</"+c;parser.state=S.SCRIPT;}else{strictFail(parser,"Invalid tagname in closing tag.");}}else{parser.tagName=c;}}else if(c===">"){closeTag(parser);}else if(isMatch(nameBody,c)){parser.tagName+=c;}else if(parser.script){parser.script+="</"+parser.tagName;parser.tagName="";parser.state=S.SCRIPT;}else{if(!isWhitespace(c)){strictFail(parser,"Invalid tagname in closing tag");}
parser.state=S.CLOSE_TAG_SAW_WHITE;}
continue;case S.CLOSE_TAG_SAW_WHITE:if(isWhitespace(c)){continue;}
if(c===">"){closeTag(parser);}else{strictFail(parser,"Invalid characters in closing tag");}
continue;case S.TEXT_ENTITY:case S.ATTRIB_VALUE_ENTITY_Q:case S.ATTRIB_VALUE_ENTITY_U:var returnState;var buffer;switch(parser.state){case S.TEXT_ENTITY:returnState=S.TEXT;buffer="textNode";break;case S.ATTRIB_VALUE_ENTITY_Q:returnState=S.ATTRIB_VALUE_QUOTED;buffer="attribValue";break;case S.ATTRIB_VALUE_ENTITY_U:returnState=S.ATTRIB_VALUE_UNQUOTED;buffer="attribValue";break;}
if(c===";"){parser[buffer]+=parseEntity(parser);parser.entity="";parser.state=returnState;}else if(isMatch(parser.entity.length?entityBody:entityStart,c)){parser.entity+=c;}else{strictFail(parser,"Invalid character in entity name");parser[buffer]+="&"+parser.entity+c;parser.entity="";parser.state=returnState;}
continue;default:throw new Error(parser,"Unknown state: "+parser.state);}}
if(parser.position>=parser.bufferCheckPosition){checkBufferLength(parser);}
return parser;}
if(!String.fromCodePoint){(function(){var stringFromCharCode=String.fromCharCode;var floor2=Math.floor;var fromCodePoint=function(){var MAX_SIZE=16384;var codeUnits=[];var highSurrogate;var lowSurrogate;var index2=-1;var length3=arguments.length;if(!length3){return"";}
var result="";while(++index2<length3){var codePoint=Number(arguments[index2]);if(!isFinite(codePoint)||codePoint<0||codePoint>1114111||floor2(codePoint)!==codePoint){throw RangeError("Invalid code point: "+codePoint);}
if(codePoint<=65535){codeUnits.push(codePoint);}else{codePoint-=65536;highSurrogate=(codePoint>>10)+55296;lowSurrogate=codePoint%1024+56320;codeUnits.push(highSurrogate,lowSurrogate);}
if(index2+1===length3||codeUnits.length>MAX_SIZE){result+=stringFromCharCode.apply(null,codeUnits);codeUnits.length=0;}}
return result;};if(Object.defineProperty){Object.defineProperty(String,"fromCodePoint",{value:fromCodePoint,configurable:true,writable:true});}else{String.fromCodePoint=fromCodePoint;}})();}})(typeof exports2==="undefined"?exports2.sax={}:exports2);}});var fs_exports={};__export(fs_exports,{default:()=>fs_default});var fs_default;var init_fs=__esm({"do-nothing:fs"(){fs_default=false;}});var require_inherits_browser=__commonJS({"../../node_modules/.pnpm/inherits@2.0.4/node_modules/inherits/inherits_browser.js"(exports2,module2){if(typeof Object.create==="function"){module2.exports=function inherits(ctor,superCtor){if(superCtor){ctor.super_=superCtor;ctor.prototype=Object.create(superCtor.prototype,{constructor:{value:ctor,enumerable:false,writable:true,configurable:true}});}};}else{module2.exports=function inherits(ctor,superCtor){if(superCtor){ctor.super_=superCtor;var TempCtor=function(){};TempCtor.prototype=superCtor.prototype;ctor.prototype=new TempCtor();ctor.prototype.constructor=ctor;}};}}});var require_events=__commonJS({"node_modules/events/events.js"(exports2,module2){"use strict";var R=typeof Reflect==="object"?Reflect:null;var ReflectApply=R&&typeof R.apply==="function"?R.apply:function ReflectApply2(target,receiver,args){return Function.prototype.apply.call(target,receiver,args);};var ReflectOwnKeys;if(R&&typeof R.ownKeys==="function"){ReflectOwnKeys=R.ownKeys;}else if(Object.getOwnPropertySymbols){ReflectOwnKeys=function ReflectOwnKeys2(target){return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));};}else{ReflectOwnKeys=function ReflectOwnKeys2(target){return Object.getOwnPropertyNames(target);};}
function ProcessEmitWarning(warning){if(console&&console.warn)
console.warn(warning);}
var NumberIsNaN=Number.isNaN||function NumberIsNaN2(value){return value!==value;};function EventEmitter2(){EventEmitter2.init.call(this);}
module2.exports=EventEmitter2;module2.exports.once=once;EventEmitter2.EventEmitter=EventEmitter2;EventEmitter2.prototype._events=void 0;EventEmitter2.prototype._eventsCount=0;EventEmitter2.prototype._maxListeners=void 0;var defaultMaxListeners=10;function checkListener(listener){if(typeof listener!=="function"){throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof listener);}}
Object.defineProperty(EventEmitter2,"defaultMaxListeners",{enumerable:true,get:function(){return defaultMaxListeners;},set:function(arg){if(typeof arg!=="number"||arg<0||NumberIsNaN(arg)){throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+arg+".");}
defaultMaxListeners=arg;}});EventEmitter2.init=function(){if(this._events===void 0||this._events===Object.getPrototypeOf(this)._events){this._events=Object.create(null);this._eventsCount=0;}
this._maxListeners=this._maxListeners||void 0;};EventEmitter2.prototype.setMaxListeners=function setMaxListeners(n2){if(typeof n2!=="number"||n2<0||NumberIsNaN(n2)){throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+n2+".");}
this._maxListeners=n2;return this;};function _getMaxListeners(that){if(that._maxListeners===void 0)
return EventEmitter2.defaultMaxListeners;return that._maxListeners;}
EventEmitter2.prototype.getMaxListeners=function getMaxListeners(){return _getMaxListeners(this);};EventEmitter2.prototype.emit=function emit(type){var args=[];for(var i2=1;i2<arguments.length;i2++)
args.push(arguments[i2]);var doError=type==="error";var events=this._events;if(events!==void 0)
doError=doError&&events.error===void 0;else if(!doError)
return false;if(doError){var er;if(args.length>0)
er=args[0];if(er instanceof Error){throw er;}
var err=new Error("Unhandled error."+(er?" ("+er.message+")":""));err.context=er;throw err;}
var handler=events[type];if(handler===void 0)
return false;if(typeof handler==="function"){ReflectApply(handler,this,args);}else{var len2=handler.length;var listeners=arrayClone(handler,len2);for(var i2=0;i2<len2;++i2)
ReflectApply(listeners[i2],this,args);}
return true;};function _addListener(target,type,listener,prepend){var m;var events;var existing;checkListener(listener);events=target._events;if(events===void 0){events=target._events=Object.create(null);target._eventsCount=0;}else{if(events.newListener!==void 0){target.emit("newListener",type,listener.listener?listener.listener:listener);events=target._events;}
existing=events[type];}
if(existing===void 0){existing=events[type]=listener;++target._eventsCount;}else{if(typeof existing==="function"){existing=events[type]=prepend?[listener,existing]:[existing,listener];}else if(prepend){existing.unshift(listener);}else{existing.push(listener);}
m=_getMaxListeners(target);if(m>0&&existing.length>m&&!existing.warned){existing.warned=true;var w=new Error("Possible EventEmitter memory leak detected. "+existing.length+" "+String(type)+" listeners added. Use emitter.setMaxListeners() to increase limit");w.name="MaxListenersExceededWarning";w.emitter=target;w.type=type;w.count=existing.length;ProcessEmitWarning(w);}}
return target;}
EventEmitter2.prototype.addListener=function addListener(type,listener){return _addListener(this,type,listener,false);};EventEmitter2.prototype.on=EventEmitter2.prototype.addListener;EventEmitter2.prototype.prependListener=function prependListener(type,listener){return _addListener(this,type,listener,true);};function onceWrapper(){if(!this.fired){this.target.removeListener(this.type,this.wrapFn);this.fired=true;if(arguments.length===0)
return this.listener.call(this.target);return this.listener.apply(this.target,arguments);}}
function _onceWrap(target,type,listener){var state={fired:false,wrapFn:void 0,target,type,listener};var wrapped=onceWrapper.bind(state);wrapped.listener=listener;state.wrapFn=wrapped;return wrapped;}
EventEmitter2.prototype.once=function once2(type,listener){checkListener(listener);this.on(type,_onceWrap(this,type,listener));return this;};EventEmitter2.prototype.prependOnceListener=function prependOnceListener(type,listener){checkListener(listener);this.prependListener(type,_onceWrap(this,type,listener));return this;};EventEmitter2.prototype.removeListener=function removeListener(type,listener){var list,events,position2,i2,originalListener;checkListener(listener);events=this._events;if(events===void 0)
return this;list=events[type];if(list===void 0)
return this;if(list===listener||list.listener===listener){if(--this._eventsCount===0)
this._events=Object.create(null);else{delete events[type];if(events.removeListener)
this.emit("removeListener",type,list.listener||listener);}}else if(typeof list!=="function"){position2=-1;for(i2=list.length-1;i2>=0;i2--){if(list[i2]===listener||list[i2].listener===listener){originalListener=list[i2].listener;position2=i2;break;}}
if(position2<0)
return this;if(position2===0)
list.shift();else{spliceOne(list,position2);}
if(list.length===1)
events[type]=list[0];if(events.removeListener!==void 0)
this.emit("removeListener",type,originalListener||listener);}
return this;};EventEmitter2.prototype.off=EventEmitter2.prototype.removeListener;EventEmitter2.prototype.removeAllListeners=function removeAllListeners(type){var listeners,events,i2;events=this._events;if(events===void 0)
return this;if(events.removeListener===void 0){if(arguments.length===0){this._events=Object.create(null);this._eventsCount=0;}else if(events[type]!==void 0){if(--this._eventsCount===0)
this._events=Object.create(null);else
delete events[type];}
return this;}
if(arguments.length===0){var keys3=Object.keys(events);var key;for(i2=0;i2<keys3.length;++i2){key=keys3[i2];if(key==="removeListener")
continue;this.removeAllListeners(key);}
this.removeAllListeners("removeListener");this._events=Object.create(null);this._eventsCount=0;return this;}
listeners=events[type];if(typeof listeners==="function"){this.removeListener(type,listeners);}else if(listeners!==void 0){for(i2=listeners.length-1;i2>=0;i2--){this.removeListener(type,listeners[i2]);}}
return this;};function _listeners(target,type,unwrap){var events=target._events;if(events===void 0)
return[];var evlistener=events[type];if(evlistener===void 0)
return[];if(typeof evlistener==="function")
return unwrap?[evlistener.listener||evlistener]:[evlistener];return unwrap?unwrapListeners(evlistener):arrayClone(evlistener,evlistener.length);}
EventEmitter2.prototype.listeners=function listeners(type){return _listeners(this,type,true);};EventEmitter2.prototype.rawListeners=function rawListeners(type){return _listeners(this,type,false);};EventEmitter2.listenerCount=function(emitter,type){if(typeof emitter.listenerCount==="function"){return emitter.listenerCount(type);}else{return listenerCount.call(emitter,type);}};EventEmitter2.prototype.listenerCount=listenerCount;function listenerCount(type){var events=this._events;if(events!==void 0){var evlistener=events[type];if(typeof evlistener==="function"){return 1;}else if(evlistener!==void 0){return evlistener.length;}}
return 0;}
EventEmitter2.prototype.eventNames=function eventNames(){return this._eventsCount>0?ReflectOwnKeys(this._events):[];};function arrayClone(arr2,n2){var copy4=new Array(n2);for(var i2=0;i2<n2;++i2)
copy4[i2]=arr2[i2];return copy4;}
function spliceOne(list,index2){for(;index2+1<list.length;index2++)
list[index2]=list[index2+1];list.pop();}
function unwrapListeners(arr2){var ret=new Array(arr2.length);for(var i2=0;i2<ret.length;++i2){ret[i2]=arr2[i2].listener||arr2[i2];}
return ret;}
function once(emitter,name){return new Promise(function(resolve,reject){function errorListener(err){emitter.removeListener(name,resolver);reject(err);}
function resolver(){if(typeof emitter.removeListener==="function"){emitter.removeListener("error",errorListener);}
resolve([].slice.call(arguments));};eventTargetAgnosticAddListener(emitter,name,resolver,{once:true});if(name!=="error"){addErrorHandlerIfEventEmitter(emitter,errorListener,{once:true});}});}
function addErrorHandlerIfEventEmitter(emitter,handler,flags){if(typeof emitter.on==="function"){eventTargetAgnosticAddListener(emitter,"error",handler,flags);}}
function eventTargetAgnosticAddListener(emitter,name,listener,flags){if(typeof emitter.on==="function"){if(flags.once){emitter.once(name,listener);}else{emitter.on(name,listener);}}else if(typeof emitter.addEventListener==="function"){emitter.addEventListener(name,function wrapListener(arg){if(flags.once){emitter.removeEventListener(name,wrapListener);}
listener(arg);});}else{throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof emitter);}}}});var require_queue=__commonJS({"../../node_modules/.pnpm/queue@6.0.2/node_modules/queue/index.js"(exports2,module2){var inherits=require_inherits_browser();var EventEmitter2=require_events().EventEmitter;module2.exports=Queue;module2.exports.default=Queue;function Queue(options){if(!(this instanceof Queue)){return new Queue(options);}
EventEmitter2.call(this);options=options||{};this.concurrency=options.concurrency||Infinity;this.timeout=options.timeout||0;this.autostart=options.autostart||false;this.results=options.results||null;this.pending=0;this.session=0;this.running=false;this.jobs=[];this.timers={};}
inherits(Queue,EventEmitter2);var arrayMethods=["pop","shift","indexOf","lastIndexOf"];arrayMethods.forEach(function(method){Queue.prototype[method]=function(){return Array.prototype[method].apply(this.jobs,arguments);};});Queue.prototype.slice=function(begin,end){this.jobs=this.jobs.slice(begin,end);return this;};Queue.prototype.reverse=function(){this.jobs.reverse();return this;};var arrayAddMethods=["push","unshift","splice"];arrayAddMethods.forEach(function(method){Queue.prototype[method]=function(){var methodResult=Array.prototype[method].apply(this.jobs,arguments);if(this.autostart){this.start();}
return methodResult;};});Object.defineProperty(Queue.prototype,"length",{get:function(){return this.pending+this.jobs.length;}});Queue.prototype.start=function(cb){if(cb){callOnErrorOrEnd.call(this,cb);}
this.running=true;if(this.pending>=this.concurrency){return;}
if(this.jobs.length===0){if(this.pending===0){done.call(this);}
return;}
var self2=this;var job=this.jobs.shift();var once=true;var session=this.session;var timeoutId=null;var didTimeout=false;var resultIndex=null;var timeout2=job.hasOwnProperty("timeout")?job.timeout:this.timeout;function next(err,result){if(once&&self2.session===session){once=false;self2.pending--;if(timeoutId!==null){delete self2.timers[timeoutId];clearTimeout(timeoutId);}
if(err){self2.emit("error",err,job);}else if(didTimeout===false){if(resultIndex!==null){self2.results[resultIndex]=Array.prototype.slice.call(arguments,1);}
self2.emit("success",result,job);}
if(self2.session===session){if(self2.pending===0&&self2.jobs.length===0){done.call(self2);}else if(self2.running){self2.start();}}}}
if(timeout2){timeoutId=setTimeout(function(){didTimeout=true;if(self2.listeners("timeout").length>0){self2.emit("timeout",next,job);}else{next();}},timeout2);this.timers[timeoutId]=timeoutId;}
if(this.results){resultIndex=this.results.length;this.results[resultIndex]=null;}
this.pending++;self2.emit("start",job);var promise=job(next);if(promise&&promise.then&&typeof promise.then==="function"){promise.then(function(result){return next(null,result);}).catch(function(err){return next(err||true);});}
if(this.running&&this.jobs.length>0){this.start();}};Queue.prototype.stop=function(){this.running=false;};Queue.prototype.end=function(err){clearTimers.call(this);this.jobs.length=0;this.pending=0;done.call(this,err);};function clearTimers(){for(var key in this.timers){var timeoutId=this.timers[key];delete this.timers[key];clearTimeout(timeoutId);}}
function callOnErrorOrEnd(cb){var self2=this;this.on("error",onerror);this.on("end",onend);function onerror(err){self2.end(err);}
function onend(err){self2.removeListener("error",onerror);self2.removeListener("end",onend);cb(err,this.results);}}
function done(err){this.session++;this.running=false;this.emit("end",err);}}});var require_bmp=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/bmp.js"(exports2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});exports2.BMP=void 0;exports2.BMP={validate(buffer){return"BM"===buffer.toString("ascii",0,2);},calculate(buffer){return{height:Math.abs(buffer.readInt32LE(22)),width:buffer.readUInt32LE(18)};}};}});var require_ico=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/ico.js"(exports2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});exports2.ICO=void 0;var TYPE_ICON=1;var SIZE_HEADER=2+2+2;var SIZE_IMAGE_ENTRY=1+1+1+1+2+2+4+4;function getSizeFromOffset(buffer,offset){const value=buffer.readUInt8(offset);return value===0?256:value;}
function getImageSize(buffer,imageIndex){const offset=SIZE_HEADER+imageIndex*SIZE_IMAGE_ENTRY;return{height:getSizeFromOffset(buffer,offset+1),width:getSizeFromOffset(buffer,offset)};}
exports2.ICO={validate(buffer){const reserved=buffer.readUInt16LE(0);const imageCount=buffer.readUInt16LE(4);if(reserved!==0||imageCount===0){return false;}
const imageType=buffer.readUInt16LE(2);return imageType===TYPE_ICON;},calculate(buffer){const nbImages=buffer.readUInt16LE(4);const imageSize=getImageSize(buffer,0);if(nbImages===1){return imageSize;}
const imgs=[imageSize];for(let imageIndex=1;imageIndex<nbImages;imageIndex+=1){imgs.push(getImageSize(buffer,imageIndex));}
const result={height:imageSize.height,images:imgs,width:imageSize.width};return result;}};}});var require_cur=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/cur.js"(exports2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});exports2.CUR=void 0;var ico_1=require_ico();var TYPE_CURSOR=2;exports2.CUR={validate(buffer){const reserved=buffer.readUInt16LE(0);const imageCount=buffer.readUInt16LE(4);if(reserved!==0||imageCount===0){return false;}
const imageType=buffer.readUInt16LE(2);return imageType===TYPE_CURSOR;},calculate(buffer){return ico_1.ICO.calculate(buffer);}};}});var require_dds=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/dds.js"(exports2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});exports2.DDS=void 0;exports2.DDS={validate(buffer){return buffer.readUInt32LE(0)===542327876;},calculate(buffer){return{height:buffer.readUInt32LE(12),width:buffer.readUInt32LE(16)};}};}});var require_gif=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/gif.js"(exports2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});exports2.GIF=void 0;var gifRegexp=/^GIF8[79]a/;exports2.GIF={validate(buffer){const signature=buffer.toString("ascii",0,6);return gifRegexp.test(signature);},calculate(buffer){return{height:buffer.readUInt16LE(8),width:buffer.readUInt16LE(6)};}};}});var require_icns=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/icns.js"(exports2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});exports2.ICNS=void 0;var SIZE_HEADER=4+4;var FILE_LENGTH_OFFSET=4;var ENTRY_LENGTH_OFFSET=4;var ICON_TYPE_SIZE={ICON:32,"ICN#":32,"icm#":16,icm4:16,icm8:16,"ics#":16,ics4:16,ics8:16,is32:16,s8mk:16,icp4:16,icl4:32,icl8:32,il32:32,l8mk:32,icp5:32,ic11:32,ich4:48,ich8:48,ih32:48,h8mk:48,icp6:64,ic12:32,it32:128,t8mk:128,ic07:128,ic08:256,ic13:256,ic09:512,ic14:512,ic10:1024};function readImageHeader(buffer,imageOffset){const imageLengthOffset=imageOffset+ENTRY_LENGTH_OFFSET;return[buffer.toString("ascii",imageOffset,imageLengthOffset),buffer.readUInt32BE(imageLengthOffset)];}
function getImageSize(type){const size4=ICON_TYPE_SIZE[type];return{width:size4,height:size4,type};}
exports2.ICNS={validate(buffer){return"icns"===buffer.toString("ascii",0,4);},calculate(buffer){const bufferLength=buffer.length;const fileLength=buffer.readUInt32BE(FILE_LENGTH_OFFSET);let imageOffset=SIZE_HEADER;let imageHeader=readImageHeader(buffer,imageOffset);let imageSize=getImageSize(imageHeader[0]);imageOffset+=imageHeader[1];if(imageOffset===fileLength){return imageSize;}
const result={height:imageSize.height,images:[imageSize],width:imageSize.width};while(imageOffset<fileLength&&imageOffset<bufferLength){imageHeader=readImageHeader(buffer,imageOffset);imageSize=getImageSize(imageHeader[0]);imageOffset+=imageHeader[1];result.images.push(imageSize);}
return result;}};}});var require_j2c=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/j2c.js"(exports2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});exports2.J2C=void 0;exports2.J2C={validate(buffer){return buffer.toString("hex",0,4)==="ff4fff51";},calculate(buffer){return{height:buffer.readUInt32BE(12),width:buffer.readUInt32BE(8)};}};}});var require_jp2=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/jp2.js"(exports2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});exports2.JP2=void 0;var BoxTypes={ftyp:"66747970",ihdr:"69686472",jp2h:"6a703268",jp__:"6a502020",rreq:"72726571",xml_:"786d6c20"};var calculateRREQLength=(box)=>{const unit2=box.readUInt8(0);let offset=1+2*unit2;const numStdFlags=box.readUInt16BE(offset);const flagsLength=numStdFlags*(2+unit2);offset=offset+2+flagsLength;const numVendorFeatures=box.readUInt16BE(offset);const featuresLength=numVendorFeatures*(16+unit2);return offset+2+featuresLength;};var parseIHDR=(box)=>{return{height:box.readUInt32BE(4),width:box.readUInt32BE(8)};};exports2.JP2={validate(buffer){const signature=buffer.toString("hex",4,8);const signatureLength=buffer.readUInt32BE(0);if(signature!==BoxTypes.jp__||signatureLength<1){return false;}
const ftypeBoxStart=signatureLength+4;const ftypBoxLength=buffer.readUInt32BE(signatureLength);const ftypBox=buffer.slice(ftypeBoxStart,ftypeBoxStart+ftypBoxLength);return ftypBox.toString("hex",0,4)===BoxTypes.ftyp;},calculate(buffer){const signatureLength=buffer.readUInt32BE(0);const ftypBoxLength=buffer.readUInt16BE(signatureLength+2);let offset=signatureLength+4+ftypBoxLength;const nextBoxType=buffer.toString("hex",offset,offset+4);switch(nextBoxType){case BoxTypes.rreq:const MAGIC=4;offset=offset+4+MAGIC+calculateRREQLength(buffer.slice(offset+4));return parseIHDR(buffer.slice(offset+8,offset+24));case BoxTypes.jp2h:return parseIHDR(buffer.slice(offset+8,offset+24));default:throw new TypeError("Unsupported header found: "+buffer.toString("ascii",offset,offset+4));}}};}});var require_readUInt=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/readUInt.js"(exports2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});exports2.readUInt=void 0;function readUInt(buffer,bits,offset,isBigEndian2){offset=offset||0;const endian=isBigEndian2?"BE":"LE";const methodName="readUInt"+bits+endian;return buffer[methodName].call(buffer,offset);}
exports2.readUInt=readUInt;}});var require_jpg=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/jpg.js"(exports2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});exports2.JPG=void 0;var readUInt_1=require_readUInt();var EXIF_MARKER="45786966";var APP1_DATA_SIZE_BYTES=2;var EXIF_HEADER_BYTES=6;var TIFF_BYTE_ALIGN_BYTES=2;var BIG_ENDIAN_BYTE_ALIGN="4d4d";var LITTLE_ENDIAN_BYTE_ALIGN="4949";var IDF_ENTRY_BYTES=12;var NUM_DIRECTORY_ENTRIES_BYTES=2;function isEXIF(buffer){return buffer.toString("hex",2,6)===EXIF_MARKER;}
function extractSize(buffer,index2){return{height:buffer.readUInt16BE(index2),width:buffer.readUInt16BE(index2+2)};}
function extractOrientation(exifBlock,isBigEndian2){const idfOffset=8;const offset=EXIF_HEADER_BYTES+idfOffset;const idfDirectoryEntries=(0,readUInt_1.readUInt)(exifBlock,16,offset,isBigEndian2);for(let directoryEntryNumber=0;directoryEntryNumber<idfDirectoryEntries;directoryEntryNumber++){const start=offset+NUM_DIRECTORY_ENTRIES_BYTES+directoryEntryNumber*IDF_ENTRY_BYTES;const end=start+IDF_ENTRY_BYTES;if(start>exifBlock.length){return;}
const block=exifBlock.slice(start,end);const tagNumber=(0,readUInt_1.readUInt)(block,16,0,isBigEndian2);if(tagNumber===274){const dataFormat=(0,readUInt_1.readUInt)(block,16,2,isBigEndian2);if(dataFormat!==3){return;}
const numberOfComponents=(0,readUInt_1.readUInt)(block,32,4,isBigEndian2);if(numberOfComponents!==1){return;}
return(0,readUInt_1.readUInt)(block,16,8,isBigEndian2);}}}
function validateExifBlock(buffer,index2){const exifBlock=buffer.slice(APP1_DATA_SIZE_BYTES,index2);const byteAlign=exifBlock.toString("hex",EXIF_HEADER_BYTES,EXIF_HEADER_BYTES+TIFF_BYTE_ALIGN_BYTES);const isBigEndian2=byteAlign===BIG_ENDIAN_BYTE_ALIGN;const isLittleEndian=byteAlign===LITTLE_ENDIAN_BYTE_ALIGN;if(isBigEndian2||isLittleEndian){return extractOrientation(exifBlock,isBigEndian2);}}
function validateBuffer(buffer,index2){if(index2>buffer.length){throw new TypeError("Corrupt JPG, exceeded buffer limits");}
if(buffer[index2]!==255){throw new TypeError("Invalid JPG, marker table corrupted");}}
exports2.JPG={validate(buffer){const SOIMarker=buffer.toString("hex",0,2);return"ffd8"===SOIMarker;},calculate(buffer){buffer=buffer.slice(4);let orientation;let next;while(buffer.length){const i2=buffer.readUInt16BE(0);if(isEXIF(buffer)){orientation=validateExifBlock(buffer,i2);}
validateBuffer(buffer,i2);next=buffer[i2+1];if(next===192||next===193||next===194){const size4=extractSize(buffer,i2+5);if(!orientation){return size4;}
return{height:size4.height,orientation,width:size4.width};}
buffer=buffer.slice(i2+2);}
throw new TypeError("Invalid JPG, no size found");}};}});var require_ktx=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/ktx.js"(exports2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});exports2.KTX=void 0;var SIGNATURE="KTX 11";exports2.KTX={validate(buffer){return SIGNATURE===buffer.toString("ascii",1,7);},calculate(buffer){return{height:buffer.readUInt32LE(40),width:buffer.readUInt32LE(36)};}};}});var require_png=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/png.js"(exports2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});exports2.PNG=void 0;var pngSignature="PNG\r\n\n";var pngImageHeaderChunkName="IHDR";var pngFriedChunkName="CgBI";exports2.PNG={validate(buffer){if(pngSignature===buffer.toString("ascii",1,8)){let chunkName=buffer.toString("ascii",12,16);if(chunkName===pngFriedChunkName){chunkName=buffer.toString("ascii",28,32);}
if(chunkName!==pngImageHeaderChunkName){throw new TypeError("Invalid PNG");}
return true;}
return false;},calculate(buffer){if(buffer.toString("ascii",12,16)===pngFriedChunkName){return{height:buffer.readUInt32BE(36),width:buffer.readUInt32BE(32)};}
return{height:buffer.readUInt32BE(20),width:buffer.readUInt32BE(16)};}};}});var require_pnm=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/pnm.js"(exports2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});exports2.PNM=void 0;var PNMTypes={P1:"pbm/ascii",P2:"pgm/ascii",P3:"ppm/ascii",P4:"pbm",P5:"pgm",P6:"ppm",P7:"pam",PF:"pfm"};var Signatures=Object.keys(PNMTypes);var handlers={default:(lines)=>{let dimensions=[];while(lines.length>0){const line=lines.shift();if(line[0]==="#"){continue;}
dimensions=line.split(" ");break;}
if(dimensions.length===2){return{height:parseInt(dimensions[1],10),width:parseInt(dimensions[0],10)};}else{throw new TypeError("Invalid PNM");}},pam:(lines)=>{const size4={};while(lines.length>0){const line=lines.shift();if(line.length>16||line.charCodeAt(0)>128){continue;}
const[key,value]=line.split(" ");if(key&&value){size4[key.toLowerCase()]=parseInt(value,10);}
if(size4.height&&size4.width){break;}}
if(size4.height&&size4.width){return{height:size4.height,width:size4.width};}else{throw new TypeError("Invalid PAM");}}};exports2.PNM={validate(buffer){const signature=buffer.toString("ascii",0,2);return Signatures.includes(signature);},calculate(buffer){const signature=buffer.toString("ascii",0,2);const type=PNMTypes[signature];const lines=buffer.toString("ascii",3).split(/[\r\n]+/);const handler=handlers[type]||handlers.default;return handler(lines);}};}});var require_psd=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/psd.js"(exports2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});exports2.PSD=void 0;exports2.PSD={validate(buffer){return"8BPS"===buffer.toString("ascii",0,4);},calculate(buffer){return{height:buffer.readUInt32BE(14),width:buffer.readUInt32BE(18)};}};}});var require_svg=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/svg.js"(exports2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});exports2.SVG=void 0;var svgReg=/<svg\s([^>"']|"[^"]*"|'[^']*')*>/;var extractorRegExps={height:/\sheight=(['"])([^%]+?)\1/,root:svgReg,viewbox:/\sviewBox=(['"])(.+?)\1/i,width:/\swidth=(['"])([^%]+?)\1/};var INCH_CM=2.54;var units={in:96,cm:96/INCH_CM,em:16,ex:8,m:96/INCH_CM*100,mm:96/INCH_CM/10,pc:96/72/12,pt:96/72,px:1};var unitsReg=new RegExp(`^([0-9.]+(?:e\\d+)?)(${Object.keys(units).join("|")})?$`);function parseLength(len2){const m=unitsReg.exec(len2);if(!m){return void 0;}
return Math.round(Number(m[1])*(units[m[2]]||1));}
function parseViewbox(viewbox){const bounds=viewbox.split(" ");return{height:parseLength(bounds[3]),width:parseLength(bounds[2])};}
function parseAttributes(root3){const width2=root3.match(extractorRegExps.width);const height=root3.match(extractorRegExps.height);const viewbox=root3.match(extractorRegExps.viewbox);return{height:height&&parseLength(height[2]),viewbox:viewbox&&parseViewbox(viewbox[2]),width:width2&&parseLength(width2[2])};}
function calculateByDimensions(attrs){return{height:attrs.height,width:attrs.width};}
function calculateByViewbox(attrs,viewbox){const ratio=viewbox.width/viewbox.height;if(attrs.width){return{height:Math.floor(attrs.width/ratio),width:attrs.width};}
if(attrs.height){return{height:attrs.height,width:Math.floor(attrs.height*ratio)};}
return{height:viewbox.height,width:viewbox.width};}
exports2.SVG={validate(buffer){const str3=String(buffer);return svgReg.test(str3);},calculate(buffer){const root3=buffer.toString("utf8").match(extractorRegExps.root);if(root3){const attrs=parseAttributes(root3[0]);if(attrs.width&&attrs.height){return calculateByDimensions(attrs);}
if(attrs.viewbox){return calculateByViewbox(attrs,attrs.viewbox);}}
throw new TypeError("Invalid SVG");}};}});var require_tga=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/tga.js"(exports2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});exports2.TGA=void 0;exports2.TGA={validate(buffer){return buffer.readUInt16LE(0)===0&&buffer.readUInt16LE(4)===0;},calculate(buffer){return{height:buffer.readUInt16LE(14),width:buffer.readUInt16LE(12)};}};}});var require_tiff=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/tiff.js"(exports2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});exports2.TIFF=void 0;var fs=(init_fs(),__toCommonJS(fs_exports));var readUInt_1=require_readUInt();function readIFD(buffer,filepath,isBigEndian2){const ifdOffset=(0,readUInt_1.readUInt)(buffer,32,4,isBigEndian2);let bufferSize=1024;const fileSize=fs.statSync(filepath).size;if(ifdOffset+bufferSize>fileSize){bufferSize=fileSize-ifdOffset-10;}
const endBuffer=Buffer.alloc(bufferSize);const descriptor=fs.openSync(filepath,"r");fs.readSync(descriptor,endBuffer,0,bufferSize,ifdOffset);fs.closeSync(descriptor);return endBuffer.slice(2);}
function readValue(buffer,isBigEndian2){const low=(0,readUInt_1.readUInt)(buffer,16,8,isBigEndian2);const high=(0,readUInt_1.readUInt)(buffer,16,10,isBigEndian2);return(high<<16)+low;}
function nextTag(buffer){if(buffer.length>24){return buffer.slice(12);}}
function extractTags(buffer,isBigEndian2){const tags={};let temp=buffer;while(temp&&temp.length){const code=(0,readUInt_1.readUInt)(temp,16,0,isBigEndian2);const type=(0,readUInt_1.readUInt)(temp,16,2,isBigEndian2);const length3=(0,readUInt_1.readUInt)(temp,32,4,isBigEndian2);if(code===0){break;}else{if(length3===1&&(type===3||type===4)){tags[code]=readValue(temp,isBigEndian2);}
temp=nextTag(temp);}}
return tags;}
function determineEndianness(buffer){const signature=buffer.toString("ascii",0,2);if("II"===signature){return"LE";}else if("MM"===signature){return"BE";}}
var signatures=["49492a00","4d4d002a"
];exports2.TIFF={validate(buffer){return signatures.includes(buffer.toString("hex",0,4));},calculate(buffer,filepath){if(!filepath){throw new TypeError("Tiff doesn't support buffer");}
const isBigEndian2=determineEndianness(buffer)==="BE";const ifdBuffer=readIFD(buffer,filepath,isBigEndian2);const tags=extractTags(ifdBuffer,isBigEndian2);const width2=tags[256];const height=tags[257];if(!width2||!height){throw new TypeError("Invalid Tiff. Missing tags");}
return{height,width:width2};}};}});var require_webp=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/webp.js"(exports2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});exports2.WEBP=void 0;function calculateExtended(buffer){return{height:1+buffer.readUIntLE(7,3),width:1+buffer.readUIntLE(4,3)};}
function calculateLossless(buffer){return{height:1+((buffer[4]&15)<<10|buffer[3]<<2|(buffer[2]&192)>>6),width:1+((buffer[2]&63)<<8|buffer[1])};}
function calculateLossy(buffer){return{height:buffer.readInt16LE(8)&16383,width:buffer.readInt16LE(6)&16383};}
exports2.WEBP={validate(buffer){const riffHeader="RIFF"===buffer.toString("ascii",0,4);const webpHeader="WEBP"===buffer.toString("ascii",8,12);const vp8Header="VP8"===buffer.toString("ascii",12,15);return riffHeader&&webpHeader&&vp8Header;},calculate(buffer){const chunkHeader=buffer.toString("ascii",12,16);buffer=buffer.slice(20,30);if(chunkHeader==="VP8X"){const extendedHeader=buffer[0];const validStart=(extendedHeader&192)===0;const validEnd=(extendedHeader&1)===0;if(validStart&&validEnd){return calculateExtended(buffer);}else{throw new TypeError("Invalid WebP");}}
if(chunkHeader==="VP8 "&&buffer[0]!==47){return calculateLossy(buffer);}
const signature=buffer.toString("hex",3,6);if(chunkHeader==="VP8L"&&signature!=="9d012a"){return calculateLossless(buffer);}
throw new TypeError("Invalid WebP");}};}});var require_types=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types.js"(exports2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});exports2.typeHandlers=void 0;var bmp_1=require_bmp();var cur_1=require_cur();var dds_1=require_dds();var gif_1=require_gif();var icns_1=require_icns();var ico_1=require_ico();var j2c_1=require_j2c();var jp2_1=require_jp2();var jpg_1=require_jpg();var ktx_1=require_ktx();var png_1=require_png();var pnm_1=require_pnm();var psd_1=require_psd();var svg_1=require_svg();var tga_1=require_tga();var tiff_1=require_tiff();var webp_1=require_webp();exports2.typeHandlers={bmp:bmp_1.BMP,cur:cur_1.CUR,dds:dds_1.DDS,gif:gif_1.GIF,icns:icns_1.ICNS,ico:ico_1.ICO,j2c:j2c_1.J2C,jp2:jp2_1.JP2,jpg:jpg_1.JPG,ktx:ktx_1.KTX,png:png_1.PNG,pnm:pnm_1.PNM,psd:psd_1.PSD,svg:svg_1.SVG,tga:tga_1.TGA,tiff:tiff_1.TIFF,webp:webp_1.WEBP};}});var require_detector=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/detector.js"(exports2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});exports2.detector=void 0;var types_1=require_types();var keys3=Object.keys(types_1.typeHandlers);var firstBytes={56:"psd",66:"bmp",68:"dds",71:"gif",73:"tiff",77:"tiff",82:"webp",105:"icns",137:"png",255:"jpg"};function detector(buffer){const byte=buffer[0];if(byte in firstBytes){const type=firstBytes[byte];if(type&&types_1.typeHandlers[type].validate(buffer)){return type;}}
const finder=(key)=>types_1.typeHandlers[key].validate(buffer);return keys3.find(finder);}
exports2.detector=detector;}});var require_dist=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/index.js"(exports2,module2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});exports2.types=exports2.setConcurrency=exports2.disableTypes=exports2.disableFS=exports2.imageSize=void 0;var fs=(init_fs(),__toCommonJS(fs_exports));var path4=require_path_browserify();var queue_1=require_queue();var types_1=require_types();var detector_1=require_detector();var MaxBufferSize=512*1024;var queue=new queue_1.default({concurrency:100,autostart:true});var globalOptions={disabledFS:false,disabledTypes:[]};function lookup(buffer,filepath){const type=(0,detector_1.detector)(buffer);if(typeof type!=="undefined"){if(globalOptions.disabledTypes.indexOf(type)>-1){throw new TypeError("disabled file type: "+type);}
if(type in types_1.typeHandlers){const size4=types_1.typeHandlers[type].calculate(buffer,filepath);if(size4!==void 0){size4.type=type;return size4;}}}
throw new TypeError("unsupported file type: "+type+" (file: "+filepath+")");}
async function asyncFileToBuffer(filepath){const handle=await fs.promises.open(filepath,"r");try{const{size:size4}=await handle.stat();if(size4<=0){throw new Error("Empty file");}
const bufferSize=Math.min(size4,MaxBufferSize);const buffer=Buffer.alloc(bufferSize);await handle.read(buffer,0,bufferSize,0);return buffer;}finally{await handle.close();}}
function syncFileToBuffer(filepath){const descriptor=fs.openSync(filepath,"r");try{const{size:size4}=fs.fstatSync(descriptor);if(size4<=0){throw new Error("Empty file");}
const bufferSize=Math.min(size4,MaxBufferSize);const buffer=Buffer.alloc(bufferSize);fs.readSync(descriptor,buffer,0,bufferSize,0);return buffer;}finally{fs.closeSync(descriptor);}}
module2.exports=exports2=imageSize;exports2.default=imageSize;function imageSize(input,callback){if(Buffer.isBuffer(input)){return lookup(input);}
if(typeof input!=="string"||globalOptions.disabledFS){throw new TypeError("invalid invocation. input should be a Buffer");}
const filepath=path4.resolve(input);if(typeof callback==="function"){queue.push(()=>asyncFileToBuffer(filepath).then((buffer)=>process.nextTick(callback,null,lookup(buffer,filepath))).catch(callback));}else{const buffer=syncFileToBuffer(filepath);return lookup(buffer,filepath);}}
exports2.imageSize=imageSize;var disableFS=(v)=>{globalOptions.disabledFS=v;};exports2.disableFS=disableFS;var disableTypes=(types)=>{globalOptions.disabledTypes=types;};exports2.disableTypes=disableTypes;var setConcurrency=(c)=>{queue.concurrency=c;};exports2.setConcurrency=setConcurrency;exports2.types=Object.keys(types_1.typeHandlers);}});var require_fast_deep_equal=__commonJS({"../../node_modules/.pnpm/fast-deep-equal@3.1.3/node_modules/fast-deep-equal/index.js"(exports2,module2){"use strict";module2.exports=function equal(a,b10){if(a===b10)
return true;if(a&&b10&&typeof a=="object"&&typeof b10=="object"){if(a.constructor!==b10.constructor)
return false;var length3,i2,keys3;if(Array.isArray(a)){length3=a.length;if(length3!=b10.length)
return false;for(i2=length3;i2--!==0;)
if(!equal(a[i2],b10[i2]))
return false;return true;}
if(a.constructor===RegExp)
return a.source===b10.source&&a.flags===b10.flags;if(a.valueOf!==Object.prototype.valueOf)
return a.valueOf()===b10.valueOf();if(a.toString!==Object.prototype.toString)
return a.toString()===b10.toString();keys3=Object.keys(a);length3=keys3.length;if(length3!==Object.keys(b10).length)
return false;for(i2=length3;i2--!==0;)
if(!Object.prototype.hasOwnProperty.call(b10,keys3[i2]))
return false;for(i2=length3;i2--!==0;){var key=keys3[i2];if(!equal(a[key],b10[key]))
return false;}
return true;}
return a!==a&&b10!==b10;};}});var require_tiny_inflate=__commonJS({"../../node_modules/.pnpm/tiny-inflate@1.0.3/node_modules/tiny-inflate/index.js"(exports2,module2){var TINF_OK=0;var TINF_DATA_ERROR=-3;function Tree(){this.table=new Uint16Array(16);this.trans=new Uint16Array(288);}
function Data(source,dest){this.source=source;this.sourceIndex=0;this.tag=0;this.bitcount=0;this.dest=dest;this.destLen=0;this.ltree=new Tree();this.dtree=new Tree();}
var sltree=new Tree();var sdtree=new Tree();var length_bits=new Uint8Array(30);var length_base=new Uint16Array(30);var dist_bits=new Uint8Array(30);var dist_base=new Uint16Array(30);var clcidx=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);var code_tree=new Tree();var lengths=new Uint8Array(288+32);function tinf_build_bits_base(bits,base,delta,first){var i2,sum;for(i2=0;i2<delta;++i2)
bits[i2]=0;for(i2=0;i2<30-delta;++i2)
bits[i2+delta]=i2/delta|0;for(sum=first,i2=0;i2<30;++i2){base[i2]=sum;sum+=1<<bits[i2];}}
function tinf_build_fixed_trees(lt,dt){var i2;for(i2=0;i2<7;++i2)
lt.table[i2]=0;lt.table[7]=24;lt.table[8]=152;lt.table[9]=112;for(i2=0;i2<24;++i2)
lt.trans[i2]=256+i2;for(i2=0;i2<144;++i2)
lt.trans[24+i2]=i2;for(i2=0;i2<8;++i2)
lt.trans[24+144+i2]=280+i2;for(i2=0;i2<112;++i2)
lt.trans[24+144+8+i2]=144+i2;for(i2=0;i2<5;++i2)
dt.table[i2]=0;dt.table[5]=32;for(i2=0;i2<32;++i2)
dt.trans[i2]=i2;}
var offs=new Uint16Array(16);function tinf_build_tree(t,lengths2,off,num){var i2,sum;for(i2=0;i2<16;++i2)
t.table[i2]=0;for(i2=0;i2<num;++i2)
t.table[lengths2[off+i2]]++;t.table[0]=0;for(sum=0,i2=0;i2<16;++i2){offs[i2]=sum;sum+=t.table[i2];}
for(i2=0;i2<num;++i2){if(lengths2[off+i2])
t.trans[offs[lengths2[off+i2]]++]=i2;}}
function tinf_getbit(d){if(!d.bitcount--){d.tag=d.source[d.sourceIndex++];d.bitcount=7;}
var bit=d.tag&1;d.tag>>>=1;return bit;}
function tinf_read_bits(d,num,base){if(!num)
return base;while(d.bitcount<24){d.tag|=d.source[d.sourceIndex++]<<d.bitcount;d.bitcount+=8;}
var val=d.tag&65535>>>16-num;d.tag>>>=num;d.bitcount-=num;return val+base;}
function tinf_decode_symbol(d,t){while(d.bitcount<24){d.tag|=d.source[d.sourceIndex++]<<d.bitcount;d.bitcount+=8;}
var sum=0,cur=0,len2=0;var tag2=d.tag;do{cur=2*cur+(tag2&1);tag2>>>=1;++len2;sum+=t.table[len2];cur-=t.table[len2];}while(cur>=0);d.tag=tag2;d.bitcount-=len2;return t.trans[sum+cur];}
function tinf_decode_trees(d,lt,dt){var hlit,hdist,hclen;var i2,num,length3;hlit=tinf_read_bits(d,5,257);hdist=tinf_read_bits(d,5,1);hclen=tinf_read_bits(d,4,4);for(i2=0;i2<19;++i2)
lengths[i2]=0;for(i2=0;i2<hclen;++i2){var clen=tinf_read_bits(d,3,0);lengths[clcidx[i2]]=clen;}
tinf_build_tree(code_tree,lengths,0,19);for(num=0;num<hlit+hdist;){var sym=tinf_decode_symbol(d,code_tree);switch(sym){case 16:var prev=lengths[num-1];for(length3=tinf_read_bits(d,2,3);length3;--length3){lengths[num++]=prev;}
break;case 17:for(length3=tinf_read_bits(d,3,3);length3;--length3){lengths[num++]=0;}
break;case 18:for(length3=tinf_read_bits(d,7,11);length3;--length3){lengths[num++]=0;}
break;default:lengths[num++]=sym;break;}}
tinf_build_tree(lt,lengths,0,hlit);tinf_build_tree(dt,lengths,hlit,hdist);}
function tinf_inflate_block_data(d,lt,dt){while(1){var sym=tinf_decode_symbol(d,lt);if(sym===256){return TINF_OK;}
if(sym<256){d.dest[d.destLen++]=sym;}else{var length3,dist2,offs2;var i2;sym-=257;length3=tinf_read_bits(d,length_bits[sym],length_base[sym]);dist2=tinf_decode_symbol(d,dt);offs2=d.destLen-tinf_read_bits(d,dist_bits[dist2],dist_base[dist2]);for(i2=offs2;i2<offs2+length3;++i2){d.dest[d.destLen++]=d.dest[i2];}}}}
function tinf_inflate_uncompressed_block(d){var length3,invlength;var i2;while(d.bitcount>8){d.sourceIndex--;d.bitcount-=8;}
length3=d.source[d.sourceIndex+1];length3=256*length3+d.source[d.sourceIndex];invlength=d.source[d.sourceIndex+3];invlength=256*invlength+d.source[d.sourceIndex+2];if(length3!==(~invlength&65535))
return TINF_DATA_ERROR;d.sourceIndex+=4;for(i2=length3;i2;--i2)
d.dest[d.destLen++]=d.source[d.sourceIndex++];d.bitcount=0;return TINF_OK;}
function tinf_uncompress(source,dest){var d=new Data(source,dest);var bfinal,btype,res;do{bfinal=tinf_getbit(d);btype=tinf_read_bits(d,2,0);switch(btype){case 0:res=tinf_inflate_uncompressed_block(d);break;case 1:res=tinf_inflate_block_data(d,sltree,sdtree);break;case 2:tinf_decode_trees(d,d.ltree,d.dtree);res=tinf_inflate_block_data(d,d.ltree,d.dtree);break;default:res=TINF_DATA_ERROR;}
if(res!==TINF_OK)
throw new Error("Data error");}while(!bfinal);if(d.destLen<d.dest.length){if(typeof d.dest.slice==="function")
return d.dest.slice(0,d.destLen);else
return d.dest.subarray(0,d.destLen);}
return d.dest;}
tinf_build_fixed_trees(sltree,sdtree);tinf_build_bits_base(length_bits,length_base,4,3);tinf_build_bits_base(dist_bits,dist_base,2,1);length_bits[28]=0;length_base[28]=258;module2.exports=tinf_uncompress;}});var require_swap=__commonJS({"../../node_modules/.pnpm/unicode-trie@2.0.0/node_modules/unicode-trie/swap.js"(exports2,module2){var isBigEndian2=new Uint8Array(new Uint32Array([305419896]).buffer)[0]===18;var swap=(b10,n2,m)=>{let i2=b10[n2];b10[n2]=b10[m];b10[m]=i2;};var swap32=(array)=>{const len2=array.length;for(let i2=0;i2<len2;i2+=4){swap(array,i2,i2+3);swap(array,i2+1,i2+2);}};var swap32LE=(array)=>{if(isBigEndian2){swap32(array);}};module2.exports={swap32LE};}});var require_unicode_trie=__commonJS({"../../node_modules/.pnpm/unicode-trie@2.0.0/node_modules/unicode-trie/index.js"(exports2,module2){var inflate=require_tiny_inflate();var{swap32LE}=require_swap();var SHIFT_1=6+5;var SHIFT_2=5;var SHIFT_1_2=SHIFT_1-SHIFT_2;var OMITTED_BMP_INDEX_1_LENGTH=65536>>SHIFT_1;var INDEX_2_BLOCK_LENGTH=1<<SHIFT_1_2;var INDEX_2_MASK=INDEX_2_BLOCK_LENGTH-1;var INDEX_SHIFT=2;var DATA_BLOCK_LENGTH=1<<SHIFT_2;var DATA_MASK=DATA_BLOCK_LENGTH-1;var LSCP_INDEX_2_OFFSET=65536>>SHIFT_2;var LSCP_INDEX_2_LENGTH=1024>>SHIFT_2;var INDEX_2_BMP_LENGTH=LSCP_INDEX_2_OFFSET+LSCP_INDEX_2_LENGTH;var UTF8_2B_INDEX_2_OFFSET=INDEX_2_BMP_LENGTH;var UTF8_2B_INDEX_2_LENGTH=2048>>6;var INDEX_1_OFFSET=UTF8_2B_INDEX_2_OFFSET+UTF8_2B_INDEX_2_LENGTH;var DATA_GRANULARITY=1<<INDEX_SHIFT;var UnicodeTrie=class{constructor(data){const isBuffer3=typeof data.readUInt32BE==="function"&&typeof data.slice==="function";if(isBuffer3||data instanceof Uint8Array){let uncompressedLength;if(isBuffer3){this.highStart=data.readUInt32LE(0);this.errorValue=data.readUInt32LE(4);uncompressedLength=data.readUInt32LE(8);data=data.slice(12);}else{const view=new DataView(data.buffer);this.highStart=view.getUint32(0,true);this.errorValue=view.getUint32(4,true);uncompressedLength=view.getUint32(8,true);data=data.subarray(12);}
data=inflate(data,new Uint8Array(uncompressedLength));data=inflate(data,new Uint8Array(uncompressedLength));swap32LE(data);this.data=new Uint32Array(data.buffer);}else{({data:this.data,highStart:this.highStart,errorValue:this.errorValue}=data);}}
get(codePoint){let index2;if(codePoint<0||codePoint>1114111){return this.errorValue;}
if(codePoint<55296||codePoint>56319&&codePoint<=65535){index2=(this.data[codePoint>>SHIFT_2]<<INDEX_SHIFT)+(codePoint&DATA_MASK);return this.data[index2];}
if(codePoint<=65535){index2=(this.data[LSCP_INDEX_2_OFFSET+(codePoint-55296>>SHIFT_2)]<<INDEX_SHIFT)+(codePoint&DATA_MASK);return this.data[index2];}
if(codePoint<this.highStart){index2=this.data[INDEX_1_OFFSET-OMITTED_BMP_INDEX_1_LENGTH+(codePoint>>SHIFT_1)];index2=this.data[index2+(codePoint>>SHIFT_2&INDEX_2_MASK)];index2=(index2<<INDEX_SHIFT)+(codePoint&DATA_MASK);return this.data[index2];}
return this.data[this.data.length-DATA_GRANULARITY];}};module2.exports=UnicodeTrie;}});var require_dfa=__commonJS({"../../node_modules/.pnpm/dfa@1.2.0/node_modules/dfa/index.js"(exports2,module2){"use strict";var INITIAL_STATE=1;var FAIL_STATE=0;var StateMachine=class{constructor(dfa){this.stateTable=dfa.stateTable;this.accepting=dfa.accepting;this.tags=dfa.tags;}
match(str3){var self2=this;return{*[Symbol.iterator](){var state=INITIAL_STATE;var startRun=null;var lastAccepting=null;var lastState=null;for(var p=0;p<str3.length;p++){var c=str3[p];lastState=state;state=self2.stateTable[state][c];if(state===FAIL_STATE){if(startRun!=null&&lastAccepting!=null&&lastAccepting>=startRun){yield[startRun,lastAccepting,self2.tags[lastState]];}
state=self2.stateTable[INITIAL_STATE][c];startRun=null;}
if(state!==FAIL_STATE&&startRun==null){startRun=p;}
if(self2.accepting[state]){lastAccepting=p;}
if(state===FAIL_STATE){state=INITIAL_STATE;}}
if(startRun!=null&&lastAccepting!=null&&lastAccepting>=startRun){yield[startRun,lastAccepting,self2.tags[state]];}}};}
apply(str3,actions){for(var[start,end,tags]of this.match(str3)){for(var tag2 of tags){if(typeof actions[tag2]==="function"){actions[tag2](start,end,str3.slice(start,end+1));}}}}};module2.exports=StateMachine;}});var require_clone=__commonJS({"../../node_modules/.pnpm/clone@2.1.2/node_modules/clone/clone.js"(exports2,module2){var clone3=function(){"use strict";function _instanceof(obj,type){return type!=null&&obj instanceof type;}
var nativeMap;try{nativeMap=Map;}catch(_3){nativeMap=function(){};}
var nativeSet;try{nativeSet=Set;}catch(_3){nativeSet=function(){};}
var nativePromise;try{nativePromise=Promise;}catch(_3){nativePromise=function(){};}
function clone4(parent,circular,depth,prototype,includeNonEnumerable){if(typeof circular==="object"){depth=circular.depth;prototype=circular.prototype;includeNonEnumerable=circular.includeNonEnumerable;circular=circular.circular;}
var allParents=[];var allChildren=[];var useBuffer=typeof Buffer!="undefined";if(typeof circular=="undefined")
circular=true;if(typeof depth=="undefined")
depth=Infinity;function _clone(parent2,depth2){if(parent2===null)
return null;if(depth2===0)
return parent2;var child;var proto;if(typeof parent2!="object"){return parent2;}
if(_instanceof(parent2,nativeMap)){child=new nativeMap();}else if(_instanceof(parent2,nativeSet)){child=new nativeSet();}else if(_instanceof(parent2,nativePromise)){child=new nativePromise(function(resolve,reject){parent2.then(function(value){resolve(_clone(value,depth2-1));},function(err){reject(_clone(err,depth2-1));});});}else if(clone4.__isArray(parent2)){child=[];}else if(clone4.__isRegExp(parent2)){child=new RegExp(parent2.source,__getRegExpFlags(parent2));if(parent2.lastIndex)
child.lastIndex=parent2.lastIndex;}else if(clone4.__isDate(parent2)){child=new Date(parent2.getTime());}else if(useBuffer&&Buffer.isBuffer(parent2)){if(Buffer.allocUnsafe){child=Buffer.allocUnsafe(parent2.length);}else{child=new Buffer(parent2.length);}
parent2.copy(child);return child;}else if(_instanceof(parent2,Error)){child=Object.create(parent2);}else{if(typeof prototype=="undefined"){proto=Object.getPrototypeOf(parent2);child=Object.create(proto);}else{child=Object.create(prototype);proto=prototype;}}
if(circular){var index2=allParents.indexOf(parent2);if(index2!=-1){return allChildren[index2];}
allParents.push(parent2);allChildren.push(child);}
if(_instanceof(parent2,nativeMap)){parent2.forEach(function(value,key){var keyChild=_clone(key,depth2-1);var valueChild=_clone(value,depth2-1);child.set(keyChild,valueChild);});}
if(_instanceof(parent2,nativeSet)){parent2.forEach(function(value){var entryChild=_clone(value,depth2-1);child.add(entryChild);});}
for(var i2 in parent2){var attrs;if(proto){attrs=Object.getOwnPropertyDescriptor(proto,i2);}
if(attrs&&attrs.set==null){continue;}
child[i2]=_clone(parent2[i2],depth2-1);}
if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(parent2);for(var i2=0;i2<symbols.length;i2++){var symbol=symbols[i2];var descriptor=Object.getOwnPropertyDescriptor(parent2,symbol);if(descriptor&&!descriptor.enumerable&&!includeNonEnumerable){continue;}
child[symbol]=_clone(parent2[symbol],depth2-1);if(!descriptor.enumerable){Object.defineProperty(child,symbol,{enumerable:false});}}}
if(includeNonEnumerable){var allPropertyNames=Object.getOwnPropertyNames(parent2);for(var i2=0;i2<allPropertyNames.length;i2++){var propertyName=allPropertyNames[i2];var descriptor=Object.getOwnPropertyDescriptor(parent2,propertyName);if(descriptor&&descriptor.enumerable){continue;}
child[propertyName]=_clone(parent2[propertyName],depth2-1);Object.defineProperty(child,propertyName,{enumerable:false});}}
return child;}
return _clone(parent,depth);}
clone4.clonePrototype=function clonePrototype(parent){if(parent===null)
return null;var c=function(){};c.prototype=parent;return new c();};function __objToStr(o){return Object.prototype.toString.call(o);}
clone4.__objToStr=__objToStr;function __isDate(o){return typeof o==="object"&&__objToStr(o)==="[object Date]";}
clone4.__isDate=__isDate;function __isArray(o){return typeof o==="object"&&__objToStr(o)==="[object Array]";}
clone4.__isArray=__isArray;function __isRegExp(o){return typeof o==="object"&&__objToStr(o)==="[object RegExp]";}
clone4.__isRegExp=__isRegExp;function __getRegExpFlags(re){var flags="";if(re.global)
flags+="g";if(re.ignoreCase)
flags+="i";if(re.multiline)
flags+="m";return flags;}
clone4.__getRegExpFlags=__getRegExpFlags;return clone4;}();if(typeof module2==="object"&&module2.exports){module2.exports=clone3;}}});var require_streams=__commonJS({"../../node_modules/.pnpm/brotli@1.3.3/node_modules/brotli/dec/streams.js"(exports2){function BrotliInput(buffer){this.buffer=buffer;this.pos=0;}
BrotliInput.prototype.read=function(buf,i2,count){if(this.pos+count>this.buffer.length){count=this.buffer.length-this.pos;}
for(var p=0;p<count;p++)
buf[i2+p]=this.buffer[this.pos+p];this.pos+=count;return count;};exports2.BrotliInput=BrotliInput;function BrotliOutput(buf){this.buffer=buf;this.pos=0;}
BrotliOutput.prototype.write=function(buf,count){if(this.pos+count>this.buffer.length)
throw new Error("Output buffer is not large enough");this.buffer.set(buf.subarray(0,count),this.pos);this.pos+=count;return count;};exports2.BrotliOutput=BrotliOutput;}});var require_bit_reader=__commonJS({"../../node_modules/.pnpm/brotli@1.3.3/node_modules/brotli/dec/bit_reader.js"(exports2,module2){var BROTLI_READ_SIZE=4096;var BROTLI_IBUF_SIZE=2*BROTLI_READ_SIZE+32;var BROTLI_IBUF_MASK=2*BROTLI_READ_SIZE-1;var kBitMask=new Uint32Array([0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535,131071,262143,524287,1048575,2097151,4194303,8388607,16777215]);function BrotliBitReader(input){this.buf_=new Uint8Array(BROTLI_IBUF_SIZE);this.input_=input;this.reset();}
BrotliBitReader.READ_SIZE=BROTLI_READ_SIZE;BrotliBitReader.IBUF_MASK=BROTLI_IBUF_MASK;BrotliBitReader.prototype.reset=function(){this.buf_ptr_=0;this.val_=0;this.pos_=0;this.bit_pos_=0;this.bit_end_pos_=0;this.eos_=0;this.readMoreInput();for(var i2=0;i2<4;i2++){this.val_|=this.buf_[this.pos_]<<8*i2;++this.pos_;}
return this.bit_end_pos_>0;};BrotliBitReader.prototype.readMoreInput=function(){if(this.bit_end_pos_>256){return;}else if(this.eos_){if(this.bit_pos_>this.bit_end_pos_)
throw new Error("Unexpected end of input "+this.bit_pos_+" "+this.bit_end_pos_);}else{var dst=this.buf_ptr_;var bytes_read=this.input_.read(this.buf_,dst,BROTLI_READ_SIZE);if(bytes_read<0){throw new Error("Unexpected end of input");}
if(bytes_read<BROTLI_READ_SIZE){this.eos_=1;for(var p=0;p<32;p++)
this.buf_[dst+bytes_read+p]=0;}
if(dst===0){for(var p=0;p<32;p++)
this.buf_[(BROTLI_READ_SIZE<<1)+p]=this.buf_[p];this.buf_ptr_=BROTLI_READ_SIZE;}else{this.buf_ptr_=0;}
this.bit_end_pos_+=bytes_read<<3;}};BrotliBitReader.prototype.fillBitWindow=function(){while(this.bit_pos_>=8){this.val_>>>=8;this.val_|=this.buf_[this.pos_&BROTLI_IBUF_MASK]<<24;++this.pos_;this.bit_pos_=this.bit_pos_-8>>>0;this.bit_end_pos_=this.bit_end_pos_-8>>>0;}};BrotliBitReader.prototype.readBits=function(n_bits){if(32-this.bit_pos_<n_bits){this.fillBitWindow();}
var val=this.val_>>>this.bit_pos_&kBitMask[n_bits];this.bit_pos_+=n_bits;return val;};module2.exports=BrotliBitReader;}});var require_dictionary_bin=__commonJS({"../../node_modules/.pnpm/brotli@1.3.3/node_modules/brotli/dec/dictionary.bin.js"(exports2,module2){module2.exports="";}});var require_dictionary_browser=__commonJS({"../../node_modules/.pnpm/brotli@1.3.3/node_modules/brotli/dec/dictionary-browser.js"(exports2){var base64=require_base64_js();exports2.init=function(){var BrotliDecompressBuffer=require_decode().BrotliDecompressBuffer;var compressed=base64.toByteArray(require_dictionary_bin());return BrotliDecompressBuffer(compressed);};}});var require_dictionary=__commonJS({"../../node_modules/.pnpm/brotli@1.3.3/node_modules/brotli/dec/dictionary.js"(exports2){var data=require_dictionary_browser();exports2.init=function(){exports2.dictionary=data.init();};exports2.offsetsByLength=new Uint32Array([0,0,0,0,0,4096,9216,21504,35840,44032,53248,63488,74752,87040,93696,100864,104704,106752,108928,113536,115968,118528,119872,121280,122016]);exports2.sizeBitsByLength=new Uint8Array([0,0,0,0,10,10,11,11,10,10,10,10,10,9,9,8,7,7,8,7,7,6,6,5,5]);exports2.minDictionaryWordLength=4;exports2.maxDictionaryWordLength=24;}});var require_huffman=__commonJS({"../../node_modules/.pnpm/brotli@1.3.3/node_modules/brotli/dec/huffman.js"(exports2){function HuffmanCode(bits,value){this.bits=bits;this.value=value;}
exports2.HuffmanCode=HuffmanCode;var MAX_LENGTH=15;function GetNextKey(key,len2){var step=1<<len2-1;while(key&step){step>>=1;}
return(key&step-1)+step;}
function ReplicateValue(table,i2,step,end,code){do{end-=step;table[i2+end]=new HuffmanCode(code.bits,code.value);}while(end>0);}
function NextTableBitSize(count,len2,root_bits){var left=1<<len2-root_bits;while(len2<MAX_LENGTH){left-=count[len2];if(left<=0)
break;++len2;left<<=1;}
return len2-root_bits;}
exports2.BrotliBuildHuffmanTable=function(root_table,table,root_bits,code_lengths,code_lengths_size){var start_table=table;var code;var len2;var symbol;var key;var step;var low;var mask;var table_bits;var table_size;var total_size;var sorted;var count=new Int32Array(MAX_LENGTH+1);var offset=new Int32Array(MAX_LENGTH+1);sorted=new Int32Array(code_lengths_size);for(symbol=0;symbol<code_lengths_size;symbol++){count[code_lengths[symbol]]++;}
offset[1]=0;for(len2=1;len2<MAX_LENGTH;len2++){offset[len2+1]=offset[len2]+count[len2];}
for(symbol=0;symbol<code_lengths_size;symbol++){if(code_lengths[symbol]!==0){sorted[offset[code_lengths[symbol]]++]=symbol;}}
table_bits=root_bits;table_size=1<<table_bits;total_size=table_size;if(offset[MAX_LENGTH]===1){for(key=0;key<total_size;++key){root_table[table+key]=new HuffmanCode(0,sorted[0]&65535);}
return total_size;}
key=0;symbol=0;for(len2=1,step=2;len2<=root_bits;++len2,step<<=1){for(;count[len2]>0;--count[len2]){code=new HuffmanCode(len2&255,sorted[symbol++]&65535);ReplicateValue(root_table,table+key,step,table_size,code);key=GetNextKey(key,len2);}}
mask=total_size-1;low=-1;for(len2=root_bits+1,step=2;len2<=MAX_LENGTH;++len2,step<<=1){for(;count[len2]>0;--count[len2]){if((key&mask)!==low){table+=table_size;table_bits=NextTableBitSize(count,len2,root_bits);table_size=1<<table_bits;total_size+=table_size;low=key&mask;root_table[start_table+low]=new HuffmanCode(table_bits+root_bits&255,table-start_table-low&65535);}
code=new HuffmanCode(len2-root_bits&255,sorted[symbol++]&65535);ReplicateValue(root_table,table+(key>>root_bits),step,table_size,code);key=GetNextKey(key,len2);}}
return total_size;};}});var require_context=__commonJS({"../../node_modules/.pnpm/brotli@1.3.3/node_modules/brotli/dec/context.js"(exports2){exports2.lookup=new Uint8Array([0,0,0,0,0,0,0,0,0,4,4,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,12,16,12,12,20,12,16,24,28,12,12,32,12,36,12,44,44,44,44,44,44,44,44,44,44,32,32,24,40,28,12,12,48,52,52,52,48,52,52,52,48,52,52,52,52,52,48,52,52,52,52,52,48,52,52,52,52,52,24,12,28,12,12,12,56,60,60,60,56,60,60,60,56,60,60,60,60,60,56,60,60,60,60,60,56,60,60,60,60,60,24,12,28,12,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,56,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,22,22,22,22,23,23,23,23,24,24,24,24,25,25,25,25,26,26,26,26,27,27,27,27,28,28,28,28,29,29,29,29,30,30,30,30,31,31,31,31,32,32,32,32,33,33,33,33,34,34,34,34,35,35,35,35,36,36,36,36,37,37,37,37,38,38,38,38,39,39,39,39,40,40,40,40,41,41,41,41,42,42,42,42,43,43,43,43,44,44,44,44,45,45,45,45,46,46,46,46,47,47,47,47,48,48,48,48,49,49,49,49,50,50,50,50,51,51,51,51,52,52,52,52,53,53,53,53,54,54,54,54,55,55,55,55,56,56,56,56,57,57,57,57,58,58,58,58,59,59,59,59,60,60,60,60,61,61,61,61,62,62,62,62,63,63,63,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);exports2.lookupOffsets=new Uint16Array([1024,1536,1280,1536,0,256,768,512]);}});var require_prefix=__commonJS({"../../node_modules/.pnpm/brotli@1.3.3/node_modules/brotli/dec/prefix.js"(exports2){function PrefixCodeRange(offset,nbits){this.offset=offset;this.nbits=nbits;}
exports2.kBlockLengthPrefixCode=[new PrefixCodeRange(1,2),new PrefixCodeRange(5,2),new PrefixCodeRange(9,2),new PrefixCodeRange(13,2),new PrefixCodeRange(17,3),new PrefixCodeRange(25,3),new PrefixCodeRange(33,3),new PrefixCodeRange(41,3),new PrefixCodeRange(49,4),new PrefixCodeRange(65,4),new PrefixCodeRange(81,4),new PrefixCodeRange(97,4),new PrefixCodeRange(113,5),new PrefixCodeRange(145,5),new PrefixCodeRange(177,5),new PrefixCodeRange(209,5),new PrefixCodeRange(241,6),new PrefixCodeRange(305,6),new PrefixCodeRange(369,7),new PrefixCodeRange(497,8),new PrefixCodeRange(753,9),new PrefixCodeRange(1265,10),new PrefixCodeRange(2289,11),new PrefixCodeRange(4337,12),new PrefixCodeRange(8433,13),new PrefixCodeRange(16625,24)];exports2.kInsertLengthPrefixCode=[new PrefixCodeRange(0,0),new PrefixCodeRange(1,0),new PrefixCodeRange(2,0),new PrefixCodeRange(3,0),new PrefixCodeRange(4,0),new PrefixCodeRange(5,0),new PrefixCodeRange(6,1),new PrefixCodeRange(8,1),new PrefixCodeRange(10,2),new PrefixCodeRange(14,2),new PrefixCodeRange(18,3),new PrefixCodeRange(26,3),new PrefixCodeRange(34,4),new PrefixCodeRange(50,4),new PrefixCodeRange(66,5),new PrefixCodeRange(98,5),new PrefixCodeRange(130,6),new PrefixCodeRange(194,7),new PrefixCodeRange(322,8),new PrefixCodeRange(578,9),new PrefixCodeRange(1090,10),new PrefixCodeRange(2114,12),new PrefixCodeRange(6210,14),new PrefixCodeRange(22594,24)];exports2.kCopyLengthPrefixCode=[new PrefixCodeRange(2,0),new PrefixCodeRange(3,0),new PrefixCodeRange(4,0),new PrefixCodeRange(5,0),new PrefixCodeRange(6,0),new PrefixCodeRange(7,0),new PrefixCodeRange(8,0),new PrefixCodeRange(9,0),new PrefixCodeRange(10,1),new PrefixCodeRange(12,1),new PrefixCodeRange(14,2),new PrefixCodeRange(18,2),new PrefixCodeRange(22,3),new PrefixCodeRange(30,3),new PrefixCodeRange(38,4),new PrefixCodeRange(54,4),new PrefixCodeRange(70,5),new PrefixCodeRange(102,5),new PrefixCodeRange(134,6),new PrefixCodeRange(198,7),new PrefixCodeRange(326,8),new PrefixCodeRange(582,9),new PrefixCodeRange(1094,10),new PrefixCodeRange(2118,24)];exports2.kInsertRangeLut=[0,0,8,8,0,16,8,16,16];exports2.kCopyRangeLut=[0,8,0,8,16,0,16,8,16];}});var require_transform=__commonJS({"../../node_modules/.pnpm/brotli@1.3.3/node_modules/brotli/dec/transform.js"(exports2){var BrotliDictionary=require_dictionary();var kIdentity=0;var kOmitLast1=1;var kOmitLast2=2;var kOmitLast3=3;var kOmitLast4=4;var kOmitLast5=5;var kOmitLast6=6;var kOmitLast7=7;var kOmitLast8=8;var kOmitLast9=9;var kUppercaseFirst=10;var kUppercaseAll=11;var kOmitFirst1=12;var kOmitFirst2=13;var kOmitFirst3=14;var kOmitFirst4=15;var kOmitFirst5=16;var kOmitFirst6=17;var kOmitFirst7=18;var kOmitFirst9=20;function Transform(prefix,transform7,suffix){this.prefix=new Uint8Array(prefix.length);this.transform=transform7;this.suffix=new Uint8Array(suffix.length);for(var i2=0;i2<prefix.length;i2++)
this.prefix[i2]=prefix.charCodeAt(i2);for(var i2=0;i2<suffix.length;i2++)
this.suffix[i2]=suffix.charCodeAt(i2);}
var kTransforms=[new Transform("",kIdentity,""),new Transform("",kIdentity," "),new Transform(" ",kIdentity," "),new Transform("",kOmitFirst1,""),new Transform("",kUppercaseFirst," "),new Transform("",kIdentity," the "),new Transform(" ",kIdentity,""),new Transform("s ",kIdentity," "),new Transform("",kIdentity," of "),new Transform("",kUppercaseFirst,""),new Transform("",kIdentity," and "),new Transform("",kOmitFirst2,""),new Transform("",kOmitLast1,""),new Transform(", ",kIdentity," "),new Transform("",kIdentity,", "),new Transform(" ",kUppercaseFirst," "),new Transform("",kIdentity," in "),new Transform("",kIdentity," to "),new Transform("e ",kIdentity," "),new Transform("",kIdentity,'"'),new Transform("",kIdentity,"."),new Transform("",kIdentity,'">'),new Transform("",kIdentity,"\n"),new Transform("",kOmitLast3,""),new Transform("",kIdentity,"]"),new Transform("",kIdentity," for "),new Transform("",kOmitFirst3,""),new Transform("",kOmitLast2,""),new Transform("",kIdentity," a "),new Transform("",kIdentity," that "),new Transform(" ",kUppercaseFirst,""),new Transform("",kIdentity,". "),new Transform(".",kIdentity,""),new Transform(" ",kIdentity,", "),new Transform("",kOmitFirst4,""),new Transform("",kIdentity," with "),new Transform("",kIdentity,"'"),new Transform("",kIdentity," from "),new Transform("",kIdentity," by "),new Transform("",kOmitFirst5,""),new Transform("",kOmitFirst6,""),new Transform(" the ",kIdentity,""),new Transform("",kOmitLast4,""),new Transform("",kIdentity,". The "),new Transform("",kUppercaseAll,""),new Transform("",kIdentity," on "),new Transform("",kIdentity," as "),new Transform("",kIdentity," is "),new Transform("",kOmitLast7,""),new Transform("",kOmitLast1,"ing "),new Transform("",kIdentity,"\n	"),new Transform("",kIdentity,":"),new Transform(" ",kIdentity,". "),new Transform("",kIdentity,"ed "),new Transform("",kOmitFirst9,""),new Transform("",kOmitFirst7,""),new Transform("",kOmitLast6,""),new Transform("",kIdentity,"("),new Transform("",kUppercaseFirst,", "),new Transform("",kOmitLast8,""),new Transform("",kIdentity," at "),new Transform("",kIdentity,"ly "),new Transform(" the ",kIdentity," of "),new Transform("",kOmitLast5,""),new Transform("",kOmitLast9,""),new Transform(" ",kUppercaseFirst,", "),new Transform("",kUppercaseFirst,'"'),new Transform(".",kIdentity,"("),new Transform("",kUppercaseAll," "),new Transform("",kUppercaseFirst,'">'),new Transform("",kIdentity,'="'),new Transform(" ",kIdentity,"."),new Transform(".com/",kIdentity,""),new Transform(" the ",kIdentity," of the "),new Transform("",kUppercaseFirst,"'"),new Transform("",kIdentity,". This "),new Transform("",kIdentity,","),new Transform(".",kIdentity," "),new Transform("",kUppercaseFirst,"("),new Transform("",kUppercaseFirst,"."),new Transform("",kIdentity," not "),new Transform(" ",kIdentity,'="'),new Transform("",kIdentity,"er "),new Transform(" ",kUppercaseAll," "),new Transform("",kIdentity,"al "),new Transform(" ",kUppercaseAll,""),new Transform("",kIdentity,"='"),new Transform("",kUppercaseAll,'"'),new Transform("",kUppercaseFirst,". "),new Transform(" ",kIdentity,"("),new Transform("",kIdentity,"ful "),new Transform(" ",kUppercaseFirst,". "),new Transform("",kIdentity,"ive "),new Transform("",kIdentity,"less "),new Transform("",kUppercaseAll,"'"),new Transform("",kIdentity,"est "),new Transform(" ",kUppercaseFirst,"."),new Transform("",kUppercaseAll,'">'),new Transform(" ",kIdentity,"='"),new Transform("",kUppercaseFirst,","),new Transform("",kIdentity,"ize "),new Transform("",kUppercaseAll,"."),new Transform("\xC2\xA0",kIdentity,""),new Transform(" ",kIdentity,","),new Transform("",kUppercaseFirst,'="'),new Transform("",kUppercaseAll,'="'),new Transform("",kIdentity,"ous "),new Transform("",kUppercaseAll,", "),new Transform("",kUppercaseFirst,"='"),new Transform(" ",kUppercaseFirst,","),new Transform(" ",kUppercaseAll,'="'),new Transform(" ",kUppercaseAll,", "),new Transform("",kUppercaseAll,","),new Transform("",kUppercaseAll,"("),new Transform("",kUppercaseAll,". "),new Transform(" ",kUppercaseAll,"."),new Transform("",kUppercaseAll,"='"),new Transform(" ",kUppercaseAll,". "),new Transform(" ",kUppercaseFirst,'="'),new Transform(" ",kUppercaseAll,"='"),new Transform(" ",kUppercaseFirst,"='")];exports2.kTransforms=kTransforms;exports2.kNumTransforms=kTransforms.length;function ToUpperCase(p,i2){if(p[i2]<192){if(p[i2]>=97&&p[i2]<=122){p[i2]^=32;}
return 1;}
if(p[i2]<224){p[i2+1]^=32;return 2;}
p[i2+2]^=5;return 3;}
exports2.transformDictionaryWord=function(dst,idx,word,len2,transform7){var prefix=kTransforms[transform7].prefix;var suffix=kTransforms[transform7].suffix;var t=kTransforms[transform7].transform;var skip=t<kOmitFirst1?0:t-(kOmitFirst1-1);var i2=0;var start_idx=idx;var uppercase;if(skip>len2){skip=len2;}
var prefix_pos=0;while(prefix_pos<prefix.length){dst[idx++]=prefix[prefix_pos++];}
word+=skip;len2-=skip;if(t<=kOmitLast9){len2-=t;}
for(i2=0;i2<len2;i2++){dst[idx++]=BrotliDictionary.dictionary[word+i2];}
uppercase=idx-len2;if(t===kUppercaseFirst){ToUpperCase(dst,uppercase);}else if(t===kUppercaseAll){while(len2>0){var step=ToUpperCase(dst,uppercase);uppercase+=step;len2-=step;}}
var suffix_pos=0;while(suffix_pos<suffix.length){dst[idx++]=suffix[suffix_pos++];}
return idx-start_idx;};}});var require_decode=__commonJS({"../../node_modules/.pnpm/brotli@1.3.3/node_modules/brotli/dec/decode.js"(exports2){var BrotliInput=require_streams().BrotliInput;var BrotliOutput=require_streams().BrotliOutput;var BrotliBitReader=require_bit_reader();var BrotliDictionary=require_dictionary();var HuffmanCode=require_huffman().HuffmanCode;var BrotliBuildHuffmanTable=require_huffman().BrotliBuildHuffmanTable;var Context=require_context();var Prefix=require_prefix();var Transform=require_transform();var kDefaultCodeLength=8;var kCodeLengthRepeatCode=16;var kNumLiteralCodes=256;var kNumInsertAndCopyCodes=704;var kNumBlockLengthCodes=26;var kLiteralContextBits=6;var kDistanceContextBits=2;var HUFFMAN_TABLE_BITS=8;var HUFFMAN_TABLE_MASK=255;var HUFFMAN_MAX_TABLE_SIZE=1080;var CODE_LENGTH_CODES=18;var kCodeLengthCodeOrder=new Uint8Array([1,2,3,4,0,5,17,6,16,7,8,9,10,11,12,13,14,15]);var NUM_DISTANCE_SHORT_CODES=16;var kDistanceShortCodeIndexOffset=new Uint8Array([3,2,1,0,3,3,3,3,3,3,2,2,2,2,2,2]);var kDistanceShortCodeValueOffset=new Int8Array([0,0,0,0,-1,1,-2,2,-3,3,-1,1,-2,2,-3,3]);var kMaxHuffmanTableSize=new Uint16Array([256,402,436,468,500,534,566,598,630,662,694,726,758,790,822,854,886,920,952,984,1016,1048,1080]);function DecodeWindowBits(br){var n2;if(br.readBits(1)===0){return 16;}
n2=br.readBits(3);if(n2>0){return 17+n2;}
n2=br.readBits(3);if(n2>0){return 8+n2;}
return 17;}
function DecodeVarLenUint8(br){if(br.readBits(1)){var nbits=br.readBits(3);if(nbits===0){return 1;}else{return br.readBits(nbits)+(1<<nbits);}}
return 0;}
function MetaBlockLength(){this.meta_block_length=0;this.input_end=0;this.is_uncompressed=0;this.is_metadata=false;}
function DecodeMetaBlockLength(br){var out=new MetaBlockLength();var size_nibbles;var size_bytes;var i2;out.input_end=br.readBits(1);if(out.input_end&&br.readBits(1)){return out;}
size_nibbles=br.readBits(2)+4;if(size_nibbles===7){out.is_metadata=true;if(br.readBits(1)!==0)
throw new Error("Invalid reserved bit");size_bytes=br.readBits(2);if(size_bytes===0)
return out;for(i2=0;i2<size_bytes;i2++){var next_byte=br.readBits(8);if(i2+1===size_bytes&&size_bytes>1&&next_byte===0)
throw new Error("Invalid size byte");out.meta_block_length|=next_byte<<i2*8;}}else{for(i2=0;i2<size_nibbles;++i2){var next_nibble=br.readBits(4);if(i2+1===size_nibbles&&size_nibbles>4&&next_nibble===0)
throw new Error("Invalid size nibble");out.meta_block_length|=next_nibble<<i2*4;}}
++out.meta_block_length;if(!out.input_end&&!out.is_metadata){out.is_uncompressed=br.readBits(1);}
return out;}
function ReadSymbol(table,index2,br){var start_index=index2;var nbits;br.fillBitWindow();index2+=br.val_>>>br.bit_pos_&HUFFMAN_TABLE_MASK;nbits=table[index2].bits-HUFFMAN_TABLE_BITS;if(nbits>0){br.bit_pos_+=HUFFMAN_TABLE_BITS;index2+=table[index2].value;index2+=br.val_>>>br.bit_pos_&(1<<nbits)-1;}
br.bit_pos_+=table[index2].bits;return table[index2].value;}
function ReadHuffmanCodeLengths(code_length_code_lengths,num_symbols,code_lengths,br){var symbol=0;var prev_code_len=kDefaultCodeLength;var repeat=0;var repeat_code_len=0;var space=32768;var table=[];for(var i2=0;i2<32;i2++)
table.push(new HuffmanCode(0,0));BrotliBuildHuffmanTable(table,0,5,code_length_code_lengths,CODE_LENGTH_CODES);while(symbol<num_symbols&&space>0){var p=0;var code_len;br.readMoreInput();br.fillBitWindow();p+=br.val_>>>br.bit_pos_&31;br.bit_pos_+=table[p].bits;code_len=table[p].value&255;if(code_len<kCodeLengthRepeatCode){repeat=0;code_lengths[symbol++]=code_len;if(code_len!==0){prev_code_len=code_len;space-=32768>>code_len;}}else{var extra_bits=code_len-14;var old_repeat;var repeat_delta;var new_len=0;if(code_len===kCodeLengthRepeatCode){new_len=prev_code_len;}
if(repeat_code_len!==new_len){repeat=0;repeat_code_len=new_len;}
old_repeat=repeat;if(repeat>0){repeat-=2;repeat<<=extra_bits;}
repeat+=br.readBits(extra_bits)+3;repeat_delta=repeat-old_repeat;if(symbol+repeat_delta>num_symbols){throw new Error("[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols");}
for(var x2=0;x2<repeat_delta;x2++)
code_lengths[symbol+x2]=repeat_code_len;symbol+=repeat_delta;if(repeat_code_len!==0){space-=repeat_delta<<15-repeat_code_len;}}}
if(space!==0){throw new Error("[ReadHuffmanCodeLengths] space = "+space);}
for(;symbol<num_symbols;symbol++)
code_lengths[symbol]=0;}
function ReadHuffmanCode(alphabet_size,tables,table,br){var table_size=0;var simple_code_or_skip;var code_lengths=new Uint8Array(alphabet_size);br.readMoreInput();simple_code_or_skip=br.readBits(2);if(simple_code_or_skip===1){var i2;var max_bits_counter=alphabet_size-1;var max_bits=0;var symbols=new Int32Array(4);var num_symbols=br.readBits(2)+1;while(max_bits_counter){max_bits_counter>>=1;++max_bits;}
for(i2=0;i2<num_symbols;++i2){symbols[i2]=br.readBits(max_bits)%alphabet_size;code_lengths[symbols[i2]]=2;}
code_lengths[symbols[0]]=1;switch(num_symbols){case 1:break;case 3:if(symbols[0]===symbols[1]||symbols[0]===symbols[2]||symbols[1]===symbols[2]){throw new Error("[ReadHuffmanCode] invalid symbols");}
break;case 2:if(symbols[0]===symbols[1]){throw new Error("[ReadHuffmanCode] invalid symbols");}
code_lengths[symbols[1]]=1;break;case 4:if(symbols[0]===symbols[1]||symbols[0]===symbols[2]||symbols[0]===symbols[3]||symbols[1]===symbols[2]||symbols[1]===symbols[3]||symbols[2]===symbols[3]){throw new Error("[ReadHuffmanCode] invalid symbols");}
if(br.readBits(1)){code_lengths[symbols[2]]=3;code_lengths[symbols[3]]=3;}else{code_lengths[symbols[0]]=2;}
break;}}else{var i2;var code_length_code_lengths=new Uint8Array(CODE_LENGTH_CODES);var space=32;var num_codes=0;var huff=[new HuffmanCode(2,0),new HuffmanCode(2,4),new HuffmanCode(2,3),new HuffmanCode(3,2),new HuffmanCode(2,0),new HuffmanCode(2,4),new HuffmanCode(2,3),new HuffmanCode(4,1),new HuffmanCode(2,0),new HuffmanCode(2,4),new HuffmanCode(2,3),new HuffmanCode(3,2),new HuffmanCode(2,0),new HuffmanCode(2,4),new HuffmanCode(2,3),new HuffmanCode(4,5)];for(i2=simple_code_or_skip;i2<CODE_LENGTH_CODES&&space>0;++i2){var code_len_idx=kCodeLengthCodeOrder[i2];var p=0;var v;br.fillBitWindow();p+=br.val_>>>br.bit_pos_&15;br.bit_pos_+=huff[p].bits;v=huff[p].value;code_length_code_lengths[code_len_idx]=v;if(v!==0){space-=32>>v;++num_codes;}}
if(!(num_codes===1||space===0))
throw new Error("[ReadHuffmanCode] invalid num_codes or space");ReadHuffmanCodeLengths(code_length_code_lengths,alphabet_size,code_lengths,br);}
table_size=BrotliBuildHuffmanTable(tables,table,HUFFMAN_TABLE_BITS,code_lengths,alphabet_size);if(table_size===0){throw new Error("[ReadHuffmanCode] BuildHuffmanTable failed: ");}
return table_size;}
function ReadBlockLength(table,index2,br){var code;var nbits;code=ReadSymbol(table,index2,br);nbits=Prefix.kBlockLengthPrefixCode[code].nbits;return Prefix.kBlockLengthPrefixCode[code].offset+br.readBits(nbits);}
function TranslateShortCodes(code,ringbuffer,index2){var val;if(code<NUM_DISTANCE_SHORT_CODES){index2+=kDistanceShortCodeIndexOffset[code];index2&=3;val=ringbuffer[index2]+kDistanceShortCodeValueOffset[code];}else{val=code-NUM_DISTANCE_SHORT_CODES+1;}
return val;}
function MoveToFront(v,index2){var value=v[index2];var i2=index2;for(;i2;--i2)
v[i2]=v[i2-1];v[0]=value;}
function InverseMoveToFrontTransform(v,v_len){var mtf=new Uint8Array(256);var i2;for(i2=0;i2<256;++i2){mtf[i2]=i2;}
for(i2=0;i2<v_len;++i2){var index2=v[i2];v[i2]=mtf[index2];if(index2)
MoveToFront(mtf,index2);}}
function HuffmanTreeGroup(alphabet_size,num_htrees){this.alphabet_size=alphabet_size;this.num_htrees=num_htrees;this.codes=new Array(num_htrees+num_htrees*kMaxHuffmanTableSize[alphabet_size+31>>>5]);this.htrees=new Uint32Array(num_htrees);}
HuffmanTreeGroup.prototype.decode=function(br){var i2;var table_size;var next=0;for(i2=0;i2<this.num_htrees;++i2){this.htrees[i2]=next;table_size=ReadHuffmanCode(this.alphabet_size,this.codes,next,br);next+=table_size;}};function DecodeContextMap(context_map_size,br){var out={num_htrees:null,context_map:null};var use_rle_for_zeros;var max_run_length_prefix=0;var table;var i2;br.readMoreInput();var num_htrees=out.num_htrees=DecodeVarLenUint8(br)+1;var context_map=out.context_map=new Uint8Array(context_map_size);if(num_htrees<=1){return out;}
use_rle_for_zeros=br.readBits(1);if(use_rle_for_zeros){max_run_length_prefix=br.readBits(4)+1;}
table=[];for(i2=0;i2<HUFFMAN_MAX_TABLE_SIZE;i2++){table[i2]=new HuffmanCode(0,0);}
ReadHuffmanCode(num_htrees+max_run_length_prefix,table,0,br);for(i2=0;i2<context_map_size;){var code;br.readMoreInput();code=ReadSymbol(table,0,br);if(code===0){context_map[i2]=0;++i2;}else if(code<=max_run_length_prefix){var reps=1+(1<<code)+br.readBits(code);while(--reps){if(i2>=context_map_size){throw new Error("[DecodeContextMap] i >= context_map_size");}
context_map[i2]=0;++i2;}}else{context_map[i2]=code-max_run_length_prefix;++i2;}}
if(br.readBits(1)){InverseMoveToFrontTransform(context_map,context_map_size);}
return out;}
function DecodeBlockType(max_block_type,trees,tree_type,block_types,ringbuffers,indexes,br){var ringbuffer=tree_type*2;var index2=tree_type;var type_code=ReadSymbol(trees,tree_type*HUFFMAN_MAX_TABLE_SIZE,br);var block_type;if(type_code===0){block_type=ringbuffers[ringbuffer+(indexes[index2]&1)];}else if(type_code===1){block_type=ringbuffers[ringbuffer+(indexes[index2]-1&1)]+1;}else{block_type=type_code-2;}
if(block_type>=max_block_type){block_type-=max_block_type;}
block_types[tree_type]=block_type;ringbuffers[ringbuffer+(indexes[index2]&1)]=block_type;++indexes[index2];}
function CopyUncompressedBlockToOutput(output,len2,pos,ringbuffer,ringbuffer_mask,br){var rb_size=ringbuffer_mask+1;var rb_pos=pos&ringbuffer_mask;var br_pos=br.pos_&BrotliBitReader.IBUF_MASK;var nbytes;if(len2<8||br.bit_pos_+(len2<<3)<br.bit_end_pos_){while(len2-->0){br.readMoreInput();ringbuffer[rb_pos++]=br.readBits(8);if(rb_pos===rb_size){output.write(ringbuffer,rb_size);rb_pos=0;}}
return;}
if(br.bit_end_pos_<32){throw new Error("[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32");}
while(br.bit_pos_<32){ringbuffer[rb_pos]=br.val_>>>br.bit_pos_;br.bit_pos_+=8;++rb_pos;--len2;}
nbytes=br.bit_end_pos_-br.bit_pos_>>3;if(br_pos+nbytes>BrotliBitReader.IBUF_MASK){var tail=BrotliBitReader.IBUF_MASK+1-br_pos;for(var x2=0;x2<tail;x2++)
ringbuffer[rb_pos+x2]=br.buf_[br_pos+x2];nbytes-=tail;rb_pos+=tail;len2-=tail;br_pos=0;}
for(var x2=0;x2<nbytes;x2++)
ringbuffer[rb_pos+x2]=br.buf_[br_pos+x2];rb_pos+=nbytes;len2-=nbytes;if(rb_pos>=rb_size){output.write(ringbuffer,rb_size);rb_pos-=rb_size;for(var x2=0;x2<rb_pos;x2++)
ringbuffer[x2]=ringbuffer[rb_size+x2];}
while(rb_pos+len2>=rb_size){nbytes=rb_size-rb_pos;if(br.input_.read(ringbuffer,rb_pos,nbytes)<nbytes){throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");}
output.write(ringbuffer,rb_size);len2-=nbytes;rb_pos=0;}
if(br.input_.read(ringbuffer,rb_pos,len2)<len2){throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");}
br.reset();}
function JumpToByteBoundary(br){var new_bit_pos=br.bit_pos_+7&~7;var pad_bits=br.readBits(new_bit_pos-br.bit_pos_);return pad_bits==0;}
function BrotliDecompressedSize(buffer){var input=new BrotliInput(buffer);var br=new BrotliBitReader(input);DecodeWindowBits(br);var out=DecodeMetaBlockLength(br);return out.meta_block_length;}
exports2.BrotliDecompressedSize=BrotliDecompressedSize;function BrotliDecompressBuffer(buffer,output_size){var input=new BrotliInput(buffer);if(output_size==null){output_size=BrotliDecompressedSize(buffer);}
var output_buffer=new Uint8Array(output_size);var output=new BrotliOutput(output_buffer);BrotliDecompress(input,output);if(output.pos<output.buffer.length){output.buffer=output.buffer.subarray(0,output.pos);}
return output.buffer;}
exports2.BrotliDecompressBuffer=BrotliDecompressBuffer;function BrotliDecompress(input,output){var i2;var pos=0;var input_end=0;var window_bits=0;var max_backward_distance;var max_distance=0;var ringbuffer_size;var ringbuffer_mask;var ringbuffer;var ringbuffer_end;var dist_rb=[16,15,11,4];var dist_rb_idx=0;var prev_byte1=0;var prev_byte2=0;var hgroup=[new HuffmanTreeGroup(0,0),new HuffmanTreeGroup(0,0),new HuffmanTreeGroup(0,0)];var block_type_trees;var block_len_trees;var br;var kRingBufferWriteAheadSlack=128+BrotliBitReader.READ_SIZE;br=new BrotliBitReader(input);window_bits=DecodeWindowBits(br);max_backward_distance=(1<<window_bits)-16;ringbuffer_size=1<<window_bits;ringbuffer_mask=ringbuffer_size-1;ringbuffer=new Uint8Array(ringbuffer_size+kRingBufferWriteAheadSlack+BrotliDictionary.maxDictionaryWordLength);ringbuffer_end=ringbuffer_size;block_type_trees=[];block_len_trees=[];for(var x2=0;x2<3*HUFFMAN_MAX_TABLE_SIZE;x2++){block_type_trees[x2]=new HuffmanCode(0,0);block_len_trees[x2]=new HuffmanCode(0,0);}
while(!input_end){var meta_block_remaining_len=0;var is_uncompressed;var block_length=[1<<28,1<<28,1<<28];var block_type=[0];var num_block_types=[1,1,1];var block_type_rb=[0,1,0,1,0,1];var block_type_rb_index=[0];var distance_postfix_bits;var num_direct_distance_codes;var distance_postfix_mask;var num_distance_codes;var context_map=null;var context_modes=null;var num_literal_htrees;var dist_context_map=null;var num_dist_htrees;var context_offset=0;var context_map_slice=null;var literal_htree_index=0;var dist_context_offset=0;var dist_context_map_slice=null;var dist_htree_index=0;var context_lookup_offset1=0;var context_lookup_offset2=0;var context_mode;var htree_command;for(i2=0;i2<3;++i2){hgroup[i2].codes=null;hgroup[i2].htrees=null;}
br.readMoreInput();var _out=DecodeMetaBlockLength(br);meta_block_remaining_len=_out.meta_block_length;if(pos+meta_block_remaining_len>output.buffer.length){var tmp=new Uint8Array(pos+meta_block_remaining_len);tmp.set(output.buffer);output.buffer=tmp;}
input_end=_out.input_end;is_uncompressed=_out.is_uncompressed;if(_out.is_metadata){JumpToByteBoundary(br);for(;meta_block_remaining_len>0;--meta_block_remaining_len){br.readMoreInput();br.readBits(8);}
continue;}
if(meta_block_remaining_len===0){continue;}
if(is_uncompressed){br.bit_pos_=br.bit_pos_+7&~7;CopyUncompressedBlockToOutput(output,meta_block_remaining_len,pos,ringbuffer,ringbuffer_mask,br);pos+=meta_block_remaining_len;continue;}
for(i2=0;i2<3;++i2){num_block_types[i2]=DecodeVarLenUint8(br)+1;if(num_block_types[i2]>=2){ReadHuffmanCode(num_block_types[i2]+2,block_type_trees,i2*HUFFMAN_MAX_TABLE_SIZE,br);ReadHuffmanCode(kNumBlockLengthCodes,block_len_trees,i2*HUFFMAN_MAX_TABLE_SIZE,br);block_length[i2]=ReadBlockLength(block_len_trees,i2*HUFFMAN_MAX_TABLE_SIZE,br);block_type_rb_index[i2]=1;}}
br.readMoreInput();distance_postfix_bits=br.readBits(2);num_direct_distance_codes=NUM_DISTANCE_SHORT_CODES+(br.readBits(4)<<distance_postfix_bits);distance_postfix_mask=(1<<distance_postfix_bits)-1;num_distance_codes=num_direct_distance_codes+(48<<distance_postfix_bits);context_modes=new Uint8Array(num_block_types[0]);for(i2=0;i2<num_block_types[0];++i2){br.readMoreInput();context_modes[i2]=br.readBits(2)<<1;}
var _o1=DecodeContextMap(num_block_types[0]<<kLiteralContextBits,br);num_literal_htrees=_o1.num_htrees;context_map=_o1.context_map;var _o2=DecodeContextMap(num_block_types[2]<<kDistanceContextBits,br);num_dist_htrees=_o2.num_htrees;dist_context_map=_o2.context_map;hgroup[0]=new HuffmanTreeGroup(kNumLiteralCodes,num_literal_htrees);hgroup[1]=new HuffmanTreeGroup(kNumInsertAndCopyCodes,num_block_types[1]);hgroup[2]=new HuffmanTreeGroup(num_distance_codes,num_dist_htrees);for(i2=0;i2<3;++i2){hgroup[i2].decode(br);}
context_map_slice=0;dist_context_map_slice=0;context_mode=context_modes[block_type[0]];context_lookup_offset1=Context.lookupOffsets[context_mode];context_lookup_offset2=Context.lookupOffsets[context_mode+1];htree_command=hgroup[1].htrees[0];while(meta_block_remaining_len>0){var cmd_code;var range_idx;var insert_code;var copy_code;var insert_length;var copy_length;var distance_code;var distance3;var context;var j;var copy_dst;br.readMoreInput();if(block_length[1]===0){DecodeBlockType(num_block_types[1],block_type_trees,1,block_type,block_type_rb,block_type_rb_index,br);block_length[1]=ReadBlockLength(block_len_trees,HUFFMAN_MAX_TABLE_SIZE,br);htree_command=hgroup[1].htrees[block_type[1]];}
--block_length[1];cmd_code=ReadSymbol(hgroup[1].codes,htree_command,br);range_idx=cmd_code>>6;if(range_idx>=2){range_idx-=2;distance_code=-1;}else{distance_code=0;}
insert_code=Prefix.kInsertRangeLut[range_idx]+(cmd_code>>3&7);copy_code=Prefix.kCopyRangeLut[range_idx]+(cmd_code&7);insert_length=Prefix.kInsertLengthPrefixCode[insert_code].offset+br.readBits(Prefix.kInsertLengthPrefixCode[insert_code].nbits);copy_length=Prefix.kCopyLengthPrefixCode[copy_code].offset+br.readBits(Prefix.kCopyLengthPrefixCode[copy_code].nbits);prev_byte1=ringbuffer[pos-1&ringbuffer_mask];prev_byte2=ringbuffer[pos-2&ringbuffer_mask];for(j=0;j<insert_length;++j){br.readMoreInput();if(block_length[0]===0){DecodeBlockType(num_block_types[0],block_type_trees,0,block_type,block_type_rb,block_type_rb_index,br);block_length[0]=ReadBlockLength(block_len_trees,0,br);context_offset=block_type[0]<<kLiteralContextBits;context_map_slice=context_offset;context_mode=context_modes[block_type[0]];context_lookup_offset1=Context.lookupOffsets[context_mode];context_lookup_offset2=Context.lookupOffsets[context_mode+1];}
context=Context.lookup[context_lookup_offset1+prev_byte1]|Context.lookup[context_lookup_offset2+prev_byte2];literal_htree_index=context_map[context_map_slice+context];--block_length[0];prev_byte2=prev_byte1;prev_byte1=ReadSymbol(hgroup[0].codes,hgroup[0].htrees[literal_htree_index],br);ringbuffer[pos&ringbuffer_mask]=prev_byte1;if((pos&ringbuffer_mask)===ringbuffer_mask){output.write(ringbuffer,ringbuffer_size);}
++pos;}
meta_block_remaining_len-=insert_length;if(meta_block_remaining_len<=0)
break;if(distance_code<0){var context;br.readMoreInput();if(block_length[2]===0){DecodeBlockType(num_block_types[2],block_type_trees,2,block_type,block_type_rb,block_type_rb_index,br);block_length[2]=ReadBlockLength(block_len_trees,2*HUFFMAN_MAX_TABLE_SIZE,br);dist_context_offset=block_type[2]<<kDistanceContextBits;dist_context_map_slice=dist_context_offset;}
--block_length[2];context=(copy_length>4?3:copy_length-2)&255;dist_htree_index=dist_context_map[dist_context_map_slice+context];distance_code=ReadSymbol(hgroup[2].codes,hgroup[2].htrees[dist_htree_index],br);if(distance_code>=num_direct_distance_codes){var nbits;var postfix;var offset;distance_code-=num_direct_distance_codes;postfix=distance_code&distance_postfix_mask;distance_code>>=distance_postfix_bits;nbits=(distance_code>>1)+1;offset=(2+(distance_code&1)<<nbits)-4;distance_code=num_direct_distance_codes+(offset+br.readBits(nbits)<<distance_postfix_bits)+postfix;}}
distance3=TranslateShortCodes(distance_code,dist_rb,dist_rb_idx);if(distance3<0){throw new Error("[BrotliDecompress] invalid distance");}
if(pos<max_backward_distance&&max_distance!==max_backward_distance){max_distance=pos;}else{max_distance=max_backward_distance;}
copy_dst=pos&ringbuffer_mask;if(distance3>max_distance){if(copy_length>=BrotliDictionary.minDictionaryWordLength&&copy_length<=BrotliDictionary.maxDictionaryWordLength){var offset=BrotliDictionary.offsetsByLength[copy_length];var word_id=distance3-max_distance-1;var shift=BrotliDictionary.sizeBitsByLength[copy_length];var mask=(1<<shift)-1;var word_idx=word_id&mask;var transform_idx=word_id>>shift;offset+=word_idx*copy_length;if(transform_idx<Transform.kNumTransforms){var len2=Transform.transformDictionaryWord(ringbuffer,copy_dst,offset,copy_length,transform_idx);copy_dst+=len2;pos+=len2;meta_block_remaining_len-=len2;if(copy_dst>=ringbuffer_end){output.write(ringbuffer,ringbuffer_size);for(var _x=0;_x<copy_dst-ringbuffer_end;_x++)
ringbuffer[_x]=ringbuffer[ringbuffer_end+_x];}}else{throw new Error("Invalid backward reference. pos: "+pos+" distance: "+distance3+" len: "+copy_length+" bytes left: "+meta_block_remaining_len);}}else{throw new Error("Invalid backward reference. pos: "+pos+" distance: "+distance3+" len: "+copy_length+" bytes left: "+meta_block_remaining_len);}}else{if(distance_code>0){dist_rb[dist_rb_idx&3]=distance3;++dist_rb_idx;}
if(copy_length>meta_block_remaining_len){throw new Error("Invalid backward reference. pos: "+pos+" distance: "+distance3+" len: "+copy_length+" bytes left: "+meta_block_remaining_len);}
for(j=0;j<copy_length;++j){ringbuffer[pos&ringbuffer_mask]=ringbuffer[pos-distance3&ringbuffer_mask];if((pos&ringbuffer_mask)===ringbuffer_mask){output.write(ringbuffer,ringbuffer_size);}
++pos;--meta_block_remaining_len;}}
prev_byte1=ringbuffer[pos-1&ringbuffer_mask];prev_byte2=ringbuffer[pos-2&ringbuffer_mask];}
pos&=1073741823;}
output.write(ringbuffer,pos&ringbuffer_mask);}
exports2.BrotliDecompress=BrotliDecompress;BrotliDictionary.init();}});var require_decompress=__commonJS({"../../node_modules/.pnpm/brotli@1.3.3/node_modules/brotli/decompress.js"(exports2,module2){module2.exports=require_decode().BrotliDecompressBuffer;}});var logger={debug:(...args)=>{},info:(...args)=>{},warn:(...args)=>{},error:(...args)=>{},fatal:(...args)=>{}};var WILDCARD="*";var EventEmitter=(function(){function EventEmitter2(){this._events={};}
EventEmitter2.prototype.on=function(evt,callback,once){if(!this._events[evt]){this._events[evt]=[];}
this._events[evt].push({callback,once:!!once});return this;};EventEmitter2.prototype.once=function(evt,callback){return this.on(evt,callback,true);};EventEmitter2.prototype.emit=function(evt){var _this=this;var args=[];for(var _i=1;_i<arguments.length;_i++){args[_i-1]=arguments[_i];}
var events=this._events[evt]||[];var wildcardEvents=this._events[WILDCARD]||[];var doEmit=function(es){var length3=es.length;for(var i2=0;i2<length3;i2++){if(!es[i2]){continue;}
var _a=es[i2],callback=_a.callback,once=_a.once;if(once){es.splice(i2,1);if(es.length===0){delete _this._events[evt];}
length3--;i2--;}
callback.apply(_this,args);}};doEmit(events);doEmit(wildcardEvents);};EventEmitter2.prototype.off=function(evt,callback){if(!evt){this._events={};}else{if(!callback){delete this._events[evt];}else{var events=this._events[evt]||[];var length_1=events.length;for(var i2=0;i2<length_1;i2++){if(events[i2].callback===callback){events.splice(i2,1);length_1--;i2--;}}
if(events.length===0){delete this._events[evt];}}}
return this;};EventEmitter2.prototype.getEvents=function(){return this._events;};return EventEmitter2;}());var esm_default=EventEmitter;var DiagramEventManager=class{constructor(){this.recognizers=[];this.emitter=new esm_default();}
addRecognizer(recognizer){if(!this.recognizers.includes(recognizer)){this.recognizers.push(recognizer);}
return()=>{const index2=this.recognizers.indexOf(recognizer);if(index2>-1)
this.recognizers.splice(index2,1);};}
recognizeGraphicEvent(e,ir){const events=[];for(const recognizer of this.recognizers){const result=recognizer.recognize(e,ir);if(result)
events.push(result);}
return events;}
feedGraphicEvent(e,ir){const dEvents=this.recognizeGraphicEvent(e,ir);for(const dEvent of dEvents){this.emitter.emit(dEvent.type,dEvent);}
return dEvents;}
wireCurrentEventsToRenderer(renderer,diagramIR){for(const[eventName,listeners]of Object.entries(this.emitter.getEvents())){for(const l of listeners){const handler=l.callback;this.wireDiagramEventToRenderer(renderer,eventName,handler,diagramIR);}}}
wireDiagramEventToRenderer(renderer,eventName,handler,diagramIR){return renderer.on(eventName,(graphicEvent)=>{const dEvents=diagramEventManager.feedGraphicEvent(graphicEvent,diagramIR);for(const dEvent of dEvents){handler(dEvent);}});}
on(evt,handler){const{emitter}=this;emitter.on(evt,handler);return function dispose(){emitter.off(evt,handler);};}
once(evt,handler){const{emitter}=this;emitter.once(evt,handler);return function dispose(){emitter.off(evt,handler);};}
removeListeners(evt){this.emitter.off(evt);}
matchEventItem(item,diagram,type){return item.diagram===diagram&&item.type===type;}};var diagramEventManager=new DiagramEventManager();var DiagramEvent=class{constructor(graphicEvent,mark,item){this.graphicEvent=graphicEvent;this.mark=mark;this.item=item;}
get type(){return this.graphicEvent.type;}};function diagramEventMakerFactory(diagram){return(e,mark,id9,type,data)=>{return new DiagramEvent(e,mark,{diagram,type,id:id9,data});};}
var DiagramRegistry=class{constructor(){this.diagrams={};}
registerDiagram(name,diagram){if(this.diagrams[name]){logger.warn(`[pintora]duplicate diagram:${name}`);}else{if(diagram.eventRecognizer){diagramEventManager.addRecognizer(diagram.eventRecognizer);}}
this.diagrams[name]=diagram;}
detectDiagram(text){let diagram=this.diagrams["sequenceDiagram"];for(const d of Object.values(this.diagrams)){if(d.pattern.test(text)){diagram=d;break;}}
return diagram;}
getDiagram(name){return this.diagrams[name];}};var diagramRegistry=new DiagramRegistry();var import_deepmerge=__toESM(require_cjs());var import_clone_deep=__toESM(require_clone_deep());var AYU_LIGHT={white:"#fff",lightDark:"#5E666D",normalDark:"#3b4044",neutralGray:"#f8f8f2",cyan:"#55b4d4",green:"#9c0",orange:"#fdb05e",pink:"#f07171",purple:"#af71d0",red:"#e45649",yellow:"#f5f1be"};var DRACULA={white:"#f8f8f2",normalDark:"#282a36",cyan:"#8be9fd",green:"#50fa7b",orange:"#ffb86c",pink:"#ff79c6",purple:"#AD78F7",purpleDark:"#9a58f5",red:"#ff5555",yellow:"#f1fa8c"};var BLUE_LARK={white:"#EDF4FF",normalDark:"#272827",cyan:"#A6D8F1",green:"#03B59C",blue:"#4492FD",darkBlue:"#143C9A",brightBlue:"#8BBBFD",orange:"#ffb86c",pink:"#F9DBD8",purple:"#AFBCF1",red:"#FD514D",yellow:"#FEF4D7"};var NOTE_BACKGROUND="#F8EA75";var ThemeDefault=class{constructor(){this.schemeOppsiteTheme="dark";this.primaryColor=AYU_LIGHT.orange;this.secondaryColor=AYU_LIGHT.yellow;this.teritaryColor=AYU_LIGHT.purple;this.primaryLineColor=AYU_LIGHT.normalDark;this.secondaryLineColor=AYU_LIGHT.normalDark;this.textColor=AYU_LIGHT.normalDark;this.primaryTextColor=AYU_LIGHT.normalDark;this.secondaryTextColor=AYU_LIGHT.normalDark;this.teritaryTextColor=AYU_LIGHT.normalDark;this.primaryBorderColor=AYU_LIGHT.normalDark;this.secondaryBorderColor=AYU_LIGHT.neutralGray;this.canvasBackground=AYU_LIGHT.white;this.groupBackground=AYU_LIGHT.white;this.background1=AYU_LIGHT.neutralGray;this.noteBackground=NOTE_BACKGROUND;}};var ThemeDark=class{constructor(){this.isDark=true;this.schemeOppsiteTheme="default";this.primaryColor=DRACULA.purpleDark;this.secondaryColor=DRACULA.pink;this.teritaryColor=DRACULA.cyan;this.primaryLineColor=DRACULA.white;this.secondaryLineColor=DRACULA.white;this.textColor=DRACULA.white;this.primaryTextColor=DRACULA.normalDark;this.secondaryTextColor=DRACULA.white;this.teritaryTextColor=DRACULA.normalDark;this.primaryBorderColor=DRACULA.white;this.secondaryBorderColor=DRACULA.normalDark;this.canvasBackground=DRACULA.normalDark;this.groupBackground=DRACULA.normalDark;this.background1="#555";this.noteTextColor=DRACULA.normalDark;this.noteBackground=NOTE_BACKGROUND;}};var ThemeLarkLight=class{constructor(){this.schemeOppsiteTheme="larkDark";this.primaryColor=BLUE_LARK.brightBlue;this.secondaryColor=BLUE_LARK.cyan;this.teritaryColor=BLUE_LARK.cyan;this.primaryLineColor=BLUE_LARK.green;this.secondaryLineColor=BLUE_LARK.white;this.textColor=BLUE_LARK.normalDark;this.primaryTextColor=BLUE_LARK.normalDark;this.secondaryTextColor=BLUE_LARK.normalDark;this.teritaryTextColor=BLUE_LARK.normalDark;this.primaryBorderColor=BLUE_LARK.blue;this.secondaryBorderColor=BLUE_LARK.normalDark;this.canvasBackground=BLUE_LARK.white;this.groupBackground=BLUE_LARK.white;this.background1=BLUE_LARK.white;this.noteTextColor=BLUE_LARK.normalDark;this.noteBackground=NOTE_BACKGROUND;}};var ThemeLarkDark=class{constructor(){this.isDark=true;this.schemeOppsiteTheme="larkLight";this.primaryColor=BLUE_LARK.blue;this.secondaryColor=BLUE_LARK.blue;this.teritaryColor=BLUE_LARK.darkBlue;this.primaryLineColor=BLUE_LARK.green;this.secondaryLineColor=BLUE_LARK.white;this.textColor=BLUE_LARK.white;this.primaryTextColor=BLUE_LARK.white;this.secondaryTextColor=BLUE_LARK.white;this.teritaryTextColor=BLUE_LARK.white;this.primaryBorderColor=BLUE_LARK.blue;this.secondaryBorderColor=BLUE_LARK.normalDark;this.canvasBackground=BLUE_LARK.normalDark;this.groupBackground=BLUE_LARK.normalDark;this.background1=BLUE_LARK.normalDark;this.noteTextColor=BLUE_LARK.normalDark;this.noteBackground=NOTE_BACKGROUND;}};var ThemeRegistry=class{constructor(){this.themes={default:new ThemeDefault(),dark:new ThemeDark(),larkLight:new ThemeLarkLight(),larkDark:new ThemeLarkDark()};this.palettes={AYU_LIGHT,DRACULA};}
registerTheme(name,variables){if(this.themes[name]){console.warn(`[pintora]override theme ${name}`);}
this.themes[name]=variables;}};var themeRegistry=new ThemeRegistry();var DEFAULT_FONT_FAMILY="Source Code Pro, sans-serif";var config={core:{defaultRenderer:"svg",defaultFontFamily:DEFAULT_FONT_FAMILY,useMaxWidth:false},themeConfig:{theme:"default",darkTheme:"dark",themeVariables:themeRegistry.themes.default}};var overwriteArrayMerge=(destinationArray,sourceArray)=>sourceArray;var configApi={getConfig(){return config;},setConfig(c){const newConfig=configApi.gnernateNewConfig(c);config=newConfig;},cloneConfig(){return(0,import_clone_deep.default)(config);},replaceConfig(c){config=c;},gnernateNewConfig(c){var _a;const newConfig=(0,import_deepmerge.default)(config,c,{arrayMerge:overwriteArrayMerge});if((_a=c.themeConfig)===null||_a===void 0?void 0:_a.theme){const themeName=c.themeConfig.theme;const themeVars=themeRegistry.themes[themeName];const configThemeVars=c.themeConfig.themeVariables;if(themeVars){newConfig.themeConfig=newConfig.themeConfig||{};newConfig.themeConfig.themeVariables={...themeVars};}
if(configThemeVars&&newConfig.themeConfig.themeVariables){Object.assign(newConfig.themeConfig.themeVariables,configThemeVars);}}
return newConfig;}};var config_default=configApi;function safeAssign(base,...attrList){return Object.assign(base||{},...attrList);}
function pick(base,keys3){const out={};keys3.forEach((k)=>out[k]=base[k]);return out;}
function compact(list){return list.filter((v)=>Boolean(v));}
function unique(list){const map4=new Map();const result=[];list.forEach((item)=>{if(map4.has(item))
return;map4.set(item,item);result.push(item);});return result;}
var CHARACTERS="0123456789abcdef";function makeid(length3){let result="";const CHARACTERSLength=CHARACTERS.length;for(let i2=0;i2<length3;i2++){result+=CHARACTERS.charAt(Math.floor(Math.random()*CHARACTERSLength));}
return result;}
function makeIdCounter(offset=0){let v=offset;return{reset(){v=offset;},next(){v++;return v.toString();}};}
function last(list){if(!(list&&list.length))
return;return list[list.length-1];}
function min(arr2,fn){return Math.min(...arr2.map(fn));}
function max(arr2,fn){return Math.max(...arr2.map(fn));}
function removeValues(obj,values4=[void 0,null]){for(const[k,v]of Object.entries(obj)){if(values4.includes(v))
delete obj[k];}
return obj;}
var EPSILON=1e-6;var ARRAY_TYPE=typeof Float32Array!=="undefined"?Float32Array:Array;var RANDOM=Math.random;var degree=Math.PI/180;if(!Math.hypot)
Math.hypot=function(){var y2=0,i2=arguments.length;while(i2--){y2+=arguments[i2]*arguments[i2];}
return Math.sqrt(y2);};var mat3_exports={};__export(mat3_exports,{add:()=>add,adjoint:()=>adjoint,clone:()=>clone,copy:()=>copy,create:()=>create,determinant:()=>determinant,equals:()=>equals,exactEquals:()=>exactEquals,frob:()=>frob,fromMat2d:()=>fromMat2d,fromMat4:()=>fromMat4,fromQuat:()=>fromQuat,fromRotation:()=>fromRotation,fromScaling:()=>fromScaling,fromTranslation:()=>fromTranslation,fromValues:()=>fromValues,identity:()=>identity,invert:()=>invert,mul:()=>mul,multiply:()=>multiply,multiplyScalar:()=>multiplyScalar,multiplyScalarAndAdd:()=>multiplyScalarAndAdd,normalFromMat4:()=>normalFromMat4,projection:()=>projection,rotate:()=>rotate,scale:()=>scale,set:()=>set,str:()=>str,sub:()=>sub,subtract:()=>subtract,translate:()=>translate,transpose:()=>transpose});function create(){var out=new ARRAY_TYPE(9);if(ARRAY_TYPE!=Float32Array){out[1]=0;out[2]=0;out[3]=0;out[5]=0;out[6]=0;out[7]=0;}
out[0]=1;out[4]=1;out[8]=1;return out;}
function fromMat4(out,a){out[0]=a[0];out[1]=a[1];out[2]=a[2];out[3]=a[4];out[4]=a[5];out[5]=a[6];out[6]=a[8];out[7]=a[9];out[8]=a[10];return out;}
function clone(a){var out=new ARRAY_TYPE(9);out[0]=a[0];out[1]=a[1];out[2]=a[2];out[3]=a[3];out[4]=a[4];out[5]=a[5];out[6]=a[6];out[7]=a[7];out[8]=a[8];return out;}
function copy(out,a){out[0]=a[0];out[1]=a[1];out[2]=a[2];out[3]=a[3];out[4]=a[4];out[5]=a[5];out[6]=a[6];out[7]=a[7];out[8]=a[8];return out;}
function fromValues(m00,m01,m02,m10,m11,m12,m20,m21,m22){var out=new ARRAY_TYPE(9);out[0]=m00;out[1]=m01;out[2]=m02;out[3]=m10;out[4]=m11;out[5]=m12;out[6]=m20;out[7]=m21;out[8]=m22;return out;}
function set(out,m00,m01,m02,m10,m11,m12,m20,m21,m22){out[0]=m00;out[1]=m01;out[2]=m02;out[3]=m10;out[4]=m11;out[5]=m12;out[6]=m20;out[7]=m21;out[8]=m22;return out;}
function identity(out){out[0]=1;out[1]=0;out[2]=0;out[3]=0;out[4]=1;out[5]=0;out[6]=0;out[7]=0;out[8]=1;return out;}
function transpose(out,a){if(out===a){var a01=a[1],a02=a[2],a12=a[5];out[1]=a[3];out[2]=a[6];out[3]=a01;out[5]=a[7];out[6]=a02;out[7]=a12;}else{out[0]=a[0];out[1]=a[3];out[2]=a[6];out[3]=a[1];out[4]=a[4];out[5]=a[7];out[6]=a[2];out[7]=a[5];out[8]=a[8];}
return out;}
function invert(out,a){var a00=a[0],a01=a[1],a02=a[2];var a10=a[3],a11=a[4],a12=a[5];var a20=a[6],a21=a[7],a22=a[8];var b01=a22*a11-a12*a21;var b11=-a22*a10+a12*a20;var b21=a21*a10-a11*a20;var det=a00*b01+a01*b11+a02*b21;if(!det){return null;}
det=1/det;out[0]=b01*det;out[1]=(-a22*a01+a02*a21)*det;out[2]=(a12*a01-a02*a11)*det;out[3]=b11*det;out[4]=(a22*a00-a02*a20)*det;out[5]=(-a12*a00+a02*a10)*det;out[6]=b21*det;out[7]=(-a21*a00+a01*a20)*det;out[8]=(a11*a00-a01*a10)*det;return out;}
function adjoint(out,a){var a00=a[0],a01=a[1],a02=a[2];var a10=a[3],a11=a[4],a12=a[5];var a20=a[6],a21=a[7],a22=a[8];out[0]=a11*a22-a12*a21;out[1]=a02*a21-a01*a22;out[2]=a01*a12-a02*a11;out[3]=a12*a20-a10*a22;out[4]=a00*a22-a02*a20;out[5]=a02*a10-a00*a12;out[6]=a10*a21-a11*a20;out[7]=a01*a20-a00*a21;out[8]=a00*a11-a01*a10;return out;}
function determinant(a){var a00=a[0],a01=a[1],a02=a[2];var a10=a[3],a11=a[4],a12=a[5];var a20=a[6],a21=a[7],a22=a[8];return a00*(a22*a11-a12*a21)+a01*(-a22*a10+a12*a20)+a02*(a21*a10-a11*a20);}
function multiply(out,a,b10){var a00=a[0],a01=a[1],a02=a[2];var a10=a[3],a11=a[4],a12=a[5];var a20=a[6],a21=a[7],a22=a[8];var b00=b10[0],b01=b10[1],b02=b10[2];var b102=b10[3],b11=b10[4],b12=b10[5];var b20=b10[6],b21=b10[7],b22=b10[8];out[0]=b00*a00+b01*a10+b02*a20;out[1]=b00*a01+b01*a11+b02*a21;out[2]=b00*a02+b01*a12+b02*a22;out[3]=b102*a00+b11*a10+b12*a20;out[4]=b102*a01+b11*a11+b12*a21;out[5]=b102*a02+b11*a12+b12*a22;out[6]=b20*a00+b21*a10+b22*a20;out[7]=b20*a01+b21*a11+b22*a21;out[8]=b20*a02+b21*a12+b22*a22;return out;}
function translate(out,a,v){var a00=a[0],a01=a[1],a02=a[2],a10=a[3],a11=a[4],a12=a[5],a20=a[6],a21=a[7],a22=a[8],x2=v[0],y2=v[1];out[0]=a00;out[1]=a01;out[2]=a02;out[3]=a10;out[4]=a11;out[5]=a12;out[6]=x2*a00+y2*a10+a20;out[7]=x2*a01+y2*a11+a21;out[8]=x2*a02+y2*a12+a22;return out;}
function rotate(out,a,rad){var a00=a[0],a01=a[1],a02=a[2],a10=a[3],a11=a[4],a12=a[5],a20=a[6],a21=a[7],a22=a[8],s=Math.sin(rad),c=Math.cos(rad);out[0]=c*a00+s*a10;out[1]=c*a01+s*a11;out[2]=c*a02+s*a12;out[3]=c*a10-s*a00;out[4]=c*a11-s*a01;out[5]=c*a12-s*a02;out[6]=a20;out[7]=a21;out[8]=a22;return out;}
function scale(out,a,v){var x2=v[0],y2=v[1];out[0]=x2*a[0];out[1]=x2*a[1];out[2]=x2*a[2];out[3]=y2*a[3];out[4]=y2*a[4];out[5]=y2*a[5];out[6]=a[6];out[7]=a[7];out[8]=a[8];return out;}
function fromTranslation(out,v){out[0]=1;out[1]=0;out[2]=0;out[3]=0;out[4]=1;out[5]=0;out[6]=v[0];out[7]=v[1];out[8]=1;return out;}
function fromRotation(out,rad){var s=Math.sin(rad),c=Math.cos(rad);out[0]=c;out[1]=s;out[2]=0;out[3]=-s;out[4]=c;out[5]=0;out[6]=0;out[7]=0;out[8]=1;return out;}
function fromScaling(out,v){out[0]=v[0];out[1]=0;out[2]=0;out[3]=0;out[4]=v[1];out[5]=0;out[6]=0;out[7]=0;out[8]=1;return out;}
function fromMat2d(out,a){out[0]=a[0];out[1]=a[1];out[2]=0;out[3]=a[2];out[4]=a[3];out[5]=0;out[6]=a[4];out[7]=a[5];out[8]=1;return out;}
function fromQuat(out,q){var x2=q[0],y2=q[1],z=q[2],w=q[3];var x22=x2+x2;var y22=y2+y2;var z2=z+z;var xx=x2*x22;var yx=y2*x22;var yy6=y2*y22;var zx=z*x22;var zy=z*y22;var zz=z*z2;var wx=w*x22;var wy=w*y22;var wz=w*z2;out[0]=1-yy6-zz;out[3]=yx-wz;out[6]=zx+wy;out[1]=yx+wz;out[4]=1-xx-zz;out[7]=zy-wx;out[2]=zx-wy;out[5]=zy+wx;out[8]=1-xx-yy6;return out;}
function normalFromMat4(out,a){var a00=a[0],a01=a[1],a02=a[2],a03=a[3];var a10=a[4],a11=a[5],a12=a[6],a13=a[7];var a20=a[8],a21=a[9],a22=a[10],a23=a[11];var a30=a[12],a31=a[13],a32=a[14],a33=a[15];var b00=a00*a11-a01*a10;var b01=a00*a12-a02*a10;var b02=a00*a13-a03*a10;var b03=a01*a12-a02*a11;var b04=a01*a13-a03*a11;var b05=a02*a13-a03*a12;var b06=a20*a31-a21*a30;var b07=a20*a32-a22*a30;var b08=a20*a33-a23*a30;var b09=a21*a32-a22*a31;var b10=a21*a33-a23*a31;var b11=a22*a33-a23*a32;var det=b00*b11-b01*b10+b02*b09+b03*b08-b04*b07+b05*b06;if(!det){return null;}
det=1/det;out[0]=(a11*b11-a12*b10+a13*b09)*det;out[1]=(a12*b08-a10*b11-a13*b07)*det;out[2]=(a10*b10-a11*b08+a13*b06)*det;out[3]=(a02*b10-a01*b11-a03*b09)*det;out[4]=(a00*b11-a02*b08+a03*b07)*det;out[5]=(a01*b08-a00*b10-a03*b06)*det;out[6]=(a31*b05-a32*b04+a33*b03)*det;out[7]=(a32*b02-a30*b05-a33*b01)*det;out[8]=(a30*b04-a31*b02+a33*b00)*det;return out;}
function projection(out,width2,height){out[0]=2/width2;out[1]=0;out[2]=0;out[3]=0;out[4]=-2/height;out[5]=0;out[6]=-1;out[7]=1;out[8]=1;return out;}
function str(a){return"mat3("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+", "+a[6]+", "+a[7]+", "+a[8]+")";}
function frob(a){return Math.hypot(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8]);}
function add(out,a,b10){out[0]=a[0]+b10[0];out[1]=a[1]+b10[1];out[2]=a[2]+b10[2];out[3]=a[3]+b10[3];out[4]=a[4]+b10[4];out[5]=a[5]+b10[5];out[6]=a[6]+b10[6];out[7]=a[7]+b10[7];out[8]=a[8]+b10[8];return out;}
function subtract(out,a,b10){out[0]=a[0]-b10[0];out[1]=a[1]-b10[1];out[2]=a[2]-b10[2];out[3]=a[3]-b10[3];out[4]=a[4]-b10[4];out[5]=a[5]-b10[5];out[6]=a[6]-b10[6];out[7]=a[7]-b10[7];out[8]=a[8]-b10[8];return out;}
function multiplyScalar(out,a,b10){out[0]=a[0]*b10;out[1]=a[1]*b10;out[2]=a[2]*b10;out[3]=a[3]*b10;out[4]=a[4]*b10;out[5]=a[5]*b10;out[6]=a[6]*b10;out[7]=a[7]*b10;out[8]=a[8]*b10;return out;}
function multiplyScalarAndAdd(out,a,b10,scale3){out[0]=a[0]+b10[0]*scale3;out[1]=a[1]+b10[1]*scale3;out[2]=a[2]+b10[2]*scale3;out[3]=a[3]+b10[3]*scale3;out[4]=a[4]+b10[4]*scale3;out[5]=a[5]+b10[5]*scale3;out[6]=a[6]+b10[6]*scale3;out[7]=a[7]+b10[7]*scale3;out[8]=a[8]+b10[8]*scale3;return out;}
function exactEquals(a,b10){return a[0]===b10[0]&&a[1]===b10[1]&&a[2]===b10[2]&&a[3]===b10[3]&&a[4]===b10[4]&&a[5]===b10[5]&&a[6]===b10[6]&&a[7]===b10[7]&&a[8]===b10[8];}
function equals(a,b10){var a0=a[0],a1=a[1],a2=a[2],a3=a[3],a4=a[4],a5=a[5],a6=a[6],a7=a[7],a8=a[8];var b02=b10[0],b12=b10[1],b22=b10[2],b32=b10[3],b42=b10[4],b52=b10[5],b62=b10[6],b72=b10[7],b82=b10[8];return Math.abs(a0-b02)<=EPSILON*Math.max(1,Math.abs(a0),Math.abs(b02))&&Math.abs(a1-b12)<=EPSILON*Math.max(1,Math.abs(a1),Math.abs(b12))&&Math.abs(a2-b22)<=EPSILON*Math.max(1,Math.abs(a2),Math.abs(b22))&&Math.abs(a3-b32)<=EPSILON*Math.max(1,Math.abs(a3),Math.abs(b32))&&Math.abs(a4-b42)<=EPSILON*Math.max(1,Math.abs(a4),Math.abs(b42))&&Math.abs(a5-b52)<=EPSILON*Math.max(1,Math.abs(a5),Math.abs(b52))&&Math.abs(a6-b62)<=EPSILON*Math.max(1,Math.abs(a6),Math.abs(b62))&&Math.abs(a7-b72)<=EPSILON*Math.max(1,Math.abs(a7),Math.abs(b72))&&Math.abs(a8-b82)<=EPSILON*Math.max(1,Math.abs(a8),Math.abs(b82));}
var mul=multiply;var sub=subtract;var vec2_exports={};__export(vec2_exports,{add:()=>add2,angle:()=>angle,ceil:()=>ceil,clone:()=>clone2,copy:()=>copy2,create:()=>create2,cross:()=>cross,dist:()=>dist,distance:()=>distance,div:()=>div,divide:()=>divide,dot:()=>dot,equals:()=>equals2,exactEquals:()=>exactEquals2,floor:()=>floor,forEach:()=>forEach,fromValues:()=>fromValues2,inverse:()=>inverse,len:()=>len,length:()=>length,lerp:()=>lerp,max:()=>max2,min:()=>min2,mul:()=>mul2,multiply:()=>multiply2,negate:()=>negate,normalize:()=>normalize,random:()=>random,rotate:()=>rotate2,round:()=>round,scale:()=>scale2,scaleAndAdd:()=>scaleAndAdd,set:()=>set2,sqrDist:()=>sqrDist,sqrLen:()=>sqrLen,squaredDistance:()=>squaredDistance,squaredLength:()=>squaredLength,str:()=>str2,sub:()=>sub2,subtract:()=>subtract2,transformMat2:()=>transformMat2,transformMat2d:()=>transformMat2d,transformMat3:()=>transformMat3,transformMat4:()=>transformMat4,zero:()=>zero});function create2(){var out=new ARRAY_TYPE(2);if(ARRAY_TYPE!=Float32Array){out[0]=0;out[1]=0;}
return out;}
function clone2(a){var out=new ARRAY_TYPE(2);out[0]=a[0];out[1]=a[1];return out;}
function fromValues2(x2,y2){var out=new ARRAY_TYPE(2);out[0]=x2;out[1]=y2;return out;}
function copy2(out,a){out[0]=a[0];out[1]=a[1];return out;}
function set2(out,x2,y2){out[0]=x2;out[1]=y2;return out;}
function add2(out,a,b10){out[0]=a[0]+b10[0];out[1]=a[1]+b10[1];return out;}
function subtract2(out,a,b10){out[0]=a[0]-b10[0];out[1]=a[1]-b10[1];return out;}
function multiply2(out,a,b10){out[0]=a[0]*b10[0];out[1]=a[1]*b10[1];return out;}
function divide(out,a,b10){out[0]=a[0]/b10[0];out[1]=a[1]/b10[1];return out;}
function ceil(out,a){out[0]=Math.ceil(a[0]);out[1]=Math.ceil(a[1]);return out;}
function floor(out,a){out[0]=Math.floor(a[0]);out[1]=Math.floor(a[1]);return out;}
function min2(out,a,b10){out[0]=Math.min(a[0],b10[0]);out[1]=Math.min(a[1],b10[1]);return out;}
function max2(out,a,b10){out[0]=Math.max(a[0],b10[0]);out[1]=Math.max(a[1],b10[1]);return out;}
function round(out,a){out[0]=Math.round(a[0]);out[1]=Math.round(a[1]);return out;}
function scale2(out,a,b10){out[0]=a[0]*b10;out[1]=a[1]*b10;return out;}
function scaleAndAdd(out,a,b10,scale3){out[0]=a[0]+b10[0]*scale3;out[1]=a[1]+b10[1]*scale3;return out;}
function distance(a,b10){var x2=b10[0]-a[0],y2=b10[1]-a[1];return Math.hypot(x2,y2);}
function squaredDistance(a,b10){var x2=b10[0]-a[0],y2=b10[1]-a[1];return x2*x2+y2*y2;}
function length(a){var x2=a[0],y2=a[1];return Math.hypot(x2,y2);}
function squaredLength(a){var x2=a[0],y2=a[1];return x2*x2+y2*y2;}
function negate(out,a){out[0]=-a[0];out[1]=-a[1];return out;}
function inverse(out,a){out[0]=1/a[0];out[1]=1/a[1];return out;}
function normalize(out,a){var x2=a[0],y2=a[1];var len2=x2*x2+y2*y2;if(len2>0){len2=1/Math.sqrt(len2);}
out[0]=a[0]*len2;out[1]=a[1]*len2;return out;}
function dot(a,b10){return a[0]*b10[0]+a[1]*b10[1];}
function cross(out,a,b10){var z=a[0]*b10[1]-a[1]*b10[0];out[0]=out[1]=0;out[2]=z;return out;}
function lerp(out,a,b10,t){var ax=a[0],ay=a[1];out[0]=ax+t*(b10[0]-ax);out[1]=ay+t*(b10[1]-ay);return out;}
function random(out,scale3){scale3=scale3||1;var r=RANDOM()*2*Math.PI;out[0]=Math.cos(r)*scale3;out[1]=Math.sin(r)*scale3;return out;}
function transformMat2(out,a,m){var x2=a[0],y2=a[1];out[0]=m[0]*x2+m[2]*y2;out[1]=m[1]*x2+m[3]*y2;return out;}
function transformMat2d(out,a,m){var x2=a[0],y2=a[1];out[0]=m[0]*x2+m[2]*y2+m[4];out[1]=m[1]*x2+m[3]*y2+m[5];return out;}
function transformMat3(out,a,m){var x2=a[0],y2=a[1];out[0]=m[0]*x2+m[3]*y2+m[6];out[1]=m[1]*x2+m[4]*y2+m[7];return out;}
function transformMat4(out,a,m){var x2=a[0];var y2=a[1];out[0]=m[0]*x2+m[4]*y2+m[12];out[1]=m[1]*x2+m[5]*y2+m[13];return out;}
function rotate2(out,a,b10,rad){var p0=a[0]-b10[0],p1=a[1]-b10[1],sinC=Math.sin(rad),cosC=Math.cos(rad);out[0]=p0*cosC-p1*sinC+b10[0];out[1]=p0*sinC+p1*cosC+b10[1];return out;}
function angle(a,b10){var x1=a[0],y1=a[1],x2=b10[0],y2=b10[1],mag=Math.sqrt(x1*x1+y1*y1)*Math.sqrt(x2*x2+y2*y2),cosine=mag&&(x1*x2+y1*y2)/mag;return Math.acos(Math.min(Math.max(cosine,-1),1));}
function zero(out){out[0]=0;out[1]=0;return out;}
function str2(a){return"vec2("+a[0]+", "+a[1]+")";}
function exactEquals2(a,b10){return a[0]===b10[0]&&a[1]===b10[1];}
function equals2(a,b10){var a0=a[0],a1=a[1];var b02=b10[0],b12=b10[1];return Math.abs(a0-b02)<=EPSILON*Math.max(1,Math.abs(a0),Math.abs(b02))&&Math.abs(a1-b12)<=EPSILON*Math.max(1,Math.abs(a1),Math.abs(b12));}
var len=length;var sub2=subtract2;var mul2=multiply2;var div=divide;var dist=distance;var sqrDist=squaredDistance;var sqrLen=squaredLength;var forEach=function(){var vec=create2();return function(a,stride,offset,count,fn,arg){var i2,l;if(!stride){stride=2;}
if(!offset){offset=0;}
if(count){l=Math.min(count*stride+offset,a.length);}else{l=a.length;}
for(i2=offset;i2<l;i2+=stride){vec[0]=a[i2];vec[1]=a[i2+1];fn(vec,vec,arg);a[i2]=vec[0];a[i2+1]=vec[1];}
return a;};}();var ext_exports={};__export(ext_exports,{angleTo:()=>angleTo,direction:()=>direction,leftRotate:()=>leftRotate,leftScale:()=>leftScale,leftTranslate:()=>leftTranslate,transform:()=>transform,vertical:()=>vertical});function leftTranslate(out,a,v){var transMat=[0,0,0,0,0,0,0,0,0];mat3_exports.fromTranslation(transMat,v);return mat3_exports.multiply(out,transMat,a);}
function leftRotate(out,a,rad){var rotateMat=[0,0,0,0,0,0,0,0,0];mat3_exports.fromRotation(rotateMat,rad);return mat3_exports.multiply(out,rotateMat,a);}
function leftScale(out,a,v){var scaleMat=[0,0,0,0,0,0,0,0,0];mat3_exports.fromScaling(scaleMat,v);return mat3_exports.multiply(out,scaleMat,a);}
function leftMultiply(out,a,a1){return mat3_exports.multiply(out,a1,a);}
function transform(m,actions){var matrix=m?[].concat(m):[1,0,0,0,1,0,0,0,1];for(var i2=0,len2=actions.length;i2<len2;i2++){var action=actions[i2];switch(action[0]){case"t":leftTranslate(matrix,matrix,[action[1],action[2]]);break;case"s":leftScale(matrix,matrix,[action[1],action[2]]);break;case"r":leftRotate(matrix,matrix,action[1]);break;case"m":leftMultiply(matrix,matrix,action[1]);break;default:break;}}
return matrix;}
function direction(v1,v2){return v1[0]*v2[1]-v2[0]*v1[1];}
function angleTo(v1,v2,direct){var ang=vec2_exports.angle(v1,v2);var angleLargeThanPI=direction(v1,v2)>=0;if(direct){if(angleLargeThanPI){return Math.PI*2-ang;}
return ang;}
if(angleLargeThanPI){return ang;}
return Math.PI*2-ang;}
function vertical(out,v,flag){if(flag){out[0]=v[1];out[1]=-1*v[0];}else{out[0]=-1*v[1];out[1]=v[0];}
return out;}
function createTranslation(x2,y2=0){return mat3_exports.fromTranslation(mat3_exports.create(),[x2,y2]);}
var transform2=ext_exports.transform;var translate2=ext_exports.leftTranslate;var leftRotate2=ext_exports.leftRotate;var leftScale2=ext_exports.leftScale;function createRotateAtPoint(x2,y2,rotate4){const newMatrix=transform2(void 0,[["t",-x2,-y2],["r",rotate4],["t",x2,y2]]);return newMatrix;}
function getDistance(a,b10){return Math.sqrt(Math.pow(b10.x-a.x,2)+Math.pow(b10.y-a.y,2));}
function getDistanceSegs(points){return points.reduce((out,p,i2,arr2)=>{if(arr2[i2+1]){const d=getDistance(p,arr2[i2+1]);out.push(d);}
return out;},[]);}
function interpolateAt(p1,p2,proportion){const x2=p1.x+(p2.x-p1.x)*proportion;const y2=p1.y+(p2.y-p1.y)*proportion;return{x:x2,y:y2};}
function getPointAt(points,s,isProportion=false){if(s<=0)
return;const segs=getDistanceSegs(points);const totalLength=segs.reduce((out,l)=>{return out+l;},0);const len2=isProportion?totalLength*s:s;let lengthLeft=len2;for(let i2=0;i2<segs.length;i2++){const segLength=segs[i2];if(segLength>=lengthLeft){const p1=points[i2];const p2=points[i2+1];return interpolateAt(p1,p2,lengthLeft/segLength);}else{lengthLeft-=segLength;}}}
function clamp(num,min4,max4){return Math.min(Math.max(num,min4),max4);}
var PositionH;(function(PositionH2){PositionH2[PositionH2["LEFT"]=32]="LEFT";PositionH2[PositionH2["CENTER"]=16]="CENTER";PositionH2[PositionH2["RIGHT"]=8]="RIGHT";})(PositionH||(PositionH={}));var PositionV;(function(PositionV2){PositionV2[PositionV2["TOP"]=4]="TOP";PositionV2[PositionV2["CENTER"]=2]="CENTER";PositionV2[PositionV2["BOTTOM"]=1]="BOTTOM";})(PositionV||(PositionV={}));function getPositionOfRect(rect,position2){let x2=rect.x;let y2=rect.y;if(position2&PositionH.CENTER){x2+=rect.width/2;}else if(position2&PositionH.RIGHT){x2+=rect.width;}
if(position2&PositionV.CENTER){y2+=rect.height/2;}else if(position2&PositionV.BOTTOM){y2+=rect.height;}
return{x:x2,y:y2};}
function movePointPosition(p,offsets){return{x:p.x+offsets.x,y:p.y+offsets.y};}
var CanvasTextMetricCalculator=class{constructor(){this.name="CanvasTextMetricCalculator";this.ctx=void 0;this.getCanvasContext=()=>{if(!this.ctx){const canvas=document.createElement("canvas");this.ctx=canvas.getContext("2d");}
return this.ctx;};}
calculateTextDimensions(text,font){const lines=text.split("\n");let width2=0;let height=0;const fontSize2=(font===null||font===void 0?void 0:font.fontSize)||14;lines.forEach((line,i2)=>{const lineMetric=this.getLineMetric(line,font);const w=lineMetric.width;width2=Math.max(w,width2);let lineHeight=fontSize2;if(i2===0){if("actualBoundingBoxDescent"in lineMetric){lineHeight=lineMetric.actualBoundingBoxAscent+lineMetric.actualBoundingBoxDescent;}}
height+=lineHeight;});return{width:width2,height};}
getLineMetric(text,font){const fontSize2=(font===null||font===void 0?void 0:font.fontSize)||14;const fontFamily2=(font===null||font===void 0?void 0:font.fontFamily)||"sans-serif";const ctx2=this.getCanvasContext();ctx2.font=`${fontSize2}px ${fontFamily2}`;return ctx2.measureText(text);}};var canvasTextCalculator=new CanvasTextMetricCalculator();var TextMetricBridge=class{constructor(){this.calculator=canvasTextCalculator;}
setImpl(calculator){this.calculator=calculator;}
calculateTextDimensions(text,font){return this.calculator.calculateTextDimensions(text,font);}};var textMetrics=new TextMetricBridge();function calculateTextDimensions(text,font){return textMetrics.calculateTextDimensions(text,font);}
function encodeForUrl(code){const encoded=encodeURIComponent(btoa(escape(code)));return encoded;}
function decodeCodeInUrl(input){return unescape(atob(decodeURIComponent(input)));}
function makeMark(type,attrs,other){return{type,...other||{},attrs};}
function cloneMark(mark){const newMark={...mark,attrs:{...mark.attrs}};if("children"in mark){newMark.children=mark.children.map((child)=>cloneMark(child));}
return newMark;}
var import_tinycolor2=__toESM(require_tinycolor());var HEX_PATTERN=/^#(?:[0-9a-fA-F]{3}){1,2}$/;function parseColor(input){let isValid=false;let color2=input;if(HEX_PATTERN.test(input)){color2=input;isValid=true;}else{color2=input.replace("#","");}
return{color:color2,isValid};}
function makeArtist(opts){const artist4=opts;return artist4;}
var SymbolRegistry=class{constructor(){this.symbols={};}
register(name,sym){if(this.symbols[name]){logger.warn(`[pintora]duplicate symbol:${name}`);}
this.symbols[name]=sym;}
get(name){return this.symbols[name];}
getSymbols(){return this.symbols;}
create(name,opts){const{attrs,contentArea}=opts;const def=this.symbols[name];if(!def)
return null;try{let sym=null;if(def.type==="factory"){const _position=contentArea||{x:0,y:0,width:100,height:100};const mode=opts.mode||"icon";sym=def.factory(_position,{mode});}else if(def.type==="prototype"){sym={...def.symbol,mark:cloneMark(def.symbol.mark)};}
if(sym&&def.styleMark){def.styleMark(sym.mark,def,attrs);}
return sym;}catch(error){console.error("[symbolRegistry] error in create",error);return null;}}};var symbolRegistry=new SymbolRegistry();var config_engine_exports={};__export(config_engine_exports,{interpreteConfigs:()=>interpreteConfigs});var sizeEvaluator=({value})=>{const parsed=parseInt(value);if(isNaN(parsed))
return{valid:false};return{value:parsed,valid:true};};var configValueEvaluators={color({value}){const parsed=parseColor(value);return{value:parsed.color,valid:true};},size:sizeEvaluator,fontSize:sizeEvaluator,string({value}){return{value,valid:true};},boolean({value}){return{value:value==="true",valid:true};},layoutDirection({value}){return{value,valid:true};}};function interpreteConfigs(ruleMap,params){const out={};params.forEach((param)=>{const meta=ruleMap[param.key];if(!meta)
return;const valueTypes=Array.isArray(meta.valueType)?meta.valueType:[meta.valueType];for(const valueType of valueTypes){const evaluator=configValueEvaluators[valueType];if(!evaluator)
continue;const result=evaluator(param);if(result.valid){out[param.key]=result.value;return;}}});return out;}
function parseAndDraw(text,opts){const{onError,config:config2}=opts;const diagram=diagramRegistry.detectDiagram(text);if(!diagram){const errMessage=`[pintora]no diagram detected with input:${text.slice(0,30)}`;logger.warn(errMessage);onError&&onError(new Error(errMessage));return;}
diagram.clear();const diagramIR=diagram.parser.parse(text);let configForArtist=void 0;if(config2&&diagram.configKey&&config2[diagram.configKey]){configForArtist=config2[diagram.configKey];}
const graphicIR=diagram.artist.draw(diagramIR,configForArtist,opts);return{diagramIR,graphicIR};}
var util={encodeForUrl,decodeCodeInUrl,makeMark,calculateTextDimensions,parseColor,tinycolor:import_tinycolor2.default};var BaseDb=class{constructor(){this.configParams=[];this.overrideConfig={};this.title="";}
addOverrideConfig(action){if("error"in action){console.error(action.error);}else{this.overrideConfig=action.value;}}
getBaseDiagramIR(){return{configParams:this.configParams,overrideConfig:this.overrideConfig,title:this.title};}
clear(){this.configParams=[];this.overrideConfig={};this.title="";}};function ownKeys(object,enumerableOnly){var keys3=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys3.push.apply(keys3,symbols);}
return keys3;}
function _objectSpread(target){for(var i2=1;i2<arguments.length;i2++){var source=null!=arguments[i2]?arguments[i2]:{};i2%2?ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}
return target;}
function _defineProperty(obj,key,value){key=_toPropertyKey(key);if(key in obj){Object.defineProperty(obj,key,{value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}
return obj;}
function _toPropertyKey(arg){var key=_toPrimitive(arg,"string");return typeof key==="symbol"?key:String(key);}
function _toPrimitive(input,hint){if(typeof input!=="object"||input===null)
return input;var prim2=input[Symbol.toPrimitive];if(prim2!==void 0){var res=prim2.call(input,hint||"default");if(typeof res!=="object")
return res;throw new TypeError("@@toPrimitive must return a primitive value.");}
return(hint==="string"?String:Number)(input);}
var dedent_default=createDedent({});function createDedent(options){dedent.withOptions=(newOptions)=>createDedent(_objectSpread(_objectSpread({},options),newOptions));return dedent;function dedent(strings,...values4){const raw=typeof strings==="string"?[strings]:strings.raw;const{escapeSpecialCharacters=Array.isArray(strings)}=options;let result="";for(let i2=0;i2<raw.length;i2++){let next=raw[i2];if(escapeSpecialCharacters){next=next.replace(/\\\n[ \t]*/g,"").replace(/\\`/g,"`").replace(/\\\$/g,"$").replace(/\\{/g,"{");}
result+=next;if(i2<values4.length){result+=values4[i2];}}
const lines=result.split("\n");let mindent=null;for(const l of lines){const m=l.match(/^(\s+)\S+/);if(m){const indent=m[1].length;if(!mindent){mindent=indent;}else{mindent=Math.min(mindent,indent);}}}
if(mindent!==null){const m=mindent;result=lines.map((l)=>l[0]===" "||l[0]==="	"?l.slice(m):l).join("\n");}
return result.trim().replace(/\\n/g,"\n");}}
function toFixed(num,digits=2){return parseFloat(num.toFixed(digits));}
function getTextDimensionsInPresicion(text,fontConfig,precision=2){const{width:width2,height}=calculateTextDimensions(text,fontConfig);return{width:toFixed(width2,precision),height:toFixed(height,precision)};}
var LINETYPE;(function(LINETYPE2){LINETYPE2[LINETYPE2["SOLID"]=0]="SOLID";LINETYPE2[LINETYPE2["DOTTED"]=1]="DOTTED";LINETYPE2[LINETYPE2["NOTE"]=2]="NOTE";LINETYPE2[LINETYPE2["SOLID_CROSS"]=3]="SOLID_CROSS";LINETYPE2[LINETYPE2["DOTTED_CROSS"]=4]="DOTTED_CROSS";LINETYPE2[LINETYPE2["SOLID_OPEN"]=5]="SOLID_OPEN";LINETYPE2[LINETYPE2["DOTTED_OPEN"]=6]="DOTTED_OPEN";LINETYPE2[LINETYPE2["LOOP_START"]=10]="LOOP_START";LINETYPE2[LINETYPE2["LOOP_END"]=11]="LOOP_END";LINETYPE2[LINETYPE2["ALT_START"]=12]="ALT_START";LINETYPE2[LINETYPE2["ALT_ELSE"]=13]="ALT_ELSE";LINETYPE2[LINETYPE2["ALT_END"]=14]="ALT_END";LINETYPE2[LINETYPE2["OPT_START"]=15]="OPT_START";LINETYPE2[LINETYPE2["OPT_END"]=16]="OPT_END";LINETYPE2[LINETYPE2["ACTIVE_START"]=17]="ACTIVE_START";LINETYPE2[LINETYPE2["ACTIVE_END"]=18]="ACTIVE_END";LINETYPE2[LINETYPE2["PAR_START"]=19]="PAR_START";LINETYPE2[LINETYPE2["PAR_AND"]=20]="PAR_AND";LINETYPE2[LINETYPE2["PAR_END"]=21]="PAR_END";LINETYPE2[LINETYPE2["RECT_START"]=22]="RECT_START";LINETYPE2[LINETYPE2["RECT_END"]=23]="RECT_END";LINETYPE2[LINETYPE2["SOLID_POINT"]=24]="SOLID_POINT";LINETYPE2[LINETYPE2["DOTTED_POINT"]=25]="DOTTED_POINT";LINETYPE2[LINETYPE2["DIVIDER"]=26]="DIVIDER";})(LINETYPE||(LINETYPE={}));var ARROWTYPE={FILLED:0,OPEN:1};var PLACEMENT;(function(PLACEMENT2){PLACEMENT2[PLACEMENT2["LEFTOF"]=0]="LEFTOF";PLACEMENT2[PLACEMENT2["RIGHTOF"]=1]="RIGHTOF";PLACEMENT2[PLACEMENT2["OVER"]=2]="OVER";})(PLACEMENT||(PLACEMENT={}));var GROUP_TYPE_CONFIGS={loop:{startSignalType:LINETYPE.LOOP_START,endSignalType:LINETYPE.LOOP_END},par:{startSignalType:LINETYPE.PAR_START,endSignalType:LINETYPE.PAR_END},opt:{startSignalType:LINETYPE.OPT_START,endSignalType:LINETYPE.OPT_END},alt:{startSignalType:LINETYPE.ALT_START,endSignalType:LINETYPE.ALT_END},else:{startSignalType:LINETYPE.ALT_ELSE,endSignalType:LINETYPE.ALT_END},and:{startSignalType:LINETYPE.PAR_AND,endSignalType:LINETYPE.PAR_END}};var SequenceDB=class extends BaseDb{constructor(){super(...arguments);this.prevActorId=null;this.messages=[];this.notes=[];this.actors={};this.participantBoxes={};this.title="";this.titleWrapped=false;this.wrapEnabled=false;this.showSequenceNumbers=false;this.actorOrder=new Set();this.idCounter=makeIdCounter();}
addActor(param){const{actor:name,classifier}=param;let{description}=param;const id9=name;const old=this.actors[id9];if(old&&name===old.name&&description==null)
return;this.actorOrder.add(id9);if(description==null||description.text==null){description={text:name,wrap:false};}
this.actors[id9]={name,description:description.text,wrap:description.wrap===void 0&&this.wrapEnabled||!!description.wrap,prevActorId:this.prevActorId,classifier,itemId:`actor-${id9}`};if(this.prevActorId&&this.actors[this.prevActorId]){this.actors[this.prevActorId].nextActorId=id9;}
this.prevActorId=id9;}
addSignal(from,to,message={text:"",wrap:false},messageType){if(typeof from==="string"){from={actor:from};}
if(typeof to==="string"){to={actor:to};}
if(messageType===LINETYPE.ACTIVE_END){const cnt=activationCount(this,from.actor);if(cnt<1){const error=new SError("Trying to inactivate an inactive participant ("+from.actor+")");error.hash={text:"->>-",token:"->>-",line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["'ACTIVE_PARTICIPANT'"]};throw error;}}
const msgIndex=this.messages.length;this.messages.push({from:from.actor,to:to?to.actor:"",text:message.text||"",wrap:message.wrap===void 0&&this.wrapEnabled||!!message.wrap,type:messageType,itemId:`message-${msgIndex}-${messageType}`});return true;}
addSignalWithoutActor(message={text:"",wrap:false},messageType,attrs){const msgIndex=this.messages.length;this.messages.push({from:void 0,to:void 0,text:message.text||"",wrap:message.wrap===void 0&&this.wrapEnabled||!!message.wrap,type:messageType,attrs,itemId:`message-${msgIndex}-${messageType}`});}
addGroupStart(groupType,text,attrs){const groupConfig=GROUP_TYPE_CONFIGS[groupType];if(!groupConfig)
return;if(attrs.background){attrs.background=parseColor(attrs.background).color;}
this.addSignalWithoutActor(text,groupConfig.startSignalType,attrs);}
addGroupEnd(groupType){const groupConfig=GROUP_TYPE_CONFIGS[groupType];if(!groupConfig)
return;this.addSignalWithoutActor(void 0,groupConfig.endSignalType);}
addNote(actor,placement,message){const noteText=dedent_default(message.text);const note={actor,placement,text:noteText,wrap:message.wrap===void 0&&this.wrapEnabled||!!message.wrap};const fromActor=Array.isArray(actor)?actor[0]:actor;const toActor=Array.isArray(actor)?actor[1]:actor;this.notes.push(note);const msgIndex=this.messages.length;this.messages.push({from:fromActor,to:toActor,text:noteText,wrap:message.wrap===void 0&&this.wrapEnabled||!!message.wrap,type:LINETYPE.NOTE,placement,itemId:`message-${msgIndex}-${LINETYPE.NOTE}`});}
setTitle(titleWrap){this.title=titleWrap.text;this.titleWrapped=titleWrap.wrap===void 0&&this.wrapEnabled||!!titleWrap.wrap;}
parseMessage(str3){const _str=str3.trim();const message={text:_str.replace(/\\n/,"\n"),wrap:false};logger.debug("parseMessage:",message);return message;}
addParam(sp){this.configParams.push(sp);}
addBox(param){this.apply(param.children);const participantBox={actors:[],text:param.text,id:this.idCounter.next(),background:param.background};param.children.forEach((childAction)=>{if(childAction.type==="addActor"){participantBox.actors.push(childAction.actor);}});if(participantBox.actors.length){this.participantBoxes[participantBox.id]=participantBox;}}
getActor(id9){return this.actors[id9];}
getActorKeys(){return Object.keys(this.actors);}
clear(){super.clear();this.prevActorId=null;this.messages=[];this.notes=[];this.actors={};this.actorOrder.clear();this.participantBoxes={};this.title="";this.showSequenceNumbers=false;this.idCounter.reset();}
prepareBeforeGetIR(){for(const box of Object.values(this.participantBoxes)){for(const actorId of box.actors){const actor=this.getActor(actorId);if(actor){actor.boxId=box.id;}}}}
getDiagramIR(){this.prepareBeforeGetIR();return{messages:this.messages,notes:this.notes,actors:this.actors,actorOrder:Array.from(this.actorOrder),participantBoxes:this.participantBoxes,title:this.title,showSequenceNumbers:this.showSequenceNumbers,configParams:this.configParams,overrideConfig:this.overrideConfig};}
apply(param){if(!param)
return;if(param instanceof Array){param.forEach((item)=>{this.apply(item);});}else{logger.debug("apply",param);switch(param.type){case"addActor":this.addActor(param);break;case"activeStart":case"activeEnd":this.addSignal(param.actor,void 0,void 0,param.signalType);break;case"addNote":this.addNote(param.actor,param.placement,param.text);break;case"addSignal":this.addSignal(param.from,param.to,param.msg,param.signalType);break;case"groupStart":this.addGroupStart(param.groupType,param.text,{background:param.background});break;case"groupEnd":this.addGroupEnd(param.groupType);break;case"addBox":this.addBox(param);break;case"setTitle":this.setTitle(param.text);break;case"addDivider":this.addSignalWithoutActor({text:param.text,wrap:false},param.signalType);break;case"addParam":this.addParam({key:param.key,value:param.value});break;case"overrideConfig":this.addOverrideConfig(param);break;}}}};var db=new SequenceDB();var SError=class extends Error{};var activationCount=(db9,part)=>{let i2;let count=0;for(i2=0;i2<db9.messages.length;i2++){if(db9.messages[i2].type===LINETYPE.ACTIVE_START){if(db9.messages[i2].from===part){count++;}}
if(db9.messages[i2].type===LINETYPE.ACTIVE_END){if(db9.messages[i2].from===part){count--;}}}
return count;};function enableSequenceNumbers(){db.showSequenceNumbers=true;}
var db_default={addActor:db.addActor,addSignal:db.addSignal,enableSequenceNumbers,parseMessage:db.parseMessage,LINETYPE,ARROWTYPE,PLACEMENT,addNote:db.addNote,setTitle:db.setTitle,apply:db.apply.bind(db)};var PALETTE=themeRegistry.palettes.AYU_LIGHT;function baseGetConfigFromGlobalConfig(globalConfig,configContext,configKey9){var _a;const coreConfig=safeAssign({},globalConfig.core,(_a=configContext.overrideConfig)===null||_a===void 0?void 0:_a.core);return safeAssign({fontFamily:coreConfig.defaultFontFamily,useMaxWidth:coreConfig.useMaxWidth},globalConfig[configKey9]||{});}
function makeConfigurator(opts){const{configKey:configKey9,defaultConfig:defaultConfig9}=opts;function getConfig2(configContext,extraConfig){var _a,_b;const globalConfig=config_default.gnernateNewConfig(configContext.overrideConfig||{});const t=(_a=globalConfig.themeConfig)===null||_a===void 0?void 0:_a.themeVariables;const conf6={...defaultConfig9};safeAssign(conf6,opts.getConfigFromTheme(t,conf6));const getConfigFromGlobalConfig=opts.getConfigFromGlobalConfig||baseGetConfigFromGlobalConfig;safeAssign(conf6,getConfigFromGlobalConfig(globalConfig,configContext,configKey9));if(extraConfig)
safeAssign(conf6,extraConfig);safeAssign(conf6,(_b=configContext.overrideConfig)===null||_b===void 0?void 0:_b[configKey9]);if(opts.getConfigFromParamDirectives){safeAssign(conf6,opts.getConfigFromParamDirectives(configContext.configParams));}
return conf6;}
return{getConfig:getConfig2};}
function getParamRulesFromConfig(config2){const out={};for(const[key,value]of Object.entries(config2)){const t=typeof value;let valueType;if(t==="number"){valueType="size";}else if(t==="boolean"){valueType="boolean";}else if(t==="string"){if(/color|background/.test(key.toLowerCase())){valueType="color";}else{valueType="string";}}
if(valueType){out[key]={valueType};}}
return out;}
var defaultConfig={noteWidth:80,noteHeight:50,noteMargin:10,boxMargin:10,activationWidth:10,diagramMarginX:10,diagramMarginY:10,boxTextMargin:5,messageFontSize:16,messageFontFamily:DEFAULT_FONT_FAMILY,messageFontWeight:400,messageTextColor:PALETTE.normalDark,boxFontWeight:700,wrapPadding:10,labelBoxWidth:50,labelBoxHeight:20,loopLineColor:PALETTE.orange,mirrorActors:true,actorWidth:80,actorHeight:50,actorMargin:10,actorBackground:PALETTE.orange,actorBorderColor:PALETTE.normalDark,actorTextColor:PALETTE.normalDark,actorLineColor:PALETTE.normalDark,participantBoxPadding:10,participantBackground:"transparent",noteTextColor:PALETTE.normalDark,activationBackground:PALETTE.neutralGray,dividerFontWeight:600,dividerTextColor:PALETTE.normalDark,dividerMargin:15,showSequenceNumbers:false,useMaxWidth:false};var SEQUENCE_PARAM_DIRECTIVE_RULES={noteMargin:{valueType:"size"},boxMargin:{valueType:"size"},activationWidth:{valueType:"size"},diagramMarginX:{valueType:"size"},diagramMarginY:{valueType:"size"},boxTextMargin:{valueType:"size"},messageFontSize:{valueType:"fontSize"},messageFontFamily:{valueType:"string"},messageTextColor:{valueType:"color"},wrapPadding:{valueType:"size"},labelBoxWidth:{valueType:"size"},labelBoxHeight:{valueType:"size"},loopLineColor:{valueType:"color"},actorWidth:{valueType:"size"},actorHeight:{valueType:"size"},actorMargin:{valueType:"size"},actorBackground:{valueType:"color"},actorBorderColor:{valueType:"color"},actorTextColor:{valueType:"color"},actorLineColor:{valueType:"color"},noteTextColor:{valueType:"color"},activationBackground:{valueType:"color"},dividerTextColor:{valueType:"color"},useMaxWidth:{valueType:"boolean"}};var configKey="sequence";var configurator=makeConfigurator({defaultConfig,configKey,getConfigFromGlobalConfig(globalConfig,configContext,configKey9){return safeAssign({...baseGetConfigFromGlobalConfig(globalConfig,configContext,configKey9),messageFontFamily:globalConfig.core.defaultFontFamily});},getConfigFromParamDirectives(configParams){return interpreteConfigs(SEQUENCE_PARAM_DIRECTIVE_RULES,configParams);},getConfigFromTheme(t){return{actorBackground:t.primaryColor,actorBorderColor:t.primaryBorderColor,messageTextColor:t.textColor,loopLineColor:t.primaryColor,actorTextColor:t.textColor,actorLineColor:t.primaryLineColor,noteTextColor:t.noteTextColor||t.textColor,activationBackground:t.background1,dividerTextColor:t.secondaryTextColor};}});var getConf=configurator.getConfig;function drawArrowTo(dest,baseLength,rad,opts){const{x:x2,y:y2}=dest;const xOffset=baseLength/2*Math.tan(Math.PI/3);const{type="default",color:color2="transparent",bgColor="transparent"}=opts;const context={x:x2,y:y2,baseLength,color:color2,bgColor,type,xOffset,arrowTypeRegistry};const result=arrowTypeRegistry.draw(context);const shapeStartPoint=result.shapeStartPoint||{x:x2-xOffset,y:y2};const matrix=createRotateAtPoint(x2,y2,rad);return{type:"path",matrix,attrs:{...shapeStartPoint,...result.attrs||{},...opts.attrs||{},path:result.path||[]}};}
var defaultHeadDrawer=(context)=>{const{x:x2,y:y2,color:color2,baseLength}=context;const xOffset=baseLength/2*Math.tan(Math.PI/3);const path4=[["M",x2-xOffset,y2-baseLength/2],["L",x2,y2],["L",x2-xOffset,y2+baseLength/2]
];return{path:path4,attrs:{stroke:color2,lineCap:"round"}};};var ArrowTypeRegistry=class{constructor(){this.drawers={};}
register(type,drawer){this.drawers[type]=drawer;}
draw(context){const drawer=(context.type?this.drawers[context.type]:null)||defaultHeadDrawer;const result=drawer(context);return result;}};var arrowTypeRegistry=new ArrowTypeRegistry();arrowTypeRegistry.register("triangle",(context)=>{const{x:x2,y:y2,xOffset,baseLength,color:color2}=context;const path4=[["M",x2-xOffset,y2-baseLength/2],["L",x2-xOffset,y2+baseLength/2],["L",x2,y2],["Z"]];return{path:path4,attrs:{fill:color2}};});arrowTypeRegistry.register("etriangle",makeStrokeDrawer("triangle"));arrowTypeRegistry.register("box",(context)=>{const{x:x2,y:y2,baseLength,color:color2}=context;const side=baseLength;const path4=[["M",x2-side,y2-side/2],["L",x2-side,y2+side/2],["L",x2,y2+side/2],["L",x2,y2-side/2],["Z"]];return{path:path4,attrs:{fill:color2}};});arrowTypeRegistry.register("obox",makeStrokeDrawer("box"));arrowTypeRegistry.register("dot",(context)=>{const{x:x2,y:y2,baseLength,color:color2}=context;const radius=baseLength/2;const startX=x2-radius*2;const path4=[["M",startX,y2],["A",radius,radius,0,0,0,x2,y2],["A",radius,radius,0,0,0,startX,y2]];return{path:path4,attrs:{fill:color2}};});arrowTypeRegistry.register("odot",makeStrokeDrawer("dot"));arrowTypeRegistry.register("diamond",(context)=>{const{x:x2,y:y2,baseLength,xOffset,color:color2}=context;const halfW=xOffset;const halfH=baseLength/2;const centerX=x2-halfW;const path4=[["M",centerX-halfW,y2],["l",halfW,halfH],["l",halfW,-halfH],["l",-halfW,-halfH],["Z"]];return{path:path4,attrs:{fill:color2}};});function makeStrokeDrawer(fromType){return(context)=>{const result=context.arrowTypeRegistry.draw({...context,type:fromType});result.attrs={stroke:context.color,fill:context.bgColor};return result;};}
arrowTypeRegistry.register("ediamond",makeStrokeDrawer("diamond"));function getBaseText(){return{x:0,y:0,text:"",fill:PALETTE.normalDark};}
function drawCrossTo(dest,baseLength,rad,attrs){const{x:x2,y:y2}=dest;const offset=baseLength/2;const p=[["M",x2-offset,y2-offset],["L",x2+offset,y2+offset],["M",x2+offset,y2-offset],["L",x2-offset,y2+offset]];const matrix=createRotateAtPoint(x2,y2,rad);return{type:"path",matrix,attrs:{...attrs||{},path:p}};}
function drawDiamondTo(dest,halfW,attrs){const width2=halfW*2;const centerX=dest.x;const centerY=dest.y;const diamondMark=makeMark("path",{...attrs,width:width2,height:width2,path:[["m",centerX-halfW,centerY],["l",halfW,halfW],["l",halfW,-halfW],["l",-halfW,-halfW],["Z"]]});return diamondMark;}
function calcDirection(start,end){const ox=end.x-start.x;const oy=end.y-start.y;let r=Math.atan(oy/ox);if(ox<0){r=r+Math.PI;}
return r;}
function makeLabelBg(labelDims,center,attrs={},theme3){let fill="#fff";if(theme3){fill=theme3.canvasBackground||theme3.background1||(theme3.isDark?"#000":"#fff");}
const labelBg=makeMark("rect",{x:center.x-labelDims.width/2,y:center.y-labelDims.height/2,width:labelDims.width,height:labelDims.height+2,fill,opacity:0.85,...attrs},{class:"label-bg"});return labelBg;}
function adjustRootMarkBounds({rootMark,gBounds,padX,padY,containerSize,useMaxWidth,titleSize,titleMark}){const containerWidth=containerSize===null||containerSize===void 0?void 0:containerSize.width;const doublePadX=padX*2;const titleHeight=(titleSize===null||titleSize===void 0?void 0:titleSize.height)||0;const titleWidth=(titleSize===null||titleSize===void 0?void 0:titleSize.width)||0;const scaleX=useMaxWidth&&containerWidth?containerWidth/Math.max(gBounds.width+doublePadX,titleWidth):1;rootMark.matrix=mat3_exports.translate(mat3_exports.create(),mat3_exports.fromScaling(mat3_exports.create(),[scaleX,scaleX]),[-Math.min(0,gBounds.left)+padX/scaleX,-Math.min(0,gBounds.top)+padY/scaleX+titleHeight]);const width2=Math.max(gBounds.width+doublePadX,titleWidth)*scaleX;if(titleMark){titleMark.attrs.x=gBounds.left+width2/2-padX;}
return{width:width2,height:gBounds.height*scaleX+padY*2+((titleSize===null||titleSize===void 0?void 0:titleSize.height)||0)};}
function makeTitleMark(title,titleFont,attrs){const titleSize=calculateTextDimensions(title,titleFont);const titleHeight=titleSize.height;return{mark:{type:"text",attrs:{text:title,x:0,y:-titleHeight,...titleFont,...attrs,textAlign:"center",fontWeight:"bold"}},titleSize};}
function makeEmptyGroup(){return makeMark("group",{x:0,y:0},{children:[]});}
function makeCircle(attrs){return makeMark("circle",{x:0,y:0,r:0,...attrs});}
var getBaseNote=function(theme3){return{x:0,y:0,fill:theme3.noteBackground||theme3.groupBackground,stroke:theme3.primaryBorderColor,width:50,anchor:"start",height:50,rx:0,ry:0};};var LayerManager=class{constructor(){this.layers={};}
addLayer(name,zIndex){if(!this.layers[name]){this.layers[name]={zIndex:0,marks:[]};}
this.layers[name].zIndex=zIndex;return this.layers[name];}
getLayer(name){return this.layers[name];}
sortLayerMarks(){const layerList=Object.values(this.layers).sort((a,b10)=>a.zIndex-b10.zIndex);const marks=layerList.reduce((acc,layer)=>{acc.push(...layer.marks);return acc;},[]);return marks;}
addMark(name,mark){var _a;(_a=this.getLayer(name))===null||_a===void 0?void 0:_a.marks.push(mark);}};function makeTriangle(center,baseLength,rad,attrs){const{x:x2,y:y2}=center;const offsetX=toFixed(baseLength/2);const offsetY=baseLength*Math.sign(Math.PI/3)/2;const p=[["M",x2,y2-offsetY],["L",x2-offsetX,y2+offsetY],["L",x2+offsetX,y2+offsetY],["Z"]];const matrix=createRotateAtPoint(x2,y2,rad);const mark=makeMark("path",{...attrs||{},path:p},{matrix});return{mark,width:baseLength,height:offsetY*2};}
function makeTextAtPoint(text,p,attrs={}){return makeMark("text",{x:p.x,y:p.y,text,fill:PALETTE.normalDark,textAlign:"center",textBaseline:"middle",...attrs});}
function makeLoopLabelBox(position2,width2,height,cut){const{x:x2,y:y2}=position2;const points=[[x2,y2],[x2+width2,y2],[x2+width2,y2+height-cut],[x2+width2-cut*1.2,y2+height],[x2,y2+height]];return makeMark("polygon",{points},{class:"loop__label-box"});}
var MARK_TRANSFORMERS={rect({attrs},info){attrs.x=(attrs.x||0)+info.offsets.x;attrs.y=(attrs.y||0)+info.offsets.y;},circle({attrs},info){attrs.x+=info.offsets.x;attrs.y+=info.offsets.y;if(info.scales.x)
attrs.r*=info.scales.x;},ellipse({attrs,type},info){attrs.x+=info.offsets.x;attrs.y+=info.offsets.y;if(info.scales.x)
attrs.rx*=info.scales.x;if(info.scales.y)
attrs.ry*=info.scales.y;},line(mark,info){mark.matrix=createTranslation(info.offsets.x,info.offsets.y);},path(mark,info){const translateMatrix=createTranslation(info.offsets.x,info.offsets.y);const scaleMatrix=mat3_exports.fromScaling(mat3_exports.create(),[info.scales.x||1,info.scales.y||1]);const matrix=mat3_exports.multiply(mat3_exports.create(),translateMatrix,scaleMatrix);mark.matrix=matrix;}};function positionGroupContents(group,p){const oldBounds={x:group.attrs.x||0,y:group.attrs.y||0,width:group.attrs.width||null,height:group.attrs.height||null};const offsets={x:p.x-oldBounds.x,y:p.y-oldBounds.y};const info={offsets,scales:{x:oldBounds.width===null?null:p.width/oldBounds.width,y:oldBounds.height===null?null:p.height/oldBounds.height},width:p.width,height:p.height};group.children.forEach((mark)=>{const{type}=mark;if(mark.type==="group"){positionGroupContents(mark,{...offsets,width:mark.attrs.width,height:mark.attrs.height});}else{const transformer2=MARK_TRANSFORMERS[type];if(transformer2){transformer2(mark,info);}else{const cAttrs=mark.attrs;cAttrs.x=(cAttrs.x||0)+offsets.x;cAttrs.y=(cAttrs.y||0)+offsets.y;}}});safeAssign(group.attrs,p);}
var TRANSFORM_GRAPH={graphNodeToRectStart(rect){const{width:width2,height,x:x2,y:y2}=rect;return{width:width2,height,x:x2-rect.width/2,y:y2-rect.height/2};}};function makeBounds(){return{left:Infinity,right:-Infinity,top:Infinity,bottom:-Infinity,width:0,height:0};}
function tryExpandBounds(base,newRegion){base.left=Math.min(base.left,newRegion.left);base.right=Math.max(base.right,newRegion.right);base.top=Math.min(base.top,newRegion.top);base.bottom=Math.max(base.bottom,newRegion.bottom);base.width=base.right-base.left;base.height=base.bottom-base.top;return base;}
function drawDivider(context,divider){const{conf:conf6,model:model3}=context;const container=context.rootMark;const dividerMargin=conf6.dividerMargin;model3.tryBumpType({[BumpType.Box]:true});model3.bumpVerticalPos(dividerMargin);const dividerTextFont={...messageFont(conf6),fontWeight:conf6.dividerFontWeight};const bounds=model3.getBounds();const starty=model3.verticalPos;const startx=bounds.startx;const{width:width2,height}=divider;const padding=conf6.wrapPadding;const rectWidth=width2+conf6.wrapPadding*2;const rectX=startx+(bounds.stopx-rectWidth)/2;const rect=makeMark("rect",{x:rectX,y:starty,width:rectWidth,height:height+conf6.wrapPadding*2,fill:conf6.activationBackground,stroke:conf6.actorBorderColor,lineWidth:2});const textDims=calculateTextDimensions(divider.text);const textMark=makeMark("text",{text:divider.text,fill:conf6.dividerTextColor,x:rectX+width2/2+padding,y:starty+height/2+padding,textAlign:"center",textBaseline:"middle",...dividerTextFont});const lineGap=3;const line1Y=starty+rect.attrs.height/2-lineGap/2;const line2Y=line1Y+lineGap;const line1=makeMark("line",{x1:0,y1:line1Y,x2:bounds.stopx,y2:line1Y,stroke:conf6.actorLineColor});const line2=makeMark("line",{...line1.attrs,y1:line2Y,y2:line2Y});const g=makeMark("group",{},{children:[line1,line2,rect,textMark],class:"divider"});container.children.push(g);model3.bumpVerticalPos(dividerMargin+textDims.height+padding);model3.onBoundsFinish(({bounds:bounds2})=>{const boundWidth=Math.abs(bounds2.stopx-bounds2.startx);const newCenterX=bounds2.startx+boundWidth/2;const newRectX=newCenterX-rect.attrs.width/2;safeAssign(rect.attrs,{x:newRectX});safeAssign(textMark.attrs,{x:newCenterX});safeAssign(line1.attrs,{x1:bounds2.startx});safeAssign(line2.attrs,{x1:bounds2.startx});});}
function drawLoopTo(context,loopModel,labelText){const{conf:conf6,rootMark:mark,model:model3}=context;const loopLineColor=conf6.loopLineColor;const group=makeMark("group",{},{children:[],class:"loop"});function drawLoopLine(startx2,starty2,stopx2,stopy2){const line=makeMark("line",{x1:startx2,x2:stopx2,y1:starty2,y2:stopy2,stroke:loopLineColor,lineWidth:2,lineDash:[2,2]},{class:"loopline"});group.children.push(line);}
function drawSectionBg(section){const sectionBgRect=makeMark("rect",{x:startx,y:section.y,width:stopx-startx,height:stopy-section.y,fill:section.fill,stroke:loopLineColor,lineWidth:2,lineDash:[2,2]});model3.groupBgs.push(sectionBgRect);}
const{startx,starty,stopx,stopy}=loopModel;const bgRect=makeMark("rect",removeValues({x:startx,y:starty,width:stopx-startx,height:stopy-starty,fill:loopModel.fill,stroke:loopLineColor,lineWidth:2,lineDash:[2,2]}));model3.groupBgs.push(bgRect);if(loopModel.sections){loopModel.sections.forEach(function(item){drawLoopLine(startx,item.y,loopModel.stopx,item.y);if(item.fill){drawSectionBg(item);}});}
const{boxMargin,boxTextMargin,labelBoxWidth,labelBoxHeight,messageFontFamily:fontFamily2,messageFontSize:fontSize2,messageFontWeight:fontWeight,messageTextColor:textColor}=conf6;const tAttrs=getBaseText();safeAssign(tAttrs,{text:labelText,x:startx+boxTextMargin,y:starty+boxTextMargin,textBaseline:"top",fontFamily:fontFamily2,fontSize:fontSize2,fontWeight,fill:textColor});const labelTextMark=makeMark("text",tAttrs,{class:"label-text"});const labelTextSize=calculateTextDimensions(labelText,messageFont(conf6));const labelWidth=Math.max(labelTextSize.width+2*boxTextMargin,labelBoxWidth);const labelHeight=Math.max(labelTextSize.height+2*boxTextMargin,labelBoxHeight);const labelWrap=makeLoopLabelBox({x:startx,y:starty},labelWidth,labelHeight,5);safeAssign(labelWrap.attrs,{fill:conf6.actorBackground,stroke:loopLineColor});const loopWidth=stopx-startx;const titleMark=makeMark("text",{text:loopModel.title,x:startx+loopWidth/2+labelBoxWidth/2,y:starty+boxTextMargin,textBaseline:"top",textAlign:"center",fontFamily:fontFamily2,fontSize:fontSize2,fontWeight,fill:textColor},{class:"loop__title"});group.children.push(labelWrap,labelTextMark,titleMark);if(loopModel.sections){loopModel.sections.forEach(function(item,idx){const sectionTitle=item.message.text;if(sectionTitle){const sectionTitleMark=makeMark("text",{...getBaseText(),text:sectionTitle,x:startx+loopWidth/2,y:loopModel.sections[idx].y+boxTextMargin,textAlign:"center",textBaseline:"top",fontFamily:fontFamily2,fontSize:fontSize2,fontWeight,fill:conf6.messageTextColor},{class:"loop__title"});const{height:sectionHeight}=calculateTextDimensions(sectionTitle,boxFont(conf6));loopModel.sections[idx].height+=sectionHeight-(boxMargin+boxTextMargin);group.children.push(sectionTitleMark);}});}
mark.children.push(group);}
var conf;var theme;var GROUP_LABEL_MAP={[LINETYPE.LOOP_END]:"loop",[LINETYPE.ALT_END]:"alt",[LINETYPE.OPT_END]:"opt",[LINETYPE.PAR_END]:"par",[LINETYPE.LOOP_START]:"loop",[LINETYPE.ALT_START]:"alt",[LINETYPE.OPT_START]:"opt",[LINETYPE.PAR_START]:"par"};var SHOW_NUMBER_CIRCLE_RADIUS=8;var sequenceArtist={draw(ir,config2,opts){var _a;conf=getConf(ir,config2);theme=config_default.getConfig().themeConfig.themeVariables;model.init();const{messages,title}=ir;const actorKeys=db.getActorKeys();const rootMark=makeEmptyGroup();const context={ir,rootMark,conf,model};actorKeys.forEach((key)=>{model.actorAttrsMap.set(key,{fill:conf.actorBackground,stroke:conf.actorBorderColor});});model.initBoxInfos(ir);let startVerticalPos=0;if(model.hasParticipantBox()){const vPos=conf.participantBoxPadding*2+model.participantBoxStats.maxTitleHeight;startVerticalPos=model.bumpVerticalPos(vPos);}
calcLoopMinWidths(ir.messages);const maxMessageWidthPerActor=getMaxMessageWidthPerActor(ir);model.maxMessageWidthPerActor=maxMessageWidthPerActor;const actorsCalcResult=calculateActorMargins(context,maxMessageWidthPerActor);model.actorHeight=actorsCalcResult.actorHeight;drawActors(rootMark,ir,{verticalPos:startVerticalPos});const loopWidths=calculateLoopBounds(messages);const activationGroup=makeMark("group",{},{children:[],class:"activations"});rootMark.children.push(activationGroup);function activeEnd(msg,verticalPos){const activationData=model.endActivation(msg);if(activationData.starty+18>verticalPos){activationData.starty=verticalPos-6;verticalPos+=12;}
drawActivationTo(activationGroup,activationData);model.insert(activationData.startx,verticalPos-10,activationData.stopx,verticalPos);}
let sequenceIndex=1;messages.forEach(function(msg){let loopModel,noteModel,msgModel;switch(msg.type){case LINETYPE.NOTE:noteModel=model.noteModelMap.get(msg.id);drawNoteTo(noteModel,rootMark);break;case LINETYPE.ACTIVE_START:model.newActivation(msg);break;case LINETYPE.ACTIVE_END:activeEnd(msg,model.verticalPos);break;case LINETYPE.LOOP_START:case LINETYPE.OPT_START:case LINETYPE.ALT_START:case LINETYPE.PAR_START:adjustLoopSizeForWrap(loopWidths,msg,conf.boxMargin,conf.boxMargin+conf.boxTextMargin,({message,width:width3})=>{var _a2;const fill=(_a2=msg.attrs)===null||_a2===void 0?void 0:_a2.background;model.newLoop(message,width3,fill);});break;case LINETYPE.ALT_ELSE:case LINETYPE.PAR_AND:adjustLoopSizeForWrap(loopWidths,msg,conf.boxMargin,conf.boxMargin+conf.boxTextMargin,({message,width:width3})=>{var _a2;const fill=(_a2=msg.attrs)===null||_a2===void 0?void 0:_a2.background;model.addSectionToLoop(message,width3,fill);});break;case LINETYPE.LOOP_END:case LINETYPE.ALT_END:case LINETYPE.OPT_END:case LINETYPE.PAR_END:loopModel=model.endLoop();const label=GROUP_LABEL_MAP[msg.type];drawLoopTo(context,loopModel,label);model.bumpVerticalPos(loopModel.stopy-model.verticalPos);model.loops.push(loopModel);break;case LINETYPE.DIVIDER:msgModel=model.dividerMap.get(msg.id);drawDivider(context,msgModel);break;default:try{msgModel=model.msgModelMap.get(msg.id);if(!msgModel){console.warn("no msgModel for",msg);return;}
msgModel.starty=model.verticalPos;msgModel.sequenceIndex=sequenceIndex;rootMark.children.push(drawMessage(msgModel).mark);}catch(e){logger.error("error while drawing message",e);}}
if([LINETYPE.SOLID_OPEN,LINETYPE.DOTTED_OPEN,LINETYPE.SOLID,LINETYPE.DOTTED,LINETYPE.SOLID_CROSS,LINETYPE.DOTTED_CROSS,LINETYPE.SOLID_POINT,LINETYPE.DOTTED_POINT].includes(msg.type)){sequenceIndex++;}});if(conf.mirrorActors){model.bumpVerticalPos(conf.boxMargin*2);drawActors(rootMark,ir,{verticalPos:model.verticalPos,isMirror:true});}
if(model.hasParticipantBox()){model.bumpVerticalPos(conf.participantBoxPadding);}
const reversedGroupBgs=model.groupBgs.slice().reverse();rootMark.children=[...reversedGroupBgs,...rootMark.children];drawParticipantBoxes(context);const box=model.getBounds();if(title){const titleFont=actorFont(conf);rootMark.children.push({type:"text",attrs:{text:title,x:box.startx+(box.stopx-box.startx)/2,y:-20,...titleFont,fill:conf.actorTextColor,textAlign:"center",fontWeight:"bold"},class:"sequence__title"});}
model.emitBoundsFinish();const doublePadX=2*conf.diagramMarginX;const doublePadY=2*conf.diagramMarginY;const extraVertForTitle=title?40:0;const contentWidth=box.stopx-box.startx;let contentHeight=box.stopy-box.starty+extraVertForTitle;if(conf.mirrorActors){contentHeight=contentHeight+conf.boxMargin;}
const containerWidth=(_a=opts.containerSize)===null||_a===void 0?void 0:_a.width;const scaleX=conf.useMaxWidth&&containerWidth&&containerWidth/(contentWidth+doublePadX)||1;const width2=Math.round(scaleX*(contentWidth+doublePadX));const height=Math.round(scaleX*(contentHeight+doublePadY));const leftPad=Math.abs(Math.min(0,box.startx));rootMark.matrix=mat3_exports.translate(mat3_exports.create(),mat3_exports.fromScaling(mat3_exports.create(),[scaleX,scaleX]),[conf.diagramMarginX+leftPad,conf.diagramMarginY+extraVertForTitle]);const graphicsIR={mark:rootMark,width:width2,height};return graphicsIR;}};var BumpType;(function(BumpType2){BumpType2[BumpType2["Box"]=1]="Box";})(BumpType||(BumpType={}));var Model=class{constructor(){this.activations=[];this.actorAttrsMap=new Map();this.msgModelMap=new Map();this.actorLineMarkMap=new Map();this.maxMessageWidthPerActor={};this.noteModelMap=new Map();this.dividerMap=new Map();this.posTempInfo={};this.boxInfos=new Map();this.participantBoxStats={maxTitleHeight:0};}
init(){this.sequenceItems=[];this.clear();this.data={startx:0,stopx:0,starty:0,stopy:0};this.activations=[];this.verticalPos=0;this.loops=[];this.loopMinWidths={};this.onBoundsFinishCbs=[];this.groupBgs=[];this.actorHeight=conf.actorHeight;}
clear(){this.activations=[];this.actorAttrsMap.clear();this.actorLineMarkMap.clear();this.msgModelMap.clear();this.maxMessageWidthPerActor={};this.noteModelMap.clear();this.dividerMap.clear();this.onBoundsFinishCbs=[];this.groupBgs=[];this.loopMinWidths={};this.posTempInfo={};this.boxInfos.clear();}
updateVal(obj,key,val,fun){if(typeof obj[key]==="undefined"){obj[key]=val;}else{obj[key]=fun(val,obj[key]);}}
updateBounds(startx,starty,stopx,stopy){const _self=this;let cnt=0;function updateFn(type){return function updateItemBounds(item){cnt++;const n2=_self.sequenceItems.length-cnt+1;_self.updateVal(item,"starty",starty-n2*conf.boxMargin,Math.min);_self.updateVal(item,"stopy",stopy+n2*conf.boxMargin,Math.max);const groupItemStopx=stopx+n2*conf.boxMargin;_self.updateVal(_self.data,"startx",startx-n2*conf.boxMargin,Math.min);_self.updateVal(_self.data,"stopx",groupItemStopx,Math.max);if(!(type==="activation")){_self.updateVal(item,"startx",startx-n2*conf.boxMargin,Math.min);_self.updateVal(item,"stopx",groupItemStopx,Math.max);_self.updateVal(_self.data,"starty",starty-n2*conf.boxMargin,Math.min);_self.updateVal(_self.data,"stopy",stopy+n2*conf.boxMargin,Math.max);}};}
this.sequenceItems.forEach(updateFn());this.activations.forEach(updateFn("activation"));}
insert(startx,starty,stopx,stopy){const _startx=Math.min(startx,stopx);const _stopx=Math.max(startx,stopx);const _starty=Math.min(starty,stopy);const _stopy=Math.max(starty,stopy);this.updateVal(this.data,"startx",_startx,Math.min);this.updateVal(this.data,"starty",_starty,Math.min);this.updateVal(this.data,"stopx",_stopx,Math.max);this.updateVal(this.data,"stopy",_stopy,Math.max);this.updateBounds(_startx,_starty,_stopx,_stopy);}
newActivation(message){const actorRect=this.actorAttrsMap.get(message.from);const stackedSize=actorActivations(message.from).length||0;const x2=actorRect.x+actorRect.width/2+(stackedSize-1)*conf.activationWidth/2;this.activations.push({startx:x2,starty:this.verticalPos+2,stopx:x2+conf.activationWidth,stopy:void 0,actor:message.from});}
endActivation(message){const lastActorActivationIdx=this.activations.map((activation)=>{return activation.actor;}).lastIndexOf(message.from);return this.activations.splice(lastActorActivationIdx,1)[0];}
createLoop(title={text:void 0,wrap:false},width2,fill){return{startx:void 0,starty:this.verticalPos,stopx:void 0,stopy:void 0,title:title.text,wrap:title.wrap,width:width2,height:0,fill};}
newLoop(title={text:void 0,wrap:false},width2,fill){this.sequenceItems.push(this.createLoop(title,width2,fill));}
endLoop(){return this.sequenceItems.pop();}
addSectionToLoop(message,width2,fill){const loop=this.sequenceItems[this.sequenceItems.length-1];loop.sections=loop.sections||[];loop.sections.push({y:this.verticalPos,width:width2,height:0,fill,message});}
bumpVerticalPos(bump,tempInfo){this.verticalPos=this.verticalPos+bump;this.data.stopy=this.verticalPos;this.posTempInfo=tempInfo||{};return this.verticalPos;}
tryBumpType(types){const{posTempInfo}=this;let pos=0;if(types[BumpType.Box]&&posTempInfo.extraMarginForBox){pos+=posTempInfo.extraMarginForBox;}
this.bumpVerticalPos(pos);}
getBounds(){return this.data;}
getHeight(){const actorHeight=this.actorAttrsMap.size===0?0:Array.from(this.actorAttrsMap.values()).reduce((acc,actor)=>{return Math.max(acc,actor.height||0);},0);const messagesHeight=this.msgModelMap.size?Array.from(this.msgModelMap.values()).reduce((acc,h)=>acc+h.height,0):0;const notesHeight=this.noteModelMap.size?Array.from(this.noteModelMap.values()).reduce((acc,h)=>acc+h.height,0):0;const loopsHeight=this.loops.reduce((acc,h)=>acc+h.height,0);return actorHeight+messagesHeight+notesHeight+loopsHeight;}
getBoxInfo(boxId){return this.boxInfos.get(boxId);}
initBoxInfos(ir){let maxTitleHeight=0;for(const actorBox of Object.values(ir.participantBoxes)){const id9=actorBox.id;let boxInfo=this.boxInfos.get(id9);if(id9){if(!boxInfo){const fontConfig=boxFont(conf);boxInfo={width:0,actorMarks:[],bounds:makeBounds(),textDims:getTextDimensionsInPresicion(actorBox.text||"",fontConfig),participantBox:actorBox};if(actorBox.text){maxTitleHeight=Math.max(maxTitleHeight,boxInfo.textDims.height);}
this.boxInfos.set(id9,boxInfo);}}}
this.participantBoxStats={maxTitleHeight};}
hasParticipantBox(){return this.boxInfos.size>0;}
onBoundsFinish(cb){this.onBoundsFinishCbs.push(cb);}
emitBoundsFinish(){this.onBoundsFinishCbs.forEach((cb)=>{cb({bounds:this.data});});}};var model=new Model();var actorActivations=function(actor){return model.activations.filter(function(activation){return activation.actor===actor;});};var activationBounds=function(actor){const actorAttrs=model.actorAttrsMap.get(actor);const activations=actorActivations(actor);const left=activations.reduce(function(acc,activation){return Math.min(acc,activation.startx);},actorAttrs.x+actorAttrs.width/2);const right=activations.reduce(function(acc,activation){return Math.max(acc,activation.stopx);},actorAttrs.x+actorAttrs.width/2);return[left,right];};function adjustLoopSizeForWrap(loopWidths,msg,preMargin,postMargin,addLoopFn){model.tryBumpType({[BumpType.Box]:true});model.bumpVerticalPos(preMargin);let heightAdjust=postMargin;let loopWidth=0;if(msg.id&&msg.text&&loopWidths[msg.id]){const loopMinWidth=model.loopMinWidths[msg.id]||0;loopWidth=Math.max(loopWidths[msg.id].width,loopMinWidth);const textConf=boxFont(conf);msg.text=`[${msg.text}]`;msg.wrap=true;const textDims=calculateTextDimensions(msg.text,textConf);const totalOffset=Math.max(textDims.height,conf.labelBoxHeight);heightAdjust=postMargin+totalOffset;logger.debug(`yOffset:${totalOffset}-${msg.text}`);}
addLoopFn({message:msg,width:loopWidth});model.bumpVerticalPos(heightAdjust);}
var messageFont=(cnf)=>{return{fontFamily:cnf.messageFontFamily,fontSize:cnf.messageFontSize,fontWeight:cnf.messageFontWeight};};var actorFont=messageFont;var noteFont=messageFont;var boxFont=(cnf)=>{return{fontFamily:cnf.messageFontFamily,fontSize:cnf.messageFontSize,fontWeight:cnf.boxFontWeight||cnf.messageFontWeight};};function splitBreaks(text){return text.split("\n");}
var drawMessage=function(msgModel){model.bumpVerticalPos(conf.boxMargin);const{startx,stopx,starty,text,fromBound,type,sequenceIndex,itemId}=msgModel;const linesCount=splitBreaks(text).length;const textDims=calculateTextDimensions(text,messageFont(conf));const lineHeight=textDims.height/linesCount;model.bumpVerticalPos(lineHeight);const tAttrs={text:"",textAlign:"center",textBaseline:"top",fill:conf.messageTextColor};tAttrs.x=fromBound+msgModel.width/2;tAttrs.y=starty+conf.boxMargin;tAttrs.width=msgModel.width;tAttrs.text=text;tAttrs.fontFamily=conf.messageFontFamily;tAttrs.fontSize=conf.messageFontSize;tAttrs.fontWeight=conf.messageFontWeight;let totalOffset=textDims.height;let lineStarty;const lineAttrs={stroke:conf.messageTextColor,lineWidth:2};const{verticalPos}=model;let lineMark;if(startx===stopx){lineStarty=model.verticalPos+totalOffset;totalOffset+=conf.boxMargin;lineStarty=model.verticalPos+totalOffset;const lineEndy=lineStarty+20;const linePath="M "+startx+","+lineStarty+" C "+(startx+60)+","+(lineStarty-10)+" "+(startx+60)+","+(lineStarty+30)+" "+startx+","+lineEndy;safeAssign(lineAttrs,{path:linePath,x1:startx,x2:stopx,y2:lineEndy});lineMark=makeMark("path",lineAttrs,{class:"message__line",itemId});safeAssign(tAttrs,{x:startx});const offsetBump=20;totalOffset+=offsetBump;const dx=Math.max(textDims.width/2,conf.actorWidth/2);model.insert(startx-dx,verticalPos-10+totalOffset,stopx+dx,verticalPos+offsetBump+totalOffset);}else{lineStarty=verticalPos+totalOffset;safeAssign(lineAttrs,{x1:startx,x2:stopx,y1:lineStarty,y2:lineStarty});lineMark={type:"line",attrs:lineAttrs,class:"message__line",itemId};model.insert(startx,lineStarty-10,stopx,lineStarty);}
if(type===LINETYPE.DOTTED||type===LINETYPE.DOTTED_CROSS||type===LINETYPE.DOTTED_POINT||type===LINETYPE.DOTTED_OPEN){safeAssign(lineAttrs,{lineDash:[3,3]});}
const isRightArrow=stopx>startx;const arrowRad=isRightArrow?0:-Math.PI;let lineEndMark=null;let lineEndHalfH=0;if(type===LINETYPE.SOLID||type===LINETYPE.DOTTED){const side=10;lineEndMark=drawArrowTo({x:lineAttrs.x2,y:lineAttrs.y2},side,arrowRad,{type:"triangle",color:lineAttrs.stroke});lineEndHalfH=side/2;}
if(type===LINETYPE.SOLID_CROSS||type===LINETYPE.DOTTED_CROSS){const crossOffset=5;const arrowHeight=10;const crossCenterX=lineAttrs.x2+crossOffset*(isRightArrow?-1:1);lineEndMark=drawCrossTo({x:crossCenterX,y:lineAttrs.y2},arrowHeight,arrowRad,{stroke:lineAttrs.stroke,lineWidth:2});lineAttrs.x2+=isRightArrow?-crossOffset:crossOffset;lineEndHalfH=arrowHeight/2;}
let numberMark;if(db.showSequenceNumbers||conf.showSequenceNumbers){const numberTextMark=makeMark("text",{...getBaseText(),text:sequenceIndex.toString(),x:startx,y:lineStarty,textAlign:"center",textBaseline:"middle",fill:conf.actorBackground,fontWeight:"bold"},{class:"sequence-number"});const circleColor=conf.actorBorderColor;const circleMark=makeMark("marker",{symbol:"circle",x:startx,y:lineStarty,r:SHOW_NUMBER_CIRCLE_RADIUS,fill:circleColor,stroke:circleColor});numberMark=makeMark("group",{},{children:[circleMark,numberTextMark]});}
model.bumpVerticalPos(totalOffset,{extraMarginForBox:lineEndHalfH});msgModel.height+=totalOffset;msgModel.stopy=msgModel.starty+msgModel.height;model.insert(msgModel.fromBound,msgModel.starty,msgModel.toBound,msgModel.stopy);return{mark:{type:"group",class:"message",itemId,children:compact([lineMark,lineEndMark,{type:"text",attrs:tAttrs,class:"message__text"},numberMark])}};};var drawNoteTo=function(noteModel,container){model.bumpVerticalPos(conf.boxMargin);const textDims=calculateTextDimensions(noteModel.text,noteFont(conf));const textHeight=textDims.height;noteModel.height=textHeight+2*conf.noteMargin;noteModel.starty=model.verticalPos;const rectAttrs=getBaseNote(theme);safeAssign(rectAttrs,{x:noteModel.startx,y:noteModel.starty,width:noteModel.width||conf.noteWidth,height:noteModel.height});const noteRect={type:"rect",class:"note__bg",attrs:rectAttrs};const textAttrs={fill:conf.noteTextColor,text:noteModel.text,...noteFont(conf)};safeAssign(textAttrs,{x:noteModel.startx+noteModel.width/2,y:noteModel.starty+noteModel.height/2,width:noteModel.width,textAlign:"center",textBaseline:"middle"});const textMark={type:"text",attrs:textAttrs};model.bumpVerticalPos(textHeight+2*conf.noteMargin);noteModel.stopy=noteModel.starty+textHeight+2*conf.noteMargin;noteModel.stopx=noteModel.startx+rectAttrs.width;model.insert(noteModel.startx,noteModel.starty,noteModel.stopx,noteModel.stopy);const mark={type:"group",class:"note",children:[noteRect,textMark]};container.children.push(mark);};var drawActors=function(rootMark,ir,opts){const{verticalPos=0,isMirror}=opts;let actorKeys=ir.actorOrder;const boxIds=Object.keys(ir.participantBoxes);actorKeys=actorKeys.sort((a,b10)=>{let aOrder=1e3;let bOrder=1e3;const actorA=ir.actors[a];const actorB=ir.actors[b10];if(actorA.boxId){aOrder=boxIds.indexOf(actorA.boxId);}
if(actorB.boxId){bOrder=boxIds.indexOf(actorB.boxId);}
return aOrder-bOrder;});let nextActorX=0;for(let i2=0;i2<actorKeys.length;i2++){const key=actorKeys[i2];const actor=ir.actors[key];const attrsKey=isMirror?`${key}_mirror`:key;const{boxId}=actor;const boxInfo=model.getBoxInfo(boxId);const participantBox=boxInfo===null||boxInfo===void 0?void 0:boxInfo.participantBox;const actorMark={type:"group",class:"actor",children:[],itemId:actor.itemId};let attrs;if(isMirror){attrs={...model.actorAttrsMap.get(key)};}else{attrs=model.actorAttrsMap.get(key)||{fill:conf.actorBackground,stroke:conf.actorBorderColor};}
const areaWidth=attrs.width||conf.actorWidth;const areaHeight=Math.max(attrs.height||0,model.actorHeight);let actorX=nextActorX;if(participantBox&&participantBox.actors[0]===key){actorX+=conf.participantBoxPadding;}
safeAssign(attrs,{width:areaWidth,height:areaHeight,margin:attrs.margin||conf.actorMargin,x:actorX,y:verticalPos,radius:4});const actorCenter={x:attrs.x+attrs.width/2,y:attrs.y+attrs.height/2};const labelFontFonfig=actorFont(conf);const textAttrs={fill:conf.actorTextColor,text:actor.description,x:actorCenter.x,y:actorCenter.y,textAlign:"center",textBaseline:"middle",...labelFontFonfig};const labelDims=calculateTextDimensions(actor.description,labelFontFonfig);let lineStartOffsetY=0;let sym;if(actor.classifier&&symbolRegistry.get(actor.classifier)){const symbolHeight=areaHeight-labelDims.height;const contentArea={x:attrs.x+areaWidth/2,y:attrs.y+(areaHeight-labelDims.height)/2,width:clamp(symbolHeight*1.4,areaWidth/2,areaWidth),height:symbolHeight};lineStartOffsetY+=labelDims.height/2;sym=symbolRegistry.create(actor.classifier,{mode:"icon",attrs:{stroke:attrs.stroke,fill:attrs.fill},contentArea});if(sym){textAttrs.y=actorCenter.y+(areaHeight-labelDims.height)/2+4;actorMark.children.push(sym);}}
if(!sym){actorMark.children.push({type:"rect",attrs});}
actorMark.children.push({type:"text",attrs:textAttrs});let lineMark;if(!isMirror){lineMark={type:"line",class:"actor__line",attrs:{x1:actorCenter.x,x2:actorCenter.x,y1:attrs.y+areaHeight+lineStartOffsetY,y2:2e3,stroke:conf.actorLineColor}};model.actorLineMarkMap.set(key,lineMark);}else{const prevLineMark=model.actorLineMarkMap.get(key);if(prevLineMark){prevLineMark.attrs.y2=attrs.y;}}
if(lineMark){actorMark.children.unshift(lineMark);}
model.insert(attrs.x,verticalPos,attrs.x+attrs.width,attrs.height);nextActorX=actorX+attrs.width+attrs.margin;if(participantBox&&participantBox.actors.indexOf(key)===participantBox.actors.length-1){nextActorX+=conf.participantBoxPadding;}
rootMark.children.push(actorMark);model.actorAttrsMap.set(attrsKey,attrs);if(boxInfo){boxInfo.actorMarks.push(actorMark);const newBound=makeBounds();newBound.left=attrs.x;newBound.right=attrs.x+attrs.width;newBound.top=0;tryExpandBounds(boxInfo.bounds,newBound);}}
model.bumpVerticalPos(model.actorHeight);};function drawParticipantBoxes(context){const{model:model3,rootMark,conf:conf6}=context;if(!model3.hasParticipantBox())
return;const boxesGroup=makeEmptyGroup();boxesGroup.class="sequence__participant-boxes";const padding=conf6.participantBoxPadding;rootMark.children.unshift(boxesGroup);const modelBounds=model3.getBounds();for(const boxInfo of model3.boxInfos.values()){const{participantBox,bounds,textDims}=boxInfo;const width2=Math.max(textDims.width,bounds.width)+padding*2;if(!isFinite(width2))
continue;const startx=bounds.left-padding;const rect=makeMark("rect",{x:startx,y:0,width:width2,height:modelBounds.stopy-modelBounds.starty,fill:participantBox.background||conf6.participantBackground,stroke:conf6.actorTextColor});boxesGroup.children.push(rect);if(participantBox.text){const fontConfig=boxFont(conf6);const textMark=makeMark("text",{text:participantBox.text,x:startx+width2/2,y:conf6.participantBoxPadding,textBaseline:"top",textAlign:"center",fill:conf6.actorTextColor,...fontConfig,fontWeight:"bold"});boxesGroup.children.push(textMark);}
model3.insert(startx,0,startx+width2,rect.attrs.height);}}
function drawActivationTo(mark,data){const rectAttrs=getBaseNote(theme);safeAssign(rectAttrs,{x:data.startx,y:data.starty,width:data.stopx-data.startx,height:model.verticalPos-data.starty,fill:conf.activationBackground});const rect={type:"rect",class:"activation",attrs:rectAttrs};mark.children.push(rect);}
var getMaxMessageWidthPerActor=function(ir){const{actors,messages}=ir;const maxMessageWidthPerActor={};messages.forEach(function(msg){if(actors[msg.to]&&actors[msg.from]){const actor=actors[msg.to];const{prevActorId,nextActorId}=actor;if(msg.placement===PLACEMENT.LEFTOF&&!prevActorId){return;}
if(msg.placement===PLACEMENT.RIGHTOF&&!actor.nextActorId){return;}
const isNote=msg.placement!==void 0;const isMessage=!isNote;const textFont=isNote?noteFont(conf):messageFont(conf);const wrappedMessage=msg.text;const messageDimensions=calculateTextDimensions(wrappedMessage,textFont);const messageWidth=messageDimensions.width+2*conf.wrapPadding;if(isMessage&&msg.from===nextActorId){maxMessageWidthPerActor[msg.to]=Math.max(maxMessageWidthPerActor[msg.to]||0,messageWidth);}else if(isMessage&&msg.from===prevActorId){maxMessageWidthPerActor[msg.from]=Math.max(maxMessageWidthPerActor[msg.from]||0,messageWidth);}else if(isMessage&&msg.from===msg.to){maxMessageWidthPerActor[msg.from]=Math.max(maxMessageWidthPerActor[msg.from]||0,messageWidth/2);maxMessageWidthPerActor[msg.to]=Math.max(maxMessageWidthPerActor[msg.to]||0,messageWidth/2);}else if(msg.placement===PLACEMENT.RIGHTOF){maxMessageWidthPerActor[msg.from]=Math.max(maxMessageWidthPerActor[msg.from]||0,messageWidth);}else if(msg.placement===PLACEMENT.LEFTOF){maxMessageWidthPerActor[prevActorId]=Math.max(maxMessageWidthPerActor[prevActorId]||0,messageWidth);}else if(msg.placement===PLACEMENT.OVER){if(prevActorId){maxMessageWidthPerActor[prevActorId]=Math.max(maxMessageWidthPerActor[prevActorId]||0,messageWidth/2);}
if(nextActorId){maxMessageWidthPerActor[msg.from]=Math.max(maxMessageWidthPerActor[msg.from]||0,messageWidth/2);}}}});return maxMessageWidthPerActor;};var calculateActorMargins=function(context,actorToMessageWidth){const{ir,model:model3}=context;const{actors}=ir;let maxHeight=0;Object.keys(actors).forEach((prop)=>{const actorAttrs=model3.actorAttrsMap.get(prop)||{};const actor=actors[prop];const actDims=calculateTextDimensions(actor.description,actorFont(conf));actorAttrs.width=actor.wrap?conf.actorWidth:Math.max(conf.actorWidth,actDims.width+2*conf.wrapPadding);actorAttrs.height=actor.wrap?Math.max(actDims.height,conf.actorHeight):conf.actorHeight;maxHeight=Math.max(maxHeight,actorAttrs.height);});for(const actorKey in actorToMessageWidth){const actor=actors[actorKey];const actorAttrs=model3.actorAttrsMap.get(actorKey);if(!actor){continue;}
const nextActorAttrs=model3.actorAttrsMap.get(actor.nextActorId);if(!nextActorAttrs){continue;}
const messageWidth=actorToMessageWidth[actorKey];const actorWidth=messageWidth+conf.actorMargin-actorAttrs.width/2-nextActorAttrs.width/2;actorAttrs.margin=Math.max(actorWidth,conf.actorMargin);}
return{actorHeight:Math.max(maxHeight,conf.actorHeight)};};var buildMessageModel=function(msg){const msgDims=calculateTextDimensions(msg.text,messageFont(conf));let process2=false;if([LINETYPE.SOLID_OPEN,LINETYPE.DOTTED_OPEN,LINETYPE.SOLID,LINETYPE.DOTTED,LINETYPE.SOLID_CROSS,LINETYPE.DOTTED_CROSS,LINETYPE.SOLID_POINT,LINETYPE.DOTTED_POINT].includes(msg.type)){process2=true;}
if(!process2){return{width:msgDims.width,height:msgDims.height,startx:0,starty:0,text:msg.text,type:msg.type,stopx:msgDims.width,stopy:msgDims.height,itemId:msg.itemId};}
const fromBound=activationBounds(msg.from);const toBound=activationBounds(msg.to);const fromIdx=fromBound[0]<=toBound[0]?1:0;const toIdx=fromBound[0]<toBound[0]?0:1;const allBounds=fromBound.concat(toBound);const boundedWidth=Math.abs(toBound[toIdx]-fromBound[fromIdx]);return{width:Math.max(msg.wrap?0:msgDims.width+2*conf.wrapPadding,boundedWidth+2*conf.wrapPadding,conf.actorWidth),height:0,startx:fromBound[fromIdx],stopx:toBound[toIdx],starty:0,stopy:0,text:msg.text,type:msg.type,wrap:msg.wrap,fromBound:Math.min.apply(null,allBounds),toBound:Math.max.apply(null,allBounds),attrs:msg.attrs,itemId:msg.itemId};};var buildNoteModel=function(msg){const fromActorAttr=model.actorAttrsMap.get(msg.from);const toActorAttr=model.actorAttrsMap.get(msg.to);const startx=fromActorAttr.x;const stopx=toActorAttr.x;const shouldWrap=msg.wrap&&msg.text;let textDimensions=calculateTextDimensions(msg.text,noteFont(conf));const noteModel={width:shouldWrap?conf.noteWidth:Math.max(conf.noteWidth,textDimensions.width+2*conf.noteMargin),height:0,startx:fromActorAttr.x,stopx:0,starty:0,stopy:0,text:msg.text};if(msg.placement===PLACEMENT.RIGHTOF){noteModel.width=shouldWrap?Math.max(conf.noteWidth,textDimensions.width):Math.max(fromActorAttr.width/2+toActorAttr.width/2,textDimensions.width+2*conf.noteMargin);noteModel.startx=startx+(fromActorAttr.width+conf.actorMargin)/2;}else if(msg.placement===PLACEMENT.LEFTOF){noteModel.width=shouldWrap?Math.max(conf.noteWidth,textDimensions.width+2*conf.noteMargin):Math.max(fromActorAttr.width/2+toActorAttr.width/2,textDimensions.width+2*conf.noteMargin);noteModel.startx=startx-noteModel.width+(fromActorAttr.width-conf.actorMargin)/2;}else if(msg.to===msg.from){textDimensions=calculateTextDimensions(msg.text,noteFont(conf));noteModel.width=shouldWrap?Math.max(conf.noteWidth,fromActorAttr.width):Math.max(fromActorAttr.width,conf.noteWidth,textDimensions.width+2*conf.noteMargin);noteModel.startx=startx+(fromActorAttr.width-noteModel.width)/2;}else{noteModel.width=Math.abs(startx+fromActorAttr.width/2-(stopx+toActorAttr.width/2))+conf.actorMargin;noteModel.startx=startx<stopx?startx+fromActorAttr.width/2-conf.actorMargin/2:stopx+toActorAttr.width/2-conf.actorMargin/2;}
logger.debug(`NM:[${noteModel.startx},${noteModel.stopx},${noteModel.starty},${noteModel.stopy}:${noteModel.width},${noteModel.height}=${msg.text}]`);return noteModel;};function calcLoopMinWidths(messages){const minWidths={};const messageFontConfig=messageFont(conf);messages.forEach((msg)=>{switch(msg.type){case LINETYPE.LOOP_START:case LINETYPE.ALT_START:case LINETYPE.OPT_START:case LINETYPE.PAR_START:if(!msg.id)
msg.id=makeid(10);const label=GROUP_LABEL_MAP[msg.type];const labelWidth=label?calculateTextDimensions(label,messageFontConfig).width:conf.labelBoxWidth;const titleWidth=calculateTextDimensions(msg.text,messageFontConfig).width;minWidths[msg.id]=labelWidth+titleWidth+2*conf.boxTextMargin;break;}});model.loopMinWidths=minWidths;}
var calculateLoopBounds=function(messages){const loops={};const stack=[];let current;let noteModel;let msgModel;messages.forEach(function(msg){if(!msg.id)
msg.id=makeid(10);switch(msg.type){case LINETYPE.LOOP_START:case LINETYPE.ALT_START:case LINETYPE.OPT_START:case LINETYPE.PAR_START:const minWidth=model.loopMinWidths[msg.id]||0;stack.push({id:msg.id,msg:msg.text,from:Number.MAX_SAFE_INTEGER,to:Number.MIN_SAFE_INTEGER,width:minWidth});break;case LINETYPE.ALT_ELSE:case LINETYPE.PAR_AND:if(msg.text){current=stack[stack.length-1];loops[current.id]=current;loops[msg.id]=current;}
break;case LINETYPE.LOOP_END:case LINETYPE.ALT_END:case LINETYPE.OPT_END:case LINETYPE.PAR_END:current=stack.pop();loops[current.id]=current;break;case LINETYPE.ACTIVE_START:{const actorName=msg.from||msg.to;const actorRect=model.actorAttrsMap.get(actorName);const stackedSize=actorActivations(msg.from?msg.from:msg.to).length;const x2=actorRect.x+actorRect.width/2+(stackedSize-1)*conf.activationWidth/2;const toAdd={startx:x2,stopx:x2+conf.activationWidth,actor:msg.from,starty:0,stopy:0,enabled:true};model.activations.push(toAdd);}
break;case LINETYPE.ACTIVE_END:{const lastActorActivationIdx=model.activations.map((a)=>a.actor).lastIndexOf(msg.from);delete model.activations.splice(lastActorActivationIdx,1)[0];}
break;}
const isNote=msg.placement!==void 0;if(isNote){noteModel=buildNoteModel(msg);model.noteModelMap.set(msg.id,noteModel);stack.forEach((stk)=>{current=stk;current.from=Math.min(current.from,noteModel.startx);current.to=Math.max(current.to,noteModel.startx+noteModel.width);current.width=Math.max(current.width,Math.abs(current.from-current.to))-conf.labelBoxWidth;});}else if(msg.type===LINETYPE.DIVIDER){const dividerModel=buildMessageModel(msg);model.dividerMap.set(msg.id,dividerModel);}else{msgModel=buildMessageModel(msg);model.msgModelMap.set(msg.id,msgModel);if(msgModel.startx&&msgModel.stopx&&stack.length>0){const isZeroWidth=msgModel.startx===msgModel.stopx;stack.forEach((stk)=>{current=stk;if(isZeroWidth){const from=model.actorAttrsMap.get(msg.from);const to=model.actorAttrsMap.get(msg.to);current.from=Math.min(from.x-msgModel.width/2,from.x-from.width/2,current.from);current.to=Math.max(to.x+msgModel.width/2,to.x+from.width/2,current.to);current.width=Math.max(current.width,Math.abs(current.to-current.from))-conf.labelBoxWidth;}else{current.from=Math.min(msgModel.startx,current.from);current.width=Math.max(current.width,msgModel.width);current.to=Math.max(msgModel.stopx,current.to,current.from+current.width);}});}}});logger.debug("Loop type widths:",loops);return loops;};var artist_default=sequenceArtist;var moo=__toESM(require_moo());var LETTER_REGEXP=/[a-zA-Z]/;var isCharLetter=(char)=>LETTER_REGEXP.test(char);function textToCaseInsensitiveRegex(text){const regexSource=text.split("").map((char)=>{if(isCharLetter(char)){return`[${char.toLowerCase()}${char.toUpperCase()}]`;}
return char;});return new RegExp(regexSource.join(""));}
function tv(token){if(token&&"value"in token)
return token.value;return token;}
var VALID_TEXT_REGEXP=/(?:[a-zA-Z0-9_]\p{Unified_Ideograph})+/;var COLOR_REGEXP=/#[a-zA-Z0-9]+/;var MOO_NEWLINE={match:/\n|\r\n/,lineBreaks:true};var COMMENT_LINE_REGEXP=/%%.*/;var L_PAREN_REGEXP=/\(/;var R_PAREN_REGEXP=/\)/;var QUOTED_WORD_REGEXP=/"(?:\\["nr]|[^"])+"/;var CONFIG_DIRECTIVE=/@config/;var configLexerMainState={CONFIG_DIRECTIVE:{match:CONFIG_DIRECTIVE,push:"configStatement"}};var configLexerconfigStatementState={QUOTED_WORD:QUOTED_WORD_REGEXP,L_PAREN:L_PAREN_REGEXP,R_PAREN:{match:R_PAREN_REGEXP,pop:1}};function getQuotedWord(token){const v=tv(token);return v.slice(1,v.length-1).replace(/\\"/g,'"');}
function makeNth(n2){return function(d){return d[n2];};}
function id(d){return d[0];}
var COLOR=/#[a-zA-Z0-9]+/;var PARAM_DIRECTIVE=/@param/;var CONFIG_DIRECTIVE2=/@config/;var L_PAREN=/\(/;var R_PAREN=/\)/;function getTokenValue(token){if(token&&"value"in token)
return token.value;return token;}
function handleConfigOpenCloseStatement(d){const text=d[2].map((v)=>{if(v.type)
return getTokenValue(v);return v;}).join("");try{const v=JSON.parse(text);return{type:"overrideConfig",value:v};}catch(error){return{type:"overrideConfig",error};}}
var COMMENT_LINE=/%%.*/;var _PLACEMENT=[{match:/left\sof/,type:()=>"LEFT_OF"},{match:/right\sof/,type:()=>"RIGHT_OF"},{match:/over/,type:()=>"OVER"}];var lexer=moo.states({main:{NL:MOO_NEWLINE,WS:{match:/ +/,lineBreaks:false},...configLexerMainState,QUOTED_WORD:QUOTED_WORD_REGEXP,NOTE:textToCaseInsensitiveRegex("@note"),START_NOTE:{match:/@start_note\s/,push:"noteState"},BACKQUOTED_TEXT:/`[^`]*`/,SOLID_ARROW:/->>/,DOTTED_ARROW:/-->>/,SOLID_OPEN_ARROW:/->/,DOTTED_OPEN_ARROW:/-->/,SOLID_CROSS:/\-x/,DOTTED_CROSS:/\-\-x/,SOLID_POINT:/\-[\)]/,DOTTED_POINT:/\-\-[\)]/,PLUS:/\+/,MINUS:/-/,COMMA:/,/,COLON:{match:/:/,push:"line"},L_SQ_BRACKET:{match:/\[/},R_SQ_BRACKET:{match:/\]/},L_AN_BRACKET:{match:/\</},R_AN_BRACKET:{match:/\>/},L_PAREN:L_PAREN_REGEXP,R_PAREN:R_PAREN_REGEXP,_PLACEMENT,COLOR:/#[a-zA-Z0-9]+/,COMMENT_LINE:COMMENT_LINE_REGEXP,WORD:{match:VALID_TEXT_REGEXP,fallback:true}},line:{REST_OF_LINE:{match:/[^#\n;]+/,pop:1}},configStatement:{...configLexerconfigStatementState,WORD:{match:VALID_TEXT_REGEXP,fallback:true}},noteState:{_PLACEMENT,END_NOTE:{match:textToCaseInsensitiveRegex("@end_note"),pop:1},NL:MOO_NEWLINE,COMMA:/,/,WORD:{match:VALID_TEXT_REGEXP,fallback:true}}});var yy;function setYY(v){yy=v;}
var grammar={Lexer:lexer,ParserRules:[{"name":"_$ebnf$1","symbols":[]},{"name":"_$ebnf$1","symbols":["_$ebnf$1","wschar"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"_","symbols":["_$ebnf$1"],"postprocess":function(d){return null;}},{"name":"__$ebnf$1","symbols":["wschar"]},{"name":"__$ebnf$1","symbols":["__$ebnf$1","wschar"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"__","symbols":["__$ebnf$1"],"postprocess":function(d){return null;}},{"name":"wschar","symbols":[/[ \t\n\v\f\r]/],"postprocess":id},{"name":"color","symbols":[COLOR],"postprocess":(d)=>tv(d[0])},{"name":"paramStatement","symbols":[PARAM_DIRECTIVE,"__","paramPart"],"postprocess":function(d){return d[2];}},{"name":"paramStatement$ebnf$1","symbols":[]},{"name":"paramStatement$ebnf$1$subexpression$1","symbols":[/[\n]/,"_","paramPart"]},{"name":"paramStatement$ebnf$1","symbols":["paramStatement$ebnf$1","paramStatement$ebnf$1$subexpression$1"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"paramStatement","symbols":[PARAM_DIRECTIVE,"__",{"literal":"{"},"_","paramStatement$ebnf$1",/[\n]/,"_",{"literal":"}"}],"postprocess":function(d){const params=[];d[4].forEach((seg)=>{params.push(seg[2]);});return params;}},{"name":"paramPart$ebnf$1","symbols":[/[a-zA-Z0-9]/]},{"name":"paramPart$ebnf$1","symbols":["paramPart$ebnf$1",/[a-zA-Z0-9]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"paramPart$ebnf$2","symbols":[/[^ \n]/]},{"name":"paramPart$ebnf$2","symbols":["paramPart$ebnf$2",/[^ \n]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"paramPart","symbols":["paramPart$ebnf$1","__","paramPart$ebnf$2"],"postprocess":function(d){const key=d[0].map((v)=>tv(v)).join("");let value=d[2];if(typeof value!=="string")
value=value.map((v)=>tv(v)).join("");return{type:"addParam",key,value};}},{"name":"configStatement$ebnf$1","symbols":[/[^\)]/]},{"name":"configStatement$ebnf$1","symbols":["configStatement$ebnf$1",/[^\)]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"configStatement","symbols":[CONFIG_DIRECTIVE2,{"literal":"("},"configStatement$ebnf$1",{"literal":")"}],"postprocess":handleConfigOpenCloseStatement},{"name":"configOpenCloseStatement$ebnf$1","symbols":[/[^\)]/]},{"name":"configOpenCloseStatement$ebnf$1","symbols":["configOpenCloseStatement$ebnf$1",/[^\)]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"configOpenCloseStatement","symbols":[CONFIG_DIRECTIVE2,L_PAREN,"configOpenCloseStatement$ebnf$1",R_PAREN],"postprocess":handleConfigOpenCloseStatement},{"name":"comment","symbols":[COMMENT_LINE],"postprocess":(d)=>null},{"name":"start","symbols":["__","start"],"postprocess":(d)=>d[1]},{"name":"start","symbols":[{"literal":"sequenceDiagram"},"document"],"postprocess":function(d){return d[1];}},{"name":"document","symbols":[]},{"name":"document","symbols":["document","line"],"postprocess":(d)=>{const r=d[0].concat(d[1]);return r;}},{"name":"line$ebnf$1","symbols":[lexer.has("WS")?{type:"WS"}:WS],"postprocess":id},{"name":"line$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"line","symbols":["line$ebnf$1","statement"],"postprocess":(d)=>{return d[1];}},{"name":"line$ebnf$2","symbols":[lexer.has("WS")?{type:"WS"}:WS],"postprocess":id},{"name":"line$ebnf$2","symbols":[],"postprocess":()=>null},{"name":"line","symbols":["line$ebnf$2",lexer.has("NL")?{type:"NL"}:NL],"postprocess":null},{"name":"statement","symbols":["participantStatement"],"postprocess":id},{"name":"statement$ebnf$1","symbols":["color"],"postprocess":id},{"name":"statement$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"statement$ebnf$2","symbols":[lexer.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD],"postprocess":id},{"name":"statement$ebnf$2","symbols":[],"postprocess":()=>null},{"name":"statement$ebnf$3","symbols":[]},{"name":"statement$ebnf$3","symbols":["statement$ebnf$3","participantStatement"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"statement","symbols":[{"literal":"box"},"statement$ebnf$1","statement$ebnf$2",lexer.has("NL")?{type:"NL"}:NL,"statement$ebnf$3",{"literal":"endbox"},lexer.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const title=d[2]?getQuotedWord(d[2]):null;const background=d[1]?d[1]:null;return{type:"addBox",text:title,children:d[4],background};}},{"name":"statement","symbols":["signal",lexer.has("NL")?{type:"NL"}:NL],"postprocess":id},{"name":"statement$ebnf$4","symbols":[lexer.has("WS")?{type:"WS"}:WS],"postprocess":id},{"name":"statement$ebnf$4","symbols":[],"postprocess":()=>null},{"name":"statement","symbols":[{"literal":"autonumber"},"statement$ebnf$4",lexer.has("NL")?{type:"NL"}:NL],"postprocess":(d)=>yy.enableSequenceNumbers()},{"name":"statement","symbols":[{"literal":"activate"},lexer.has("WS")?{type:"WS"}:WS,"actor",lexer.has("NL")?{type:"NL"}:NL],"postprocess":function(d){return{type:"activeStart",signalType:yy.LINETYPE.ACTIVE_START,actor:d[2]};}},{"name":"statement","symbols":[{"literal":"deactivate"},lexer.has("WS")?{type:"WS"}:WS,"actor",lexer.has("NL")?{type:"NL"}:NL],"postprocess":function(d){return{type:"activeEnd",signalType:yy.LINETYPE.ACTIVE_END,actor:d[2]};}},{"name":"statement","symbols":["noteStatement"],"postprocess":(d)=>{return d[0];}},{"name":"statement","symbols":[{"literal":"title"},"textWithColon",lexer.has("NL")?{type:"NL"}:NL],"postprocess":(d)=>({type:"setTitle",text:d[1]})},{"name":"statement$subexpression$1","symbols":[{"literal":"loop"}]},{"name":"statement$subexpression$1","symbols":[{"literal":"opt"}]},{"name":"statement$ebnf$5","symbols":["color"],"postprocess":id},{"name":"statement$ebnf$5","symbols":[],"postprocess":()=>null},{"name":"statement","symbols":["statement$subexpression$1",lexer.has("WS")?{type:"WS"}:WS,"statement$ebnf$5","words",lexer.has("NL")?{type:"NL"}:NL,"document","_",{"literal":"end"},"_",lexer.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const groupType=tv(d[0][0]);const text=yy.parseMessage(d[3]);const background=d[2]?d[2]:null;const result=[{type:"groupStart",text,groupType,background},d[5],{type:"groupEnd",groupType}];return result;}},{"name":"statement$subexpression$2","symbols":[{"literal":"par"}]},{"name":"statement$ebnf$6","symbols":["color"],"postprocess":id},{"name":"statement$ebnf$6","symbols":[],"postprocess":()=>null},{"name":"statement","symbols":["statement$subexpression$2",lexer.has("WS")?{type:"WS"}:WS,"statement$ebnf$6","words",lexer.has("NL")?{type:"NL"}:NL,"par_sections","_",{"literal":"end"},"_",lexer.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const groupType=tv(d[0][0]);const text=yy.parseMessage(d[3]);const background=d[2]?d[2]:null;const result=[{type:"groupStart",text,groupType,background},d[5],{type:"groupEnd",groupType}];return result;}},{"name":"statement$subexpression$3","symbols":[{"literal":"alt"}]},{"name":"statement$ebnf$7","symbols":["color"],"postprocess":id},{"name":"statement$ebnf$7","symbols":[],"postprocess":()=>null},{"name":"statement","symbols":["statement$subexpression$3",lexer.has("WS")?{type:"WS"}:WS,"statement$ebnf$7","words",lexer.has("NL")?{type:"NL"}:NL,"else_sections","_",{"literal":"end"},"_",lexer.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const groupType=tv(d[0][0]);const text=yy.parseMessage(d[3]);const background=d[2]?d[2]:null;const result=[{type:"groupStart",text,groupType,background},d[5],{type:"groupEnd",groupType}];return result;}},{"name":"statement$ebnf$8$subexpression$1","symbols":[lexer.has("WORD")?{type:"WORD"}:WORD]},{"name":"statement$ebnf$8$subexpression$1","symbols":[lexer.has("WS")?{type:"WS"}:WS]},{"name":"statement$ebnf$8","symbols":["statement$ebnf$8$subexpression$1"]},{"name":"statement$ebnf$8$subexpression$2","symbols":[lexer.has("WORD")?{type:"WORD"}:WORD]},{"name":"statement$ebnf$8$subexpression$2","symbols":[lexer.has("WS")?{type:"WS"}:WS]},{"name":"statement$ebnf$8","symbols":["statement$ebnf$8","statement$ebnf$8$subexpression$2"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"statement","symbols":[{"literal":"=="},lexer.has("WS")?{type:"WS"}:WS,"statement$ebnf$8",lexer.has("WS")?{type:"WS"}:WS,{"literal":"=="},"_",lexer.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const text=d[2].map((o)=>tv(o[0])).join("").trim();return{type:"addDivider",text,signalType:yy.LINETYPE.DIVIDER};}},{"name":"statement","symbols":["paramStatement",lexer.has("NL")?{type:"NL"}:NL]},{"name":"statement","symbols":["configOpenCloseStatement",lexer.has("NL")?{type:"NL"}:NL]},{"name":"statement","symbols":["comment",lexer.has("NL")?{type:"NL"}:NL]},{"name":"participantWord","symbols":[{"literal":"participant"}]},{"name":"classifiableActor","symbols":[lexer.has("L_SQ_BRACKET")?{type:"L_SQ_BRACKET"}:L_SQ_BRACKET,lexer.has("L_AN_BRACKET")?{type:"L_AN_BRACKET"}:L_AN_BRACKET,lexer.has("WORD")?{type:"WORD"}:WORD,lexer.has("R_AN_BRACKET")?{type:"R_AN_BRACKET"}:R_AN_BRACKET,"__","actor",{"literal":"]"}],"postprocess":function(d){const actor=d[5];actor.classifier=tv(d[2]);return actor;}},{"name":"classifiableActor","symbols":["actor"],"postprocess":id},{"name":"participantStatement","symbols":["participantWord",lexer.has("WS")?{type:"WS"}:WS,"classifiableActor",lexer.has("WS")?{type:"WS"}:WS,{"literal":"as"},lexer.has("WS")?{type:"WS"}:WS,lexer.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD,lexer.has("NL")?{type:"NL"}:NL],"postprocess":function(d){d[2].description=yy.parseMessage(getQuotedWord(d[6]));return d[2];}},{"name":"participantStatement","symbols":["participantWord",lexer.has("WS")?{type:"WS"}:WS,"classifiableActor",lexer.has("WS")?{type:"WS"}:WS,{"literal":"as"},lexer.has("WS")?{type:"WS"}:WS,"words",lexer.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const alias=d[6];d[2].description=yy.parseMessage(alias);return d[2];}},{"name":"participantStatement$ebnf$1","symbols":[lexer.has("WS")?{type:"WS"}:WS],"postprocess":id},{"name":"participantStatement$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"participantStatement","symbols":["participantWord",lexer.has("WS")?{type:"WS"}:WS,"classifiableActor","participantStatement$ebnf$1",lexer.has("NL")?{type:"NL"}:NL],"postprocess":function(d){return d[2];}},{"name":"words$ebnf$1$subexpression$1","symbols":[lexer.has("WORD")?{type:"WORD"}:WORD]},{"name":"words$ebnf$1$subexpression$1","symbols":[lexer.has("WS")?{type:"WS"}:WS]},{"name":"words$ebnf$1","symbols":["words$ebnf$1$subexpression$1"]},{"name":"words$ebnf$1$subexpression$2","symbols":[lexer.has("WORD")?{type:"WORD"}:WORD]},{"name":"words$ebnf$1$subexpression$2","symbols":[lexer.has("WS")?{type:"WS"}:WS]},{"name":"words$ebnf$1","symbols":["words$ebnf$1","words$ebnf$1$subexpression$2"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"words","symbols":["words$ebnf$1"],"postprocess":function(d){return d[0].map((a)=>a[0]).map((o)=>tv(o)).join("");}},{"name":"signaltype","symbols":[lexer.has("SOLID_OPEN_ARROW")?{type:"SOLID_OPEN_ARROW"}:SOLID_OPEN_ARROW],"postprocess":(d)=>yy.LINETYPE.SOLID_OPEN},{"name":"signaltype","symbols":[lexer.has("DOTTED_OPEN_ARROW")?{type:"DOTTED_OPEN_ARROW"}:DOTTED_OPEN_ARROW],"postprocess":(d)=>yy.LINETYPE.DOTTED_OPEN},{"name":"signaltype","symbols":[lexer.has("SOLID_ARROW")?{type:"SOLID_ARROW"}:SOLID_ARROW],"postprocess":(d)=>yy.LINETYPE.SOLID},{"name":"signaltype","symbols":[lexer.has("DOTTED_ARROW")?{type:"DOTTED_ARROW"}:DOTTED_ARROW],"postprocess":(d)=>yy.LINETYPE.DOTTED},{"name":"signaltype","symbols":[lexer.has("SOLID_CROSS")?{type:"SOLID_CROSS"}:SOLID_CROSS],"postprocess":(d)=>yy.LINETYPE.SOLID_CROSS},{"name":"signaltype","symbols":[lexer.has("DOTTED_CROSS")?{type:"DOTTED_CROSS"}:DOTTED_CROSS],"postprocess":(d)=>yy.LINETYPE.DOTTED_CROSS},{"name":"signaltype","symbols":[lexer.has("SOLID_POINT")?{type:"SOLID_POINT"}:SOLID_POINT],"postprocess":(d)=>yy.LINETYPE.SOLID_POINT},{"name":"signaltype","symbols":[lexer.has("DOTTED_POINT")?{type:"DOTTED_POINT"}:DOTTED_POINT],"postprocess":(d)=>yy.LINETYPE.DOTTED_POINT},{"name":"signal$subexpression$1","symbols":[lexer.has("PLUS")?{type:"PLUS"}:PLUS]},{"name":"signal$subexpression$1","symbols":[lexer.has("MINUS")?{type:"MINUS"}:MINUS]},{"name":"signal","symbols":["actor","signaltype","signal$subexpression$1","actor","textWithColon"],"postprocess":function(d){const toActor=d[3];const fromActor=d[0];const activeMark=d[2][0];let activeAction;if(activeMark.type==="MINUS"){activeAction={type:"activeEnd",signalType:yy.LINETYPE.ACTIVE_END,actor:fromActor};}else{activeAction={type:"activeStart",signalType:yy.LINETYPE.ACTIVE_START,actor:toActor};}
return[fromActor,toActor,{type:"addSignal",from:fromActor.actor,to:toActor.actor,signalType:d[1],msg:d[4]},activeAction];}},{"name":"signal","symbols":["actor","signaltype","actor","textWithColon"],"postprocess":function(d){const toActor=d[2];return[d[0],toActor,{type:"addSignal",from:d[0].actor,to:toActor.actor,signalType:d[1],msg:d[3]}];}},{"name":"actor","symbols":[lexer.has("WORD")?{type:"WORD"}:WORD],"postprocess":(d)=>{return{type:"addActor",actor:tv(d[0])};}},{"name":"textWithColon","symbols":[lexer.has("COLON")?{type:"COLON"}:COLON,"_",lexer.has("REST_OF_LINE")?{type:"REST_OF_LINE"}:REST_OF_LINE],"postprocess":function(d){return yy.parseMessage(tv(d[2]).trim());}},{"name":"multilineNoteText$ebnf$1","symbols":[]},{"name":"multilineNoteText$ebnf$1$subexpression$1","symbols":[lexer.has("WORD")?{type:"WORD"}:WORD]},{"name":"multilineNoteText$ebnf$1$subexpression$1","symbols":[lexer.has("COMMA")?{type:"COMMA"}:COMMA]},{"name":"multilineNoteText$ebnf$1$subexpression$1","symbols":[lexer.has("NL")?{type:"NL"}:NL]},{"name":"multilineNoteText$ebnf$1","symbols":["multilineNoteText$ebnf$1","multilineNoteText$ebnf$1$subexpression$1"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"multilineNoteText","symbols":["multilineNoteText$ebnf$1",lexer.has("END_NOTE")?{type:"END_NOTE"}:END_NOTE],"postprocess":function(d){const v=d[0].map((l)=>{return l.map((o)=>tv(o));}).join("");return v;}},{"name":"placement","symbols":[lexer.has("LEFT_OF")?{type:"LEFT_OF"}:LEFT_OF],"postprocess":(d)=>yy.PLACEMENT.LEFTOF},{"name":"placement","symbols":[lexer.has("RIGHT_OF")?{type:"RIGHT_OF"}:RIGHT_OF],"postprocess":(d)=>yy.PLACEMENT.RIGHTOF},{"name":"noteStatement$subexpression$1","symbols":[{"literal":"note"}]},{"name":"noteStatement$subexpression$1","symbols":[lexer.has("NOTE")?{type:"NOTE"}:NOTE]},{"name":"noteStatement","symbols":["noteStatement$subexpression$1","placement","actor","textWithColon",lexer.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const actor=d[2].actor.trim();return[actor,{type:"addNote",placement:d[1],actor,text:d[3]}];}},{"name":"noteStatement$subexpression$2","symbols":[{"literal":"note"}]},{"name":"noteStatement$subexpression$2","symbols":[lexer.has("START_NOTE")?{type:"START_NOTE"}:START_NOTE]},{"name":"noteStatement","symbols":["noteStatement$subexpression$2","placement","actor",lexer.has("NL")?{type:"NL"}:NL,"multilineNoteText",lexer.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const message=yy.parseMessage(d[4]);const actor=d[2].actor.trim();return[actor,{type:"addNote",placement:d[1],actor,text:message}];}},{"name":"noteStatement$subexpression$3","symbols":[{"literal":"note"}]},{"name":"noteStatement$subexpression$3","symbols":[lexer.has("NOTE")?{type:"NOTE"}:NOTE]},{"name":"noteStatement","symbols":["noteStatement$subexpression$3",lexer.has("OVER")?{type:"OVER"}:OVER,"actor_pair","textWithColon",lexer.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const actors=[d[2][0].actor.trim(),d[2][1].actor];return[d[2],{type:"addNote",placement:yy.PLACEMENT.OVER,actor:actors,text:d[3]}];}},{"name":"noteStatement$subexpression$4","symbols":[{"literal":"note"}]},{"name":"noteStatement$subexpression$4","symbols":[lexer.has("START_NOTE")?{type:"START_NOTE"}:START_NOTE]},{"name":"noteStatement","symbols":["noteStatement$subexpression$4",lexer.has("OVER")?{type:"OVER"}:OVER,"actor_pair",lexer.has("NL")?{type:"NL"}:NL,"multilineNoteText",lexer.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const actors=[d[2][0].actor.trim(),d[2][1].actor];const message=yy.parseMessage(d[4]);return[d[2],{type:"addNote",placement:yy.PLACEMENT.OVER,actor:actors,text:message}];}},{"name":"actor_pair","symbols":["actor",lexer.has("COMMA")?{type:"COMMA"}:COMMA,"actor"],"postprocess":(d)=>[d[0],d[2]]},{"name":"actor_pair","symbols":["actor"],"postprocess":id},{"name":"else_sections","symbols":["document"]},{"name":"else_sections$ebnf$1","symbols":["color"],"postprocess":id},{"name":"else_sections$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"else_sections","symbols":["document","_",{"literal":"else"},lexer.has("WS")?{type:"WS"}:WS,"else_sections$ebnf$1","words",lexer.has("NL")?{type:"NL"}:NL,"else_sections"],"postprocess":function(d){const background=d[4]?d[4]:null;const text=yy.parseMessage(d[5]);return d[0].concat([{type:"groupStart",groupType:"else",text,signalType:yy.LINETYPE.ALT_ELSE,background},d[7]]);}},{"name":"par_sections","symbols":["document"]},{"name":"par_sections$ebnf$1","symbols":["color"],"postprocess":id},{"name":"par_sections$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"par_sections","symbols":["document","_",{"literal":"and"},lexer.has("WS")?{type:"WS"}:WS,"par_sections$ebnf$1","words",lexer.has("NL")?{type:"NL"}:NL,"par_sections"],"postprocess":function(d){const background=d[4]?d[4]:null;const text=yy.parseMessage(d[5]);return d[0].concat([{type:"groupStart",groupType:"and",text,signalType:yy.LINETYPE.PAR_AND,background},d[7]]);}}],ParserStart:"start",ParserOptions:{skipUnmatchSymbols:[lexer.has("WS")?{type:"WS"}:WS]}};var sequenceDiagram_default=grammar;var import_nearley=__toESM(require_nearley());function genParserWithRules(grammar9,opts={}){return function parse9(text){const parser=new import_nearley.default.Parser(import_nearley.default.Grammar.fromCompiled(grammar9));if(opts.prepare)
opts.prepare();let preparedText=text;preparedText=preparedText.split("\n").filter((line)=>{return line.length>0;}).join("\n");const textToParse=preparedText[preparedText.length-1]!=="\n"?preparedText+"\n":preparedText;parser.feed(textToParse);let results=compact(parser.results);if(opts.dedupeAmbigousResults){if(Array.isArray(results[0])){results=results[0];}}
if(opts.postProcess){results=opts.postProcess(results);}
return results;};}
setYY(db_default);var parse=genParserWithRules(sequenceDiagram_default,{dedupeAmbigousResults:true,postProcess(results){db_default.apply(results);return results;}});var BaseEventRecognizer=class{constructor(){this.rules=[];}
recognize(e,ir){let d;if(e.markPath){for(const m of e.markPath){if(m.itemId){for(const rule of this.rules){if(rule.match(m)){d=rule.createDiagramEvent(e,m,ir);}
if(d)
break;}}}}
return d;}
addPatternRecognizerRule(pattern,createDiagramEvent){const rule={match(m){return pattern.test(m.itemId);},createDiagramEvent};this.rules.push(rule);return this;}};var ACTOR_ITEM_PATTERN=/^actor\-/;var MESSAGE_ITEM_PATTERN=/^message\-/;var createSequenceDiagramEvent=diagramEventMakerFactory("sequence");var eventRecognizer=new BaseEventRecognizer().addPatternRecognizerRule(ACTOR_ITEM_PATTERN,(e,m,ir)=>{const actor=ir.actors[m.itemId.replace(ACTOR_ITEM_PATTERN,"")];return createSequenceDiagramEvent(e,m,m.itemId,"actor",actor);}).addPatternRecognizerRule(MESSAGE_ITEM_PATTERN,(e,m,ir)=>{const message=ir.messages.find((message2)=>message2.itemId===m.itemId);return createSequenceDiagramEvent(e,m,m.itemId,"message",message);});var sequenceDiagram={pattern:/^\s*sequenceDiagram/,parser:{parse(text){parse(text);return db.getDiagramIR();}},artist:artist_default,configKey:"sequence",eventRecognizer,clear(){db.clear();}};var Cardinality;(function(Cardinality2){Cardinality2["ZERO_OR_ONE"]="ZERO_OR_ONE";Cardinality2["ZERO_OR_MORE"]="ZERO_OR_MORE";Cardinality2["ONE_OR_MORE"]="ONE_OR_MORE";Cardinality2["ONLY_ONE"]="ONLY_ONE";Cardinality2["MORE"]="MORE";})(Cardinality||(Cardinality={}));var Identification;(function(Identification2){Identification2["NON_IDENTIFYING"]="NON_IDENTIFYING";Identification2["IDENTIFYING"]="IDENTIFYING";})(Identification||(Identification={}));var ErDb=class extends BaseDb{constructor(){super(...arguments);this.Cardinality=Cardinality;this.Identification=Identification;this.entities={};this.relationships=[];this.inheritances=[];}
addEntity(name){if(!this.entities[name]){this.entities[name]={attributes:[],itemId:`entity-${name}`};}
return this.entities[name];}
addRelationship(entityA,roleA,entityB,relSpec){const itemId=`relationship-${entityA}-${entityB}`;const rel={entityA,roleA,entityB,relSpec,itemId};this.relationships.push(rel);}
addInheritance(sup,sub3){this.inheritances.push({sup,sub:sub3});}
getDiagramIR(){return{...super.getBaseDiagramIR(),entities:this.entities,relationships:this.relationships,inheritances:this.inheritances};}
addTitle(title){this.title=title;}
addAttributes(name,attributes){const entity=this.addEntity(name);entity.attributes.push(...attributes);}
addParam(styleParam){this.configParams.push(styleParam);}
clear(){super.clear();this.entities={};this.relationships=[];this.inheritances=[];this.configParams=[];this.title="";}};var db2=new ErDb();var db_default2=db2;var defaultConfig2={diagramPadding:15,layoutDirection:"TB",ranksep:100,edgesep:80,edgeType:"polyline",useMaxWidth:false,minEntityWidth:80,minEntityHeight:50,entityPaddingX:15,entityPaddingY:15,borderRadius:2,stroke:PALETTE.normalDark,fill:PALETTE.orange,edgeColor:PALETTE.normalDark,attributeFill:"#fffbf9",textColor:PALETTE.normalDark,labelBackground:PALETTE.white,fontSize:14,fontFamily:DEFAULT_FONT_FAMILY};var ER_PARAM_DIRECTIVE_RULES={...getParamRulesFromConfig(defaultConfig2),useMaxWidth:{valueType:"boolean"},layoutDirection:{valueType:"string"},borderRadius:{valueType:"size"},stroke:{valueType:"color"},fill:{valueType:"color"},edgeColor:{valueType:"color"},attributeFill:{valueType:"color"},textColor:{valueType:"color"},labelBackground:{valueType:"color"},fontSize:{valueType:"size"},fontFamily:{valueType:"string"}};var configKey2="er";var configurator2=makeConfigurator({defaultConfig:defaultConfig2,configKey:configKey2,getConfigFromParamDirectives(configParams){return interpreteConfigs(ER_PARAM_DIRECTIVE_RULES,configParams);},getConfigFromTheme(t,conf6){return{stroke:t.primaryBorderColor,fill:t.primaryColor,edgeColor:t.primaryLineColor,textColor:t.textColor,labelBackground:t.canvasBackground||t.background1,attributeFill:t.lightestBackground||conf6.attributeFill};}});var getConf2=configurator2.getConfig;var objectProto$d=Object.prototype;var hasOwnProperty$a=objectProto$d.hasOwnProperty;function baseHas(object,key){return object!=null&&hasOwnProperty$a.call(object,key);}
var isArray=Array.isArray;var freeGlobal=typeof global=="object"&&global&&global.Object===Object&&global;var freeSelf=typeof self=="object"&&self&&self.Object===Object&&self;var root=freeGlobal||freeSelf||Function("return this")();var Symbol2=root.Symbol;var objectProto$c=Object.prototype;var hasOwnProperty$9=objectProto$c.hasOwnProperty;var nativeObjectToString$1=objectProto$c.toString;var symToStringTag$1=Symbol2?Symbol2.toStringTag:void 0;function getRawTag(value){var isOwn=hasOwnProperty$9.call(value,symToStringTag$1),tag2=value[symToStringTag$1];try{value[symToStringTag$1]=void 0;var unmasked=true;}catch(e){}
var result=nativeObjectToString$1.call(value);if(unmasked){if(isOwn){value[symToStringTag$1]=tag2;}else{delete value[symToStringTag$1];}}
return result;}
var objectProto$b=Object.prototype;var nativeObjectToString=objectProto$b.toString;function objectToString(value){return nativeObjectToString.call(value);}
var nullTag="[object Null]";var undefinedTag="[object Undefined]";var symToStringTag=Symbol2?Symbol2.toStringTag:void 0;function baseGetTag(value){if(value==null){return value===void 0?undefinedTag:nullTag;}
return symToStringTag&&symToStringTag in Object(value)?getRawTag(value):objectToString(value);}
function isObjectLike(value){return value!=null&&typeof value=="object";}
var symbolTag$1="[object Symbol]";function isSymbol(value){return typeof value=="symbol"||isObjectLike(value)&&baseGetTag(value)==symbolTag$1;}
var reIsDeepProp=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;var reIsPlainProp=/^\w*$/;function isKey(value,object){if(isArray(value)){return false;}
var type=typeof value;if(type=="number"||type=="symbol"||type=="boolean"||value==null||isSymbol(value)){return true;}
return reIsPlainProp.test(value)||!reIsDeepProp.test(value)||object!=null&&value in Object(object);}
function isObject(value){var type=typeof value;return value!=null&&(type=="object"||type=="function");}
var asyncTag="[object AsyncFunction]";var funcTag$1="[object Function]";var genTag="[object GeneratorFunction]";var proxyTag="[object Proxy]";function isFunction(value){if(!isObject(value)){return false;}
var tag2=baseGetTag(value);return tag2==funcTag$1||tag2==genTag||tag2==asyncTag||tag2==proxyTag;}
var coreJsData=root["__core-js_shared__"];var maskSrcKey=function(){var uid=/[^.]+$/.exec(coreJsData&&coreJsData.keys&&coreJsData.keys.IE_PROTO||"");return uid?"Symbol(src)_1."+uid:"";}();function isMasked(func){return!!maskSrcKey&&maskSrcKey in func;}
var funcProto$1=Function.prototype;var funcToString$1=funcProto$1.toString;function toSource(func){if(func!=null){try{return funcToString$1.call(func);}catch(e){}
try{return func+"";}catch(e){}}
return"";}
var reRegExpChar=/[\\^$.*+?()[\]{}|]/g;var reIsHostCtor=/^\[object .+?Constructor\]$/;var funcProto=Function.prototype;var objectProto$a=Object.prototype;var funcToString=funcProto.toString;var hasOwnProperty$8=objectProto$a.hasOwnProperty;var reIsNative=RegExp("^"+funcToString.call(hasOwnProperty$8).replace(reRegExpChar,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function baseIsNative(value){if(!isObject(value)||isMasked(value)){return false;}
var pattern=isFunction(value)?reIsNative:reIsHostCtor;return pattern.test(toSource(value));}
function getValue(object,key){return object==null?void 0:object[key];}
function getNative(object,key){var value=getValue(object,key);return baseIsNative(value)?value:void 0;}
var nativeCreate=getNative(Object,"create");function hashClear(){this.__data__=nativeCreate?nativeCreate(null):{};this.size=0;}
function hashDelete(key){var result=this.has(key)&&delete this.__data__[key];this.size-=result?1:0;return result;}
var HASH_UNDEFINED$2="__lodash_hash_undefined__";var objectProto$9=Object.prototype;var hasOwnProperty$7=objectProto$9.hasOwnProperty;function hashGet(key){var data=this.__data__;if(nativeCreate){var result=data[key];return result===HASH_UNDEFINED$2?void 0:result;}
return hasOwnProperty$7.call(data,key)?data[key]:void 0;}
var objectProto$8=Object.prototype;var hasOwnProperty$6=objectProto$8.hasOwnProperty;function hashHas(key){var data=this.__data__;return nativeCreate?data[key]!==void 0:hasOwnProperty$6.call(data,key);}
var HASH_UNDEFINED$1="__lodash_hash_undefined__";function hashSet(key,value){var data=this.__data__;this.size+=this.has(key)?0:1;data[key]=nativeCreate&&value===void 0?HASH_UNDEFINED$1:value;return this;}
function Hash(entries){var index2=-1,length3=entries==null?0:entries.length;this.clear();while(++index2<length3){var entry=entries[index2];this.set(entry[0],entry[1]);}}
Hash.prototype.clear=hashClear;Hash.prototype["delete"]=hashDelete;Hash.prototype.get=hashGet;Hash.prototype.has=hashHas;Hash.prototype.set=hashSet;function listCacheClear(){this.__data__=[];this.size=0;}
function eq(value,other){return value===other||value!==value&&other!==other;}
function assocIndexOf(array,key){var length3=array.length;while(length3--){if(eq(array[length3][0],key)){return length3;}}
return-1;}
var arrayProto=Array.prototype;var splice=arrayProto.splice;function listCacheDelete(key){var data=this.__data__,index2=assocIndexOf(data,key);if(index2<0){return false;}
var lastIndex=data.length-1;if(index2==lastIndex){data.pop();}else{splice.call(data,index2,1);}
--this.size;return true;}
function listCacheGet(key){var data=this.__data__,index2=assocIndexOf(data,key);return index2<0?void 0:data[index2][1];}
function listCacheHas(key){return assocIndexOf(this.__data__,key)>-1;}
function listCacheSet(key,value){var data=this.__data__,index2=assocIndexOf(data,key);if(index2<0){++this.size;data.push([key,value]);}else{data[index2][1]=value;}
return this;}
function ListCache(entries){var index2=-1,length3=entries==null?0:entries.length;this.clear();while(++index2<length3){var entry=entries[index2];this.set(entry[0],entry[1]);}}
ListCache.prototype.clear=listCacheClear;ListCache.prototype["delete"]=listCacheDelete;ListCache.prototype.get=listCacheGet;ListCache.prototype.has=listCacheHas;ListCache.prototype.set=listCacheSet;var Map2=getNative(root,"Map");function mapCacheClear(){this.size=0;this.__data__={"hash":new Hash(),"map":new(Map2||ListCache)(),"string":new Hash()};}
function isKeyable(value){var type=typeof value;return type=="string"||type=="number"||type=="symbol"||type=="boolean"?value!=="__proto__":value===null;}
function getMapData(map4,key){var data=map4.__data__;return isKeyable(key)?data[typeof key=="string"?"string":"hash"]:data.map;}
function mapCacheDelete(key){var result=getMapData(this,key)["delete"](key);this.size-=result?1:0;return result;}
function mapCacheGet(key){return getMapData(this,key).get(key);}
function mapCacheHas(key){return getMapData(this,key).has(key);}
function mapCacheSet(key,value){var data=getMapData(this,key),size4=data.size;data.set(key,value);this.size+=data.size==size4?0:1;return this;}
function MapCache(entries){var index2=-1,length3=entries==null?0:entries.length;this.clear();while(++index2<length3){var entry=entries[index2];this.set(entry[0],entry[1]);}}
MapCache.prototype.clear=mapCacheClear;MapCache.prototype["delete"]=mapCacheDelete;MapCache.prototype.get=mapCacheGet;MapCache.prototype.has=mapCacheHas;MapCache.prototype.set=mapCacheSet;var FUNC_ERROR_TEXT="Expected a function";function memoize(func,resolver){if(typeof func!="function"||resolver!=null&&typeof resolver!="function"){throw new TypeError(FUNC_ERROR_TEXT);}
var memoized=function(){var args=arguments,key=resolver?resolver.apply(this,args):args[0],cache2=memoized.cache;if(cache2.has(key)){return cache2.get(key);}
var result=func.apply(this,args);memoized.cache=cache2.set(key,result)||cache2;return result;};memoized.cache=new(memoize.Cache||MapCache)();return memoized;}
memoize.Cache=MapCache;var MAX_MEMOIZE_SIZE=500;function memoizeCapped(func){var result=memoize(func,function(key){if(cache2.size===MAX_MEMOIZE_SIZE){cache2.clear();}
return key;});var cache2=result.cache;return result;}
var rePropName=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;var reEscapeChar=/\\(\\)?/g;var stringToPath=memoizeCapped(function(string){var result=[];if(string.charCodeAt(0)===46){result.push("");}
string.replace(rePropName,function(match,number4,quote,subString){result.push(quote?subString.replace(reEscapeChar,"$1"):number4||match);});return result;});function arrayMap(array,iteratee){var index2=-1,length3=array==null?0:array.length,result=Array(length3);while(++index2<length3){result[index2]=iteratee(array[index2],index2,array);}
return result;}
var INFINITY$2=1/0;var symbolProto$1=Symbol2?Symbol2.prototype:void 0;var symbolToString=symbolProto$1?symbolProto$1.toString:void 0;function baseToString(value){if(typeof value=="string"){return value;}
if(isArray(value)){return arrayMap(value,baseToString)+"";}
if(isSymbol(value)){return symbolToString?symbolToString.call(value):"";}
var result=value+"";return result=="0"&&1/value==-INFINITY$2?"-0":result;}
function toString(value){return value==null?"":baseToString(value);}
function castPath(value,object){if(isArray(value)){return value;}
return isKey(value,object)?[value]:stringToPath(toString(value));}
var argsTag$2="[object Arguments]";function baseIsArguments(value){return isObjectLike(value)&&baseGetTag(value)==argsTag$2;}
var objectProto$7=Object.prototype;var hasOwnProperty$5=objectProto$7.hasOwnProperty;var propertyIsEnumerable$1=objectProto$7.propertyIsEnumerable;var isArguments=baseIsArguments(function(){return arguments;}())?baseIsArguments:function(value){return isObjectLike(value)&&hasOwnProperty$5.call(value,"callee")&&!propertyIsEnumerable$1.call(value,"callee");};var MAX_SAFE_INTEGER$1=9007199254740991;var reIsUint=/^(?:0|[1-9]\d*)$/;function isIndex(value,length3){var type=typeof value;length3=length3==null?MAX_SAFE_INTEGER$1:length3;return!!length3&&(type=="number"||type!="symbol"&&reIsUint.test(value))&&(value>-1&&value%1==0&&value<length3);}
var MAX_SAFE_INTEGER=9007199254740991;function isLength(value){return typeof value=="number"&&value>-1&&value%1==0&&value<=MAX_SAFE_INTEGER;}
var INFINITY$1=1/0;function toKey(value){if(typeof value=="string"||isSymbol(value)){return value;}
var result=value+"";return result=="0"&&1/value==-INFINITY$1?"-0":result;}
function hasPath(object,path4,hasFunc){path4=castPath(path4,object);var index2=-1,length3=path4.length,result=false;while(++index2<length3){var key=toKey(path4[index2]);if(!(result=object!=null&&hasFunc(object,key))){break;}
object=object[key];}
if(result||++index2!=length3){return result;}
length3=object==null?0:object.length;return!!length3&&isLength(length3)&&isIndex(key,length3)&&(isArray(object)||isArguments(object));}
function has(object,path4){return object!=null&&hasPath(object,path4,baseHas);}
function arrayEach(array,iteratee){var index2=-1,length3=array==null?0:array.length;while(++index2<length3){if(iteratee(array[index2],index2,array)===false){break;}}
return array;}
function createBaseFor(fromRight){return function(object,iteratee,keysFunc){var index2=-1,iterable=Object(object),props=keysFunc(object),length3=props.length;while(length3--){var key=props[fromRight?length3:++index2];if(iteratee(iterable[key],key,iterable)===false){break;}}
return object;};}
var baseFor=createBaseFor();function baseTimes(n2,iteratee){var index2=-1,result=Array(n2);while(++index2<n2){result[index2]=iteratee(index2);}
return result;}
function stubFalse(){return false;}
var freeExports$1=typeof exports=="object"&&exports&&!exports.nodeType&&exports;var freeModule$1=freeExports$1&&typeof module=="object"&&module&&!module.nodeType&&module;var moduleExports$1=freeModule$1&&freeModule$1.exports===freeExports$1;var Buffer2=moduleExports$1?root.Buffer:void 0;var nativeIsBuffer=Buffer2?Buffer2.isBuffer:void 0;var isBuffer=nativeIsBuffer||stubFalse;var argsTag$1="[object Arguments]";var arrayTag$1="[object Array]";var boolTag$1="[object Boolean]";var dateTag$1="[object Date]";var errorTag$1="[object Error]";var funcTag="[object Function]";var mapTag$4="[object Map]";var numberTag$1="[object Number]";var objectTag$2="[object Object]";var regexpTag$1="[object RegExp]";var setTag$4="[object Set]";var stringTag$2="[object String]";var weakMapTag$1="[object WeakMap]";var arrayBufferTag$1="[object ArrayBuffer]";var dataViewTag$2="[object DataView]";var float32Tag="[object Float32Array]";var float64Tag="[object Float64Array]";var int8Tag="[object Int8Array]";var int16Tag="[object Int16Array]";var int32Tag="[object Int32Array]";var uint8Tag="[object Uint8Array]";var uint8ClampedTag="[object Uint8ClampedArray]";var uint16Tag="[object Uint16Array]";var uint32Tag="[object Uint32Array]";var typedArrayTags={};typedArrayTags[float32Tag]=typedArrayTags[float64Tag]=typedArrayTags[int8Tag]=typedArrayTags[int16Tag]=typedArrayTags[int32Tag]=typedArrayTags[uint8Tag]=typedArrayTags[uint8ClampedTag]=typedArrayTags[uint16Tag]=typedArrayTags[uint32Tag]=true;typedArrayTags[argsTag$1]=typedArrayTags[arrayTag$1]=typedArrayTags[arrayBufferTag$1]=typedArrayTags[boolTag$1]=typedArrayTags[dataViewTag$2]=typedArrayTags[dateTag$1]=typedArrayTags[errorTag$1]=typedArrayTags[funcTag]=typedArrayTags[mapTag$4]=typedArrayTags[numberTag$1]=typedArrayTags[objectTag$2]=typedArrayTags[regexpTag$1]=typedArrayTags[setTag$4]=typedArrayTags[stringTag$2]=typedArrayTags[weakMapTag$1]=false;function baseIsTypedArray(value){return isObjectLike(value)&&isLength(value.length)&&!!typedArrayTags[baseGetTag(value)];}
function baseUnary(func){return function(value){return func(value);};}
var freeExports=typeof exports=="object"&&exports&&!exports.nodeType&&exports;var freeModule=freeExports&&typeof module=="object"&&module&&!module.nodeType&&module;var moduleExports=freeModule&&freeModule.exports===freeExports;var freeProcess=moduleExports&&freeGlobal.process;var nodeUtil=function(){try{var types=freeModule&&freeModule.require&&freeModule.require("util").types;if(types){return types;}
return freeProcess&&freeProcess.binding&&freeProcess.binding("util");}catch(e){}}();var nodeIsTypedArray=nodeUtil&&nodeUtil.isTypedArray;var isTypedArray=nodeIsTypedArray?baseUnary(nodeIsTypedArray):baseIsTypedArray;var objectProto$6=Object.prototype;var hasOwnProperty$4=objectProto$6.hasOwnProperty;function arrayLikeKeys(value,inherited){var isArr=isArray(value),isArg=!isArr&&isArguments(value),isBuff=!isArr&&!isArg&&isBuffer(value),isType2=!isArr&&!isArg&&!isBuff&&isTypedArray(value),skipIndexes=isArr||isArg||isBuff||isType2,result=skipIndexes?baseTimes(value.length,String):[],length3=result.length;for(var key in value){if((inherited||hasOwnProperty$4.call(value,key))&&!(skipIndexes&&(key=="length"||isBuff&&(key=="offset"||key=="parent")||isType2&&(key=="buffer"||key=="byteLength"||key=="byteOffset")||isIndex(key,length3)))){result.push(key);}}
return result;}
var objectProto$5=Object.prototype;function isPrototype(value){var Ctor=value&&value.constructor,proto=typeof Ctor=="function"&&Ctor.prototype||objectProto$5;return value===proto;}
function overArg(func,transform7){return function(arg){return func(transform7(arg));};}
var nativeKeys=overArg(Object.keys,Object);var objectProto$4=Object.prototype;var hasOwnProperty$3=objectProto$4.hasOwnProperty;function baseKeys(object){if(!isPrototype(object)){return nativeKeys(object);}
var result=[];for(var key in Object(object)){if(hasOwnProperty$3.call(object,key)&&key!="constructor"){result.push(key);}}
return result;}
function isArrayLike(value){return value!=null&&isLength(value.length)&&!isFunction(value);}
function keys(object){return isArrayLike(object)?arrayLikeKeys(object):baseKeys(object);}
function baseForOwn(object,iteratee){return object&&baseFor(object,iteratee,keys);}
function createBaseEach(eachFunc,fromRight){return function(collection,iteratee){if(collection==null){return collection;}
if(!isArrayLike(collection)){return eachFunc(collection,iteratee);}
var length3=collection.length,index2=fromRight?length3:-1,iterable=Object(collection);while(fromRight?index2--:++index2<length3){if(iteratee(iterable[index2],index2,iterable)===false){break;}}
return collection;};}
var baseEach=createBaseEach(baseForOwn);function identity2(value){return value;}
function castFunction(value){return typeof value=="function"?value:identity2;}
function forEach2(collection,iteratee){var func=isArray(collection)?arrayEach:baseEach;return func(collection,castFunction(iteratee));}
var DataView2=getNative(root,"DataView");var Promise$1=getNative(root,"Promise");var Set2=getNative(root,"Set");var WeakMap2=getNative(root,"WeakMap");var mapTag$3="[object Map]";var objectTag$1="[object Object]";var promiseTag="[object Promise]";var setTag$3="[object Set]";var weakMapTag="[object WeakMap]";var dataViewTag$1="[object DataView]";var dataViewCtorString=toSource(DataView2);var mapCtorString=toSource(Map2);var promiseCtorString=toSource(Promise$1);var setCtorString=toSource(Set2);var weakMapCtorString=toSource(WeakMap2);var getTag=baseGetTag;if(DataView2&&getTag(new DataView2(new ArrayBuffer(1)))!=dataViewTag$1||Map2&&getTag(new Map2())!=mapTag$3||Promise$1&&getTag(Promise$1.resolve())!=promiseTag||Set2&&getTag(new Set2())!=setTag$3||WeakMap2&&getTag(new WeakMap2())!=weakMapTag){getTag=function(value){var result=baseGetTag(value),Ctor=result==objectTag$1?value.constructor:void 0,ctorString=Ctor?toSource(Ctor):"";if(ctorString){switch(ctorString){case dataViewCtorString:return dataViewTag$1;case mapCtorString:return mapTag$3;case promiseCtorString:return promiseTag;case setCtorString:return setTag$3;case weakMapCtorString:return weakMapTag;}}
return result;};}
var getTag$1=getTag;var stringTag$1="[object String]";function isString(value){return typeof value=="string"||!isArray(value)&&isObjectLike(value)&&baseGetTag(value)==stringTag$1;}
function baseProperty(key){return function(object){return object==null?void 0:object[key];};}
var asciiSize=baseProperty("length");var rsAstralRange$1="\\ud800-\\udfff";var rsComboMarksRange$1="\\u0300-\\u036f";var reComboHalfMarksRange$1="\\ufe20-\\ufe2f";var rsComboSymbolsRange$1="\\u20d0-\\u20ff";var rsComboRange$1=rsComboMarksRange$1+reComboHalfMarksRange$1+rsComboSymbolsRange$1;var rsVarRange$1="\\ufe0e\\ufe0f";var rsZWJ$1="\\u200d";var reHasUnicode=RegExp("["+rsZWJ$1+rsAstralRange$1+rsComboRange$1+rsVarRange$1+"]");function hasUnicode(string){return reHasUnicode.test(string);}
var rsAstralRange="\\ud800-\\udfff";var rsComboMarksRange="\\u0300-\\u036f";var reComboHalfMarksRange="\\ufe20-\\ufe2f";var rsComboSymbolsRange="\\u20d0-\\u20ff";var rsComboRange=rsComboMarksRange+reComboHalfMarksRange+rsComboSymbolsRange;var rsVarRange="\\ufe0e\\ufe0f";var rsAstral="["+rsAstralRange+"]";var rsCombo="["+rsComboRange+"]";var rsFitz="\\ud83c[\\udffb-\\udfff]";var rsModifier="(?:"+rsCombo+"|"+rsFitz+")";var rsNonAstral="[^"+rsAstralRange+"]";var rsRegional="(?:\\ud83c[\\udde6-\\uddff]){2}";var rsSurrPair="[\\ud800-\\udbff][\\udc00-\\udfff]";var rsZWJ="\\u200d";var reOptMod=rsModifier+"?";var rsOptVar="["+rsVarRange+"]?";var rsOptJoin="(?:"+rsZWJ+"(?:"+[rsNonAstral,rsRegional,rsSurrPair].join("|")+")"+rsOptVar+reOptMod+")*";var rsSeq=rsOptVar+reOptMod+rsOptJoin;var rsSymbol="(?:"+[rsNonAstral+rsCombo+"?",rsCombo,rsRegional,rsSurrPair,rsAstral].join("|")+")";var reUnicode=RegExp(rsFitz+"(?="+rsFitz+")|"+rsSymbol+rsSeq,"g");function unicodeSize(string){var result=reUnicode.lastIndex=0;while(reUnicode.test(string)){++result;}
return result;}
function stringSize(string){return hasUnicode(string)?unicodeSize(string):asciiSize(string);}
var mapTag$2="[object Map]";var setTag$2="[object Set]";function size(collection){if(collection==null){return 0;}
if(isArrayLike(collection)){return isString(collection)?stringSize(collection):collection.length;}
var tag2=getTag$1(collection);if(tag2==mapTag$2||tag2==setTag$2){return collection.size;}
return baseKeys(collection).length;}
function constant(value){return function(){return value;};}
function arrayFilter(array,predicate){var index2=-1,length3=array==null?0:array.length,resIndex=0,result=[];while(++index2<length3){var value=array[index2];if(predicate(value,index2,array)){result[resIndex++]=value;}}
return result;}
function baseFilter(collection,predicate){var result=[];baseEach(collection,function(value,index2,collection2){if(predicate(value,index2,collection2)){result.push(value);}});return result;}
function stackClear(){this.__data__=new ListCache();this.size=0;}
function stackDelete(key){var data=this.__data__,result=data["delete"](key);this.size=data.size;return result;}
function stackGet(key){return this.__data__.get(key);}
function stackHas(key){return this.__data__.has(key);}
var LARGE_ARRAY_SIZE$1=200;function stackSet(key,value){var data=this.__data__;if(data instanceof ListCache){var pairs=data.__data__;if(!Map2||pairs.length<LARGE_ARRAY_SIZE$1-1){pairs.push([key,value]);this.size=++data.size;return this;}
data=this.__data__=new MapCache(pairs);}
data.set(key,value);this.size=data.size;return this;}
function Stack(entries){var data=this.__data__=new ListCache(entries);this.size=data.size;}
Stack.prototype.clear=stackClear;Stack.prototype["delete"]=stackDelete;Stack.prototype.get=stackGet;Stack.prototype.has=stackHas;Stack.prototype.set=stackSet;var HASH_UNDEFINED="__lodash_hash_undefined__";function setCacheAdd(value){this.__data__.set(value,HASH_UNDEFINED);return this;}
function setCacheHas(value){return this.__data__.has(value);}
function SetCache(values4){var index2=-1,length3=values4==null?0:values4.length;this.__data__=new MapCache();while(++index2<length3){this.add(values4[index2]);}}
SetCache.prototype.add=SetCache.prototype.push=setCacheAdd;SetCache.prototype.has=setCacheHas;function arraySome(array,predicate){var index2=-1,length3=array==null?0:array.length;while(++index2<length3){if(predicate(array[index2],index2,array)){return true;}}
return false;}
function cacheHas(cache2,key){return cache2.has(key);}
var COMPARE_PARTIAL_FLAG$5=1;var COMPARE_UNORDERED_FLAG$3=2;function equalArrays(array,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG$5,arrLength=array.length,othLength=other.length;if(arrLength!=othLength&&!(isPartial&&othLength>arrLength)){return false;}
var arrStacked=stack.get(array);var othStacked=stack.get(other);if(arrStacked&&othStacked){return arrStacked==other&&othStacked==array;}
var index2=-1,result=true,seen=bitmask&COMPARE_UNORDERED_FLAG$3?new SetCache():void 0;stack.set(array,other);stack.set(other,array);while(++index2<arrLength){var arrValue=array[index2],othValue=other[index2];if(customizer){var compared=isPartial?customizer(othValue,arrValue,index2,other,array,stack):customizer(arrValue,othValue,index2,array,other,stack);}
if(compared!==void 0){if(compared){continue;}
result=false;break;}
if(seen){if(!arraySome(other,function(othValue2,othIndex){if(!cacheHas(seen,othIndex)&&(arrValue===othValue2||equalFunc(arrValue,othValue2,bitmask,customizer,stack))){return seen.push(othIndex);}})){result=false;break;}}else if(!(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack))){result=false;break;}}
stack["delete"](array);stack["delete"](other);return result;}
var Uint8Array2=root.Uint8Array;function mapToArray(map4){var index2=-1,result=Array(map4.size);map4.forEach(function(value,key){result[++index2]=[key,value];});return result;}
function setToArray(set3){var index2=-1,result=Array(set3.size);set3.forEach(function(value){result[++index2]=value;});return result;}
var COMPARE_PARTIAL_FLAG$4=1;var COMPARE_UNORDERED_FLAG$2=2;var boolTag="[object Boolean]";var dateTag="[object Date]";var errorTag="[object Error]";var mapTag$1="[object Map]";var numberTag="[object Number]";var regexpTag="[object RegExp]";var setTag$1="[object Set]";var stringTag="[object String]";var symbolTag="[object Symbol]";var arrayBufferTag="[object ArrayBuffer]";var dataViewTag="[object DataView]";var symbolProto=Symbol2?Symbol2.prototype:void 0;var symbolValueOf=symbolProto?symbolProto.valueOf:void 0;function equalByTag(object,other,tag2,bitmask,customizer,equalFunc,stack){switch(tag2){case dataViewTag:if(object.byteLength!=other.byteLength||object.byteOffset!=other.byteOffset){return false;}
object=object.buffer;other=other.buffer;case arrayBufferTag:if(object.byteLength!=other.byteLength||!equalFunc(new Uint8Array2(object),new Uint8Array2(other))){return false;}
return true;case boolTag:case dateTag:case numberTag:return eq(+object,+other);case errorTag:return object.name==other.name&&object.message==other.message;case regexpTag:case stringTag:return object==other+"";case mapTag$1:var convert=mapToArray;case setTag$1:var isPartial=bitmask&COMPARE_PARTIAL_FLAG$4;convert||(convert=setToArray);if(object.size!=other.size&&!isPartial){return false;}
var stacked=stack.get(object);if(stacked){return stacked==other;}
bitmask|=COMPARE_UNORDERED_FLAG$2;stack.set(object,other);var result=equalArrays(convert(object),convert(other),bitmask,customizer,equalFunc,stack);stack["delete"](object);return result;case symbolTag:if(symbolValueOf){return symbolValueOf.call(object)==symbolValueOf.call(other);}}
return false;}
function arrayPush(array,values4){var index2=-1,length3=values4.length,offset=array.length;while(++index2<length3){array[offset+index2]=values4[index2];}
return array;}
function baseGetAllKeys(object,keysFunc,symbolsFunc){var result=keysFunc(object);return isArray(object)?result:arrayPush(result,symbolsFunc(object));}
function stubArray(){return[];}
var objectProto$3=Object.prototype;var propertyIsEnumerable=objectProto$3.propertyIsEnumerable;var nativeGetSymbols=Object.getOwnPropertySymbols;var getSymbols=!nativeGetSymbols?stubArray:function(object){if(object==null){return[];}
object=Object(object);return arrayFilter(nativeGetSymbols(object),function(symbol){return propertyIsEnumerable.call(object,symbol);});};function getAllKeys(object){return baseGetAllKeys(object,keys,getSymbols);}
var COMPARE_PARTIAL_FLAG$3=1;var objectProto$2=Object.prototype;var hasOwnProperty$2=objectProto$2.hasOwnProperty;function equalObjects(object,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG$3,objProps=getAllKeys(object),objLength=objProps.length,othProps=getAllKeys(other),othLength=othProps.length;if(objLength!=othLength&&!isPartial){return false;}
var index2=objLength;while(index2--){var key=objProps[index2];if(!(isPartial?key in other:hasOwnProperty$2.call(other,key))){return false;}}
var objStacked=stack.get(object);var othStacked=stack.get(other);if(objStacked&&othStacked){return objStacked==other&&othStacked==object;}
var result=true;stack.set(object,other);stack.set(other,object);var skipCtor=isPartial;while(++index2<objLength){key=objProps[index2];var objValue=object[key],othValue=other[key];if(customizer){var compared=isPartial?customizer(othValue,objValue,key,other,object,stack):customizer(objValue,othValue,key,object,other,stack);}
if(!(compared===void 0?objValue===othValue||equalFunc(objValue,othValue,bitmask,customizer,stack):compared)){result=false;break;}
skipCtor||(skipCtor=key=="constructor");}
if(result&&!skipCtor){var objCtor=object.constructor,othCtor=other.constructor;if(objCtor!=othCtor&&("constructor"in object&&"constructor"in other)&&!(typeof objCtor=="function"&&objCtor instanceof objCtor&&typeof othCtor=="function"&&othCtor instanceof othCtor)){result=false;}}
stack["delete"](object);stack["delete"](other);return result;}
var COMPARE_PARTIAL_FLAG$2=1;var argsTag="[object Arguments]";var arrayTag="[object Array]";var objectTag="[object Object]";var objectProto$1=Object.prototype;var hasOwnProperty$1=objectProto$1.hasOwnProperty;function baseIsEqualDeep(object,other,bitmask,customizer,equalFunc,stack){var objIsArr=isArray(object),othIsArr=isArray(other),objTag=objIsArr?arrayTag:getTag$1(object),othTag=othIsArr?arrayTag:getTag$1(other);objTag=objTag==argsTag?objectTag:objTag;othTag=othTag==argsTag?objectTag:othTag;var objIsObj=objTag==objectTag,othIsObj=othTag==objectTag,isSameTag=objTag==othTag;if(isSameTag&&isBuffer(object)){if(!isBuffer(other)){return false;}
objIsArr=true;objIsObj=false;}
if(isSameTag&&!objIsObj){stack||(stack=new Stack());return objIsArr||isTypedArray(object)?equalArrays(object,other,bitmask,customizer,equalFunc,stack):equalByTag(object,other,objTag,bitmask,customizer,equalFunc,stack);}
if(!(bitmask&COMPARE_PARTIAL_FLAG$2)){var objIsWrapped=objIsObj&&hasOwnProperty$1.call(object,"__wrapped__"),othIsWrapped=othIsObj&&hasOwnProperty$1.call(other,"__wrapped__");if(objIsWrapped||othIsWrapped){var objUnwrapped=objIsWrapped?object.value():object,othUnwrapped=othIsWrapped?other.value():other;stack||(stack=new Stack());return equalFunc(objUnwrapped,othUnwrapped,bitmask,customizer,stack);}}
if(!isSameTag){return false;}
stack||(stack=new Stack());return equalObjects(object,other,bitmask,customizer,equalFunc,stack);}
function baseIsEqual(value,other,bitmask,customizer,stack){if(value===other){return true;}
if(value==null||other==null||!isObjectLike(value)&&!isObjectLike(other)){return value!==value&&other!==other;}
return baseIsEqualDeep(value,other,bitmask,customizer,baseIsEqual,stack);}
var COMPARE_PARTIAL_FLAG$1=1;var COMPARE_UNORDERED_FLAG$1=2;function baseIsMatch(object,source,matchData,customizer){var index2=matchData.length,length3=index2,noCustomizer=!customizer;if(object==null){return!length3;}
object=Object(object);while(index2--){var data=matchData[index2];if(noCustomizer&&data[2]?data[1]!==object[data[0]]:!(data[0]in object)){return false;}}
while(++index2<length3){data=matchData[index2];var key=data[0],objValue=object[key],srcValue=data[1];if(noCustomizer&&data[2]){if(objValue===void 0&&!(key in object)){return false;}}else{var stack=new Stack();if(customizer){var result=customizer(objValue,srcValue,key,object,source,stack);}
if(!(result===void 0?baseIsEqual(srcValue,objValue,COMPARE_PARTIAL_FLAG$1|COMPARE_UNORDERED_FLAG$1,customizer,stack):result)){return false;}}}
return true;}
function isStrictComparable(value){return value===value&&!isObject(value);}
function getMatchData(object){var result=keys(object),length3=result.length;while(length3--){var key=result[length3],value=object[key];result[length3]=[key,value,isStrictComparable(value)];}
return result;}
function matchesStrictComparable(key,srcValue){return function(object){if(object==null){return false;}
return object[key]===srcValue&&(srcValue!==void 0||key in Object(object));};}
function baseMatches(source){var matchData=getMatchData(source);if(matchData.length==1&&matchData[0][2]){return matchesStrictComparable(matchData[0][0],matchData[0][1]);}
return function(object){return object===source||baseIsMatch(object,source,matchData);};}
function baseGet(object,path4){path4=castPath(path4,object);var index2=0,length3=path4.length;while(object!=null&&index2<length3){object=object[toKey(path4[index2++])];}
return index2&&index2==length3?object:void 0;}
function get(object,path4,defaultValue){var result=object==null?void 0:baseGet(object,path4);return result===void 0?defaultValue:result;}
function baseHasIn(object,key){return object!=null&&key in Object(object);}
function hasIn(object,path4){return object!=null&&hasPath(object,path4,baseHasIn);}
var COMPARE_PARTIAL_FLAG=1;var COMPARE_UNORDERED_FLAG=2;function baseMatchesProperty(path4,srcValue){if(isKey(path4)&&isStrictComparable(srcValue)){return matchesStrictComparable(toKey(path4),srcValue);}
return function(object){var objValue=get(object,path4);return objValue===void 0&&objValue===srcValue?hasIn(object,path4):baseIsEqual(srcValue,objValue,COMPARE_PARTIAL_FLAG|COMPARE_UNORDERED_FLAG);};}
function basePropertyDeep(path4){return function(object){return baseGet(object,path4);};}
function property(path4){return isKey(path4)?baseProperty(toKey(path4)):basePropertyDeep(path4);}
function baseIteratee(value){if(typeof value=="function"){return value;}
if(value==null){return identity2;}
if(typeof value=="object"){return isArray(value)?baseMatchesProperty(value[0],value[1]):baseMatches(value);}
return property(value);}
function filter(collection,predicate){var func=isArray(collection)?arrayFilter:baseFilter;return func(collection,baseIteratee(predicate));}
function isUndefined(value){return value===void 0;}
var spreadableSymbol=Symbol2?Symbol2.isConcatSpreadable:void 0;function isFlattenable(value){return isArray(value)||isArguments(value)||!!(spreadableSymbol&&value&&value[spreadableSymbol]);}
function baseFlatten(array,depth,predicate,isStrict,result){var index2=-1,length3=array.length;predicate||(predicate=isFlattenable);result||(result=[]);while(++index2<length3){var value=array[index2];if(depth>0&&predicate(value)){if(depth>1){baseFlatten(value,depth-1,predicate,isStrict,result);}else{arrayPush(result,value);}}else if(!isStrict){result[result.length]=value;}}
return result;}
function apply(func,thisArg,args){switch(args.length){case 0:return func.call(thisArg);case 1:return func.call(thisArg,args[0]);case 2:return func.call(thisArg,args[0],args[1]);case 3:return func.call(thisArg,args[0],args[1],args[2]);}
return func.apply(thisArg,args);}
var nativeMax=Math.max;function overRest(func,start,transform7){start=nativeMax(start===void 0?func.length-1:start,0);return function(){var args=arguments,index2=-1,length3=nativeMax(args.length-start,0),array=Array(length3);while(++index2<length3){array[index2]=args[start+index2];}
index2=-1;var otherArgs=Array(start+1);while(++index2<start){otherArgs[index2]=args[index2];}
otherArgs[start]=transform7(array);return apply(func,this,otherArgs);};}
var defineProperty=function(){try{var func=getNative(Object,"defineProperty");func({},"",{});return func;}catch(e){}}();var baseSetToString=!defineProperty?identity2:function(func,string){return defineProperty(func,"toString",{"configurable":true,"enumerable":false,"value":constant(string),"writable":true});};var HOT_COUNT=800;var HOT_SPAN=16;var nativeNow=Date.now;function shortOut(func){var count=0,lastCalled=0;return function(){var stamp=nativeNow(),remaining=HOT_SPAN-(stamp-lastCalled);lastCalled=stamp;if(remaining>0){if(++count>=HOT_COUNT){return arguments[0];}}else{count=0;}
return func.apply(void 0,arguments);};}
var setToString=shortOut(baseSetToString);function baseRest(func,start){return setToString(overRest(func,start,identity2),func+"");}
function baseFindIndex(array,predicate,fromIndex,fromRight){var length3=array.length,index2=fromIndex+(fromRight?1:-1);while(fromRight?index2--:++index2<length3){if(predicate(array[index2],index2,array)){return index2;}}
return-1;}
function baseIsNaN(value){return value!==value;}
function strictIndexOf(array,value,fromIndex){var index2=fromIndex-1,length3=array.length;while(++index2<length3){if(array[index2]===value){return index2;}}
return-1;}
function baseIndexOf(array,value,fromIndex){return value===value?strictIndexOf(array,value,fromIndex):baseFindIndex(array,baseIsNaN,fromIndex);}
function arrayIncludes(array,value){var length3=array==null?0:array.length;return!!length3&&baseIndexOf(array,value,0)>-1;}
function arrayIncludesWith(array,value,comparator){var index2=-1,length3=array==null?0:array.length;while(++index2<length3){if(comparator(value,array[index2])){return true;}}
return false;}
function noop(){}
var INFINITY=1/0;var createSet=!(Set2&&1/setToArray(new Set2([,-0]))[1]==INFINITY)?noop:function(values4){return new Set2(values4);};var LARGE_ARRAY_SIZE=200;function baseUniq(array,iteratee,comparator){var index2=-1,includes=arrayIncludes,length3=array.length,isCommon=true,result=[],seen=result;if(comparator){isCommon=false;includes=arrayIncludesWith;}else if(length3>=LARGE_ARRAY_SIZE){var set3=iteratee?null:createSet(array);if(set3){return setToArray(set3);}
isCommon=false;includes=cacheHas;seen=new SetCache();}else{seen=iteratee?[]:result;}
outer:while(++index2<length3){var value=array[index2],computed=iteratee?iteratee(value):value;value=comparator||value!==0?value:0;if(isCommon&&computed===computed){var seenIndex=seen.length;while(seenIndex--){if(seen[seenIndex]===computed){continue outer;}}
if(iteratee){seen.push(computed);}
result.push(value);}else if(!includes(seen,computed,comparator)){if(seen!==result){seen.push(computed);}
result.push(value);}}
return result;}
function isArrayLikeObject(value){return isObjectLike(value)&&isArrayLike(value);}
var union=baseRest(function(arrays){return baseUniq(baseFlatten(arrays,1,isArrayLikeObject,true));});var objectCreate=Object.create;var baseCreate=function(){function object(){}
return function(proto){if(!isObject(proto)){return{};}
if(objectCreate){return objectCreate(proto);}
object.prototype=proto;var result=new object();object.prototype=void 0;return result;};}();var getPrototype=overArg(Object.getPrototypeOf,Object);function transform3(object,iteratee,accumulator){var isArr=isArray(object),isArrLike=isArr||isBuffer(object)||isTypedArray(object);iteratee=baseIteratee(iteratee);if(accumulator==null){var Ctor=object&&object.constructor;if(isArrLike){accumulator=isArr?new Ctor():[];}else if(isObject(object)){accumulator=isFunction(Ctor)?baseCreate(getPrototype(object)):{};}else{accumulator={};}}
(isArrLike?arrayEach:baseForOwn)(object,function(value,index2,object2){return iteratee(accumulator,value,index2,object2);});return accumulator;}
function baseMap(collection,iteratee){var index2=-1,result=isArrayLike(collection)?Array(collection.length):[];baseEach(collection,function(value,key,collection2){result[++index2]=iteratee(value,key,collection2);});return result;}
function map(collection,iteratee){var func=isArray(collection)?arrayMap:baseMap;return func(collection,baseIteratee(iteratee));}
function baseValues(object,props){return arrayMap(props,function(key){return object[key];});}
function values(object){return object==null?[]:baseValues(object,keys(object));}
var mapTag="[object Map]";var setTag="[object Set]";var objectProto=Object.prototype;var hasOwnProperty=objectProto.hasOwnProperty;function isEmpty(value){if(value==null){return true;}
if(isArrayLike(value)&&(isArray(value)||typeof value=="string"||typeof value.splice=="function"||isBuffer(value)||isTypedArray(value)||isArguments(value))){return!value.length;}
var tag2=getTag$1(value);if(tag2==mapTag||tag2==setTag){return!value.size;}
if(isPrototype(value)){return!baseKeys(value).length;}
for(var key in value){if(hasOwnProperty.call(value,key)){return false;}}
return true;}
function arrayReduce(array,iteratee,accumulator,initAccum){var index2=-1,length3=array==null?0:array.length;if(initAccum&&length3){accumulator=array[++index2];}
while(++index2<length3){accumulator=iteratee(accumulator,array[index2],index2,array);}
return accumulator;}
function baseReduce(collection,iteratee,accumulator,initAccum,eachFunc){eachFunc(collection,function(value,index2,collection2){accumulator=initAccum?(initAccum=false,value):iteratee(accumulator,value,index2,collection2);});return accumulator;}
function reduce(collection,iteratee,accumulator){var func=isArray(collection)?arrayReduce:baseReduce,initAccum=arguments.length<3;return func(collection,baseIteratee(iteratee),accumulator,initAccum,baseEach);}
var _={has,constant,each:forEach2,filter,isUndefined,union,transform:transform3,size,isArray,map,keys,values,isEmpty,isFunction,reduce};var DEFAULT_EDGE_NAME="\0";var GRAPH_NODE="\0";var EDGE_KEY_DELIM="";function Graph(opts){this._isDirected=_.has(opts,"directed")?opts.directed:true;this._isMultigraph=_.has(opts,"multigraph")?opts.multigraph:false;this._isCompound=_.has(opts,"compound")?opts.compound:false;this._label=void 0;this._defaultNodeLabelFn=_.constant(void 0);this._defaultEdgeLabelFn=_.constant(void 0);this._nodes={};if(this._isCompound){this._parent={};this._children={};this._children[GRAPH_NODE]={};}
this._in={};this._preds={};this._out={};this._sucs={};this._edgeObjs={};this._edgeLabels={};}
Graph.prototype._nodeCount=0;Graph.prototype._edgeCount=0;Graph.prototype.isDirected=function(){return this._isDirected;};Graph.prototype.isMultigraph=function(){return this._isMultigraph;};Graph.prototype.isCompound=function(){return this._isCompound;};Graph.prototype.setGraph=function(label){this._label=label;return this;};Graph.prototype.graph=function(){return this._label;};Graph.prototype.setDefaultNodeLabel=function(newDefault){if(!_.isFunction(newDefault)){newDefault=_.constant(newDefault);}
this._defaultNodeLabelFn=newDefault;return this;};Graph.prototype.nodeCount=function(){return this._nodeCount;};Graph.prototype.nodes=function(){return _.keys(this._nodes);};Graph.prototype.sources=function(){const self2=this;return _.filter(this.nodes(),function(v){return _.isEmpty(self2._in[v]);});};Graph.prototype.sinks=function(){const self2=this;return _.filter(this.nodes(),function(v){return _.isEmpty(self2._out[v]);});};Graph.prototype.setNodes=function(vs,value){const args=arguments;const self2=this;_.each(vs,function(v){if(args.length>1){self2.setNode(v,value);}else{self2.setNode(v);}});return this;};Graph.prototype.setNode=function(v,value){if(_.has(this._nodes,v)){if(arguments.length>1){this._nodes[v]=value;}
return this;}
this._nodes[v]=arguments.length>1?value:this._defaultNodeLabelFn(v);if(this._isCompound){this._parent[v]=GRAPH_NODE;this._children[v]={};this._children[GRAPH_NODE][v]=true;}
this._in[v]={};this._preds[v]={};this._out[v]={};this._sucs[v]={};++this._nodeCount;return this;};Graph.prototype.node=function(v){return this._nodes[v];};Graph.prototype.hasNode=function(v){return _.has(this._nodes,v);};Graph.prototype.removeNode=function(v){const self2=this;if(_.has(this._nodes,v)){const removeEdge=function(e){self2.removeEdge(self2._edgeObjs[e]);};delete this._nodes[v];if(this._isCompound){this._removeFromParentsChildList(v);delete this._parent[v];_.each(this.children(v),function(child){self2.setParent(child);});delete this._children[v];}
_.each(_.keys(this._in[v]),removeEdge);delete this._in[v];delete this._preds[v];_.each(_.keys(this._out[v]),removeEdge);delete this._out[v];delete this._sucs[v];--this._nodeCount;}
return this;};Graph.prototype.setParent=function(v,parent){if(!this._isCompound){throw new Error("Cannot set parent in a non-compound graph");}
if(_.isUndefined(parent)){parent=GRAPH_NODE;}else{parent+="";for(let ancestor=parent;!_.isUndefined(ancestor);ancestor=this.parent(ancestor)){if(ancestor===v){throw new Error("Setting "+parent+" as parent of "+v+" would create a cycle");}}
this.setNode(parent);}
this.setNode(v);this._removeFromParentsChildList(v);this._parent[v]=parent;this._children[parent][v]=true;return this;};Graph.prototype._removeFromParentsChildList=function(v){delete this._children[this._parent[v]][v];};Graph.prototype.parent=function(v){if(this._isCompound){const parent=this._parent[v];if(parent!==GRAPH_NODE){return parent;}}};Graph.prototype.children=function(v){if(_.isUndefined(v)){v=GRAPH_NODE;}
if(this._isCompound){const children=this._children[v];if(children){return _.keys(children);}}else if(v===GRAPH_NODE){return this.nodes();}else if(this.hasNode(v)){return[];}};Graph.prototype.predecessors=function(v){const predsV=this._preds[v];if(predsV){return _.keys(predsV);}};Graph.prototype.successors=function(v){const sucsV=this._sucs[v];if(sucsV){return _.keys(sucsV);}};Graph.prototype.neighbors=function(v){const preds=this.predecessors(v);if(preds){return _.union(preds,this.successors(v));}};Graph.prototype.isLeaf=function(v){let neighbors;if(this.isDirected()){neighbors=this.successors(v);}else{neighbors=this.neighbors(v);}
return neighbors.length===0;};Graph.prototype.filterNodes=function(filter3){const copy4=new this.constructor({directed:this._isDirected,multigraph:this._isMultigraph,compound:this._isCompound});copy4.setGraph(this.graph());const self2=this;_.each(this._nodes,function(value,v){if(filter3(v)){copy4.setNode(v,value);}});_.each(this._edgeObjs,function(e){if(copy4.hasNode(e.v)&&copy4.hasNode(e.w)){copy4.setEdge(e,self2.edge(e));}});const parents={};function findParent(v){const parent=self2.parent(v);if(parent===void 0||copy4.hasNode(parent)){parents[v]=parent;return parent;}else if(parent in parents){return parents[parent];}else{return findParent(parent);}}
if(this._isCompound){_.each(copy4.nodes(),function(v){copy4.setParent(v,findParent(v));});}
return copy4;};Graph.prototype.setDefaultEdgeLabel=function(newDefault){if(!_.isFunction(newDefault)){newDefault=_.constant(newDefault);}
this._defaultEdgeLabelFn=newDefault;return this;};Graph.prototype.edgeCount=function(){return this._edgeCount;};Graph.prototype.edges=function(){return _.values(this._edgeObjs);};Graph.prototype.setPath=function(vs,value){const self2=this;const args=arguments;_.reduce(vs,function(v,w){if(args.length>1){self2.setEdge(v,w,value);}else{self2.setEdge(v,w);}
return w;});return this;};Graph.prototype.setEdge=function(){let v,w,name,value;let valueSpecified=false;const arg0=arguments[0];if(typeof arg0==="object"&&arg0!==null&&"v"in arg0){v=arg0.v;w=arg0.w;name=arg0.name;if(arguments.length===2){value=arguments[1];valueSpecified=true;}}else{v=arg0;w=arguments[1];name=arguments[3];if(arguments.length>2){value=arguments[2];valueSpecified=true;}}
v=""+v;w=""+w;if(!_.isUndefined(name)){name=""+name;}
const e=edgeArgsToId(this._isDirected,v,w,name);if(_.has(this._edgeLabels,e)){if(valueSpecified){this._edgeLabels[e]=value;}
return this;}
if(!_.isUndefined(name)&&!this._isMultigraph){throw new Error("Cannot set a named edge when isMultigraph = false");}
this.setNode(v);this.setNode(w);this._edgeLabels[e]=valueSpecified?value:this._defaultEdgeLabelFn(v,w,name);const edgeObj=edgeArgsToObj(this._isDirected,v,w,name);v=edgeObj.v;w=edgeObj.w;Object.freeze(edgeObj);this._edgeObjs[e]=edgeObj;incrementOrInitEntry(this._preds[w],v);incrementOrInitEntry(this._sucs[v],w);this._in[w][e]=edgeObj;this._out[v][e]=edgeObj;this._edgeCount++;return this;};Graph.prototype.edge=function(v,w,name){const e=arguments.length===1?edgeObjToId(this._isDirected,arguments[0]):edgeArgsToId(this._isDirected,v,w,name);return this._edgeLabels[e];};Graph.prototype.hasEdge=function(v,w,name){const e=arguments.length===1?edgeObjToId(this._isDirected,arguments[0]):edgeArgsToId(this._isDirected,v,w,name);return _.has(this._edgeLabels,e);};Graph.prototype.removeEdge=function(v,w,name){const e=arguments.length===1?edgeObjToId(this._isDirected,arguments[0]):edgeArgsToId(this._isDirected,v,w,name);const edge=this._edgeObjs[e];if(edge){v=edge.v;w=edge.w;delete this._edgeLabels[e];delete this._edgeObjs[e];decrementOrRemoveEntry(this._preds[w],v);decrementOrRemoveEntry(this._sucs[v],w);delete this._in[w][e];delete this._out[v][e];this._edgeCount--;}
return this;};Graph.prototype.inEdges=function(v,u){const inV=this._in[v];if(inV){const edges=_.values(inV);if(!u){return edges;}
return _.filter(edges,function(edge){return edge.v===u;});}};Graph.prototype.outEdges=function(v,w){const outV=this._out[v];if(outV){const edges=_.values(outV);if(!w){return edges;}
return _.filter(edges,function(edge){return edge.w===w;});}};Graph.prototype.nodeEdges=function(v,w){const inEdges=this.inEdges(v,w);if(inEdges){return inEdges.concat(this.outEdges(v,w));}};function incrementOrInitEntry(map4,k){if(map4[k]){map4[k]++;}else{map4[k]=1;}}
function decrementOrRemoveEntry(map4,k){if(!--map4[k]){delete map4[k];}}
function edgeArgsToId(isDirected,v_,w_,name){let v=""+v_;let w=""+w_;if(!isDirected&&v>w){const tmp=v;v=w;w=tmp;}
return v+EDGE_KEY_DELIM+w+EDGE_KEY_DELIM+(_.isUndefined(name)?DEFAULT_EDGE_NAME:name);}
function edgeArgsToObj(isDirected,v_,w_,name){let v=""+v_;let w=""+w_;if(!isDirected&&v>w){const tmp=v;v=w;w=tmp;}
const edgeObj={v,w};if(name){edgeObj.name=name;}
return edgeObj;}
function edgeObjToId(isDirected,edgeObj){return edgeArgsToId(isDirected,edgeObj.v,edgeObj.w,edgeObj.name);}
function PriorityQueue(){this._arr=[];this._keyIndices={};}
PriorityQueue.prototype.size=function(){return this._arr.length;};PriorityQueue.prototype.keys=function(){return this._arr.map(function(x2){return x2.key;});};PriorityQueue.prototype.has=function(key){return _.has(this._keyIndices,key);};PriorityQueue.prototype.priority=function(key){const index2=this._keyIndices[key];if(index2!==void 0){return this._arr[index2].priority;}};PriorityQueue.prototype.min=function(){if(this.size()===0){throw new Error("Queue underflow");}
return this._arr[0].key;};PriorityQueue.prototype.add=function(key,priority){const keyIndices=this._keyIndices;key=String(key);if(!_.has(keyIndices,key)){const arr2=this._arr;const index2=arr2.length;keyIndices[key]=index2;arr2.push({key,priority});this._decrease(index2);return true;}
return false;};PriorityQueue.prototype.removeMin=function(){this._swap(0,this._arr.length-1);const min4=this._arr.pop();delete this._keyIndices[min4.key];this._heapify(0);return min4.key;};PriorityQueue.prototype.decrease=function(key,priority){const index2=this._keyIndices[key];if(priority>this._arr[index2].priority){throw new Error("New priority is greater than current priority. Key: "+key+" Old: "+this._arr[index2].priority+" New: "+priority);}
this._arr[index2].priority=priority;this._decrease(index2);};PriorityQueue.prototype._heapify=function(i2){const arr2=this._arr;const l=2*i2;const r=l+1;let largest=i2;if(l<arr2.length){largest=arr2[l].priority<arr2[largest].priority?l:largest;if(r<arr2.length){largest=arr2[r].priority<arr2[largest].priority?r:largest;}
if(largest!==i2){this._swap(i2,largest);this._heapify(largest);}}};PriorityQueue.prototype._decrease=function(index2){const arr2=this._arr;const priority=arr2[index2].priority;let parent;while(index2!==0){parent=index2>>1;if(arr2[parent].priority<priority){break;}
this._swap(index2,parent);index2=parent;}};PriorityQueue.prototype._swap=function(i2,j){const arr2=this._arr;const keyIndices=this._keyIndices;const origArrI=arr2[i2];const origArrJ=arr2[j];arr2[i2]=origArrJ;arr2[j]=origArrI;keyIndices[origArrJ.key]=i2;keyIndices[origArrI.key]=j;};var DEFAULT_WEIGHT_FUNC$1=_.constant(1);var DEFAULT_WEIGHT_FUNC=_.constant(1);topsort.CycleException=CycleException;function topsort(g){const visited={};const stack={};const results=[];function visit(node2){if(_.has(stack,node2)){throw new CycleException();}
if(!_.has(visited,node2)){stack[node2]=true;visited[node2]=true;_.each(g.predecessors(node2),visit);delete stack[node2];results.push(node2);}}
_.each(g.sinks(),visit);if(_.size(visited)!==g.nodeCount()){throw new CycleException();}
return results;}
function CycleException(){}
CycleException.prototype=new Error();function createLayoutGraph(opts){return new Graph(opts);}
function getGraphBounds(g,opts={}){let left=opts.startLeft||0;let right=0;let top=opts.startTop||0;let bottom=0;g.nodes().forEach((k)=>{const node2=g.node(k);if(!node2)
return;if(opts.filterNode&&!opts.filterNode(node2))
return;left=Math.min(node2.outerLeft||node2.x,left);const width2=node2.outerWidth||node2.width||0;right=Math.max(node2.outerRight||node2.x+width2/2,right);top=Math.min(node2.outerTop||node2.y,top);const height=node2.outerHeight||node2.height||0;bottom=Math.max(node2.outerBottom||node2.y+height/2,bottom);});const graphOpts=g.graph();const marginx=graphOpts.marginx||0;const marginy=graphOpts.marginy||0;return{left,right,top,bottom,width:right-left+marginx,height:bottom-top+marginy};}
function isGraphVertical(g){return g.graph().rankdir==="TB";}
function getGraphSplinesOption(edgeType){if(["polyline","ortho"].includes(edgeType)){return edgeType;}
return"polyline";}
var MARKER_GENERATORS={[Cardinality.ONLY_ONE](){const mark=makeMark("path",{path:"M9,-9 L9,9 M15,-9 L15,9"},{class:"er-marker--only-one"});return mark;},[Cardinality.ZERO_OR_ONE](attrs){const circle=makeMark("circle",{...attrs,fill:"#fff",x:28,y:0,r:6});const path4=makeMark("path",{...attrs,path:"M14,-9 L14,9"});const group={type:"group",class:"er-marker--zero-or-one",children:[circle,path4]};return group;},[Cardinality.ONE_OR_MORE](){const mark=makeMark("path",{path:"M-18,0 Q 0,18 18,0 Q 0,-18 -18,0 M24,-9 L24,9"},{class:"er-marker--one-or-more"});return mark;},[Cardinality.ZERO_OR_MORE](attrs){const circle=makeMark("circle",{...attrs,fill:"#fff",x:28,y:0,r:6});const path4=makeMark("path",{...attrs,path:"M-18,0 Q 0,18 18,0 Q 0,-18 -18,0"});const group={type:"group",class:"er-marker--zero-or-more",children:[circle,path4]};return group;}};function drawMarkerTo(dest,type,rad,attrs){const generator=MARKER_GENERATORS[type];if(!generator)
return;const mark=generator(attrs||{});safeAssign(mark.attrs,attrs||{});const finalMatrix=mat3_exports.create();mat3_exports.translate(finalMatrix,mat3_exports.create(),[dest.x,dest.y]);mat3_exports.rotate(finalMatrix,finalMatrix,rad);mark.matrix=finalMatrix;if(mark.class)
mark.class=`er-marker ${mark.class}`;return mark;}
var TableCell=class _TableCell{constructor(){this.width=0;this.height=0;this.order=0;}
static fromMark(mark,name,opts={}){const cell=new _TableCell();cell.mark=mark;cell.name=name;cell.width=mark.attrs.width;cell.height=mark.attrs.height;Object.assign(cell,opts);if(!("order"in opts)){if(name in CELL_ORDER){cell.order=CELL_ORDER[name];}}
return cell;}};var TableRow=class{constructor(){this.cellMap=new Map();}
addCells(cells){const validCells=cells.filter((o)=>Boolean(o));validCells.forEach((cell)=>{this.cellMap.set(cell.name,cell);});}
getCell(name){return this.cellMap.get(name);}
map(fn){return Array.from(this.cellMap.values()).map(fn);}};var TableBuilder=class{constructor(){this.rows=[];}
addRow(row){this.rows.push(row);}};var CELL_ORDER={key:1,type:2,name:3,comment:4};var pi=Math.PI;var tau=2*pi;var epsilon=1e-6;var tauEpsilon=tau-epsilon;function Path(){this._x0=this._y0=this._x1=this._y1=null;this._="";}
function path(){return new Path();}
Path.prototype=path.prototype={constructor:Path,moveTo:function(x2,y2){this._+="M"+(this._x0=this._x1=+x2)+","+(this._y0=this._y1=+y2);},closePath:function(){if(this._x1!==null){this._x1=this._x0,this._y1=this._y0;this._+="Z";}},lineTo:function(x2,y2){this._+="L"+(this._x1=+x2)+","+(this._y1=+y2);},quadraticCurveTo:function(x1,y1,x2,y2){this._+="Q"+ +x1+","+ +y1+","+(this._x1=+x2)+","+(this._y1=+y2);},bezierCurveTo:function(x1,y1,x2,y2,x3,y3){this._+="C"+ +x1+","+ +y1+","+ +x2+","+ +y2+","+(this._x1=+x3)+","+(this._y1=+y3);},arcTo:function(x1,y1,x2,y2,r){x1=+x1,y1=+y1,x2=+x2,y2=+y2,r=+r;var x0=this._x1,y0=this._y1,x21=x2-x1,y21=y2-y1,x01=x0-x1,y01=y0-y1,l01_2=x01*x01+y01*y01;if(r<0)
throw new Error("negative radius: "+r);if(this._x1===null){this._+="M"+(this._x1=x1)+","+(this._y1=y1);}else if(!(l01_2>epsilon));else if(!(Math.abs(y01*x21-y21*x01)>epsilon)||!r){this._+="L"+(this._x1=x1)+","+(this._y1=y1);}else{var x20=x2-x0,y20=y2-y0,l21_2=x21*x21+y21*y21,l20_2=x20*x20+y20*y20,l21=Math.sqrt(l21_2),l01=Math.sqrt(l01_2),l=r*Math.tan((pi-Math.acos((l21_2+l01_2-l20_2)/(2*l21*l01)))/2),t01=l/l01,t21=l/l21;if(Math.abs(t01-1)>epsilon){this._+="L"+(x1+t01*x01)+","+(y1+t01*y01);}
this._+="A"+r+","+r+",0,0,"+ +(y01*x20>x01*y20)+","+(this._x1=x1+t21*x21)+","+(this._y1=y1+t21*y21);}},arc:function(x2,y2,r,a0,a1,ccw){x2=+x2,y2=+y2,r=+r,ccw=!!ccw;var dx=r*Math.cos(a0),dy=r*Math.sin(a0),x0=x2+dx,y0=y2+dy,cw=1^ccw,da=ccw?a0-a1:a1-a0;if(r<0)
throw new Error("negative radius: "+r);if(this._x1===null){this._+="M"+x0+","+y0;}else if(Math.abs(this._x1-x0)>epsilon||Math.abs(this._y1-y0)>epsilon){this._+="L"+x0+","+y0;}
if(!r)
return;if(da<0)
da=da%tau+tau;if(da>tauEpsilon){this._+="A"+r+","+r+",0,1,"+cw+","+(x2-dx)+","+(y2-dy)+"A"+r+","+r+",0,1,"+cw+","+(this._x1=x0)+","+(this._y1=y0);}else if(da>epsilon){this._+="A"+r+","+r+",0,"+ +(da>=pi)+","+cw+","+(this._x1=x2+r*Math.cos(a1))+","+(this._y1=y2+r*Math.sin(a1));}},rect:function(x2,y2,w,h){this._+="M"+(this._x0=this._x1=+x2)+","+(this._y0=this._y1=+y2)+"h"+ +w+"v"+ +h+"h"+-w+"Z";},toString:function(){return this._;}};var path_default=path;function constant_default(x2){return function constant3(){return x2;};}
var slice=Array.prototype.slice;function array_default(x2){return typeof x2==="object"&&"length"in x2?x2:Array.from(x2);}
function Linear(context){this._context=context;}
Linear.prototype={areaStart:function(){this._line=0;},areaEnd:function(){this._line=NaN;},lineStart:function(){this._point=0;},lineEnd:function(){if(this._line||this._line!==0&&this._point===1)
this._context.closePath();this._line=1-this._line;},point:function(x2,y2){x2=+x2,y2=+y2;switch(this._point){case 0:this._point=1;this._line?this._context.lineTo(x2,y2):this._context.moveTo(x2,y2);break;case 1:this._point=2;default:this._context.lineTo(x2,y2);break;}}};function linear_default(context){return new Linear(context);}
function x(p){return p[0];}
function y(p){return p[1];}
function line_default(x2,y2){var defined=constant_default(true),context=null,curve=linear_default,output=null;x2=typeof x2==="function"?x2:x2===void 0?x:constant_default(x2);y2=typeof y2==="function"?y2:y2===void 0?y:constant_default(y2);function line(data){var i2,n2=(data=array_default(data)).length,d,defined0=false,buffer;if(context==null)
output=curve(buffer=path_default());for(i2=0;i2<=n2;++i2){if(!(i2<n2&&defined(d=data[i2],i2,data))===defined0){if(defined0=!defined0)
output.lineStart();else
output.lineEnd();}
if(defined0)
output.point(+x2(d,i2,data),+y2(d,i2,data));}
if(buffer)
return output=null,buffer+""||null;}
line.x=function(_3){return arguments.length?(x2=typeof _3==="function"?_3:constant_default(+_3),line):x2;};line.y=function(_3){return arguments.length?(y2=typeof _3==="function"?_3:constant_default(+_3),line):y2;};line.defined=function(_3){return arguments.length?(defined=typeof _3==="function"?_3:constant_default(!!_3),line):defined;};line.curve=function(_3){return arguments.length?(curve=_3,context!=null&&(output=curve(context)),line):curve;};line.context=function(_3){return arguments.length?(_3==null?context=output=null:output=curve(context=_3),line):context;};return line;}
function point(that,x2,y2){that._context.bezierCurveTo((2*that._x0+that._x1)/3,(2*that._y0+that._y1)/3,(that._x0+2*that._x1)/3,(that._y0+2*that._y1)/3,(that._x0+4*that._x1+x2)/6,(that._y0+4*that._y1+y2)/6);}
function Basis(context){this._context=context;}
Basis.prototype={areaStart:function(){this._line=0;},areaEnd:function(){this._line=NaN;},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN;this._point=0;},lineEnd:function(){switch(this._point){case 3:point(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1);break;}
if(this._line||this._line!==0&&this._point===1)
this._context.closePath();this._line=1-this._line;},point:function(x2,y2){x2=+x2,y2=+y2;switch(this._point){case 0:this._point=1;this._line?this._context.lineTo(x2,y2):this._context.moveTo(x2,y2);break;case 1:this._point=2;break;case 2:this._point=3;this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:point(this,x2,y2);break;}
this._x0=this._x1,this._x1=x2;this._y0=this._y1,this._y1=y2;}};function basis_default(context){return new Basis(context);}
function getPointsCurvePath(points,factory=basis_default){const pathString=line_default().curve(factory)(points.map((o)=>[o.x,o.y]));return pathString;}
function getPointsLinearPath(points){const[startPoint,...restPoints]=points;return[["M",startPoint.x,startPoint.y],...restPoints.map((point2)=>{return["L",point2.x,point2.y];})];}
function getMedianPoint(points){const len2=points.length;const index2=Math.floor(len2/2);return{index:index2,point:points[index2]};}
var MARK_BOUND_CALCULATORS={rect({attrs}){return{left:attrs.x,right:attrs.x+attrs.width,top:attrs.y,bottom:attrs.y+attrs.height};},circle({attrs}){return{left:attrs.x-attrs.r,right:attrs.x+attrs.r,top:attrs.y-attrs.r,bottom:attrs.y+attrs.r};},ellipse({attrs}){return{left:attrs.cx-attrs.rx,right:attrs.cx+attrs.rx,bottom:attrs.cy-attrs.ry,top:attrs.cy+attrs.ry};},line({attrs}){return{left:Math.min(attrs.x1,attrs.x2),right:Math.max(attrs.x1,attrs.x2),top:Math.min(attrs.y1,attrs.y2),bottom:Math.max(attrs.y1,attrs.y2)};},path(){return makeBounds();}};function calcBound(marks,opts={}){let left=0;let top=0;let right=0;let bottom=0;const allMarks=new Set();if(opts.recursive){let recursiveAddMark=function(m){if(allMarks.has(m))
return;allMarks.add(m);if("children"in m){m.children.forEach((child)=>recursiveAddMark(child));}};marks.forEach((child)=>recursiveAddMark(child));}else{marks.forEach((child)=>allMarks.add(child));}
for(const mark of allMarks.values()){const{type}=mark;const calculator=MARK_BOUND_CALCULATORS[type];let bound={left:null,top:null,right:null,bottom:null};if(calculator){bound=calculator(mark);}else{console.warn("[calcBound] missing calculator",type);}
if(bound.left!==null)
left=Math.min(bound.left,left);if(bound.top!==null)
top=Math.min(bound.top,top);if(bound.right!==null)
right=Math.max(bound.right,right);if(bound.bottom!==null)
bottom=Math.max(bound.bottom,bottom);}
const width2=right-left;const height=bottom-top;return{left,top,right,bottom,width:width2,height};}
function updateBoundsByPoints(bounds,points){points.forEach((p)=>{bounds.left=Math.min(bounds.left,p.x);bounds.right=Math.max(bounds.right,p.x);bounds.top=Math.min(bounds.top,p.y);bounds.bottom=Math.max(bounds.bottom,p.y);bounds.width=bounds.right-bounds.left;bounds.height=bounds.bottom-bounds.top;});return bounds;}
function floorValues(o){for(const k of Object.keys(o)){if(o[k])
o[k]=Math.floor(o[k]);}
return o;}
function arrayEach$1(array,iteratee){var index2=-1,length3=array==null?0:array.length;while(++index2<length3){if(iteratee(array[index2],index2,array)===false){break;}}
return array;}
function createBaseFor$1(fromRight){return function(object,iteratee,keysFunc){var index2=-1,iterable=Object(object),props=keysFunc(object),length3=props.length;while(length3--){var key=props[fromRight?length3:++index2];if(iteratee(iterable[key],key,iterable)===false){break;}}
return object;};}
var baseFor$1=createBaseFor$1();var baseFor$2=baseFor$1;function baseTimes$1(n2,iteratee){var index2=-1,result=Array(n2);while(++index2<n2){result[index2]=iteratee(index2);}
return result;}
var freeGlobal$1=typeof global=="object"&&global&&global.Object===Object&&global;var freeGlobal$2=freeGlobal$1;var freeSelf$1=typeof self=="object"&&self&&self.Object===Object&&self;var root$1=freeGlobal$2||freeSelf$1||Function("return this")();var root$2=root$1;var Symbol$1=root$2.Symbol;var Symbol$2=Symbol$1;var objectProto$t=Object.prototype;var hasOwnProperty$n=objectProto$t.hasOwnProperty;var nativeObjectToString$3=objectProto$t.toString;var symToStringTag$3=Symbol$2?Symbol$2.toStringTag:void 0;function getRawTag$1(value){var isOwn=hasOwnProperty$n.call(value,symToStringTag$3),tag2=value[symToStringTag$3];try{value[symToStringTag$3]=void 0;var unmasked=true;}catch(e){}
var result=nativeObjectToString$3.call(value);if(unmasked){if(isOwn){value[symToStringTag$3]=tag2;}else{delete value[symToStringTag$3];}}
return result;}
var objectProto$s=Object.prototype;var nativeObjectToString$2=objectProto$s.toString;function objectToString$1(value){return nativeObjectToString$2.call(value);}
var nullTag$1="[object Null]";var undefinedTag$1="[object Undefined]";var symToStringTag$2=Symbol$2?Symbol$2.toStringTag:void 0;function baseGetTag$1(value){if(value==null){return value===void 0?undefinedTag$1:nullTag$1;}
return symToStringTag$2&&symToStringTag$2 in Object(value)?getRawTag$1(value):objectToString$1(value);}
function isObjectLike$1(value){return value!=null&&typeof value=="object";}
var argsTag$6="[object Arguments]";function baseIsArguments$1(value){return isObjectLike$1(value)&&baseGetTag$1(value)==argsTag$6;}
var objectProto$r=Object.prototype;var hasOwnProperty$m=objectProto$r.hasOwnProperty;var propertyIsEnumerable$3=objectProto$r.propertyIsEnumerable;var isArguments$1=baseIsArguments$1(function(){return arguments;}())?baseIsArguments$1:function(value){return isObjectLike$1(value)&&hasOwnProperty$m.call(value,"callee")&&!propertyIsEnumerable$3.call(value,"callee");};var isArguments$2=isArguments$1;var isArray$1=Array.isArray;var isArray$2=isArray$1;function stubFalse$1(){return false;}
var freeExports$4=typeof exports=="object"&&exports&&!exports.nodeType&&exports;var freeModule$4=freeExports$4&&typeof module=="object"&&module&&!module.nodeType&&module;var moduleExports$4=freeModule$4&&freeModule$4.exports===freeExports$4;var Buffer$2=moduleExports$4?root$2.Buffer:void 0;var nativeIsBuffer$1=Buffer$2?Buffer$2.isBuffer:void 0;var isBuffer$1=nativeIsBuffer$1||stubFalse$1;var isBuffer$2=isBuffer$1;var MAX_SAFE_INTEGER$3=9007199254740991;var reIsUint$1=/^(?:0|[1-9]\d*)$/;function isIndex$1(value,length3){var type=typeof value;length3=length3==null?MAX_SAFE_INTEGER$3:length3;return!!length3&&(type=="number"||type!="symbol"&&reIsUint$1.test(value))&&(value>-1&&value%1==0&&value<length3);}
var MAX_SAFE_INTEGER$2=9007199254740991;function isLength$1(value){return typeof value=="number"&&value>-1&&value%1==0&&value<=MAX_SAFE_INTEGER$2;}
var argsTag$5="[object Arguments]";var arrayTag$4="[object Array]";var boolTag$5="[object Boolean]";var dateTag$5="[object Date]";var errorTag$4="[object Error]";var funcTag$4="[object Function]";var mapTag$b="[object Map]";var numberTag$5="[object Number]";var objectTag$6="[object Object]";var regexpTag$5="[object RegExp]";var setTag$b="[object Set]";var stringTag$6="[object String]";var weakMapTag$4="[object WeakMap]";var arrayBufferTag$5="[object ArrayBuffer]";var dataViewTag$7="[object DataView]";var float32Tag$3="[object Float32Array]";var float64Tag$3="[object Float64Array]";var int8Tag$3="[object Int8Array]";var int16Tag$3="[object Int16Array]";var int32Tag$3="[object Int32Array]";var uint8Tag$3="[object Uint8Array]";var uint8ClampedTag$3="[object Uint8ClampedArray]";var uint16Tag$3="[object Uint16Array]";var uint32Tag$3="[object Uint32Array]";var typedArrayTags$1={};typedArrayTags$1[float32Tag$3]=typedArrayTags$1[float64Tag$3]=typedArrayTags$1[int8Tag$3]=typedArrayTags$1[int16Tag$3]=typedArrayTags$1[int32Tag$3]=typedArrayTags$1[uint8Tag$3]=typedArrayTags$1[uint8ClampedTag$3]=typedArrayTags$1[uint16Tag$3]=typedArrayTags$1[uint32Tag$3]=true;typedArrayTags$1[argsTag$5]=typedArrayTags$1[arrayTag$4]=typedArrayTags$1[arrayBufferTag$5]=typedArrayTags$1[boolTag$5]=typedArrayTags$1[dataViewTag$7]=typedArrayTags$1[dateTag$5]=typedArrayTags$1[errorTag$4]=typedArrayTags$1[funcTag$4]=typedArrayTags$1[mapTag$b]=typedArrayTags$1[numberTag$5]=typedArrayTags$1[objectTag$6]=typedArrayTags$1[regexpTag$5]=typedArrayTags$1[setTag$b]=typedArrayTags$1[stringTag$6]=typedArrayTags$1[weakMapTag$4]=false;function baseIsTypedArray$1(value){return isObjectLike$1(value)&&isLength$1(value.length)&&!!typedArrayTags$1[baseGetTag$1(value)];}
function baseUnary$1(func){return function(value){return func(value);};}
var freeExports$3=typeof exports=="object"&&exports&&!exports.nodeType&&exports;var freeModule$3=freeExports$3&&typeof module=="object"&&module&&!module.nodeType&&module;var moduleExports$3=freeModule$3&&freeModule$3.exports===freeExports$3;var freeProcess$1=moduleExports$3&&freeGlobal$2.process;var nodeUtil$1=function(){try{var types=freeModule$3&&freeModule$3.require&&freeModule$3.require("util").types;if(types){return types;}
return freeProcess$1&&freeProcess$1.binding&&freeProcess$1.binding("util");}catch(e){}}();var nodeUtil$2=nodeUtil$1;var nodeIsTypedArray$1=nodeUtil$2&&nodeUtil$2.isTypedArray;var isTypedArray$1=nodeIsTypedArray$1?baseUnary$1(nodeIsTypedArray$1):baseIsTypedArray$1;var isTypedArray$2=isTypedArray$1;var objectProto$q=Object.prototype;var hasOwnProperty$l=objectProto$q.hasOwnProperty;function arrayLikeKeys$1(value,inherited){var isArr=isArray$2(value),isArg=!isArr&&isArguments$2(value),isBuff=!isArr&&!isArg&&isBuffer$2(value),isType2=!isArr&&!isArg&&!isBuff&&isTypedArray$2(value),skipIndexes=isArr||isArg||isBuff||isType2,result=skipIndexes?baseTimes$1(value.length,String):[],length3=result.length;for(var key in value){if((inherited||hasOwnProperty$l.call(value,key))&&!(skipIndexes&&(key=="length"||isBuff&&(key=="offset"||key=="parent")||isType2&&(key=="buffer"||key=="byteLength"||key=="byteOffset")||isIndex$1(key,length3)))){result.push(key);}}
return result;}
var objectProto$p=Object.prototype;function isPrototype$1(value){var Ctor=value&&value.constructor,proto=typeof Ctor=="function"&&Ctor.prototype||objectProto$p;return value===proto;}
function overArg$1(func,transform7){return function(arg){return func(transform7(arg));};}
var nativeKeys$1=overArg$1(Object.keys,Object);var nativeKeys$2=nativeKeys$1;var objectProto$o=Object.prototype;var hasOwnProperty$k=objectProto$o.hasOwnProperty;function baseKeys$1(object){if(!isPrototype$1(object)){return nativeKeys$2(object);}
var result=[];for(var key in Object(object)){if(hasOwnProperty$k.call(object,key)&&key!="constructor"){result.push(key);}}
return result;}
function isObject$1(value){var type=typeof value;return value!=null&&(type=="object"||type=="function");}
var asyncTag$1="[object AsyncFunction]";var funcTag$3="[object Function]";var genTag$2="[object GeneratorFunction]";var proxyTag$1="[object Proxy]";function isFunction$1(value){if(!isObject$1(value)){return false;}
var tag2=baseGetTag$1(value);return tag2==funcTag$3||tag2==genTag$2||tag2==asyncTag$1||tag2==proxyTag$1;}
function isArrayLike$1(value){return value!=null&&isLength$1(value.length)&&!isFunction$1(value);}
function keys$1(object){return isArrayLike$1(object)?arrayLikeKeys$1(object):baseKeys$1(object);}
function baseForOwn$1(object,iteratee){return object&&baseFor$2(object,iteratee,keys$1);}
function createBaseEach$1(eachFunc,fromRight){return function(collection,iteratee){if(collection==null){return collection;}
if(!isArrayLike$1(collection)){return eachFunc(collection,iteratee);}
var length3=collection.length,index2=fromRight?length3:-1,iterable=Object(collection);while(fromRight?index2--:++index2<length3){if(iteratee(iterable[index2],index2,iterable)===false){break;}}
return collection;};}
var baseEach$1=createBaseEach$1(baseForOwn$1);var baseEach$2=baseEach$1;function identity$1(value){return value;}
function castFunction$1(value){return typeof value=="function"?value:identity$1;}
function forEach$1(collection,iteratee){var func=isArray$2(collection)?arrayEach$1:baseEach$2;return func(collection,castFunction$1(iteratee));}
var symbolTag$5="[object Symbol]";function isSymbol$1(value){return typeof value=="symbol"||isObjectLike$1(value)&&baseGetTag$1(value)==symbolTag$5;}
var reIsDeepProp$1=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;var reIsPlainProp$1=/^\w*$/;function isKey$1(value,object){if(isArray$2(value)){return false;}
var type=typeof value;if(type=="number"||type=="symbol"||type=="boolean"||value==null||isSymbol$1(value)){return true;}
return reIsPlainProp$1.test(value)||!reIsDeepProp$1.test(value)||object!=null&&value in Object(object);}
var coreJsData$1=root$2["__core-js_shared__"];var coreJsData$2=coreJsData$1;var maskSrcKey$1=function(){var uid=/[^.]+$/.exec(coreJsData$2&&coreJsData$2.keys&&coreJsData$2.keys.IE_PROTO||"");return uid?"Symbol(src)_1."+uid:"";}();function isMasked$1(func){return!!maskSrcKey$1&&maskSrcKey$1 in func;}
var funcProto$3=Function.prototype;var funcToString$3=funcProto$3.toString;function toSource$1(func){if(func!=null){try{return funcToString$3.call(func);}catch(e){}
try{return func+"";}catch(e){}}
return"";}
var reRegExpChar$1=/[\\^$.*+?()[\]{}|]/g;var reIsHostCtor$1=/^\[object .+?Constructor\]$/;var funcProto$2=Function.prototype;var objectProto$n=Object.prototype;var funcToString$2=funcProto$2.toString;var hasOwnProperty$j=objectProto$n.hasOwnProperty;var reIsNative$1=RegExp("^"+funcToString$2.call(hasOwnProperty$j).replace(reRegExpChar$1,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function baseIsNative$1(value){if(!isObject$1(value)||isMasked$1(value)){return false;}
var pattern=isFunction$1(value)?reIsNative$1:reIsHostCtor$1;return pattern.test(toSource$1(value));}
function getValue$1(object,key){return object==null?void 0:object[key];}
function getNative$1(object,key){var value=getValue$1(object,key);return baseIsNative$1(value)?value:void 0;}
var nativeCreate$1=getNative$1(Object,"create");var nativeCreate$2=nativeCreate$1;function hashClear$1(){this.__data__=nativeCreate$2?nativeCreate$2(null):{};this.size=0;}
function hashDelete$1(key){var result=this.has(key)&&delete this.__data__[key];this.size-=result?1:0;return result;}
var HASH_UNDEFINED$5="__lodash_hash_undefined__";var objectProto$m=Object.prototype;var hasOwnProperty$i=objectProto$m.hasOwnProperty;function hashGet$1(key){var data=this.__data__;if(nativeCreate$2){var result=data[key];return result===HASH_UNDEFINED$5?void 0:result;}
return hasOwnProperty$i.call(data,key)?data[key]:void 0;}
var objectProto$l=Object.prototype;var hasOwnProperty$h=objectProto$l.hasOwnProperty;function hashHas$1(key){var data=this.__data__;return nativeCreate$2?data[key]!==void 0:hasOwnProperty$h.call(data,key);}
var HASH_UNDEFINED$4="__lodash_hash_undefined__";function hashSet$1(key,value){var data=this.__data__;this.size+=this.has(key)?0:1;data[key]=nativeCreate$2&&value===void 0?HASH_UNDEFINED$4:value;return this;}
function Hash$1(entries){var index2=-1,length3=entries==null?0:entries.length;this.clear();while(++index2<length3){var entry=entries[index2];this.set(entry[0],entry[1]);}}
Hash$1.prototype.clear=hashClear$1;Hash$1.prototype["delete"]=hashDelete$1;Hash$1.prototype.get=hashGet$1;Hash$1.prototype.has=hashHas$1;Hash$1.prototype.set=hashSet$1;function listCacheClear$1(){this.__data__=[];this.size=0;}
function eq$1(value,other){return value===other||value!==value&&other!==other;}
function assocIndexOf$1(array,key){var length3=array.length;while(length3--){if(eq$1(array[length3][0],key)){return length3;}}
return-1;}
var arrayProto$1=Array.prototype;var splice$1=arrayProto$1.splice;function listCacheDelete$1(key){var data=this.__data__,index2=assocIndexOf$1(data,key);if(index2<0){return false;}
var lastIndex=data.length-1;if(index2==lastIndex){data.pop();}else{splice$1.call(data,index2,1);}
--this.size;return true;}
function listCacheGet$1(key){var data=this.__data__,index2=assocIndexOf$1(data,key);return index2<0?void 0:data[index2][1];}
function listCacheHas$1(key){return assocIndexOf$1(this.__data__,key)>-1;}
function listCacheSet$1(key,value){var data=this.__data__,index2=assocIndexOf$1(data,key);if(index2<0){++this.size;data.push([key,value]);}else{data[index2][1]=value;}
return this;}
function ListCache$1(entries){var index2=-1,length3=entries==null?0:entries.length;this.clear();while(++index2<length3){var entry=entries[index2];this.set(entry[0],entry[1]);}}
ListCache$1.prototype.clear=listCacheClear$1;ListCache$1.prototype["delete"]=listCacheDelete$1;ListCache$1.prototype.get=listCacheGet$1;ListCache$1.prototype.has=listCacheHas$1;ListCache$1.prototype.set=listCacheSet$1;var Map$1=getNative$1(root$2,"Map");var Map$2=Map$1;function mapCacheClear$1(){this.size=0;this.__data__={"hash":new Hash$1(),"map":new(Map$2||ListCache$1)(),"string":new Hash$1()};}
function isKeyable$1(value){var type=typeof value;return type=="string"||type=="number"||type=="symbol"||type=="boolean"?value!=="__proto__":value===null;}
function getMapData$1(map4,key){var data=map4.__data__;return isKeyable$1(key)?data[typeof key=="string"?"string":"hash"]:data.map;}
function mapCacheDelete$1(key){var result=getMapData$1(this,key)["delete"](key);this.size-=result?1:0;return result;}
function mapCacheGet$1(key){return getMapData$1(this,key).get(key);}
function mapCacheHas$1(key){return getMapData$1(this,key).has(key);}
function mapCacheSet$1(key,value){var data=getMapData$1(this,key),size4=data.size;data.set(key,value);this.size+=data.size==size4?0:1;return this;}
function MapCache$1(entries){var index2=-1,length3=entries==null?0:entries.length;this.clear();while(++index2<length3){var entry=entries[index2];this.set(entry[0],entry[1]);}}
MapCache$1.prototype.clear=mapCacheClear$1;MapCache$1.prototype["delete"]=mapCacheDelete$1;MapCache$1.prototype.get=mapCacheGet$1;MapCache$1.prototype.has=mapCacheHas$1;MapCache$1.prototype.set=mapCacheSet$1;var FUNC_ERROR_TEXT$1="Expected a function";function memoize$1(func,resolver){if(typeof func!="function"||resolver!=null&&typeof resolver!="function"){throw new TypeError(FUNC_ERROR_TEXT$1);}
var memoized=function(){var args=arguments,key=resolver?resolver.apply(this,args):args[0],cache2=memoized.cache;if(cache2.has(key)){return cache2.get(key);}
var result=func.apply(this,args);memoized.cache=cache2.set(key,result)||cache2;return result;};memoized.cache=new(memoize$1.Cache||MapCache$1)();return memoized;}
memoize$1.Cache=MapCache$1;var MAX_MEMOIZE_SIZE$1=500;function memoizeCapped$1(func){var result=memoize$1(func,function(key){if(cache2.size===MAX_MEMOIZE_SIZE$1){cache2.clear();}
return key;});var cache2=result.cache;return result;}
var rePropName$1=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;var reEscapeChar$1=/\\(\\)?/g;var stringToPath$1=memoizeCapped$1(function(string){var result=[];if(string.charCodeAt(0)===46){result.push("");}
string.replace(rePropName$1,function(match,number4,quote,subString){result.push(quote?subString.replace(reEscapeChar$1,"$1"):number4||match);});return result;});var stringToPath$2=stringToPath$1;function arrayMap$1(array,iteratee){var index2=-1,length3=array==null?0:array.length,result=Array(length3);while(++index2<length3){result[index2]=iteratee(array[index2],index2,array);}
return result;}
var INFINITY$5=1/0;var symbolProto$4=Symbol$2?Symbol$2.prototype:void 0;var symbolToString$1=symbolProto$4?symbolProto$4.toString:void 0;function baseToString$1(value){if(typeof value=="string"){return value;}
if(isArray$2(value)){return arrayMap$1(value,baseToString$1)+"";}
if(isSymbol$1(value)){return symbolToString$1?symbolToString$1.call(value):"";}
var result=value+"";return result=="0"&&1/value==-INFINITY$5?"-0":result;}
function toString$1(value){return value==null?"":baseToString$1(value);}
function castPath$1(value,object){if(isArray$2(value)){return value;}
return isKey$1(value,object)?[value]:stringToPath$2(toString$1(value));}
var INFINITY$4=1/0;function toKey$1(value){if(typeof value=="string"||isSymbol$1(value)){return value;}
var result=value+"";return result=="0"&&1/value==-INFINITY$4?"-0":result;}
function baseGet$1(object,path4){path4=castPath$1(path4,object);var index2=0,length3=path4.length;while(object!=null&&index2<length3){object=object[toKey$1(path4[index2++])];}
return index2&&index2==length3?object:void 0;}
var defineProperty$1=function(){try{var func=getNative$1(Object,"defineProperty");func({},"",{});return func;}catch(e){}}();var defineProperty$2=defineProperty$1;function baseAssignValue(object,key,value){if(key=="__proto__"&&defineProperty$2){defineProperty$2(object,key,{"configurable":true,"enumerable":true,"value":value,"writable":true});}else{object[key]=value;}}
var objectProto$k=Object.prototype;var hasOwnProperty$g=objectProto$k.hasOwnProperty;function assignValue(object,key,value){var objValue=object[key];if(!(hasOwnProperty$g.call(object,key)&&eq$1(objValue,value))||value===void 0&&!(key in object)){baseAssignValue(object,key,value);}}
function baseSet(object,path4,value,customizer){if(!isObject$1(object)){return object;}
path4=castPath$1(path4,object);var index2=-1,length3=path4.length,lastIndex=length3-1,nested=object;while(nested!=null&&++index2<length3){var key=toKey$1(path4[index2]),newValue=value;if(key==="__proto__"||key==="constructor"||key==="prototype"){return object;}
if(index2!=lastIndex){var objValue=nested[key];newValue=customizer?customizer(objValue,key,nested):void 0;if(newValue===void 0){newValue=isObject$1(objValue)?objValue:isIndex$1(path4[index2+1])?[]:{};}}
assignValue(nested,key,newValue);nested=nested[key];}
return object;}
function basePickBy(object,paths,predicate){var index2=-1,length3=paths.length,result={};while(++index2<length3){var path4=paths[index2],value=baseGet$1(object,path4);if(predicate(value,path4)){baseSet(result,castPath$1(path4,object),value);}}
return result;}
function baseHasIn$1(object,key){return object!=null&&key in Object(object);}
function hasPath$1(object,path4,hasFunc){path4=castPath$1(path4,object);var index2=-1,length3=path4.length,result=false;while(++index2<length3){var key=toKey$1(path4[index2]);if(!(result=object!=null&&hasFunc(object,key))){break;}
object=object[key];}
if(result||++index2!=length3){return result;}
length3=object==null?0:object.length;return!!length3&&isLength$1(length3)&&isIndex$1(key,length3)&&(isArray$2(object)||isArguments$2(object));}
function hasIn$1(object,path4){return object!=null&&hasPath$1(object,path4,baseHasIn$1);}
function basePick(object,paths){return basePickBy(object,paths,function(value,path4){return hasIn$1(object,path4);});}
function arrayPush$1(array,values4){var index2=-1,length3=values4.length,offset=array.length;while(++index2<length3){array[offset+index2]=values4[index2];}
return array;}
var spreadableSymbol$1=Symbol$2?Symbol$2.isConcatSpreadable:void 0;function isFlattenable$1(value){return isArray$2(value)||isArguments$2(value)||!!(spreadableSymbol$1&&value&&value[spreadableSymbol$1]);}
function baseFlatten$1(array,depth,predicate,isStrict,result){var index2=-1,length3=array.length;predicate||(predicate=isFlattenable$1);result||(result=[]);while(++index2<length3){var value=array[index2];if(depth>0&&predicate(value)){if(depth>1){baseFlatten$1(value,depth-1,predicate,isStrict,result);}else{arrayPush$1(result,value);}}else if(!isStrict){result[result.length]=value;}}
return result;}
function flatten(array){var length3=array==null?0:array.length;return length3?baseFlatten$1(array,1):[];}
function apply$1(func,thisArg,args){switch(args.length){case 0:return func.call(thisArg);case 1:return func.call(thisArg,args[0]);case 2:return func.call(thisArg,args[0],args[1]);case 3:return func.call(thisArg,args[0],args[1],args[2]);}
return func.apply(thisArg,args);}
var nativeMax$3=Math.max;function overRest$1(func,start,transform7){start=nativeMax$3(start===void 0?func.length-1:start,0);return function(){var args=arguments,index2=-1,length3=nativeMax$3(args.length-start,0),array=Array(length3);while(++index2<length3){array[index2]=args[start+index2];}
index2=-1;var otherArgs=Array(start+1);while(++index2<start){otherArgs[index2]=args[index2];}
otherArgs[start]=transform7(array);return apply$1(func,this,otherArgs);};}
function constant$1(value){return function(){return value;};}
var baseSetToString$1=!defineProperty$2?identity$1:function(func,string){return defineProperty$2(func,"toString",{"configurable":true,"enumerable":false,"value":constant$1(string),"writable":true});};var baseSetToString$2=baseSetToString$1;var HOT_COUNT$1=800;var HOT_SPAN$1=16;var nativeNow$1=Date.now;function shortOut$1(func){var count=0,lastCalled=0;return function(){var stamp=nativeNow$1(),remaining=HOT_SPAN$1-(stamp-lastCalled);lastCalled=stamp;if(remaining>0){if(++count>=HOT_COUNT$1){return arguments[0];}}else{count=0;}
return func.apply(void 0,arguments);};}
var setToString$1=shortOut$1(baseSetToString$2);var setToString$2=setToString$1;function flatRest(func){return setToString$2(overRest$1(func,void 0,flatten),func+"");}
var pick2=flatRest(function(object,paths){return object==null?{}:basePick(object,paths);});var pick$1=pick2;function baseRest$1(func,start){return setToString$2(overRest$1(func,start,identity$1),func+"");}
function isIterateeCall(value,index2,object){if(!isObject$1(object)){return false;}
var type=typeof index2;if(type=="number"?isArrayLike$1(object)&&isIndex$1(index2,object.length):type=="string"&&index2 in object){return eq$1(object[index2],value);}
return false;}
function nativeKeysIn(object){var result=[];if(object!=null){for(var key in Object(object)){result.push(key);}}
return result;}
var objectProto$j=Object.prototype;var hasOwnProperty$f=objectProto$j.hasOwnProperty;function baseKeysIn(object){if(!isObject$1(object)){return nativeKeysIn(object);}
var isProto=isPrototype$1(object),result=[];for(var key in object){if(!(key=="constructor"&&(isProto||!hasOwnProperty$f.call(object,key)))){result.push(key);}}
return result;}
function keysIn(object){return isArrayLike$1(object)?arrayLikeKeys$1(object,true):baseKeysIn(object);}
var objectProto$i=Object.prototype;var hasOwnProperty$e=objectProto$i.hasOwnProperty;var defaults=baseRest$1(function(object,sources){object=Object(object);var index2=-1;var length3=sources.length;var guard=length3>2?sources[2]:void 0;if(guard&&isIterateeCall(sources[0],sources[1],guard)){length3=1;}
while(++index2<length3){var source=sources[index2];var props=keysIn(source);var propsIndex=-1;var propsLength=props.length;while(++propsIndex<propsLength){var key=props[propsIndex];var value=object[key];if(value===void 0||eq$1(value,objectProto$i[key])&&!hasOwnProperty$e.call(object,key)){object[key]=source[key];}}}
return object;});var defaults$1=defaults;function stackClear$1(){this.__data__=new ListCache$1();this.size=0;}
function stackDelete$1(key){var data=this.__data__,result=data["delete"](key);this.size=data.size;return result;}
function stackGet$1(key){return this.__data__.get(key);}
function stackHas$1(key){return this.__data__.has(key);}
var LARGE_ARRAY_SIZE$2=200;function stackSet$1(key,value){var data=this.__data__;if(data instanceof ListCache$1){var pairs=data.__data__;if(!Map$2||pairs.length<LARGE_ARRAY_SIZE$2-1){pairs.push([key,value]);this.size=++data.size;return this;}
data=this.__data__=new MapCache$1(pairs);}
data.set(key,value);this.size=data.size;return this;}
function Stack$1(entries){var data=this.__data__=new ListCache$1(entries);this.size=data.size;}
Stack$1.prototype.clear=stackClear$1;Stack$1.prototype["delete"]=stackDelete$1;Stack$1.prototype.get=stackGet$1;Stack$1.prototype.has=stackHas$1;Stack$1.prototype.set=stackSet$1;var HASH_UNDEFINED$3="__lodash_hash_undefined__";function setCacheAdd$1(value){this.__data__.set(value,HASH_UNDEFINED$3);return this;}
function setCacheHas$1(value){return this.__data__.has(value);}
function SetCache$1(values4){var index2=-1,length3=values4==null?0:values4.length;this.__data__=new MapCache$1();while(++index2<length3){this.add(values4[index2]);}}
SetCache$1.prototype.add=SetCache$1.prototype.push=setCacheAdd$1;SetCache$1.prototype.has=setCacheHas$1;function arraySome$1(array,predicate){var index2=-1,length3=array==null?0:array.length;while(++index2<length3){if(predicate(array[index2],index2,array)){return true;}}
return false;}
function cacheHas$1(cache2,key){return cache2.has(key);}
var COMPARE_PARTIAL_FLAG$b=1;var COMPARE_UNORDERED_FLAG$7=2;function equalArrays$1(array,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG$b,arrLength=array.length,othLength=other.length;if(arrLength!=othLength&&!(isPartial&&othLength>arrLength)){return false;}
var arrStacked=stack.get(array);var othStacked=stack.get(other);if(arrStacked&&othStacked){return arrStacked==other&&othStacked==array;}
var index2=-1,result=true,seen=bitmask&COMPARE_UNORDERED_FLAG$7?new SetCache$1():void 0;stack.set(array,other);stack.set(other,array);while(++index2<arrLength){var arrValue=array[index2],othValue=other[index2];if(customizer){var compared=isPartial?customizer(othValue,arrValue,index2,other,array,stack):customizer(arrValue,othValue,index2,array,other,stack);}
if(compared!==void 0){if(compared){continue;}
result=false;break;}
if(seen){if(!arraySome$1(other,function(othValue2,othIndex){if(!cacheHas$1(seen,othIndex)&&(arrValue===othValue2||equalFunc(arrValue,othValue2,bitmask,customizer,stack))){return seen.push(othIndex);}})){result=false;break;}}else if(!(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack))){result=false;break;}}
stack["delete"](array);stack["delete"](other);return result;}
var Uint8Array$1=root$2.Uint8Array;var Uint8Array$2=Uint8Array$1;function mapToArray$1(map4){var index2=-1,result=Array(map4.size);map4.forEach(function(value,key){result[++index2]=[key,value];});return result;}
function setToArray$1(set3){var index2=-1,result=Array(set3.size);set3.forEach(function(value){result[++index2]=value;});return result;}
var COMPARE_PARTIAL_FLAG$a=1;var COMPARE_UNORDERED_FLAG$6=2;var boolTag$4="[object Boolean]";var dateTag$4="[object Date]";var errorTag$3="[object Error]";var mapTag$a="[object Map]";var numberTag$4="[object Number]";var regexpTag$4="[object RegExp]";var setTag$a="[object Set]";var stringTag$5="[object String]";var symbolTag$4="[object Symbol]";var arrayBufferTag$4="[object ArrayBuffer]";var dataViewTag$6="[object DataView]";var symbolProto$3=Symbol$2?Symbol$2.prototype:void 0;var symbolValueOf$2=symbolProto$3?symbolProto$3.valueOf:void 0;function equalByTag$1(object,other,tag2,bitmask,customizer,equalFunc,stack){switch(tag2){case dataViewTag$6:if(object.byteLength!=other.byteLength||object.byteOffset!=other.byteOffset){return false;}
object=object.buffer;other=other.buffer;case arrayBufferTag$4:if(object.byteLength!=other.byteLength||!equalFunc(new Uint8Array$2(object),new Uint8Array$2(other))){return false;}
return true;case boolTag$4:case dateTag$4:case numberTag$4:return eq$1(+object,+other);case errorTag$3:return object.name==other.name&&object.message==other.message;case regexpTag$4:case stringTag$5:return object==other+"";case mapTag$a:var convert=mapToArray$1;case setTag$a:var isPartial=bitmask&COMPARE_PARTIAL_FLAG$a;convert||(convert=setToArray$1);if(object.size!=other.size&&!isPartial){return false;}
var stacked=stack.get(object);if(stacked){return stacked==other;}
bitmask|=COMPARE_UNORDERED_FLAG$6;stack.set(object,other);var result=equalArrays$1(convert(object),convert(other),bitmask,customizer,equalFunc,stack);stack["delete"](object);return result;case symbolTag$4:if(symbolValueOf$2){return symbolValueOf$2.call(object)==symbolValueOf$2.call(other);}}
return false;}
function baseGetAllKeys$1(object,keysFunc,symbolsFunc){var result=keysFunc(object);return isArray$2(object)?result:arrayPush$1(result,symbolsFunc(object));}
function arrayFilter$1(array,predicate){var index2=-1,length3=array==null?0:array.length,resIndex=0,result=[];while(++index2<length3){var value=array[index2];if(predicate(value,index2,array)){result[resIndex++]=value;}}
return result;}
function stubArray$1(){return[];}
var objectProto$h=Object.prototype;var propertyIsEnumerable$2=objectProto$h.propertyIsEnumerable;var nativeGetSymbols$2=Object.getOwnPropertySymbols;var getSymbols$1=!nativeGetSymbols$2?stubArray$1:function(object){if(object==null){return[];}
object=Object(object);return arrayFilter$1(nativeGetSymbols$2(object),function(symbol){return propertyIsEnumerable$2.call(object,symbol);});};var getSymbols$2=getSymbols$1;function getAllKeys$1(object){return baseGetAllKeys$1(object,keys$1,getSymbols$2);}
var COMPARE_PARTIAL_FLAG$9=1;var objectProto$g=Object.prototype;var hasOwnProperty$d=objectProto$g.hasOwnProperty;function equalObjects$1(object,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG$9,objProps=getAllKeys$1(object),objLength=objProps.length,othProps=getAllKeys$1(other),othLength=othProps.length;if(objLength!=othLength&&!isPartial){return false;}
var index2=objLength;while(index2--){var key=objProps[index2];if(!(isPartial?key in other:hasOwnProperty$d.call(other,key))){return false;}}
var objStacked=stack.get(object);var othStacked=stack.get(other);if(objStacked&&othStacked){return objStacked==other&&othStacked==object;}
var result=true;stack.set(object,other);stack.set(other,object);var skipCtor=isPartial;while(++index2<objLength){key=objProps[index2];var objValue=object[key],othValue=other[key];if(customizer){var compared=isPartial?customizer(othValue,objValue,key,other,object,stack):customizer(objValue,othValue,key,object,other,stack);}
if(!(compared===void 0?objValue===othValue||equalFunc(objValue,othValue,bitmask,customizer,stack):compared)){result=false;break;}
skipCtor||(skipCtor=key=="constructor");}
if(result&&!skipCtor){var objCtor=object.constructor,othCtor=other.constructor;if(objCtor!=othCtor&&("constructor"in object&&"constructor"in other)&&!(typeof objCtor=="function"&&objCtor instanceof objCtor&&typeof othCtor=="function"&&othCtor instanceof othCtor)){result=false;}}
stack["delete"](object);stack["delete"](other);return result;}
var DataView$1=getNative$1(root$2,"DataView");var DataView$2=DataView$1;var Promise$2=getNative$1(root$2,"Promise");var Promise$3=Promise$2;var Set$2=getNative$1(root$2,"Set");var Set$3=Set$2;var WeakMap$1=getNative$1(root$2,"WeakMap");var WeakMap$2=WeakMap$1;var mapTag$9="[object Map]";var objectTag$5="[object Object]";var promiseTag$1="[object Promise]";var setTag$9="[object Set]";var weakMapTag$3="[object WeakMap]";var dataViewTag$5="[object DataView]";var dataViewCtorString$1=toSource$1(DataView$2);var mapCtorString$1=toSource$1(Map$2);var promiseCtorString$1=toSource$1(Promise$3);var setCtorString$1=toSource$1(Set$3);var weakMapCtorString$1=toSource$1(WeakMap$2);var getTag$2=baseGetTag$1;if(DataView$2&&getTag$2(new DataView$2(new ArrayBuffer(1)))!=dataViewTag$5||Map$2&&getTag$2(new Map$2())!=mapTag$9||Promise$3&&getTag$2(Promise$3.resolve())!=promiseTag$1||Set$3&&getTag$2(new Set$3())!=setTag$9||WeakMap$2&&getTag$2(new WeakMap$2())!=weakMapTag$3){getTag$2=function(value){var result=baseGetTag$1(value),Ctor=result==objectTag$5?value.constructor:void 0,ctorString=Ctor?toSource$1(Ctor):"";if(ctorString){switch(ctorString){case dataViewCtorString$1:return dataViewTag$5;case mapCtorString$1:return mapTag$9;case promiseCtorString$1:return promiseTag$1;case setCtorString$1:return setTag$9;case weakMapCtorString$1:return weakMapTag$3;}}
return result;};}
var getTag$3=getTag$2;var COMPARE_PARTIAL_FLAG$8=1;var argsTag$4="[object Arguments]";var arrayTag$3="[object Array]";var objectTag$4="[object Object]";var objectProto$f=Object.prototype;var hasOwnProperty$c=objectProto$f.hasOwnProperty;function baseIsEqualDeep$1(object,other,bitmask,customizer,equalFunc,stack){var objIsArr=isArray$2(object),othIsArr=isArray$2(other),objTag=objIsArr?arrayTag$3:getTag$3(object),othTag=othIsArr?arrayTag$3:getTag$3(other);objTag=objTag==argsTag$4?objectTag$4:objTag;othTag=othTag==argsTag$4?objectTag$4:othTag;var objIsObj=objTag==objectTag$4,othIsObj=othTag==objectTag$4,isSameTag=objTag==othTag;if(isSameTag&&isBuffer$2(object)){if(!isBuffer$2(other)){return false;}
objIsArr=true;objIsObj=false;}
if(isSameTag&&!objIsObj){stack||(stack=new Stack$1());return objIsArr||isTypedArray$2(object)?equalArrays$1(object,other,bitmask,customizer,equalFunc,stack):equalByTag$1(object,other,objTag,bitmask,customizer,equalFunc,stack);}
if(!(bitmask&COMPARE_PARTIAL_FLAG$8)){var objIsWrapped=objIsObj&&hasOwnProperty$c.call(object,"__wrapped__"),othIsWrapped=othIsObj&&hasOwnProperty$c.call(other,"__wrapped__");if(objIsWrapped||othIsWrapped){var objUnwrapped=objIsWrapped?object.value():object,othUnwrapped=othIsWrapped?other.value():other;stack||(stack=new Stack$1());return equalFunc(objUnwrapped,othUnwrapped,bitmask,customizer,stack);}}
if(!isSameTag){return false;}
stack||(stack=new Stack$1());return equalObjects$1(object,other,bitmask,customizer,equalFunc,stack);}
function baseIsEqual$1(value,other,bitmask,customizer,stack){if(value===other){return true;}
if(value==null||other==null||!isObjectLike$1(value)&&!isObjectLike$1(other)){return value!==value&&other!==other;}
return baseIsEqualDeep$1(value,other,bitmask,customizer,baseIsEqual$1,stack);}
var COMPARE_PARTIAL_FLAG$7=1;var COMPARE_UNORDERED_FLAG$5=2;function baseIsMatch$1(object,source,matchData,customizer){var index2=matchData.length,length3=index2,noCustomizer=!customizer;if(object==null){return!length3;}
object=Object(object);while(index2--){var data=matchData[index2];if(noCustomizer&&data[2]?data[1]!==object[data[0]]:!(data[0]in object)){return false;}}
while(++index2<length3){data=matchData[index2];var key=data[0],objValue=object[key],srcValue=data[1];if(noCustomizer&&data[2]){if(objValue===void 0&&!(key in object)){return false;}}else{var stack=new Stack$1();if(customizer){var result=customizer(objValue,srcValue,key,object,source,stack);}
if(!(result===void 0?baseIsEqual$1(srcValue,objValue,COMPARE_PARTIAL_FLAG$7|COMPARE_UNORDERED_FLAG$5,customizer,stack):result)){return false;}}}
return true;}
function isStrictComparable$1(value){return value===value&&!isObject$1(value);}
function getMatchData$1(object){var result=keys$1(object),length3=result.length;while(length3--){var key=result[length3],value=object[key];result[length3]=[key,value,isStrictComparable$1(value)];}
return result;}
function matchesStrictComparable$1(key,srcValue){return function(object){if(object==null){return false;}
return object[key]===srcValue&&(srcValue!==void 0||key in Object(object));};}
function baseMatches$1(source){var matchData=getMatchData$1(source);if(matchData.length==1&&matchData[0][2]){return matchesStrictComparable$1(matchData[0][0],matchData[0][1]);}
return function(object){return object===source||baseIsMatch$1(object,source,matchData);};}
function get$1(object,path4,defaultValue){var result=object==null?void 0:baseGet$1(object,path4);return result===void 0?defaultValue:result;}
var COMPARE_PARTIAL_FLAG$6=1;var COMPARE_UNORDERED_FLAG$4=2;function baseMatchesProperty$1(path4,srcValue){if(isKey$1(path4)&&isStrictComparable$1(srcValue)){return matchesStrictComparable$1(toKey$1(path4),srcValue);}
return function(object){var objValue=get$1(object,path4);return objValue===void 0&&objValue===srcValue?hasIn$1(object,path4):baseIsEqual$1(srcValue,objValue,COMPARE_PARTIAL_FLAG$6|COMPARE_UNORDERED_FLAG$4);};}
function baseProperty$1(key){return function(object){return object==null?void 0:object[key];};}
function basePropertyDeep$1(path4){return function(object){return baseGet$1(object,path4);};}
function property$1(path4){return isKey$1(path4)?baseProperty$1(toKey$1(path4)):basePropertyDeep$1(path4);}
function baseIteratee$1(value){if(typeof value=="function"){return value;}
if(value==null){return identity$1;}
if(typeof value=="object"){return isArray$2(value)?baseMatchesProperty$1(value[0],value[1]):baseMatches$1(value);}
return property$1(value);}
function mapValues(object,iteratee){var result={};iteratee=baseIteratee$1(iteratee);baseForOwn$1(object,function(value,key,object2){baseAssignValue(result,key,iteratee(value,key,object2));});return result;}
function baseMap$1(collection,iteratee){var index2=-1,result=isArrayLike$1(collection)?Array(collection.length):[];baseEach$2(collection,function(value,key,collection2){result[++index2]=iteratee(value,key,collection2);});return result;}
function map$1(collection,iteratee){var func=isArray$2(collection)?arrayMap$1:baseMap$1;return func(collection,baseIteratee$1(iteratee));}
var nativeCeil=Math.ceil;var nativeMax$2=Math.max;function baseRange(start,end,step,fromRight){var index2=-1,length3=nativeMax$2(nativeCeil((end-start)/(step||1)),0),result=Array(length3);while(length3--){result[fromRight?length3:++index2]=start;start+=step;}
return result;}
var reWhitespace=/\s/;function trimmedEndIndex(string){var index2=string.length;while(index2--&&reWhitespace.test(string.charAt(index2))){}
return index2;}
var reTrimStart=/^\s+/;function baseTrim(string){return string?string.slice(0,trimmedEndIndex(string)+1).replace(reTrimStart,""):string;}
var NAN=0/0;var reIsBadHex=/^[-+]0x[0-9a-f]+$/i;var reIsBinary=/^0b[01]+$/i;var reIsOctal=/^0o[0-7]+$/i;var freeParseInt=parseInt;function toNumber(value){if(typeof value=="number"){return value;}
if(isSymbol$1(value)){return NAN;}
if(isObject$1(value)){var other=typeof value.valueOf=="function"?value.valueOf():value;value=isObject$1(other)?other+"":other;}
if(typeof value!="string"){return value===0?value:+value;}
value=baseTrim(value);var isBinary=reIsBinary.test(value);return isBinary||reIsOctal.test(value)?freeParseInt(value.slice(2),isBinary?2:8):reIsBadHex.test(value)?NAN:+value;}
var INFINITY$3=1/0;var MAX_INTEGER=17976931348623157e292;function toFinite(value){if(!value){return value===0?value:0;}
value=toNumber(value);if(value===INFINITY$3||value===-INFINITY$3){var sign=value<0?-1:1;return sign*MAX_INTEGER;}
return value===value?value:0;}
function createRange(fromRight){return function(start,end,step){if(step&&typeof step!="number"&&isIterateeCall(start,end,step)){end=step=void 0;}
start=toFinite(start);if(end===void 0){end=start;start=0;}else{end=toFinite(end);}
step=step===void 0?start<end?1:-1:toFinite(step);return baseRange(start,end,step,fromRight);};}
var range=createRange();var range$1=range;function baseValues$1(object,props){return arrayMap$1(props,function(key){return object[key];});}
function values$1(object){return object==null?[]:baseValues$1(object,keys$1(object));}
function arrayReduce$1(array,iteratee,accumulator,initAccum){var index2=-1,length3=array==null?0:array.length;if(initAccum&&length3){accumulator=array[++index2];}
while(++index2<length3){accumulator=iteratee(accumulator,array[index2],index2,array);}
return accumulator;}
function baseReduce$1(collection,iteratee,accumulator,initAccum,eachFunc){eachFunc(collection,function(value,index2,collection2){accumulator=initAccum?(initAccum=false,value):iteratee(accumulator,value,index2,collection2);});return accumulator;}
function reduce$1(collection,iteratee,accumulator){var func=isArray$2(collection)?arrayReduce$1:baseReduce$1,initAccum=arguments.length<3;return func(collection,baseIteratee$1(iteratee),accumulator,initAccum,baseEach$2);}
function baseExtremum(array,iteratee,comparator){var index2=-1,length3=array.length;while(++index2<length3){var value=array[index2],current=iteratee(value);if(current!=null&&(computed===void 0?current===current&&!isSymbol$1(current):comparator(current,computed))){var computed=current,result=value;}}
return result;}
function baseLt(value,other){return value<other;}
function minBy(array,iteratee){return array&&array.length?baseExtremum(array,baseIteratee$1(iteratee),baseLt):void 0;}
function baseGt(value,other){return value>other;}
function maxBy(array,iteratee){return array&&array.length?baseExtremum(array,baseIteratee$1(iteratee),baseGt):void 0;}
function min3(array){return array&&array.length?baseExtremum(array,identity$1,baseLt):void 0;}
function max3(array){return array&&array.length?baseExtremum(array,identity$1,baseGt):void 0;}
function baseFilter$1(collection,predicate){var result=[];baseEach$2(collection,function(value,index2,collection2){if(predicate(value,index2,collection2)){result.push(value);}});return result;}
function filter$1(collection,predicate){var func=isArray$2(collection)?arrayFilter$1:baseFilter$1;return func(collection,baseIteratee$1(predicate));}
var idCounter=0;function uniqueId(prefix){var id9=++idCounter;return toString$1(prefix)+id9;}
function baseZipObject(props,values4,assignFunc){var index2=-1,length3=props.length,valsLength=values4.length,result={};while(++index2<length3){var value=index2<valsLength?values4[index2]:void 0;assignFunc(result,props[index2],value);}
return result;}
function zipObject(props,values4){return baseZipObject(props||[],values4||[],assignValue);}
function baseSortBy(array,comparer){var length3=array.length;array.sort(comparer);while(length3--){array[length3]=array[length3].value;}
return array;}
function compareAscending(value,other){if(value!==other){var valIsDefined=value!==void 0,valIsNull=value===null,valIsReflexive=value===value,valIsSymbol=isSymbol$1(value);var othIsDefined=other!==void 0,othIsNull=other===null,othIsReflexive=other===other,othIsSymbol=isSymbol$1(other);if(!othIsNull&&!othIsSymbol&&!valIsSymbol&&value>other||valIsSymbol&&othIsDefined&&othIsReflexive&&!othIsNull&&!othIsSymbol||valIsNull&&othIsDefined&&othIsReflexive||!valIsDefined&&othIsReflexive||!valIsReflexive){return 1;}
if(!valIsNull&&!valIsSymbol&&!othIsSymbol&&value<other||othIsSymbol&&valIsDefined&&valIsReflexive&&!valIsNull&&!valIsSymbol||othIsNull&&valIsDefined&&valIsReflexive||!othIsDefined&&valIsReflexive||!othIsReflexive){return-1;}}
return 0;}
function compareMultiple(object,other,orders){var index2=-1,objCriteria=object.criteria,othCriteria=other.criteria,length3=objCriteria.length,ordersLength=orders.length;while(++index2<length3){var result=compareAscending(objCriteria[index2],othCriteria[index2]);if(result){if(index2>=ordersLength){return result;}
var order2=orders[index2];return result*(order2=="desc"?-1:1);}}
return object.index-other.index;}
function baseOrderBy(collection,iteratees,orders){if(iteratees.length){iteratees=arrayMap$1(iteratees,function(iteratee){if(isArray$2(iteratee)){return function(value){return baseGet$1(value,iteratee.length===1?iteratee[0]:iteratee);};}
return iteratee;});}else{iteratees=[identity$1];}
var index2=-1;iteratees=arrayMap$1(iteratees,baseUnary$1(baseIteratee$1));var result=baseMap$1(collection,function(value,key,collection2){var criteria=arrayMap$1(iteratees,function(iteratee){return iteratee(value);});return{"criteria":criteria,"index":++index2,"value":value};});return baseSortBy(result,function(object,other){return compareMultiple(object,other,orders);});}
var sortBy=baseRest$1(function(collection,iteratees){if(collection==null){return[];}
var length3=iteratees.length;if(length3>1&&isIterateeCall(collection,iteratees[0],iteratees[1])){iteratees=[];}else if(length3>2&&isIterateeCall(iteratees[0],iteratees[1],iteratees[2])){iteratees=[iteratees[0]];}
return baseOrderBy(collection,baseFlatten$1(iteratees,1),[]);});var sortBy$1=sortBy;function createFind(findIndexFunc){return function(collection,predicate,fromIndex){var iterable=Object(collection);if(!isArrayLike$1(collection)){var iteratee=baseIteratee$1(predicate);collection=keys$1(collection);predicate=function(key){return iteratee(iterable[key],key,iterable);};}
var index2=findIndexFunc(collection,predicate,fromIndex);return index2>-1?iterable[iteratee?collection[index2]:index2]:void 0;};}
function baseFindIndex$1(array,predicate,fromIndex,fromRight){var length3=array.length,index2=fromIndex+(fromRight?1:-1);while(fromRight?index2--:++index2<length3){if(predicate(array[index2],index2,array)){return index2;}}
return-1;}
function toInteger(value){var result=toFinite(value),remainder=result%1;return result===result?remainder?result-remainder:result:0;}
var nativeMax$1=Math.max;function findIndex(array,predicate,fromIndex){var length3=array==null?0:array.length;if(!length3){return-1;}
var index2=fromIndex==null?0:toInteger(fromIndex);if(index2<0){index2=nativeMax$1(length3+index2,0);}
return baseFindIndex$1(array,baseIteratee$1(predicate),index2);}
var find=createFind(findIndex);var find$1=find;function baseToPairs(object,props){return arrayMap$1(props,function(key){return[key,object[key]];});}
function setToPairs(set3){var index2=-1,result=Array(set3.size);set3.forEach(function(value){result[++index2]=[value,value];});return result;}
var mapTag$8="[object Map]";var setTag$8="[object Set]";function createToPairs(keysFunc){return function(object){var tag2=getTag$3(object);if(tag2==mapTag$8){return mapToArray$1(object);}
if(tag2==setTag$8){return setToPairs(object);}
return baseToPairs(object,keysFunc(object));};}
var toPairs=createToPairs(keys$1);var toPairs$1=toPairs;function copyObject(source,props,object,customizer){var isNew=!object;object||(object={});var index2=-1,length3=props.length;while(++index2<length3){var key=props[index2];var newValue=customizer?customizer(object[key],source[key],key,object,source):void 0;if(newValue===void 0){newValue=source[key];}
if(isNew){baseAssignValue(object,key,newValue);}else{assignValue(object,key,newValue);}}
return object;}
function baseAssign(object,source){return object&&copyObject(source,keys$1(source),object);}
function baseAssignIn(object,source){return object&&copyObject(source,keysIn(source),object);}
var freeExports$2=typeof exports=="object"&&exports&&!exports.nodeType&&exports;var freeModule$2=freeExports$2&&typeof module=="object"&&module&&!module.nodeType&&module;var moduleExports$2=freeModule$2&&freeModule$2.exports===freeExports$2;var Buffer$1=moduleExports$2?root$2.Buffer:void 0;var allocUnsafe=Buffer$1?Buffer$1.allocUnsafe:void 0;function cloneBuffer(buffer,isDeep){if(isDeep){return buffer.slice();}
var length3=buffer.length,result=allocUnsafe?allocUnsafe(length3):new buffer.constructor(length3);buffer.copy(result);return result;}
function copyArray(source,array){var index2=-1,length3=source.length;array||(array=Array(length3));while(++index2<length3){array[index2]=source[index2];}
return array;}
function copySymbols(source,object){return copyObject(source,getSymbols$2(source),object);}
var getPrototype$1=overArg$1(Object.getPrototypeOf,Object);var getPrototype$2=getPrototype$1;var nativeGetSymbols$1=Object.getOwnPropertySymbols;var getSymbolsIn=!nativeGetSymbols$1?stubArray$1:function(object){var result=[];while(object){arrayPush$1(result,getSymbols$2(object));object=getPrototype$2(object);}
return result;};var getSymbolsIn$1=getSymbolsIn;function copySymbolsIn(source,object){return copyObject(source,getSymbolsIn$1(source),object);}
function getAllKeysIn(object){return baseGetAllKeys$1(object,keysIn,getSymbolsIn$1);}
var objectProto$e=Object.prototype;var hasOwnProperty$b=objectProto$e.hasOwnProperty;function initCloneArray(array){var length3=array.length,result=new array.constructor(length3);if(length3&&typeof array[0]=="string"&&hasOwnProperty$b.call(array,"index")){result.index=array.index;result.input=array.input;}
return result;}
function cloneArrayBuffer(arrayBuffer){var result=new arrayBuffer.constructor(arrayBuffer.byteLength);new Uint8Array$2(result).set(new Uint8Array$2(arrayBuffer));return result;}
function cloneDataView(dataView,isDeep){var buffer=isDeep?cloneArrayBuffer(dataView.buffer):dataView.buffer;return new dataView.constructor(buffer,dataView.byteOffset,dataView.byteLength);}
var reFlags=/\w*$/;function cloneRegExp(regexp){var result=new regexp.constructor(regexp.source,reFlags.exec(regexp));result.lastIndex=regexp.lastIndex;return result;}
var symbolProto$2=Symbol$2?Symbol$2.prototype:void 0;var symbolValueOf$1=symbolProto$2?symbolProto$2.valueOf:void 0;function cloneSymbol(symbol){return symbolValueOf$1?Object(symbolValueOf$1.call(symbol)):{};}
function cloneTypedArray(typedArray,isDeep){var buffer=isDeep?cloneArrayBuffer(typedArray.buffer):typedArray.buffer;return new typedArray.constructor(buffer,typedArray.byteOffset,typedArray.length);}
var boolTag$3="[object Boolean]";var dateTag$3="[object Date]";var mapTag$7="[object Map]";var numberTag$3="[object Number]";var regexpTag$3="[object RegExp]";var setTag$7="[object Set]";var stringTag$4="[object String]";var symbolTag$3="[object Symbol]";var arrayBufferTag$3="[object ArrayBuffer]";var dataViewTag$4="[object DataView]";var float32Tag$2="[object Float32Array]";var float64Tag$2="[object Float64Array]";var int8Tag$2="[object Int8Array]";var int16Tag$2="[object Int16Array]";var int32Tag$2="[object Int32Array]";var uint8Tag$2="[object Uint8Array]";var uint8ClampedTag$2="[object Uint8ClampedArray]";var uint16Tag$2="[object Uint16Array]";var uint32Tag$2="[object Uint32Array]";function initCloneByTag(object,tag2,isDeep){var Ctor=object.constructor;switch(tag2){case arrayBufferTag$3:return cloneArrayBuffer(object);case boolTag$3:case dateTag$3:return new Ctor(+object);case dataViewTag$4:return cloneDataView(object,isDeep);case float32Tag$2:case float64Tag$2:case int8Tag$2:case int16Tag$2:case int32Tag$2:case uint8Tag$2:case uint8ClampedTag$2:case uint16Tag$2:case uint32Tag$2:return cloneTypedArray(object,isDeep);case mapTag$7:return new Ctor();case numberTag$3:case stringTag$4:return new Ctor(object);case regexpTag$3:return cloneRegExp(object);case setTag$7:return new Ctor();case symbolTag$3:return cloneSymbol(object);}}
var objectCreate$1=Object.create;var baseCreate$1=function(){function object(){}
return function(proto){if(!isObject$1(proto)){return{};}
if(objectCreate$1){return objectCreate$1(proto);}
object.prototype=proto;var result=new object();object.prototype=void 0;return result;};}();var baseCreate$2=baseCreate$1;function initCloneObject(object){return typeof object.constructor=="function"&&!isPrototype$1(object)?baseCreate$2(getPrototype$2(object)):{};}
var mapTag$6="[object Map]";function baseIsMap(value){return isObjectLike$1(value)&&getTag$3(value)==mapTag$6;}
var nodeIsMap=nodeUtil$2&&nodeUtil$2.isMap;var isMap=nodeIsMap?baseUnary$1(nodeIsMap):baseIsMap;var isMap$1=isMap;var setTag$6="[object Set]";function baseIsSet(value){return isObjectLike$1(value)&&getTag$3(value)==setTag$6;}
var nodeIsSet=nodeUtil$2&&nodeUtil$2.isSet;var isSet=nodeIsSet?baseUnary$1(nodeIsSet):baseIsSet;var isSet$1=isSet;var CLONE_DEEP_FLAG$1=1;var CLONE_FLAT_FLAG=2;var CLONE_SYMBOLS_FLAG$1=4;var argsTag$3="[object Arguments]";var arrayTag$2="[object Array]";var boolTag$2="[object Boolean]";var dateTag$2="[object Date]";var errorTag$2="[object Error]";var funcTag$2="[object Function]";var genTag$1="[object GeneratorFunction]";var mapTag$5="[object Map]";var numberTag$2="[object Number]";var objectTag$3="[object Object]";var regexpTag$2="[object RegExp]";var setTag$5="[object Set]";var stringTag$3="[object String]";var symbolTag$2="[object Symbol]";var weakMapTag$2="[object WeakMap]";var arrayBufferTag$2="[object ArrayBuffer]";var dataViewTag$3="[object DataView]";var float32Tag$1="[object Float32Array]";var float64Tag$1="[object Float64Array]";var int8Tag$1="[object Int8Array]";var int16Tag$1="[object Int16Array]";var int32Tag$1="[object Int32Array]";var uint8Tag$1="[object Uint8Array]";var uint8ClampedTag$1="[object Uint8ClampedArray]";var uint16Tag$1="[object Uint16Array]";var uint32Tag$1="[object Uint32Array]";var cloneableTags={};cloneableTags[argsTag$3]=cloneableTags[arrayTag$2]=cloneableTags[arrayBufferTag$2]=cloneableTags[dataViewTag$3]=cloneableTags[boolTag$2]=cloneableTags[dateTag$2]=cloneableTags[float32Tag$1]=cloneableTags[float64Tag$1]=cloneableTags[int8Tag$1]=cloneableTags[int16Tag$1]=cloneableTags[int32Tag$1]=cloneableTags[mapTag$5]=cloneableTags[numberTag$2]=cloneableTags[objectTag$3]=cloneableTags[regexpTag$2]=cloneableTags[setTag$5]=cloneableTags[stringTag$3]=cloneableTags[symbolTag$2]=cloneableTags[uint8Tag$1]=cloneableTags[uint8ClampedTag$1]=cloneableTags[uint16Tag$1]=cloneableTags[uint32Tag$1]=true;cloneableTags[errorTag$2]=cloneableTags[funcTag$2]=cloneableTags[weakMapTag$2]=false;function baseClone(value,bitmask,customizer,key,object,stack){var result,isDeep=bitmask&CLONE_DEEP_FLAG$1,isFlat=bitmask&CLONE_FLAT_FLAG,isFull=bitmask&CLONE_SYMBOLS_FLAG$1;if(customizer){result=object?customizer(value,key,object,stack):customizer(value);}
if(result!==void 0){return result;}
if(!isObject$1(value)){return value;}
var isArr=isArray$2(value);if(isArr){result=initCloneArray(value);if(!isDeep){return copyArray(value,result);}}else{var tag2=getTag$3(value),isFunc=tag2==funcTag$2||tag2==genTag$1;if(isBuffer$2(value)){return cloneBuffer(value,isDeep);}
if(tag2==objectTag$3||tag2==argsTag$3||isFunc&&!object){result=isFlat||isFunc?{}:initCloneObject(value);if(!isDeep){return isFlat?copySymbolsIn(value,baseAssignIn(result,value)):copySymbols(value,baseAssign(result,value));}}else{if(!cloneableTags[tag2]){return object?value:{};}
result=initCloneByTag(value,tag2,isDeep);}}
stack||(stack=new Stack$1());var stacked=stack.get(value);if(stacked){return stacked;}
stack.set(value,result);if(isSet$1(value)){value.forEach(function(subValue){result.add(baseClone(subValue,bitmask,customizer,subValue,value,stack));});}else if(isMap$1(value)){value.forEach(function(subValue,key2){result.set(key2,baseClone(subValue,bitmask,customizer,key2,value,stack));});}
var keysFunc=isFull?isFlat?getAllKeysIn:getAllKeys$1:isFlat?keysIn:keys$1;var props=isArr?void 0:keysFunc(value);arrayEach$1(props||value,function(subValue,key2){if(props){key2=subValue;subValue=value[key2];}
assignValue(result,key2,baseClone(subValue,bitmask,customizer,key2,value,stack));});return result;}
var CLONE_DEEP_FLAG=1;var CLONE_SYMBOLS_FLAG=4;function cloneDeep2(value){return baseClone(value,CLONE_DEEP_FLAG|CLONE_SYMBOLS_FLAG);}
function has$1(o,k){return Boolean(o&&k&&k in o);}
function last2(list){if(!(list&&list.length))
return;return list[list.length-1];}
function isUndefined$1(o){return typeof o==="undefined";}
var objectProto$d2=Object.prototype;var hasOwnProperty$a2=objectProto$d2.hasOwnProperty;function baseHas2(object,key){return object!=null&&hasOwnProperty$a2.call(object,key);}
var isArray2=Array.isArray;var freeGlobal2=typeof global=="object"&&global&&global.Object===Object&&global;var freeSelf2=typeof self=="object"&&self&&self.Object===Object&&self;var root2=freeGlobal2||freeSelf2||Function("return this")();var Symbol3=root2.Symbol;var objectProto$c2=Object.prototype;var hasOwnProperty$92=objectProto$c2.hasOwnProperty;var nativeObjectToString$12=objectProto$c2.toString;var symToStringTag$12=Symbol3?Symbol3.toStringTag:void 0;function getRawTag2(value){var isOwn=hasOwnProperty$92.call(value,symToStringTag$12),tag2=value[symToStringTag$12];try{value[symToStringTag$12]=void 0;var unmasked=true;}catch(e){}
var result=nativeObjectToString$12.call(value);if(unmasked){if(isOwn){value[symToStringTag$12]=tag2;}else{delete value[symToStringTag$12];}}
return result;}
var objectProto$b2=Object.prototype;var nativeObjectToString2=objectProto$b2.toString;function objectToString2(value){return nativeObjectToString2.call(value);}
var nullTag2="[object Null]";var undefinedTag2="[object Undefined]";var symToStringTag2=Symbol3?Symbol3.toStringTag:void 0;function baseGetTag2(value){if(value==null){return value===void 0?undefinedTag2:nullTag2;}
return symToStringTag2&&symToStringTag2 in Object(value)?getRawTag2(value):objectToString2(value);}
function isObjectLike2(value){return value!=null&&typeof value=="object";}
var symbolTag$12="[object Symbol]";function isSymbol2(value){return typeof value=="symbol"||isObjectLike2(value)&&baseGetTag2(value)==symbolTag$12;}
var reIsDeepProp2=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;var reIsPlainProp2=/^\w*$/;function isKey2(value,object){if(isArray2(value)){return false;}
var type=typeof value;if(type=="number"||type=="symbol"||type=="boolean"||value==null||isSymbol2(value)){return true;}
return reIsPlainProp2.test(value)||!reIsDeepProp2.test(value)||object!=null&&value in Object(object);}
function isObject2(value){var type=typeof value;return value!=null&&(type=="object"||type=="function");}
var asyncTag2="[object AsyncFunction]";var funcTag$12="[object Function]";var genTag2="[object GeneratorFunction]";var proxyTag2="[object Proxy]";function isFunction2(value){if(!isObject2(value)){return false;}
var tag2=baseGetTag2(value);return tag2==funcTag$12||tag2==genTag2||tag2==asyncTag2||tag2==proxyTag2;}
var coreJsData2=root2["__core-js_shared__"];var maskSrcKey2=function(){var uid=/[^.]+$/.exec(coreJsData2&&coreJsData2.keys&&coreJsData2.keys.IE_PROTO||"");return uid?"Symbol(src)_1."+uid:"";}();function isMasked2(func){return!!maskSrcKey2&&maskSrcKey2 in func;}
var funcProto$12=Function.prototype;var funcToString$12=funcProto$12.toString;function toSource2(func){if(func!=null){try{return funcToString$12.call(func);}catch(e){}
try{return func+"";}catch(e){}}
return"";}
var reRegExpChar2=/[\\^$.*+?()[\]{}|]/g;var reIsHostCtor2=/^\[object .+?Constructor\]$/;var funcProto2=Function.prototype;var objectProto$a2=Object.prototype;var funcToString2=funcProto2.toString;var hasOwnProperty$82=objectProto$a2.hasOwnProperty;var reIsNative2=RegExp("^"+funcToString2.call(hasOwnProperty$82).replace(reRegExpChar2,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function baseIsNative2(value){if(!isObject2(value)||isMasked2(value)){return false;}
var pattern=isFunction2(value)?reIsNative2:reIsHostCtor2;return pattern.test(toSource2(value));}
function getValue2(object,key){return object==null?void 0:object[key];}
function getNative2(object,key){var value=getValue2(object,key);return baseIsNative2(value)?value:void 0;}
var nativeCreate2=getNative2(Object,"create");function hashClear2(){this.__data__=nativeCreate2?nativeCreate2(null):{};this.size=0;}
function hashDelete2(key){var result=this.has(key)&&delete this.__data__[key];this.size-=result?1:0;return result;}
var HASH_UNDEFINED$22="__lodash_hash_undefined__";var objectProto$92=Object.prototype;var hasOwnProperty$72=objectProto$92.hasOwnProperty;function hashGet2(key){var data=this.__data__;if(nativeCreate2){var result=data[key];return result===HASH_UNDEFINED$22?void 0:result;}
return hasOwnProperty$72.call(data,key)?data[key]:void 0;}
var objectProto$82=Object.prototype;var hasOwnProperty$62=objectProto$82.hasOwnProperty;function hashHas2(key){var data=this.__data__;return nativeCreate2?data[key]!==void 0:hasOwnProperty$62.call(data,key);}
var HASH_UNDEFINED$12="__lodash_hash_undefined__";function hashSet2(key,value){var data=this.__data__;this.size+=this.has(key)?0:1;data[key]=nativeCreate2&&value===void 0?HASH_UNDEFINED$12:value;return this;}
function Hash2(entries){var index2=-1,length3=entries==null?0:entries.length;this.clear();while(++index2<length3){var entry=entries[index2];this.set(entry[0],entry[1]);}}
Hash2.prototype.clear=hashClear2;Hash2.prototype["delete"]=hashDelete2;Hash2.prototype.get=hashGet2;Hash2.prototype.has=hashHas2;Hash2.prototype.set=hashSet2;function listCacheClear2(){this.__data__=[];this.size=0;}
function eq2(value,other){return value===other||value!==value&&other!==other;}
function assocIndexOf2(array,key){var length3=array.length;while(length3--){if(eq2(array[length3][0],key)){return length3;}}
return-1;}
var arrayProto2=Array.prototype;var splice2=arrayProto2.splice;function listCacheDelete2(key){var data=this.__data__,index2=assocIndexOf2(data,key);if(index2<0){return false;}
var lastIndex=data.length-1;if(index2==lastIndex){data.pop();}else{splice2.call(data,index2,1);}
--this.size;return true;}
function listCacheGet2(key){var data=this.__data__,index2=assocIndexOf2(data,key);return index2<0?void 0:data[index2][1];}
function listCacheHas2(key){return assocIndexOf2(this.__data__,key)>-1;}
function listCacheSet2(key,value){var data=this.__data__,index2=assocIndexOf2(data,key);if(index2<0){++this.size;data.push([key,value]);}else{data[index2][1]=value;}
return this;}
function ListCache2(entries){var index2=-1,length3=entries==null?0:entries.length;this.clear();while(++index2<length3){var entry=entries[index2];this.set(entry[0],entry[1]);}}
ListCache2.prototype.clear=listCacheClear2;ListCache2.prototype["delete"]=listCacheDelete2;ListCache2.prototype.get=listCacheGet2;ListCache2.prototype.has=listCacheHas2;ListCache2.prototype.set=listCacheSet2;var Map3=getNative2(root2,"Map");function mapCacheClear2(){this.size=0;this.__data__={"hash":new Hash2(),"map":new(Map3||ListCache2)(),"string":new Hash2()};}
function isKeyable2(value){var type=typeof value;return type=="string"||type=="number"||type=="symbol"||type=="boolean"?value!=="__proto__":value===null;}
function getMapData2(map4,key){var data=map4.__data__;return isKeyable2(key)?data[typeof key=="string"?"string":"hash"]:data.map;}
function mapCacheDelete2(key){var result=getMapData2(this,key)["delete"](key);this.size-=result?1:0;return result;}
function mapCacheGet2(key){return getMapData2(this,key).get(key);}
function mapCacheHas2(key){return getMapData2(this,key).has(key);}
function mapCacheSet2(key,value){var data=getMapData2(this,key),size4=data.size;data.set(key,value);this.size+=data.size==size4?0:1;return this;}
function MapCache2(entries){var index2=-1,length3=entries==null?0:entries.length;this.clear();while(++index2<length3){var entry=entries[index2];this.set(entry[0],entry[1]);}}
MapCache2.prototype.clear=mapCacheClear2;MapCache2.prototype["delete"]=mapCacheDelete2;MapCache2.prototype.get=mapCacheGet2;MapCache2.prototype.has=mapCacheHas2;MapCache2.prototype.set=mapCacheSet2;var FUNC_ERROR_TEXT2="Expected a function";function memoize2(func,resolver){if(typeof func!="function"||resolver!=null&&typeof resolver!="function"){throw new TypeError(FUNC_ERROR_TEXT2);}
var memoized=function(){var args=arguments,key=resolver?resolver.apply(this,args):args[0],cache2=memoized.cache;if(cache2.has(key)){return cache2.get(key);}
var result=func.apply(this,args);memoized.cache=cache2.set(key,result)||cache2;return result;};memoized.cache=new(memoize2.Cache||MapCache2)();return memoized;}
memoize2.Cache=MapCache2;var MAX_MEMOIZE_SIZE2=500;function memoizeCapped2(func){var result=memoize2(func,function(key){if(cache2.size===MAX_MEMOIZE_SIZE2){cache2.clear();}
return key;});var cache2=result.cache;return result;}
var rePropName2=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;var reEscapeChar2=/\\(\\)?/g;var stringToPath2=memoizeCapped2(function(string){var result=[];if(string.charCodeAt(0)===46){result.push("");}
string.replace(rePropName2,function(match,number4,quote,subString){result.push(quote?subString.replace(reEscapeChar2,"$1"):number4||match);});return result;});function arrayMap2(array,iteratee){var index2=-1,length3=array==null?0:array.length,result=Array(length3);while(++index2<length3){result[index2]=iteratee(array[index2],index2,array);}
return result;}
var INFINITY$22=1/0;var symbolProto$12=Symbol3?Symbol3.prototype:void 0;var symbolToString2=symbolProto$12?symbolProto$12.toString:void 0;function baseToString2(value){if(typeof value=="string"){return value;}
if(isArray2(value)){return arrayMap2(value,baseToString2)+"";}
if(isSymbol2(value)){return symbolToString2?symbolToString2.call(value):"";}
var result=value+"";return result=="0"&&1/value==-INFINITY$22?"-0":result;}
function toString2(value){return value==null?"":baseToString2(value);}
function castPath2(value,object){if(isArray2(value)){return value;}
return isKey2(value,object)?[value]:stringToPath2(toString2(value));}
var argsTag$22="[object Arguments]";function baseIsArguments2(value){return isObjectLike2(value)&&baseGetTag2(value)==argsTag$22;}
var objectProto$72=Object.prototype;var hasOwnProperty$52=objectProto$72.hasOwnProperty;var propertyIsEnumerable$12=objectProto$72.propertyIsEnumerable;var isArguments2=baseIsArguments2(function(){return arguments;}())?baseIsArguments2:function(value){return isObjectLike2(value)&&hasOwnProperty$52.call(value,"callee")&&!propertyIsEnumerable$12.call(value,"callee");};var MAX_SAFE_INTEGER$12=9007199254740991;var reIsUint2=/^(?:0|[1-9]\d*)$/;function isIndex2(value,length3){var type=typeof value;length3=length3==null?MAX_SAFE_INTEGER$12:length3;return!!length3&&(type=="number"||type!="symbol"&&reIsUint2.test(value))&&(value>-1&&value%1==0&&value<length3);}
var MAX_SAFE_INTEGER2=9007199254740991;function isLength2(value){return typeof value=="number"&&value>-1&&value%1==0&&value<=MAX_SAFE_INTEGER2;}
var INFINITY$12=1/0;function toKey2(value){if(typeof value=="string"||isSymbol2(value)){return value;}
var result=value+"";return result=="0"&&1/value==-INFINITY$12?"-0":result;}
function hasPath2(object,path4,hasFunc){path4=castPath2(path4,object);var index2=-1,length3=path4.length,result=false;while(++index2<length3){var key=toKey2(path4[index2]);if(!(result=object!=null&&hasFunc(object,key))){break;}
object=object[key];}
if(result||++index2!=length3){return result;}
length3=object==null?0:object.length;return!!length3&&isLength2(length3)&&isIndex2(key,length3)&&(isArray2(object)||isArguments2(object));}
function has2(object,path4){return object!=null&&hasPath2(object,path4,baseHas2);}
function arrayEach2(array,iteratee){var index2=-1,length3=array==null?0:array.length;while(++index2<length3){if(iteratee(array[index2],index2,array)===false){break;}}
return array;}
function createBaseFor2(fromRight){return function(object,iteratee,keysFunc){var index2=-1,iterable=Object(object),props=keysFunc(object),length3=props.length;while(length3--){var key=props[fromRight?length3:++index2];if(iteratee(iterable[key],key,iterable)===false){break;}}
return object;};}
var baseFor2=createBaseFor2();function baseTimes2(n2,iteratee){var index2=-1,result=Array(n2);while(++index2<n2){result[index2]=iteratee(index2);}
return result;}
function stubFalse2(){return false;}
var freeExports$12=typeof exports=="object"&&exports&&!exports.nodeType&&exports;var freeModule$12=freeExports$12&&typeof module=="object"&&module&&!module.nodeType&&module;var moduleExports$12=freeModule$12&&freeModule$12.exports===freeExports$12;var Buffer3=moduleExports$12?root2.Buffer:void 0;var nativeIsBuffer2=Buffer3?Buffer3.isBuffer:void 0;var isBuffer2=nativeIsBuffer2||stubFalse2;var argsTag$12="[object Arguments]";var arrayTag$12="[object Array]";var boolTag$12="[object Boolean]";var dateTag$12="[object Date]";var errorTag$12="[object Error]";var funcTag2="[object Function]";var mapTag$42="[object Map]";var numberTag$12="[object Number]";var objectTag$22="[object Object]";var regexpTag$12="[object RegExp]";var setTag$42="[object Set]";var stringTag$22="[object String]";var weakMapTag$12="[object WeakMap]";var arrayBufferTag$12="[object ArrayBuffer]";var dataViewTag$22="[object DataView]";var float32Tag2="[object Float32Array]";var float64Tag2="[object Float64Array]";var int8Tag2="[object Int8Array]";var int16Tag2="[object Int16Array]";var int32Tag2="[object Int32Array]";var uint8Tag2="[object Uint8Array]";var uint8ClampedTag2="[object Uint8ClampedArray]";var uint16Tag2="[object Uint16Array]";var uint32Tag2="[object Uint32Array]";var typedArrayTags2={};typedArrayTags2[float32Tag2]=typedArrayTags2[float64Tag2]=typedArrayTags2[int8Tag2]=typedArrayTags2[int16Tag2]=typedArrayTags2[int32Tag2]=typedArrayTags2[uint8Tag2]=typedArrayTags2[uint8ClampedTag2]=typedArrayTags2[uint16Tag2]=typedArrayTags2[uint32Tag2]=true;typedArrayTags2[argsTag$12]=typedArrayTags2[arrayTag$12]=typedArrayTags2[arrayBufferTag$12]=typedArrayTags2[boolTag$12]=typedArrayTags2[dataViewTag$22]=typedArrayTags2[dateTag$12]=typedArrayTags2[errorTag$12]=typedArrayTags2[funcTag2]=typedArrayTags2[mapTag$42]=typedArrayTags2[numberTag$12]=typedArrayTags2[objectTag$22]=typedArrayTags2[regexpTag$12]=typedArrayTags2[setTag$42]=typedArrayTags2[stringTag$22]=typedArrayTags2[weakMapTag$12]=false;function baseIsTypedArray2(value){return isObjectLike2(value)&&isLength2(value.length)&&!!typedArrayTags2[baseGetTag2(value)];}
function baseUnary2(func){return function(value){return func(value);};}
var freeExports2=typeof exports=="object"&&exports&&!exports.nodeType&&exports;var freeModule2=freeExports2&&typeof module=="object"&&module&&!module.nodeType&&module;var moduleExports2=freeModule2&&freeModule2.exports===freeExports2;var freeProcess2=moduleExports2&&freeGlobal2.process;var nodeUtil2=function(){try{var types=freeModule2&&freeModule2.require&&freeModule2.require("util").types;if(types){return types;}
return freeProcess2&&freeProcess2.binding&&freeProcess2.binding("util");}catch(e){}}();var nodeIsTypedArray2=nodeUtil2&&nodeUtil2.isTypedArray;var isTypedArray2=nodeIsTypedArray2?baseUnary2(nodeIsTypedArray2):baseIsTypedArray2;var objectProto$62=Object.prototype;var hasOwnProperty$42=objectProto$62.hasOwnProperty;function arrayLikeKeys2(value,inherited){var isArr=isArray2(value),isArg=!isArr&&isArguments2(value),isBuff=!isArr&&!isArg&&isBuffer2(value),isType2=!isArr&&!isArg&&!isBuff&&isTypedArray2(value),skipIndexes=isArr||isArg||isBuff||isType2,result=skipIndexes?baseTimes2(value.length,String):[],length3=result.length;for(var key in value){if((inherited||hasOwnProperty$42.call(value,key))&&!(skipIndexes&&(key=="length"||isBuff&&(key=="offset"||key=="parent")||isType2&&(key=="buffer"||key=="byteLength"||key=="byteOffset")||isIndex2(key,length3)))){result.push(key);}}
return result;}
var objectProto$52=Object.prototype;function isPrototype2(value){var Ctor=value&&value.constructor,proto=typeof Ctor=="function"&&Ctor.prototype||objectProto$52;return value===proto;}
function overArg2(func,transform7){return function(arg){return func(transform7(arg));};}
var nativeKeys2=overArg2(Object.keys,Object);var objectProto$42=Object.prototype;var hasOwnProperty$32=objectProto$42.hasOwnProperty;function baseKeys2(object){if(!isPrototype2(object)){return nativeKeys2(object);}
var result=[];for(var key in Object(object)){if(hasOwnProperty$32.call(object,key)&&key!="constructor"){result.push(key);}}
return result;}
function isArrayLike2(value){return value!=null&&isLength2(value.length)&&!isFunction2(value);}
function keys2(object){return isArrayLike2(object)?arrayLikeKeys2(object):baseKeys2(object);}
function baseForOwn2(object,iteratee){return object&&baseFor2(object,iteratee,keys2);}
function createBaseEach2(eachFunc,fromRight){return function(collection,iteratee){if(collection==null){return collection;}
if(!isArrayLike2(collection)){return eachFunc(collection,iteratee);}
var length3=collection.length,index2=fromRight?length3:-1,iterable=Object(collection);while(fromRight?index2--:++index2<length3){if(iteratee(iterable[index2],index2,iterable)===false){break;}}
return collection;};}
var baseEach2=createBaseEach2(baseForOwn2);function identity3(value){return value;}
function castFunction2(value){return typeof value=="function"?value:identity3;}
function forEach3(collection,iteratee){var func=isArray2(collection)?arrayEach2:baseEach2;return func(collection,castFunction2(iteratee));}
var DataView3=getNative2(root2,"DataView");var Promise$12=getNative2(root2,"Promise");var Set$1=getNative2(root2,"Set");var WeakMap3=getNative2(root2,"WeakMap");var mapTag$32="[object Map]";var objectTag$12="[object Object]";var promiseTag2="[object Promise]";var setTag$32="[object Set]";var weakMapTag2="[object WeakMap]";var dataViewTag$12="[object DataView]";var dataViewCtorString2=toSource2(DataView3);var mapCtorString2=toSource2(Map3);var promiseCtorString2=toSource2(Promise$12);var setCtorString2=toSource2(Set$1);var weakMapCtorString2=toSource2(WeakMap3);var getTag2=baseGetTag2;if(DataView3&&getTag2(new DataView3(new ArrayBuffer(1)))!=dataViewTag$12||Map3&&getTag2(new Map3())!=mapTag$32||Promise$12&&getTag2(Promise$12.resolve())!=promiseTag2||Set$1&&getTag2(new Set$1())!=setTag$32||WeakMap3&&getTag2(new WeakMap3())!=weakMapTag2){getTag2=function(value){var result=baseGetTag2(value),Ctor=result==objectTag$12?value.constructor:void 0,ctorString=Ctor?toSource2(Ctor):"";if(ctorString){switch(ctorString){case dataViewCtorString2:return dataViewTag$12;case mapCtorString2:return mapTag$32;case promiseCtorString2:return promiseTag2;case setCtorString2:return setTag$32;case weakMapCtorString2:return weakMapTag2;}}
return result;};}
var getTag$12=getTag2;var stringTag$12="[object String]";function isString2(value){return typeof value=="string"||!isArray2(value)&&isObjectLike2(value)&&baseGetTag2(value)==stringTag$12;}
function baseProperty2(key){return function(object){return object==null?void 0:object[key];};}
var asciiSize2=baseProperty2("length");var rsAstralRange$12="\\ud800-\\udfff";var rsComboMarksRange$12="\\u0300-\\u036f";var reComboHalfMarksRange$12="\\ufe20-\\ufe2f";var rsComboSymbolsRange$12="\\u20d0-\\u20ff";var rsComboRange$12=rsComboMarksRange$12+reComboHalfMarksRange$12+rsComboSymbolsRange$12;var rsVarRange$12="\\ufe0e\\ufe0f";var rsZWJ$12="\\u200d";var reHasUnicode2=RegExp("["+rsZWJ$12+rsAstralRange$12+rsComboRange$12+rsVarRange$12+"]");function hasUnicode2(string){return reHasUnicode2.test(string);}
var rsAstralRange2="\\ud800-\\udfff";var rsComboMarksRange2="\\u0300-\\u036f";var reComboHalfMarksRange2="\\ufe20-\\ufe2f";var rsComboSymbolsRange2="\\u20d0-\\u20ff";var rsComboRange2=rsComboMarksRange2+reComboHalfMarksRange2+rsComboSymbolsRange2;var rsVarRange2="\\ufe0e\\ufe0f";var rsAstral2="["+rsAstralRange2+"]";var rsCombo2="["+rsComboRange2+"]";var rsFitz2="\\ud83c[\\udffb-\\udfff]";var rsModifier2="(?:"+rsCombo2+"|"+rsFitz2+")";var rsNonAstral2="[^"+rsAstralRange2+"]";var rsRegional2="(?:\\ud83c[\\udde6-\\uddff]){2}";var rsSurrPair2="[\\ud800-\\udbff][\\udc00-\\udfff]";var rsZWJ2="\\u200d";var reOptMod2=rsModifier2+"?";var rsOptVar2="["+rsVarRange2+"]?";var rsOptJoin2="(?:"+rsZWJ2+"(?:"+[rsNonAstral2,rsRegional2,rsSurrPair2].join("|")+")"+rsOptVar2+reOptMod2+")*";var rsSeq2=rsOptVar2+reOptMod2+rsOptJoin2;var rsSymbol2="(?:"+[rsNonAstral2+rsCombo2+"?",rsCombo2,rsRegional2,rsSurrPair2,rsAstral2].join("|")+")";var reUnicode2=RegExp(rsFitz2+"(?="+rsFitz2+")|"+rsSymbol2+rsSeq2,"g");function unicodeSize2(string){var result=reUnicode2.lastIndex=0;while(reUnicode2.test(string)){++result;}
return result;}
function stringSize2(string){return hasUnicode2(string)?unicodeSize2(string):asciiSize2(string);}
var mapTag$22="[object Map]";var setTag$22="[object Set]";function size2(collection){if(collection==null){return 0;}
if(isArrayLike2(collection)){return isString2(collection)?stringSize2(collection):collection.length;}
var tag2=getTag$12(collection);if(tag2==mapTag$22||tag2==setTag$22){return collection.size;}
return baseKeys2(collection).length;}
function constant2(value){return function(){return value;};}
function arrayFilter2(array,predicate){var index2=-1,length3=array==null?0:array.length,resIndex=0,result=[];while(++index2<length3){var value=array[index2];if(predicate(value,index2,array)){result[resIndex++]=value;}}
return result;}
function baseFilter2(collection,predicate){var result=[];baseEach2(collection,function(value,index2,collection2){if(predicate(value,index2,collection2)){result.push(value);}});return result;}
function stackClear2(){this.__data__=new ListCache2();this.size=0;}
function stackDelete2(key){var data=this.__data__,result=data["delete"](key);this.size=data.size;return result;}
function stackGet2(key){return this.__data__.get(key);}
function stackHas2(key){return this.__data__.has(key);}
var LARGE_ARRAY_SIZE$12=200;function stackSet2(key,value){var data=this.__data__;if(data instanceof ListCache2){var pairs=data.__data__;if(!Map3||pairs.length<LARGE_ARRAY_SIZE$12-1){pairs.push([key,value]);this.size=++data.size;return this;}
data=this.__data__=new MapCache2(pairs);}
data.set(key,value);this.size=data.size;return this;}
function Stack2(entries){var data=this.__data__=new ListCache2(entries);this.size=data.size;}
Stack2.prototype.clear=stackClear2;Stack2.prototype["delete"]=stackDelete2;Stack2.prototype.get=stackGet2;Stack2.prototype.has=stackHas2;Stack2.prototype.set=stackSet2;var HASH_UNDEFINED2="__lodash_hash_undefined__";function setCacheAdd2(value){this.__data__.set(value,HASH_UNDEFINED2);return this;}
function setCacheHas2(value){return this.__data__.has(value);}
function SetCache2(values4){var index2=-1,length3=values4==null?0:values4.length;this.__data__=new MapCache2();while(++index2<length3){this.add(values4[index2]);}}
SetCache2.prototype.add=SetCache2.prototype.push=setCacheAdd2;SetCache2.prototype.has=setCacheHas2;function arraySome2(array,predicate){var index2=-1,length3=array==null?0:array.length;while(++index2<length3){if(predicate(array[index2],index2,array)){return true;}}
return false;}
function cacheHas2(cache2,key){return cache2.has(key);}
var COMPARE_PARTIAL_FLAG$52=1;var COMPARE_UNORDERED_FLAG$32=2;function equalArrays2(array,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG$52,arrLength=array.length,othLength=other.length;if(arrLength!=othLength&&!(isPartial&&othLength>arrLength)){return false;}
var arrStacked=stack.get(array);var othStacked=stack.get(other);if(arrStacked&&othStacked){return arrStacked==other&&othStacked==array;}
var index2=-1,result=true,seen=bitmask&COMPARE_UNORDERED_FLAG$32?new SetCache2():void 0;stack.set(array,other);stack.set(other,array);while(++index2<arrLength){var arrValue=array[index2],othValue=other[index2];if(customizer){var compared=isPartial?customizer(othValue,arrValue,index2,other,array,stack):customizer(arrValue,othValue,index2,array,other,stack);}
if(compared!==void 0){if(compared){continue;}
result=false;break;}
if(seen){if(!arraySome2(other,function(othValue2,othIndex){if(!cacheHas2(seen,othIndex)&&(arrValue===othValue2||equalFunc(arrValue,othValue2,bitmask,customizer,stack))){return seen.push(othIndex);}})){result=false;break;}}else if(!(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack))){result=false;break;}}
stack["delete"](array);stack["delete"](other);return result;}
var Uint8Array3=root2.Uint8Array;function mapToArray2(map4){var index2=-1,result=Array(map4.size);map4.forEach(function(value,key){result[++index2]=[key,value];});return result;}
function setToArray2(set3){var index2=-1,result=Array(set3.size);set3.forEach(function(value){result[++index2]=value;});return result;}
var COMPARE_PARTIAL_FLAG$42=1;var COMPARE_UNORDERED_FLAG$22=2;var boolTag2="[object Boolean]";var dateTag2="[object Date]";var errorTag2="[object Error]";var mapTag$12="[object Map]";var numberTag2="[object Number]";var regexpTag2="[object RegExp]";var setTag$12="[object Set]";var stringTag2="[object String]";var symbolTag2="[object Symbol]";var arrayBufferTag2="[object ArrayBuffer]";var dataViewTag2="[object DataView]";var symbolProto2=Symbol3?Symbol3.prototype:void 0;var symbolValueOf2=symbolProto2?symbolProto2.valueOf:void 0;function equalByTag2(object,other,tag2,bitmask,customizer,equalFunc,stack){switch(tag2){case dataViewTag2:if(object.byteLength!=other.byteLength||object.byteOffset!=other.byteOffset){return false;}
object=object.buffer;other=other.buffer;case arrayBufferTag2:if(object.byteLength!=other.byteLength||!equalFunc(new Uint8Array3(object),new Uint8Array3(other))){return false;}
return true;case boolTag2:case dateTag2:case numberTag2:return eq2(+object,+other);case errorTag2:return object.name==other.name&&object.message==other.message;case regexpTag2:case stringTag2:return object==other+"";case mapTag$12:var convert=mapToArray2;case setTag$12:var isPartial=bitmask&COMPARE_PARTIAL_FLAG$42;convert||(convert=setToArray2);if(object.size!=other.size&&!isPartial){return false;}
var stacked=stack.get(object);if(stacked){return stacked==other;}
bitmask|=COMPARE_UNORDERED_FLAG$22;stack.set(object,other);var result=equalArrays2(convert(object),convert(other),bitmask,customizer,equalFunc,stack);stack["delete"](object);return result;case symbolTag2:if(symbolValueOf2){return symbolValueOf2.call(object)==symbolValueOf2.call(other);}}
return false;}
function arrayPush2(array,values4){var index2=-1,length3=values4.length,offset=array.length;while(++index2<length3){array[offset+index2]=values4[index2];}
return array;}
function baseGetAllKeys2(object,keysFunc,symbolsFunc){var result=keysFunc(object);return isArray2(object)?result:arrayPush2(result,symbolsFunc(object));}
function stubArray2(){return[];}
var objectProto$32=Object.prototype;var propertyIsEnumerable2=objectProto$32.propertyIsEnumerable;var nativeGetSymbols2=Object.getOwnPropertySymbols;var getSymbols2=!nativeGetSymbols2?stubArray2:function(object){if(object==null){return[];}
object=Object(object);return arrayFilter2(nativeGetSymbols2(object),function(symbol){return propertyIsEnumerable2.call(object,symbol);});};function getAllKeys2(object){return baseGetAllKeys2(object,keys2,getSymbols2);}
var COMPARE_PARTIAL_FLAG$32=1;var objectProto$22=Object.prototype;var hasOwnProperty$22=objectProto$22.hasOwnProperty;function equalObjects2(object,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG$32,objProps=getAllKeys2(object),objLength=objProps.length,othProps=getAllKeys2(other),othLength=othProps.length;if(objLength!=othLength&&!isPartial){return false;}
var index2=objLength;while(index2--){var key=objProps[index2];if(!(isPartial?key in other:hasOwnProperty$22.call(other,key))){return false;}}
var objStacked=stack.get(object);var othStacked=stack.get(other);if(objStacked&&othStacked){return objStacked==other&&othStacked==object;}
var result=true;stack.set(object,other);stack.set(other,object);var skipCtor=isPartial;while(++index2<objLength){key=objProps[index2];var objValue=object[key],othValue=other[key];if(customizer){var compared=isPartial?customizer(othValue,objValue,key,other,object,stack):customizer(objValue,othValue,key,object,other,stack);}
if(!(compared===void 0?objValue===othValue||equalFunc(objValue,othValue,bitmask,customizer,stack):compared)){result=false;break;}
skipCtor||(skipCtor=key=="constructor");}
if(result&&!skipCtor){var objCtor=object.constructor,othCtor=other.constructor;if(objCtor!=othCtor&&("constructor"in object&&"constructor"in other)&&!(typeof objCtor=="function"&&objCtor instanceof objCtor&&typeof othCtor=="function"&&othCtor instanceof othCtor)){result=false;}}
stack["delete"](object);stack["delete"](other);return result;}
var COMPARE_PARTIAL_FLAG$22=1;var argsTag2="[object Arguments]";var arrayTag2="[object Array]";var objectTag2="[object Object]";var objectProto$12=Object.prototype;var hasOwnProperty$12=objectProto$12.hasOwnProperty;function baseIsEqualDeep2(object,other,bitmask,customizer,equalFunc,stack){var objIsArr=isArray2(object),othIsArr=isArray2(other),objTag=objIsArr?arrayTag2:getTag$12(object),othTag=othIsArr?arrayTag2:getTag$12(other);objTag=objTag==argsTag2?objectTag2:objTag;othTag=othTag==argsTag2?objectTag2:othTag;var objIsObj=objTag==objectTag2,othIsObj=othTag==objectTag2,isSameTag=objTag==othTag;if(isSameTag&&isBuffer2(object)){if(!isBuffer2(other)){return false;}
objIsArr=true;objIsObj=false;}
if(isSameTag&&!objIsObj){stack||(stack=new Stack2());return objIsArr||isTypedArray2(object)?equalArrays2(object,other,bitmask,customizer,equalFunc,stack):equalByTag2(object,other,objTag,bitmask,customizer,equalFunc,stack);}
if(!(bitmask&COMPARE_PARTIAL_FLAG$22)){var objIsWrapped=objIsObj&&hasOwnProperty$12.call(object,"__wrapped__"),othIsWrapped=othIsObj&&hasOwnProperty$12.call(other,"__wrapped__");if(objIsWrapped||othIsWrapped){var objUnwrapped=objIsWrapped?object.value():object,othUnwrapped=othIsWrapped?other.value():other;stack||(stack=new Stack2());return equalFunc(objUnwrapped,othUnwrapped,bitmask,customizer,stack);}}
if(!isSameTag){return false;}
stack||(stack=new Stack2());return equalObjects2(object,other,bitmask,customizer,equalFunc,stack);}
function baseIsEqual2(value,other,bitmask,customizer,stack){if(value===other){return true;}
if(value==null||other==null||!isObjectLike2(value)&&!isObjectLike2(other)){return value!==value&&other!==other;}
return baseIsEqualDeep2(value,other,bitmask,customizer,baseIsEqual2,stack);}
var COMPARE_PARTIAL_FLAG$12=1;var COMPARE_UNORDERED_FLAG$12=2;function baseIsMatch2(object,source,matchData,customizer){var index2=matchData.length,length3=index2,noCustomizer=!customizer;if(object==null){return!length3;}
object=Object(object);while(index2--){var data=matchData[index2];if(noCustomizer&&data[2]?data[1]!==object[data[0]]:!(data[0]in object)){return false;}}
while(++index2<length3){data=matchData[index2];var key=data[0],objValue=object[key],srcValue=data[1];if(noCustomizer&&data[2]){if(objValue===void 0&&!(key in object)){return false;}}else{var stack=new Stack2();if(customizer){var result=customizer(objValue,srcValue,key,object,source,stack);}
if(!(result===void 0?baseIsEqual2(srcValue,objValue,COMPARE_PARTIAL_FLAG$12|COMPARE_UNORDERED_FLAG$12,customizer,stack):result)){return false;}}}
return true;}
function isStrictComparable2(value){return value===value&&!isObject2(value);}
function getMatchData2(object){var result=keys2(object),length3=result.length;while(length3--){var key=result[length3],value=object[key];result[length3]=[key,value,isStrictComparable2(value)];}
return result;}
function matchesStrictComparable2(key,srcValue){return function(object){if(object==null){return false;}
return object[key]===srcValue&&(srcValue!==void 0||key in Object(object));};}
function baseMatches2(source){var matchData=getMatchData2(source);if(matchData.length==1&&matchData[0][2]){return matchesStrictComparable2(matchData[0][0],matchData[0][1]);}
return function(object){return object===source||baseIsMatch2(object,source,matchData);};}
function baseGet2(object,path4){path4=castPath2(path4,object);var index2=0,length3=path4.length;while(object!=null&&index2<length3){object=object[toKey2(path4[index2++])];}
return index2&&index2==length3?object:void 0;}
function get2(object,path4,defaultValue){var result=object==null?void 0:baseGet2(object,path4);return result===void 0?defaultValue:result;}
function baseHasIn2(object,key){return object!=null&&key in Object(object);}
function hasIn2(object,path4){return object!=null&&hasPath2(object,path4,baseHasIn2);}
var COMPARE_PARTIAL_FLAG2=1;var COMPARE_UNORDERED_FLAG2=2;function baseMatchesProperty2(path4,srcValue){if(isKey2(path4)&&isStrictComparable2(srcValue)){return matchesStrictComparable2(toKey2(path4),srcValue);}
return function(object){var objValue=get2(object,path4);return objValue===void 0&&objValue===srcValue?hasIn2(object,path4):baseIsEqual2(srcValue,objValue,COMPARE_PARTIAL_FLAG2|COMPARE_UNORDERED_FLAG2);};}
function basePropertyDeep2(path4){return function(object){return baseGet2(object,path4);};}
function property2(path4){return isKey2(path4)?baseProperty2(toKey2(path4)):basePropertyDeep2(path4);}
function baseIteratee2(value){if(typeof value=="function"){return value;}
if(value==null){return identity3;}
if(typeof value=="object"){return isArray2(value)?baseMatchesProperty2(value[0],value[1]):baseMatches2(value);}
return property2(value);}
function filter2(collection,predicate){var func=isArray2(collection)?arrayFilter2:baseFilter2;return func(collection,baseIteratee2(predicate));}
function isUndefined2(value){return value===void 0;}
var spreadableSymbol2=Symbol3?Symbol3.isConcatSpreadable:void 0;function isFlattenable2(value){return isArray2(value)||isArguments2(value)||!!(spreadableSymbol2&&value&&value[spreadableSymbol2]);}
function baseFlatten2(array,depth,predicate,isStrict,result){var index2=-1,length3=array.length;predicate||(predicate=isFlattenable2);result||(result=[]);while(++index2<length3){var value=array[index2];if(depth>0&&predicate(value)){if(depth>1){baseFlatten2(value,depth-1,predicate,isStrict,result);}else{arrayPush2(result,value);}}else if(!isStrict){result[result.length]=value;}}
return result;}
function apply2(func,thisArg,args){switch(args.length){case 0:return func.call(thisArg);case 1:return func.call(thisArg,args[0]);case 2:return func.call(thisArg,args[0],args[1]);case 3:return func.call(thisArg,args[0],args[1],args[2]);}
return func.apply(thisArg,args);}
var nativeMax2=Math.max;function overRest2(func,start,transform7){start=nativeMax2(start===void 0?func.length-1:start,0);return function(){var args=arguments,index2=-1,length3=nativeMax2(args.length-start,0),array=Array(length3);while(++index2<length3){array[index2]=args[start+index2];}
index2=-1;var otherArgs=Array(start+1);while(++index2<start){otherArgs[index2]=args[index2];}
otherArgs[start]=transform7(array);return apply2(func,this,otherArgs);};}
var defineProperty2=function(){try{var func=getNative2(Object,"defineProperty");func({},"",{});return func;}catch(e){}}();var baseSetToString2=!defineProperty2?identity3:function(func,string){return defineProperty2(func,"toString",{"configurable":true,"enumerable":false,"value":constant2(string),"writable":true});};var HOT_COUNT2=800;var HOT_SPAN2=16;var nativeNow2=Date.now;function shortOut2(func){var count=0,lastCalled=0;return function(){var stamp=nativeNow2(),remaining=HOT_SPAN2-(stamp-lastCalled);lastCalled=stamp;if(remaining>0){if(++count>=HOT_COUNT2){return arguments[0];}}else{count=0;}
return func.apply(void 0,arguments);};}
var setToString2=shortOut2(baseSetToString2);function baseRest2(func,start){return setToString2(overRest2(func,start,identity3),func+"");}
function baseFindIndex2(array,predicate,fromIndex,fromRight){var length3=array.length,index2=fromIndex+(fromRight?1:-1);while(fromRight?index2--:++index2<length3){if(predicate(array[index2],index2,array)){return index2;}}
return-1;}
function baseIsNaN2(value){return value!==value;}
function strictIndexOf2(array,value,fromIndex){var index2=fromIndex-1,length3=array.length;while(++index2<length3){if(array[index2]===value){return index2;}}
return-1;}
function baseIndexOf2(array,value,fromIndex){return value===value?strictIndexOf2(array,value,fromIndex):baseFindIndex2(array,baseIsNaN2,fromIndex);}
function arrayIncludes2(array,value){var length3=array==null?0:array.length;return!!length3&&baseIndexOf2(array,value,0)>-1;}
function arrayIncludesWith2(array,value,comparator){var index2=-1,length3=array==null?0:array.length;while(++index2<length3){if(comparator(value,array[index2])){return true;}}
return false;}
function noop2(){}
var INFINITY2=1/0;var createSet2=!(Set$1&&1/setToArray2(new Set$1([,-0]))[1]==INFINITY2)?noop2:function(values4){return new Set$1(values4);};var LARGE_ARRAY_SIZE2=200;function baseUniq2(array,iteratee,comparator){var index2=-1,includes=arrayIncludes2,length3=array.length,isCommon=true,result=[],seen=result;if(comparator){isCommon=false;includes=arrayIncludesWith2;}else if(length3>=LARGE_ARRAY_SIZE2){var set3=iteratee?null:createSet2(array);if(set3){return setToArray2(set3);}
isCommon=false;includes=cacheHas2;seen=new SetCache2();}else{seen=iteratee?[]:result;}
outer:while(++index2<length3){var value=array[index2],computed=iteratee?iteratee(value):value;value=comparator||value!==0?value:0;if(isCommon&&computed===computed){var seenIndex=seen.length;while(seenIndex--){if(seen[seenIndex]===computed){continue outer;}}
if(iteratee){seen.push(computed);}
result.push(value);}else if(!includes(seen,computed,comparator)){if(seen!==result){seen.push(computed);}
result.push(value);}}
return result;}
function isArrayLikeObject2(value){return isObjectLike2(value)&&isArrayLike2(value);}
var union2=baseRest2(function(arrays){return baseUniq2(baseFlatten2(arrays,1,isArrayLikeObject2,true));});var objectCreate2=Object.create;var baseCreate2=function(){function object(){}
return function(proto){if(!isObject2(proto)){return{};}
if(objectCreate2){return objectCreate2(proto);}
object.prototype=proto;var result=new object();object.prototype=void 0;return result;};}();var getPrototype2=overArg2(Object.getPrototypeOf,Object);function transform4(object,iteratee,accumulator){var isArr=isArray2(object),isArrLike=isArr||isBuffer2(object)||isTypedArray2(object);iteratee=baseIteratee2(iteratee);if(accumulator==null){var Ctor=object&&object.constructor;if(isArrLike){accumulator=isArr?new Ctor():[];}else if(isObject2(object)){accumulator=isFunction2(Ctor)?baseCreate2(getPrototype2(object)):{};}else{accumulator={};}}
(isArrLike?arrayEach2:baseForOwn2)(object,function(value,index2,object2){return iteratee(accumulator,value,index2,object2);});return accumulator;}
function baseMap2(collection,iteratee){var index2=-1,result=isArrayLike2(collection)?Array(collection.length):[];baseEach2(collection,function(value,key,collection2){result[++index2]=iteratee(value,key,collection2);});return result;}
function map2(collection,iteratee){var func=isArray2(collection)?arrayMap2:baseMap2;return func(collection,baseIteratee2(iteratee));}
function baseValues2(object,props){return arrayMap2(props,function(key){return object[key];});}
function values2(object){return object==null?[]:baseValues2(object,keys2(object));}
var mapTag2="[object Map]";var setTag2="[object Set]";var objectProto2=Object.prototype;var hasOwnProperty2=objectProto2.hasOwnProperty;function isEmpty2(value){if(value==null){return true;}
if(isArrayLike2(value)&&(isArray2(value)||typeof value=="string"||typeof value.splice=="function"||isBuffer2(value)||isTypedArray2(value)||isArguments2(value))){return!value.length;}
var tag2=getTag$12(value);if(tag2==mapTag2||tag2==setTag2){return!value.size;}
if(isPrototype2(value)){return!baseKeys2(value).length;}
for(var key in value){if(hasOwnProperty2.call(value,key)){return false;}}
return true;}
function arrayReduce2(array,iteratee,accumulator,initAccum){var index2=-1,length3=array==null?0:array.length;if(initAccum&&length3){accumulator=array[++index2];}
while(++index2<length3){accumulator=iteratee(accumulator,array[index2],index2,array);}
return accumulator;}
function baseReduce2(collection,iteratee,accumulator,initAccum,eachFunc){eachFunc(collection,function(value,index2,collection2){accumulator=initAccum?(initAccum=false,value):iteratee(accumulator,value,index2,collection2);});return accumulator;}
function reduce2(collection,iteratee,accumulator){var func=isArray2(collection)?arrayReduce2:baseReduce2,initAccum=arguments.length<3;return func(collection,baseIteratee2(iteratee),accumulator,initAccum,baseEach2);}
var _2={has:has2,constant:constant2,each:forEach3,filter:filter2,isUndefined:isUndefined2,union:union2,transform:transform4,size:size2,isArray:isArray2,map:map2,keys:keys2,values:values2,isEmpty:isEmpty2,isFunction:isFunction2,reduce:reduce2};var DEFAULT_EDGE_NAME2="\0";var GRAPH_NODE2="\0";var EDGE_KEY_DELIM2="";function Graph2(opts){this._isDirected=_2.has(opts,"directed")?opts.directed:true;this._isMultigraph=_2.has(opts,"multigraph")?opts.multigraph:false;this._isCompound=_2.has(opts,"compound")?opts.compound:false;this._label=void 0;this._defaultNodeLabelFn=_2.constant(void 0);this._defaultEdgeLabelFn=_2.constant(void 0);this._nodes={};if(this._isCompound){this._parent={};this._children={};this._children[GRAPH_NODE2]={};}
this._in={};this._preds={};this._out={};this._sucs={};this._edgeObjs={};this._edgeLabels={};}
Graph2.prototype._nodeCount=0;Graph2.prototype._edgeCount=0;Graph2.prototype.isDirected=function(){return this._isDirected;};Graph2.prototype.isMultigraph=function(){return this._isMultigraph;};Graph2.prototype.isCompound=function(){return this._isCompound;};Graph2.prototype.setGraph=function(label){this._label=label;return this;};Graph2.prototype.graph=function(){return this._label;};Graph2.prototype.setDefaultNodeLabel=function(newDefault){if(!_2.isFunction(newDefault)){newDefault=_2.constant(newDefault);}
this._defaultNodeLabelFn=newDefault;return this;};Graph2.prototype.nodeCount=function(){return this._nodeCount;};Graph2.prototype.nodes=function(){return _2.keys(this._nodes);};Graph2.prototype.sources=function(){const self2=this;return _2.filter(this.nodes(),function(v){return _2.isEmpty(self2._in[v]);});};Graph2.prototype.sinks=function(){const self2=this;return _2.filter(this.nodes(),function(v){return _2.isEmpty(self2._out[v]);});};Graph2.prototype.setNodes=function(vs,value){const args=arguments;const self2=this;_2.each(vs,function(v){if(args.length>1){self2.setNode(v,value);}else{self2.setNode(v);}});return this;};Graph2.prototype.setNode=function(v,value){if(_2.has(this._nodes,v)){if(arguments.length>1){this._nodes[v]=value;}
return this;}
this._nodes[v]=arguments.length>1?value:this._defaultNodeLabelFn(v);if(this._isCompound){this._parent[v]=GRAPH_NODE2;this._children[v]={};this._children[GRAPH_NODE2][v]=true;}
this._in[v]={};this._preds[v]={};this._out[v]={};this._sucs[v]={};++this._nodeCount;return this;};Graph2.prototype.node=function(v){return this._nodes[v];};Graph2.prototype.hasNode=function(v){return _2.has(this._nodes,v);};Graph2.prototype.removeNode=function(v){const self2=this;if(_2.has(this._nodes,v)){const removeEdge=function(e){self2.removeEdge(self2._edgeObjs[e]);};delete this._nodes[v];if(this._isCompound){this._removeFromParentsChildList(v);delete this._parent[v];_2.each(this.children(v),function(child){self2.setParent(child);});delete this._children[v];}
_2.each(_2.keys(this._in[v]),removeEdge);delete this._in[v];delete this._preds[v];_2.each(_2.keys(this._out[v]),removeEdge);delete this._out[v];delete this._sucs[v];--this._nodeCount;}
return this;};Graph2.prototype.setParent=function(v,parent){if(!this._isCompound){throw new Error("Cannot set parent in a non-compound graph");}
if(_2.isUndefined(parent)){parent=GRAPH_NODE2;}else{parent+="";for(let ancestor=parent;!_2.isUndefined(ancestor);ancestor=this.parent(ancestor)){if(ancestor===v){throw new Error("Setting "+parent+" as parent of "+v+" would create a cycle");}}
this.setNode(parent);}
this.setNode(v);this._removeFromParentsChildList(v);this._parent[v]=parent;this._children[parent][v]=true;return this;};Graph2.prototype._removeFromParentsChildList=function(v){delete this._children[this._parent[v]][v];};Graph2.prototype.parent=function(v){if(this._isCompound){const parent=this._parent[v];if(parent!==GRAPH_NODE2){return parent;}}};Graph2.prototype.children=function(v){if(_2.isUndefined(v)){v=GRAPH_NODE2;}
if(this._isCompound){const children=this._children[v];if(children){return _2.keys(children);}}else if(v===GRAPH_NODE2){return this.nodes();}else if(this.hasNode(v)){return[];}};Graph2.prototype.predecessors=function(v){const predsV=this._preds[v];if(predsV){return _2.keys(predsV);}};Graph2.prototype.successors=function(v){const sucsV=this._sucs[v];if(sucsV){return _2.keys(sucsV);}};Graph2.prototype.neighbors=function(v){const preds=this.predecessors(v);if(preds){return _2.union(preds,this.successors(v));}};Graph2.prototype.isLeaf=function(v){let neighbors;if(this.isDirected()){neighbors=this.successors(v);}else{neighbors=this.neighbors(v);}
return neighbors.length===0;};Graph2.prototype.filterNodes=function(filter3){const copy4=new this.constructor({directed:this._isDirected,multigraph:this._isMultigraph,compound:this._isCompound});copy4.setGraph(this.graph());const self2=this;_2.each(this._nodes,function(value,v){if(filter3(v)){copy4.setNode(v,value);}});_2.each(this._edgeObjs,function(e){if(copy4.hasNode(e.v)&&copy4.hasNode(e.w)){copy4.setEdge(e,self2.edge(e));}});const parents={};function findParent(v){const parent=self2.parent(v);if(parent===void 0||copy4.hasNode(parent)){parents[v]=parent;return parent;}else if(parent in parents){return parents[parent];}else{return findParent(parent);}}
if(this._isCompound){_2.each(copy4.nodes(),function(v){copy4.setParent(v,findParent(v));});}
return copy4;};Graph2.prototype.setDefaultEdgeLabel=function(newDefault){if(!_2.isFunction(newDefault)){newDefault=_2.constant(newDefault);}
this._defaultEdgeLabelFn=newDefault;return this;};Graph2.prototype.edgeCount=function(){return this._edgeCount;};Graph2.prototype.edges=function(){return _2.values(this._edgeObjs);};Graph2.prototype.setPath=function(vs,value){const self2=this;const args=arguments;_2.reduce(vs,function(v,w){if(args.length>1){self2.setEdge(v,w,value);}else{self2.setEdge(v,w);}
return w;});return this;};Graph2.prototype.setEdge=function(){let v,w,name,value;let valueSpecified=false;const arg0=arguments[0];if(typeof arg0==="object"&&arg0!==null&&"v"in arg0){v=arg0.v;w=arg0.w;name=arg0.name;if(arguments.length===2){value=arguments[1];valueSpecified=true;}}else{v=arg0;w=arguments[1];name=arguments[3];if(arguments.length>2){value=arguments[2];valueSpecified=true;}}
v=""+v;w=""+w;if(!_2.isUndefined(name)){name=""+name;}
const e=edgeArgsToId2(this._isDirected,v,w,name);if(_2.has(this._edgeLabels,e)){if(valueSpecified){this._edgeLabels[e]=value;}
return this;}
if(!_2.isUndefined(name)&&!this._isMultigraph){throw new Error("Cannot set a named edge when isMultigraph = false");}
this.setNode(v);this.setNode(w);this._edgeLabels[e]=valueSpecified?value:this._defaultEdgeLabelFn(v,w,name);const edgeObj=edgeArgsToObj2(this._isDirected,v,w,name);v=edgeObj.v;w=edgeObj.w;Object.freeze(edgeObj);this._edgeObjs[e]=edgeObj;incrementOrInitEntry2(this._preds[w],v);incrementOrInitEntry2(this._sucs[v],w);this._in[w][e]=edgeObj;this._out[v][e]=edgeObj;this._edgeCount++;return this;};Graph2.prototype.edge=function(v,w,name){const e=arguments.length===1?edgeObjToId2(this._isDirected,arguments[0]):edgeArgsToId2(this._isDirected,v,w,name);return this._edgeLabels[e];};Graph2.prototype.hasEdge=function(v,w,name){const e=arguments.length===1?edgeObjToId2(this._isDirected,arguments[0]):edgeArgsToId2(this._isDirected,v,w,name);return _2.has(this._edgeLabels,e);};Graph2.prototype.removeEdge=function(v,w,name){const e=arguments.length===1?edgeObjToId2(this._isDirected,arguments[0]):edgeArgsToId2(this._isDirected,v,w,name);const edge=this._edgeObjs[e];if(edge){v=edge.v;w=edge.w;delete this._edgeLabels[e];delete this._edgeObjs[e];decrementOrRemoveEntry2(this._preds[w],v);decrementOrRemoveEntry2(this._sucs[v],w);delete this._in[w][e];delete this._out[v][e];this._edgeCount--;}
return this;};Graph2.prototype.inEdges=function(v,u){const inV=this._in[v];if(inV){const edges=_2.values(inV);if(!u){return edges;}
return _2.filter(edges,function(edge){return edge.v===u;});}};Graph2.prototype.outEdges=function(v,w){const outV=this._out[v];if(outV){const edges=_2.values(outV);if(!w){return edges;}
return _2.filter(edges,function(edge){return edge.w===w;});}};Graph2.prototype.nodeEdges=function(v,w){const inEdges=this.inEdges(v,w);if(inEdges){return inEdges.concat(this.outEdges(v,w));}};function incrementOrInitEntry2(map4,k){if(map4[k]){map4[k]++;}else{map4[k]=1;}}
function decrementOrRemoveEntry2(map4,k){if(!--map4[k]){delete map4[k];}}
function edgeArgsToId2(isDirected,v_,w_,name){let v=""+v_;let w=""+w_;if(!isDirected&&v>w){const tmp=v;v=w;w=tmp;}
return v+EDGE_KEY_DELIM2+w+EDGE_KEY_DELIM2+(_2.isUndefined(name)?DEFAULT_EDGE_NAME2:name);}
function edgeArgsToObj2(isDirected,v_,w_,name){let v=""+v_;let w=""+w_;if(!isDirected&&v>w){const tmp=v;v=w;w=tmp;}
const edgeObj={v,w};if(name){edgeObj.name=name;}
return edgeObj;}
function edgeObjToId2(isDirected,edgeObj){return edgeArgsToId2(isDirected,edgeObj.v,edgeObj.w,edgeObj.name);}
function components(g){const visited={};const cmpts=[];let cmpt;function dfs2(v){if(_2.has(visited,v))
return;visited[v]=true;cmpt.push(v);_2.each(g.successors(v),dfs2);_2.each(g.predecessors(v),dfs2);}
_2.each(g.nodes(),function(v){cmpt=[];dfs2(v);if(cmpt.length){cmpts.push(cmpt);}});return cmpts;}
function PriorityQueue2(){this._arr=[];this._keyIndices={};}
PriorityQueue2.prototype.size=function(){return this._arr.length;};PriorityQueue2.prototype.keys=function(){return this._arr.map(function(x2){return x2.key;});};PriorityQueue2.prototype.has=function(key){return _2.has(this._keyIndices,key);};PriorityQueue2.prototype.priority=function(key){const index2=this._keyIndices[key];if(index2!==void 0){return this._arr[index2].priority;}};PriorityQueue2.prototype.min=function(){if(this.size()===0){throw new Error("Queue underflow");}
return this._arr[0].key;};PriorityQueue2.prototype.add=function(key,priority){const keyIndices=this._keyIndices;key=String(key);if(!_2.has(keyIndices,key)){const arr2=this._arr;const index2=arr2.length;keyIndices[key]=index2;arr2.push({key,priority});this._decrease(index2);return true;}
return false;};PriorityQueue2.prototype.removeMin=function(){this._swap(0,this._arr.length-1);const min4=this._arr.pop();delete this._keyIndices[min4.key];this._heapify(0);return min4.key;};PriorityQueue2.prototype.decrease=function(key,priority){const index2=this._keyIndices[key];if(priority>this._arr[index2].priority){throw new Error("New priority is greater than current priority. Key: "+key+" Old: "+this._arr[index2].priority+" New: "+priority);}
this._arr[index2].priority=priority;this._decrease(index2);};PriorityQueue2.prototype._heapify=function(i2){const arr2=this._arr;const l=2*i2;const r=l+1;let largest=i2;if(l<arr2.length){largest=arr2[l].priority<arr2[largest].priority?l:largest;if(r<arr2.length){largest=arr2[r].priority<arr2[largest].priority?r:largest;}
if(largest!==i2){this._swap(i2,largest);this._heapify(largest);}}};PriorityQueue2.prototype._decrease=function(index2){const arr2=this._arr;const priority=arr2[index2].priority;let parent;while(index2!==0){parent=index2>>1;if(arr2[parent].priority<priority){break;}
this._swap(index2,parent);index2=parent;}};PriorityQueue2.prototype._swap=function(i2,j){const arr2=this._arr;const keyIndices=this._keyIndices;const origArrI=arr2[i2];const origArrJ=arr2[j];arr2[i2]=origArrJ;arr2[j]=origArrI;keyIndices[origArrJ.key]=i2;keyIndices[origArrI.key]=j;};var DEFAULT_WEIGHT_FUNC$12=_2.constant(1);function dijkstra(g,source,weightFn,edgeFn){return runDijkstra(g,String(source),weightFn||DEFAULT_WEIGHT_FUNC$12,edgeFn||function(v){return g.outEdges(v);});}
function runDijkstra(g,source,weightFn,edgeFn){const results={};const pq=new PriorityQueue2();let v,vEntry;const updateNeighbors=function(edge){const w=edge.v!==v?edge.v:edge.w;const wEntry=results[w];const weight=weightFn(edge);const distance3=vEntry.distance+weight;if(weight<0){throw new Error("dijkstra does not allow negative edge weights. Bad edge: "+edge+" Weight: "+weight);}
if(distance3<wEntry.distance){wEntry.distance=distance3;wEntry.predecessor=v;pq.decrease(w,distance3);}};g.nodes().forEach(function(v2){const distance3=v2===source?0:Number.POSITIVE_INFINITY;results[v2]={distance:distance3};pq.add(v2,distance3);});while(pq.size()>0){v=pq.removeMin();vEntry=results[v];if(vEntry.distance===Number.POSITIVE_INFINITY){break;}
edgeFn(v).forEach(updateNeighbors);}
return results;}
function dijkstraAll(g,weightFunc,edgeFunc){return _2.transform(g.nodes(),function(acc,v){acc[v]=dijkstra(g,v,weightFunc,edgeFunc);},{});}
function tarjan(g){let index2=0;const stack=[];const visited={};const results=[];function dfs2(v){const entry=visited[v]={onStack:true,lowlink:index2,index:index2++};stack.push(v);g.successors(v).forEach(function(w){if(!_2.has(visited,w)){dfs2(w);entry.lowlink=Math.min(entry.lowlink,visited[w].lowlink);}else if(visited[w].onStack){entry.lowlink=Math.min(entry.lowlink,visited[w].index);}});if(entry.lowlink===entry.index){const cmpt=[];let w;do{w=stack.pop();visited[w].onStack=false;cmpt.push(w);}while(v!==w);results.push(cmpt);}}
g.nodes().forEach(function(v){if(!_2.has(visited,v)){dfs2(v);}});return results;}
function findCycles(g){return _2.filter(tarjan(g),function(cmpt){return cmpt.length>1||cmpt.length===1&&g.hasEdge(cmpt[0],cmpt[0]);});}
var DEFAULT_WEIGHT_FUNC2=_2.constant(1);function floydWarshall(g,weightFn,edgeFn){return runFloydWarshall(g,weightFn||DEFAULT_WEIGHT_FUNC2,edgeFn||function(v){return g.outEdges(v);});}
function runFloydWarshall(g,weightFn,edgeFn){const results={};const nodes=g.nodes();nodes.forEach(function(v){results[v]={};results[v][v]={distance:0};nodes.forEach(function(w){if(v!==w){results[v][w]={distance:Number.POSITIVE_INFINITY};}});edgeFn(v).forEach(function(edge){const w=edge.v===v?edge.w:edge.v;const d=weightFn(edge);results[v][w]={distance:d,predecessor:v};});});nodes.forEach(function(k){const rowK=results[k];nodes.forEach(function(i2){const rowI=results[i2];nodes.forEach(function(j){const ik=rowI[k];const kj=rowK[j];const ij=rowI[j];const altDistance=ik.distance+kj.distance;if(altDistance<ij.distance){ij.distance=altDistance;ij.predecessor=kj.predecessor;}});});});return results;}
topsort2.CycleException=CycleException2;function topsort2(g){const visited={};const stack={};const results=[];function visit(node2){if(_2.has(stack,node2)){throw new CycleException2();}
if(!_2.has(visited,node2)){stack[node2]=true;visited[node2]=true;_2.each(g.predecessors(node2),visit);delete stack[node2];results.push(node2);}}
_2.each(g.sinks(),visit);if(_2.size(visited)!==g.nodeCount()){throw new CycleException2();}
return results;}
function CycleException2(){}
CycleException2.prototype=new Error();function isAcyclic(g){try{topsort2(g);}catch(e){if(e instanceof topsort2.CycleException){return false;}
throw e;}
return true;}
function dfs$1(g,vs,order2){if(!_2.isArray(vs)){vs=[vs];}
const navigation=(g.isDirected()?g.successors:g.neighbors).bind(g);const acc=[];const visited={};_2.each(vs,function(v){if(!g.hasNode(v)){throw new Error("Graph does not have node: "+v);}
doDfs(g,v,order2==="post",visited,navigation,acc);});return acc;}
function doDfs(g,v,postorder2,visited,navigation,acc){if(!_2.has(visited,v)){visited[v]=true;if(!postorder2){acc.push(v);}
_2.each(navigation(v),function(w){doDfs(g,w,postorder2,visited,navigation,acc);});if(postorder2){acc.push(v);}}}
function postorder$2(g,vs){return dfs$1(g,vs,"post");}
function preorder$1(g,vs){return dfs$1(g,vs,"pre");}
function prim(g,weightFunc){const result=new Graph2();const parents={};const pq=new PriorityQueue2();let v;function updateNeighbors(edge){const w=edge.v===v?edge.w:edge.v;const pri=pq.priority(w);if(pri!==void 0){const edgeWeight=weightFunc(edge);if(edgeWeight<pri){parents[w]=v;pq.decrease(w,edgeWeight);}}}
if(g.nodeCount()===0){return result;}
_2.each(g.nodes(),function(v2){pq.add(v2,Number.POSITIVE_INFINITY);result.setNode(v2);});pq.decrease(g.nodes()[0],0);let init=false;while(pq.size()>0){v=pq.removeMin();if(_2.has(parents,v)){result.setEdge(v,parents[v]);}else if(init){throw new Error("Input graph is not connected: "+g);}else{init=true;}
g.nodeEdges(v).forEach(updateNeighbors);}
return result;}
var alg={components,dijkstra,dijkstraAll,findCycles,floydWarshall,isAcyclic,postorder:postorder$2,preorder:preorder$1,prim,tarjan,topsort:topsort2};function List(){const sentinel={};sentinel._next=sentinel._prev=sentinel;this._sentinel=sentinel;}
List.prototype.dequeue=function(){const sentinel=this._sentinel;const entry=sentinel._prev;if(entry!==sentinel){unlink(entry);return entry;}};List.prototype.enqueue=function(entry){const sentinel=this._sentinel;if(entry._prev&&entry._next){unlink(entry);}
entry._next=sentinel._next;sentinel._next._prev=entry;sentinel._next=entry;entry._prev=sentinel;};List.prototype.toString=function(){const strs=[];const sentinel=this._sentinel;let curr=sentinel._prev;while(curr!==sentinel){strs.push(JSON.stringify(curr,filterOutLinks));curr=curr._prev;}
return"["+strs.join(", ")+"]";};function unlink(entry){entry._prev._next=entry._next;entry._next._prev=entry._prev;delete entry._next;delete entry._prev;}
function filterOutLinks(k,v){if(k!=="_next"&&k!=="_prev"){return v;}}
var DEFAULT_WEIGHT_FN=(e)=>1;function greedyFAS(g,weightFn){if(g.nodeCount()<=1){return[];}
const state=buildState(g,weightFn||DEFAULT_WEIGHT_FN);const results=doGreedyFAS(state.graph,state.buckets,state.zeroIdx);return flatten(map$1(results,function(e){return g.outEdges(e.v,e.w);}));}
function doGreedyFAS(g,buckets,zeroIdx){let results=[];const sources=buckets[buckets.length-1];const sinks=buckets[0];let entry;while(g.nodeCount()){while(entry=sinks.dequeue()){removeNode(g,buckets,zeroIdx,entry);}
while(entry=sources.dequeue()){removeNode(g,buckets,zeroIdx,entry);}
if(g.nodeCount()){for(let i2=buckets.length-2;i2>0;--i2){entry=buckets[i2].dequeue();if(entry){results=results.concat(removeNode(g,buckets,zeroIdx,entry,true));break;}}}}
return results;}
function removeNode(g,buckets,zeroIdx,entry,collectPredecessors=false){const results=collectPredecessors?[]:void 0;forEach$1(g.inEdges(entry.v),function(edge){const weight=g.edge(edge);const uEntry=g.node(edge.v);if(collectPredecessors){results.push({v:edge.v,w:edge.w});}
uEntry.out-=weight;assignBucket(buckets,zeroIdx,uEntry);});forEach$1(g.outEdges(entry.v),function(edge){const weight=g.edge(edge);const w=edge.w;const wEntry=g.node(w);wEntry["in"]-=weight;assignBucket(buckets,zeroIdx,wEntry);});g.removeNode(entry.v);return results;}
function buildState(g,weightFn){const fasGraph=new Graph2();let maxIn=0;let maxOut=0;forEach$1(g.nodes(),function(v){fasGraph.setNode(v,{v,in:0,out:0});});forEach$1(g.edges(),function(e){const prevWeight=fasGraph.edge(e.v,e.w)||0;const weight=weightFn(e);const edgeWeight=prevWeight+weight;fasGraph.setEdge(e.v,e.w,edgeWeight);maxOut=Math.max(maxOut,fasGraph.node(e.v).out+=weight);maxIn=Math.max(maxIn,fasGraph.node(e.w)["in"]+=weight);});const buckets=range$1(maxOut+maxIn+3).map(function(){return new List();});const zeroIdx=maxIn+1;forEach$1(fasGraph.nodes(),function(v){assignBucket(buckets,zeroIdx,fasGraph.node(v));});return{graph:fasGraph,buckets,zeroIdx};}
function assignBucket(buckets,zeroIdx,entry){if(!entry.out){buckets[0].enqueue(entry);}else if(!entry["in"]){buckets[buckets.length-1].enqueue(entry);}else{buckets[entry.out-entry["in"]+zeroIdx].enqueue(entry);}}
function run$2(g){const fas=g.graph().acyclicer==="greedy"?greedyFAS(g,weightFn(g)):dfsFAS(g);forEach$1(fas,function(e){const label=g.edge(e);g.removeEdge(e);label.forwardName=e.name;label.reversed=true;g.setEdge(e.w,e.v,label,uniqueId("rev"));});function weightFn(g2){return function(e){return g2.edge(e).weight;};}}
function dfsFAS(g){const fas=[];const stack={};const visited={};function dfs2(v){if(has$1(visited,v)){return;}
visited[v]=true;stack[v]=true;forEach$1(g.outEdges(v),function(e){if(has$1(stack,e.w)){fas.push(e);}else{dfs2(e.w);}});delete stack[v];}
forEach$1(g.nodes(),dfs2);return fas;}
function undo$2(g){forEach$1(g.edges(),function(e){const label=g.edge(e);if(label.reversed){g.removeEdge(e);const forwardName=label.forwardName;delete label.reversed;delete label.forwardName;g.setEdge(e.w,e.v,label,forwardName);}});}
var acyclic={run:run$2,undo:undo$2};function addDummyNode(g,type,attrs,name){let v;do{v=uniqueId(name);}while(g.hasNode(v));attrs.dummy=type;g.setNode(v,attrs);return v;}
function simplify(g){const simplified=new Graph2().setGraph(g.graph());forEach$1(g.nodes(),function(v){simplified.setNode(v,g.node(v));});forEach$1(g.edges(),function(e){const simpleLabel=simplified.edge(e.v,e.w)||{weight:0,minlen:1};const label=g.edge(e);simplified.setEdge(e.v,e.w,{weight:simpleLabel.weight+label.weight,minlen:Math.max(simpleLabel.minlen,label.minlen)});});return simplified;}
function asNonCompoundGraph(g){const simplified=new Graph2({multigraph:g.isMultigraph()}).setGraph(g.graph());forEach$1(g.nodes(),function(v){if(!g.children(v).length){simplified.setNode(v,g.node(v));}});forEach$1(g.edges(),function(e){simplified.setEdge(e,g.edge(e));});return simplified;}
function successorWeights(g){const weightMap=map$1(g.nodes(),function(v){const sucs={};forEach$1(g.outEdges(v),function(e){sucs[e.w]=(sucs[e.w]||0)+g.edge(e).weight;});return sucs;});return zipObject(g.nodes(),weightMap);}
function predecessorWeights(g){const weightMap=map$1(g.nodes(),function(v){const preds={};forEach$1(g.inEdges(v),function(e){preds[e.v]=(preds[e.v]||0)+g.edge(e).weight;});return preds;});return zipObject(g.nodes(),weightMap);}
function intersectRect(rect,point2){const x2=rect.x;const y2=rect.y;const dx=point2.x-x2;const dy=point2.y-y2;let w=rect.width/2;let h=rect.height/2;if(!dx&&!dy){throw new Error("Not possible to find intersection inside of the rectangle");}
let sx;let sy;if(Math.abs(dy)*w>Math.abs(dx)*h){if(dy<0){h=-h;}
sx=h*dx/dy;sy=h;}else{if(dx<0){w=-w;}
sx=w;sy=w*dy/dx;}
return{x:x2+sx,y:y2+sy};}
function buildLayerMatrix(g){const layering=map$1(range$1(maxRank(g)+1),function(){return[];});forEach$1(g.nodes(),function(v){const node2=g.node(v);const rank2=node2.rank;if(!isUndefined$1(rank2)&&typeof node2.order==="number"){layering[rank2][node2.order]=v;}});return layering;}
function normalizeRanks(g){const min$1=min3(map$1(g.nodes(),function(v){return g.node(v).rank;}));forEach$1(g.nodes(),function(v){const node2=g.node(v);if(has$1(node2,"rank")){node2.rank-=min$1;}});}
function removeEmptyRanks(g){const offset=min3(map$1(g.nodes(),function(v){return g.node(v).rank;}));const layers=[];forEach$1(g.nodes(),function(v){const rank2=g.node(v).rank-offset;if(!layers[rank2]){layers[rank2]=[];}
layers[rank2].push(v);});let delta=0;const nodeRankFactor=g.graph().nodeRankFactor;forEach$1(layers,function(vs,i2){if(isUndefined$1(vs)&&i2%nodeRankFactor!==0){--delta;}else if(delta){forEach$1(vs,function(v){g.node(v).rank+=delta;});}});}
function addBorderNode$1(g,prefix,rank2,order2){const node2={width:0,height:0};if(arguments.length>=4){node2.rank=rank2;node2.order=order2;}
return addDummyNode(g,"border",node2,prefix);}
function maxRank(g){return max3(map$1(g.nodes(),function(v){const rank2=g.node(v).rank;if(!isUndefined$1(rank2)){return rank2;}}));}
function partition(collection,fn){const result={lhs:[],rhs:[]};forEach$1(collection,function(value){if(fn(value)){result.lhs.push(value);}else{result.rhs.push(value);}});return result;}
function time(name,fn){const start=Date.now();try{return fn();}finally{console.log(name+" time: "+(Date.now()-start)+"ms");}}
function notime(name,fn){return fn();}
function comparePositions(p1,p2){const isXEqual=p1.x===p2.x;const isYEqual=p1.y===p2.y;const leftOne=p2.x<p1.x?p2:p1;const topOne=p2.y<p1.y?p2:p1;const rightOne=p1===leftOne?p2:p1;const bottomOne=p1===topOne?p2:p1;const dx=rightOne.x-leftOne.x;const dy=bottomOne.y-topOne.y;return{isXEqual,isYEqual,leftOne,rightOne,topOne,bottomOne,dx,dy};}
function isInsideRange(v,range2){const[start,end]=range2;if(v>=start&&v<=end)
return true;return false;}
function getNum(v,defaultValue=0){return v||defaultValue;}
function isNumber(v){return typeof v==="number"&&!isNaN(v);}
var util2={addDummyNode,simplify,asNonCompoundGraph,successorWeights,predecessorWeights,intersectRect,buildLayerMatrix,normalizeRanks,removeEmptyRanks,addBorderNode:addBorderNode$1,maxRank,partition,time,notime};function run$1(g){g.graph().dummyChains=[];forEach$1(g.edges(),function(edge){normalizeEdge(g,edge);});}
function normalizeEdge(g,e){let v=e.v;let vRank=g.node(v).rank;const w=e.w;const wRank=g.node(w).rank;const name=e.name;const edgeLabel=g.edge(e);const labelRank=edgeLabel.labelRank;if(wRank===vRank+1)
return;g.removeEdge(e);let dummy;let attrs;let i2;for(i2=0,++vRank;vRank<wRank;++i2,++vRank){edgeLabel.points=[];attrs={width:0,height:0,edgeLabel,edgeObj:e,rank:vRank};dummy=util2.addDummyNode(g,"edge",attrs,"_d");if(vRank===labelRank){attrs.width=edgeLabel.width;attrs.height=edgeLabel.height;attrs.dummy="edge-label";attrs.labelpos=edgeLabel.labelpos;}
g.setEdge(v,dummy,{weight:edgeLabel.weight},name);if(i2===0){g.graph().dummyChains.push(dummy);}
v=dummy;}
g.setEdge(v,w,{weight:edgeLabel.weight},name);}
function undo$1(g){forEach$1(g.graph().dummyChains,function(v){let node2=g.node(v);const origLabel=node2.edgeLabel;let w=null;g.setEdge(node2.edgeObj,origLabel);while(node2.dummy){w=g.successors(v)[0];g.removeNode(v);origLabel.points.push({x:node2.x,y:node2.y});if(node2.dummy==="edge-label"){origLabel.x=node2.x;origLabel.y=node2.y;origLabel.width=node2.width;origLabel.height=node2.height;}
v=w;node2=g.node(v);}});}
var normalize2={run:run$1,undo:undo$1};function longestPath(g){const visited={};function dfs2(v){const label=g.node(v);if(has$1(visited,v)){return label.rank;}
visited[v]=true;const rank2=min3(map$1(g.outEdges(v),function(e){return dfs2(e.w)-g.edge(e).minlen;}))||0;label.rank=rank2;return rank2;}
forEach$1(g.sources(),dfs2);}
function slack(g,e){return g.node(e.w).rank-g.node(e.v).rank-g.edge(e).minlen;}
function feasibleTree(g){const t=new Graph2({directed:false});const start=g.nodes()[0];const size4=g.nodeCount();t.setNode(start,{});let edge;let delta;while(tightTree(t,g)<size4){edge=findMinSlackEdge(t,g);if(!edge)
break;delta=t.hasNode(edge.v)?slack(g,edge):-slack(g,edge);shiftRanks(t,g,delta);}
return t;}
function tightTree(t,g){function dfs2(v){forEach$1(g.nodeEdges(v),function(e){const edgeV=e.v;const w=v===edgeV?e.w:edgeV;if(!t.hasNode(w)&&!slack(g,e)){t.setNode(w,{});t.setEdge(v,w,{});dfs2(w);}});}
forEach$1(t.nodes(),dfs2);return t.nodeCount();}
function findMinSlackEdge(t,g){return minBy(g.edges(),function(e){if(t.hasNode(e.v)!==t.hasNode(e.w)){return slack(g,e);}});}
function shiftRanks(t,g,delta){forEach$1(t.nodes(),function(v){g.node(v).rank+=delta;});}
var{preorder,postorder:postorder$1}=alg;networkSimplex.initLowLimValues=initLowLimValues;networkSimplex.initCutValues=initCutValues;networkSimplex.calcCutValue=calcCutValue;networkSimplex.leaveEdge=leaveEdge;networkSimplex.enterEdge=enterEdge;networkSimplex.exchangeEdges=exchangeEdges;function networkSimplex(g){g=simplify(g);longestPath(g);const t=feasibleTree(g);initLowLimValues(t);initCutValues(t,g);let e;let f;while(e=leaveEdge(t)){f=enterEdge(t,g,e);exchangeEdges(t,g,e,f);}}
function initCutValues(t,g){let vs=postorder$1(t,t.nodes());vs=vs.slice(0,vs.length-1);forEach$1(vs,function(v){assignCutValue(t,g,v);});}
function assignCutValue(t,g,child){const childLab=t.node(child);const parent=childLab.parent;t.edge(child,parent).cutvalue=calcCutValue(t,g,child);}
function calcCutValue(t,g,child){const childLab=t.node(child);const parent=childLab.parent;let childIsTail=true;let graphEdge=g.edge(child,parent);let cutValue=0;if(!graphEdge){childIsTail=false;graphEdge=g.edge(parent,child);}
cutValue=graphEdge.weight;forEach$1(g.nodeEdges(child),function(e){const isOutEdge=e.v===child;const other=isOutEdge?e.w:e.v;if(other!==parent){const pointsToHead=isOutEdge===childIsTail;const otherWeight=g.edge(e).weight;cutValue+=pointsToHead?otherWeight:-otherWeight;if(isTreeEdge(t,child,other)){const otherCutValue=t.edge(child,other).cutvalue;cutValue+=pointsToHead?-otherCutValue:otherCutValue;}}});return cutValue;}
function initLowLimValues(tree,root3){if(arguments.length<2){root3=tree.nodes()[0];}
dfsAssignLowLim(tree,{},1,root3);}
function dfsAssignLowLim(tree,visited,nextLim,v,parent){const low=nextLim;const label=tree.node(v);visited[v]=true;forEach$1(tree.neighbors(v),function(w){if(!has$1(visited,w)){nextLim=dfsAssignLowLim(tree,visited,nextLim,w,v);}});label.low=low;label.lim=nextLim++;if(parent){label.parent=parent;}else{delete label.parent;}
return nextLim;}
function leaveEdge(tree){return find$1(tree.edges(),function(e){return tree.edge(e).cutvalue<0;});}
function enterEdge(t,g,edge){let v=edge.v;let w=edge.w;if(!g.hasEdge(v,w)){v=edge.w;w=edge.v;}
const vLabel=t.node(v);const wLabel=t.node(w);let tailLabel=vLabel;let flip=false;if(vLabel.lim>wLabel.lim){tailLabel=wLabel;flip=true;}
const candidates=filter$1(g.edges(),function(edge2){return flip===isDescendant(t,t.node(edge2.v),tailLabel)&&flip!==isDescendant(t,t.node(edge2.w),tailLabel);});return minBy(candidates,function(edge2){return slack(g,edge2);});}
function exchangeEdges(t,g,e,f){const v=e.v;const w=e.w;t.removeEdge(v,w);t.setEdge(f.v,f.w,{});initLowLimValues(t);initCutValues(t,g);updateRanks(t,g);}
function updateRanks(t,g){const root3=find$1(t.nodes(),function(v){return!g.node(v).parent;});let vs=preorder(t,root3);vs=vs.slice(1);forEach$1(vs,function(v){const parent=t.node(v).parent;let edge=g.edge(v,parent);let flipped=false;if(!edge){edge=g.edge(parent,v);flipped=true;}
g.node(v).rank=g.node(parent).rank+(flipped?edge.minlen:-edge.minlen);});}
function isTreeEdge(tree,u,v){return tree.hasEdge(u,v);}
function isDescendant(tree,vLabel,rootLabel){return rootLabel.low<=vLabel.lim&&vLabel.lim<=rootLabel.lim;}
function rank(g){switch(g.graph().ranker){case"network-simplex":networkSimplexRanker(g);break;case"tight-tree":tightTreeRanker(g);break;case"longest-path":longestPathRanker(g);break;default:networkSimplexRanker(g);}}
var longestPathRanker=longestPath;function tightTreeRanker(g){longestPath(g);feasibleTree(g);}
function networkSimplexRanker(g){networkSimplex(g);}
function parentDummyChains(g){const postorderNums=postorder(g);forEach$1(g.graph().dummyChains,function(v){let node2=g.node(v);const edgeObj=node2.edgeObj;const pathData=findPath(g,postorderNums,edgeObj.v,edgeObj.w);const path4=pathData.path;const lca=pathData.lca;let pathIdx=0;let pathV=path4[pathIdx];let ascending2=true;while(v!==edgeObj.w){node2=g.node(v);if(ascending2){while((pathV=path4[pathIdx])!==lca&&g.node(pathV).maxRank<node2.rank){pathIdx++;}
if(pathV===lca){ascending2=false;}}
if(!ascending2){while(pathIdx<path4.length-1&&g.node(pathV=path4[pathIdx+1]).minRank<=node2.rank){pathIdx++;}
pathV=path4[pathIdx];}
g.setParent(v,pathV);v=g.successors(v)[0];}});}
function findPath(g,postorderNums,v,w){const vPath=[];const wPath=[];const low=Math.min(postorderNums[v].low,postorderNums[w].low);const lim=Math.max(postorderNums[v].lim,postorderNums[w].lim);let parent;let lca;parent=v;do{parent=g.parent(parent);vPath.push(parent);}while(parent&&(postorderNums[parent].low>low||lim>postorderNums[parent].lim));lca=parent;parent=w;while((parent=g.parent(parent))!==lca){wPath.push(parent);}
return{path:vPath.concat(wPath.reverse()),lca};}
function postorder(g){const result={};let lim=0;function dfs2(v){const low=lim;forEach$1(g.children(v),dfs2);result[v]={low,lim:lim++};}
forEach$1(g.children(),dfs2);return result;}
function run(g){const root3=util2.addDummyNode(g,"root",{},"_root");const depths=treeDepths(g);const height=Math.max.apply(null,values$1(depths))-1;const nodeSep=2*height+1;g.graph().nestingRoot=root3;forEach$1(g.edges(),function(e){g.edge(e).minlen*=nodeSep;});const weight=sumWeights(g)+1;forEach$1(g.children(),function(child){dfs(g,root3,nodeSep,weight,height,depths,child);});g.graph().nodeRankFactor=nodeSep;}
function dfs(g,root3,nodeSep,weight,height,depths,v){const children=g.children(v);if(!children.length){if(v!==root3){g.setEdge(root3,v,{weight:0,minlen:nodeSep});}
return;}
const top=util2.addBorderNode(g,"_bt");const bottom=util2.addBorderNode(g,"_bb");const label=g.node(v);g.setParent(top,v);label.borderTop=top;g.setParent(bottom,v);label.borderBottom=bottom;forEach$1(children,function(child){dfs(g,root3,nodeSep,weight,height,depths,child);const childNode=g.node(child);const childTop=childNode.borderTop?childNode.borderTop:child;const childBottom=childNode.borderBottom?childNode.borderBottom:child;const thisWeight=childNode.borderTop?weight:2*weight;const minlen=childTop!==childBottom?1:height-depths[v]+1;g.setEdge(top,childTop,{weight:thisWeight,minlen,nestingEdge:true});g.setEdge(childBottom,bottom,{weight:thisWeight,minlen,nestingEdge:true});});if(!g.parent(v)){g.setEdge(root3,top,{weight:0,minlen:height+depths[v]});}}
function treeDepths(g){const depths={};function dfs2(v,depth){const children=g.children(v);if(children&&children.length){forEach$1(children,function(child){dfs2(child,depth+1);});}
depths[v]=depth;}
forEach$1(g.children(),function(v){dfs2(v,1);});return depths;}
function sumWeights(g){return reduce$1(g.edges(),function(acc,e){return acc+g.edge(e).weight;},0);}
function cleanup(g){const graphLabel=g.graph();g.removeNode(graphLabel.nestingRoot);delete graphLabel.nestingRoot;forEach$1(g.edges(),function(e){const edge=g.edge(e);if(edge.nestingEdge){g.removeEdge(e);}});}
var nestingGraph={run,cleanup};function addBorderSegments(g){function dfs2(v){const children=g.children(v);const node2=g.node(v);if(children.length){forEach$1(children,dfs2);}
if(has$1(node2,"minRank")){node2.borderLeft=[];node2.borderRight=[];for(let rank2=node2.minRank,maxRank2=node2.maxRank+1;rank2<maxRank2;++rank2){addBorderNode(g,"borderLeft","_bl",v,node2,rank2);addBorderNode(g,"borderRight","_br",v,node2,rank2);}}}
forEach$1(g.children(),dfs2);}
function addBorderNode(g,prop,prefix,sg,sgNode,rank2){const label={width:0,height:0,rank:rank2,borderType:prop};const prev=sgNode[prop][rank2-1];const curr=util2.addDummyNode(g,"border",label,prefix);sgNode[prop][rank2]=curr;g.setParent(curr,sg);if(prev){g.setEdge(prev,curr,{weight:1});}}
function adjust(g){const rankDir=g.graph().rankdir.toLowerCase();if(rankDir==="lr"||rankDir==="rl"){swapWidthHeight(g);}}
function undo(g){const rankDir=g.graph().rankdir.toLowerCase();if(rankDir==="bt"||rankDir==="rl"){reverseY(g);}
if(rankDir==="lr"||rankDir==="rl"){swapXY(g);swapWidthHeight(g);}}
function swapWidthHeight(g){forEach$1(g.nodes(),function(v){swapWidthHeightOne(g.node(v));});forEach$1(g.edges(),function(e){swapWidthHeightOne(g.edge(e));});}
function swapWidthHeightOne(attrs){const w=attrs.width;attrs.width=attrs.height;attrs.height=w;}
function reverseY(g){forEach$1(g.nodes(),function(v){reverseYOne(g.node(v));});forEach$1(g.edges(),function(e){const edge=g.edge(e);forEach$1(edge.points,reverseYOne);if(has$1(edge,"y")){reverseYOne(edge);}});}
function reverseYOne(attrs){attrs.y=-attrs.y;}
function swapXY(g){forEach$1(g.nodes(),function(v){swapXYOne(g.node(v));});forEach$1(g.edges(),function(e){const edge=g.edge(e);forEach$1(edge.points,swapXYOne);if(has$1(edge,"x")){swapXYOne(edge);}});}
function swapXYOne(attrs){const x2=attrs.x;attrs.x=attrs.y;attrs.y=x2;}
var coordinateSystem={adjust,undo};function initOrder(g){const visited={};const simpleNodes=filter$1(g.nodes(),function(v){return!g.children(v).length;});const maxRank2=max3(map$1(simpleNodes,function(v){return g.node(v).rank;}));const layers=map$1(range$1(maxRank2+1),function(){return[];});function dfs2(v){if(has$1(visited,v))
return;visited[v]=true;const node2=g.node(v);layers[node2.rank].push(v);forEach$1(g.successors(v).filter((n2)=>{return!g.children(n2).length;}),dfs2);}
const orderedVs=sortBy$1(simpleNodes,function(v){return g.node(v).rank;});forEach$1(orderedVs,dfs2);return layers;}
function crossCount(g,layering){let cc=0;for(let i2=1;i2<layering.length;++i2){cc+=twoLayerCrossCount(g,layering[i2-1],layering[i2]);}
return cc;}
function twoLayerCrossCount(g,northLayer,southLayer){const southPos=zipObject(southLayer,southLayer.map(function(v,i2){return i2;}));const southEntries=flatten(map$1(northLayer,function(v){const list=(g.outEdges(v)||[]).map(function(e){return{pos:southPos[e.w],weight:g.edge(e).weight};});return sortBy$1(list,"pos");}));let firstIndex=1;while(firstIndex<southLayer.length){firstIndex<<=1;}
const treeSize=2*firstIndex-1;firstIndex-=1;const tree=map$1(new Array(treeSize),function(){return 0;});let cc=0;southEntries.forEach(function(entry){let index2=entry.pos+firstIndex;tree[index2]+=entry.weight;let weightSum=0;while(index2>0){if(index2%2){weightSum+=tree[index2+1];}
index2=index2-1>>1;tree[index2]+=entry.weight;}
cc+=entry.weight*weightSum;});return cc;}
function barycenter(g,movable){return map$1(movable,function(v){const inV=g.inEdges(v);if(!inV.length){return{v};}else{const result=reduce$1(inV,function(acc,e){const edge=g.edge(e);const nodeU=g.node(e.v);return{sum:acc.sum+edge.weight*nodeU.order,weight:acc.weight+edge.weight};},{sum:0,weight:0});return{v,barycenter:result.sum/result.weight,weight:result.weight};}});}
function resolveConflicts(entries,cg){const mappedEntries={};forEach$1(entries,function(entry,i2){const tmp=mappedEntries[entry.v]={indegree:0,in:[],out:[],vs:[entry.v],i:i2};if(!isUndefined$1(entry.barycenter)){tmp.barycenter=entry.barycenter;tmp.weight=entry.weight;}});forEach$1(cg.edges(),function(e){const entryV=mappedEntries[e.v];const entryW=mappedEntries[e.w];if(!isUndefined$1(entryV)&&!isUndefined$1(entryW)){entryW.indegree++;entryV.out.push(mappedEntries[e.w]);}});const sourceSet=filter$1(mappedEntries,function(entry){return!entry.indegree;});return doResolveConflicts(sourceSet);}
function doResolveConflicts(sourceSet){const entries=[];function handleIn(vEntry){return function(uEntry){if(uEntry.merged){return;}
if(isUndefined$1(uEntry.barycenter)||isUndefined$1(vEntry.barycenter)||uEntry.barycenter>=vEntry.barycenter){mergeEntries(vEntry,uEntry);}};}
function handleOut(vEntry){return function(wEntry){wEntry["in"].push(vEntry);if(--wEntry.indegree===0){sourceSet.push(wEntry);}};}
while(sourceSet.length){const entry=sourceSet.pop();entries.push(entry);forEach$1(entry["in"].reverse(),handleIn(entry));forEach$1(entry.out,handleOut(entry));}
return entries.filter(function(entry){return!entry.merged;}).map(function(entry){return pick$1(entry,["vs","i","barycenter","weight"]);});}
function mergeEntries(target,source){let sum=0;let weight=0;if(target.weight){sum+=target.barycenter*target.weight;weight+=target.weight;}
if(source.weight){sum+=source.barycenter*source.weight;weight+=source.weight;}
target.vs=source.vs.concat(target.vs);target.barycenter=sum/weight;target.weight=weight;target.i=Math.min(source.i,target.i);source.merged=true;}
function sort(entries,biasRight){const parts=util2.partition(entries,function(entry){return has$1(entry,"barycenter");});const sortable=parts.lhs;const unsortable=sortBy$1(parts.rhs,function(entry){return-entry.i;});const vs=[];let sum=0;let weight=0;let vsIndex=0;sortable.sort(compareWithBias(!!biasRight));vsIndex=consumeUnsortable(vs,unsortable,vsIndex);forEach$1(sortable,function(entry){vsIndex+=entry.vs.length;vs.push(entry.vs);sum+=entry.barycenter*entry.weight;weight+=entry.weight;vsIndex=consumeUnsortable(vs,unsortable,vsIndex);});const result={vs:flatten(vs)};if(weight){result.barycenter=sum/weight;result.weight=weight;}
return result;}
function consumeUnsortable(vs,unsortable,index2){let last$1;while(unsortable.length&&(last$1=last2(unsortable)).i<=index2){unsortable.pop();vs.push(last$1.vs);index2++;}
return index2;}
function compareWithBias(bias){return function(entryV,entryW){if(entryV.barycenter<entryW.barycenter){return-1;}else if(entryV.barycenter>entryW.barycenter){return 1;}
return!bias?entryV.i-entryW.i:entryW.i-entryV.i;};}
function sortSubgraph(g,v,cg,biasRight){let movable=g.children(v);const node2=g.node(v);const bl=node2?node2.borderLeft:void 0;const br=node2?node2.borderRight:void 0;const subgraphs={};if(bl){movable=filter$1(movable,function(w){return w!==bl&&w!==br;});}
const barycenters=barycenter(g,movable);forEach$1(barycenters,function(entry){if(g.children(entry.v).length){const subgraphResult=sortSubgraph(g,entry.v,cg,biasRight);subgraphs[entry.v]=subgraphResult;if(has$1(subgraphResult,"barycenter")){mergeBarycenters(entry,subgraphResult);}}});const entries=resolveConflicts(barycenters,cg);expandSubgraphs(entries,subgraphs);const result=sort(entries,biasRight);if(bl){result.vs=flatten([bl,result.vs,br]);if(g.predecessors(bl).length){const blPred=g.node(g.predecessors(bl)[0]);const brPred=g.node(g.predecessors(br)[0]);if(!has$1(result,"barycenter")){result.barycenter=0;result.weight=0;}
result.barycenter=(result.barycenter*result.weight+blPred.order+brPred.order)/(result.weight+2);result.weight+=2;}}
return result;}
function expandSubgraphs(entries,subgraphs){forEach$1(entries,function(entry){entry.vs=flatten(entry.vs.map(function(v){if(subgraphs[v]){return subgraphs[v].vs;}
return v;}));});}
function mergeBarycenters(target,other){if(!isUndefined$1(target.barycenter)){target.barycenter=(target.barycenter*target.weight+other.barycenter*other.weight)/(target.weight+other.weight);target.weight+=other.weight;}else{target.barycenter=other.barycenter;target.weight=other.weight;}}
function buildLayerGraph(g,rank2,relationship){const root3=createRootNode(g);const result=new Graph2({compound:true}).setGraph({root:root3}).setDefaultNodeLabel(function(v){return g.node(v);});forEach$1(g.nodes(),function(v){const node2=g.node(v);const parent=g.parent(v);if(node2.rank===rank2||node2.minRank<=rank2&&rank2<=node2.maxRank){result.setNode(v);result.setParent(v,parent||root3);forEach$1(g[relationship](v),function(e){const u=e.v===v?e.w:e.v;const edge=result.edge(u,v);const weight=!isUndefined$1(edge)?edge.weight:0;result.setEdge(u,v,{weight:g.edge(e).weight+weight});});if(has$1(node2,"minRank")){result.setNode(v,{borderLeft:node2.borderLeft[rank2],borderRight:node2.borderRight[rank2]});}}});return result;}
function createRootNode(g){let v;while(g.hasNode(v=uniqueId("_root")));return v;}
function addSubgraphConstraints(g,cg,vs){const prev={};let rootPrev;forEach$1(vs,function(v){let child=g.parent(v);let parent;let prevChild;while(child){parent=g.parent(child);if(parent){prevChild=prev[parent];prev[parent]=child;}else{prevChild=rootPrev;rootPrev=child;}
if(prevChild&&prevChild!==child){cg.setEdge(prevChild,child);return;}
child=parent;}});}
function order(g){const maxRank2=util2.maxRank(g);const downLayerGraphs=buildLayerGraphs(g,range$1(1,maxRank2+1),"inEdges");const upLayerGraphs=buildLayerGraphs(g,range$1(maxRank2-1,-1,-1),"outEdges");let layering=initOrder(g);assignOrder(g,layering);let bestCC=Number.POSITIVE_INFINITY;let best;for(let i2=0,lastBest=0;lastBest<4;++i2,++lastBest){sweepLayerGraphs(i2%2?downLayerGraphs:upLayerGraphs,i2%4>=2);layering=util2.buildLayerMatrix(g);const cc=crossCount(g,layering);if(cc<bestCC){lastBest=0;best=cloneDeep2(layering);bestCC=cc;}}
assignOrder(g,best);}
function buildLayerGraphs(g,ranks,relationship){return map$1(ranks,function(rank2){return buildLayerGraph(g,rank2,relationship);});}
function sweepLayerGraphs(layerGraphs,biasRight){const cg=new Graph2();forEach$1(layerGraphs,function(lg){const root3=lg.graph().root;const sorted=sortSubgraph(lg,root3,cg,biasRight);forEach$1(sorted.vs,function(v,i2){lg.node(v).order=i2;});addSubgraphConstraints(lg,cg,sorted.vs);});}
function assignOrder(g,layering){layering.forEach(function(layer){forEach$1(layer,function(v,i2){if(v){g.node(v).order=i2;}});});}
function findType1Conflicts(g,layering){const conflicts={};function visitLayer(prevLayer,layer){let k0=0;let scanPos=0;const prevLayerLength=prevLayer.length;const lastNode=last2(layer);forEach$1(layer,function(v,i2){if(!v)
return;const w=findOtherInnerSegmentNode(g,v);const k1=w?g.node(w).order:prevLayerLength;if(w||v===lastNode){forEach$1(layer.slice(scanPos,i2+1),function(scanNode){forEach$1(g.predecessors(scanNode),function(u){const uLabel=g.node(u);const uPos=uLabel.order;if((uPos<k0||k1<uPos)&&!(uLabel.dummy&&g.node(scanNode).dummy)){addConflict(conflicts,u,scanNode);}});});scanPos=i2+1;k0=k1;}});return layer;}
reduce$1(layering,visitLayer);return conflicts;}
function findType2Conflicts(g,layering){const conflicts={};function scan(south,southPos,southEnd,prevNorthBorder,nextNorthBorder){let v;forEach$1(range$1(southPos,southEnd),function(i2){v=south[i2];if(!v)
return;if(g.node(v).dummy){forEach$1(g.predecessors(v),function(u){const uNode=g.node(u);if(uNode.dummy&&(uNode.order<prevNorthBorder||uNode.order>nextNorthBorder)){addConflict(conflicts,u,v);}});}});}
function visitLayer(north,south){let prevNorthPos=-1;let nextNorthPos;let southPos=0;forEach$1(south,function(v,southLookahead){if(!v)
return;if(g.node(v).dummy==="border"){const predecessors=g.predecessors(v);if(predecessors.length){nextNorthPos=g.node(predecessors[0]).order;scan(south,southPos,southLookahead,prevNorthPos,nextNorthPos);southPos=southLookahead;prevNorthPos=nextNorthPos;}}
scan(south,southPos,south.length,nextNorthPos,north.length);});return south;}
reduce$1(layering,visitLayer);return conflicts;}
function findOtherInnerSegmentNode(g,v){if(g.node(v).dummy){return find$1(g.predecessors(v),function(u){return g.node(u).dummy;});}}
function addConflict(conflicts,v,w){if(v>w){const tmp=v;v=w;w=tmp;}
let conflictsV=conflicts[v];if(!conflictsV){conflicts[v]=conflictsV={};}
conflictsV[w]=true;}
function hasConflict(conflicts,v,w){if(v>w){const tmp=v;v=w;w=tmp;}
return has$1(conflicts[v],w);}
function verticalAlignment(g,layering,conflicts,neighborFn){const root3={};const align={};const pos={};forEach$1(layering,function(layer){forEach$1(layer,function(v,order2){root3[v]=v;align[v]=v;pos[v]=order2;});});forEach$1(layering,function(layer){let prevIdx=-1;forEach$1(layer,function(v){if(!v)
return;let ws=neighborFn(v);if(ws.length){ws=sortBy$1(ws,function(w){return pos[w];});const mp=(ws.length-1)/2;for(let i2=Math.floor(mp),il=Math.ceil(mp);i2<=il;++i2){const w=ws[i2];if(align[v]===v&&prevIdx<pos[w]&&!hasConflict(conflicts,v,w)){align[w]=v;align[v]=root3[v]=root3[w];prevIdx=pos[w];}}}});});return{root:root3,align};}
function horizontalCompaction(g,layering,root3,alignMap,reverseSep){const xs={};const blockG=buildBlockGraph(g,layering,root3,reverseSep);const visited={};function pass1(v){if(!has$1(visited,v)){visited[v]=true;xs[v]=reduce$1(blockG.inEdges(v)||[],function(max4,e){pass1(e.v);return Math.max(max4,xs[e.v]+blockG.edge(e));},0);}}
forEach$1(blockG.nodes(),pass1);const borderType=reverseSep?"borderLeft":"borderRight";function pass2(v){if(visited[v]!==2){visited[v]++;const node2=g.node(v);const min4=reduce$1(blockG.outEdges(v)||[],(min5,e)=>{pass2(e.w);return Math.min(min5,xs[e.w]-blockG.edge(e));},Number.POSITIVE_INFINITY);if(min4!==Number.POSITIVE_INFINITY&&node2.borderType!==borderType){xs[v]=Math.max(xs[v],min4);}}}
forEach$1(blockG.nodes(),pass2);forEach$1(alignMap,function(v){xs[v]=xs[root3[v]];});return xs;}
function buildBlockGraph(g,layering,root3,reverseSep){const blockGraph=new Graph2();const graphLabel=g.graph();const sepFn=makeSepFn(graphLabel.nodesep,graphLabel.edgesep,reverseSep);forEach$1(layering,function(layer){let u;forEach$1(layer,function(v){const vRoot=root3[v];blockGraph.setNode(vRoot);if(u){const uRoot=root3[u];const prevMax=blockGraph.edge(uRoot,vRoot);blockGraph.setEdge(uRoot,vRoot,Math.max(sepFn(g,v,u),prevMax||0));}
u=v;});});return blockGraph;}
function findSmallestWidthAlignment(g,xss){return minBy(values$1(xss),function(xs){const min4=(minBy(toPairs$1(xs),(pair)=>pair[1]-width(g,pair[0])/2)||["k",0])[1];const max4=(maxBy(toPairs$1(xs),(pair)=>pair[1]+width(g,pair[0])/2)||["k",0])[1];return max4-min4;});}
function alignCoordinates(xss,alignTo){const alignToVals=values$1(alignTo);const alignToMin=min3(alignToVals);const alignToMax=max3(alignToVals);forEach$1(["u","d"],function(vert){forEach$1(["l","r"],function(horiz){const alignment=vert+horiz;const xs=xss[alignment];if(xs===alignTo){return;}
const xsVals=values$1(xs);const delta=horiz==="l"?alignToMin-min3(xsVals):alignToMax-max3(xsVals);if(delta){xss[alignment]=mapValues(xs,function(x2){return x2+delta;});}});});}
function balance(xss,align){return mapValues(xss.ul,function(ignore,v){if(align){return xss[align.toLowerCase()][v];}else{const xs=sortBy$1(map$1(xss,v));return(xs[1]+xs[2])/2;}});}
function positionX(g){const layering=util2.buildLayerMatrix(g);const conflicts=Object.assign(findType1Conflicts(g,layering),findType2Conflicts(g,layering));const xss={};let adjustedLayering;forEach$1(["u","d"],function(vert){adjustedLayering=vert==="u"?layering:values$1(layering).reverse();forEach$1(["l","r"],function(horiz){if(horiz==="r"){adjustedLayering=map$1(adjustedLayering,function(inner){return values$1(inner).reverse();});}
const neighborFn=(vert==="u"?g.predecessors:g.successors).bind(g);const verticalAlign=verticalAlignment(g,adjustedLayering,conflicts,neighborFn);let xs=horizontalCompaction(g,adjustedLayering,verticalAlign.root,verticalAlign.align,horiz==="r");if(horiz==="r"){xs=mapValues(xs,function(x2){return-x2;});}
xss[vert+horiz]=xs;});});const smallestWidth=findSmallestWidthAlignment(g,xss);alignCoordinates(xss,smallestWidth);return balance(xss,g.graph().align);}
function makeSepFn(nodeSep,edgeSep,reverseSep){return function(g,v,w){const vLabel=g.node(v);const wLabel=g.node(w);if(!(vLabel&&wLabel))
return 0;let sum=0;let delta;sum+=vLabel.marginr||0;sum+=getNodeWidth(vLabel)/2;if(has$1(vLabel,"labelpos")){switch(vLabel.labelpos.toLowerCase()){case"l":delta=-getNodeWidth(vLabel)/2;break;case"r":delta=getNodeWidth(vLabel)/2;break;}}
if(delta){sum+=reverseSep?delta:-delta;}
delta=0;sum+=(vLabel.dummy?edgeSep:nodeSep)/2;sum+=(wLabel.dummy?edgeSep:nodeSep)/2;sum+=wLabel.marginl||0;sum+=getNodeWidth(wLabel)/2;if(has$1(wLabel,"labelpos")){switch(wLabel.labelpos.toLowerCase()){case"l":delta=getNodeWidth(wLabel)/2;break;case"r":delta=-getNodeWidth(wLabel)/2;break;}}
if(delta){sum+=reverseSep?delta:-delta;}
delta=0;return sum;};}
function getNodeWidth(node2){if(!node2)
return 0;return Math.max(node2.minwidth||0,node2.width);}
function width(g,v){const node2=g.node(v);return getNodeWidth(node2);}
function position(g){doPositionY(g);forEach$1(positionX(g),function(x2,v){const node2=g.node(v);if(node2)
node2.x=x2;});}
function doPositionY(g){const layering=util2.buildLayerMatrix(g);const rankSep=g.graph().ranksep;let prevY=0;const rankOffsets={};g.nodes().forEach((v)=>{const node2=g.node(v);const rank2=isNumber(node2.minRank)?node2.minRank:node2.rank;if(!rankOffsets[rank2]){rankOffsets[rank2]={marginTop:0,marginBottom:0,paddingTop:0,paddingBottom:0};}
const item=rankOffsets[rank2];item.marginTop=Math.max(getNum(node2.margint),item.marginTop);item.marginBottom=Math.max(getNum(node2.marginb),item.marginBottom);item.paddingTop=Math.max(getNum(node2.paddingt),item.paddingTop);item.paddingBottom=Math.max(getNum(node2.paddingb),item.paddingBottom);});forEach$1(layering,function(layer,i2){let yOffsetMarginT=0;let yOffsetMarginB=0;let yOffsetPaddingT=0;let yOffsetPaddingB=0;let maxHeight=0;for(const v of layer){if(v){const node2=g.node(v);if(rankOffsets[node2.rank]){const item=rankOffsets[node2.rank];yOffsetMarginT=Math.max(item.marginTop,yOffsetMarginT);yOffsetMarginB=Math.max(item.marginBottom,yOffsetMarginB);yOffsetPaddingT=Math.max(item.paddingTop,yOffsetPaddingT);yOffsetPaddingB=Math.max(item.paddingBottom,yOffsetPaddingB);}
maxHeight=Math.max(maxHeight,node2.height+getNum(node2.margint)+getNum(node2.marginb)+getNum(node2.paddingt)+getNum(node2.paddingb));}}
for(const v of layer){if(v)
g.node(v).y=prevY+yOffsetMarginT+maxHeight/2;}
prevY+=maxHeight+rankSep+yOffsetMarginT+yOffsetMarginB+yOffsetPaddingT+yOffsetPaddingB;});}
function layout(g,opts){const time3=opts&&opts.debugTiming?util2.time:util2.notime;time3("layout",function(){const layoutGraph=time3("  buildLayoutGraph",function(){return buildLayoutGraph(g);});time3("  runLayout",function(){runLayout(layoutGraph,time3);});time3("  updateInputGraph",function(){updateInputGraph(g,layoutGraph);});});}
function runLayout(g,time3){time3("    makeSpaceForEdgeLabels",function(){makeSpaceForEdgeLabels(g);});time3("    removeSelfEdges",function(){removeSelfEdges(g);});time3("    acyclic",function(){acyclic.run(g);});time3("    nestingGraph.run",function(){nestingGraph.run(g);});time3("    rank",function(){rank(g);});time3("    injectEdgeLabelProxies",function(){injectEdgeLabelProxies(g);});time3("    removeEmptyRanks",function(){removeEmptyRanks(g);});time3("    nestingGraph.cleanup",function(){nestingGraph.cleanup(g);});time3("    normalizeRanks",function(){normalizeRanks(g);});time3("    assignRankMinMax",function(){assignRankMinMax(g);});time3("    removeEdgeLabelProxies",function(){removeEdgeLabelProxies(g);});time3("    normalize.run",function(){normalize2.run(g);});time3("    parentDummyChains",function(){parentDummyChains(g);});time3("    addBorderSegments",function(){addBorderSegments(g);});time3("    order",function(){order(g);});time3("    insertSelfEdges",function(){insertSelfEdges(g);});time3("    adjustCoordinateSystem",function(){coordinateSystem.adjust(g);});time3("    position",function(){position(g);});time3("    positionSelfEdges",function(){positionSelfEdges(g);});time3("    removeBorderNodes",function(){removeBorderNodes(g);});time3("    normalize.undo",function(){normalize2.undo(g);});time3("    fixupEdgeLabelCoords",function(){fixupEdgeLabelCoords(g);});time3("    undoCoordinateSystem",function(){coordinateSystem.undo(g);});time3("    translateGraph",function(){translateGraph(g);});time3("    assignNodeIntersects",function(){assignNodeIntersects(g);});time3("    reversePoints",function(){reversePointsForReversedEdges(g);});time3("    acyclic.undo",function(){acyclic.undo(g);});}
function updateInputGraph(inputGraph,layoutGraph){forEach$1(inputGraph.nodes(),function(v){const inputLabel=inputGraph.node(v);const layoutLabel=layoutGraph.node(v);if(inputLabel){inputLabel.x=layoutLabel.x;inputLabel.y=layoutLabel.y;if(layoutGraph.children(v).length){inputLabel.width=layoutLabel.width;inputLabel.height=layoutLabel.height;}}});forEach$1(inputGraph.edges(),function(e){const inputLabel=inputGraph.edge(e);const layoutLabel=layoutGraph.edge(e);inputLabel.points=layoutLabel.points;inputLabel.labelPoint=layoutLabel.labelPoint;if(has$1(layoutLabel,"x")){inputLabel.x=layoutLabel.x;inputLabel.y=layoutLabel.y;}});inputGraph.graph().width=layoutGraph.graph().width;inputGraph.graph().height=layoutGraph.graph().height;}
var graphNumAttrs=["nodesep","edgesep","ranksep","marginx","marginy"];var graphDefaults={ranksep:50,edgesep:20,nodesep:50,rankdir:"tb",splines:"polyline",avoid_label_on_border:false};var graphAttrs=["acyclicer","ranker","rankdir","align","splines","avoid_label_on_border"];var nodeNumAttrs=["width","height","marginl","marginr","margint","marginb","paddingt","paddingb","minwidth"];var nodeDefaults={width:0,height:0,marginl:0,marginr:0,margint:0,marginb:0};var edgeNumAttrs=["minlen","weight","width","height","labeloffset"];var edgeDefaults={minlen:1,weight:1,width:0,height:0,labeloffset:10,labelpos:"r"};var edgeAttrs=["labelpos"];function buildLayoutGraph(inputGraph){const g=new Graph2({multigraph:true,compound:true});const graph=canonicalize(inputGraph.graph());g.setGraph(Object.assign({},graphDefaults,selectNumberAttrs(graph,graphNumAttrs),pick$1(graph,graphAttrs),{borderRanks:new Set()}));forEach$1(inputGraph.nodes(),function(v){const node2=canonicalize(inputGraph.node(v));g.setNode(v,defaults$1(selectNumberAttrs(node2,nodeNumAttrs),nodeDefaults));g.setParent(v,inputGraph.parent(v));});forEach$1(inputGraph.edges(),function(e){const edge=canonicalize(inputGraph.edge(e));g.setEdge(e,Object.assign({},edgeDefaults,selectNumberAttrs(edge,edgeNumAttrs),pick$1(edge,edgeAttrs)));});return g;}
function makeSpaceForEdgeLabels(g){const graph=g.graph();graph.ranksep/=2;forEach$1(g.edges(),function(e){const edge=g.edge(e);edge.minlen*=2;if(edge.labelpos.toLowerCase()!=="c"){if(graph.rankdir==="TB"||graph.rankdir==="BT"){edge.width+=edge.labeloffset;}else{edge.height+=edge.labeloffset;}}});}
function injectEdgeLabelProxies(g){forEach$1(g.edges(),function(e){const edge=g.edge(e);if(edge.width&&edge.height){const v=g.node(e.v);const w=g.node(e.w);const label={rank:(w.rank-v.rank)/2+v.rank,e};util2.addDummyNode(g,"edge-proxy",label,"_ep");}});}
function assignRankMinMax(g){let maxRank2=0;forEach$1(g.nodes(),function(v){const node2=g.node(v);if(node2.borderTop){node2.minRank=g.node(node2.borderTop).rank;node2.maxRank=g.node(node2.borderBottom).rank;maxRank2=Math.max(maxRank2,node2.maxRank);}});g.graph().maxRank=maxRank2;}
function removeEdgeLabelProxies(g){forEach$1(g.nodes(),function(v){const node2=g.node(v);if(node2.dummy==="edge-proxy"){g.edge(node2.e).labelRank=node2.rank;g.removeNode(v);}});}
function translateGraph(g){let minX=Number.POSITIVE_INFINITY;let maxX=0;let minY=Number.POSITIVE_INFINITY;let maxY=0;const graphLabel=g.graph();const marginX=graphLabel.marginx||0;const marginY=graphLabel.marginy||0;function getExtremes(attrs){const x2=attrs.x;const y2=attrs.y;const w=Math.max(("minwidth"in attrs?attrs.minwidth:0)||0,attrs.width);const h=attrs.height;minX=Math.min(minX,x2-w/2);maxX=Math.max(maxX,x2+w/2);minY=Math.min(minY,y2-h/2);maxY=Math.max(maxY,y2+h/2);}
forEach$1(g.nodes(),function(v){getExtremes(g.node(v));});forEach$1(g.edges(),function(e){const edge=g.edge(e);if(has$1(edge,"x")){getExtremes(edge);}});minX-=marginX;minY-=marginY;forEach$1(g.nodes(),function(v){const node2=g.node(v);node2.x-=minX;node2.y-=minY;});forEach$1(g.edges(),function(e){const edge=g.edge(e);forEach$1(edge.points,function(p){p.x-=minX;p.y-=minY;});if(has$1(edge,"x")){edge.x-=minX;}
if(has$1(edge,"y")){edge.y-=minY;}});graphLabel.width=maxX-minX+marginX;graphLabel.height=maxY-minY+marginY;}
function assignNodeIntersects(g){const{rankdir,splines,borderRanks,nodesep,avoid_label_on_border}=g.graph();const isTopBottom=rankdir.toUpperCase()==="TB";const isBottomTop=rankdir.toUpperCase()==="BT";const isVerticalLayout=isBottomTop||isTopBottom;const isOrthogonal=splines==="ortho";forEach$1(g.edges(),function(e){const edge=g.edge(e);const nodeV=g.node(e.v);const nodeW=g.node(e.w);let p1=null;let p2=null;if(!edge.points){edge.points=[];p1=nodeW;p2=nodeV;edge.points.unshift(util2.intersectRect(nodeV,p1));edge.points.push(util2.intersectRect(nodeW,p2));}else{p1=edge.points[0];p2=edge.points[edge.points.length-1];const pointsBetween=edge.points.slice(1,edge.points.length-1);if(avoid_label_on_border){const isLabelPointOnBorder=borderRanks.has(nodeV.rank+1);if(isLabelPointOnBorder){p1.y+=nodesep;}}
const labelPoint={...p1};edge.labelPoint=labelPoint;const origInterWithV=util2.intersectRect(nodeV,labelPoint);const origInterWithW=util2.intersectRect(nodeW,p2);let edgePointsArranged=false;if(isOrthogonal){const nodesInfo=comparePositions(nodeV,nodeW);const{leftOne,rightOne,bottomOne,topOne}=nodesInfo;const lastPointInBetween=pointsBetween.length?pointsBetween[pointsBetween.length-1]:null;const rangeOfVWCenter={x:[leftOne.x,rightOne.x],y:[topOne.y,bottomOne.y]};if(isVerticalLayout&&!nodesInfo.isXEqual&&isInsideRange(labelPoint.x,rangeOfVWCenter.x)){const topRectBottomBound=topOne.y+topOne.height/2;const bottomRectUpperBound=bottomOne.y-bottomOne.height/2;const newInterWithV={...origInterWithV};const newInterWithW={...origInterWithW};newInterWithV.y=Math.max(origInterWithV.y,topRectBottomBound);newInterWithW.y=Math.min(origInterWithW.y,bottomRectUpperBound);p1={x:newInterWithV.x,y:labelPoint.y};p2={x:newInterWithW.x,y:(lastPointInBetween||labelPoint).y};const newPoints=[newInterWithV,p1,labelPoint,...pointsBetween,p2,newInterWithW];const overlapXRange=[rightOne.x-rightOne.width/2,leftOne.x+leftOne.width/2];if(overlapXRange[0]<overlapXRange[1]){const isAllInRange=newPoints.every((p)=>{return isInsideRange(p.x,overlapXRange);});if(isAllInRange){for(const p of newPoints){p.x=labelPoint.x;}}}
edge.points=newPoints;edgePointsArranged=true;}else if(!isVerticalLayout&&!nodesInfo.isYEqual&&isInsideRange(labelPoint.y,rangeOfVWCenter.y)){const{leftOne:leftOne2,rightOne:rightOne2}=nodesInfo;const leftRectRightBound=leftOne2.x+leftOne2.width/2;const rightRectLeftBound=rightOne2.x-rightOne2.width/2;const newInterWithV={...origInterWithV,x:Math.max(origInterWithV.x,leftRectRightBound)};const newInterWithW={...origInterWithW,x:Math.min(origInterWithW.x,rightRectLeftBound)};p1={x:labelPoint.x,y:newInterWithV.y};p2={x:(lastPointInBetween||labelPoint).x,y:newInterWithW.y};const newPoints=[newInterWithV,p1,labelPoint,...pointsBetween,p2,newInterWithW];const overlapYRange=[bottomOne.y-bottomOne.height/2,topOne.y+topOne.height/2];if(overlapYRange[0]<overlapYRange[1]){const isAllInRange=newPoints.every((p)=>{return isInsideRange(p.y,overlapYRange);});if(isAllInRange){for(const p of newPoints){p.y=labelPoint.y;}}}
edge.points=newPoints;edgePointsArranged=true;}}
if(!edgePointsArranged){const intersectWithV=util2.intersectRect(nodeV,labelPoint);const intersectWithW=util2.intersectRect(nodeW,p2);edge.points.unshift(intersectWithV);edge.points.push(intersectWithW);}}});}
function fixupEdgeLabelCoords(g){forEach$1(g.edges(),function(e){const edge=g.edge(e);if(has$1(edge,"x")){if(edge.labelpos==="l"||edge.labelpos==="r"){edge.width-=edge.labeloffset;}
switch(edge.labelpos){case"l":edge.x-=edge.width/2+edge.labeloffset;break;case"r":edge.x+=edge.width/2+edge.labeloffset;break;}}});}
function reversePointsForReversedEdges(g){forEach$1(g.edges(),function(e){const edge=g.edge(e);if(edge.reversed){edge.points.reverse();}});}
function removeBorderNodes(g){const{borderRanks}=g.graph();forEach$1(g.nodes(),function(v){if(g.children(v).length){const node2=g.node(v);const t=g.node(node2.borderTop);const b10=g.node(node2.borderBottom);const l=g.node(last2(node2.borderLeft));const r=g.node(last2(node2.borderRight));borderRanks.add(t.rank);borderRanks.add(b10.rank);const widthBetweenBorder=Math.abs(r.x-l.x);node2.width=Math.max(widthBetweenBorder,node2.minwidth||0);if(node2.minwidth&&node2.minwidth>widthBetweenBorder){const wOffset=node2.minwidth-widthBetweenBorder;const originalRightEdge=Math.min(l.x,r.x)+widthBetweenBorder;addOffsetFromX(wOffset,originalRightEdge);}
node2.height=Math.abs(b10.y-t.y);node2.x=l.x+node2.width/2;node2.y=t.y+node2.height/2;}});forEach$1(g.nodes(),function(v){if(g.node(v).dummy==="border"){g.removeNode(v);}});function addOffsetFromX(wOffset,startX){const visited={};const dfs2=(v)=>{if(visited[v])
return;visited[v]=true;const node2=g.node(v);if(node2.x>=startX)
node2.x+=wOffset;for(const child of g.children(v))
dfs2(child);};for(const v of g.nodes())
dfs2(v);}}
function removeSelfEdges(g){forEach$1(g.edges(),function(e){if(e.v===e.w){const node2=g.node(e.v);if(!node2.selfEdges){node2.selfEdges=[];}
node2.selfEdges.push({e,label:g.edge(e)});g.removeEdge(e);}});}
function insertSelfEdges(g){const layers=util2.buildLayerMatrix(g);layers.forEach(function(layer){let orderShift=0;layer.forEach(function(v,i2){const node2=g.node(v);node2.order=i2+orderShift;forEach$1(node2.selfEdges,function(selfEdge){util2.addDummyNode(g,"selfedge",{width:selfEdge.label.width,height:selfEdge.label.height,rank:node2.rank,order:i2+ ++orderShift,e:selfEdge.e,label:selfEdge.label},"_se");});delete node2.selfEdges;});});}
function positionSelfEdges(g){forEach$1(g.nodes(),function(v){const node2=g.node(v);if(node2.dummy==="selfedge"){const selfNode=g.node(node2.e.v);const x2=selfNode.x+selfNode.width/2;const y2=selfNode.y;const dx=node2.x-x2;const dy=selfNode.height/2;g.setEdge(node2.e,node2.label);g.removeNode(v);node2.label.points=[{x:x2+2*dx/3,y:y2-dy},{x:x2+5*dx/6,y:y2-dy},{x:x2+dx,y:y2},{x:x2+5*dx/6,y:y2+dy},{x:x2+2*dx/3,y:y2+dy}];node2.label.x=node2.x;node2.label.y=node2.y;}});}
function selectNumberAttrs(obj,attrs){return mapValues(pick$1(obj,attrs),Number);}
function canonicalize(attrs){const newAttrs={};forEach$1(attrs,function(v,k){newAttrs[k.toLowerCase()]=v;});return newAttrs;}
var index={layout,util:util2};var DagreWrapper=class{constructor(g){this.g=g;}
doLayout(){index.layout(this.g);}
callNodeOnLayout(){const graph=this.g;graph.nodes().forEach(function(v){const nodeData=graph.node(v);if(nodeData){if(nodeData.onLayout){nodeData.onLayout(nodeData);}}});}
callEdgeOnLayout(){const graph=this.g;graph.edges().forEach(function(e){const edgeData=graph.edge(e);if(edgeData){if(edgeData.onLayout){edgeData.onLayout(edgeData);}}});}
getGraphBounds(){return getGraphBounds(this.g);}};var conf2;var erArtist={draw(ir,config2,opts){conf2=getConf2(ir);const rootMark={type:"group",attrs:{},children:[]};const g=createLayoutGraph({multigraph:true,directed:true,compound:false}).setGraph({rankdir:conf2.layoutDirection,nodesep:80,edgesep:conf2.edgesep,ranksep:conf2.ranksep,splines:getGraphSplinesOption(conf2.edgeType)}).setDefaultEdgeLabel(function(){return{};});const dagreWrapper=new DagreWrapper(g);drawEntities(rootMark,ir,g);const relationships=addRelationships(ir.relationships,g);drawInheritances(ir,g,rootMark);dagreWrapper.doLayout();dagreWrapper.callNodeOnLayout();dagreWrapper.callEdgeOnLayout();const relationsGroup={type:"group",children:[],class:"er__relations"};const relationshipsBounds=makeBounds();relationships.forEach(function(rel){const{bounds:relationBounds}=drawRelationshipFromLayout(relationsGroup,rel,g);tryExpandBounds(relationshipsBounds,relationBounds);});rootMark.children.unshift(relationsGroup);const bounds=dagreWrapper.getGraphBounds();tryExpandBounds(bounds,relationshipsBounds);const pad2=conf2.diagramPadding;const{title}=ir;let titleSize=void 0;let titleMark=void 0;if(title){const titleFont={fontSize:conf2.fontSize,fontFamily:conf2.fontFamily};const titleResult=makeTitleMark(title,titleFont,{fill:conf2.textColor});titleSize=titleResult.titleSize;titleMark=titleResult.mark;titleMark.class="er__title";rootMark.children.push(titleMark);titleSize.height+=conf2.fontSize;}
const{width:width2,height}=adjustRootMarkBounds({rootMark,gBounds:bounds,padX:pad2,padY:pad2,useMaxWidth:conf2.useMaxWidth,containerSize:opts===null||opts===void 0?void 0:opts.containerSize,titleSize,titleMark});return{mark:rootMark,width:width2,height};}};function getFontConfig(conf6){return{fontSize:conf6.fontSize,fontFamily:conf6.fontFamily};}
var drawAttributes=(group,entityText,attributes)=>{const attribPaddingY=conf2.entityPaddingY/2;const attribPaddingX=conf2.entityPaddingX/2;const attrFontSize=conf2.fontSize*0.85;const labelBBox={width:Math.ceil(entityText.attrs.width),height:Math.ceil(entityText.attrs.height)};let maxRowContentWidth=0;let cumulativeHeight=labelBBox.height+attribPaddingY*2;let attrNum=1;const attributeGroup=makeEmptyGroup();group.children.push(attributeGroup);const tableBuilder=new TableBuilder();attributes.forEach((item)=>{const attrPrefix=`${entityText.attrs.id}-attr-${attrNum}`;const makeLabelTextMark=(name,text)=>{return makeMark("text",{...getTextDimensionsInPresicion(text,fontConfig),...getBaseText(),id:`${attrPrefix}-${name}`,text,textAlign:"left",textBaseline:"middle",...fontConfig},{class:"er__entity-label"});};const fontConfig={...getFontConfig(conf2),fontSize:attrFontSize};let keyCell;if(item.attributeKey){keyCell=TableCell.fromMark(makeLabelTextMark("key",item.attributeKey),"key");}
const typeCell=TableCell.fromMark(makeLabelTextMark("type",item.attributeType),"type");const nameCell=TableCell.fromMark(makeLabelTextMark("name",item.attributeName),"name");let commentCell;if(item.comment){commentCell=TableCell.fromMark(makeLabelTextMark("name",item.comment),"comment");}
const row=new TableRow();row.addCells([typeCell,nameCell,keyCell,commentCell]);maxRowContentWidth=Math.max(maxRowContentWidth,row.map((v)=>{var _a;return((_a=v.mark)===null||_a===void 0?void 0:_a.attrs.width)||0;}).reduce((acc,num)=>acc+num,0));const cellUnitHeights=row.map((v)=>{var _a;return((_a=v.mark)===null||_a===void 0?void 0:_a.attrs.height)||0;});cumulativeHeight+=Math.max(...cellUnitHeights)+attribPaddingY*2;attrNum+=1;tableBuilder.addRow(row);});const columnMaxWidths={key:0,type:0,name:0,comment:0};tableBuilder.rows.forEach((row)=>{row.map((cell)=>{columnMaxWidths[cell.name]=Math.floor(Math.max(columnMaxWidths[cell.name],cell.width));});});const cellOffsets={key:0,type:0,name:0,comment:0};let cumulativeOffsetX=0;Object.keys(cellOffsets).sort((a,b10)=>CELL_ORDER[a]-CELL_ORDER[b10]).forEach((k)=>{cellOffsets[k]=cumulativeOffsetX;if(columnMaxWidths[k]){cumulativeOffsetX+=Math.floor(columnMaxWidths[k]+2*attribPaddingX);}});const bBox={width:Math.ceil(Math.max(conf2.minEntityWidth,cumulativeOffsetX,labelBBox.width+attribPaddingX*2)),height:attributes.length>0?cumulativeHeight:Math.max(conf2.minEntityHeight,labelBBox.height+conf2.entityPaddingY*2)};if(attributes.length>0){let makeAttribLabelRect=function(attrs){return makeMark("rect",{fill:attributeFill,stroke:conf2.stroke,...attrs});};entityText.matrix=mat3_exports.fromTranslation(mat3_exports.create(),[bBox.width/2,attribPaddingY+labelBBox.height/2]);let heightOffset=toFixed(labelBBox.height+attribPaddingY*2);let attribStyle="attributeBoxOdd";const attributeFill=conf2.attributeFill;const cellOrderKeys=Object.keys(CELL_ORDER);tableBuilder.rows.forEach((row)=>{const rowSegs=row.map((v)=>v.mark);const rowTextHeight=rowSegs.reduce((out,mark)=>Math.max(out,mark.attrs.height),0);const rowHeight=toFixed(rowTextHeight+attribPaddingY*2);const alignY=toFixed(heightOffset+attribPaddingY+rowTextHeight/2);const rowGroup=makeEmptyGroup();attributeGroup.children.push(rowGroup);let lastColumnRect;let rectWidthSum=0;cellOrderKeys.forEach((name)=>{if(!columnMaxWidths[name])
return;const cell=row.getCell(name);const offsetX=cellOffsets[name];const rect=makeAttribLabelRect({x:offsetX,y:heightOffset,width:columnMaxWidths[name]+attribPaddingX*2,height:rowHeight});rowGroup.children.push(rect);rectWidthSum+=rect.attrs.width;lastColumnRect=rect;if(cell){rowGroup.children.push(cell.mark);cell.mark.matrix=mat3_exports.fromTranslation(mat3_exports.create(),[offsetX+attribPaddingX,alignY]);}});if(lastColumnRect){lastColumnRect.attrs.width+=Math.max(0,bBox.width-rectWidthSum);}
const nodeUnitHeights=row.map((v)=>(v===null||v===void 0?void 0:v.mark.attrs.height)||0);heightOffset+=toFixed(Math.max(...nodeUnitHeights)+attribPaddingY*2);attribStyle=attribStyle=="attributeBoxOdd"?"attributeBoxEven":"attributeBoxOdd";});}else{bBox.height=Math.max(conf2.minEntityHeight,cumulativeHeight);entityText.matrix=mat3_exports.fromTranslation(mat3_exports.create(),[bBox.width/2,bBox.height/2]);}
return{...bBox,attributeGroup};};var drawEntities=function(rootMark,ir,graph){const keys3=Object.keys(ir.entities);const groups=[];keys3.forEach(function(id9){const entity=ir.entities[id9];const itemId=entity.itemId;const group=makeMark("group",{id:id9},{children:[],class:"er__entity"});groups.push(group);const fontConfig={...getFontConfig(conf2),fontWeight:"bold"};const textMark=makeMark("text",{...getBaseText(),...getTextDimensionsInPresicion(id9,fontConfig),text:id9,id:itemId,textAlign:"center",textBaseline:"middle",fill:conf2.textColor,...fontConfig},{itemId,class:"er__entity-label"});const rectMark=makeMark("rect",{...getBaseText(),fill:conf2.fill,stroke:conf2.stroke,x:0,y:0,radius:conf2.borderRadius},{itemId,class:"er__entity-box"});group.children.push(rectMark,textMark);const{width:entityWidth,height:entityHeight,attributeGroup}=drawAttributes(group,textMark,ir.entities[id9].attributes);safeAssign(rectMark.attrs,{width:entityWidth,height:entityHeight});attributeGroup.itemId=itemId;graph.setNode(id9,{width:entityWidth,height:entityHeight,id:id9,onLayout(data){const x2=Math.floor(data.x);const y2=Math.floor(data.y);const marks=[rectMark,textMark];marks.forEach((mark)=>{safeAssign(mark.attrs,{x:x2-rectMark.attrs.width/2,y:y2-rectMark.attrs.height/2});});if(attributeGroup){positionGroupContents(attributeGroup,{x:toFixed(x2-entityWidth/2),y:toFixed(y2-entityHeight/2),width:data.width,height:data.height});}}});rootMark.children.push(group);});return groups;};var getEdgeName=function(rel){return(rel.entityA+rel.roleA+rel.entityB).replace(/\s/g,"");};var addRelationships=function(relationships,g){relationships.forEach(function(r){g.setEdge(r.entityA,r.entityB,{name:getEdgeName(r),relationship:r});});return relationships;};var relCnt=0;var drawRelationshipFromLayout=function(group,rel,g){relCnt++;const bounds=makeBounds();const edge=g.edge(rel.entityA,rel.entityB);if(!("relationship"in edge))
return;const[startPoint,...restPoints]=edge.points;const secondPoint=restPoints[0];const lastPoint=restPoints[restPoints.length-1];updateBoundsByPoints(bounds,edge.points);let pathCommands;if(conf2.edgeType==="curved"){const pathString=getPointsCurvePath(edge.points);pathCommands=pathString;}else{pathCommands=getPointsLinearPath(edge.points);}
const itemId=rel.itemId;const linePath=makeMark("path",{path:pathCommands,stroke:conf2.edgeColor,lineJoin:"round"},{itemId});if(rel.relSpec.relType===Identification.NON_IDENTIFYING){linePath.attrs.lineDash=[4,4];}
const endMarkerDirection=calcDirection(restPoints[restPoints.length-1],restPoints[restPoints.length-2]);const endMarker=drawMarkerTo(lastPoint,rel.relSpec.cardA,endMarkerDirection,{stroke:conf2.stroke,id:`${edge.name}-end`});const startMarkerDirection=calcDirection(startPoint,secondPoint);const startMarker=drawMarkerTo(startPoint,rel.relSpec.cardB,startMarkerDirection,{stroke:conf2.stroke,id:`${edge.name}-start`});const labelPoint=edge.labelPoint||getPointAt(edge.points,0.4,true);const labelX=labelPoint.x;const labelY=labelPoint.y;const labelId="rel"+relCnt;const fontConfig={...getFontConfig(conf2),fontWeight:400};const labelMark=makeMark("text",{text:rel.roleA,id:labelId,textAlign:"center",textBaseline:"middle",x:labelX,y:labelY,fill:conf2.textColor,...fontConfig},{itemId,class:"er__relationship-label"});const labelDims=getTextDimensionsInPresicion(rel.roleA,fontConfig);labelDims.width+=conf2.fontSize/2;labelDims.height+=conf2.fontSize/2;const labelBg=makeLabelBg(labelDims,{x:labelX,y:labelY},{id:`#${labelId}`,fill:conf2.labelBackground});const labelBgBound=calcBound([labelBg]);tryExpandBounds(bounds,labelBgBound);const insertingMarks=[linePath,labelBg,labelMark,startMarker,endMarker].filter((o)=>!!o);group.children.push(...insertingMarks);return{bounds};};function drawInheritances(ir,g,rootMark){const fontConfig=getFontConfig(conf2);const inheritanceGroup=makeEmptyGroup();rootMark.children.push(inheritanceGroup);ir.inheritances.forEach((inh)=>{const LABEL_TEXT="ISA";const labelDims=getTextDimensionsInPresicion(LABEL_TEXT,fontConfig);const labelMark=makeMark("text",{text:LABEL_TEXT,textAlign:"center",textBaseline:"middle",fill:conf2.textColor,...fontConfig},{class:"er__relationship-label"});inheritanceGroup.children.push(labelMark);const labelId=`inherit-${inh.sup}-${inh.sub}`;const triangleBaseLength=Math.max(labelDims.width,labelDims.height)*1.8;const size4={width:triangleBaseLength,height:Math.ceil(triangleBaseLength*Math.sin(Math.PI/3))+5};let inheritNodeCenter;g.setNode(labelId,{...size4,onLayout(data){inheritNodeCenter={x:toFixed(data.x),y:toFixed(data.y)};}});g.setEdge(labelId,inh.sup,{isInheritance:true,onLayout(edge){const linePath=makeLinePath(edge,conf2);inheritanceGroup.children.push(linePath);const rad=calcDirection(edge.points[0],edge.points[1]);const{mark:triangle}=makeTriangle(inheritNodeCenter,triangleBaseLength,rad+Math.PI/2,{stroke:conf2.edgeColor,fill:conf2.attributeFill,lineJoin:"round"});inheritanceGroup.children.unshift(triangle);const labelOffseX=-labelDims.width*Math.cos(rad)/4;const labelOffseY=-labelDims.height*Math.sin(rad);safeAssign(labelMark.attrs,{x:inheritNodeCenter.x+labelOffseX,y:inheritNodeCenter.y+labelOffseY});}});g.setEdge(inh.sub,labelId,{isInheritance:true,onLayout(edge){const linePath=makeLinePath(edge,conf2);inheritanceGroup.children.push(linePath);}});});}
function makeLinePath(edge,conf6){const pathCommands=conf6.edgeType==="curved"?getPointsCurvePath(edge.points):getPointsLinearPath(edge.points);const linePath=makeMark("path",{path:pathCommands,stroke:conf6.edgeColor,lineJoin:"round"});return linePath;}
var artist_default2=erArtist;var moo2=__toESM(require_moo());function id2(d){return d[0];}
var COLOR2=/#[a-zA-Z0-9]+/;var PARAM_DIRECTIVE2=/@param/;var CONFIG_DIRECTIVE3=/@config/;var L_PAREN2=/\(/;var R_PAREN2=/\)/;function getTokenValue2(token){if(token&&"value"in token)
return token.value;return token;}
function handleConfigOpenCloseStatement2(d){const text=d[2].map((v)=>{if(v.type)
return getTokenValue2(v);return v;}).join("");try{const v=JSON.parse(text);return{type:"overrideConfig",value:v};}catch(error){return{type:"overrideConfig",error};}}
var COMMENT_LINE2=/%%.*/;var lexer2=moo2.compile({NL:MOO_NEWLINE,WS:{match:/ +/,lineBreaks:false},QUOTED_WORD:QUOTED_WORD_REGEXP,ZERO_OR_ONE:/\|o|o\|/,ZERO_OR_MORE:/\}o|o\{/,ONE_OR_MORE:/\}\||\|\{/,ONLY_ONE:/\|\|/,NON_IDENTIFYING:/\.\.|\.\-|\-\./,IDENTIFYING:/\-\-/,COLON:/:/,LEFT_BRACE:/\{/,RIGHT_BRACE:/\}/,INHERIT:/inherit/,PARAM_DIRECTIVE:/@param/,COMMENT_LINE:COMMENT_LINE_REGEXP,CONFIG_DIRECTIVE:CONFIG_DIRECTIVE3,VALID_TEXT:{match:VALID_TEXT_REGEXP,fallback:true}});var yy2;function setYY2(v){yy2=v;}
var grammar2={Lexer:lexer2,ParserRules:[{"name":"_$ebnf$1","symbols":[]},{"name":"_$ebnf$1","symbols":["_$ebnf$1","wschar"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"_","symbols":["_$ebnf$1"],"postprocess":function(d){return null;}},{"name":"__$ebnf$1","symbols":["wschar"]},{"name":"__$ebnf$1","symbols":["__$ebnf$1","wschar"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"__","symbols":["__$ebnf$1"],"postprocess":function(d){return null;}},{"name":"wschar","symbols":[/[ \t\n\v\f\r]/],"postprocess":id2},{"name":"color","symbols":[COLOR2],"postprocess":(d)=>tv(d[0])},{"name":"paramStatement","symbols":[PARAM_DIRECTIVE2,"__","paramPart"],"postprocess":function(d){return d[2];}},{"name":"paramStatement$ebnf$1","symbols":[]},{"name":"paramStatement$ebnf$1$subexpression$1","symbols":[/[\n]/,"_","paramPart"]},{"name":"paramStatement$ebnf$1","symbols":["paramStatement$ebnf$1","paramStatement$ebnf$1$subexpression$1"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"paramStatement","symbols":[PARAM_DIRECTIVE2,"__",{"literal":"{"},"_","paramStatement$ebnf$1",/[\n]/,"_",{"literal":"}"}],"postprocess":function(d){const params=[];d[4].forEach((seg)=>{params.push(seg[2]);});return params;}},{"name":"paramPart$ebnf$1","symbols":[/[a-zA-Z0-9]/]},{"name":"paramPart$ebnf$1","symbols":["paramPart$ebnf$1",/[a-zA-Z0-9]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"paramPart$ebnf$2","symbols":[/[^ \n]/]},{"name":"paramPart$ebnf$2","symbols":["paramPart$ebnf$2",/[^ \n]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"paramPart","symbols":["paramPart$ebnf$1","__","paramPart$ebnf$2"],"postprocess":function(d){const key=d[0].map((v)=>tv(v)).join("");let value=d[2];if(typeof value!=="string")
value=value.map((v)=>tv(v)).join("");return{type:"addParam",key,value};}},{"name":"configStatement$ebnf$1","symbols":[/[^\)]/]},{"name":"configStatement$ebnf$1","symbols":["configStatement$ebnf$1",/[^\)]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"configStatement","symbols":[CONFIG_DIRECTIVE3,{"literal":"("},"configStatement$ebnf$1",{"literal":")"}],"postprocess":handleConfigOpenCloseStatement2},{"name":"configOpenCloseStatement$ebnf$1","symbols":[/[^\)]/]},{"name":"configOpenCloseStatement$ebnf$1","symbols":["configOpenCloseStatement$ebnf$1",/[^\)]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"configOpenCloseStatement","symbols":[CONFIG_DIRECTIVE3,L_PAREN2,"configOpenCloseStatement$ebnf$1",R_PAREN2],"postprocess":handleConfigOpenCloseStatement2},{"name":"comment","symbols":[COMMENT_LINE2],"postprocess":(d)=>null},{"name":"start","symbols":["__","start"]},{"name":"start","symbols":[{"literal":"erDiagram"},"document"]},{"name":"document","symbols":[]},{"name":"document","symbols":["document","line"]},{"name":"line$ebnf$1","symbols":[lexer2.has("WS")?{type:"WS"}:WS],"postprocess":id2},{"name":"line$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"line","symbols":["line$ebnf$1","statement"]},{"name":"line","symbols":[lexer2.has("NL")?{type:"NL"}:NL],"postprocess":null},{"name":"statement$ebnf$1","symbols":[]},{"name":"statement$ebnf$1","symbols":["statement$ebnf$1",lexer2.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"statement$ebnf$2","symbols":[]},{"name":"statement$ebnf$2","symbols":["statement$ebnf$2",lexer2.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"statement","symbols":["entityName","statement$ebnf$1","relSpec","statement$ebnf$2","entityName",lexer2.has("COLON")?{type:"COLON"}:COLON,"role",lexer2.has("NL")?{type:"NL"}:NL],"postprocess":function(d){yy2.addEntity(d[0]);yy2.addEntity(d[4]);yy2.addRelationship(d[0],d[6],d[4],d[2]);}},{"name":"statement$ebnf$3","symbols":[]},{"name":"statement$ebnf$3","symbols":["statement$ebnf$3",lexer2.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"statement","symbols":["entityName",lexer2.has("WS")?{type:"WS"}:WS,lexer2.has("INHERIT")?{type:"INHERIT"}:INHERIT,lexer2.has("WS")?{type:"WS"}:WS,"entityName","statement$ebnf$3",lexer2.has("NL")?{type:"NL"}:NL],"postprocess":(d)=>{yy2.addEntity(d[4]);yy2.addEntity(d[0]);const sup=d[4];const sub3=d[0];yy2.addInheritance(sup,sub3);}},{"name":"statement$ebnf$4","symbols":["attributes"],"postprocess":id2},{"name":"statement$ebnf$4","symbols":[],"postprocess":()=>null},{"name":"statement","symbols":["entityName","__",{"literal":"{"},"__","statement$ebnf$4","_",{"literal":"}"},lexer2.has("NL")?{type:"NL"}:NL],"postprocess":function(d){yy2.addEntity(d[0]);if(d[4]){yy2.addAttributes(d[0],d[4]);}}},{"name":"statement","symbols":["entityName",{"literal":"{"},{"literal":"}"},lexer2.has("NL")?{type:"NL"}:NL],"postprocess":(d)=>yy2.addEntity(d[0])},{"name":"statement$ebnf$5","symbols":[]},{"name":"statement$ebnf$5","symbols":["statement$ebnf$5",lexer2.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"statement","symbols":["entityName","statement$ebnf$5",lexer2.has("NL")?{type:"NL"}:NL],"postprocess":(d)=>yy2.addEntity(d[0])},{"name":"statement","symbols":["titleStatement"]},{"name":"statement$ebnf$6","symbols":[]},{"name":"statement$ebnf$6","symbols":["statement$ebnf$6",lexer2.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"statement","symbols":["paramStatement","statement$ebnf$6",lexer2.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const{type,...styleParam}=d[0];yy2.addParam(styleParam);}},{"name":"statement$ebnf$7","symbols":[]},{"name":"statement$ebnf$7","symbols":["statement$ebnf$7",lexer2.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"statement","symbols":["configStatement","statement$ebnf$7",lexer2.has("NL")?{type:"NL"}:NL],"postprocess":function(d){yy2.addOverrideConfig(d[0]);}},{"name":"statement","symbols":["comment",lexer2.has("NL")?{type:"NL"}:NL]},{"name":"statement","symbols":[lexer2.has("NL")?{type:"NL"}:NL]},{"name":"entityName","symbols":[lexer2.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT],"postprocess":(d)=>tv(d[0])},{"name":"attributes","symbols":["attribute"],"postprocess":(d)=>{return[d[0]];}},{"name":"attributes","symbols":["attribute","__","attributes"],"postprocess":(d)=>{return[d[0]].concat(d[2]);}},{"name":"attribute$ebnf$1","symbols":[]},{"name":"attribute$ebnf$1","symbols":["attribute$ebnf$1",lexer2.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"attribute$ebnf$2","symbols":[lexer2.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD],"postprocess":id2},{"name":"attribute$ebnf$2","symbols":[],"postprocess":()=>null},{"name":"attribute","symbols":["attributeType",lexer2.has("WS")?{type:"WS"}:WS,"attributeName",lexer2.has("WS")?{type:"WS"}:WS,lexer2.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,"attribute$ebnf$1","attribute$ebnf$2",lexer2.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const comment2=d[6]?getQuotedWord(d[6]):"";return{attributeType:d[0],attributeName:d[2],attributeKey:tv(d[4]),comment:comment2};}},{"name":"attribute$ebnf$3","symbols":[]},{"name":"attribute$ebnf$3","symbols":["attribute$ebnf$3",lexer2.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"attribute$ebnf$4","symbols":[lexer2.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD],"postprocess":id2},{"name":"attribute$ebnf$4","symbols":[],"postprocess":()=>null},{"name":"attribute$ebnf$5","symbols":[]},{"name":"attribute$ebnf$5","symbols":["attribute$ebnf$5",lexer2.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"attribute","symbols":["attributeType",lexer2.has("WS")?{type:"WS"}:WS,"attributeName","attribute$ebnf$3","attribute$ebnf$4","attribute$ebnf$5",lexer2.has("NL")?{type:"NL"}:NL],"postprocess":(d)=>{const comment2=d[4]?getQuotedWord(d[4]):"";return{attributeType:d[0],attributeName:d[2],comment:comment2};}},{"name":"attributeType","symbols":[lexer2.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT],"postprocess":(d)=>tv(d[0])},{"name":"attributeName","symbols":[lexer2.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT],"postprocess":(d)=>tv(d[0])},{"name":"relSpec","symbols":["cardinality","relType","cardinality"],"postprocess":function(d){return{cardA:d[2],relType:d[1],cardB:d[0]};}},{"name":"cardinality","symbols":[lexer2.has("ZERO_OR_ONE")?{type:"ZERO_OR_ONE"}:ZERO_OR_ONE],"postprocess":(d)=>yy2.Cardinality.ZERO_OR_ONE},{"name":"cardinality","symbols":[lexer2.has("ZERO_OR_MORE")?{type:"ZERO_OR_MORE"}:ZERO_OR_MORE],"postprocess":(d)=>yy2.Cardinality.ZERO_OR_MORE},{"name":"cardinality","symbols":[lexer2.has("ONE_OR_MORE")?{type:"ONE_OR_MORE"}:ONE_OR_MORE],"postprocess":(d)=>yy2.Cardinality.ONE_OR_MORE},{"name":"cardinality","symbols":[lexer2.has("ONLY_ONE")?{type:"ONLY_ONE"}:ONLY_ONE],"postprocess":(d)=>yy2.Cardinality.ONLY_ONE},{"name":"relType","symbols":[lexer2.has("NON_IDENTIFYING")?{type:"NON_IDENTIFYING"}:NON_IDENTIFYING],"postprocess":(d)=>yy2.Identification.NON_IDENTIFYING},{"name":"relType","symbols":[lexer2.has("IDENTIFYING")?{type:"IDENTIFYING"}:IDENTIFYING],"postprocess":(d)=>yy2.Identification.IDENTIFYING},{"name":"role","symbols":[lexer2.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD],"postprocess":(d)=>{return getQuotedWord(d[0]);}},{"name":"role","symbols":[lexer2.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT],"postprocess":(d)=>tv(d[0])},{"name":"titleStatement","symbols":[{"literal":"title"},lexer2.has("COLON")?{type:"COLON"}:COLON,"words",lexer2.has("NL")?{type:"NL"}:NL],"postprocess":(d)=>{yy2.addTitle(d[2].trim());}},{"name":"words$ebnf$1$subexpression$1","symbols":[lexer2.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{"name":"words$ebnf$1$subexpression$1","symbols":[lexer2.has("WS")?{type:"WS"}:WS]},{"name":"words$ebnf$1","symbols":["words$ebnf$1$subexpression$1"]},{"name":"words$ebnf$1$subexpression$2","symbols":[lexer2.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{"name":"words$ebnf$1$subexpression$2","symbols":[lexer2.has("WS")?{type:"WS"}:WS]},{"name":"words$ebnf$1","symbols":["words$ebnf$1","words$ebnf$1$subexpression$2"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"words","symbols":["words$ebnf$1"],"postprocess":function(d){return d[0].map((o)=>tv(o[0])).join("");}}],ParserStart:"start",ParserOptions:{skipUnmatchSymbols:[lexer2.has("WS")?{type:"WS"}:WS]}};var erDiagram_default=grammar2;setYY2(db_default2);var parse2=genParserWithRules(erDiagram_default);var ENTITY_ITEM_PATTERN=/^entity\-/;var RELATIONSHIP_ITEM_PATTERN=/^relationship\-/;var createErDiagramEvent=diagramEventMakerFactory("er");var eventRecognizer2=new BaseEventRecognizer().addPatternRecognizerRule(ENTITY_ITEM_PATTERN,(e,m,ir)=>{const entityName=m.itemId.replace(ENTITY_ITEM_PATTERN,"");return createErDiagramEvent(e,m,m.itemId,"entity",ir.entities[entityName]);}).addPatternRecognizerRule(RELATIONSHIP_ITEM_PATTERN,(e,m,ir)=>{const data=ir.relationships.find((r)=>r.itemId===m.itemId);return createErDiagramEvent(e,m,m.itemId,"relationship",data);});var erDiagram={pattern:/^\s*erDiagram/,parser:{parse(text){parse2(text);return db_default2.getDiagramIR();}},artist:artist_default2,configKey:configKey2,eventRecognizer:eventRecognizer2,clear(){db_default2.clear();}};var LineType;(function(LineType2){LineType2["DOTTED_ARROW"]="DOTTED_ARROW";LineType2["SOLID_ARROW"]="SOLID_ARROW";LineType2["STRAIGHT"]="STRAIGHT";LineType2["DOTTED"]="DOTTED";})(LineType||(LineType={}));var ComponentDb=class extends BaseDb{constructor(){super(...arguments);this.aliases={};this.components={};this.interfaces={};this.groups={};this.relationships=[];this.LineType=LineType;}
addComponent(name,comp){if(this.components[name])
return;this.components[name]=comp;this.aliases[name]=comp;}
addInterface(name,interf){if(this.interfaces[name])
return;this.interfaces[name]=interf;this.aliases[name]=interf;}
addGroup(name,group){if(this.groups[name])
return;this.groups[name]=group;this.aliases[name]=group;}
addRelationship(r){this.relationships.push(r);}
apply(part){if(Array.isArray(part)){return part.map((p)=>this.apply(p));}
if(!part)
return;switch(part.type){case"addParam":{this.configParams.push(part);break;}
case"overrideConfig":{this.addOverrideConfig(part);break;}
case"setTitle":{this.title=part.text;break;}
default:{}}}
fillMissingElements(){const elements=[];const groupMap={};const walkGroup=(group)=>{groupMap[group.name]=group;group.children.forEach((child)=>{if("groupType"in child){return walkGroup(child);}
elements.push(child);});};for(const group of Object.values(this.groups)){walkGroup(group);}
this.relationships.forEach((r)=>{elements.push(r.from);elements.push(r.to);});function addNewElementToGroup(element){const parentGroup=groupMap[element.parent];if(parentGroup)
parentGroup.children.push(element);}
elements.forEach((element)=>{const{name,type}=element;if(this.aliases[name]){}else{if(type==="component"){if(!this.components[name]&&!this.groups[name]){this.addComponent(name,element);addNewElementToGroup(element);}}else if(type==="interface"){if(!this.interfaces[name]){this.addInterface(name,element);addNewElementToGroup(element);}}}});this.relationships.forEach((r)=>{;[r.from,r.to].forEach((e)=>{const aliasEntity=this.aliases[e.name];if(aliasEntity){if("type"in aliasEntity&&aliasEntity.type!==e.type){Object.assign(e,aliasEntity);}}});});}
getDiagramIR(){return{components:this.components,interfaces:this.interfaces,groups:this.groups,relationships:this.relationships,...this.getBaseDiagramIR()};}
clear(){super.clear();this.aliases={};this.components={};this.interfaces={};this.groups={};this.relationships=[];}};var db3=new ComponentDb();var db_default3=db3;var defaultConfig3={diagramPadding:15,edgeType:"polyline",edgesep:20,ranksep:40,componentPadding:15,componentBackground:PALETTE.yellow,componentBorderColor:PALETTE.orange,groupBackground:PALETTE.white,groupBorderColor:PALETTE.normalDark,groupBorderWidth:2,relationLineColor:PALETTE.orange,textColor:PALETTE.normalDark,fontSize:14,fontFamily:DEFAULT_FONT_FAMILY,lineWidth:1,labelBackground:PALETTE.white,interfaceSize:16,useMaxWidth:false,hideGroupType:false};var COMPONENT_PARAM_DIRECTIVE_RULES={...getParamRulesFromConfig(defaultConfig3),componentBackground:{valueType:"color"},componentBorderColor:{valueType:"color"},groupBackground:{valueType:"color"},groupBorderColor:{valueType:"color"},relationLineColor:{valueType:"color"},textColor:{valueType:"color"},labelBackground:{valueType:"color"},hideGroupType:{valueType:"boolean"}};var configKey3="component";var configurator3=makeConfigurator({defaultConfig:defaultConfig3,configKey:configKey3,getConfigFromParamDirectives(configParams){return interpreteConfigs(COMPONENT_PARAM_DIRECTIVE_RULES,configParams);},getConfigFromTheme(t){return{componentBackground:t.primaryColor,componentBorderColor:t.primaryBorderColor,groupBackground:t.groupBackground,groupBorderColor:t.primaryBorderColor,relationLineColor:t.primaryColor,labelBackground:t.canvasBackground||t.background1,textColor:t.textColor};}});var getConf3=configurator3.getConfig;var conf3;function getEdgeName2(relationship){return`${relationship.from.name}_${relationship.to.name}_${relationship.message}`;}
var componentArtist={draw(ir,config2,opts){conf3=getConf3(ir,config2);const rootMark={type:"group",attrs:{},children:[]};const g=createLayoutGraph({multigraph:true,directed:true,compound:true}).setGraph({nodesep:20,edgesep:conf3.edgesep,ranksep:conf3.ranksep,splines:getGraphSplinesOption(conf3.edgeType),avoid_label_on_border:true});const dagreWrapper=new DagreWrapper(g);drawComponentsTo(rootMark,ir,g);drawInterfacesTo(rootMark,ir,g);drawGroupsTo(rootMark,ir,g);drawRelationshipsTo(rootMark,ir,g);dagreWrapper.doLayout();const{labelBounds}=adjustMarkInGraph(dagreWrapper);const gBounds=tryExpandBounds(dagreWrapper.getGraphBounds(),labelBounds);const pad2=conf3.diagramPadding;const{title}=ir;let titleSize=void 0;let titleMark=void 0;if(title){const titleFont={fontSize:conf3.fontSize,fontFamily:conf3.fontFamily};const titleResult=makeTitleMark(title,titleFont,{fill:conf3.textColor});titleSize=titleResult.titleSize;titleMark=titleResult.mark;titleMark.class="component__title";rootMark.children.push(titleMark);titleSize.height+=conf3.fontSize;}
const{width:width2,height}=adjustRootMarkBounds({rootMark,gBounds,padX:pad2,padY:pad2,useMaxWidth:conf3.useMaxWidth,containerSize:opts===null||opts===void 0?void 0:opts.containerSize,titleSize,titleMark});return{mark:rootMark,width:width2,height};}};function drawComponentsTo(parentMark,ir,g){const groups=[];const fontConfig=getFontConfig2(conf3);for(const component of Object.values(ir.components)){const id9=component.name;const label=component.label||component.name;const componentLabelDims=calculateTextDimensions(label||"",fontConfig);const compWidth=Math.round(componentLabelDims.width+conf3.componentPadding*2);const compHeight=Math.round(componentLabelDims.height+conf3.componentPadding*2);const rectMark=makeMark("rect",{width:compWidth,height:compHeight,fill:conf3.componentBackground,stroke:conf3.componentBorderColor,lineWidth:conf3.lineWidth,radius:4},{class:"component__component-rect"});const textMark=makeMark("text",{text:label,fill:conf3.textColor,textAlign:"center",textBaseline:"middle",...fontConfig});const group=makeMark("group",{},{children:[rectMark,textMark],class:"component__component"});groups.push(group);parentMark.children.push(group);g.setNode(id9,{width:compWidth,height:compHeight,id:id9,onLayout(data){const{x:x2,y:y2}=data;safeAssign(rectMark.attrs,{x:x2-compWidth/2,y:y2-compHeight/2});safeAssign(textMark.attrs,{x:x2,y:y2});}});}}
function drawInterfacesTo(parentMark,ir,g){const groups=[];const fontConfig=getFontConfig2(conf3);for(const interf of Object.values(ir.interfaces)){const id9=interf.name;const label=interf.label||interf.name;const labelDims=calculateTextDimensions(label,fontConfig);const interfaceSize=conf3.interfaceSize;const circleMark=makeMark("circle",{x:0,y:0,r:interfaceSize/2,fill:conf3.componentBackground,stroke:conf3.componentBorderColor,lineWidth:conf3.lineWidth},{class:"component__interface"});const textMark=makeMark("text",{text:label,fill:conf3.textColor,textAlign:"center",textBaseline:"top",...fontConfig});const group=makeMark("group",{},{children:[circleMark,textMark],class:"component__group"});groups.push(group);parentMark.children.push(group);const outerWidth=Math.max(interfaceSize,labelDims.width);const nodeHeight=interfaceSize+labelDims.height;const layoutNode={width:interfaceSize,height:nodeHeight,id:id9,outerWidth,onLayout(data){const{x:x2,y:y2}=data;safeAssign(circleMark.attrs,{x:x2,y:y2-labelDims.height/2+2});safeAssign(textMark.attrs,{x:x2,y:y2+2});}};g.setNode(id9,layoutNode);if(labelDims.width>interfaceSize){const marginH=(labelDims.width-interfaceSize)/2;layoutNode.marginl=marginH;layoutNode.marginr=marginH;}}}
function drawGroupsTo(parentMark,ir,g){for(const cGroup of Object.values(ir.groups)){const groupId=cGroup.name;const groupType=cGroup.groupType;let bgMark;const symbolDef=symbolRegistry.get(groupType);if(symbolDef){}else{bgMark=makeMark("rect",{fill:conf3.groupBackground,stroke:conf3.groupBorderColor,lineWidth:conf3.groupBorderWidth,radius:2},{class:"component__group-rect"});}
const fontConfig=getFontConfig2(conf3);const groupLabel=cGroup.label||cGroup.name;const labelMark=makeMark("text",{text:groupLabel,fill:conf3.textColor,textAlign:"center",...fontConfig,fontWeight:"bold"},{class:"component__group-label"});let typeMark;const typeText=`[${cGroup.groupType}]`;if(!conf3.hideGroupType){typeMark=makeMark("text",{text:typeText,fill:conf3.textColor,...fontConfig,textBaseline:"hanging"
},{class:"component__type"});}
const labelTextDims=calculateTextDimensions(groupLabel,{...fontConfig,fontWeight:labelMark.attrs.fontWeight});const nodeMarginConfig={};if(symbolDef&&symbolDef.symbolMargin){Object.assign(nodeMarginConfig,{marginl:symbolDef.symbolMargin.left,marginr:symbolDef.symbolMargin.right,margint:symbolDef.symbolMargin.top,marginb:symbolDef.symbolMargin.bottom});}
const groupMinWidth=labelTextDims.width+10;g.setNode(groupId,{id:groupId,minwidth:groupMinWidth,...nodeMarginConfig,onLayout(data){const{x:x2,y:y2,width:width2,height}=data;const containerWidth=Math.max(width2,labelTextDims.width+10);const node2=g.node(groupId);if(bgMark&&bgMark.type==="rect"){safeAssign(bgMark.attrs,{x:x2-containerWidth/2,y:y2-height/2,width:containerWidth,height});group.children.unshift(bgMark);}else{const contentArea={...data,width:Math.max(data.width,containerWidth)};bgMark=symbolRegistry.create(groupType,{mode:"container",contentArea,attrs:{fill:conf3.groupBackground,stroke:conf3.groupBorderColor,lineWidth:conf3.groupBorderWidth}});if(bgMark){node2.outerHeight=bgMark.symbolBounds.height;node2.outerWidth=bgMark.symbolBounds.width;group.children.unshift(bgMark);}}
safeAssign(labelMark.attrs,{x:x2,y:y2-height/2+labelTextDims.height+5});if(typeMark){const typeTextDims=calculateTextDimensions(typeText,fontConfig);safeAssign(typeMark.attrs,{x:x2-containerWidth/2+2,y:y2+height/2-2-typeTextDims.height});}}});for(const child of cGroup.children){if("name"in child){const childNode=g.node(child.name);if(childNode){g.setParent(childNode.id,groupId);if(childNode.dummyBoxId){g.setParent(childNode.id,childNode.dummyBoxId);g.setParent(childNode.dummyBoxId,groupId);}}}}
const group=makeMark("group",{},{children:compact([labelMark,typeMark])});parentMark.children.unshift(group);}}
function drawRelationshipsTo(parentMark,ir,g){ir.relationships.forEach(function(r){const lineMark=makeMark("path",{path:[],stroke:conf3.relationLineColor,lineCap:"round"},{class:"component__rel-line"});if([LineType.DOTTED_ARROW,LineType.DOTTED].includes(r.line.lineType)){lineMark.attrs.lineDash=[4,4];}
let relText;let relTextBg;let labelDims;if(r.message){const fontConfig=getFontConfig2(conf3);labelDims=calculateTextDimensions(r.message,fontConfig);relText=makeMark("text",{text:r.message,fill:conf3.textColor,textAlign:"center",textBaseline:"middle",...fontConfig},{class:"component__rel-text"});relTextBg=makeLabelBg(labelDims,{x:0,y:0},{fill:conf3.labelBackground});}
const shouldDrawArrow=r.line.lineType!==LineType.STRAIGHT;g.setEdge(r.from.name,r.to.name,{name:getEdgeName2(r),relationship:r,labelpos:"r",labelSize:labelDims,onLayout(data,context){const newPath=conf3.edgeType==="curved"?getPointsCurvePath(data.points):getPointsLinearPath(data.points);lineMark.attrs.path=newPath;if(relText){const anchorPoint=data.labelPoint||getPointAt(data.points,0.4,true);safeAssign(relText.attrs,{x:anchorPoint.x,y:anchorPoint.y});safeAssign(relTextBg.attrs,{x:anchorPoint.x-labelDims.width/2,y:anchorPoint.y-labelDims.height/2});const bgAttrs=relTextBg.attrs;context.updateBounds({left:bgAttrs.x,right:bgAttrs.x+bgAttrs.width,top:bgAttrs.y,bottom:bgAttrs.y+bgAttrs.height,width:bgAttrs.width,height:bgAttrs.height});}
if(shouldDrawArrow){const lastPoint=data.points[data.points.length-1];const pointsForDirection=data.points.slice(-2);const arrowRad=calcDirection.apply(null,pointsForDirection);const arrowMark=drawArrowTo(lastPoint,8,arrowRad,{color:conf3.relationLineColor});relationGroupMark.children.push(arrowMark);}}});const isFromGroup=r.from.type==="group";const isToGroup=r.to.type==="group";if(isFromGroup||isToGroup){if(isToGroup){const toGroup=ir.groups[r.to.name];const firstChild=toGroup===null||toGroup===void 0?void 0:toGroup.children[0];if(firstChild&&"name"in firstChild){g.setEdge(r.from.name,firstChild.name,{isDummyEdge:true});}}else if(isFromGroup){const fromGroup=ir.groups[r.from.name];const firstChild=fromGroup===null||fromGroup===void 0?void 0:fromGroup.children[0];if(firstChild&&"name"in firstChild)
g.setEdge(firstChild.name,r.to.name,{isDummyEdge:true});}}
const relationGroupMark=makeMark("group",{},{children:[lineMark,relTextBg,relText].filter((o)=>Boolean(o))});parentMark.children.push(relationGroupMark);});}
var adjustMarkInGraph=function(dagreWrapper){dagreWrapper.callNodeOnLayout();const graph=dagreWrapper.g;const labelBounds=makeBounds();const updateLabelBounds=(b10)=>{tryExpandBounds(labelBounds,b10);};graph.edges().forEach(function(e){const edgeData=graph.edge(e);if(edgeData){if(edgeData.onLayout){edgeData.onLayout(edgeData,{updateBounds:updateLabelBounds});}}});return{labelBounds};};function getFontConfig2(conf6){return{fontSize:conf6.fontSize,fontFamily:conf6.fontFamily};}
var artist_default3=componentArtist;var moo3=__toESM(require_moo());function id3(d){return d[0];}
var COLOR3=/#[a-zA-Z0-9]+/;var PARAM_DIRECTIVE3=/@param/;var CONFIG_DIRECTIVE4=/@config/;var L_PAREN3=/\(/;var R_PAREN3=/\)/;function getTokenValue3(token){if(token&&"value"in token)
return token.value;return token;}
function handleConfigOpenCloseStatement3(d){const text=d[2].map((v)=>{if(v.type)
return getTokenValue3(v);return v;}).join("");try{const v=JSON.parse(text);return{type:"overrideConfig",value:v};}catch(error){return{type:"overrideConfig",error};}}
var COMMENT_LINE3=/%%.*/;var commonTopRules={NL:MOO_NEWLINE,WS:{match:/ +/,lineBreaks:true},L_SQ_BRACKET:{match:/\[/},R_SQ_BRACKET:{match:/\]/},COMMENT_LINE:COMMENT_LINE_REGEXP};var commonTextRules={QUOTED_WORD:QUOTED_WORD_REGEXP,VALID_TEXT:{match:VALID_TEXT_REGEXP,fallback:true}};var lexer3=moo3.states({main:{...commonTopRules,L_BRACKET:{match:/\{/},R_BRACKET:{match:/\}/},COLON:/:/,...configLexerMainState,...commonTextRules},configStatement:{...configLexerconfigStatementState,...commonTextRules}});var yy3;function setYY3(v){yy3=v;}
var grammar3={Lexer:lexer3,ParserRules:[{"name":"_$ebnf$1","symbols":[]},{"name":"_$ebnf$1","symbols":["_$ebnf$1","wschar"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"_","symbols":["_$ebnf$1"],"postprocess":function(d){return null;}},{"name":"__$ebnf$1","symbols":["wschar"]},{"name":"__$ebnf$1","symbols":["__$ebnf$1","wschar"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"__","symbols":["__$ebnf$1"],"postprocess":function(d){return null;}},{"name":"wschar","symbols":[/[ \t\n\v\f\r]/],"postprocess":id3},{"name":"color","symbols":[COLOR3],"postprocess":(d)=>tv(d[0])},{"name":"paramStatement","symbols":[PARAM_DIRECTIVE3,"__","paramPart"],"postprocess":function(d){return d[2];}},{"name":"paramStatement$ebnf$1","symbols":[]},{"name":"paramStatement$ebnf$1$subexpression$1","symbols":[/[\n]/,"_","paramPart"]},{"name":"paramStatement$ebnf$1","symbols":["paramStatement$ebnf$1","paramStatement$ebnf$1$subexpression$1"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"paramStatement","symbols":[PARAM_DIRECTIVE3,"__",{"literal":"{"},"_","paramStatement$ebnf$1",/[\n]/,"_",{"literal":"}"}],"postprocess":function(d){const params=[];d[4].forEach((seg)=>{params.push(seg[2]);});return params;}},{"name":"paramPart$ebnf$1","symbols":[/[a-zA-Z0-9]/]},{"name":"paramPart$ebnf$1","symbols":["paramPart$ebnf$1",/[a-zA-Z0-9]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"paramPart$ebnf$2","symbols":[/[^ \n]/]},{"name":"paramPart$ebnf$2","symbols":["paramPart$ebnf$2",/[^ \n]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"paramPart","symbols":["paramPart$ebnf$1","__","paramPart$ebnf$2"],"postprocess":function(d){const key=d[0].map((v)=>tv(v)).join("");let value=d[2];if(typeof value!=="string")
value=value.map((v)=>tv(v)).join("");return{type:"addParam",key,value};}},{"name":"configStatement$ebnf$1","symbols":[/[^\)]/]},{"name":"configStatement$ebnf$1","symbols":["configStatement$ebnf$1",/[^\)]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"configStatement","symbols":[CONFIG_DIRECTIVE4,{"literal":"("},"configStatement$ebnf$1",{"literal":")"}],"postprocess":handleConfigOpenCloseStatement3},{"name":"configOpenCloseStatement$ebnf$1","symbols":[/[^\)]/]},{"name":"configOpenCloseStatement$ebnf$1","symbols":["configOpenCloseStatement$ebnf$1",/[^\)]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"configOpenCloseStatement","symbols":[CONFIG_DIRECTIVE4,L_PAREN3,"configOpenCloseStatement$ebnf$1",R_PAREN3],"postprocess":handleConfigOpenCloseStatement3},{"name":"comment","symbols":[COMMENT_LINE3],"postprocess":(d)=>null},{"name":"start","symbols":["__","start"]},{"name":"start","symbols":[{"literal":"componentDiagram"},"document"],"postprocess":function(d){if(!d[1])
return;yy3.apply(d[1]);return d[1];}},{"name":"document","symbols":[]},{"name":"document","symbols":["document","line"],"postprocess":function(d){return d[1];}},{"name":"line$ebnf$1","symbols":[lexer3.has("WS")?{type:"WS"}:WS],"postprocess":id3},{"name":"line$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"line","symbols":["line$ebnf$1","statement"]},{"name":"line$ebnf$2","symbols":[lexer3.has("WS")?{type:"WS"}:WS],"postprocess":id3},{"name":"line$ebnf$2","symbols":[],"postprocess":()=>null},{"name":"line","symbols":["line$ebnf$2",lexer3.has("NL")?{type:"NL"}:NL],"postprocess":(d)=>null},{"name":"statement","symbols":["UMLElement"],"postprocess":function(d){return d[0];}},{"name":"statement","symbols":["paramStatement",lexer3.has("NL")?{type:"NL"}:NL]},{"name":"statement","symbols":[{"literal":"title"},lexer3.has("COLON")?{type:"COLON"}:COLON,"words",lexer3.has("NL")?{type:"NL"}:NL],"postprocess":(d)=>({type:"setTitle",text:d[2].trim()})},{"name":"statement","symbols":["configOpenCloseStatement",lexer3.has("NL")?{type:"NL"}:NL]},{"name":"statement","symbols":["comment",lexer3.has("NL")?{type:"NL"}:NL]},{"name":"UMLElement","symbols":["group"],"postprocess":function(d){const obj=d[0];if(obj)
yy3.addGroup(obj.name,obj);return obj;}},{"name":"UMLElement","symbols":["component"],"postprocess":function(d){const obj=d[0];yy3.addComponent(obj.name,obj);return obj;}},{"name":"UMLElement","symbols":["interface"],"postprocess":function(d){const obj=d[0];yy3.addInterface(obj.name,obj);return obj;}},{"name":"UMLElement","symbols":["relationship"],"postprocess":id3},{"name":"group$ebnf$1","symbols":[lexer3.has("WS")?{type:"WS"}:WS],"postprocess":id3},{"name":"group$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"group$ebnf$2","symbols":[]},{"name":"group$ebnf$2$subexpression$1","symbols":["_","UMLElement"]},{"name":"group$ebnf$2","symbols":["group$ebnf$2","group$ebnf$2$subexpression$1"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"group","symbols":["groupType","group$ebnf$1","textInsideQuote","_",lexer3.has("L_BRACKET")?{type:"L_BRACKET"}:L_BRACKET,"group$ebnf$2","_",lexer3.has("R_BRACKET")?{type:"R_BRACKET"}:R_BRACKET,lexer3.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const groupType=tv(d[0][0]);const label=d[2]||groupType;const name=d[2]||`${groupType}_${Date.now()}`;const children=d[5].map((l)=>l[1]).filter((o)=>o);children.forEach((child)=>child.parent=name);return{type:"group",name,groupType,label,children};}},{"name":"groupType","symbols":[{"literal":"package"}]},{"name":"groupType","symbols":[{"literal":"node"}]},{"name":"groupType","symbols":[{"literal":"folder"}]},{"name":"groupType","symbols":[{"literal":"frame"}]},{"name":"groupType","symbols":[{"literal":"cloud"}]},{"name":"groupType","symbols":[{"literal":"database"}]},{"name":"groupType","symbols":[{"literal":"rectangle"}]},{"name":"groupType","symbols":[{"literal":"component"}]},{"name":"component$ebnf$1","symbols":[lexer3.has("WS")?{type:"WS"}:WS],"postprocess":id3},{"name":"component$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"component","symbols":[{"literal":"component"},"component$ebnf$1",lexer3.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,lexer3.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const name=tv(d[2]);return{type:"component",name};}},{"name":"component$ebnf$2","symbols":[lexer3.has("WS")?{type:"WS"}:WS],"postprocess":id3},{"name":"component$ebnf$2","symbols":[],"postprocess":()=>null},{"name":"component$ebnf$3","symbols":[lexer3.has("WS")?{type:"WS"}:WS],"postprocess":id3},{"name":"component$ebnf$3","symbols":[],"postprocess":()=>null},{"name":"component$ebnf$4","symbols":["elementLabel"]},{"name":"component$ebnf$4","symbols":["component$ebnf$4","elementLabel"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"component","symbols":[{"literal":"component"},"component$ebnf$2",lexer3.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,"component$ebnf$3",lexer3.has("L_SQ_BRACKET")?{type:"L_SQ_BRACKET"}:L_SQ_BRACKET,"component$ebnf$4",lexer3.has("R_SQ_BRACKET")?{type:"R_SQ_BRACKET"}:R_SQ_BRACKET,lexer3.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const name=tv(d[2]);const label=d[5].join("").trim();return{type:"component",name,label};}},{"name":"component$ebnf$5","symbols":[lexer3.has("WS")?{type:"WS"}:WS],"postprocess":id3},{"name":"component$ebnf$5","symbols":[],"postprocess":()=>null},{"name":"component$subexpression$1","symbols":["textInsideQuote"]},{"name":"component$subexpression$1","symbols":[lexer3.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{"name":"component$ebnf$6","symbols":[]},{"name":"component$ebnf$6","symbols":["component$ebnf$6",lexer3.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"component","symbols":[{"literal":"component"},"component$ebnf$5","component$subexpression$1","component$ebnf$6",{"literal":"as"},"__",lexer3.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,lexer3.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const _l=d[2][0];const label=typeof _l==="string"?_l:tv(_l);const name=tv(d[6]);return{type:"component",name,label};}},{"name":"component","symbols":["shortComponent",lexer3.has("NL")?{type:"NL"}:NL],"postprocess":id3},{"name":"component$ebnf$7","symbols":[lexer3.has("WS")?{type:"WS"}:WS],"postprocess":id3},{"name":"component$ebnf$7","symbols":[],"postprocess":()=>null},{"name":"component$ebnf$8","symbols":[lexer3.has("WS")?{type:"WS"}:WS],"postprocess":id3},{"name":"component$ebnf$8","symbols":[],"postprocess":()=>null},{"name":"component","symbols":["shortComponent","component$ebnf$7",{"literal":"as"},"component$ebnf$8",lexer3.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,lexer3.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const comp=d[0];const name=tv(d[4]);return{...comp,name,label:comp.name};}},{"name":"shortComponent$ebnf$1","symbols":["elementLabel"]},{"name":"shortComponent$ebnf$1","symbols":["shortComponent$ebnf$1","elementLabel"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"shortComponent","symbols":[lexer3.has("L_SQ_BRACKET")?{type:"L_SQ_BRACKET"}:L_SQ_BRACKET,"shortComponent$ebnf$1",lexer3.has("R_SQ_BRACKET")?{type:"R_SQ_BRACKET"}:R_SQ_BRACKET],"postprocess":function(d){const name=d[1].join("");return{type:"component",name};}},{"name":"elementLabel$subexpression$1","symbols":[lexer3.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{"name":"elementLabel$subexpression$1","symbols":[lexer3.has("NL")?{type:"NL"}:NL]},{"name":"elementLabel$subexpression$1","symbols":[lexer3.has("WS")?{type:"WS"}:WS]},{"name":"elementLabel","symbols":["elementLabel$subexpression$1"],"postprocess":(d)=>tv(d[0][0])},{"name":"textInsideQuote","symbols":[lexer3.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD],"postprocess":function(d){const v=getQuotedWord(d[0]);return v;}},{"name":"interface$ebnf$1","symbols":[lexer3.has("WS")?{type:"WS"}:WS],"postprocess":id3},{"name":"interface$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"interface$subexpression$1","symbols":["textInsideQuote"]},{"name":"interface$subexpression$1","symbols":[lexer3.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{"name":"interface","symbols":["interfaceStart","interface$ebnf$1","interface$subexpression$1",lexer3.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const _l=d[2][0];const name=typeof _l==="string"?_l:tv(_l);return{type:"interface",name};}},{"name":"interface$ebnf$2","symbols":[lexer3.has("WS")?{type:"WS"}:WS],"postprocess":id3},{"name":"interface$ebnf$2","symbols":[],"postprocess":()=>null},{"name":"interface$subexpression$2","symbols":["textInsideQuote"]},{"name":"interface$subexpression$2","symbols":[lexer3.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{"name":"interface$ebnf$3","symbols":[]},{"name":"interface$ebnf$3","symbols":["interface$ebnf$3",lexer3.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"interface","symbols":["interfaceStart","interface$ebnf$2","interface$subexpression$2","interface$ebnf$3",{"literal":"as"},"__",lexer3.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,lexer3.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const _l=d[2][0];const label=typeof _l==="string"?_l:tv(_l);const name=tv(d[6]);return{type:"interface",name,label};}},{"name":"interfaceStart$subexpression$1","symbols":[{"literal":"interface"}]},{"name":"interfaceStart$subexpression$1","symbols":[{"literal":"()"}]},{"name":"interfaceStart","symbols":["interfaceStart$subexpression$1"]},{"name":"relationship$ebnf$1$subexpression$1","symbols":["__",lexer3.has("COLON")?{type:"COLON"}:COLON,"__","words"]},{"name":"relationship$ebnf$1","symbols":["relationship$ebnf$1$subexpression$1"],"postprocess":id3},{"name":"relationship$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"relationship","symbols":["elementReference","_","relationLine","_","elementReference","relationship$ebnf$1",lexer3.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const from=d[0];const to=d[4];let message;if(d[5]){message=d[5][3];}
const line=d[2];const obj={from,to,line,message};yy3.addRelationship(obj);return obj;}},{"name":"words$ebnf$1$subexpression$1","symbols":[lexer3.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{"name":"words$ebnf$1$subexpression$1","symbols":[lexer3.has("WS")?{type:"WS"}:WS]},{"name":"words$ebnf$1","symbols":["words$ebnf$1$subexpression$1"]},{"name":"words$ebnf$1$subexpression$2","symbols":[lexer3.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{"name":"words$ebnf$1$subexpression$2","symbols":[lexer3.has("WS")?{type:"WS"}:WS]},{"name":"words$ebnf$1","symbols":["words$ebnf$1","words$ebnf$1$subexpression$2"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"words","symbols":["words$ebnf$1"],"postprocess":function(d){return d[0].map((o)=>tv(o[0])).join("").trim();}},{"name":"elementReference","symbols":["shortComponent"],"postprocess":id3},{"name":"elementReference$ebnf$1$subexpression$1","symbols":[{"literal":"()"},"__"]},{"name":"elementReference$ebnf$1","symbols":["elementReference$ebnf$1$subexpression$1"],"postprocess":id3},{"name":"elementReference$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"elementReference","symbols":["elementReference$ebnf$1",lexer3.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT],"postprocess":function(d){const interf={type:"interface",name:tv(d[1])};return interf;}},{"name":"relationLine","symbols":[{"literal":"-->"}],"postprocess":(d)=>({lineType:yy3.LineType.SOLID_ARROW})},{"name":"relationLine","symbols":[{"literal":"<--"}],"postprocess":(d)=>({lineType:yy3.LineType.SOLID_ARROW,isReversed:true})},{"name":"relationLine","symbols":[{"literal":"..>"}],"postprocess":(d)=>({lineType:yy3.LineType.DOTTED_ARROW})},{"name":"relationLine","symbols":[{"literal":"<.."}],"postprocess":(d)=>({lineType:yy3.LineType.DOTTED_ARROW,isReversed:true})},{"name":"relationLine","symbols":[{"literal":"--"}],"postprocess":(d)=>({lineType:yy3.LineType.STRAIGHT})},{"name":"relationLine","symbols":[{"literal":".."}],"postprocess":(d)=>({lineType:yy3.LineType.DOTTED})}],ParserStart:"start",ParserOptions:{skipUnmatchSymbols:[lexer3.has("WS")?{type:"WS"}:WS]}};var componentDiagram_default=grammar3;setYY3(db_default3);var parse3=genParserWithRules(componentDiagram_default);var componentDiagram={pattern:/^\s*componentDiagram/,parser:{parse(text){parse3(text);db_default3.fillMissingElements();return db_default3.getDiagramIR();}},artist:artist_default3,configKey:configKey3,clear(){db_default3.clear();}};var ActivityDb=class extends BaseDb{constructor(){super(...arguments);this.steps=[];this.notes=[];this.arrowLabels=[];this.idCounter=makeIdCounter();}
makeId(){return`id-${this.idCounter.next()}`;}
apply(part,ignoreAdd=false,state={}){if(Array.isArray(part)){const partResults=[];let currentStep;part.forEach((p)=>{var _a;const result=this.apply(p,ignoreAdd,{...state,prevStepId:(_a=currentStep===null||currentStep===void 0?void 0:currentStep.value)===null||_a===void 0?void 0:_a.id});if(result){partResults.push(result);currentStep=result;}});return partResults;}
if(!part)
return;let step;switch(part.type){case"addAction":{const action={...part.action,id:this.makeId()};step={type:"action",value:action};}
break;case"condition":{const id9=this.makeId();const thenResult=this.apply(part.then.children,true,{...state,parentId:id9});const condition={id:id9,message:part.message,then:{label:part.then.label,children:thenResult}};if(part.else){const elseResult=this.apply(part.else.children,true,{...state,parentId:id9});condition.else={label:part.else.label,children:elseResult};}
step={type:"condition",value:condition};}
break;case"while":{const id9=this.makeId();const loopResult=this.apply(part.children,true,{...state,parentId:id9});const whileSentence={id:id9,message:part.message,children:loopResult,confirmLabel:part.confirmLabel,denyLabel:part.denyLabel};step={type:"while",value:whileSentence};break;}
case"repeat":{const id9=this.makeId();const loopResult=this.apply(part.children,true,{...state,parentId:id9});const sentence={id:id9,message:part.message,children:loopResult,confirmLabel:part.confirmLabel,denyLabel:part.denyLabel,firstAction:part.firstAction};step={type:"repeat",value:sentence};break;}
case"switch":{const id9=this.makeId();const cases=this.apply(part.children,true,{...state,parentId:id9});const switchSentence={id:id9,message:part.message,children:cases};step={type:"switch",value:switchSentence};break;}
case"case":{const id9=this.makeId();const children=this.apply(part.children,true,{...state,parentId:id9});const caseClause={id:id9,confirmLabel:part.confirmLabel,children};step={type:"case",value:caseClause};break;}
case"fork":{const id9=this.makeId();const branches=this.apply(part.branches,true,{...state,parentId:id9});const forkSentence={id:id9,shouldMerge:part.shouldMerge,branches};step={type:"fork",value:forkSentence};break;}
case"forkBranch":{const id9=this.makeId();const children=this.apply(part.children,true,{...state,parentId:id9});const forkBranch={id:id9,children};step={type:"forkBranch",value:forkBranch};break;}
case"keyword":{step={type:"keyword",value:{id:this.makeId(),label:part.label}};break;}
case"group":{const id9=this.makeId();const childrenResult=this.apply(part.children,true,{...state,parentId:id9});step={type:"group",value:{id:id9,...part,children:childrenResult}};break;}
case"note":{const value={id:this.makeId(),...part,text:dedent_default(part.text)};const prevStepId=state.prevStepId;if(prevStepId){value.target=prevStepId;}
this.notes.push(value);break;}
case"arrowLabel":{const value={id:this.makeId(),...part};const prevStepId=state.prevStepId;if(prevStepId){value.target=prevStepId;}
this.arrowLabels.push(value);break;}
case"setTitle":{this.title=part.text;break;}
case"addParam":{this.configParams.push(part);break;}
case"overrideConfig":{this.addOverrideConfig(part);break;}
default:{}}
if(step&&!ignoreAdd){this.steps.push(step);}
if(step){step.parentId=state.parentId;}
return step;}
getDiagramIR(){return{steps:this.steps,notes:this.notes,arrowLabels:this.arrowLabels,...this.getBaseDiagramIR()};}
clear(){super.clear();this.idCounter.reset();this.steps=[];this.notes=[];}};var db4=new ActivityDb();var defaultConfig4={diagramPadding:15,edgesep:30,edgeType:"polyline",useMaxWidth:false,actionPaddingX:10,actionPaddingY:10,actionBackground:PALETTE.orange,actionBorderColor:PALETTE.normalDark,groupBackground:PALETTE.white,groupBorderColor:PALETTE.normalDark,textColor:PALETTE.normalDark,edgeColor:PALETTE.normalDark,keywordBackground:PALETTE.normalDark,noteTextColor:PALETTE.normalDark,noteMargin:10,labelTextColor:PALETTE.normalDark,labelBackground:PALETTE.white,fontSize:14,fontFamily:DEFAULT_FONT_FAMILY};var ACTIVITY_PARAM_DIRECTIVE_RULES={...getParamRulesFromConfig(defaultConfig4),actionPaddingX:{valueType:"size"},actionPaddingY:{valueType:"size"},actionBackground:{valueType:"color"},actionBorderColor:{valueType:"color"},groupBackground:{valueType:"color"},groupBorderColor:{valueType:"color"},textColor:{valueType:"color"},edgeColor:{valueType:"color"},keywordBackground:{valueType:"color"},noteTextColor:{valueType:"color"},noteMargin:{valueType:"size"},labelBackground:{valueType:"color"},labelTextColor:{valueType:"color"},fontSize:{valueType:"size"},fontFamily:{valueType:"string"}};var configKey4="activity";var configurator4=makeConfigurator({defaultConfig:defaultConfig4,configKey:configKey4,getConfigFromParamDirectives(configParams){return interpreteConfigs(ACTIVITY_PARAM_DIRECTIVE_RULES,configParams);},getConfigFromTheme(t){return{actionBackground:t.primaryColor,actionBorderColor:t.primaryBorderColor,groupBackground:t.groupBackground,groupBorderColor:t.primaryBorderColor,textColor:t.textColor,edgeColor:t.primaryColor,keywordBackground:t.textColor,labelBackground:t.canvasBackground||t.background1,labelTextColor:t.textColor};}});var getConf4=configurator4.getConfig;var isDev=typeof location!=="undefined"&&location.hostname==="localhost";function makeTextMark(conf6,text,textDims,attrs){return makeMark("text",{text,width:textDims.width,height:textDims.height,fill:conf6.textColor,fontSize:conf6.fontSize,fontFamily:conf6.fontFamily,textBaseline:"middle",textAlign:"center",...attrs});}
var conf4;var model2;var activityDraw;var theme2;function calcTextDims(text,attrs={}){const _attrs=Object.assign(getFontConfig3(conf4),attrs);return calculateTextDimensions(text,_attrs);}
function isDetachAlikeKeyword(keyword){return["detach","kill"].includes(keyword.label);}
function isEndAlikeKeyword(keyword){return["end","stop"].includes(keyword.label);}
var erArtist2={draw(ir,config2,opts){conf4=getConf4(ir,config2);model2=new ArtistModel(ir);theme2=config_default.getConfig().themeConfig.themeVariables;const rootMark=makeEmptyGroup();const g=createLayoutGraph({multigraph:true,directed:true,compound:true}).setGraph({rankdir:"TB",nodesep:60,edgesep:conf4.edgesep,ranksep:30,splines:getGraphSplinesOption(conf4.edgeType)}).setDefaultEdgeLabel(function(){return{};});model2.preProcess();const dagreWrapper=new DagreWrapper(g);activityDraw=new ActivityDraw(model2,g);if(isDev){;window.activityDraw=activityDraw;}
ir.steps.forEach((step)=>{activityDraw.drawStep(rootMark,step);});ir.notes.forEach((note)=>{activityDraw.drawNote(rootMark,note);});dagreWrapper.doLayout();dagreWrapper.callNodeOnLayout();const{bounds:edgeBounds}=drawEdges(rootMark,g);const bounds=floorValues(tryExpandBounds(dagreWrapper.getGraphBounds(),edgeBounds));const{title}=ir;let titleSize=void 0;let titleMark=void 0;if(title){const titleFont={fontSize:conf4.fontSize,fontFamily:conf4.fontFamily};const titleResult=makeTitleMark(title,titleFont,{fill:conf4.textColor});titleSize=titleResult.titleSize;titleMark=titleResult.mark;titleMark.class="activity__title";rootMark.children.push(titleMark);titleSize.height+=conf4.fontSize;}
const{width:width2,height}=adjustRootMarkBounds({rootMark,gBounds:bounds,padX:conf4.diagramPadding,padY:conf4.diagramPadding,useMaxWidth:conf4.useMaxWidth,containerSize:opts===null||opts===void 0?void 0:opts.containerSize,titleSize,titleMark});return{mark:rootMark,width:width2,height};}};function getActionRectSize(text){const textDims=calcTextDims(text);const rectWidth=textDims.width+conf4.actionPaddingX*2;const rectHeight=textDims.height+conf4.actionPaddingY*2;return{rectWidth,rectHeight};}
var ArtistModel=class{constructor(ir){this.ir=ir;this.stepModelMap=new Map();this.stepNotesMap=new Map();this.stepArrowLabelMap=new Map();}
shouldTouchPrevIds(step){return step.type!=="group";}
preProcess(){const{ir}=this;let prevIds=[];const processRecursiveStep=(step,stepModel,opts={})=>{const{childrenKeys=["children"],parallelChildren=false}=opts;const value=step.value;const shouldSetPrevId=this.shouldTouchPrevIds(step);if(shouldSetPrevId)
stepModel.prevId=last(prevIds);const oldPrevIds=prevIds;if(shouldSetPrevId){prevIds=[];}
const endId=`${value.id}-end`;safeAssign(stepModel,{endId});childrenKeys.forEach((key)=>{if(value[key]){value[key].forEach((s)=>{processStep(s);if(parallelChildren){prevIds=[];}});}});this.stepModelMap.set(value.id,stepModel);prevIds=oldPrevIds;};const processStep=(step)=>{let stepModel=this.makeStepModel(step);switch(step.type){case"action":{const action=step.value;const{rectWidth,rectHeight}=getActionRectSize(action.message);safeAssign(stepModel,{width:rectWidth,height:rectHeight});this.stepModelMap.set(action.id,stepModel);break;}
case"condition":{const condition=step.value;stepModel.prevId=last(prevIds);const oldPrevIds=prevIds;prevIds=[];condition.then.children.forEach((s)=>processStep(s));if(condition.else){prevIds=[];condition.else.children.forEach((s)=>processStep(s));}
const endId=`${condition.id}-end`;safeAssign(stepModel,{endId});this.stepModelMap.set(condition.id,stepModel);prevIds=oldPrevIds;break;}
case"while":{processRecursiveStep(step,stepModel);break;}
case"switch":{processRecursiveStep(step,stepModel,{parallelChildren:true});break;}
case"case":{processRecursiveStep(step,stepModel);const value=step.value;const firstChild=value.children[0];const lastChild=last(value.children);safeAssign(stepModel,{startId:firstChild?firstChild.value.id:value.id,endId:lastChild?lastChild.value.id:value.id});break;}
case"repeat":{processRecursiveStep(step,stepModel);break;}
case"group":{processRecursiveStep(step,stepModel);const aGroup=step.value;if(aGroup.children.length){const firstChild=aGroup.children[0];const lastChild=last(aGroup.children);safeAssign(stepModel,{startId:firstChild.value.id,endId:lastChild.value.id});}
break;}
case"keyword":{const keyword=step.value;const{rectWidth,rectHeight}=getActionRectSize(keyword.label);safeAssign(stepModel,{width:rectWidth,height:rectHeight});this.stepModelMap.set(keyword.id,stepModel);break;}
case"fork":{const fork=step.value;processRecursiveStep(step,stepModel,{childrenKeys:["branches"],parallelChildren:true});const endId=`${fork.id}-end`;safeAssign(stepModel,{endId,innerFrameId:`${fork.id}-frame`});break;}
case"forkBranch":{processRecursiveStep(step,stepModel);break;}
default:{stepModel=null;}}
if(prevIds.length&&stepModel&&!stepModel.prevId){if(step.type!=="group"){const validPrevId=last(prevIds);const lastStepModel=this.stepModelMap.get(validPrevId);stepModel.prevId=lastStepModel?lastStepModel.endId||lastStepModel.id:validPrevId;}}
let newPrevId;if(stepModel&&this.shouldTouchPrevIds(step)){if(stepModel.endId){newPrevId=stepModel.endId;}else if("startId"in stepModel){newPrevId=stepModel.startId;}else if("id"in step.value){newPrevId=step.value.id;}}
if(newPrevId){prevIds.pop();prevIds.push(newPrevId);}};ir.steps.forEach((step)=>{processStep(step);});ir.notes.forEach((note)=>{const parentId=note.target;if(parentId&&this.stepModelMap.has(parentId)){let stepNotes=this.stepNotesMap.get(parentId);if(!stepNotes){stepNotes=[];this.stepNotesMap.set(parentId,stepNotes);}
stepNotes.push(note);}});ir.arrowLabels.forEach((arrowLabel)=>{const parentId=arrowLabel.target;if(parentId&&this.stepModelMap.has(parentId)){this.stepArrowLabelMap.set(parentId,arrowLabel);}});}
makeStepModel(step){return{...step,id:step.value.id,width:0,height:0};}};var ActivityDraw=class{constructor(model3,g){this.model=model3;this.g=g;this.keywordStepResults={};this.results={};this.traverseStepCollection=(steps,cb)=>{if(!steps)
return;let shouldStop=false;steps.forEach((child)=>{if(cb(child)===false){shouldStop=true;return;}
this.traverseStep(child,cb);});return!shouldStop;};this.traverseStep=(step,cb)=>{if(!step)
return;const value=step.value;if("children"in value){this.traverseStepCollection(value.children,cb);}else if("then"in value){this.traverseStepCollection(value.then.children,cb);if(value.else){this.traverseStepCollection(value.else.children,cb);}}else if("branches"in value){this.traverseStepCollection(value.branches,cb);}};}
drawStep(rootMark,step){var _a;const g=this.g;let result;switch(step.type){case"action":{result=drawAction(rootMark,step.value,g);break;}
case"condition":{const condition=step.value;result=this.drawCondition(rootMark,condition);break;}
case"while":{result=this.drawWhile(rootMark,step.value);break;}
case"switch":{result=this.drawSwitch(rootMark,step.value);break;}
case"case":{result=this.drawCase(rootMark,step.value);break;}
case"repeat":{result=this.drawRepeat(rootMark,step.value);break;}
case"group":{result=this.drawGroup(rootMark,step.value);break;}
case"keyword":{const keyword=step.value;result=this.drawKeyword(rootMark,keyword);this.keywordStepResults[keyword.label]=result;break;}
case"fork":{result=this.drawFork(rootMark,step.value);break;}
case"forkBranch":{result=this.drawForkBranch(rootMark,step.value);break;}
default:break;}
if(result&&result.stepModel){this.results[result.id]=result;if(result.endId)
this.results[result.endId]=result;const prevId=result.stepModel.prevId;const startIdOfCurrent=result.stepModel.startId||result.stepModel.id;let label="";const arrowLabel=this.model.stepArrowLabelMap.get(prevId);if(arrowLabel){label=arrowLabel.text;}
if(prevId){const prevStepModel=this.model.stepModelMap.get(prevId);const prevResult=this.results[prevId];if(!label&&(prevResult===null||prevResult===void 0?void 0:prevResult.outLabel)){label=prevResult.outLabel;}
if(prevId===((_a=this.keywordStepResults.start)===null||_a===void 0?void 0:_a.id)){g.setEdge(prevId,startIdOfCurrent,{label});}else if(prevStepModel&&prevStepModel.type==="keyword"){g.setEdge(prevId,startIdOfCurrent,{label,isDummyEdge:true});}else if(result.hasDetached){g.setEdge(prevId,startIdOfCurrent,{label,isDummyEdge:true});}else{g.setEdge(prevId,startIdOfCurrent,{label});}}}
return result?{...result}:null;}
linkResult(start,end,label=""){if(!(start&&end))
return;const startId=typeof start==="string"?start:start.endId||start.id;this.g.setEdge(startId,end.id,{label});}
drawCondition(parentMark,condition){const group=makeEmptyGroup();const stepModel=model2.stepModelMap.get(condition.id);const{bgMark:decisionBg,textMark,rectWidth,rectHeight}=this.drawDecisionMarks(condition.message);this.g.setNode(condition.id,{id:condition.id,mark:group,width:rectWidth,height:rectHeight,onLayout(data){positionGroupContents(group,{...data,x:data.x-data.width/2,y:data.y-data.height/2});}});const id9=condition.id;const endId=stepModel.endId;const result={id:id9,startMark:group,stepModel,endId};const{mark:diamondMark}=this.drawDiamondMark(endId);parentMark.children.push(group,diamondMark);group.children.push(decisionBg,textMark);const drawChildren2=(children,label)=>{let hasEnded=false;if(children.length){const lastChildResult=last(children.map((child,i2)=>{if(hasEnded)
return;const childResult=this.drawStep(parentMark,child);if(child.type==="keyword"){hasEnded=true;}
if(i2===0){this.linkResult(id9,childResult,label);}
return childResult;}));if(lastChildResult){this.g.setEdge(lastChildResult.endId||lastChildResult.id,endId,{label:"",isDummyEdge:hasEnded});}}else{const dummyNode={id:`${id9}-condition-dummy`};this.g.setNode(dummyNode.id,{width:1,height:1});this.g.setEdge(id9,dummyNode.id,{label});this.g.setEdge(dummyNode.id,endId);if(stepModel.parentId){this.g.setParent(dummyNode.id,stepModel.parentId);}}};drawChildren2(condition.then.children,condition.then.label||"yes");if(condition.else){drawChildren2(condition.else.children,"no");}
return result;}
drawDecisionMarks(message){const{rectWidth,rectHeight}=getActionRectSize(message);const side=Math.ceil(conf4.fontSize*0.8);const decisionBg=makeMark("path",{fill:conf4.actionBackground,stroke:conf4.actionBorderColor,path:[["m",0,rectHeight/2],["l",side,rectHeight/2],["l",rectWidth-side*2,0],["l",side,-rectHeight/2],["l",-side,-rectHeight/2],["l",-rectWidth+side*2,0],["Z"]]},{class:"activity__decision-bg"});const textDims=calcTextDims(message);const textMark=makeTextMark(conf4,message,textDims,{y:rectHeight/2,x:rectWidth/2,fontSize:conf4.fontSize,textBaseline:"middle",textAlign:"center"});return{bgMark:decisionBg,textMark,rectWidth,rectHeight};}
drawDiamondMark(id9,attrs={},opts={}){const diamondSide=10;const diamondMark=makeMark("path",{width:20,height:20,path:[["m",-diamondSide,0],["l",diamondSide,diamondSide],["l",diamondSide,-diamondSide],["l",-diamondSide,-diamondSide],["Z"]],fill:conf4.actionBackground,stroke:conf4.actionBorderColor,...attrs},{class:opts.class||"activity__condition-end"});const moveDiamond=(x2,y2)=>{const firstCommand=diamondMark.attrs.path[0];firstCommand[1]=x2-diamondSide;firstCommand[2]=y2;};this.g.setNode(id9,{id:id9,mark:diamondMark,width:diamondSide*2,height:diamondSide*2,onLayout(data){moveDiamond(data.x,data.y);}});return{mark:diamondMark,diamondSide,moveDiamond};}
drawWhile(parentMark,wh){const{message,id:id9}=wh;const group=makeEmptyGroup();const stepModel=model2.stepModelMap.get(wh.id);const{bgMark:decisionBg,textMark,rectWidth,rectHeight}=this.drawDecisionMarks(message);this.g.setNode(id9,{id:id9,mark:group,width:rectWidth,height:rectHeight,onLayout(data){positionGroupContents(group,{...data,x:data.x-data.width/2,y:data.y-data.height/2});}});const endId=stepModel.endId;const result={id:id9,startMark:group,stepModel,endId};const{mark:diamondMark}=this.drawDiamondMark(endId,{},{class:"activity__while-end"});parentMark.children.push(group,diamondMark);group.children.push(decisionBg,textMark);const lastChildResult=last(wh.children.map((s,i2)=>{const childResult=this.drawStep(parentMark,s);if(i2===0){this.linkResult(id9,childResult,wh.confirmLabel||"");}
return childResult;}));if(lastChildResult){this.g.setEdge(lastChildResult.endId||lastChildResult.id,id9,{label:""});this.g.setEdge(lastChildResult.endId||lastChildResult.id,endId,{label:"",isDummyEdge:true});}
this.g.setEdge(id9,endId,{label:wh.denyLabel||""});return result;}
drawGroup(parentMark,aGroup){const{id:id9}=aGroup;const group=makeEmptyGroup();const stepModel=model2.stepModelMap.get(id9);const endId=stepModel.endId;const result={id:id9,startMark:group,stepModel,endId};const bgMark=makeMark("rect",{fill:aGroup.background||conf4.groupBackground,stroke:conf4.groupBorderColor,lineWidth:2,radius:2},{class:"activity__group-rect"});const groupLabel=aGroup.label||aGroup.name;const fontConfig=getFontConfig3(conf4);const labelMark=makeMark("text",{text:groupLabel,fill:conf4.textColor,...fontConfig,fontWeight:"bold",textBaseline:"top"},{class:"activity__group-rect"});const labelTextDims=calcTextDims(groupLabel,fontConfig);const labelId=`${id9}-label`;this.g.setNode(labelId,{id:labelId,mark:labelMark,width:labelTextDims.width,height:labelTextDims.height});this.g.setNode(id9,{id:id9,mark:group,onLayout:(data)=>{const{x:x2,y:y2,width:width2,height}=data;const containerWidth=Math.max(width2,labelTextDims.width+10);safeAssign(bgMark.attrs,{x:x2-containerWidth/2,y:y2-height/2,width:containerWidth,height});safeAssign(labelMark.attrs,{x:x2-containerWidth/2+fontConfig.fontSize/2,y:y2-height/2});}});this.g.setParent(labelId,id9);group.children.push(bgMark,labelMark);parentMark.children.push(group);const setParentRecursive=(m)=>{if(m.type==="group")
return;unique(compact([m.id,m.startId,m.endId])).forEach((modelId)=>{if(modelId)
this.g.setParent(modelId,id9);});if(m.innerFrameId){this.g.setParent(m.innerFrameId,id9);}else{this.traverseStep(m,(child)=>{const childStepModel=this.model.stepModelMap.get(child.value.id);if(childStepModel)
setParentRecursive(childStepModel);});}};aGroup.children.map((s)=>{const childResult=this.drawStep(parentMark,s);this.g.setParent(childResult.id,id9);setParentRecursive(childResult.stepModel);return childResult;});return result;}
drawSwitch(parentMark,s){const{id:id9,message}=s;const group=makeEmptyGroup();const stepModel=model2.stepModelMap.get(id9);const{bgMark:decisionBg,textMark,rectWidth,rectHeight}=this.drawDecisionMarks(message);this.g.setNode(id9,{id:id9,mark:group,width:rectWidth,height:rectHeight,onLayout(data){positionGroupContents(group,{...data,x:data.x-data.width/2,y:data.y-data.height/2});}});const endId=stepModel.endId;const result={id:id9,startMark:group,stepModel,endId};const{mark:diamondMark}=this.drawDiamondMark(endId);group.children.push(decisionBg,textMark);parentMark.children.push(group,diamondMark);s.children.map((caseStep)=>{const childResult=this.drawStep(parentMark,caseStep);this.g.setEdge(id9,childResult.stepModel.startId||childResult.id,{label:caseStep.value.confirmLabel,simplifyStartEdge:true});if(!childResult.hasEnded){this.g.setEdge(childResult.endId,endId,{label:""});}
return childResult;});return result;}
drawCase(parentMark,c){const{id:id9}=c;const group=makeEmptyGroup();const stepModel=model2.stepModelMap.get(id9);const endId=stepModel.endId;const result={id:id9,startMark:group,stepModel,endId,hasEnded:false};parentMark.children.push(group);if(c.children.length){c.children.forEach((caseClause)=>{if(result.hasEnded)
return;if(caseClause.type==="keyword"){result.hasEnded=true;}
this.drawStep(parentMark,caseClause);});}else{const holderMark=makeCircle({r:1});parentMark.children.push(holderMark);this.g.setNode(endId,{width:1,height:1,mark:holderMark});}
return result;}
drawRepeat(parentMark,repeat){const{message,id:id9}=repeat;const denyLabel=repeat.denyLabel||"no";const group=makeEmptyGroup();const stepModel=model2.stepModelMap.get(id9);const{bgMark:decisionBg,textMark,rectWidth,rectHeight}=this.drawDecisionMarks(message);const endId=stepModel.endId;const startId=stepModel.id;const result={id:id9,startMark:group,stepModel,endId,outLabel:denyLabel};let startMark;if(repeat.firstAction){const firstActionGroup=makeEmptyGroup();firstActionGroup.class="activity__repeat-start";const{rectMark,textMark:textMark2,actionInfo}=drawActionMarks({message:repeat.firstAction.message,conf:conf4});firstActionGroup.children.push(rectMark,textMark2);startMark=firstActionGroup;this.g.setNode(startId,{id:startId,mark:firstActionGroup,width:actionInfo.rectWidth,height:actionInfo.rectHeight,onLayout(data){positionGroupContents(firstActionGroup,{...data,x:data.x-data.width/2,y:data.y-data.height/2});}});}else{const diamondResult=this.drawDiamondMark(startId,{},{class:"activity__repeat-start"});startMark=diamondResult.mark;this.g.setNode(startId,{mark:startMark,width:diamondResult.diamondSide*2,height:diamondResult.diamondSide*2,onLayout(data){diamondResult.moveDiamond(data.x,data.y);}});}
result.startMark=startMark;this.g.setNode(endId,{id:endId,mark:group,width:rectWidth,height:rectHeight,onLayout(data){positionGroupContents(group,{...data,x:data.x-data.width/2,y:data.y-data.height/2});}});parentMark.children.push(group,startMark);group.children.push(decisionBg,textMark);const childrenResults=repeat.children.map((s,i2)=>{const childResult=this.drawStep(parentMark,s);return childResult;});const firstChildResult=childrenResults[0];if(firstChildResult){this.linkResult(startId,firstChildResult);}
const lastChildResult=last(childrenResults);if(lastChildResult){const hasEnded=lastChildResult.hasDetached||lastChildResult.hasEnded;this.g.setEdge(lastChildResult.endId||lastChildResult.id,endId,{isDummyEdge:hasEnded});}
this.g.setEdge(endId,startId,{label:repeat.confirmLabel||""});return result;}
drawKeyword(parentMark,keyword){const stepModel=model2.stepModelMap.get(keyword.id);const group=makeEmptyGroup();group.class="activity__keyword";const{label,id:id9}=keyword;const r=10;const stroke=conf4.keywordBackground;const fill=conf4.keywordBackground;if(label==="start"){const bgMark=makeCircle({r,fill});group.children.push(bgMark);}else if(label==="stop"||label==="end"){const bgMark=makeCircle({r,stroke});const centerCircle=makeCircle({r:r*0.6,fill});group.children.push(bgMark,centerCircle);}
parentMark.children.push(group);this.g.setNode(id9,{id:id9,mark:group,width:r*2,height:r*2,onLayout(data){positionGroupContents(group,{...data,x:data.x,y:data.y});}});const hasDetached=isDetachAlikeKeyword(keyword);const result={id:id9,startMark:group,stepModel,hasEnded:isEndAlikeKeyword(keyword),hasDetached};return result;}
drawFork(parentMark,fork){const{id:id9}=fork;const group=makeEmptyGroup();const stepModel=model2.stepModelMap.get(id9);const startMark=makeMark("rect",{width:100,height:4,x:0,y:0,fill:conf4.keywordBackground,radius:2});const getFrameBounds=()=>{const bounds=this.g.node(frameId);return bounds;};const getBorderShrinkedWidth=(bounds)=>{if(!bounds)
return;const shrinkedWidth=bounds.width;const x2=bounds.x;return{...bounds,width:shrinkedWidth,x:x2};};this.g.setNode(id9,{id:id9,mark:startMark,width:startMark.attrs.width,height:startMark.attrs.height,onLayout:(data)=>{const fb=getBorderShrinkedWidth(getFrameBounds());if(fb){safeAssign(startMark.attrs,{x:fb.x-fb.width/2,y:data.y-data.height/2,width:fb.width});data.width=fb.width;}}});const endId=stepModel.endId;const result={id:id9,startMark,stepModel,endId};const frameId=stepModel.innerFrameId;this.g.setNode(frameId,{mark:group,width:0
});let endMark;if(!fork.shouldMerge){endMark=makeMark("rect",{...startMark.attrs});this.g.setNode(endId,{id:endId,mark:endMark,width:endMark.attrs.width,height:endMark.attrs.height,onLayout(data){const fb=getBorderShrinkedWidth(getFrameBounds());if(fb){safeAssign(endMark.attrs,{x:fb.x-fb.width/2,y:data.y-data.height/2,width:fb.width});data.width=fb.width;}}});}else{const{mark:diamondMark,diamondSide,moveDiamond}=this.drawDiamondMark(endId);endMark=diamondMark;this.g.setNode(endId,{id:endId,mark:endMark,width:endMark.attrs.width,height:endMark.attrs.height,onLayout(data){const fb=getFrameBounds();if(fb){moveDiamond(fb.x+diamondSide+1,data.y);}}});}
group.children.push(startMark);parentMark.children.push(group,endMark);fork.branches.map((branch)=>{var _a;const childResult=this.drawStep(group,branch);const firstChildId=(_a=branch.value.children[0])===null||_a===void 0?void 0:_a.value.id;if(firstChildId){this.g.setEdge(id9,firstChildId,{label:"",isForkStartStraightLine:true});}
let hasEnded=false;const childrenIds=branch.value.children.map((o)=>o.value.id);childrenIds.forEach((childId)=>{if(hasEnded)
return;const childStepModel=this.model.stepModelMap.get(childId);if(childStepModel&&childStepModel.type==="keyword"){hasEnded=true;}
this.g.setParent(childId,frameId);});this.g.setEdge(childResult.endId,endId,{label:"",isForkEndStraightLine:!fork.shouldMerge,isDummyEdge:hasEnded});return childResult;});return result;}
drawForkBranch(parentMark,branch){const{id:id9}=branch;const group=makeEmptyGroup();const stepModel=model2.stepModelMap.get(id9);const result={id:id9,startMark:group,stepModel,endId:""};parentMark.children.push(group);const childResults=branch.children.map((step)=>{const childResult=this.drawStep(parentMark,step);group.children.push(childResult.startMark);return childResult;});const lastChild=last(childResults);if(lastChild){result.endId=lastChild.id;}
return result;}
drawNote(parentMark,note){const{id:id9,text}=note;const group=makeMark("group",{x:0,y:0},{children:[],class:"activity__note"});parentMark.children.push(group);const fontConfig={fontSize:conf4.fontSize,fontFamily:conf4.fontFamily};const textDims=calcTextDims(text,fontConfig);const rectAttrs=getBaseNote(theme2);const noteModel={width:textDims.width+2*conf4.noteMargin,height:textDims.height+2*conf4.noteMargin};const noteRect={type:"rect",class:"note__bg",attrs:rectAttrs};const textMark={type:"text",attrs:{fill:conf4.noteTextColor,text,textBaseline:"middle",...fontConfig}};const targetStepModel=this.model.stepModelMap.get(note.target);if(targetStepModel){if(targetStepModel.parentId){this.g.setParent(targetStepModel.parentId,id9);}}
this.g.setNode(id9,{mark:group,width:noteModel.width,height:noteModel.height,onLayout:()=>{const targetNodeData=this.g.node(targetStepModel.id);let x2;if(note.placement==="left"){x2=targetNodeData.x-targetNodeData.width/2-noteModel.width-conf4.noteMargin;}else{x2=targetNodeData.x+targetNodeData.width/2+conf4.noteMargin;}
const y2=targetNodeData.y-targetNodeData.height/2;safeAssign(textMark.attrs,{x:x2+conf4.noteMargin,y:y2+textDims.height/2+conf4.noteMargin,width:noteModel.width});safeAssign(rectAttrs,{x:x2,y:y2,width:noteModel.width,height:noteModel.height});const node2=this.g.node(id9);node2.outerLeft=x2;node2.outerRight=x2+noteModel.width;}});group.children.push(noteRect,textMark);}};function drawAction(parentMark,action,g){const stepModel=model2.stepModelMap.get(action.id);const group=makeEmptyGroup();const{textMark,rectMark,actionInfo}=drawActionMarks({message:action.message,conf:conf4});const{rectWidth,rectHeight}=actionInfo;group.children.push(rectMark,textMark);g.setNode(action.id,{id:action.id,mark:group,width:rectWidth,height:rectHeight,onLayout(data){positionGroupContents(group,{...data,x:data.x-data.width/2,y:data.y-data.height/2});}});parentMark.children.push(group);return{id:action.id,startMark:group,stepModel};}
function drawActionMarks({message,conf:conf6}){const fontConfig=getFontConfig3(conf6);const textDims=getTextDimensionsInPresicion(message,fontConfig);const actionInfo=getActionRectSize(message);const rectMark=makeMark("rect",{width:actionInfo.rectWidth,height:actionInfo.rectHeight,x:0,y:0,fill:conf6.actionBackground,stroke:conf6.actionBorderColor});const textMark=makeTextMark(conf6,message,textDims,{y:actionInfo.rectHeight/2,x:actionInfo.rectWidth/2,...fontConfig,textBaseline:"middle",textAlign:"center"});return{rectMark,textMark,actionInfo};}
function drawEdges(parent,g){const edgeGroup=makeMark("group",{},{children:[]});const bounds=makeBounds();g.edges().forEach((e)=>{const edge=g.edge(e);if(!edge.points)
return;updateBoundsByPoints(bounds,edge.points);if(edge.isDummyEdge)
return;const[startPoint,...restPoints]=edge.points;const lastPoint=restPoints[restPoints.length-1];if(edge.isForkStartStraightLine){edge.points.slice(0,edge.points.length-2).forEach((p)=>{safeAssign(p,{x:lastPoint.x});});}else if(edge.isForkEndStraightLine){edge.points.slice(1).forEach((p)=>{safeAssign(p,{x:startPoint.x});});}
const shouldUseCurvePath=conf4.edgeType==="curved";const path4=shouldUseCurvePath?getPointsCurvePath(edge.points):getPointsLinearPath(edge.points);const linePath=makeMark("path",{path:path4,stroke:conf4.edgeColor,lineJoin:"round"});const pointsForDirection=restPoints.slice(-2);const arrowRad=calcDirection.apply(null,pointsForDirection);const arrowMark=drawArrowTo(lastPoint,8,arrowRad,{color:conf4.edgeColor});const labelPoint=edge.labelPoint||getPointAt(edge.points,0.4,true);if(!labelPoint)
return;const labelX=labelPoint.x;const labelY=labelPoint.y;let labelMark=null;let labelBgMark=null;if(edge.label){const fontConfig=getFontConfig3(conf4);const labelDims=calcTextDims(edge.label,fontConfig);labelBgMark=makeLabelBg(labelDims,{x:labelX,y:labelY},{fill:conf4.labelBackground},theme2);labelMark=makeMark("text",{text:edge.label,id:[e.v,e.w].join("-"),textAlign:"center",textBaseline:"middle",x:labelX,y:labelY,fill:conf4.labelTextColor,...fontConfig},{class:"activity__edge-label"});const labelBounds=calcBound([labelBgMark]);tryExpandBounds(bounds,labelBounds);}
edgeGroup.children.push(...compact([linePath,labelBgMark,labelMark,arrowMark]));});parent.children.push(edgeGroup);return{bounds};}
function getFontConfig3(conf6){return{fontSize:conf6.fontSize,fontFamily:conf6.fontFamily};}
var artist_default4=erArtist2;var moo4=__toESM(require_moo());function id4(d){return d[0];}
var COLOR4=/#[a-zA-Z0-9]+/;var PARAM_DIRECTIVE4=/@param/;var CONFIG_DIRECTIVE5=/@config/;var L_PAREN4=/\(/;var R_PAREN4=/\)/;function getTokenValue4(token){if(token&&"value"in token)
return token.value;return token;}
function handleConfigOpenCloseStatement4(d){const text=d[2].map((v)=>{if(v.type)
return getTokenValue4(v);return v;}).join("");try{const v=JSON.parse(text);return{type:"overrideConfig",value:v};}catch(error){return{type:"overrideConfig",error};}}
var COMMENT_LINE4=/%%.*/;var COMMON_TOKEN_RULES={VALID_TEXT:{match:VALID_TEXT_REGEXP,fallback:true}};var lexer4=moo4.states({main:{NL:MOO_NEWLINE,WS:{match:/ +/,lineBreaks:false},QUOTED_WORD:QUOTED_WORD_REGEXP,COLOR:COLOR_REGEXP,SEMICOLON:/;/,COLON:/:/,ACTIVITY_DIAGRAM:/activityDiagram/,L_PAREN:L_PAREN_REGEXP,R_PAREN:R_PAREN_REGEXP,L_BRACKET:{match:/\{/},R_BRACKET:{match:/\}/},NOTE:textToCaseInsensitiveRegex("@note"),START_NOTE:{match:/@start_note\s/,push:"noteState"},COMMENT_LINE:COMMENT_LINE_REGEXP,...configLexerMainState,VALID_TEXT:{match:VALID_TEXT_REGEXP,fallback:true}},configStatement:{...configLexerconfigStatementState,...COMMON_TOKEN_RULES},noteState:{END_NOTE:{match:textToCaseInsensitiveRegex("@end_note"),pop:1},NL:MOO_NEWLINE,COMMA:/,/,WORD:{match:VALID_TEXT_REGEXP,fallback:true}}});var yy4;function setYY4(v){yy4=v;}
function extractChildren(o){return Array.isArray(o)?o[0]:o;}
var grammar4={Lexer:lexer4,ParserRules:[{"name":"_$ebnf$1","symbols":[]},{"name":"_$ebnf$1","symbols":["_$ebnf$1","wschar"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"_","symbols":["_$ebnf$1"],"postprocess":function(d){return null;}},{"name":"__$ebnf$1","symbols":["wschar"]},{"name":"__$ebnf$1","symbols":["__$ebnf$1","wschar"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"__","symbols":["__$ebnf$1"],"postprocess":function(d){return null;}},{"name":"wschar","symbols":[/[ \t\n\v\f\r]/],"postprocess":id4},{"name":"color","symbols":[COLOR4],"postprocess":(d)=>tv(d[0])},{"name":"paramStatement","symbols":[PARAM_DIRECTIVE4,"__","paramPart"],"postprocess":function(d){return d[2];}},{"name":"paramStatement$ebnf$1","symbols":[]},{"name":"paramStatement$ebnf$1$subexpression$1","symbols":[/[\n]/,"_","paramPart"]},{"name":"paramStatement$ebnf$1","symbols":["paramStatement$ebnf$1","paramStatement$ebnf$1$subexpression$1"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"paramStatement","symbols":[PARAM_DIRECTIVE4,"__",{"literal":"{"},"_","paramStatement$ebnf$1",/[\n]/,"_",{"literal":"}"}],"postprocess":function(d){const params=[];d[4].forEach((seg)=>{params.push(seg[2]);});return params;}},{"name":"paramPart$ebnf$1","symbols":[/[a-zA-Z0-9]/]},{"name":"paramPart$ebnf$1","symbols":["paramPart$ebnf$1",/[a-zA-Z0-9]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"paramPart$ebnf$2","symbols":[/[^ \n]/]},{"name":"paramPart$ebnf$2","symbols":["paramPart$ebnf$2",/[^ \n]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"paramPart","symbols":["paramPart$ebnf$1","__","paramPart$ebnf$2"],"postprocess":function(d){const key=d[0].map((v)=>tv(v)).join("");let value=d[2];if(typeof value!=="string")
value=value.map((v)=>tv(v)).join("");return{type:"addParam",key,value};}},{"name":"configStatement$ebnf$1","symbols":[/[^\)]/]},{"name":"configStatement$ebnf$1","symbols":["configStatement$ebnf$1",/[^\)]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"configStatement","symbols":[CONFIG_DIRECTIVE5,{"literal":"("},"configStatement$ebnf$1",{"literal":")"}],"postprocess":handleConfigOpenCloseStatement4},{"name":"configOpenCloseStatement$ebnf$1","symbols":[/[^\)]/]},{"name":"configOpenCloseStatement$ebnf$1","symbols":["configOpenCloseStatement$ebnf$1",/[^\)]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"configOpenCloseStatement","symbols":[CONFIG_DIRECTIVE5,L_PAREN4,"configOpenCloseStatement$ebnf$1",R_PAREN4],"postprocess":handleConfigOpenCloseStatement4},{"name":"comment","symbols":[COMMENT_LINE4],"postprocess":(d)=>null},{"name":"start","symbols":["__","start"],"postprocess":(d)=>d[1]},{"name":"start","symbols":[lexer4.has("ACTIVITY_DIAGRAM")?{type:"ACTIVITY_DIAGRAM"}:ACTIVITY_DIAGRAM,"document"],"postprocess":function(d){return d[1];}},{"name":"document","symbols":[]},{"name":"document","symbols":["document","line"],"postprocess":(d)=>{const r=d[0].concat(d[1]);return r;}},{"name":"line$ebnf$1","symbols":[]},{"name":"line$ebnf$1","symbols":["line$ebnf$1",lexer4.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"line","symbols":["line$ebnf$1","statement"],"postprocess":(d)=>{return d[1];}},{"name":"line$ebnf$2","symbols":[lexer4.has("WS")?{type:"WS"}:WS],"postprocess":id4},{"name":"line$ebnf$2","symbols":[],"postprocess":()=>null},{"name":"line","symbols":["line$ebnf$2",lexer4.has("NL")?{type:"NL"}:NL],"postprocess":null},{"name":"statement","symbols":["action"]},{"name":"statement$subexpression$1","symbols":[{"literal":"start"}]},{"name":"statement$subexpression$1","symbols":[{"literal":"stop"}]},{"name":"statement$subexpression$1","symbols":[{"literal":"end"}]},{"name":"statement$subexpression$1","symbols":[{"literal":"detach"}]},{"name":"statement$subexpression$1","symbols":[{"literal":"kill"}]},{"name":"statement","symbols":["statement$subexpression$1",lexer4.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const keyword=tv(d[0][0]);return{type:"keyword",label:keyword};}},{"name":"statement","symbols":["group"]},{"name":"statement","symbols":["conditionSentence"]},{"name":"statement","symbols":["repeatSentence"]},{"name":"statement","symbols":["whileSentence"]},{"name":"statement","symbols":["switchSentence"]},{"name":"statement","symbols":["forkSentence"]},{"name":"statement","symbols":["noteStatement"]},{"name":"statement","symbols":["arrowLabelStatement"]},{"name":"statement","symbols":["titleStatement"]},{"name":"statement","symbols":["paramStatement","_",lexer4.has("NL")?{type:"NL"}:NL]},{"name":"statement","symbols":["configStatement","_",lexer4.has("NL")?{type:"NL"}:NL]},{"name":"statement","symbols":["comment","_",lexer4.has("NL")?{type:"NL"}:NL],"postprocess":null},{"name":"conditionSentence$ebnf$1$subexpression$1","symbols":["_","wordsInParens"]},{"name":"conditionSentence$ebnf$1","symbols":["conditionSentence$ebnf$1$subexpression$1"],"postprocess":id4},{"name":"conditionSentence$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"conditionSentence$ebnf$2","symbols":[]},{"name":"conditionSentence$ebnf$2","symbols":["conditionSentence$ebnf$2","line"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"conditionSentence$ebnf$3","symbols":["elseClause"],"postprocess":id4},{"name":"conditionSentence$ebnf$3","symbols":[],"postprocess":()=>null},{"name":"conditionSentence","symbols":[{"literal":"if"},"wordsInParens",{"literal":"then"},"conditionSentence$ebnf$1",lexer4.has("NL")?{type:"NL"}:NL,"conditionSentence$ebnf$2","conditionSentence$ebnf$3","_",{"literal":"endif"},"_",lexer4.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const thenLabel=(d[3]?d[3][1]:null)||"";const elseResult=d[6];return{type:"condition",message:d[1],then:{label:thenLabel,children:d[5].map((o)=>Array.isArray(o)?o[0]:o)},else:elseResult};}},{"name":"elseClause$ebnf$1","symbols":[]},{"name":"elseClause$ebnf$1","symbols":["elseClause$ebnf$1",lexer4.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"elseClause$ebnf$2","symbols":["wordsInParens"],"postprocess":id4},{"name":"elseClause$ebnf$2","symbols":[],"postprocess":()=>null},{"name":"elseClause$ebnf$3","symbols":[]},{"name":"elseClause$ebnf$3","symbols":["elseClause$ebnf$3","line"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"elseClause","symbols":["elseClause$ebnf$1",{"literal":"else"},"elseClause$ebnf$2",lexer4.has("NL")?{type:"NL"}:NL,"elseClause$ebnf$3"],"postprocess":function(d){return{label:d[2],children:d[4].map((o)=>Array.isArray(o)?o[0]:o)};}},{"name":"whileSentence$ebnf$1$subexpression$1","symbols":[lexer4.has("WS")?{type:"WS"}:WS,{"literal":"is"},lexer4.has("WS")?{type:"WS"}:WS,"wordsInParens"]},{"name":"whileSentence$ebnf$1","symbols":["whileSentence$ebnf$1$subexpression$1"],"postprocess":id4},{"name":"whileSentence$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"whileSentence$ebnf$2","symbols":[]},{"name":"whileSentence$ebnf$2","symbols":["whileSentence$ebnf$2","line"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"whileSentence$ebnf$3","symbols":[]},{"name":"whileSentence$ebnf$3","symbols":["whileSentence$ebnf$3",lexer4.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"whileSentence$ebnf$4$subexpression$1","symbols":["_","wordsInParens"]},{"name":"whileSentence$ebnf$4","symbols":["whileSentence$ebnf$4$subexpression$1"],"postprocess":id4},{"name":"whileSentence$ebnf$4","symbols":[],"postprocess":()=>null},{"name":"whileSentence$ebnf$5","symbols":[lexer4.has("WS")?{type:"WS"}:WS],"postprocess":id4},{"name":"whileSentence$ebnf$5","symbols":[],"postprocess":()=>null},{"name":"whileSentence","symbols":[{"literal":"while"},"wordsInParens","whileSentence$ebnf$1","_",lexer4.has("NL")?{type:"NL"}:NL,"whileSentence$ebnf$2","whileSentence$ebnf$3",{"literal":"endwhile"},"whileSentence$ebnf$4","whileSentence$ebnf$5",lexer4.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const confirmLabel=d[2]?d[2][3]:void 0;const denyLabel=d[8]?d[8][1]:void 0;return{type:"while",message:d[1],confirmLabel,denyLabel,children:d[5].map((o)=>Array.isArray(o)?o[0]:o)};}},{"name":"repeatSentence","symbols":[{"literal":"repeat"},lexer4.has("WS")?{type:"WS"}:WS,"oneLineAction","repeatBodyAndEnd"],"postprocess":function(d){const firstAction=d[2].action;const bodyAndEnd=d[3];return{type:"repeat",firstAction,...bodyAndEnd};}},{"name":"repeatSentence$ebnf$1","symbols":[lexer4.has("WS")?{type:"WS"}:WS],"postprocess":id4},{"name":"repeatSentence$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"repeatSentence","symbols":[{"literal":"repeat"},"repeatSentence$ebnf$1",lexer4.has("NL")?{type:"NL"}:NL,"repeatBodyAndEnd"],"postprocess":function(d){const bodyAndEnd=d[3];return{type:"repeat",...bodyAndEnd};}},{"name":"repeatBodyAndEnd$ebnf$1","symbols":[]},{"name":"repeatBodyAndEnd$ebnf$1","symbols":["repeatBodyAndEnd$ebnf$1","line"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"repeatBodyAndEnd$ebnf$2","symbols":[]},{"name":"repeatBodyAndEnd$ebnf$2","symbols":["repeatBodyAndEnd$ebnf$2",lexer4.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"repeatBodyAndEnd$ebnf$3$subexpression$1","symbols":[lexer4.has("WS")?{type:"WS"}:WS,{"literal":"is"},lexer4.has("WS")?{type:"WS"}:WS,"wordsInParens"]},{"name":"repeatBodyAndEnd$ebnf$3","symbols":["repeatBodyAndEnd$ebnf$3$subexpression$1"],"postprocess":id4},{"name":"repeatBodyAndEnd$ebnf$3","symbols":[],"postprocess":()=>null},{"name":"repeatBodyAndEnd$ebnf$4$subexpression$1","symbols":[lexer4.has("WS")?{type:"WS"}:WS,{"literal":"not"},lexer4.has("WS")?{type:"WS"}:WS,"wordsInParens"]},{"name":"repeatBodyAndEnd$ebnf$4","symbols":["repeatBodyAndEnd$ebnf$4$subexpression$1"],"postprocess":id4},{"name":"repeatBodyAndEnd$ebnf$4","symbols":[],"postprocess":()=>null},{"name":"repeatBodyAndEnd$ebnf$5","symbols":[lexer4.has("WS")?{type:"WS"}:WS],"postprocess":id4},{"name":"repeatBodyAndEnd$ebnf$5","symbols":[],"postprocess":()=>null},{"name":"repeatBodyAndEnd","symbols":["repeatBodyAndEnd$ebnf$1","repeatBodyAndEnd$ebnf$2",{"literal":"repeatwhile"},"wordsInParens","repeatBodyAndEnd$ebnf$3","repeatBodyAndEnd$ebnf$4","repeatBodyAndEnd$ebnf$5",lexer4.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const message=d[3];const confirmLabel=d[4]?d[4][3]:void 0;const denyLabel=d[5]?d[5][3]:void 0;return{message,confirmLabel,denyLabel,children:d[0].map((o)=>Array.isArray(o)?o[0]:o)};}},{"name":"switchSentence$ebnf$1","symbols":[]},{"name":"switchSentence$ebnf$1","symbols":["switchSentence$ebnf$1",lexer4.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"switchSentence$ebnf$2","symbols":[]},{"name":"switchSentence$ebnf$2$subexpression$1$ebnf$1","symbols":[]},{"name":"switchSentence$ebnf$2$subexpression$1$ebnf$1","symbols":["switchSentence$ebnf$2$subexpression$1$ebnf$1",lexer4.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"switchSentence$ebnf$2$subexpression$1","symbols":["switchSentence$ebnf$2$subexpression$1$ebnf$1","caseClause"]},{"name":"switchSentence$ebnf$2","symbols":["switchSentence$ebnf$2","switchSentence$ebnf$2$subexpression$1"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"switchSentence$ebnf$3","symbols":[]},{"name":"switchSentence$ebnf$3","symbols":["switchSentence$ebnf$3",lexer4.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"switchSentence$ebnf$4","symbols":[]},{"name":"switchSentence$ebnf$4","symbols":["switchSentence$ebnf$4",lexer4.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"switchSentence","symbols":[{"literal":"switch"},"wordsInParens","switchSentence$ebnf$1",lexer4.has("NL")?{type:"NL"}:NL,"switchSentence$ebnf$2","switchSentence$ebnf$3",{"literal":"endswitch"},"switchSentence$ebnf$4",lexer4.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const message=d[1];const children=d[4].map((o)=>o[1]);return{type:"switch",message,children};}},{"name":"caseClause$ebnf$1","symbols":[]},{"name":"caseClause$ebnf$1","symbols":["caseClause$ebnf$1",lexer4.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"caseClause$ebnf$2","symbols":[]},{"name":"caseClause$ebnf$2","symbols":["caseClause$ebnf$2","line"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"caseClause","symbols":[{"literal":"case"},"wordsInParens","caseClause$ebnf$1",lexer4.has("NL")?{type:"NL"}:NL,"caseClause$ebnf$2"],"postprocess":function(d){const confirmLabel=d[1].trim();const children=d[4].map((o)=>Array.isArray(o)?o[0]:o);return{type:"case",confirmLabel,children};}},{"name":"forkSentence$ebnf$1","symbols":[]},{"name":"forkSentence$ebnf$1","symbols":["forkSentence$ebnf$1",lexer4.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"forkSentence$ebnf$2$subexpression$1","symbols":[lexer4.has("WS")?{type:"WS"}:WS,"statement"]},{"name":"forkSentence$ebnf$2","symbols":["forkSentence$ebnf$2$subexpression$1"]},{"name":"forkSentence$ebnf$2$subexpression$2","symbols":[lexer4.has("WS")?{type:"WS"}:WS,"statement"]},{"name":"forkSentence$ebnf$2","symbols":["forkSentence$ebnf$2","forkSentence$ebnf$2$subexpression$2"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"forkSentence$ebnf$3","symbols":[]},{"name":"forkSentence$ebnf$3$subexpression$1","symbols":["_","forkAgainClause"]},{"name":"forkSentence$ebnf$3","symbols":["forkSentence$ebnf$3","forkSentence$ebnf$3$subexpression$1"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"forkSentence$subexpression$1","symbols":[{"literal":"endfork"}]},{"name":"forkSentence$subexpression$1","symbols":[{"literal":"endmerge"}]},{"name":"forkSentence","symbols":[{"literal":"fork"},"forkSentence$ebnf$1",lexer4.has("NL")?{type:"NL"}:NL,"forkSentence$ebnf$2","forkSentence$ebnf$3","_","forkSentence$subexpression$1",lexer4.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const firstActions=d[3].map((a)=>extractChildren(a[1]));const forkAgains=d[4].map((a)=>a[1]);const branches=[{type:"forkBranch",children:firstActions},...forkAgains];const endWord=tv(d[6][0]);const shouldMerge=endWord==="endmerge";return{type:"fork",shouldMerge,branches};}},{"name":"forkAgainClause$ebnf$1","symbols":[]},{"name":"forkAgainClause$ebnf$1","symbols":["forkAgainClause$ebnf$1",lexer4.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"forkAgainClause$ebnf$2$subexpression$1","symbols":[lexer4.has("WS")?{type:"WS"}:WS,"statement"]},{"name":"forkAgainClause$ebnf$2","symbols":["forkAgainClause$ebnf$2$subexpression$1"]},{"name":"forkAgainClause$ebnf$2$subexpression$2","symbols":[lexer4.has("WS")?{type:"WS"}:WS,"statement"]},{"name":"forkAgainClause$ebnf$2","symbols":["forkAgainClause$ebnf$2","forkAgainClause$ebnf$2$subexpression$2"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"forkAgainClause","symbols":[{"literal":"forkagain"},"forkAgainClause$ebnf$1",lexer4.has("NL")?{type:"NL"}:NL,"forkAgainClause$ebnf$2"],"postprocess":function(d){const statements=d[3].map((a)=>extractChildren(a[1]));return{type:"forkBranch",children:statements};}},{"name":"wordsInParens","symbols":[lexer4.has("L_PAREN")?{type:"L_PAREN"}:L_PAREN4,"words",lexer4.has("R_PAREN")?{type:"R_PAREN"}:R_PAREN4],"postprocess":(d)=>d[1]},{"name":"words$ebnf$1$subexpression$1","symbols":[lexer4.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{"name":"words$ebnf$1$subexpression$1","symbols":[lexer4.has("WS")?{type:"WS"}:WS]},{"name":"words$ebnf$1","symbols":["words$ebnf$1$subexpression$1"]},{"name":"words$ebnf$1$subexpression$2","symbols":[lexer4.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{"name":"words$ebnf$1$subexpression$2","symbols":[lexer4.has("WS")?{type:"WS"}:WS]},{"name":"words$ebnf$1","symbols":["words$ebnf$1","words$ebnf$1$subexpression$2"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"words","symbols":["words$ebnf$1"],"postprocess":function(d){return d[0].map((o)=>tv(o[0])).join("");}},{"name":"action","symbols":[lexer4.has("COLON")?{type:"COLON"}:COLON,"multilineText",lexer4.has("SEMICOLON")?{type:"SEMICOLON"}:SEMICOLON,lexer4.has("NL")?{type:"NL"}:NL],"postprocess":function(d){return{type:"addAction",action:{actionType:"normal",message:d[1]}};}},{"name":"oneLineAction","symbols":[lexer4.has("COLON")?{type:"COLON"}:COLON,"words",lexer4.has("SEMICOLON")?{type:"SEMICOLON"}:SEMICOLON,lexer4.has("NL")?{type:"NL"}:NL],"postprocess":function(d){return{type:"addAction",action:{actionType:"normal",message:d[1]}};}},{"name":"multilineText$ebnf$1","symbols":[]},{"name":"multilineText$ebnf$1$subexpression$1","symbols":[lexer4.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{"name":"multilineText$ebnf$1$subexpression$1","symbols":[lexer4.has("WS")?{type:"WS"}:WS]},{"name":"multilineText$ebnf$1$subexpression$1","symbols":[lexer4.has("NL")?{type:"NL"}:NL]},{"name":"multilineText$ebnf$1","symbols":["multilineText$ebnf$1","multilineText$ebnf$1$subexpression$1"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"multilineText","symbols":["multilineText$ebnf$1"],"postprocess":function(d){const v=d[0].map((l)=>{return l.map((o)=>tv(o));}).join("");return v;}},{"name":"groupType","symbols":[{"literal":"group"}]},{"name":"groupType","symbols":[{"literal":"partition"}]},{"name":"group$ebnf$1$subexpression$1","symbols":["color",lexer4.has("WS")?{type:"WS"}:WS]},{"name":"group$ebnf$1","symbols":["group$ebnf$1$subexpression$1"],"postprocess":id4},{"name":"group$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"group$subexpression$1","symbols":[lexer4.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD]},{"name":"group$subexpression$1","symbols":[lexer4.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{"name":"group$ebnf$2$subexpression$1","symbols":["__","statement"]},{"name":"group$ebnf$2","symbols":["group$ebnf$2$subexpression$1"]},{"name":"group$ebnf$2$subexpression$2","symbols":["__","statement"]},{"name":"group$ebnf$2","symbols":["group$ebnf$2","group$ebnf$2$subexpression$2"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"group$ebnf$3","symbols":[]},{"name":"group$ebnf$3","symbols":["group$ebnf$3",lexer4.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"group$ebnf$4","symbols":[]},{"name":"group$ebnf$4","symbols":["group$ebnf$4",lexer4.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"group","symbols":["groupType","__","group$ebnf$1","group$subexpression$1","_",lexer4.has("L_BRACKET")?{type:"L_BRACKET"}:L_BRACKET,"group$ebnf$2","group$ebnf$3",lexer4.has("R_BRACKET")?{type:"R_BRACKET"}:R_BRACKET,"group$ebnf$4",lexer4.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const groupType=tv(d[0][0]);const background=d[2]?d[2][0]:null;const titleToken=d[3][0];const title=titleToken.type==="QUOTED_WORD"?getQuotedWord(titleToken).replace(/"(.*)"/,"$1"):tv(titleToken);const label=(title||groupType).trim();const name=(title||`${groupType}_${Date.now()}`).trim();const children=d[6].map((l)=>l[1][0]).filter((o)=>o);children.forEach((child)=>child.parent=name);return{type:"group",name,groupType,label,background,children};}},{"name":"placement","symbols":[{"literal":"left"}],"postprocess":(d)=>"left"},{"name":"placement","symbols":[{"literal":"right"}],"postprocess":(d)=>"right"},{"name":"multilineNoteText$ebnf$1","symbols":[]},{"name":"multilineNoteText$ebnf$1$subexpression$1","symbols":[lexer4.has("COMMA")?{type:"COMMA"}:COMMA]},{"name":"multilineNoteText$ebnf$1$subexpression$1","symbols":[lexer4.has("WORD")?{type:"WORD"}:WORD]},{"name":"multilineNoteText$ebnf$1$subexpression$1","symbols":[lexer4.has("NL")?{type:"NL"}:NL]},{"name":"multilineNoteText$ebnf$1","symbols":["multilineNoteText$ebnf$1","multilineNoteText$ebnf$1$subexpression$1"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"multilineNoteText","symbols":["multilineNoteText$ebnf$1",lexer4.has("END_NOTE")?{type:"END_NOTE"}:END_NOTE],"postprocess":function(d){const v=d[0].map((l)=>{return l.map((o)=>tv(o));}).join("");let text=v;if(v[v.length-1]==="\n"){text=v.slice(0,v.length-1);}
return text;}},{"name":"noteStatement$subexpression$1","symbols":[{"literal":"note"}]},{"name":"noteStatement$subexpression$1","symbols":[lexer4.has("NOTE")?{type:"NOTE"}:NOTE]},{"name":"noteStatement$ebnf$1","symbols":[]},{"name":"noteStatement$ebnf$1","symbols":["noteStatement$ebnf$1",lexer4.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"noteStatement$ebnf$2","symbols":[]},{"name":"noteStatement$ebnf$2","symbols":["noteStatement$ebnf$2",lexer4.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"noteStatement","symbols":["noteStatement$subexpression$1","noteStatement$ebnf$1","placement","noteStatement$ebnf$2",lexer4.has("COLON")?{type:"COLON"}:COLON,"words",lexer4.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const text=d[5].trim();return{type:"note",placement:d[2],text};}},{"name":"noteStatement$subexpression$2","symbols":[{"literal":"note"}]},{"name":"noteStatement$subexpression$2","symbols":[lexer4.has("START_NOTE")?{type:"START_NOTE"}:START_NOTE]},{"name":"noteStatement$ebnf$3","symbols":[]},{"name":"noteStatement$ebnf$3","symbols":["noteStatement$ebnf$3",lexer4.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"noteStatement$ebnf$4","symbols":[]},{"name":"noteStatement$ebnf$4","symbols":["noteStatement$ebnf$4",lexer4.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"noteStatement","symbols":["noteStatement$subexpression$2","noteStatement$ebnf$3","placement","noteStatement$ebnf$4",lexer4.has("NL")?{type:"NL"}:NL,"multilineNoteText",lexer4.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const text=d[5];return{type:"note",placement:d[2],text};}},{"name":"arrowLabelStatement","symbols":[{"literal":"->"},"__","words",lexer4.has("SEMICOLON")?{type:"SEMICOLON"}:SEMICOLON,"_",lexer4.has("NL")?{type:"NL"}:NL],"postprocess":function(d){return{type:"arrowLabel",text:d[2]};}},{"name":"titleStatement","symbols":[{"literal":"title"},lexer4.has("COLON")?{type:"COLON"}:COLON,"words",lexer4.has("NL")?{type:"NL"}:NL],"postprocess":(d)=>({type:"setTitle",text:d[2].trim()})}],ParserStart:"start",ParserOptions:{skipUnmatchSymbols:[lexer4.has("WS")?{type:"WS"}:WS]}};var activityDiagram_default=grammar4;setYY4(db4);var parse4=genParserWithRules(activityDiagram_default,{dedupeAmbigousResults:true,postProcess(results){db4.apply(results);return results;}});var activityDiagram={pattern:/^\s*activityDiagram/,parser:{parse(text){parse4(text);return db4.getDiagramIR();}},artist:artist_default4,configKey:"activity",clear(){db4.clear();}};var DOTDb=class extends BaseDb{constructor(){super(...arguments);this.ACTION_HANDLERS={overrideConfig(action){this.addOverrideConfig(action);},addParam(action){this.configParams.push(action);},addGraph(action){function attrListToObject(list){return list.reduce((acc,attr)=>{acc[attr.id]=attr.eq;return acc;},{});}
function processGraph(graph){const newGraph2={...graph};const attrList=[];const childList=[];const attrsCollection={};for(const child of newGraph2.children){let newChild=child;switch(child.type){case"attr_stmt":{const _child=child;const target=child.target||"graph";if("attr_list"in _child){attrsCollection[target]=Object.assign(attrsCollection[target]||{},attrListToObject(_child.attr_list));newChild=null;}
break;}
case"node_stmt":case"edge_stmt":{const _child=child;if("attr_list"in _child){child.attrs=attrListToObject(_child.attr_list);delete _child.attr_list;}
break;}
case"subgraph":{newChild=processGraph(child);break;}
case"attr":{attrList.push(child);newChild=null;break;}}
if(newChild)
childList.push(newChild);}
newGraph2.children=childList;if(attrList.length){attrsCollection.graph=Object.assign(attrsCollection.graph||{},attrListToObject(attrList));}
if(Object.keys(attrsCollection).length)
newGraph2.attrs=attrsCollection;return newGraph2;}
const newGraph=processGraph(action.graph);this.graph=newGraph;}};}
getDiagramIR(){this.processAttrs();return{...super.getBaseDiagramIR(),graph:this.graph};}
processAttrs(){}
apply(action){if(!action)
return;if(Array.isArray(action)){action.forEach((a)=>this.apply(a));return;}
if(action.type in this.ACTION_HANDLERS){this.ACTION_HANDLERS[action.type].call(this,action);}}
clear(){super.clear();this.graph=void 0;}};var db5=new DOTDb();var db_default4=db5;var SHAPE_MAP={ellipse:"ellipse",circle:"circle"};function drawNodeShape(context){const{data,shape,textDims,markAttrs}=context;const flooredGeom=floorValues(TRANSFORM_GRAPH.graphNodeToRectStart(data));if(shape){const mappedShape=SHAPE_MAP[shape];const symbolDef=symbolRegistry.get(mappedShape||shape);if(symbolDef){const contentArea={x:data.x,y:data.y,width:textDims.width,height:textDims.height};const sym=symbolRegistry.create(shape,{mode:"container",attrs:markAttrs,contentArea});return{containerNode:sym};}}
const nodeRect=makeMark("rect",{...flooredGeom,...markAttrs});if(shape==="plaintext"){nodeRect.attrs.fill="transparent";nodeRect.attrs.stroke="transparent";}
return{containerNode:nodeRect};}
var StyleContext=class _StyleContext{constructor(){this.values={};}
setParent(c){this.parent=c;}
spawn(){const child=new _StyleContext();child.setParent(this);return child;}
getValue(key){const result=this.resolve(key);if(result.resolved){return result.value;}
return void 0;}
set(key,v){this.values[key]={v};}
setValues(obj){for(const[k,v]of Object.entries(obj)){this.set(k,v);}}
resolve(key){let current=this;while(current){if(current.values[key]){return{resolved:true,value:current.values[key].v};}
current=current.parent;}
return{resolved:false,value:void 0};}};var DEFAULT_LINE_WIDTH=1;var BOLD_LINE_WIDTH=2;var DASHED_LINE_DASH=[5,5];var DOTTED_LINE_DASH=[2,4];var defaultConfig5={diagramPadding:15,layoutDirection:"TB",ranksep:20,nodesep:20,edgesep:10,edgeType:"polyline",nodePadding:8,nodeBorderRadius:2,backgroundColor:PALETTE.white,labelTextColor:PALETTE.normalDark,nodeBorderColor:PALETTE.normalDark,edgeColor:PALETTE.normalDark,fontSize:14,fontWeight:"normal",fontFamily:DEFAULT_FONT_FAMILY};var DOT_PARAM_DIRECTIVE_RULES={...getParamRulesFromConfig(defaultConfig5)};var configKey5="dot";var configurator5=makeConfigurator({defaultConfig:defaultConfig5,configKey:configKey5,getConfigFromParamDirectives(configParams){return interpreteConfigs(DOT_PARAM_DIRECTIVE_RULES,configParams);},getConfigFromTheme(t){return{backgroundColor:t.canvasBackground,labelTextColor:t.textColor,nodeBorderColor:t.primaryLineColor,edgeColor:t.primaryLineColor};}});var getConf5=configurator5.getConfig;var StyleContexts=class _StyleContexts{constructor(){this.node=new StyleContext();this.edge=new StyleContext();this.graph=new StyleContext();}
spawn(){const childContexts=new _StyleContexts();childContexts.node.setParent(this.node);childContexts.edge.setParent(this.edge);childContexts.graph.setParent(this.graph);return childContexts;}
update(input){if(input.graph)
this.graph.setValues(input.graph);if(input.node)
this.node.setValues(input.node);if(input.edge)
this.edge.setValues(input.edge);}};var artist=makeArtist({draw(ir,config2,opts){const conf6=getConf5(ir,config2);const rootMark=makeEmptyGroup();const dotDraw=new DOTDraw(ir,conf6,rootMark);const drawResult=dotDraw.draw();const gBounds=dotDraw.dagreWrapper.getGraphBounds();let{width:width2,height}=adjustRootMarkBounds({rootMark,gBounds,padX:conf6.diagramPadding,padY:conf6.diagramPadding});if(drawResult){if(drawResult.labelHeight){height+=drawResult.labelHeight;}
if(drawResult.frameRect){const frameAttrs=drawResult.frameRect.attrs;safeAssign(frameAttrs,{width:width2,height,x:-conf6.diagramPadding,y:-conf6.diagramPadding});}}
return{mark:rootMark,width:width2,height};}});var DOTDraw=class{constructor(ir,conf6,rootMark){this.ir=ir;this.conf=conf6;this.rootMark=rootMark;this.drawnNodeIds=new Set();this.edgeNodeIds=new Set();this.subgraphs=new Map();if(isDev){;window.dotDraw=this;}
this.g=createLayoutGraph({multigraph:true,directed:true,compound:true}).setGraph({rankdir:conf6.layoutDirection,nodesep:conf6.nodesep,edgesep:conf6.edgesep,ranksep:conf6.ranksep,splines:getGraphSplinesOption(conf6.edgeType)});this.dagreWrapper=new DagreWrapper(this.g);}
draw(){const irGraph=this.ir.graph;if(!irGraph)
return;const dagreWrapper=this.dagreWrapper;const parentInfo={id:irGraph.id,mark:this.rootMark,isRoot:true,styleContexts:new StyleContexts()};this.updateSubgraphMap();this.drawGraphAlike(irGraph,parentInfo);for(const edgeNodeId of this.edgeNodeIds){if(!this.drawnNodeIds.has(edgeNodeId)){this.drawNode(edgeNodeId,{},parentInfo);this.g.setParent(edgeNodeId,parentInfo.id);}}
dagreWrapper.doLayout();dagreWrapper.callNodeOnLayout();dagreWrapper.callEdgeOnLayout();return this.drawOutmostFrame(parentInfo);}
updateSubgraphMap(){const irGraph=this.ir.graph;this.subgraphs=new Map();const dfs2=(stmt)=>{if(stmt.type==="subgraph"){this.subgraphs.set(stmt.id,stmt);for(const child of stmt.children){dfs2(child);}}};for(const child of irGraph.children){dfs2(child);}}
drawGraphAlike(irGraph,parentInfo){var _a;if(irGraph.attrs){parentInfo.styleContexts.update(irGraph.attrs);}
const conf6=this.conf;const graphContext=parentInfo.styleContexts.graph;const fontConfig=this.getFontConfig(graphContext);const graphAttrs2=((_a=irGraph.attrs)===null||_a===void 0?void 0:_a.graph)||{};const graphLabel=graphAttrs2.label;if(parentInfo.isRoot){this.g.setNode(irGraph.id,{});}else{let minwidth=0;let paddingt=0;if(graphLabel){const dims=calculateTextDimensions(graphLabel,fontConfig);minwidth=dims.width+fontConfig.fontSize;paddingt=dims.height;}
this.g.setNode(irGraph.id,{minwidth,paddingt,onLayout(data){const rectGeometry=floorValues(TRANSFORM_GRAPH.graphNodeToRectStart(data));const graphStyle=graphAttrMapper(graphAttrs2,graphContext);const subGraphRect=makeMark("rect",{...rectGeometry,stroke:conf6.nodeBorderColor,...graphStyle});parentInfo.mark.children.unshift(subGraphRect);if(graphLabel){const labelPoint={x:data.x,y:data.y-data.height/2};const labelMark=makeTextAtPoint(graphLabel,labelPoint,{textBaseline:"hanging",...fontConfig,fill:conf6.labelTextColor,...graphLabelAttrMapper(graphAttrs2,graphContext)});parentInfo.mark.children.push(labelMark);}}});}
irGraph.children.forEach((child)=>{switch(child.type){case"node_stmt":{this.drawNodeStmt(child,parentInfo);break;}
case"edge_stmt":{this.drawEdgeStmt(child,parentInfo);break;}
case"subgraph":{const childGroup=makeEmptyGroup();parentInfo.mark.children.push(childGroup);const newParentInfo={id:child.id,mark:childGroup,styleContexts:parentInfo.styleContexts.spawn(),parentId:parentInfo.id};this.drawGraphAlike(child,newParentInfo);this.g.setParent(child.id,irGraph.id);break;}}});}
drawNodeStmt(stmt,parentInfo){const{nodeId}=stmt;this.g.setParent(nodeId.id,parentInfo.id);this.drawNode(nodeId.id,stmt.attrs,parentInfo);this.drawnNodeIds.add(nodeId.id);}
drawNode(name,nodeAttrs={},parentInfo){const subgraphWithName=this.subgraphs.get(name);const isSubgraph=Boolean(subgraphWithName);if(isSubgraph)
return;const label=nodeAttrs.label||name;const nodeStyleContext=parentInfo.styleContexts.node;const fontConfig=this.getFontConfig(nodeStyleContext);const textDims=getTextDimensionsInPresicion(label,fontConfig);const width2=textDims.width+this.conf.nodePadding*2;const height=textDims.height+this.conf.nodePadding*2;const layoutAttrs=nodeLayoutAttrMapper(nodeAttrs,nodeStyleContext);this.g.setNode(name,{width:width2,height,...layoutAttrs,onLayout:(data)=>{const shape=nodeAttrs.shape||nodeStyleContext.getValue("shape");const edgeStyle=nodeAttrs.style||nodeStyleContext.getValue("style");let lineDash=null;let lineWidth=DEFAULT_LINE_WIDTH;if(edgeStyle==="dashed"){lineDash=DASHED_LINE_DASH.slice();}else if(edgeStyle==="dotted"){lineDash=DOTTED_LINE_DASH.slice();}else if(edgeStyle==="bold"){lineWidth=BOLD_LINE_WIDTH;}
const nodeShapeResult=drawNodeShape({data,shape,textDims,markAttrs:{stroke:this.conf.nodeBorderColor,radius:this.conf.nodeBorderRadius,lineDash,lineWidth,...nodeAttrsToStyle(nodeAttrs,nodeStyleContext)}});const textMark=makeMark("text",{text:label,x:data.x,y:data.y,fill:this.conf.labelTextColor,...fontConfig,...nodeAttrsToLabelStyle(nodeAttrs,nodeStyleContext),textAlign:"center",textBaseline:"middle"});parentInfo.mark.children.push(nodeShapeResult.containerNode,textMark);}});}
drawEdgeStmt(stmt,parentInfo){const{edge_list,attrs={}}=stmt;const tuples=zipTuple(edge_list.slice(0,edge_list.length-1),edge_list.slice(1));const edgeGroup=makeEmptyGroup();const graphAttrs2=graphAttrMapper({},parentInfo.styleContexts.graph);parentInfo.mark.children.push(edgeGroup);const isDirected=this.ir.graph.type==="digraph";tuples.forEach(([v1,v2])=>{this.edgeNodeIds.add(v1.id);this.edgeNodeIds.add(v2.id);const conf6=this.conf;this.g.setEdge(v1.id,v2.id,{onLayout:(edge)=>{const edgeStyleContext=parentInfo.styleContexts.edge;const edgeStyle=attrs.style||edgeStyleContext.getValue("style");const isInvisible=edgeStyle==="invis";if(isInvisible)
return;const shouldUseCurvePath=this.conf.edgeType==="curved";const path4=shouldUseCurvePath?getPointsCurvePath(edge.points):getPointsLinearPath(edge.points);const pathAttrs=edgeAttrsToStyle(attrs,edgeStyleContext);let lineDash=null;let lineWidth=DEFAULT_LINE_WIDTH;if(edgeStyle==="dashed"){lineDash=DASHED_LINE_DASH.slice();}else if(edgeStyle==="dotted"){lineDash=DOTTED_LINE_DASH.slice();}else if(edgeStyle==="bold"){lineWidth=BOLD_LINE_WIDTH;}
const pathMark=makeMark("path",{path:path4,stroke:conf6.edgeColor,lineDash,lineWidth,...pathAttrs});edgeGroup.children.push(pathMark);if(isDirected){const lastPoint=last(edge.points);const arrowDirection=calcDirection(edge.points[edge.points.length-2],lastPoint);const arrowHeadType=attrs.arrowhead||edgeStyleContext.getValue("arrowhead")||"normal";const arrowMark=drawArrowTo(last(edge.points),8,arrowDirection,{type:ARROW_TYPE_MAP[arrowHeadType]||"triangle",color:pathAttrs.stroke||conf6.edgeColor,bgColor:graphAttrs2.fill||this.conf.backgroundColor});edgeGroup.children.push(arrowMark);}
const anchorPoint=edge.labelPoint||edge.points[1];if(attrs.label){const textColor=attrs.fontcolor||this.conf.labelTextColor;const labelMark=makeMark("text",{text:attrs.label,id:[v1.id,v2.id].join("-"),textAlign:"center",textBaseline:"middle",...anchorPoint,fill:textColor,...this.getFontConfig(edgeStyleContext)},{class:"activity__edge-label"});edgeGroup.children.push(labelMark);}}});});}
drawOutmostFrame(parentInfo){var _a;const irGraph=this.ir.graph;if(!((_a=irGraph.attrs)===null||_a===void 0?void 0:_a.graph))
return;const graphAttrs2=irGraph.attrs.graph;const conf6=this.conf;const bounds=this.dagreWrapper.getGraphBounds();let frameRect;const graphContext=parentInfo.styleContexts.graph;if(graphAttrs2.bgcolor){const rectGeometry=bounds;const graphStyle=graphAttrMapper(graphAttrs2,graphContext);frameRect=makeMark("rect",{...pick(rectGeometry,["width","height"]),...graphStyle,stroke:"transparent"},{class:"dot__frame-bg"});parentInfo.mark.children.unshift(frameRect);}
const label=graphAttrs2.label;let labelHeight=0;if(label){const fontConfig=this.getFontConfig(graphContext);const labelPoint={x:bounds.left+bounds.width/2,y:bounds.bottom};labelHeight=calculateTextDimensions(label,fontConfig).height;const labelMark=makeTextAtPoint(label,labelPoint,{textBaseline:"hanging",...fontConfig,fill:conf6.labelTextColor,...graphLabelAttrMapper(graphAttrs2,graphContext)});parentInfo.mark.children.push(labelMark);}
return{labelHeight,frameRect};}
getFontConfig(styleContext){const fontsizeStr=styleContext===null||styleContext===void 0?void 0:styleContext.getValue("fontsize");return{fontSize:fontsizeStr&&parseFloat(fontsizeStr)||this.conf.fontSize,fontFamily:(styleContext===null||styleContext===void 0?void 0:styleContext.getValue("fontname"))||this.conf.fontFamily,fontWeight:this.conf.fontWeight};}};function zipTuple(arr1,arr2){const output=[];for(let i2=0;i2<arr1.length;i2++){if(i2<arr2.length){output.push([arr1[i2],arr2[i2]]);}}
return output;}
function makeAttrMapper(mapping){return(input,styleContext)=>{const attrs={};for(const[nodeKey,attrKey]of Object.entries(mapping)){const v=input[nodeKey]||(styleContext===null||styleContext===void 0?void 0:styleContext.getValue(nodeKey));if(v){attrs[attrKey]=v;}}
return attrs;};}
var NODE_ATTR_MAP={color:"stroke",bgcolor:"fill"};var nodeAttrMapper=makeAttrMapper(NODE_ATTR_MAP);function nodeAttrsToStyle(nodeAttrs,styleContext){const attrs=nodeAttrMapper(nodeAttrs,styleContext);return attrs;}
var NODE_LABEL_ATTR_MAP={fontcolor:"fill"};var nodeLabelAttrMapper=makeAttrMapper(NODE_LABEL_ATTR_MAP);function nodeAttrsToLabelStyle(nodeAttrs,styleContext){const attrs=nodeLabelAttrMapper(nodeAttrs,styleContext);return attrs;}
var nodeLayoutAttrMapper=makeAttrMapper({margint:"margint",marginb:"marginb",marginl:"marginl",marginr:"marginr"});var EDGE_ATTR_MAP={color:"stroke"};var edgeAttrMapper=makeAttrMapper(EDGE_ATTR_MAP);function edgeAttrsToStyle(edgeAttrs2,styleContext){const attrs=edgeAttrMapper(edgeAttrs2,styleContext);return attrs;}
var GRAPH_ATTR_MAP={color:"stroke",bgcolor:"fill"};var graphAttrMapper=makeAttrMapper(GRAPH_ATTR_MAP);var graphLabelAttrMapper=makeAttrMapper({...NODE_LABEL_ATTR_MAP});var ARROW_TYPE_MAP={normal:"triangle",box:"box",obox:"obox",dot:"dot",odot:"odot",open:"default",diamond:"diamond",ediamond:"ediamond"};var artist_default5=artist;var moo5=__toESM(require_moo());function id5(d){return d[0];}
var COLOR5=/#[a-zA-Z0-9]+/;var PARAM_DIRECTIVE5=/@param/;var CONFIG_DIRECTIVE6=/@config/;var L_PAREN5=/\(/;var R_PAREN5=/\)/;function getTokenValue5(token){if(token&&"value"in token)
return token.value;return token;}
function handleConfigOpenCloseStatement5(d){const text=d[2].map((v)=>{if(v.type)
return getTokenValue5(v);return v;}).join("");try{const v=JSON.parse(text);return{type:"overrideConfig",value:v};}catch(error){return{type:"overrideConfig",error};}}
var COMMENT_LINE5=/%%.*/;var COMMON_TOKEN_RULES2={VALID_TEXT:{match:VALID_TEXT_REGEXP,fallback:true}};var lexer5=moo5.states({main:{NL:MOO_NEWLINE,WS:{match:/[ \t]+/,lineBreaks:false},QUOTED_WORD:QUOTED_WORD_REGEXP,COLOR:COLOR_REGEXP,SEMICOLON:/;/,COLON:/:/,COMMA:/,/,DOT_DIAGRAM:/dotDiagram/,L_PAREN:L_PAREN_REGEXP,R_PAREN:R_PAREN_REGEXP,L_BRACKET:{match:/\{/},R_BRACKET:{match:/\}/},L_SQ_BRACKET:{match:/\[/},R_SQ_BRACKET:{match:/\]/},EQ:{match:/=/},SUBGRAPH:{match:/subgraph/},COMMENT_LINE:COMMENT_LINE_REGEXP,DOT_SLASH_COMMENT:/\/\/.*/,DOT_BLOCK_COMMENT_START:{match:/\/\*/,push:"blockComment"},...configLexerMainState,VALID_TEXT:{match:VALID_TEXT_REGEXP,fallback:true}},configStatement:{...configLexerconfigStatementState,...COMMON_TOKEN_RULES2},blockComment:{DOT_BLOCK_COMMENT_END:{match:/\*\//,pop:1},ANY_COMMENT_TEXT:{match:/(?:\s\w\d\n\r)+(?!\*\/)/,fallback:true}}});function rNull(){return null;}
var grammar5={Lexer:lexer5,ParserRules:[{"name":"_$ebnf$1","symbols":[]},{"name":"_$ebnf$1","symbols":["_$ebnf$1","wschar"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"_","symbols":["_$ebnf$1"],"postprocess":function(d){return null;}},{"name":"__$ebnf$1","symbols":["wschar"]},{"name":"__$ebnf$1","symbols":["__$ebnf$1","wschar"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"__","symbols":["__$ebnf$1"],"postprocess":function(d){return null;}},{"name":"wschar","symbols":[/[ \t\n\v\f\r]/],"postprocess":id5},{"name":"color","symbols":[COLOR5],"postprocess":(d)=>tv(d[0])},{"name":"paramStatement","symbols":[PARAM_DIRECTIVE5,"__","paramPart"],"postprocess":function(d){return d[2];}},{"name":"paramStatement$ebnf$1","symbols":[]},{"name":"paramStatement$ebnf$1$subexpression$1","symbols":[/[\n]/,"_","paramPart"]},{"name":"paramStatement$ebnf$1","symbols":["paramStatement$ebnf$1","paramStatement$ebnf$1$subexpression$1"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"paramStatement","symbols":[PARAM_DIRECTIVE5,"__",{"literal":"{"},"_","paramStatement$ebnf$1",/[\n]/,"_",{"literal":"}"}],"postprocess":function(d){const params=[];d[4].forEach((seg)=>{params.push(seg[2]);});return params;}},{"name":"paramPart$ebnf$1","symbols":[/[a-zA-Z0-9]/]},{"name":"paramPart$ebnf$1","symbols":["paramPart$ebnf$1",/[a-zA-Z0-9]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"paramPart$ebnf$2","symbols":[/[^ \n]/]},{"name":"paramPart$ebnf$2","symbols":["paramPart$ebnf$2",/[^ \n]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"paramPart","symbols":["paramPart$ebnf$1","__","paramPart$ebnf$2"],"postprocess":function(d){const key=d[0].map((v)=>tv(v)).join("");let value=d[2];if(typeof value!=="string")
value=value.map((v)=>tv(v)).join("");return{type:"addParam",key,value};}},{"name":"configStatement$ebnf$1","symbols":[/[^\)]/]},{"name":"configStatement$ebnf$1","symbols":["configStatement$ebnf$1",/[^\)]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"configStatement","symbols":[CONFIG_DIRECTIVE6,{"literal":"("},"configStatement$ebnf$1",{"literal":")"}],"postprocess":handleConfigOpenCloseStatement5},{"name":"configOpenCloseStatement$ebnf$1","symbols":[/[^\)]/]},{"name":"configOpenCloseStatement$ebnf$1","symbols":["configOpenCloseStatement$ebnf$1",/[^\)]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"configOpenCloseStatement","symbols":[CONFIG_DIRECTIVE6,L_PAREN5,"configOpenCloseStatement$ebnf$1",R_PAREN5],"postprocess":handleConfigOpenCloseStatement5},{"name":"comment","symbols":[COMMENT_LINE5],"postprocess":(d)=>null},{"name":"start","symbols":["__","start"],"postprocess":(d)=>d[1]},{"name":"start","symbols":[lexer5.has("DOT_DIAGRAM")?{type:"DOT_DIAGRAM"}:DOT_DIAGRAM,"document"],"postprocess":function(d){return d[1];}},{"name":"document","symbols":[]},{"name":"document","symbols":["document","statementWrap"],"postprocess":(d)=>{let r=d[0];if(d[1]){r=d[0].concat(d[1]);}
return r;}},{"name":"statementWrap$ebnf$1","symbols":[]},{"name":"statementWrap$ebnf$1","symbols":["statementWrap$ebnf$1",lexer5.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"statementWrap","symbols":["statementWrap$ebnf$1","statement"],"postprocess":(d)=>{return d[1];}},{"name":"statementWrap$ebnf$2","symbols":[lexer5.has("WS")?{type:"WS"}:WS],"postprocess":id5},{"name":"statementWrap$ebnf$2","symbols":[],"postprocess":()=>null},{"name":"statementWrap","symbols":["statementWrap$ebnf$2","dotCommentSegment",lexer5.has("NL")?{type:"NL"}:NL],"postprocess":null},{"name":"statementWrap$ebnf$3","symbols":[lexer5.has("WS")?{type:"WS"}:WS],"postprocess":id5},{"name":"statementWrap$ebnf$3","symbols":[],"postprocess":()=>null},{"name":"statementWrap","symbols":["statementWrap$ebnf$3",lexer5.has("NL")?{type:"NL"}:NL],"postprocess":null},{"name":"statement$subexpression$1","symbols":[{"literal":"graph"}]},{"name":"statement$subexpression$1","symbols":[{"literal":"digraph"}]},{"name":"statement$ebnf$1","symbols":[lexer5.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT],"postprocess":id5},{"name":"statement$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"statement$ebnf$2","symbols":[lexer5.has("NL")?{type:"NL"}:NL],"postprocess":id5},{"name":"statement$ebnf$2","symbols":[],"postprocess":()=>null},{"name":"statement","symbols":["statement$subexpression$1","statement$ebnf$1",lexer5.has("L_BRACKET")?{type:"L_BRACKET"}:L_BRACKET,"statement$ebnf$2","stmtList",lexer5.has("R_BRACKET")?{type:"R_BRACKET"}:R_BRACKET],"postprocess":function(d){const children=d[4];const id9=d[1]?tv(d[1]):"";const action={type:"addGraph",graph:{type:tv(d[0][0]),id:id9,children}};return action;}},{"name":"statement","symbols":["paramStatement",lexer5.has("NL")?{type:"NL"}:NL]},{"name":"statement","symbols":["configOpenCloseStatement",lexer5.has("NL")?{type:"NL"}:NL]},{"name":"statement","symbols":["comment",lexer5.has("NL")?{type:"NL"}:NL]},{"name":"dotCommentSegment","symbols":[lexer5.has("DOT_SLASH_COMMENT")?{type:"DOT_SLASH_COMMENT"}:DOT_SLASH_COMMENT],"postprocess":rNull},{"name":"dotCommentSegment$ebnf$1","symbols":[]},{"name":"dotCommentSegment$ebnf$1","symbols":["dotCommentSegment$ebnf$1",lexer5.has("ANY_COMMENT_TEXT")?{type:"ANY_COMMENT_TEXT"}:ANY_COMMENT_TEXT],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"dotCommentSegment","symbols":[lexer5.has("DOT_BLOCK_COMMENT_START")?{type:"DOT_BLOCK_COMMENT_START"}:DOT_BLOCK_COMMENT_START,"dotCommentSegment$ebnf$1",lexer5.has("DOT_BLOCK_COMMENT_END")?{type:"DOT_BLOCK_COMMENT_END"}:DOT_BLOCK_COMMENT_END],"postprocess":rNull},{"name":"stmtList$subexpression$1","symbols":[lexer5.has("SEMICOLON")?{type:"SEMICOLON"}:SEMICOLON]},{"name":"stmtList$subexpression$1","symbols":[lexer5.has("NL")?{type:"NL"}:NL]},{"name":"stmtList$ebnf$1","symbols":["stmtList"],"postprocess":id5},{"name":"stmtList$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"stmtList","symbols":["dotStmt","stmtList$subexpression$1","_","stmtList$ebnf$1"],"postprocess":function(d){const stmtList=d[3]||[];const stmt=d[0][0];if(!stmt)
return stmtList;return[stmt,...stmtList];}},{"name":"dotStmt","symbols":["attrStmt"]},{"name":"dotStmt","symbols":["nodeStmt"]},{"name":"dotStmt","symbols":["edgeStmt"]},{"name":"dotStmt","symbols":["singleAttrStmt"]},{"name":"dotStmt","symbols":["subgraph"]},{"name":"dotStmt","symbols":["dotCommentSegment"],"postprocess":null},{"name":"dotStmt","symbols":["comment"],"postprocess":null},{"name":"attrStmt$subexpression$1","symbols":[{"literal":"graph"}]},{"name":"attrStmt$subexpression$1","symbols":[{"literal":"node"}]},{"name":"attrStmt$subexpression$1","symbols":[{"literal":"edge"}]},{"name":"attrStmt","symbols":["attrStmt$subexpression$1","__","attrList"],"postprocess":function(d){const target=tv(d[0][0]);const attr_list=d[2];return{type:"attr_stmt",target,attr_list};}},{"name":"singleAttrStmt$subexpression$1","symbols":[lexer5.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{"name":"singleAttrStmt$subexpression$1","symbols":[lexer5.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD]},{"name":"singleAttrStmt$ebnf$1$subexpression$1","symbols":[lexer5.has("SEMICOLON")?{type:"SEMICOLON"}:SEMICOLON]},{"name":"singleAttrStmt$ebnf$1$subexpression$1","symbols":[lexer5.has("COMMA")?{type:"COMMA"}:COMMA]},{"name":"singleAttrStmt$ebnf$1","symbols":["singleAttrStmt$ebnf$1$subexpression$1"],"postprocess":id5},{"name":"singleAttrStmt$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"singleAttrStmt","symbols":[lexer5.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,lexer5.has("EQ")?{type:"EQ"}:EQ,"singleAttrStmt$subexpression$1","singleAttrStmt$ebnf$1"],"postprocess":function(d){const id9=tv(d[0]);const eqValToken=d[2][0];const eq4=eqValToken.type==="QUOTED_WORD"?getQuotedWord(eqValToken):tv(eqValToken);const attr={type:"attr",id:id9,eq:eq4};return attr;}},{"name":"nodeStmt$ebnf$1","symbols":["attrList"],"postprocess":id5},{"name":"nodeStmt$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"nodeStmt","symbols":["nodeId","nodeStmt$ebnf$1"],"postprocess":function(d){const nodeStmt={type:"node_stmt",nodeId:d[0]};if(d[1]){nodeStmt.attr_list=d[1];}
return nodeStmt;}},{"name":"nodeStmt","symbols":["nodeId",lexer5.has("L_SQ_BRACKET")?{type:"L_SQ_BRACKET"}:L_SQ_BRACKET,lexer5.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD,lexer5.has("R_SQ_BRACKET")?{type:"R_SQ_BRACKET"}:R_SQ_BRACKET],"postprocess":function(d){const nodeId=d[0];const label=getQuotedWord(d[2]);return{type:"node_stmt",nodeId:d[0],attrs:{label}};}},{"name":"nodeStmt","symbols":["nodeId"],"postprocess":function(d){const nodeId=d[0];return{type:"node_stmt",nodeId:d[0]};}},{"name":"edgeStmt$ebnf$1","symbols":["attrList"],"postprocess":id5},{"name":"edgeStmt$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"edgeStmt","symbols":["nodeId","edgeRHS","edgeStmt$ebnf$1"],"postprocess":function(d){const startNode=d[0];const edge_list=[startNode,...d[1]];const edgeStmt={type:"edge_stmt",edge_list};if(d[2]){edgeStmt.attr_list=d[2];}
return edgeStmt;}},{"name":"edgeRHS$ebnf$1","symbols":[lexer5.has("WS")?{type:"WS"}:WS],"postprocess":id5},{"name":"edgeRHS$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"edgeRHS$ebnf$2","symbols":["edgeRHS"],"postprocess":id5},{"name":"edgeRHS$ebnf$2","symbols":[],"postprocess":()=>null},{"name":"edgeRHS","symbols":["edgeop","edgeRHS$ebnf$1","nodeId","edgeRHS$ebnf$2"],"postprocess":function(d){const edgeList=d[3]||[];const edge=d[2];return[edge,...edgeList];}},{"name":"edgeop","symbols":[{"literal":"->"}]},{"name":"edgeop","symbols":[{"literal":"--"}]},{"name":"attrList$ebnf$1","symbols":["attrList"],"postprocess":id5},{"name":"attrList$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"attrList","symbols":[lexer5.has("L_SQ_BRACKET")?{type:"L_SQ_BRACKET"}:L_SQ_BRACKET,"attrItems",lexer5.has("R_SQ_BRACKET")?{type:"R_SQ_BRACKET"}:R_SQ_BRACKET,"attrList$ebnf$1"],"postprocess":function(d){const attrList=d[3]?d[3][0]:[];const attrItems=d[1];return d[1];}},{"name":"attrItems$subexpression$1","symbols":[lexer5.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{"name":"attrItems$subexpression$1","symbols":[lexer5.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD]},{"name":"attrItems$ebnf$1$subexpression$1","symbols":[lexer5.has("SEMICOLON")?{type:"SEMICOLON"}:SEMICOLON]},{"name":"attrItems$ebnf$1$subexpression$1","symbols":[lexer5.has("COMMA")?{type:"COMMA"}:COMMA]},{"name":"attrItems$ebnf$1","symbols":["attrItems$ebnf$1$subexpression$1"],"postprocess":id5},{"name":"attrItems$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"attrItems$ebnf$2","symbols":["attrItems"],"postprocess":id5},{"name":"attrItems$ebnf$2","symbols":[],"postprocess":()=>null},{"name":"attrItems","symbols":[lexer5.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,lexer5.has("EQ")?{type:"EQ"}:EQ,"attrItems$subexpression$1","attrItems$ebnf$1","attrItems$ebnf$2"],"postprocess":function(d){const attrItems=d[4]?d[4]:[];const id9=tv(d[0]);const eqValToken=d[2][0];const eq4=eqValToken.type==="QUOTED_WORD"?getQuotedWord(eqValToken):tv(eqValToken);const attr={type:"attr",id:id9,eq:eq4};return[attr,...attrItems];}},{"name":"nodeId","symbols":[lexer5.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD],"postprocess":function(d){return{type:"node_id",id:getQuotedWord(d[0]).trim()};}},{"name":"nodeId","symbols":[lexer5.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT],"postprocess":function(d){return{type:"node_id",id:tv(d[0]).trim()};}},{"name":"subgraph$ebnf$1","symbols":[lexer5.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT],"postprocess":id5},{"name":"subgraph$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"subgraph","symbols":[lexer5.has("SUBGRAPH")?{type:"SUBGRAPH"}:SUBGRAPH,"subgraph$ebnf$1",lexer5.has("L_BRACKET")?{type:"L_BRACKET"}:L_BRACKET,"_","stmtList","_",lexer5.has("R_BRACKET")?{type:"R_BRACKET"}:R_BRACKET],"postprocess":function(d){const children=d[4];const subgraph={type:"subgraph",children};if(d[1]){subgraph.id=tv(d[1]).trim();}
return subgraph;}}],ParserStart:"start",ParserOptions:{skipUnmatchSymbols:[lexer5.has("WS")?{type:"WS"}:WS]}};var dotDiagram_default=grammar5;var parse5=genParserWithRules(dotDiagram_default,{dedupeAmbigousResults:true,postProcess(results){db_default4.apply(results);return results;}});var dotDiagram={pattern:/^\s*dotDiagram/,parser:{parse(text){parse5(text);return db_default4.getDiagramIR();}},artist:artist_default5,configKey:"dot",clear(){db_default4.clear();}};var MMTree=class _MMTree{constructor(){this.nodes=new Map();}
static fromRootItem(item){const tree=new _MMTree();tree.root=tree.addItemToNode({...item,parent:null});tree.current=tree.root;return tree;}
add(item){let cur=this.current;while(cur&&Math.abs(cur.depth)>=Math.abs(item.depth)){if(cur.id===this.root.id)
break;if(cur.parent){cur=this.nodes.get(cur.parent);continue;}
break;}
if(!cur){cur=this.root;}
if(cur===this.root||Math.abs(cur.depth)<Math.abs(item.depth)){const newNode=this.addItemToNode(item);this.addChild(cur,newNode);this.current=newNode;}}
getNode(id9){return this.nodes.get(id9);}
addChild(parent,child){parent.children.push(child.id);child.parent=parent.id;}
addItemToNode(item){if(!item.children)
item.children=[];this.nodes.set(item.id,item);return item;}
serialize(){const data={root:this.root.id,nodes:{[this.root.id]:this.root}};const visitor=(c)=>{data.nodes[c.id]=c;};this.walkTree(this.root,visitor);return data;}
walkTree(node2,visitor){visitor(node2);node2.children.forEach((child)=>{const childNode=this.nodes.get(child);if(childNode){this.walkTree(childNode,visitor);}});}};var MindmapDb=class extends BaseDb{constructor(){super(...arguments);this.items=[];this.trees=[];this.idCounter=makeIdCounter();this.treeMap=new WeakMap();}
makeId(){return this.idCounter.next();}
getDiagramIR(){return{...this.getBaseDiagramIR(),trees:this.trees.map((tree)=>{const data=tree.serialize();this.treeMap.set(data,tree);return data;})};}
addItem(item){if(!this.currentTree||item.depth===1){this.currentTree=MMTree.fromRootItem(item);this.trees.push(this.currentTree);}else{this.currentTree.add(item);}}
apply(part){if(!part)
return;if(Array.isArray(part)){return part.map((c)=>this.apply(c));}
switch(part.type){case"addItem":{const{type,...data}=part;this.addItem({...data,id:this.makeId(),isReverse:Boolean(part.isReverse),children:[]});break;}
case"addParam":{this.configParams.push(part);break;}
case"setTitle":{this.title=part.text;break;}
case"overrideConfig":{this.addOverrideConfig(part);break;}}}
getTreeByData(data){return this.treeMap.get(data);}
clear(){super.clear();this.idCounter.reset();this.trees=[];this.items=[];this.currentTree=null;}};var db6=new MindmapDb();var db_default5=db6;function getColorsByPrimary(c,isDark=false){const primaryColor=(0,import_tinycolor2.default)(c);const hslColor=primaryColor.toHsl();let primaryLight1;if(isDark){primaryLight1=primaryColor.clone().brighten(15);}else{primaryLight1=primaryColor.clone().brighten(15);}
const primaryLight2=(0,import_tinycolor2.default)({h:hslColor.h,s:20,l:90});return{nodeBgColor:primaryLight2.toHexString(),l1NodeBgColor:c,l2NodeBgColor:primaryLight1.toHexString()};}
var DEFAULT_COLORS=getColorsByPrimary(PALETTE.orange);var defaultConfig6={diagramPadding:15,layoutDirection:"LR",useMaxWidth:false,borderRadius:4,nodeBgColor:DEFAULT_COLORS.nodeBgColor,nodePadding:10,nodeFontWeight:"normal",textColor:PALETTE.normalDark,edgeColor:PALETTE.normalDark,fontFamily:DEFAULT_FONT_FAMILY,maxFontSize:18,minFontSize:12,levelDistance:40,l1NodeBgColor:DEFAULT_COLORS.l1NodeBgColor,l1NodeTextColor:PALETTE.normalDark,l2NodeBgColor:DEFAULT_COLORS.l2NodeBgColor,l2NodeTextColor:PALETTE.normalDark};var MINDMAP_PARAM_DIRECTIVE_RULES={...getParamRulesFromConfig(defaultConfig6),useMaxWidth:{valueType:"boolean"},diagramPadding:{valueType:"size"},layoutDirection:{valueType:"layoutDirection"},borderRadius:{valueType:"size"},nodeBgColor:{valueType:"color"},nodePadding:{valueType:"size"},textColor:{valueType:"color"},edgeColor:{valueType:"color"},maxFontSize:{valueType:"size"},minFontSize:{valueType:"size"},fontFamily:{valueType:"string"},levelDistance:{valueType:"size"},l1NodeBgColor:{valueType:"color"},l1NodeTextColor:{valueType:"color"},l2NodeBgColor:{valueType:"color"},l2NodeTextColor:{valueType:"color"}};var configKey6="mindmap";var configurator6=makeConfigurator({defaultConfig:defaultConfig6,configKey:configKey6,getConfigFromParamDirectives(configParams){return interpreteConfigs(MINDMAP_PARAM_DIRECTIVE_RULES,configParams);},getConfigFromTheme(t){const{nodeBgColor,l1NodeBgColor,l2NodeBgColor}=getColorsByPrimary(t.primaryColor,t.isDark);const nodeBgColorInstance=(0,import_tinycolor2.default)(nodeBgColor);const bgIsLight=nodeBgColorInstance.isLight();const textColorIsLight=(0,import_tinycolor2.default)(t.textColor).isLight();const normalNodeTextColor=bgIsLight!==textColorIsLight?t.textColor:t.canvasBackground;return{nodeBgColor,textColor:normalNodeTextColor,edgeColor:t.primaryLineColor,l1NodeBgColor,l1NodeTextColor:t.textColor,l2NodeBgColor,l2NodeTextColor:t.textColor};}});var getConf6=configurator6.getConfig;var conf5;var mmDraw;var mmArtist={draw(ir,config2,opts){conf5=Object.assign(getConf6(ir),config2||{});mmDraw=new MMDraw(ir);if(isDev){;window.mmDraw=mmDraw;}
const rootMark={type:"group",attrs:{},children:[]};mmDraw.drawTo(rootMark);const bounds=mmDraw.dagreWrapper.getGraphBounds();const{title}=ir;let titleSize=void 0;let titleMark=void 0;if(title){const titleFont={fontSize:conf5.maxFontSize,fontFamily:conf5.fontFamily};const titleResult=makeTitleMark(title,titleFont,{fill:conf5.textColor});titleSize=titleResult.titleSize;titleMark=titleResult.mark;titleMark.class="mindmap__title";rootMark.children.push(titleMark);titleSize.height+=conf5.maxFontSize;}
const{width:width2,height}=adjustRootMarkBounds({rootMark,gBounds:bounds,padX:conf5.diagramPadding,padY:conf5.diagramPadding,useMaxWidth:conf5.useMaxWidth,containerSize:opts===null||opts===void 0?void 0:opts.containerSize,titleSize,titleMark});return{width:width2,height,mark:rootMark};}};var MMDraw=class{constructor(ir){this.ir=ir;this.trees=ir.trees.map((data)=>{return db_default5.getTreeByData(data);});this.g=createLayoutGraph({multigraph:true,directed:true,compound:true}).setGraph({rankdir:conf5.layoutDirection,nodesep:30,edgesep:30,ranksep:conf5.levelDistance}).setDefaultEdgeLabel(function(){return{};});this.dagreWrapper=new DagreWrapper(this.g);}
drawTo(rootMark){this.trees.map((tree)=>this.drawTree(rootMark,tree));this.dagreWrapper.doLayout();this.dagreWrapper.callNodeOnLayout();this.drawEdgesTo(rootMark);}
drawTree(rootMark,tree){tree.walkTree(tree.root,(node2)=>{this.drawNode(rootMark,tree,node2);});}
getNodeStyleOfLevel(level){const bgColor=conf5[`l${level}NodeBgColor`]||conf5.nodeBgColor;const textColor=conf5[`l${level}NodeTextColor`]||conf5.textColor;return{bgColor,textColor};}
drawNode(rootMark,tree,node2){const fontSize2=Math.max(conf5.minFontSize,conf5.maxFontSize-(node2.depth-1)*2);const fontConfig=getFontConfig4(conf5,{fontSize:fontSize2,fontWeight:conf5.nodeFontWeight});const labelDim=calculateTextDimensions(node2.label,fontConfig);const group=makeEmptyGroup();group.class="mindmap__node";const padding=Math.ceil(fontSize2*0.75);const rectWidth=labelDim.width+padding*2;const rectHeight=labelDim.height+padding*2;const nodeStyle=this.getNodeStyleOfLevel(node2.depth);const bgMark=makeMark("rect",{x:-rectWidth/2,y:-rectHeight/2,width:rectWidth,height:rectHeight,fill:nodeStyle.bgColor,radius:conf5.borderRadius});const textMark=makeMark("text",{text:node2.label,fill:nodeStyle.textColor,textBaseline:"middle",textAlign:"center",...fontConfig});group.children.push(bgMark,textMark);this.g.setNode(node2.id,{width:rectWidth,height:rectHeight,onLayout(data){positionGroupContents(group,data);}});node2.children.forEach((childId)=>{const childNode=tree.getNode(childId);if(childNode.isReverse){this.g.setEdge(childId,node2.id,{label:`${childNode.label}-${node2.label}`,isReverse:true});}else{this.g.setEdge(node2.id,childId,{label:`${node2.label}-${node2.label}`});}});rootMark.children.push(group);}
drawEdgesTo(rootMark){const edgeGroup=makeEmptyGroup();const g=this.g;this.g.edges().forEach((e)=>{const edge=g.edge(e);if(!edge.points)
return;const isVertical=isGraphVertical(g);const fromNode=g.node(e.v);const toNode=g.node(e.w);let fromOutPoint;let toInPoint;const{isReverse}=edge;if(isVertical){fromOutPoint=getPositionOfRect(TRANSFORM_GRAPH.graphNodeToRectStart(isReverse?toNode:fromNode),PositionH.CENTER|(isReverse?PositionV.TOP:PositionV.BOTTOM));toInPoint=getPositionOfRect(TRANSFORM_GRAPH.graphNodeToRectStart(isReverse?fromNode:toNode),PositionH.CENTER|(isReverse?PositionV.BOTTOM:PositionV.TOP));}else{fromOutPoint=getPositionOfRect(TRANSFORM_GRAPH.graphNodeToRectStart(isReverse?toNode:fromNode),(isReverse?PositionH.LEFT:PositionH.RIGHT)|PositionV.CENTER);toInPoint=getPositionOfRect(TRANSFORM_GRAPH.graphNodeToRectStart(isReverse?fromNode:toNode),(isReverse?PositionH.RIGHT:PositionH.LEFT)|PositionV.CENTER);}
const nextLevelIds=isReverse?g.predecessors(e.w):g.successors(e.v);const nextLevelBounds=nextLevelIds.reduce((acc,id9)=>{const nodeData=TRANSFORM_GRAPH.graphNodeToRectStart(g.node(id9));if(nodeData.x<acc.left)
acc.left=nodeData.x;const right=nodeData.x+nodeData.width;if(right>acc.right)
acc.right=right;acc.top=Math.min(nodeData.y,acc.top);acc.bottom=Math.max(nodeData.y+nodeData.height,acc.bottom);return acc;},makeBounds());let newPoints;if(isVertical){const middleY=isReverse?(fromOutPoint.y+nextLevelBounds.bottom)/2:(fromOutPoint.y+nextLevelBounds.top)/2;newPoints=[fromOutPoint,{x:fromOutPoint.x,y:middleY},{x:toInPoint.x,y:middleY},toInPoint];}else{const middleX=isReverse?(fromOutPoint.x+nextLevelBounds.right)/2:(fromOutPoint.x+nextLevelBounds.left)/2;newPoints=[fromOutPoint,{x:middleX,y:fromOutPoint.y},{x:middleX,y:toInPoint.y},toInPoint];}
const path4=getPointsLinearPath(newPoints);const linePath=makeMark("path",{path:path4,stroke:conf5.edgeColor,lineJoin:"round"});edgeGroup.children.push(linePath);});rootMark.children.push(edgeGroup);}};function getFontConfig4(conf6,f){return{fontFamily:conf6.fontFamily,...f};}
var artist_default6=mmArtist;var moo6=__toESM(require_moo());function id6(d){return d[0];}
var COLOR6=/#[a-zA-Z0-9]+/;var PARAM_DIRECTIVE6=/@param/;var CONFIG_DIRECTIVE7=/@config/;var L_PAREN6=/\(/;var R_PAREN6=/\)/;function getTokenValue6(token){if(token&&"value"in token)
return token.value;return token;}
function handleConfigOpenCloseStatement6(d){const text=d[2].map((v)=>{if(v.type)
return getTokenValue6(v);return v;}).join("");try{const v=JSON.parse(text);return{type:"overrideConfig",value:v};}catch(error){return{type:"overrideConfig",error};}}
var COMMENT_LINE6=/%%.*/;var COMMON_TOKEN_RULES3={VALID_TEXT:{match:VALID_TEXT_REGEXP,fallback:true}};var lexer6=moo6.states({main:{NL:MOO_NEWLINE,WS:{match:/ +/,lineBreaks:false},ASTERISKS:/\*+/,PLUS:/\++/,MINUS:/\-+/,SEMICOLON:/;/,COLON:/:/,PARAM_DIRECTIVE:PARAM_DIRECTIVE6,...configLexerMainState,L_PAREN:L_PAREN_REGEXP,R_PAREN:R_PAREN_REGEXP,COMMENT_LINE:COMMENT_LINE_REGEXP,...COMMON_TOKEN_RULES3},configStatement:{...configLexerconfigStatementState,...COMMON_TOKEN_RULES3}});var yy5;function setYY5(v){yy5=v;}
var grammar6={Lexer:lexer6,ParserRules:[{"name":"_$ebnf$1","symbols":[]},{"name":"_$ebnf$1","symbols":["_$ebnf$1","wschar"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"_","symbols":["_$ebnf$1"],"postprocess":function(d){return null;}},{"name":"__$ebnf$1","symbols":["wschar"]},{"name":"__$ebnf$1","symbols":["__$ebnf$1","wschar"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"__","symbols":["__$ebnf$1"],"postprocess":function(d){return null;}},{"name":"wschar","symbols":[/[ \t\n\v\f\r]/],"postprocess":id6},{"name":"color","symbols":[COLOR6],"postprocess":(d)=>tv(d[0])},{"name":"paramStatement","symbols":[PARAM_DIRECTIVE6,"__","paramPart"],"postprocess":function(d){return d[2];}},{"name":"paramStatement$ebnf$1","symbols":[]},{"name":"paramStatement$ebnf$1$subexpression$1","symbols":[/[\n]/,"_","paramPart"]},{"name":"paramStatement$ebnf$1","symbols":["paramStatement$ebnf$1","paramStatement$ebnf$1$subexpression$1"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"paramStatement","symbols":[PARAM_DIRECTIVE6,"__",{"literal":"{"},"_","paramStatement$ebnf$1",/[\n]/,"_",{"literal":"}"}],"postprocess":function(d){const params=[];d[4].forEach((seg)=>{params.push(seg[2]);});return params;}},{"name":"paramPart$ebnf$1","symbols":[/[a-zA-Z0-9]/]},{"name":"paramPart$ebnf$1","symbols":["paramPart$ebnf$1",/[a-zA-Z0-9]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"paramPart$ebnf$2","symbols":[/[^ \n]/]},{"name":"paramPart$ebnf$2","symbols":["paramPart$ebnf$2",/[^ \n]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"paramPart","symbols":["paramPart$ebnf$1","__","paramPart$ebnf$2"],"postprocess":function(d){const key=d[0].map((v)=>tv(v)).join("");let value=d[2];if(typeof value!=="string")
value=value.map((v)=>tv(v)).join("");return{type:"addParam",key,value};}},{"name":"configStatement$ebnf$1","symbols":[/[^\)]/]},{"name":"configStatement$ebnf$1","symbols":["configStatement$ebnf$1",/[^\)]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"configStatement","symbols":[CONFIG_DIRECTIVE7,{"literal":"("},"configStatement$ebnf$1",{"literal":")"}],"postprocess":handleConfigOpenCloseStatement6},{"name":"configOpenCloseStatement$ebnf$1","symbols":[/[^\)]/]},{"name":"configOpenCloseStatement$ebnf$1","symbols":["configOpenCloseStatement$ebnf$1",/[^\)]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"configOpenCloseStatement","symbols":[CONFIG_DIRECTIVE7,L_PAREN6,"configOpenCloseStatement$ebnf$1",R_PAREN6],"postprocess":handleConfigOpenCloseStatement6},{"name":"comment","symbols":[COMMENT_LINE6],"postprocess":(d)=>null},{"name":"start","symbols":["__","start"]},{"name":"start","symbols":[{"literal":"mindmap"},"document"]},{"name":"document","symbols":[]},{"name":"document","symbols":["document","line"],"postprocess":(d)=>{const r=d[0].concat(d[1]);return r;}},{"name":"line$ebnf$1","symbols":[]},{"name":"line$ebnf$1","symbols":["line$ebnf$1",lexer6.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"line","symbols":["line$ebnf$1","statement"]},{"name":"line$ebnf$2","symbols":[]},{"name":"line$ebnf$2","symbols":["line$ebnf$2",lexer6.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"line","symbols":["line$ebnf$2",lexer6.has("NL")?{type:"NL"}:NL]},{"name":"statement","symbols":["levelNotation",lexer6.has("WS")?{type:"WS"}:WS,"words",lexer6.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const label=d[2];const notation=d[0];return{type:"addItem",label,depth:d[0].depth,isReverse:notation.isReverse};}},{"name":"statement$ebnf$1","symbols":[lexer6.has("WS")?{type:"WS"}:WS],"postprocess":id6},{"name":"statement$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"statement","symbols":["levelNotation",lexer6.has("WS")?{type:"WS"}:WS,lexer6.has("COLON")?{type:"COLON"}:COLON,"multilineText",lexer6.has("SEMICOLON")?{type:"SEMICOLON"}:SEMICOLON,"statement$ebnf$1",lexer6.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const label=d[3];const notation=d[0];return{type:"addItem",label,depth:notation.depth,isReverse:notation.isReverse};}},{"name":"statement","symbols":["paramStatement","_",lexer6.has("NL")?{type:"NL"}:NL]},{"name":"statement","symbols":["configOpenCloseStatement","_",lexer6.has("NL")?{type:"NL"}:NL]},{"name":"statement","symbols":[{"literal":"title"},lexer6.has("COLON")?{type:"COLON"}:COLON,"words",lexer6.has("NL")?{type:"NL"}:NL],"postprocess":(d)=>({type:"setTitle",text:d[2].trim()})},{"name":"statement","symbols":["comment","_",lexer6.has("NL")?{type:"NL"}:NL]},{"name":"levelNotation$subexpression$1","symbols":[lexer6.has("ASTERISKS")?{type:"ASTERISKS"}:ASTERISKS]},{"name":"levelNotation$subexpression$1","symbols":[lexer6.has("PLUS")?{type:"PLUS"}:PLUS]},{"name":"levelNotation","symbols":["levelNotation$subexpression$1"],"postprocess":function(d){const text=tv(d[0][0]);return{depth:text.length,text};}},{"name":"levelNotation","symbols":[lexer6.has("MINUS")?{type:"MINUS"}:MINUS],"postprocess":function(d){const text=tv(d[0]);return{depth:text.length,text,isReverse:true};}},{"name":"textSegment","symbols":[lexer6.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{"name":"textSegment","symbols":[lexer6.has("ASTERISKS")?{type:"ASTERISKS"}:ASTERISKS]},{"name":"textSegment","symbols":[lexer6.has("PLUS")?{type:"PLUS"}:PLUS]},{"name":"textSegment","symbols":[lexer6.has("MINUS")?{type:"MINUS"}:MINUS]},{"name":"textSegment","symbols":[lexer6.has("WS")?{type:"WS"}:WS],"postprocess":function(d){const c=d[0];return typeof c==="string"?c:tv(c);}},{"name":"words$ebnf$1","symbols":["textSegment"]},{"name":"words$ebnf$1","symbols":["words$ebnf$1","textSegment"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"words","symbols":["words$ebnf$1"],"postprocess":function(d){const v=d[0].map((o)=>o[0]).join("");return v;}},{"name":"multilineText$ebnf$1","symbols":[]},{"name":"multilineText$ebnf$1$subexpression$1","symbols":["textSegment"]},{"name":"multilineText$ebnf$1$subexpression$1","symbols":[lexer6.has("NL")?{type:"NL"}:NL]},{"name":"multilineText$ebnf$1","symbols":["multilineText$ebnf$1","multilineText$ebnf$1$subexpression$1"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"multilineText","symbols":["multilineText$ebnf$1"],"postprocess":function(d){const v=d[0].map((l)=>{return l.map((o)=>typeof o==="string"?o:tv(o));}).join("");return v;}}],ParserStart:"start",ParserOptions:{skipUnmatchSymbols:[]}};var mindmap_default=grammar6;setYY5(db_default5);var parse6=genParserWithRules(mindmap_default,{postProcess(results){db_default5.apply(results);return results;}});var mindmap={pattern:/^\s*mindmap/,parser:{parse(text){parse6(text);return db_default5.getDiagramIR();}},artist:artist_default6,configKey:configKey6,clear(){db_default5.clear();}};var import_dayjs=__toESM(require_dayjs_min());var t0=new Date();var t1=new Date();function newInterval(floori,offseti,count,field){function interval2(date2){return floori(date2=arguments.length===0?new Date():new Date(+date2)),date2;}
interval2.floor=function(date2){return floori(date2=new Date(+date2)),date2;};interval2.ceil=function(date2){return floori(date2=new Date(date2-1)),offseti(date2,1),floori(date2),date2;};interval2.round=function(date2){var d0=interval2(date2),d1=interval2.ceil(date2);return date2-d0<d1-date2?d0:d1;};interval2.offset=function(date2,step){return offseti(date2=new Date(+date2),step==null?1:Math.floor(step)),date2;};interval2.range=function(start,stop,step){var range2=[],previous;start=interval2.ceil(start);step=step==null?1:Math.floor(step);if(!(start<stop)||!(step>0))
return range2;do
range2.push(previous=new Date(+start)),offseti(start,step),floori(start);while(previous<start&&start<stop);return range2;};interval2.filter=function(test){return newInterval(function(date2){if(date2>=date2)
while(floori(date2),!test(date2))
date2.setTime(date2-1);},function(date2,step){if(date2>=date2){if(step<0)
while(++step<=0){while(offseti(date2,-1),!test(date2)){}}
else
while(--step>=0){while(offseti(date2,1),!test(date2)){}}}});};if(count){interval2.count=function(start,end){t0.setTime(+start),t1.setTime(+end);floori(t0),floori(t1);return Math.floor(count(t0,t1));};interval2.every=function(step){step=Math.floor(step);return!isFinite(step)||!(step>0)?null:!(step>1)?interval2:interval2.filter(field?function(d){return field(d)%step===0;}:function(d){return interval2.count(0,d)%step===0;});};}
return interval2;}
var millisecond=newInterval(function(){},function(date2,step){date2.setTime(+date2+step);},function(start,end){return end-start;});millisecond.every=function(k){k=Math.floor(k);if(!isFinite(k)||!(k>0))
return null;if(!(k>1))
return millisecond;return newInterval(function(date2){date2.setTime(Math.floor(date2/k)*k);},function(date2,step){date2.setTime(+date2+step*k);},function(start,end){return(end-start)/k;});};var millisecond_default=millisecond;var milliseconds=millisecond.range;var durationSecond=1e3;var durationMinute=durationSecond*60;var durationHour=durationMinute*60;var durationDay=durationHour*24;var durationWeek=durationDay*7;var durationMonth=durationDay*30;var durationYear=durationDay*365;var second=newInterval(function(date2){date2.setTime(date2-date2.getMilliseconds());},function(date2,step){date2.setTime(+date2+step*durationSecond);},function(start,end){return(end-start)/durationSecond;},function(date2){return date2.getUTCSeconds();});var second_default=second;var seconds=second.range;var minute=newInterval(function(date2){date2.setTime(date2-date2.getMilliseconds()-date2.getSeconds()*durationSecond);},function(date2,step){date2.setTime(+date2+step*durationMinute);},function(start,end){return(end-start)/durationMinute;},function(date2){return date2.getMinutes();});var minute_default=minute;var minutes=minute.range;var hour=newInterval(function(date2){date2.setTime(date2-date2.getMilliseconds()-date2.getSeconds()*durationSecond-date2.getMinutes()*durationMinute);},function(date2,step){date2.setTime(+date2+step*durationHour);},function(start,end){return(end-start)/durationHour;},function(date2){return date2.getHours();});var hour_default=hour;var hours=hour.range;var day=newInterval((date2)=>date2.setHours(0,0,0,0),(date2,step)=>date2.setDate(date2.getDate()+step),(start,end)=>(end-start-(end.getTimezoneOffset()-start.getTimezoneOffset())*durationMinute)/durationDay,(date2)=>date2.getDate()-1);var day_default=day;var days=day.range;function weekday(i2){return newInterval(function(date2){date2.setDate(date2.getDate()-(date2.getDay()+7-i2)%7);date2.setHours(0,0,0,0);},function(date2,step){date2.setDate(date2.getDate()+step*7);},function(start,end){return(end-start-(end.getTimezoneOffset()-start.getTimezoneOffset())*durationMinute)/durationWeek;});}
var sunday=weekday(0);var monday=weekday(1);var tuesday=weekday(2);var wednesday=weekday(3);var thursday=weekday(4);var friday=weekday(5);var saturday=weekday(6);var sundays=sunday.range;var mondays=monday.range;var tuesdays=tuesday.range;var wednesdays=wednesday.range;var thursdays=thursday.range;var fridays=friday.range;var saturdays=saturday.range;var month=newInterval(function(date2){date2.setDate(1);date2.setHours(0,0,0,0);},function(date2,step){date2.setMonth(date2.getMonth()+step);},function(start,end){return end.getMonth()-start.getMonth()+(end.getFullYear()-start.getFullYear())*12;},function(date2){return date2.getMonth();});var month_default=month;var months=month.range;var year=newInterval(function(date2){date2.setMonth(0,1);date2.setHours(0,0,0,0);},function(date2,step){date2.setFullYear(date2.getFullYear()+step);},function(start,end){return end.getFullYear()-start.getFullYear();},function(date2){return date2.getFullYear();});year.every=function(k){return!isFinite(k=Math.floor(k))||!(k>0)?null:newInterval(function(date2){date2.setFullYear(Math.floor(date2.getFullYear()/k)*k);date2.setMonth(0,1);date2.setHours(0,0,0,0);},function(date2,step){date2.setFullYear(date2.getFullYear()+step*k);});};var year_default=year;var years=year.range;var utcMinute=newInterval(function(date2){date2.setUTCSeconds(0,0);},function(date2,step){date2.setTime(+date2+step*durationMinute);},function(start,end){return(end-start)/durationMinute;},function(date2){return date2.getUTCMinutes();});var utcMinute_default=utcMinute;var utcMinutes=utcMinute.range;var utcHour=newInterval(function(date2){date2.setUTCMinutes(0,0,0);},function(date2,step){date2.setTime(+date2+step*durationHour);},function(start,end){return(end-start)/durationHour;},function(date2){return date2.getUTCHours();});var utcHour_default=utcHour;var utcHours=utcHour.range;var utcDay=newInterval(function(date2){date2.setUTCHours(0,0,0,0);},function(date2,step){date2.setUTCDate(date2.getUTCDate()+step);},function(start,end){return(end-start)/durationDay;},function(date2){return date2.getUTCDate()-1;});var utcDay_default=utcDay;var utcDays=utcDay.range;function utcWeekday(i2){return newInterval(function(date2){date2.setUTCDate(date2.getUTCDate()-(date2.getUTCDay()+7-i2)%7);date2.setUTCHours(0,0,0,0);},function(date2,step){date2.setUTCDate(date2.getUTCDate()+step*7);},function(start,end){return(end-start)/durationWeek;});}
var utcSunday=utcWeekday(0);var utcMonday=utcWeekday(1);var utcTuesday=utcWeekday(2);var utcWednesday=utcWeekday(3);var utcThursday=utcWeekday(4);var utcFriday=utcWeekday(5);var utcSaturday=utcWeekday(6);var utcSundays=utcSunday.range;var utcMondays=utcMonday.range;var utcTuesdays=utcTuesday.range;var utcWednesdays=utcWednesday.range;var utcThursdays=utcThursday.range;var utcFridays=utcFriday.range;var utcSaturdays=utcSaturday.range;var utcMonth=newInterval(function(date2){date2.setUTCDate(1);date2.setUTCHours(0,0,0,0);},function(date2,step){date2.setUTCMonth(date2.getUTCMonth()+step);},function(start,end){return end.getUTCMonth()-start.getUTCMonth()+(end.getUTCFullYear()-start.getUTCFullYear())*12;},function(date2){return date2.getUTCMonth();});var utcMonth_default=utcMonth;var utcMonths=utcMonth.range;var utcYear=newInterval(function(date2){date2.setUTCMonth(0,1);date2.setUTCHours(0,0,0,0);},function(date2,step){date2.setUTCFullYear(date2.getUTCFullYear()+step);},function(start,end){return end.getUTCFullYear()-start.getUTCFullYear();},function(date2){return date2.getUTCFullYear();});utcYear.every=function(k){return!isFinite(k=Math.floor(k))||!(k>0)?null:newInterval(function(date2){date2.setUTCFullYear(Math.floor(date2.getUTCFullYear()/k)*k);date2.setUTCMonth(0,1);date2.setUTCHours(0,0,0,0);},function(date2,step){date2.setUTCFullYear(date2.getUTCFullYear()+step*k);});};var utcYear_default=utcYear;var utcYears=utcYear.range;function ascending(a,b10){return a==null||b10==null?NaN:a<b10?-1:a>b10?1:a>=b10?0:NaN;}
function bisector(f){let delta=f;let compare1=f;let compare2=f;if(f.length!==2){delta=(d,x2)=>f(d)-x2;compare1=ascending;compare2=(d,x2)=>ascending(f(d),x2);}
function left(a,x2,lo=0,hi=a.length){if(lo<hi){if(compare1(x2,x2)!==0)
return hi;do{const mid=lo+hi>>>1;if(compare2(a[mid],x2)<0)
lo=mid+1;else
hi=mid;}while(lo<hi);}
return lo;}
function right(a,x2,lo=0,hi=a.length){if(lo<hi){if(compare1(x2,x2)!==0)
return hi;do{const mid=lo+hi>>>1;if(compare2(a[mid],x2)<=0)
lo=mid+1;else
hi=mid;}while(lo<hi);}
return lo;}
function center(a,x2,lo=0,hi=a.length){const i2=left(a,x2,lo,hi-1);return i2>lo&&delta(a[i2-1],x2)>-delta(a[i2],x2)?i2-1:i2;}
return{left,center,right};}
function number(x2){return x2===null?NaN:+x2;}
var ascendingBisect=bisector(ascending);var bisectRight=ascendingBisect.right;var bisectLeft=ascendingBisect.left;var bisectCenter=bisector(number).center;var bisect_default=bisectRight;var e10=Math.sqrt(50);var e5=Math.sqrt(10);var e2=Math.sqrt(2);function tickStep(start,stop,count){var step0=Math.abs(stop-start)/Math.max(0,count),step1=Math.pow(10,Math.floor(Math.log(step0)/Math.LN10)),error=step0/step1;if(error>=e10)
step1*=10;else if(error>=e5)
step1*=5;else if(error>=e2)
step1*=2;return stop<start?-step1:step1;}
function ticker(year2,month2,week,day2,hour2,minute2){const tickIntervals=[[second_default,1,durationSecond],[second_default,5,5*durationSecond],[second_default,15,15*durationSecond],[second_default,30,30*durationSecond],[minute2,1,durationMinute],[minute2,5,5*durationMinute],[minute2,15,15*durationMinute],[minute2,30,30*durationMinute],[hour2,1,durationHour],[hour2,3,3*durationHour],[hour2,6,6*durationHour],[hour2,12,12*durationHour],[day2,1,durationDay],[day2,2,2*durationDay],[week,1,durationWeek],[month2,1,durationMonth],[month2,3,3*durationMonth],[year2,1,durationYear]];function ticks2(start,stop,count){const reverse=stop<start;if(reverse)
[start,stop]=[stop,start];const interval2=count&&typeof count.range==="function"?count:tickInterval(start,stop,count);const ticks3=interval2?interval2.range(start,+stop+1):[];return reverse?ticks3.reverse():ticks3;}
function tickInterval(start,stop,count){const target=Math.abs(stop-start)/count;const i2=bisector(([,,step2])=>step2).right(tickIntervals,target);if(i2===tickIntervals.length)
return year2.every(tickStep(start/durationYear,stop/durationYear,count));if(i2===0)
return millisecond_default.every(Math.max(tickStep(start,stop,count),1));const[t,step]=tickIntervals[target/tickIntervals[i2-1][2]<tickIntervals[i2][2]/target?i2-1:i2];return t.every(step);}
return[ticks2,tickInterval];}
var[utcTicks,utcTickInterval]=ticker(utcYear_default,utcMonth_default,utcSunday,utcDay_default,utcHour_default,utcMinute_default);var[timeTicks,timeTickInterval]=ticker(year_default,month_default,sunday,day_default,hour_default,minute_default);var AFTER_TASK_REGEXP=/^after\s+([\d\w- ]+)/;var DEFAULT_TIME_FORMAT="YYYY-MM-DD";var GanttDb=class extends BaseDb{constructor(){super(...arguments);this.tasks={};this.attrs=this.makeDefaultAttrs();this.taskCounter=makeIdCounter();this.tags=this.makeDefaultTags();this.markDates=[];this.lastOrder=0;this.ACTION_HANDLERS={addAttr(action){let value=action.value;if(["excludes","includes"].includes(action.key)){value=action.value.toLowerCase().split(/[\s,]+/);}
this.attrs[action.key]=value;},addTask(action){this.addTask(action);},addSection(action){this.currentSection=action.label;},markDate(action){this.processMarkDate(action.value);},overrideConfig(action){this.addOverrideConfig(action);},addParam(action){this.configParams.push(action);}};}
getDiagramIR(){return{...super.getBaseDiagramIR(),tasks:this.tasks,attrs:this.attrs,markDates:this.markDates};}
apply(action){if(!action)
return;if(Array.isArray(action)){action.forEach((a)=>this.apply(a));return;}
if(action.type in this.ACTION_HANDLERS){this.ACTION_HANDLERS[action.type].call(this,action);}}
makeTaskId(idStr){if(typeof idStr==="undefined"){const taskCount=this.taskCounter.next();return"task"+taskCount;}
return idStr;}
addTask(action){const{label,extraValue}=action;const task=this.parseTaskData(label.trim(),extraValue.trim(),{});this.lastTaskId=task.id;this.tasks[task.id]=task;}
parseTaskData(label,dataStr,opts){const prevTask=opts.prevTask||this.tasks[this.lastTaskId];const segs=dataStr.trim().split(",").map((str3)=>str3.trim());const task={label,id:this.makeTaskId(),startTime:null,endTime:null,renderEndTime:null,order:this.lastOrder++,section:this.currentSection};if(segs[0]){const v=segs[0].toUpperCase();const maybeTaskSegs=v.split(" ");let isTagsMatched=false;maybeTaskSegs.forEach((str3)=>{if(this.tags[str3]){isTagsMatched=true;if(!task.tags)
task.tags=[];task.tags.push(str3);}});if(isTagsMatched)
segs.shift();}
const segsLen=segs.length;let endTimeData="";if(segsLen===1){const[end]=segs;task.startTime=prevTask===null||prevTask===void 0?void 0:prevTask.endTime;endTimeData=end;}else if(segsLen===2){const[start,end]=segs;const{date:date2,prevTaskId}=this.getStartOfTask(start);task.startTime=date2;task.prevTaskId=prevTaskId;endTimeData=end;}else if(segsLen===3){const[id9,start,end]=segs;task.id=this.makeTaskId(id9);const{date:date2,prevTaskId}=this.getStartOfTask(start);task.startTime=date2;task.prevTaskId=prevTaskId;endTimeData=end;}
if(endTimeData){task.endTime=this.getEndDate(task.startTime,endTimeData,false);task.isManualEndTime=isDateStrValid(endTimeData,this.attrs.dateFormat).isValid;checkTaskDates(task,this.attrs.dateFormat,this.attrs.excludes,this.attrs.includes);}
return task;}
findTaskById(id9){return this.tasks[id9];}
getStartOfTask(str3){str3=str3.trim();let prevTaskId="";const afterStatement=AFTER_TASK_REGEXP.exec(str3.trim());if(afterStatement!==null){let latestEndingTask=null;afterStatement[1].split(" ").forEach((id9)=>{const task=this.findTaskById(id9);if(typeof task!=="undefined"){prevTaskId=task.id;if(!latestEndingTask){latestEndingTask=task;}else{if(task.endTime>latestEndingTask.endTime){latestEndingTask=task;}}}});if(!latestEndingTask){const dt=new Date();dt.setHours(0,0,0,0);return{date:dt,prevTaskId};}else{return{date:latestEndingTask.endTime,prevTaskId};}}
const dateFormat=this.attrs.dateFormat;const mDate=(0,import_dayjs.default)(str3,dateFormat,true);if(mDate.isValid()){return{date:mDate.toDate(),prevTaskId};}else{logger.debug(`Invalid date:${str3},dateFormat:${dateFormat}`);}
return{date:new Date(),prevTaskId};}
getEndDate(prevTime,str3,inclusive){inclusive=inclusive||false;str3=str3.trim();const mDate=(0,import_dayjs.default)(str3,this.attrs.dateFormat.trim(),true);if(mDate.isValid()){if(inclusive){mDate.add(1,"d");}
return mDate.toDate();}
return durationToDate(/^([\d]+)([wdhms])/.exec(str3.trim()),(0,import_dayjs.default)(prevTime));}
processMarkDate(str3){const trimmedStr=str3.trim();let date2;if(trimmedStr==="today"){date2=new Date();}else{const{dayObject,isValid}=isDateStrValid(str3,this.attrs.dateFormat);if(isValid){date2=dayObject.toDate();}}
if(date2){this.markDates.push(date2);}}
makeDefaultAttrs(){return{title:"",dateFormat:DEFAULT_TIME_FORMAT,axisFormat:"",axisInterval:null,excludes:[],includes:[]};}
makeDefaultTags(){return createDictByKeys(["ACTIVE","DONE","CRIT","MILESTONE"]);}
clear(){super.clear();this.tasks={};this.attrs=this.makeDefaultAttrs();this.tags=this.makeDefaultTags();this.lastOrder=0;this.currentSection=void 0;this.markDates=[];}};var db7=new GanttDb();function isDateStrValid(str3,timeFormat2){const dayObject=(0,import_dayjs.default)(str3,timeFormat2||DEFAULT_TIME_FORMAT,true);return{dayObject,isValid:dayObject.isValid()};}
function checkTaskDates(task,dateFormat,excludes,includes){if(!excludes.length||task.isManualEndTime)
return;const startTime=(0,import_dayjs.default)(task.startTime,dateFormat,true);startTime.add(1,"d");const endTime=(0,import_dayjs.default)(task.endTime,dateFormat,true);const renderEndTime=fixTaskDates(startTime,endTime,dateFormat,excludes,includes);task.endTime=endTime.toDate();task.renderEndTime=renderEndTime;}
var fixTaskDates=function(startTime,endTime,dateFormat,excludes,includes){let invalid=false;let renderEndTime=null;while(startTime<=endTime){if(!invalid){renderEndTime=endTime.toDate();}
invalid=isInvalidDate(startTime,dateFormat,excludes,includes);if(invalid){endTime=endTime.add(1,"d");}
startTime=startTime.add(1,"d");}
return renderEndTime;};var isInvalidDate=function(date2,dateFormat,excludes,includes){if(includes.length&&includes.indexOf(date2.format(dateFormat))>=0){return false;}
if(date2.day()>=6&&excludes.indexOf("weekends")>=0){return true;}
if(excludes.length&&excludes.indexOf(date2.format("dddd").toLowerCase())>=0){return true;}
return excludes.indexOf(date2.format(dateFormat.trim()))>=0;};var durationToDate=function(durationStatement,relativeTime){let resultDate=relativeTime;if(durationStatement!==null){const[_3,numStr,unit2]=durationStatement;const num=parseFloat(numStr);switch(unit2){case"s":resultDate=relativeTime.add(num,"second");break;case"m":resultDate=relativeTime.add(num,"minute");break;case"h":resultDate=relativeTime.add(num,"hour");break;case"d":resultDate=relativeTime.add(num,"day");break;case"w":resultDate=relativeTime.add(num,"week");break;}}
return resultDate.toDate();};function createDictByKeys(keys3,defaultValue=true){return keys3.reduce((acc,current)=>{acc[current]=defaultValue;return acc;},{});}
function getAxisTimeInterval(opts){const{axisFormat,axisInterval}=opts;let timeInterval=day_default.every(1);const RANGE_CONFIGS=[{pattern:/y/i,rangeMaker:year_default},{pattern:/M/,rangeMaker:month_default},{pattern:/d/i,rangeMaker:day_default},{pattern:/w/i,rangeMaker:sunday},{pattern:/h/i,rangeMaker:hour_default},{pattern:/m/,rangeMaker:minute_default},{pattern:/s/,rangeMaker:second_default}];let intervalFromIR;if(axisInterval){const match=/(\d+)(\w)/.exec(axisInterval.trim());if(match){const count=parseInt(match[1]);const format=match[2];if(!isNaN(count)){for(const rangeConfig of RANGE_CONFIGS){if(rangeConfig.pattern.test(format)){intervalFromIR=rangeConfig.rangeMaker.every(count);}}}}}
if(intervalFromIR){timeInterval=intervalFromIR;}else{for(const rangeConfig of RANGE_CONFIGS){if(rangeConfig.pattern.test(axisFormat)){timeInterval=rangeConfig.rangeMaker.every(1);}}}
return timeInterval;}
var db_default6=db7;function initRange(domain,range2){switch(arguments.length){case 0:break;case 1:this.range(domain);break;default:this.range(range2).domain(domain);break;}
return this;}
function define_default(constructor,factory,prototype){constructor.prototype=factory.prototype=prototype;prototype.constructor=constructor;}
function extend(parent,definition){var prototype=Object.create(parent.prototype);for(var key in definition)
prototype[key]=definition[key];return prototype;}
function Color(){}
var darker=0.7;var brighter=1/darker;var reI="\\s*([+-]?\\d+)\\s*";var reN="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*";var reP="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*";var reHex=/^#([0-9a-f]{3,8})$/;var reRgbInteger=new RegExp("^rgb\\("+[reI,reI,reI]+"\\)$");var reRgbPercent=new RegExp("^rgb\\("+[reP,reP,reP]+"\\)$");var reRgbaInteger=new RegExp("^rgba\\("+[reI,reI,reI,reN]+"\\)$");var reRgbaPercent=new RegExp("^rgba\\("+[reP,reP,reP,reN]+"\\)$");var reHslPercent=new RegExp("^hsl\\("+[reN,reP,reP]+"\\)$");var reHslaPercent=new RegExp("^hsla\\("+[reN,reP,reP,reN]+"\\)$");var named={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};define_default(Color,color,{copy:function(channels){return Object.assign(new this.constructor(),this,channels);},displayable:function(){return this.rgb().displayable();},hex:color_formatHex,formatHex:color_formatHex,formatHsl:color_formatHsl,formatRgb:color_formatRgb,toString:color_formatRgb});function color_formatHex(){return this.rgb().formatHex();}
function color_formatHsl(){return hslConvert(this).formatHsl();}
function color_formatRgb(){return this.rgb().formatRgb();}
function color(format){var m,l;format=(format+"").trim().toLowerCase();return(m=reHex.exec(format))?(l=m[1].length,m=parseInt(m[1],16),l===6?rgbn(m):l===3?new Rgb(m>>8&15|m>>4&240,m>>4&15|m&240,(m&15)<<4|m&15,1):l===8?rgba(m>>24&255,m>>16&255,m>>8&255,(m&255)/255):l===4?rgba(m>>12&15|m>>8&240,m>>8&15|m>>4&240,m>>4&15|m&240,((m&15)<<4|m&15)/255):null):(m=reRgbInteger.exec(format))?new Rgb(m[1],m[2],m[3],1):(m=reRgbPercent.exec(format))?new Rgb(m[1]*255/100,m[2]*255/100,m[3]*255/100,1):(m=reRgbaInteger.exec(format))?rgba(m[1],m[2],m[3],m[4]):(m=reRgbaPercent.exec(format))?rgba(m[1]*255/100,m[2]*255/100,m[3]*255/100,m[4]):(m=reHslPercent.exec(format))?hsla(m[1],m[2]/100,m[3]/100,1):(m=reHslaPercent.exec(format))?hsla(m[1],m[2]/100,m[3]/100,m[4]):named.hasOwnProperty(format)?rgbn(named[format]):format==="transparent"?new Rgb(NaN,NaN,NaN,0):null;}
function rgbn(n2){return new Rgb(n2>>16&255,n2>>8&255,n2&255,1);}
function rgba(r,g,b10,a){if(a<=0)
r=g=b10=NaN;return new Rgb(r,g,b10,a);}
function rgbConvert(o){if(!(o instanceof Color))
o=color(o);if(!o)
return new Rgb();o=o.rgb();return new Rgb(o.r,o.g,o.b,o.opacity);}
function rgb(r,g,b10,opacity){return arguments.length===1?rgbConvert(r):new Rgb(r,g,b10,opacity==null?1:opacity);}
function Rgb(r,g,b10,opacity){this.r=+r;this.g=+g;this.b=+b10;this.opacity=+opacity;}
define_default(Rgb,rgb,extend(Color,{brighter:function(k){k=k==null?brighter:Math.pow(brighter,k);return new Rgb(this.r*k,this.g*k,this.b*k,this.opacity);},darker:function(k){k=k==null?darker:Math.pow(darker,k);return new Rgb(this.r*k,this.g*k,this.b*k,this.opacity);},rgb:function(){return this;},displayable:function(){return-0.5<=this.r&&this.r<255.5&&(-0.5<=this.g&&this.g<255.5)&&(-0.5<=this.b&&this.b<255.5)&&(0<=this.opacity&&this.opacity<=1);},hex:rgb_formatHex,formatHex:rgb_formatHex,formatRgb:rgb_formatRgb,toString:rgb_formatRgb}));function rgb_formatHex(){return"#"+hex(this.r)+hex(this.g)+hex(this.b);}
function rgb_formatRgb(){var a=this.opacity;a=isNaN(a)?1:Math.max(0,Math.min(1,a));return(a===1?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(a===1?")":", "+a+")");}
function hex(value){value=Math.max(0,Math.min(255,Math.round(value)||0));return(value<16?"0":"")+value.toString(16);}
function hsla(h,s,l,a){if(a<=0)
h=s=l=NaN;else if(l<=0||l>=1)
h=s=NaN;else if(s<=0)
h=NaN;return new Hsl(h,s,l,a);}
function hslConvert(o){if(o instanceof Hsl)
return new Hsl(o.h,o.s,o.l,o.opacity);if(!(o instanceof Color))
o=color(o);if(!o)
return new Hsl();if(o instanceof Hsl)
return o;o=o.rgb();var r=o.r/255,g=o.g/255,b10=o.b/255,min4=Math.min(r,g,b10),max4=Math.max(r,g,b10),h=NaN,s=max4-min4,l=(max4+min4)/2;if(s){if(r===max4)
h=(g-b10)/s+(g<b10)*6;else if(g===max4)
h=(b10-r)/s+2;else
h=(r-g)/s+4;s/=l<0.5?max4+min4:2-max4-min4;h*=60;}else{s=l>0&&l<1?0:h;}
return new Hsl(h,s,l,o.opacity);}
function hsl(h,s,l,opacity){return arguments.length===1?hslConvert(h):new Hsl(h,s,l,opacity==null?1:opacity);}
function Hsl(h,s,l,opacity){this.h=+h;this.s=+s;this.l=+l;this.opacity=+opacity;}
define_default(Hsl,hsl,extend(Color,{brighter:function(k){k=k==null?brighter:Math.pow(brighter,k);return new Hsl(this.h,this.s,this.l*k,this.opacity);},darker:function(k){k=k==null?darker:Math.pow(darker,k);return new Hsl(this.h,this.s,this.l*k,this.opacity);},rgb:function(){var h=this.h%360+(this.h<0)*360,s=isNaN(h)||isNaN(this.s)?0:this.s,l=this.l,m2=l+(l<0.5?l:1-l)*s,m1=2*l-m2;return new Rgb(hsl2rgb(h>=240?h-240:h+120,m1,m2),hsl2rgb(h,m1,m2),hsl2rgb(h<120?h+240:h-120,m1,m2),this.opacity);},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&(0<=this.l&&this.l<=1)&&(0<=this.opacity&&this.opacity<=1);},formatHsl:function(){var a=this.opacity;a=isNaN(a)?1:Math.max(0,Math.min(1,a));return(a===1?"hsl(":"hsla(")+(this.h||0)+", "+(this.s||0)*100+"%, "+(this.l||0)*100+"%"+(a===1?")":", "+a+")");}}));function hsl2rgb(h,m1,m2){return(h<60?m1+(m2-m1)*h/60:h<180?m2:h<240?m1+(m2-m1)*(240-h)/60:m1)*255;}
function basis(t12,v0,v1,v2,v3){var t2=t12*t12,t3=t2*t12;return((1-3*t12+3*t2-t3)*v0+(4-6*t2+3*t3)*v1+(1+3*t12+3*t2-3*t3)*v2+t3*v3)/6;}
function basis_default2(values4){var n2=values4.length-1;return function(t){var i2=t<=0?t=0:t>=1?(t=1,n2-1):Math.floor(t*n2),v1=values4[i2],v2=values4[i2+1],v0=i2>0?values4[i2-1]:2*v1-v2,v3=i2<n2-1?values4[i2+2]:2*v2-v1;return basis((t-i2/n2)*n2,v0,v1,v2,v3);};}
function basisClosed_default(values4){var n2=values4.length;return function(t){var i2=Math.floor(((t%=1)<0?++t:t)*n2),v0=values4[(i2+n2-1)%n2],v1=values4[i2%n2],v2=values4[(i2+1)%n2],v3=values4[(i2+2)%n2];return basis((t-i2/n2)*n2,v0,v1,v2,v3);};}
var constant_default2=(x2)=>()=>x2;function linear(a,d){return function(t){return a+t*d;};}
function exponential(a,b10,y2){return a=Math.pow(a,y2),b10=Math.pow(b10,y2)-a,y2=1/y2,function(t){return Math.pow(a+t*b10,y2);};}
function gamma(y2){return(y2=+y2)===1?nogamma:function(a,b10){return b10-a?exponential(a,b10,y2):constant_default2(isNaN(a)?b10:a);};}
function nogamma(a,b10){var d=b10-a;return d?linear(a,d):constant_default2(isNaN(a)?b10:a);}
var rgb_default=function rgbGamma(y2){var color2=gamma(y2);function rgb2(start,end){var r=color2((start=rgb(start)).r,(end=rgb(end)).r),g=color2(start.g,end.g),b10=color2(start.b,end.b),opacity=nogamma(start.opacity,end.opacity);return function(t){start.r=r(t);start.g=g(t);start.b=b10(t);start.opacity=opacity(t);return start+"";};}
rgb2.gamma=rgbGamma;return rgb2;}(1);function rgbSpline(spline){return function(colors){var n2=colors.length,r=new Array(n2),g=new Array(n2),b10=new Array(n2),i2,color2;for(i2=0;i2<n2;++i2){color2=rgb(colors[i2]);r[i2]=color2.r||0;g[i2]=color2.g||0;b10[i2]=color2.b||0;}
r=spline(r);g=spline(g);b10=spline(b10);color2.opacity=1;return function(t){color2.r=r(t);color2.g=g(t);color2.b=b10(t);return color2+"";};};}
var rgbBasis=rgbSpline(basis_default2);var rgbBasisClosed=rgbSpline(basisClosed_default);function numberArray_default(a,b10){if(!b10)
b10=[];var n2=a?Math.min(b10.length,a.length):0,c=b10.slice(),i2;return function(t){for(i2=0;i2<n2;++i2)
c[i2]=a[i2]*(1-t)+b10[i2]*t;return c;};}
function isNumberArray(x2){return ArrayBuffer.isView(x2)&&!(x2 instanceof DataView);}
function genericArray(a,b10){var nb=b10?b10.length:0,na=a?Math.min(nb,a.length):0,x2=new Array(na),c=new Array(nb),i2;for(i2=0;i2<na;++i2)
x2[i2]=value_default(a[i2],b10[i2]);for(;i2<nb;++i2)
c[i2]=b10[i2];return function(t){for(i2=0;i2<na;++i2)
c[i2]=x2[i2](t);return c;};}
function date_default(a,b10){var d=new Date();return a=+a,b10=+b10,function(t){return d.setTime(a*(1-t)+b10*t),d;};}
function number_default(a,b10){return a=+a,b10=+b10,function(t){return a*(1-t)+b10*t;};}
function object_default(a,b10){var i2={},c={},k;if(a===null||typeof a!=="object")
a={};if(b10===null||typeof b10!=="object")
b10={};for(k in b10){if(k in a){i2[k]=value_default(a[k],b10[k]);}else{c[k]=b10[k];}}
return function(t){for(k in i2)
c[k]=i2[k](t);return c;};}
var reA=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;var reB=new RegExp(reA.source,"g");function zero2(b10){return function(){return b10;};}
function one(b10){return function(t){return b10(t)+"";};}
function string_default(a,b10){var bi=reA.lastIndex=reB.lastIndex=0,am,bm,bs,i2=-1,s=[],q=[];a=a+"",b10=b10+"";while((am=reA.exec(a))&&(bm=reB.exec(b10))){if((bs=bm.index)>bi){bs=b10.slice(bi,bs);if(s[i2])
s[i2]+=bs;else
s[++i2]=bs;}
if((am=am[0])===(bm=bm[0])){if(s[i2])
s[i2]+=bm;else
s[++i2]=bm;}else{s[++i2]=null;q.push({i:i2,x:number_default(am,bm)});}
bi=reB.lastIndex;}
if(bi<b10.length){bs=b10.slice(bi);if(s[i2])
s[i2]+=bs;else
s[++i2]=bs;}
return s.length<2?q[0]?one(q[0].x):zero2(b10):(b10=q.length,function(t){for(var i3=0,o;i3<b10;++i3)
s[(o=q[i3]).i]=o.x(t);return s.join("");});}
function value_default(a,b10){var t=typeof b10,c;return b10==null||t==="boolean"?constant_default2(b10):(t==="number"?number_default:t==="string"?(c=color(b10))?(b10=c,rgb_default):string_default:b10 instanceof color?rgb_default:b10 instanceof Date?date_default:isNumberArray(b10)?numberArray_default:Array.isArray(b10)?genericArray:typeof b10.valueOf!=="function"&&typeof b10.toString!=="function"||isNaN(b10)?object_default:number_default)(a,b10);}
function round_default(a,b10){return a=+a,b10=+b10,function(t){return Math.round(a*(1-t)+b10*t);};}
function constants(x2){return function(){return x2;};}
function number2(x2){return+x2;}
var unit=[0,1];function identity4(x2){return x2;}
function normalize3(a,b10){return(b10-=a=+a)?function(x2){return(x2-a)/b10;}:constants(isNaN(b10)?NaN:0.5);}
function clamper(a,b10){var t;if(a>b10)
t=a,a=b10,b10=t;return function(x2){return Math.max(a,Math.min(b10,x2));};}
function bimap(domain,range2,interpolate){var d0=domain[0],d1=domain[1],r0=range2[0],r1=range2[1];if(d1<d0)
d0=normalize3(d1,d0),r0=interpolate(r1,r0);else
d0=normalize3(d0,d1),r0=interpolate(r0,r1);return function(x2){return r0(d0(x2));};}
function polymap(domain,range2,interpolate){var j=Math.min(domain.length,range2.length)-1,d=new Array(j),r=new Array(j),i2=-1;if(domain[j]<domain[0]){domain=domain.slice().reverse();range2=range2.slice().reverse();}
while(++i2<j){d[i2]=normalize3(domain[i2],domain[i2+1]);r[i2]=interpolate(range2[i2],range2[i2+1]);}
return function(x2){var i3=bisect_default(domain,x2,1,j)-1;return r[i3](d[i3](x2));};}
function copy3(source,target){return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());}
function transformer(){var domain=unit,range2=unit,interpolate=value_default,transform7,untransform,unknown,clamp2=identity4,piecewise,output,input;function rescale(){var n2=Math.min(domain.length,range2.length);if(clamp2!==identity4)
clamp2=clamper(domain[0],domain[n2-1]);piecewise=n2>2?polymap:bimap;output=input=null;return scale3;}
function scale3(x2){return x2==null||isNaN(x2=+x2)?unknown:(output||(output=piecewise(domain.map(transform7),range2,interpolate)))(transform7(clamp2(x2)));}
scale3.invert=function(y2){return clamp2(untransform((input||(input=piecewise(range2,domain.map(transform7),number_default)))(y2)));};scale3.domain=function(_3){return arguments.length?(domain=Array.from(_3,number2),rescale()):domain.slice();};scale3.range=function(_3){return arguments.length?(range2=Array.from(_3),rescale()):range2.slice();};scale3.rangeRound=function(_3){return range2=Array.from(_3),interpolate=round_default,rescale();};scale3.clamp=function(_3){return arguments.length?(clamp2=_3?true:identity4,rescale()):clamp2!==identity4;};scale3.interpolate=function(_3){return arguments.length?(interpolate=_3,rescale()):interpolate;};scale3.unknown=function(_3){return arguments.length?(unknown=_3,scale3):unknown;};return function(t,u){transform7=t,untransform=u;return rescale();};}
function continuous(){return transformer()(identity4,identity4);}
function nice(domain,interval2){domain=domain.slice();var i0=0,i1=domain.length-1,x0=domain[i0],x1=domain[i1],t;if(x1<x0){t=i0,i0=i1,i1=t;t=x0,x0=x1,x1=t;}
domain[i0]=interval2.floor(x0);domain[i1]=interval2.ceil(x1);return domain;}
function localDate(d){if(0<=d.y&&d.y<100){var date2=new Date(-1,d.m,d.d,d.H,d.M,d.S,d.L);date2.setFullYear(d.y);return date2;}
return new Date(d.y,d.m,d.d,d.H,d.M,d.S,d.L);}
function utcDate(d){if(0<=d.y&&d.y<100){var date2=new Date(Date.UTC(-1,d.m,d.d,d.H,d.M,d.S,d.L));date2.setUTCFullYear(d.y);return date2;}
return new Date(Date.UTC(d.y,d.m,d.d,d.H,d.M,d.S,d.L));}
function newDate(y2,m,d){return{y:y2,m,d,H:0,M:0,S:0,L:0};}
function formatLocale(locale2){var locale_dateTime=locale2.dateTime,locale_date=locale2.date,locale_time=locale2.time,locale_periods=locale2.periods,locale_weekdays=locale2.days,locale_shortWeekdays=locale2.shortDays,locale_months=locale2.months,locale_shortMonths=locale2.shortMonths;var periodRe=formatRe(locale_periods),periodLookup=formatLookup(locale_periods),weekdayRe=formatRe(locale_weekdays),weekdayLookup=formatLookup(locale_weekdays),shortWeekdayRe=formatRe(locale_shortWeekdays),shortWeekdayLookup=formatLookup(locale_shortWeekdays),monthRe=formatRe(locale_months),monthLookup=formatLookup(locale_months),shortMonthRe=formatRe(locale_shortMonths),shortMonthLookup=formatLookup(locale_shortMonths);var formats={"a":formatShortWeekday,"A":formatWeekday,"b":formatShortMonth,"B":formatMonth,"c":null,"d":formatDayOfMonth,"e":formatDayOfMonth,"f":formatMicroseconds,"g":formatYearISO,"G":formatFullYearISO,"H":formatHour24,"I":formatHour12,"j":formatDayOfYear,"L":formatMilliseconds,"m":formatMonthNumber,"M":formatMinutes,"p":formatPeriod,"q":formatQuarter,"Q":formatUnixTimestamp,"s":formatUnixTimestampSeconds,"S":formatSeconds,"u":formatWeekdayNumberMonday,"U":formatWeekNumberSunday,"V":formatWeekNumberISO,"w":formatWeekdayNumberSunday,"W":formatWeekNumberMonday,"x":null,"X":null,"y":formatYear,"Y":formatFullYear,"Z":formatZone,"%":formatLiteralPercent};var utcFormats={"a":formatUTCShortWeekday,"A":formatUTCWeekday,"b":formatUTCShortMonth,"B":formatUTCMonth,"c":null,"d":formatUTCDayOfMonth,"e":formatUTCDayOfMonth,"f":formatUTCMicroseconds,"g":formatUTCYearISO,"G":formatUTCFullYearISO,"H":formatUTCHour24,"I":formatUTCHour12,"j":formatUTCDayOfYear,"L":formatUTCMilliseconds,"m":formatUTCMonthNumber,"M":formatUTCMinutes,"p":formatUTCPeriod,"q":formatUTCQuarter,"Q":formatUnixTimestamp,"s":formatUnixTimestampSeconds,"S":formatUTCSeconds,"u":formatUTCWeekdayNumberMonday,"U":formatUTCWeekNumberSunday,"V":formatUTCWeekNumberISO,"w":formatUTCWeekdayNumberSunday,"W":formatUTCWeekNumberMonday,"x":null,"X":null,"y":formatUTCYear,"Y":formatUTCFullYear,"Z":formatUTCZone,"%":formatLiteralPercent};var parses={"a":parseShortWeekday,"A":parseWeekday,"b":parseShortMonth,"B":parseMonth,"c":parseLocaleDateTime,"d":parseDayOfMonth,"e":parseDayOfMonth,"f":parseMicroseconds,"g":parseYear,"G":parseFullYear,"H":parseHour24,"I":parseHour24,"j":parseDayOfYear,"L":parseMilliseconds,"m":parseMonthNumber,"M":parseMinutes,"p":parsePeriod,"q":parseQuarter,"Q":parseUnixTimestamp,"s":parseUnixTimestampSeconds,"S":parseSeconds,"u":parseWeekdayNumberMonday,"U":parseWeekNumberSunday,"V":parseWeekNumberISO,"w":parseWeekdayNumberSunday,"W":parseWeekNumberMonday,"x":parseLocaleDate,"X":parseLocaleTime,"y":parseYear,"Y":parseFullYear,"Z":parseZone,"%":parseLiteralPercent};formats.x=newFormat(locale_date,formats);formats.X=newFormat(locale_time,formats);formats.c=newFormat(locale_dateTime,formats);utcFormats.x=newFormat(locale_date,utcFormats);utcFormats.X=newFormat(locale_time,utcFormats);utcFormats.c=newFormat(locale_dateTime,utcFormats);function newFormat(specifier,formats2){return function(date2){var string=[],i2=-1,j=0,n2=specifier.length,c,pad2,format;if(!(date2 instanceof Date))
date2=new Date(+date2);while(++i2<n2){if(specifier.charCodeAt(i2)===37){string.push(specifier.slice(j,i2));if((pad2=pads[c=specifier.charAt(++i2)])!=null)
c=specifier.charAt(++i2);else
pad2=c==="e"?" ":"0";if(format=formats2[c])
c=format(date2,pad2);string.push(c);j=i2+1;}}
string.push(specifier.slice(j,i2));return string.join("");};}
function newParse(specifier,Z){return function(string){var d=newDate(1900,void 0,1),i2=parseSpecifier(d,specifier,string+="",0),week,day2;if(i2!=string.length)
return null;if("Q"in d)
return new Date(d.Q);if("s"in d)
return new Date(d.s*1e3+("L"in d?d.L:0));if(Z&&!("Z"in d))
d.Z=0;if("p"in d)
d.H=d.H%12+d.p*12;if(d.m===void 0)
d.m="q"in d?d.q:0;if("V"in d){if(d.V<1||d.V>53)
return null;if(!("w"in d))
d.w=1;if("Z"in d){week=utcDate(newDate(d.y,0,1)),day2=week.getUTCDay();week=day2>4||day2===0?utcMonday.ceil(week):utcMonday(week);week=utcDay_default.offset(week,(d.V-1)*7);d.y=week.getUTCFullYear();d.m=week.getUTCMonth();d.d=week.getUTCDate()+(d.w+6)%7;}else{week=localDate(newDate(d.y,0,1)),day2=week.getDay();week=day2>4||day2===0?monday.ceil(week):monday(week);week=day_default.offset(week,(d.V-1)*7);d.y=week.getFullYear();d.m=week.getMonth();d.d=week.getDate()+(d.w+6)%7;}}else if("W"in d||"U"in d){if(!("w"in d))
d.w="u"in d?d.u%7:"W"in d?1:0;day2="Z"in d?utcDate(newDate(d.y,0,1)).getUTCDay():localDate(newDate(d.y,0,1)).getDay();d.m=0;d.d="W"in d?(d.w+6)%7+d.W*7-(day2+5)%7:d.w+d.U*7-(day2+6)%7;}
if("Z"in d){d.H+=d.Z/100|0;d.M+=d.Z%100;return utcDate(d);}
return localDate(d);};}
function parseSpecifier(d,specifier,string,j){var i2=0,n2=specifier.length,m=string.length,c,parse9;while(i2<n2){if(j>=m)
return-1;c=specifier.charCodeAt(i2++);if(c===37){c=specifier.charAt(i2++);parse9=parses[c in pads?specifier.charAt(i2++):c];if(!parse9||(j=parse9(d,string,j))<0)
return-1;}else if(c!=string.charCodeAt(j++)){return-1;}}
return j;}
function parsePeriod(d,string,i2){var n2=periodRe.exec(string.slice(i2));return n2?(d.p=periodLookup.get(n2[0].toLowerCase()),i2+n2[0].length):-1;}
function parseShortWeekday(d,string,i2){var n2=shortWeekdayRe.exec(string.slice(i2));return n2?(d.w=shortWeekdayLookup.get(n2[0].toLowerCase()),i2+n2[0].length):-1;}
function parseWeekday(d,string,i2){var n2=weekdayRe.exec(string.slice(i2));return n2?(d.w=weekdayLookup.get(n2[0].toLowerCase()),i2+n2[0].length):-1;}
function parseShortMonth(d,string,i2){var n2=shortMonthRe.exec(string.slice(i2));return n2?(d.m=shortMonthLookup.get(n2[0].toLowerCase()),i2+n2[0].length):-1;}
function parseMonth(d,string,i2){var n2=monthRe.exec(string.slice(i2));return n2?(d.m=monthLookup.get(n2[0].toLowerCase()),i2+n2[0].length):-1;}
function parseLocaleDateTime(d,string,i2){return parseSpecifier(d,locale_dateTime,string,i2);}
function parseLocaleDate(d,string,i2){return parseSpecifier(d,locale_date,string,i2);}
function parseLocaleTime(d,string,i2){return parseSpecifier(d,locale_time,string,i2);}
function formatShortWeekday(d){return locale_shortWeekdays[d.getDay()];}
function formatWeekday(d){return locale_weekdays[d.getDay()];}
function formatShortMonth(d){return locale_shortMonths[d.getMonth()];}
function formatMonth(d){return locale_months[d.getMonth()];}
function formatPeriod(d){return locale_periods[+(d.getHours()>=12)];}
function formatQuarter(d){return 1+~~(d.getMonth()/3);}
function formatUTCShortWeekday(d){return locale_shortWeekdays[d.getUTCDay()];}
function formatUTCWeekday(d){return locale_weekdays[d.getUTCDay()];}
function formatUTCShortMonth(d){return locale_shortMonths[d.getUTCMonth()];}
function formatUTCMonth(d){return locale_months[d.getUTCMonth()];}
function formatUTCPeriod(d){return locale_periods[+(d.getUTCHours()>=12)];}
function formatUTCQuarter(d){return 1+~~(d.getUTCMonth()/3);}
return{format:function(specifier){var f=newFormat(specifier+="",formats);f.toString=function(){return specifier;};return f;},parse:function(specifier){var p=newParse(specifier+="",false);p.toString=function(){return specifier;};return p;},utcFormat:function(specifier){var f=newFormat(specifier+="",utcFormats);f.toString=function(){return specifier;};return f;},utcParse:function(specifier){var p=newParse(specifier+="",true);p.toString=function(){return specifier;};return p;}};}
var pads={"-":"","_":" ","0":"0"};var numberRe=/^\s*\d+/;var percentRe=/^%/;var requoteRe=/[\\^$*+?|[\]().{}]/g;function pad(value,fill,width2){var sign=value<0?"-":"",string=(sign?-value:value)+"",length3=string.length;return sign+(length3<width2?new Array(width2-length3+1).join(fill)+string:string);}
function requote(s){return s.replace(requoteRe,"\\$&");}
function formatRe(names){return new RegExp("^(?:"+names.map(requote).join("|")+")","i");}
function formatLookup(names){return new Map(names.map((name,i2)=>[name.toLowerCase(),i2]));}
function parseWeekdayNumberSunday(d,string,i2){var n2=numberRe.exec(string.slice(i2,i2+1));return n2?(d.w=+n2[0],i2+n2[0].length):-1;}
function parseWeekdayNumberMonday(d,string,i2){var n2=numberRe.exec(string.slice(i2,i2+1));return n2?(d.u=+n2[0],i2+n2[0].length):-1;}
function parseWeekNumberSunday(d,string,i2){var n2=numberRe.exec(string.slice(i2,i2+2));return n2?(d.U=+n2[0],i2+n2[0].length):-1;}
function parseWeekNumberISO(d,string,i2){var n2=numberRe.exec(string.slice(i2,i2+2));return n2?(d.V=+n2[0],i2+n2[0].length):-1;}
function parseWeekNumberMonday(d,string,i2){var n2=numberRe.exec(string.slice(i2,i2+2));return n2?(d.W=+n2[0],i2+n2[0].length):-1;}
function parseFullYear(d,string,i2){var n2=numberRe.exec(string.slice(i2,i2+4));return n2?(d.y=+n2[0],i2+n2[0].length):-1;}
function parseYear(d,string,i2){var n2=numberRe.exec(string.slice(i2,i2+2));return n2?(d.y=+n2[0]+(+n2[0]>68?1900:2e3),i2+n2[0].length):-1;}
function parseZone(d,string,i2){var n2=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i2,i2+6));return n2?(d.Z=n2[1]?0:-(n2[2]+(n2[3]||"00")),i2+n2[0].length):-1;}
function parseQuarter(d,string,i2){var n2=numberRe.exec(string.slice(i2,i2+1));return n2?(d.q=n2[0]*3-3,i2+n2[0].length):-1;}
function parseMonthNumber(d,string,i2){var n2=numberRe.exec(string.slice(i2,i2+2));return n2?(d.m=n2[0]-1,i2+n2[0].length):-1;}
function parseDayOfMonth(d,string,i2){var n2=numberRe.exec(string.slice(i2,i2+2));return n2?(d.d=+n2[0],i2+n2[0].length):-1;}
function parseDayOfYear(d,string,i2){var n2=numberRe.exec(string.slice(i2,i2+3));return n2?(d.m=0,d.d=+n2[0],i2+n2[0].length):-1;}
function parseHour24(d,string,i2){var n2=numberRe.exec(string.slice(i2,i2+2));return n2?(d.H=+n2[0],i2+n2[0].length):-1;}
function parseMinutes(d,string,i2){var n2=numberRe.exec(string.slice(i2,i2+2));return n2?(d.M=+n2[0],i2+n2[0].length):-1;}
function parseSeconds(d,string,i2){var n2=numberRe.exec(string.slice(i2,i2+2));return n2?(d.S=+n2[0],i2+n2[0].length):-1;}
function parseMilliseconds(d,string,i2){var n2=numberRe.exec(string.slice(i2,i2+3));return n2?(d.L=+n2[0],i2+n2[0].length):-1;}
function parseMicroseconds(d,string,i2){var n2=numberRe.exec(string.slice(i2,i2+6));return n2?(d.L=Math.floor(n2[0]/1e3),i2+n2[0].length):-1;}
function parseLiteralPercent(d,string,i2){var n2=percentRe.exec(string.slice(i2,i2+1));return n2?i2+n2[0].length:-1;}
function parseUnixTimestamp(d,string,i2){var n2=numberRe.exec(string.slice(i2));return n2?(d.Q=+n2[0],i2+n2[0].length):-1;}
function parseUnixTimestampSeconds(d,string,i2){var n2=numberRe.exec(string.slice(i2));return n2?(d.s=+n2[0],i2+n2[0].length):-1;}
function formatDayOfMonth(d,p){return pad(d.getDate(),p,2);}
function formatHour24(d,p){return pad(d.getHours(),p,2);}
function formatHour12(d,p){return pad(d.getHours()%12||12,p,2);}
function formatDayOfYear(d,p){return pad(1+day_default.count(year_default(d),d),p,3);}
function formatMilliseconds(d,p){return pad(d.getMilliseconds(),p,3);}
function formatMicroseconds(d,p){return formatMilliseconds(d,p)+"000";}
function formatMonthNumber(d,p){return pad(d.getMonth()+1,p,2);}
function formatMinutes(d,p){return pad(d.getMinutes(),p,2);}
function formatSeconds(d,p){return pad(d.getSeconds(),p,2);}
function formatWeekdayNumberMonday(d){var day2=d.getDay();return day2===0?7:day2;}
function formatWeekNumberSunday(d,p){return pad(sunday.count(year_default(d)-1,d),p,2);}
function dISO(d){var day2=d.getDay();return day2>=4||day2===0?thursday(d):thursday.ceil(d);}
function formatWeekNumberISO(d,p){d=dISO(d);return pad(thursday.count(year_default(d),d)+(year_default(d).getDay()===4),p,2);}
function formatWeekdayNumberSunday(d){return d.getDay();}
function formatWeekNumberMonday(d,p){return pad(monday.count(year_default(d)-1,d),p,2);}
function formatYear(d,p){return pad(d.getFullYear()%100,p,2);}
function formatYearISO(d,p){d=dISO(d);return pad(d.getFullYear()%100,p,2);}
function formatFullYear(d,p){return pad(d.getFullYear()%1e4,p,4);}
function formatFullYearISO(d,p){var day2=d.getDay();d=day2>=4||day2===0?thursday(d):thursday.ceil(d);return pad(d.getFullYear()%1e4,p,4);}
function formatZone(d){var z=d.getTimezoneOffset();return(z>0?"-":(z*=-1,"+"))+pad(z/60|0,"0",2)+pad(z%60,"0",2);}
function formatUTCDayOfMonth(d,p){return pad(d.getUTCDate(),p,2);}
function formatUTCHour24(d,p){return pad(d.getUTCHours(),p,2);}
function formatUTCHour12(d,p){return pad(d.getUTCHours()%12||12,p,2);}
function formatUTCDayOfYear(d,p){return pad(1+utcDay_default.count(utcYear_default(d),d),p,3);}
function formatUTCMilliseconds(d,p){return pad(d.getUTCMilliseconds(),p,3);}
function formatUTCMicroseconds(d,p){return formatUTCMilliseconds(d,p)+"000";}
function formatUTCMonthNumber(d,p){return pad(d.getUTCMonth()+1,p,2);}
function formatUTCMinutes(d,p){return pad(d.getUTCMinutes(),p,2);}
function formatUTCSeconds(d,p){return pad(d.getUTCSeconds(),p,2);}
function formatUTCWeekdayNumberMonday(d){var dow=d.getUTCDay();return dow===0?7:dow;}
function formatUTCWeekNumberSunday(d,p){return pad(utcSunday.count(utcYear_default(d)-1,d),p,2);}
function UTCdISO(d){var day2=d.getUTCDay();return day2>=4||day2===0?utcThursday(d):utcThursday.ceil(d);}
function formatUTCWeekNumberISO(d,p){d=UTCdISO(d);return pad(utcThursday.count(utcYear_default(d),d)+(utcYear_default(d).getUTCDay()===4),p,2);}
function formatUTCWeekdayNumberSunday(d){return d.getUTCDay();}
function formatUTCWeekNumberMonday(d,p){return pad(utcMonday.count(utcYear_default(d)-1,d),p,2);}
function formatUTCYear(d,p){return pad(d.getUTCFullYear()%100,p,2);}
function formatUTCYearISO(d,p){d=UTCdISO(d);return pad(d.getUTCFullYear()%100,p,2);}
function formatUTCFullYear(d,p){return pad(d.getUTCFullYear()%1e4,p,4);}
function formatUTCFullYearISO(d,p){var day2=d.getUTCDay();d=day2>=4||day2===0?utcThursday(d):utcThursday.ceil(d);return pad(d.getUTCFullYear()%1e4,p,4);}
function formatUTCZone(){return"+0000";}
function formatLiteralPercent(){return"%";}
function formatUnixTimestamp(d){return+d;}
function formatUnixTimestampSeconds(d){return Math.floor(+d/1e3);}
var locale;var timeFormat;var timeParse;var utcFormat;var utcParse;defaultLocale({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});function defaultLocale(definition){locale=formatLocale(definition);timeFormat=locale.format;timeParse=locale.parse;utcFormat=locale.utcFormat;utcParse=locale.utcParse;return locale;}
function date(t){return new Date(t);}
function number3(t){return t instanceof Date?+t:+new Date(+t);}
function calendar(ticks2,tickInterval,year2,month2,week,day2,hour2,minute2,second2,format){var scale3=continuous(),invert3=scale3.invert,domain=scale3.domain;var formatMillisecond=format(".%L"),formatSecond=format(":%S"),formatMinute=format("%I:%M"),formatHour=format("%I %p"),formatDay=format("%a %d"),formatWeek=format("%b %d"),formatMonth=format("%B"),formatYear2=format("%Y");function tickFormat(date2){return(second2(date2)<date2?formatMillisecond:minute2(date2)<date2?formatSecond:hour2(date2)<date2?formatMinute:day2(date2)<date2?formatHour:month2(date2)<date2?week(date2)<date2?formatDay:formatWeek:year2(date2)<date2?formatMonth:formatYear2)(date2);}
scale3.invert=function(y2){return new Date(invert3(y2));};scale3.domain=function(_3){return arguments.length?domain(Array.from(_3,number3)):domain().map(date);};scale3.ticks=function(interval2){var d=domain();return ticks2(d[0],d[d.length-1],interval2==null?10:interval2);};scale3.tickFormat=function(count,specifier){return specifier==null?tickFormat:format(specifier);};scale3.nice=function(interval2){var d=domain();if(!interval2||typeof interval2.range!=="function")
interval2=tickInterval(d[0],d[d.length-1],interval2==null?10:interval2);return interval2?domain(nice(d,interval2)):scale3;};scale3.copy=function(){return copy3(scale3,calendar(ticks2,tickInterval,year2,month2,week,day2,hour2,minute2,second2,format));};return scale3;}
function time2(){return initRange.apply(calendar(timeTicks,timeTickInterval,year_default,month_default,sunday,day_default,hour_default,minute_default,second_default,timeFormat).domain([new Date(2e3,0,1),new Date(2e3,0,2)]),arguments);}
var import_dayjs2=__toESM(require_dayjs_min());var defaultConfig7={barHeight:20,barGap:2,topPadding:30,sidePadding:20,gridLineStartPadding:20,numberSectionStyles:4,axisFormat:"YY-MM-DD",axisLabelFontSize:10,gridLineWidth:2,gridLineColor:PALETTE.normalDark,axisLabelColor:PALETTE.normalDark,markLineColor:PALETTE.pink,barBackground:PALETTE.orange,barBorderColor:PALETTE.normalDark,barBorderRadius:2,sectionBackgrounds:["#fff0da",void 0],sectionLabelColor:PALETTE.normalDark,fontColor:PALETTE.normalDark,fontSize:14,fontFamily:DEFAULT_FONT_FAMILY};var GANTT_PARAM_DIRECTIVE_RULES={...getParamRulesFromConfig(defaultConfig7),axisFormat:{valueType:"string"}};var configKey7="gantt";var configurator7=makeConfigurator({defaultConfig:defaultConfig7,configKey:configKey7,getConfigFromParamDirectives(configParams){return interpreteConfigs(GANTT_PARAM_DIRECTIVE_RULES,configParams);},getConfigFromTheme(t,conf6){const canvasBgInstance=(0,import_tinycolor2.default)(t.canvasBackground||"white");const isBgLight=canvasBgInstance.isLight();let fontColorOverBackground;let gridLineColor;if(isBgLight){fontColorOverBackground=PALETTE.normalDark;gridLineColor=(0,import_tinycolor2.default)(fontColorOverBackground).lighten(20).toHexString();}else{fontColorOverBackground=PALETTE.white;gridLineColor=(0,import_tinycolor2.default)(fontColorOverBackground).darken(20).toHexString();}
const primaryCorlorInstance=(0,import_tinycolor2.default)(t.primaryColor);const sectionBackgrounds=[primaryCorlorInstance.brighten(20).desaturate(10).toHexString(),void 0];(0,import_tinycolor2.default)(fontColorOverBackground);return{barBackground:t.primaryColor,barBorderColor:conf6.fontColor,fontColor:t.textColor,axisLabelColor:fontColorOverBackground,sectionLabelColor:fontColorOverBackground,sectionBackgrounds,gridLineColor};}});var getConf7=configurator7.getConfig;var artist2=makeArtist({draw(ir,config2,opts){var _a;const conf6=getConf7(ir,config2);const rootMark=makeEmptyGroup();let w=1e3;if((_a=opts.containerSize)===null||_a===void 0?void 0:_a.width){w=opts.containerSize.width;}
const ganttDraw=new GanttDraw(ir,conf6,rootMark,w);ganttDraw.makeGant();const size4=ganttDraw.getPageSize();const{width:width2,height}=size4;return{mark:rootMark,width:width2,height};}});var GANTT_LAYER_CONFIG={sectionBackground:1,excludesBackground:2,gridLine:5,bar:10,markLine:15,title:15};var GanttDraw=class{constructor(ir,conf6,rootMark,w){this.ir=ir;this.conf=conf6;this.rootMark=rootMark;this.sectionLabelWidth=0;this.layerManager=new LayerManager();if(isDev){;window.ganttDraw=this;}
const taskArray=Object.values(ir.tasks);this.taskArray=taskArray;this.startDate=new Date(min(taskArray,function(d){return Number(d.startTime);}));this.endDate=new Date(max(taskArray,function(d){return Number(d.renderEndTime||d.endTime);}));this.fontConfig={fontSize:conf6.fontSize,fontFamily:conf6.fontFamily};const categories=taskArray.map((task)=>task.section);this.categories=categories;const sectionLabelWidths=categories.reduce((acc,section)=>{if(!acc[section]){acc[section]=section?calculateTextDimensions(section,this.fontConfig).width:0;}
return acc;},{});const sectionLabelMaxWidth=Object.values(sectionLabelWidths).reduce((acc,current)=>{return Math.max(acc,current);},0);this.sectionLabelWidth=Math.round(sectionLabelMaxWidth?sectionLabelMaxWidth+5:0);const makeTimeScaleAndTicks=(width2)=>{const axisFormat=this.ir.attrs.axisFormat||this.conf.axisFormat;const sampleLabelWidth=calculateTextDimensions((0,import_dayjs2.default)().format(axisFormat),{fontSize:conf6.axisLabelFontSize}).width;const timeInterval=getAxisTimeInterval({axisFormat,axisInterval:this.ir.attrs.axisInterval});const timeScale2=time2().domain([this.startDate,this.endDate]).rangeRound([0,width2-conf6.sidePadding*2-this.sectionLabelWidth-sampleLabelWidth/4]);const ticks3=timeScale2.ticks(timeInterval).map((date2)=>{const day2=(0,import_dayjs2.default)(date2);const label=day2.format(axisFormat);const labelWidth=calculateTextDimensions(label,{fontSize:conf6.axisLabelFontSize}).width;return{date:date2,label,labelWidth};});return{timeScale:timeScale2,ticks:ticks3};};const{ticks:tempTicks}=makeTimeScaleAndTicks(w);const axisLabelGap=conf6.axisLabelFontSize/2;const minWidth=tempTicks.reduce((acc,tick)=>acc+tick.labelWidth+axisLabelGap,0)+conf6.sidePadding*2+sectionLabelMaxWidth;this.titleTextDims=ir.attrs.title?calculateTextDimensions(ir.attrs.title,this.fontConfig):{width:0,height:0};const h=taskArray.length*(conf6.barHeight+conf6.barGap)+2*conf6.topPadding+conf6.gridLineStartPadding+conf6.axisLabelFontSize+this.titleTextDims.height;this.height=h;this.width=Math.max(w,minWidth);const{timeScale,ticks:ticks2}=makeTimeScaleAndTicks(this.width);this.timeScale=timeScale;this.ticks=ticks2;for(const[name,zIndex]of Object.entries(GANTT_LAYER_CONFIG)){this.layerManager.addLayer(name,zIndex);}}
getPageSize(){return{width:this.width,height:this.height};}
makeGant(){const{taskArray}=this;const{conf:conf6}=this;const barHeight=conf6.barHeight;const gap=barHeight+conf6.barGap;this.drawTitle();const{sectionsHeight}=this.drawSections(taskArray,gap);this.drawExcludeDays({sectionsHeight});this.drawGrid({sectionsHeight});this.drawMarkDates({sectionsHeight});this.rootMark.children=this.layerManager.sortLayerMarks();}
getScaledTimeX(v){return Math.round(this.timeScale(v));}
drawTitle(){const title=this.ir.attrs.title;if(title){const titleWidth=this.titleTextDims.width;const titleMark=makeMark("text",{text:title,x:(this.width-titleWidth)/2,y:this.conf.topPadding,fill:this.conf.fontColor,textBaseline:"middle",...this.fontConfig,fontWeight:"bold"});this.layerManager.addMark("title",titleMark);}}
drawGrid(opts){const gridGroup=makeEmptyGroup();gridGroup.class="gantt__grid";this.layerManager.addMark("gridLine",gridGroup);const{axisLabelColor,gridLineColor,axisLabelFontSize,topPadding,sidePadding,gridLineStartPadding}=this.conf;const axisLabelTopMargin=10;const titleHeight=this.titleTextDims.height||0;const yStart=topPadding+titleHeight;const yAxisHeight=opts.sectionsHeight+gridLineStartPadding;this.ticks.forEach((o)=>{const{date:tickDate,label}=o;const x1=this.getScaledTimeX(tickDate)+sidePadding+this.sectionLabelWidth;const lineEndY=yStart+yAxisHeight;const line=makeMark("line",{x1,x2:x1,y1:yStart,y2:lineEndY,stroke:gridLineColor});const textMark=makeMark("text",{text:label,fill:axisLabelColor,textAlign:"center",textBaseline:"top",x:x1,y:lineEndY+axisLabelTopMargin,fontSize:axisLabelFontSize});gridGroup.children.push(line,textMark);});}
drawSections(taskArray,sectionUnitHeight){const{conf:conf6}=this;const w=this.width;const sectionBackgrounGroup=makeEmptyGroup();const{gridLineStartPadding,gridLineWidth,sectionBackgrounds,sidePadding,topPadding,barHeight,barGap}=conf6;const yStart=gridLineStartPadding+topPadding+(this.titleTextDims.height||0);this.layerManager.addMark("sectionBackground",sectionBackgrounGroup);const sectionsMap=new Map();const taskXOffset=this.sectionLabelWidth+sidePadding;taskArray.forEach((task,i2)=>{const sectionGroup=makeEmptyGroup();this.layerManager.addMark("bar",sectionGroup);if(!sectionsMap.get(task.section)){const sectionBackground=sectionBackgrounds[sectionsMap.size%sectionBackgrounds.length]||"transparent";const sectionY=task.order*sectionUnitHeight+yStart;const sectionRect=makeMark("rect",{x:0,y:sectionY,width:w,height:sectionUnitHeight,fill:sectionBackground},{class:"gantt__section"});sectionBackgrounGroup.children.push(sectionRect);let labelMark;if(task.section){labelMark=makeMark("text",{text:task.section,x:sidePadding,y:sectionY+sectionUnitHeight/2,...this.fontConfig,fill:conf6.sectionLabelColor,textAlign:"left",textBaseline:"middle"});sectionBackgrounGroup.children.push(labelMark);}
sectionsMap.set(task.section,{backgroundRect:sectionRect,taskCount:0,labelMark});}
sectionsMap.get(task.section).taskCount+=1;const taskX=taskXOffset+this.getScaledTimeX(task.startTime);const barStartX=taskXOffset+this.getScaledTimeX(task.startTime);let barEndX=taskXOffset+this.getScaledTimeX(task.renderEndTime||task.endTime);let barWidth=barEndX-barStartX;const baseAttrs={radius:conf6.barBorderRadius,x:taskX,y:task.order*sectionUnitHeight+yStart+barGap/2,width:barWidth,height:barHeight,fill:conf6.barBackground,stroke:conf6.barBorderColor};const taskRect=makeMark("rect",{...baseAttrs});const appearanceInfo=getTaskAppearanceInfo({baseAttrs,task,taskMark:taskRect,originTaskMark:taskRect,conf:this.conf});let taskMark;if(appearanceInfo){taskMark=appearanceInfo.taskMark;barWidth=appearanceInfo.width;barEndX=barStartX+barWidth;}else{taskMark=taskRect;}
let textX;const taskMarkOffset=(appearanceInfo===null||appearanceInfo===void 0?void 0:appearanceInfo.taskMarkOffset)||{x:0,y:0};const textWidth=calculateTextDimensions(task.label,this.fontConfig).width;if(textWidth>barWidth){const distanceToRightEdge=w-barEndX-taskMarkOffset.x;if(textWidth<distanceToRightEdge){textX=barEndX+textWidth/2+gridLineWidth+taskMarkOffset.x;}else{textX=barStartX-textWidth/2+taskMarkOffset.x;}}else{textX=barStartX+barWidth/2+taskMarkOffset.x;}
const textY=i2*sectionUnitHeight+conf6.barHeight/2+yStart;const textMark=makeMark("text",{text:task.label,x:textX+gridLineWidth/2,y:textY,textAlign:"center",textBaseline:"middle",...this.fontConfig,fill:conf6.fontColor});sectionGroup.children.push(taskMark,textMark);});for(const{taskCount,labelMark,backgroundRect}of sectionsMap.values()){if(taskCount>1){if(labelMark)
labelMark.attrs.y+=(taskCount-1)*sectionUnitHeight/2;backgroundRect.attrs.height+=(taskCount-1)*sectionUnitHeight;}}
const sectionsHeight=Array.from(sectionsMap.values()).reduce((acc,o)=>{return acc+o.taskCount*sectionUnitHeight;},0);return{sectionsHeight};}
drawExcludeDays(opts){const{conf:conf6}=this;const excludesBackgrounGroup=makeEmptyGroup();const{gridLineStartPadding,gridLineColor,sidePadding,topPadding}=conf6;const yStart=topPadding+(this.titleTextDims.height||0);this.layerManager.addMark("excludesBackground",excludesBackgrounGroup);const minTime=this.startDate;const maxTime=this.endDate;const{excludes,includes,dateFormat}=this.ir.attrs;if(!minTime||!maxTime)
return;const taskXOffset=this.sectionLabelWidth+sidePadding;const height=opts.sectionsHeight+gridLineStartPadding;const excludeRanges=[];let range2=null;let d=(0,import_dayjs2.default)(minTime);while(d.toDate()<=maxTime){if(isInvalidDate(d,dateFormat,excludes,includes)){if(!range2){range2={start:d.toDate(),end:d.toDate()};}}else{if(range2){range2.end=d.toDate();excludeRanges.push(range2);range2=null;}}
d=d.add(1,"d");}
excludeRanges.forEach((range3)=>{const x2=taskXOffset+this.getScaledTimeX(range3.start);const endX=taskXOffset+this.getScaledTimeX(range3.end);const rect=makeMark("rect",{x:x2,width:endX-x2,y:yStart,height,fill:gridLineColor,fillOpacity:0.2});excludesBackgrounGroup.children.push(rect);});}
drawMarkDates(opts){const{topPadding,sidePadding,gridLineStartPadding,markLineColor}=this.conf;const titleHeight=this.titleTextDims.height||0;const yStart=topPadding+titleHeight;const yEnd=yStart+opts.sectionsHeight+gridLineStartPadding;const markLineGroup=makeEmptyGroup();this.layerManager.addMark("markLine",markLineGroup);this.ir.markDates.forEach((date2)=>{const x2=this.getScaledTimeX(date2)+sidePadding+this.sectionLabelWidth;const lineMark=makeMark("line",{x1:x2,x2,y1:yStart,y2:yEnd,lineWidth:2,stroke:markLineColor});markLineGroup.children.push(lineMark);});}};var TASK_TAGS_INFO_MAP={MILESTONE:{decorate(opts){const{taskMark,conf:conf6}=opts;const curAttrs=taskMark.attrs;const axisWidth=Math.min(20,conf6.barHeight);const diamondSide=axisWidth/2;const centerX=curAttrs.x;const centerY=curAttrs.y+curAttrs.height/2;const diamondMark=drawDiamondTo({x:centerX,y:centerY},diamondSide,curAttrs);return{taskMark:diamondMark,width:axisWidth,taskMarkOffset:{x:-axisWidth,y:0}};}},DONE:{decorate(opts){const{taskMark}=opts;safeAssign(taskMark.attrs,{fillOpacity:0.6});return{taskMark};}},CRIT:{decorate(opts){const{taskMark}=opts;safeAssign(taskMark.attrs,{stroke:"red"});return{taskMark};}}};function getTaskAppearanceInfo(opts){const task=opts.task;if(!task.tags)
return;const info={taskMark:opts.taskMark,width:opts.taskMark.attrs.width,taskMarkOffset:{x:0,y:0}};let currentTaskMark=opts.taskMark;task.tags.forEach((tag2)=>{const decorator=TASK_TAGS_INFO_MAP[tag2];if(decorator){if(decorator.decorate){Object.assign(info,decorator.decorate({...opts,taskMark:currentTaskMark}));if(info.taskMark)
currentTaskMark=info.taskMark;}}});info.taskMark=currentTaskMark;return info;}
var artist_default7=artist2;var moo7=__toESM(require_moo());function id7(d){return d[0];}
function nth2(n2){return function(d){return d[n2];};}
var COLOR7=/#[a-zA-Z0-9]+/;var PARAM_DIRECTIVE7=/@param/;var CONFIG_DIRECTIVE8=/@config/;var L_PAREN7=/\(/;var R_PAREN7=/\)/;function getTokenValue7(token){if(token&&"value"in token)
return token.value;return token;}
function handleConfigOpenCloseStatement7(d){const text=d[2].map((v)=>{if(v.type)
return getTokenValue7(v);return v;}).join("");try{const v=JSON.parse(text);return{type:"overrideConfig",value:v};}catch(error){return{type:"overrideConfig",error};}}
var COMMENT_LINE7=/%%.*/;var ATTR_KEYWORDS=["title","dateFormat","axisFormat","axisInterval"];var OTHER_KEYWORDS=["section","markDate","excludes","includes"];var keywordRules=[...ATTR_KEYWORDS,...OTHER_KEYWORDS].reduce((acc,text)=>{const pattern=new RegExp(`${text}`);acc[text.toUpperCase()]={match:pattern,push:"attr"};return acc;},{});var commonTextRules2={QUOTED_WORD:QUOTED_WORD_REGEXP};var lexer7=moo7.states({main:{NL:MOO_NEWLINE,WS:{match:/ +/,lineBreaks:false},...commonTextRules2,...keywordRules,COLON:/:/,LEFT_BRACE:/\{/,RIGHT_BRACE:/\}/,PARAM_DIRECTIVE:/@param/,COMMENT_LINE:COMMENT_LINE_REGEXP,CONFIG_DIRECTIVE:CONFIG_DIRECTIVE8,VALID_TEXT:{match:VALID_TEXT_REGEXP,fallback:true}},attr:{...commonTextRules2,VALID_TEXT:{match:/[^\n]+/,pop:1}}});var grammar7={Lexer:lexer7,ParserRules:[{"name":"_$ebnf$1","symbols":[]},{"name":"_$ebnf$1","symbols":["_$ebnf$1","wschar"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"_","symbols":["_$ebnf$1"],"postprocess":function(d){return null;}},{"name":"__$ebnf$1","symbols":["wschar"]},{"name":"__$ebnf$1","symbols":["__$ebnf$1","wschar"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"__","symbols":["__$ebnf$1"],"postprocess":function(d){return null;}},{"name":"wschar","symbols":[/[ \t\n\v\f\r]/],"postprocess":id7},{"name":"color","symbols":[COLOR7],"postprocess":(d)=>tv(d[0])},{"name":"paramStatement","symbols":[PARAM_DIRECTIVE7,"__","paramPart"],"postprocess":function(d){return d[2];}},{"name":"paramStatement$ebnf$1","symbols":[]},{"name":"paramStatement$ebnf$1$subexpression$1","symbols":[/[\n]/,"_","paramPart"]},{"name":"paramStatement$ebnf$1","symbols":["paramStatement$ebnf$1","paramStatement$ebnf$1$subexpression$1"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"paramStatement","symbols":[PARAM_DIRECTIVE7,"__",{"literal":"{"},"_","paramStatement$ebnf$1",/[\n]/,"_",{"literal":"}"}],"postprocess":function(d){const params=[];d[4].forEach((seg)=>{params.push(seg[2]);});return params;}},{"name":"paramPart$ebnf$1","symbols":[/[a-zA-Z0-9]/]},{"name":"paramPart$ebnf$1","symbols":["paramPart$ebnf$1",/[a-zA-Z0-9]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"paramPart$ebnf$2","symbols":[/[^ \n]/]},{"name":"paramPart$ebnf$2","symbols":["paramPart$ebnf$2",/[^ \n]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"paramPart","symbols":["paramPart$ebnf$1","__","paramPart$ebnf$2"],"postprocess":function(d){const key=d[0].map((v)=>tv(v)).join("");let value=d[2];if(typeof value!=="string")
value=value.map((v)=>tv(v)).join("");return{type:"addParam",key,value};}},{"name":"configStatement$ebnf$1","symbols":[/[^\)]/]},{"name":"configStatement$ebnf$1","symbols":["configStatement$ebnf$1",/[^\)]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"configStatement","symbols":[CONFIG_DIRECTIVE8,{"literal":"("},"configStatement$ebnf$1",{"literal":")"}],"postprocess":handleConfigOpenCloseStatement7},{"name":"configOpenCloseStatement$ebnf$1","symbols":[/[^\)]/]},{"name":"configOpenCloseStatement$ebnf$1","symbols":["configOpenCloseStatement$ebnf$1",/[^\)]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"configOpenCloseStatement","symbols":[CONFIG_DIRECTIVE8,L_PAREN7,"configOpenCloseStatement$ebnf$1",R_PAREN7],"postprocess":handleConfigOpenCloseStatement7},{"name":"comment","symbols":[COMMENT_LINE7],"postprocess":(d)=>null},{"name":"start","symbols":["__","start"]},{"name":"start","symbols":[{"literal":"gantt"},"document"]},{"name":"document","symbols":[]},{"name":"document","symbols":["document","line"],"postprocess":(d)=>{let r=d[0];if(d[1]){r=d[0].concat(d[1]);}
return r;}},{"name":"line$ebnf$1","symbols":[lexer7.has("WS")?{type:"WS"}:WS],"postprocess":id7},{"name":"line$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"line","symbols":["line$ebnf$1","statement"],"postprocess":nth2(1)},{"name":"line$ebnf$2","symbols":[lexer7.has("WS")?{type:"WS"}:WS],"postprocess":id7},{"name":"line$ebnf$2","symbols":[],"postprocess":()=>null},{"name":"line","symbols":["line$ebnf$2",lexer7.has("NL")?{type:"NL"}:NL],"postprocess":null},{"name":"statement$ebnf$1","symbols":[lexer7.has("WS")?{type:"WS"}:WS],"postprocess":id7},{"name":"statement$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"statement","symbols":["attrKey","statement$ebnf$1","words",lexer7.has("NL")?{type:"NL"}:NL],"postprocess":(d)=>{const value=d[2].trim();return{type:"addAttr",key:d[0],value};}},{"name":"statement","symbols":[lexer7.has("SECTION")?{type:"SECTION"}:SECTION,"words",lexer7.has("NL")?{type:"NL"}:NL],"postprocess":(d)=>{return{type:"addSection",label:d[1].trim()};}},{"name":"statement","symbols":[lexer7.has("MARKDATE")?{type:"MARKDATE"}:MARKDATE,"words",lexer7.has("NL")?{type:"NL"}:NL],"postprocess":(d)=>{return{type:"markDate",value:d[1].trim()};}},{"name":"statement","symbols":["words",lexer7.has("COLON")?{type:"COLON"}:COLON,"words",lexer7.has("NL")?{type:"NL"}:NL],"postprocess":(d)=>{return{type:"addTask",label:d[0],extraValue:d[2]};}},{"name":"statement","symbols":["paramStatement",lexer7.has("NL")?{type:"NL"}:NL],"postprocess":nth2(0)},{"name":"statement","symbols":["configOpenCloseStatement",lexer7.has("NL")?{type:"NL"}:NL],"postprocess":nth2(0)},{"name":"statement","symbols":["comment",lexer7.has("NL")?{type:"NL"}:NL],"postprocess":null},{"name":"attrKey$subexpression$1","symbols":[lexer7.has("TITLE")?{type:"TITLE"}:TITLE]},{"name":"attrKey$subexpression$1","symbols":[lexer7.has("DATEFORMAT")?{type:"DATEFORMAT"}:DATEFORMAT]},{"name":"attrKey$subexpression$1","symbols":[lexer7.has("AXISFORMAT")?{type:"AXISFORMAT"}:AXISFORMAT]},{"name":"attrKey$subexpression$1","symbols":[lexer7.has("AXISINTERVAL")?{type:"AXISINTERVAL"}:AXISINTERVAL]},{"name":"attrKey$subexpression$1","symbols":[lexer7.has("EXCLUDES")?{type:"EXCLUDES"}:EXCLUDES]},{"name":"attrKey$subexpression$1","symbols":[lexer7.has("INCLUDES")?{type:"INCLUDES"}:INCLUDES]},{"name":"attrKey","symbols":["attrKey$subexpression$1"],"postprocess":(d)=>{return tv(d[0][0]);}},{"name":"words$ebnf$1","symbols":[]},{"name":"words$ebnf$1$subexpression$1","symbols":[lexer7.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{"name":"words$ebnf$1$subexpression$1","symbols":[lexer7.has("WS")?{type:"WS"}:WS]},{"name":"words$ebnf$1","symbols":["words$ebnf$1","words$ebnf$1$subexpression$1"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"words","symbols":[lexer7.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,"words$ebnf$1"],"postprocess":function(d){return tv(d[0])+d[1].map((o)=>tv(o[0])).join("");}},{"name":"words","symbols":[lexer7.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD],"postprocess":function(d){const vWithQuotes=tv(d[0]);return vWithQuotes.slice(1,vWithQuotes.length-1);}}],ParserStart:"start",ParserOptions:{skipUnmatchSymbols:[lexer7.has("WS")?{type:"WS"}:WS]}};var gantt_default=grammar7;var parse7=genParserWithRules(gantt_default,{dedupeAmbigousResults:true,postProcess(results){db_default6.apply(results);return results;}});var gantt={pattern:/^\s*gantt/,parser:{parse(text){parse7(text);return db_default6.getDiagramIR();}},artist:artist_default7,configKey:configKey7,clear(){db_default6.clear();}};var Relation;(function(Relation2){Relation2["INHERITANCE"]="INHERITANCE";Relation2["COMPOSITION"]="COMPOSITION";Relation2["AGGREGATION"]="AGGREGATION";Relation2["ASSOCIATION"]="ASSOCIATION";Relation2["LINK"]="LINK";})(Relation||(Relation={}));var NAMESPACE_SEP=".";var ClassDb=class extends BaseDb{constructor(){super(...arguments);this.classes={};this.relations=[];this.notes=[];this.ACTION_HANDLERS={addClass(action){let classObj=this.classes[action.name];const{type,...restData}=action;const data=this.parseClassAction(restData);if(!classObj){classObj=data;}else{Object.assign(classObj,data);}
this.classes[action.name]=classObj;},addClassMember(action){const member=this.parseMemberLabel(action.member.raw);let classObj=this.classes[action.className];if(!classObj){classObj=this.parseClassAction({name:action.className,members:[]});this.classes[action.className]=classObj;}
classObj.members.push(member);},addRelation(action){let leftClass=this.classes[action.left];if(!leftClass){leftClass=this.parseClassAction({name:action.left,members:[]});this.classes[action.left]=leftClass;}
let rightClass=this.classes[action.right];if(!rightClass){rightClass=this.parseClassAction({name:action.right,members:[]});this.classes[action.right]=rightClass;}
const{relationRaw,...other}=action;const relation={...other,relation:relationRaw.type};if(relationRaw.dashed){relation.dashed=relationRaw.dashed;}
this.relations.push(relation);},addAnnotation(action){let classObj=this.classes[action.className];if(!classObj){classObj=this.parseClassAction({name:action.className,members:[]});this.classes[action.className]=classObj;}
classObj.annotation=action.annotation;},note(action){const id9=`note-${action.target}-${action.placement}`;const value={...action,id:id9,text:dedent_default(action.text)};this.notes.push(value);},overrideConfig(action){this.addOverrideConfig(action);},addParam(action){this.configParams.push(action);}};}
parseClassAction(payload){const fullName=payload.name;let name=payload.name;let namespace="";let annotation="";const members=[];if(payload.name.includes(NAMESPACE_SEP)){const segs=payload.name.split(NAMESPACE_SEP);name=segs[segs.length-1];namespace=segs.slice(0,segs.length-1).join(NAMESPACE_SEP);}
if(payload.members){for(const m of payload.members){if("annotation"in m){annotation=m.annotation;}else{const parsedMember=this.parseMemberLabel(m.raw);parsedMember.modifier=m.modifier;members.push(parsedMember);}}}
const label=payload.label||name;return{...payload,name,namespace,fullName,members,annotation,label};}
parseMemberLabel(raw){let temp=raw;const firstChar=temp[0];let access="public";const isPrivate=firstChar==="-";const isProtected=firstChar==="#";const isPublic=firstChar==="+";if(isPrivate)
access="private";else if(isProtected)
access="protected";if(isPrivate||isProtected||isPublic)
temp=temp.slice(1);const isMethod=/\(.*\)/.test(temp);const member={access,raw,isMethod};return member;}
getDiagramIR(){return{...super.getBaseDiagramIR(),classes:this.classes,relations:this.relations,notes:this.notes};}
apply(action){if(!action)
return;if(Array.isArray(action)){action.forEach((a)=>this.apply(a));return;}
if(action.type in this.ACTION_HANDLERS){this.ACTION_HANDLERS[action.type].call(this,action);}}
clear(){super.clear();this.classes={};this.relations=[];this.notes=[];}};var db8=new ClassDb();var db_default7=db8;var defaultConfig8={diagramPadding:15,layoutDirection:"TB",ranksep:20,nodesep:20,edgesep:10,edgeType:"polyline",entityBackground:PALETTE.orange,entityBorderColor:PALETTE.normalDark,entityBodyBackground:PALETTE.white,entityTextColor:PALETTE.normalDark,labelBackground:PALETTE.white,relationLineColor:PALETTE.normalDark,relationTextColor:PALETTE.normalDark,entityRadius:2,noteMargin:10,noteTextColor:PALETTE.normalDark,fontSize:14,fontWeight:"normal",fontFamily:DEFAULT_FONT_FAMILY};var CLASS_PARAM_DIRECTIVE_RULES={...getParamRulesFromConfig(defaultConfig8)};var configKey8="class";var configurator8=makeConfigurator({defaultConfig:defaultConfig8,configKey:configKey8,getConfigFromParamDirectives(configParams){return interpreteConfigs(CLASS_PARAM_DIRECTIVE_RULES,configParams);},getConfigFromTheme(t){const primaryCorlorInstance=(0,import_tinycolor2.default)(t.primaryColor);const canvasBgInstance=(0,import_tinycolor2.default)(t.canvasBackground||PALETTE.white);const isBgLight=canvasBgInstance.isLight();let relationLineColor;if(isBgLight){relationLineColor=PALETTE.normalDark;}else{relationLineColor=PALETTE.white;}
const entityBodyBackground=primaryCorlorInstance.brighten(60).toHexString();return{entityBackground:t.primaryColor,entityBodyBackground,relationLineColor};}});var getConf8=configurator8.getConfig;var artist3=makeArtist({draw(ir,config2,opts){const rootMark=makeEmptyGroup();const conf6=getConf8(ir,config2);const draw=new ClassDiagramDraw(ir,conf6);if(isDev){;window.classDraw=draw;}
const{gBounds}=draw.drawTo(rootMark);const{width:width2,height}=adjustRootMarkBounds({rootMark,gBounds,padX:conf6.diagramPadding,padY:conf6.diagramPadding});return{mark:rootMark,width:width2,height};}});var ClassDiagramDraw=class{constructor(ir,conf6){this.ir=ir;this.conf=conf6;this.relationGroupMark=makeEmptyGroup();this.elementBounds=makeBounds();const g=createLayoutGraph({multigraph:true,directed:true,compound:true}).setGraph({nodesep:20,edgesep:conf6.edgesep,ranksep:conf6.ranksep,splines:getGraphSplinesOption(conf6.edgeType),avoid_label_on_border:true});this.dagreWrapper=new DagreWrapper(g);this.theme=config_default.getConfig().themeConfig.themeVariables;}
drawTo(rootMark){this.rootMark=rootMark;for(const classObj of Object.values(this.ir.classes)){this.drawClass(classObj);}
rootMark.children.push(this.relationGroupMark);for(const relation of this.ir.relations){this.drawRelation(relation);}
for(const note of this.ir.notes){this.drawNote(note);}
this.dagreWrapper.doLayout();this.dagreWrapper.callNodeOnLayout();this.dagreWrapper.callEdgeOnLayout();return{gBounds:tryExpandBounds(this.dagreWrapper.getGraphBounds(),this.elementBounds)};}
drawClass(classObj){const markBuilder=new EntityMarkBuilder(this.dagreWrapper.g,this.conf);markBuilder.addHeader(classObj.fullName,classObj.annotation);this.markBuilder=markBuilder;const fields=classObj.members.filter((m)=>!m.isMethod);const methods=classObj.members.filter((m)=>m.isMethod);for(const memberList of[fields,methods]){const{index:index2}=markBuilder.getCurrentSection();const nextSectionIndex=index2+1;if(memberList.length){for(const member of memberList){markBuilder.addRow(nextSectionIndex,[{label:member.raw,italic:member.modifier==="abstract",underline:member.modifier==="static"}]);}}else{markBuilder.addRow(nextSectionIndex,[""]);}}
this.rootMark.children.push(markBuilder.group);const g=this.dagreWrapper.g;const entitySize=markBuilder.getSize();g.setNode(classObj.fullName,{id:classObj.fullName,...entitySize,onLayout(data){markBuilder.onLayout(data);}});}
drawRelation(r){const g=this.dagreWrapper.g;const{conf:conf6,relationGroupMark}=this;let labelDims;const fontConfig={fontSize:conf6.fontSize,fontFamily:conf6.fontFamily};const startNodeId=r.reversed?r.right:r.left;const ednNodeId=r.reversed?r.left:r.right;let minlen=1;if(r.label){labelDims=calculateTextDimensions(r.label,fontConfig);minlen=Math.ceil(labelDims.height/conf6.ranksep)+1;const startNode=g.node(startNodeId);const extraPad=(labelDims.width-startNode.width)/2;if(extraPad>0){startNode.marginr=extraPad;startNode.marginl=extraPad;}}
const leftLabelDims=r.labelLeft?calculateTextDimensions(r.labelLeft,fontConfig):null;const rightLabelDims=r.labelRight?calculateTextDimensions(r.labelRight,fontConfig):null;let leftLabelMark;let rightLabelMark;if(r.labelLeft){minlen+=Math.ceil(leftLabelDims.height/conf6.ranksep);leftLabelMark=makeMark("text",{text:r.labelLeft,fill:conf6.relationLineColor,class:"class__label",...fontConfig});relationGroupMark.children.push(leftLabelMark);}
if(r.labelRight){minlen+=Math.ceil(rightLabelDims.height/conf6.ranksep);rightLabelMark=makeMark("text",{text:r.labelRight,fill:conf6.relationLineColor,class:"class__label",...fontConfig});relationGroupMark.children.push(rightLabelMark);}
const startLabelMark=r.reversed?rightLabelMark:leftLabelMark;const endLabelMark=r.reversed?leftLabelMark:rightLabelMark;g.setEdge(startNodeId,ednNodeId,{label:r.relation,minlen,onLayout:(data)=>{const newPath=conf6.edgeType==="curved"?getPointsCurvePath(data.points):getPointsLinearPath(data.points);const lineMark=makeMark("path",{path:newPath,stroke:conf6.relationLineColor,lineCap:"round",lineDash:r.dashed?[2,2]:null},{class:"class__rel-line"});relationGroupMark.children.push(lineMark);if(r.label){const anchorPoint=(minlen===1?data.labelPoint:null)||getMedianPoint(data.points).point;const relText=makeMark("text",{text:r.label,fill:conf6.relationTextColor,textAlign:"center",textBaseline:"middle",...anchorPoint,...fontConfig},{class:"class__rel-text"});const relTextBg=makeLabelBg(labelDims,anchorPoint,{fill:conf6.labelBackground});const labelBounds=calcBound([relTextBg]);tryExpandBounds(this.elementBounds,labelBounds);relationGroupMark.children.push(relTextBg,relText);}
const lastPoint=data.points[data.points.length-1];const pointsForDirection=data.points.slice(-2);const arrowRad=calcDirection.apply(null,pointsForDirection);const arrowHeadType=RELATION_TO_ARROW_TYPE[r.relation];if(arrowHeadType){const arrowMark=drawArrowTo(lastPoint,8,arrowRad,{color:conf6.relationLineColor,type:arrowHeadType});relationGroupMark.children.push(arrowMark);}
const LABEL_X_OFFSET=5;if(startLabelMark){const startIntersectionPoint=data.points[2];safeAssign(startLabelMark.attrs,movePointPosition(startIntersectionPoint,{x:LABEL_X_OFFSET,y:0}));}
if(endLabelMark){safeAssign(endLabelMark.attrs,movePointPosition(lastPoint,{x:LABEL_X_OFFSET,y:0}));}}});}
drawNote(note){const{id:id9,text}=note;const g=this.dagreWrapper.g;const targetNodeOption=g.node(note.target);if(!targetNodeOption){return;}
const group=makeMark("group",{x:0,y:0},{children:[],class:"activity__note"});const{rootMark,conf:conf6,theme:theme3}=this;rootMark.children.push(group);const fontConfig={fontSize:conf6.fontSize,fontFamily:conf6.fontFamily};const textDims=calculateTextDimensions(text,fontConfig);const rectAttrs=getBaseNote(theme3);const noteModel={width:textDims.width+2*conf6.noteMargin,height:textDims.height+2*conf6.noteMargin};const noteRect={type:"rect",class:"note__bg",attrs:rectAttrs};const textMark={type:"text",attrs:{fill:conf6.noteTextColor,text,textBaseline:"middle",...fontConfig}};let isHorizontal=false;if(note.placement==="LEFT_OF"){isHorizontal=true;targetNodeOption.marginl=noteModel.width;}else if(note.placement==="RIGHT_OF"){isHorizontal=true;targetNodeOption.marginr=noteModel.width;}
if(note.placement==="TOP_OF"){targetNodeOption.margint=noteModel.height;}else if(note.placement==="BOTTOM_OF"){targetNodeOption.marginb=noteModel.height;}
if(isHorizontal){if(targetNodeOption.height<noteModel.height){targetNodeOption.height=noteModel.height;}}else{if(targetNodeOption.width<noteModel.width){targetNodeOption.width=noteModel.width;}}
g.setNode(id9,{mark:group,width:noteModel.width,height:noteModel.height,onLayout:()=>{const targetNodeData=targetNodeOption;const targetNodeStartX=targetNodeData.x-targetNodeData.width/2;const targetNodeStartY=targetNodeData.y-targetNodeData.height/2;let x2=targetNodeStartX;let y2=targetNodeStartY;if(note.placement==="LEFT_OF"){x2=targetNodeStartX-noteModel.width-conf6.noteMargin;}else if(note.placement==="RIGHT_OF"){x2=targetNodeData.x+targetNodeData.width/2+conf6.noteMargin;}
if(note.placement==="TOP_OF"){y2=targetNodeStartY-noteModel.height-conf6.noteMargin;}else if(note.placement==="BOTTOM_OF"){y2=targetNodeStartY+targetNodeData.height+noteModel.height+conf6.noteMargin;}
safeAssign(textMark.attrs,{x:x2+conf6.noteMargin,y:y2+textDims.height/2+conf6.noteMargin,width:noteModel.width});safeAssign(rectAttrs,{x:x2,y:y2,width:noteModel.width,height:noteModel.height});const node2=g.node(id9);if(isHorizontal){}else{node2.outerTop=y2;node2.outerBottom=y2+noteModel.height;}}});group.children.push(noteRect,textMark);}};var RELATION_TO_ARROW_TYPE={[Relation.INHERITANCE]:"etriangle",[Relation.ASSOCIATION]:"default",[Relation.COMPOSITION]:"diamond",[Relation.AGGREGATION]:"ediamond"};var EntityMarkBuilder=class{constructor(g,conf6){this.g=g;this.conf=conf6;this.group=makeEmptyGroup();this.rowPadding=8;this.curY=0;this.curContentHeight=0;this.sections=[];}
addHeader(label,annotation){let row;if(annotation){row=this.addRow(0,[`<<${annotation}>>`,label]);}else{row=this.addRow(0,[label]);}
row.isHeader=true;last(row.marks).labelMark.attrs.fontWeight="bold";return row;}
addRow(sectionIndex,labels){if(!this.sections[sectionIndex]){this.sections[sectionIndex]={rows:[]};}
const section=this.sections[sectionIndex];const{rowPadding}=this;const marks=[];const labelDims={width:0,height:0};let labelYOffset=0;for(const _l of labels){const labelConfig=typeof _l==="string"?{label:_l}:_l;const label=labelConfig.label;const fontConfig=this.getFontConfig();const dims=calculateTextDimensions(label,fontConfig);const textY=this.curY+labelYOffset+rowPadding;const textAttrs={text:label,fill:this.conf.entityTextColor,x:0,y:textY,textAlign:"center",textBaseline:"hanging",...dims,...this.getFontConfig()};if(labelConfig.italic){Object.assign(textAttrs,{fontStyle:"italic"});}
const labelMark=makeMark("text",textAttrs);const mark={labelMark};if(labelConfig.underline){const lineMark=makeMark("line",{x1:0,x2:dims.width,y1:textY,y2:textY,stroke:this.conf.entityTextColor,class:"class-entity__underline"});mark.decorationLine=lineMark;}
const labelYDiff=dims.height+Math.floor(rowPadding/2);labelYOffset+=labelYDiff;marks.push(mark);labelDims.width=Math.max(labelDims.width,dims.width);labelDims.height+=labelYDiff;}
const yOffsetStart=this.curY;const yDiff=labelDims.height+rowPadding;this.curY+=yDiff;this.curContentHeight+=yDiff;const row={labels,marks,labelDims,yOffsetStart,yOffsetEnd:this.curY};section.rows.push(row);for(const pair of marks){this.group.children.push(pair.labelMark);if(pair.decorationLine){this.group.children.push(pair.decorationLine);}}
return row;}
getCurrentSection(){const currentIndex=this.sections.length-1;return{index:currentIndex,section:this.sections[currentIndex]};}
getSize(){let maxWidth=0;for(const section of this.sections){for(const row of section.rows){const{labelDims}=row;maxWidth=Math.max(labelDims.width,maxWidth);}}
return{width:maxWidth+this.rowPadding*2,height:this.curContentHeight+this.rowPadding};}
onLayout(data){const rectSize=this.getSize();const bgRect=makeMark("rect",{...rectSize,x:-rectSize.width/2,y:-rectSize.height/2,fill:this.conf.entityBackground,radius:this.conf.entityRadius,stroke:this.conf.entityBorderColor});const halfClassHeight=rectSize.height/2;const sectionBgMarks=[];const{rowPadding}=this;const lastSection=last(this.sections);let bodySectionYStart=void 0;let bodySectionYEnd=void 0;this.sections.forEach((section,sectionIndex)=>{if(!section.rows.length){return;}
for(const row of section.rows){for(const{labelMark,decorationLine}of row.marks){if(!row.isHeader){labelMark.attrs.x+=(labelMark.attrs.width-rectSize.width)/2+rowPadding;}
labelMark.attrs.y+=-halfClassHeight+rowPadding/2;if(decorationLine){const offsetY=labelMark.attrs.height;decorationLine.attrs.y1=labelMark.attrs.y+offsetY;decorationLine.attrs.y2=labelMark.attrs.y+offsetY;const offsetX=-rectSize.width/2+rowPadding/2;decorationLine.attrs.x1+=offsetX;decorationLine.attrs.x2+=offsetX;}}}
const firstRow=section.rows[0];const lastRow=last(section.rows);if(sectionIndex===1){bodySectionYStart=firstRow.yOffsetStart-halfClassHeight+rowPadding;}
if(sectionIndex>0){const lineY=firstRow.yOffsetStart-halfClassHeight+rowPadding;const sepLine=makeMark("line",{x1:-rectSize.width/2,x2:rectSize.width/2,y1:lineY,y2:lineY,stroke:this.conf.entityBorderColor},{class:"class-entity__sep-line"});this.group.children.push(sepLine);}
if(section===lastSection){bodySectionYEnd=lastRow.yOffsetEnd+rowPadding-halfClassHeight;}});if(typeof bodySectionYStart!=="undefined"&&typeof bodySectionYEnd!=="undefined"){const lineY=bodySectionYStart;const sectionBg=makeMark("rect",{width:rectSize.width,height:bodySectionYEnd-bodySectionYStart,x:-rectSize.width/2,y:lineY,fill:this.conf.entityBodyBackground,stroke:this.conf.entityBorderColor,class:"class__section-bg"
});this.group.children.unshift(sectionBg);}
this.group.children.unshift(bgRect,...sectionBgMarks);positionGroupContents(this.group,data);}
getFontConfig(){return{fontFamily:this.conf.fontFamily,fontSize:this.conf.fontSize};}};var artist_default8=artist3;var moo8=__toESM(require_moo());function id8(d){return d[0];}
var COLOR8=/#[a-zA-Z0-9]+/;var PARAM_DIRECTIVE8=/@param/;var CONFIG_DIRECTIVE9=/@config/;var L_PAREN8=/\(/;var R_PAREN8=/\)/;function getTokenValue8(token){if(token&&"value"in token)
return token.value;return token;}
function handleConfigOpenCloseStatement8(d){const text=d[2].map((v)=>{if(v.type)
return getTokenValue8(v);return v;}).join("");try{const v=JSON.parse(text);return{type:"overrideConfig",value:v};}catch(error){return{type:"overrideConfig",error};}}
var COMMENT_LINE8=/%%.*/;var COMMON_TOKEN_RULES4={VALID_TEXT:{match:VALID_TEXT_REGEXP,fallback:true}};var _PLACEMENT2=[{match:/left\sof/,type:()=>"LEFT_OF"},{match:/right\sof/,type:()=>"RIGHT_OF"},{match:/top\sof/,type:()=>"TOP_OF"},{match:/bottom\sof/,type:()=>"BOTTOM_OF"}];var lexer8=moo8.states({main:{NL:MOO_NEWLINE,WS:{match:/[ \t]+/,lineBreaks:false},QUOTED_WORD:QUOTED_WORD_REGEXP,COLOR:COLOR_REGEXP,SEMICOLON:/;/,COLON:/:/,CLASS_DIAGRAM:/classDiagram/,L_PAREN:L_PAREN_REGEXP,R_PAREN:R_PAREN_REGEXP,L_BRACKET:{match:/\{/},R_BRACKET:{match:/\}/},TEXT_WITH_ANGLE_BRACKETS:{match:/\<\<(?:.*)\>\>/},EQ:{match:/=/},SUBGRAPH:{match:/subgraph/},NOTE:textToCaseInsensitiveRegex("@note"),START_NOTE:{match:/@start_note\s/,push:"noteState"},_PLACEMENT:_PLACEMENT2,COMMENT_LINE:COMMENT_LINE_REGEXP,...configLexerMainState,VALID_TEXT:{match:VALID_TEXT_REGEXP,fallback:true}},configStatement:{...configLexerconfigStatementState,...COMMON_TOKEN_RULES4},noteState:{END_NOTE:{match:textToCaseInsensitiveRegex("@end_note"),pop:1},_PLACEMENT:_PLACEMENT2,NL:MOO_NEWLINE,VALID_TEXT:{match:VALID_TEXT_REGEXP,fallback:true}}});var nth0=makeNth(0);var nth1=makeNth(1);var grammar8={Lexer:lexer8,ParserRules:[{"name":"_$ebnf$1","symbols":[]},{"name":"_$ebnf$1","symbols":["_$ebnf$1","wschar"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"_","symbols":["_$ebnf$1"],"postprocess":function(d){return null;}},{"name":"__$ebnf$1","symbols":["wschar"]},{"name":"__$ebnf$1","symbols":["__$ebnf$1","wschar"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"__","symbols":["__$ebnf$1"],"postprocess":function(d){return null;}},{"name":"wschar","symbols":[/[ \t\n\v\f\r]/],"postprocess":id8},{"name":"color","symbols":[COLOR8],"postprocess":(d)=>tv(d[0])},{"name":"paramStatement","symbols":[PARAM_DIRECTIVE8,"__","paramPart"],"postprocess":function(d){return d[2];}},{"name":"paramStatement$ebnf$1","symbols":[]},{"name":"paramStatement$ebnf$1$subexpression$1","symbols":[/[\n]/,"_","paramPart"]},{"name":"paramStatement$ebnf$1","symbols":["paramStatement$ebnf$1","paramStatement$ebnf$1$subexpression$1"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"paramStatement","symbols":[PARAM_DIRECTIVE8,"__",{"literal":"{"},"_","paramStatement$ebnf$1",/[\n]/,"_",{"literal":"}"}],"postprocess":function(d){const params=[];d[4].forEach((seg)=>{params.push(seg[2]);});return params;}},{"name":"paramPart$ebnf$1","symbols":[/[a-zA-Z0-9]/]},{"name":"paramPart$ebnf$1","symbols":["paramPart$ebnf$1",/[a-zA-Z0-9]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"paramPart$ebnf$2","symbols":[/[^ \n]/]},{"name":"paramPart$ebnf$2","symbols":["paramPart$ebnf$2",/[^ \n]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"paramPart","symbols":["paramPart$ebnf$1","__","paramPart$ebnf$2"],"postprocess":function(d){const key=d[0].map((v)=>tv(v)).join("");let value=d[2];if(typeof value!=="string")
value=value.map((v)=>tv(v)).join("");return{type:"addParam",key,value};}},{"name":"configStatement$ebnf$1","symbols":[/[^\)]/]},{"name":"configStatement$ebnf$1","symbols":["configStatement$ebnf$1",/[^\)]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"configStatement","symbols":[CONFIG_DIRECTIVE9,{"literal":"("},"configStatement$ebnf$1",{"literal":")"}],"postprocess":handleConfigOpenCloseStatement8},{"name":"configOpenCloseStatement$ebnf$1","symbols":[/[^\)]/]},{"name":"configOpenCloseStatement$ebnf$1","symbols":["configOpenCloseStatement$ebnf$1",/[^\)]/],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"configOpenCloseStatement","symbols":[CONFIG_DIRECTIVE9,L_PAREN8,"configOpenCloseStatement$ebnf$1",R_PAREN8],"postprocess":handleConfigOpenCloseStatement8},{"name":"comment","symbols":[COMMENT_LINE8],"postprocess":(d)=>null},{"name":"start","symbols":["__","start"],"postprocess":nth1},{"name":"start","symbols":[lexer8.has("CLASS_DIAGRAM")?{type:"CLASS_DIAGRAM"}:CLASS_DIAGRAM,"document"],"postprocess":function(d){return d[1];}},{"name":"document","symbols":[]},{"name":"document","symbols":["document","statementWrap"],"postprocess":(d)=>{let r=d[0];if(d[1]){r=d[0].concat(d[1]);}
return r;}},{"name":"statementWrap$ebnf$1","symbols":[]},{"name":"statementWrap$ebnf$1","symbols":["statementWrap$ebnf$1",lexer8.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"statementWrap","symbols":["statementWrap$ebnf$1","statement"],"postprocess":(d)=>{return d[1];}},{"name":"statementWrap$ebnf$2","symbols":[lexer8.has("WS")?{type:"WS"}:WS],"postprocess":id8},{"name":"statementWrap$ebnf$2","symbols":[],"postprocess":()=>null},{"name":"statementWrap","symbols":["statementWrap$ebnf$2",lexer8.has("NL")?{type:"NL"}:NL],"postprocess":null},{"name":"statement","symbols":["classStatement"]},{"name":"statement","symbols":["memberLabelStatement"]},{"name":"statement","symbols":["relationStatement"]},{"name":"statement","symbols":["classAnnotationStatement"]},{"name":"statement","symbols":["noteStatement"]},{"name":"statement","symbols":["paramStatement",lexer8.has("NL")?{type:"NL"}:NL]},{"name":"statement","symbols":["configOpenCloseStatement",lexer8.has("NL")?{type:"NL"}:NL]},{"name":"statement","symbols":["comment",lexer8.has("NL")?{type:"NL"}:NL]},{"name":"classStatement$ebnf$1","symbols":[lexer8.has("NL")?{type:"NL"}:NL],"postprocess":id8},{"name":"classStatement$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"classStatement$ebnf$2","symbols":["classMembers"],"postprocess":id8},{"name":"classStatement$ebnf$2","symbols":[],"postprocess":()=>null},{"name":"classStatement$ebnf$3","symbols":[lexer8.has("NL")?{type:"NL"}:NL],"postprocess":id8},{"name":"classStatement$ebnf$3","symbols":[],"postprocess":()=>null},{"name":"classStatement","symbols":[{"literal":"class"},lexer8.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,lexer8.has("L_BRACKET")?{type:"L_BRACKET"}:L_BRACKET,"classStatement$ebnf$1","classStatement$ebnf$2","classStatement$ebnf$3",lexer8.has("R_BRACKET")?{type:"R_BRACKET"}:R_BRACKET,lexer8.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const members=d[4];return{type:"addClass",name:tv(d[1]),members};}},{"name":"classStatement","symbols":[{"literal":"class"},"textInQuote",{"literal":"as"},lexer8.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,lexer8.has("NL")?{type:"NL"}:NL],"postprocess":function(d){return{type:"addClass",name:tv(d[3]),label:d[1],members:[]};}},{"name":"classStatement","symbols":[{"literal":"class"},lexer8.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,lexer8.has("NL")?{type:"NL"}:NL],"postprocess":function(d){return{type:"addClass",name:tv(d[1]),members:[]};}},{"name":"classMembers","symbols":["classMember"]},{"name":"classMembers","symbols":["annotation"]},{"name":"classMembers$subexpression$1","symbols":["annotation"]},{"name":"classMembers$subexpression$1","symbols":["classMember"]},{"name":"classMembers","symbols":["classMembers",lexer8.has("NL")?{type:"NL"}:NL,"classMembers$subexpression$1"],"postprocess":function(d){return[...d[0],...d[2]];}},{"name":"classMember$ebnf$1","symbols":["modifier"],"postprocess":id8},{"name":"classMember$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"classMember","symbols":["classMember$ebnf$1","memberLabel"],"postprocess":function(d){const modifier=d[0]?d[0]:null;return{raw:d[1],modifier};}},{"name":"words$ebnf$1","symbols":[]},{"name":"words$ebnf$1$subexpression$1","symbols":[lexer8.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{"name":"words$ebnf$1$subexpression$1","symbols":[lexer8.has("WS")?{type:"WS"}:WS]},{"name":"words$ebnf$1","symbols":["words$ebnf$1","words$ebnf$1$subexpression$1"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"words","symbols":[lexer8.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,"words$ebnf$1"],"postprocess":function(d){return tv(d[0])+d[1].map((o)=>tv(o[0])).join("");}},{"name":"memberLabel$ebnf$1","symbols":[]},{"name":"memberLabel$ebnf$1$subexpression$1","symbols":[lexer8.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{"name":"memberLabel$ebnf$1$subexpression$1","symbols":[lexer8.has("L_PAREN")?{type:"L_PAREN"}:L_PAREN8]},{"name":"memberLabel$ebnf$1$subexpression$1","symbols":[lexer8.has("R_PAREN")?{type:"R_PAREN"}:R_PAREN8]},{"name":"memberLabel$ebnf$1$subexpression$1","symbols":[lexer8.has("COLON")?{type:"COLON"}:COLON]},{"name":"memberLabel$ebnf$1$subexpression$1","symbols":[lexer8.has("WS")?{type:"WS"}:WS]},{"name":"memberLabel$ebnf$1","symbols":["memberLabel$ebnf$1","memberLabel$ebnf$1$subexpression$1"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"memberLabel","symbols":[lexer8.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,"memberLabel$ebnf$1"],"postprocess":function(d){return tv(d[0])+d[1].map((o)=>tv(o[0])).join("");}},{"name":"modifier$subexpression$1","symbols":[{"literal":"static"}]},{"name":"modifier$subexpression$1","symbols":[{"literal":"abstract"}]},{"name":"modifier","symbols":[lexer8.has("L_BRACKET")?{type:"L_BRACKET"}:L_BRACKET,"modifier$subexpression$1",lexer8.has("R_BRACKET")?{type:"R_BRACKET"}:R_BRACKET],"postprocess":function(d){return tv(d[1][0]);}},{"name":"memberLabelStatement","symbols":[lexer8.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,lexer8.has("COLON")?{type:"COLON"}:COLON,"classMember",lexer8.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const className=tv(d[0]);return{type:"addClassMember",className,member:d[2]};}},{"name":"relationStatement$ebnf$1","symbols":["textInQuote"],"postprocess":id8},{"name":"relationStatement$ebnf$1","symbols":[],"postprocess":()=>null},{"name":"relationStatement$ebnf$2","symbols":["textInQuote"],"postprocess":id8},{"name":"relationStatement$ebnf$2","symbols":[],"postprocess":()=>null},{"name":"relationStatement$ebnf$3$subexpression$1$ebnf$1","symbols":[]},{"name":"relationStatement$ebnf$3$subexpression$1$ebnf$1","symbols":["relationStatement$ebnf$3$subexpression$1$ebnf$1",lexer8.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"relationStatement$ebnf$3$subexpression$1$ebnf$2","symbols":[]},{"name":"relationStatement$ebnf$3$subexpression$1$ebnf$2","symbols":["relationStatement$ebnf$3$subexpression$1$ebnf$2",lexer8.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"relationStatement$ebnf$3$subexpression$1","symbols":["relationStatement$ebnf$3$subexpression$1$ebnf$1",lexer8.has("COLON")?{type:"COLON"}:COLON,"relationStatement$ebnf$3$subexpression$1$ebnf$2","words"]},{"name":"relationStatement$ebnf$3","symbols":["relationStatement$ebnf$3$subexpression$1"],"postprocess":id8},{"name":"relationStatement$ebnf$3","symbols":[],"postprocess":()=>null},{"name":"relationStatement","symbols":["classInRelation","relationStatement$ebnf$1","relation","relationStatement$ebnf$2","classInRelation","relationStatement$ebnf$3"],"postprocess":function(d){let relationRaw={type:d[2],dashed:false,reversed:false};let labelLeft=d[1];let labelRight=d[3];if(d[2].type){relationRaw=d[2];}
let label="";if(d[5]){label=d[5][3];}
return{type:"addRelation",left:d[0].name,right:d[4].name,relationRaw:d[2],labelLeft,labelRight,label,dashed:Boolean(relationRaw.dashed),reversed:Boolean(relationRaw.reversed)};}},{"name":"classInRelation","symbols":[lexer8.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT],"postprocess":(d)=>({name:tv(d[0])})},{"name":"relation","symbols":[{"literal":"<|--"}],"postprocess":(d)=>{return{type:Relation.INHERITANCE,reversed:true};}},{"name":"relation","symbols":[{"literal":"<|.."}],"postprocess":(d)=>{return{type:Relation.INHERITANCE,reversed:true,dashed:true};}},{"name":"relation","symbols":[{"literal":"--|>"}],"postprocess":(d)=>{return{type:Relation.INHERITANCE};}},{"name":"relation","symbols":[{"literal":"..|>"}],"postprocess":(d)=>{return{type:Relation.INHERITANCE,dashed:true};}},{"name":"relation","symbols":[{"literal":"*--"}],"postprocess":(d)=>{return{type:Relation.COMPOSITION,reversed:true};}},{"name":"relation","symbols":[{"literal":"*.."}],"postprocess":(d)=>{return{type:Relation.COMPOSITION,reversed:true,dashed:true};}},{"name":"relation","symbols":[{"literal":"--*"}],"postprocess":(d)=>{return{type:Relation.COMPOSITION};}},{"name":"relation","symbols":[{"literal":"..*"}],"postprocess":(d)=>{return{type:Relation.COMPOSITION,dashed:true};}},{"name":"relation","symbols":[{"literal":"o--"}],"postprocess":(d)=>{return{type:Relation.AGGREGATION,reversed:true};}},{"name":"relation","symbols":[{"literal":"o.."}],"postprocess":(d)=>{return{type:Relation.AGGREGATION,reversed:true,dashed:true};}},{"name":"relation","symbols":[{"literal":"--o"}],"postprocess":(d)=>{return{type:Relation.AGGREGATION};}},{"name":"relation","symbols":[{"literal":"..o"}],"postprocess":(d)=>{return{type:Relation.AGGREGATION,dashed:true};}},{"name":"relation","symbols":[{"literal":"-->"}],"postprocess":(d)=>{return{type:Relation.ASSOCIATION};}},{"name":"relation","symbols":[{"literal":"..>"}],"postprocess":(d)=>{return{type:Relation.ASSOCIATION,dashed:true};}},{"name":"relation","symbols":[{"literal":"<--"}],"postprocess":(d)=>{return{type:Relation.ASSOCIATION,reversed:true};}},{"name":"relation","symbols":[{"literal":"<.."}],"postprocess":(d)=>{return{type:Relation.ASSOCIATION,reversed:true,dashed:true};}},{"name":"relation","symbols":[{"literal":"--"}],"postprocess":(d)=>{return{type:Relation.LINK};}},{"name":"relation","symbols":[{"literal":".."}],"postprocess":(d)=>{return{type:Relation.LINK,dashed:true};}},{"name":"classAnnotationStatement","symbols":["annotation","classInRelation"],"postprocess":function(d){return{type:"addAnnotation",annotation:d[0].annotation,className:d[1].name};}},{"name":"annotation","symbols":[lexer8.has("TEXT_WITH_ANGLE_BRACKETS")?{type:"TEXT_WITH_ANGLE_BRACKETS"}:TEXT_WITH_ANGLE_BRACKETS],"postprocess":function(d){const v=tv(d[0]);return{type:"annotation",annotation:v.replace(/\<\<(.*)\>\>/,"$1").trim()};}},{"name":"textInQuote","symbols":[lexer8.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD],"postprocess":function(d){return getQuotedWord(d[0]);}},{"name":"placement","symbols":[lexer8.has("LEFT_OF")?{type:"LEFT_OF"}:LEFT_OF],"postprocess":(d)=>"LEFT_OF"},{"name":"placement","symbols":[lexer8.has("RIGHT_OF")?{type:"RIGHT_OF"}:RIGHT_OF],"postprocess":(d)=>"RIGHT_OF"},{"name":"placement","symbols":[lexer8.has("TOP_OF")?{type:"TOP_OF"}:TOP_OF],"postprocess":(d)=>"TOP_OF"},{"name":"placement","symbols":[lexer8.has("BOTTOM_OF")?{type:"BOTTOM_OF"}:BOTTOM_OF],"postprocess":(d)=>"BOTTOM_OF"},{"name":"multilineNoteText$ebnf$1","symbols":[]},{"name":"multilineNoteText$ebnf$1$subexpression$1","symbols":[lexer8.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{"name":"multilineNoteText$ebnf$1$subexpression$1","symbols":[lexer8.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD]},{"name":"multilineNoteText$ebnf$1$subexpression$1","symbols":[lexer8.has("NL")?{type:"NL"}:NL]},{"name":"multilineNoteText$ebnf$1","symbols":["multilineNoteText$ebnf$1","multilineNoteText$ebnf$1$subexpression$1"],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"multilineNoteText","symbols":["multilineNoteText$ebnf$1",lexer8.has("END_NOTE")?{type:"END_NOTE"}:END_NOTE],"postprocess":function(d){const v=d[0].map((l)=>{return l.map((o)=>tv(o));}).join("");return v;}},{"name":"noteStatement$subexpression$1","symbols":[{"literal":"note"}]},{"name":"noteStatement$subexpression$1","symbols":[lexer8.has("NOTE")?{type:"NOTE"}:NOTE]},{"name":"noteStatement$ebnf$1","symbols":[]},{"name":"noteStatement$ebnf$1","symbols":["noteStatement$ebnf$1",lexer8.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"noteStatement$ebnf$2","symbols":[]},{"name":"noteStatement$ebnf$2","symbols":["noteStatement$ebnf$2",lexer8.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"noteStatement","symbols":["noteStatement$subexpression$1","noteStatement$ebnf$1","placement",lexer8.has("WS")?{type:"WS"}:WS,lexer8.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,"noteStatement$ebnf$2",lexer8.has("COLON")?{type:"COLON"}:COLON,"words",lexer8.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const text=d[7].trim();return{type:"note",placement:d[2],target:tv(d[4]).trim(),text};}},{"name":"noteStatement$subexpression$2","symbols":[{"literal":"note"}]},{"name":"noteStatement$subexpression$2","symbols":[lexer8.has("START_NOTE")?{type:"START_NOTE"}:START_NOTE]},{"name":"noteStatement$ebnf$3","symbols":[]},{"name":"noteStatement$ebnf$3","symbols":["noteStatement$ebnf$3",lexer8.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"noteStatement$ebnf$4","symbols":[]},{"name":"noteStatement$ebnf$4","symbols":["noteStatement$ebnf$4",lexer8.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"noteStatement$ebnf$5","symbols":[]},{"name":"noteStatement$ebnf$5","symbols":["noteStatement$ebnf$5",lexer8.has("WS")?{type:"WS"}:WS],"postprocess":(d)=>d[0].concat([d[1]])},{"name":"noteStatement","symbols":["noteStatement$subexpression$2","noteStatement$ebnf$3","placement","noteStatement$ebnf$4",lexer8.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,"noteStatement$ebnf$5",lexer8.has("NL")?{type:"NL"}:NL,"multilineNoteText",lexer8.has("NL")?{type:"NL"}:NL],"postprocess":function(d){const text=d[7];return{type:"note",placement:d[2],target:tv(d[4]).trim(),text};}}],ParserStart:"start",ParserOptions:{skipUnmatchSymbols:[lexer8.has("WS")?{type:"WS"}:WS]}};var classDiagram_default=grammar8;var parse8=genParserWithRules(classDiagram_default,{dedupeAmbigousResults:true,postProcess(results){db_default7.apply(results);return results;}});var classDiagram={pattern:/^\s*classDiagram/,parser:{parse(text){parse8(text);return db_default7.getDiagramIR();}},artist:artist_default8,configKey:"class",clear(){db_default7.clear();}};var HEADER_ELLIPSE_RY=12;symbolRegistry.register("database",{type:"factory",modes:["container","icon"],symbolMargin:{top:HEADER_ELLIPSE_RY*2},factory(contentArea,{mode}){if(mode==="container"){return makeDatabaseContainer(contentArea);}
return makeDatabaseIcon(contentArea);},styleMark(mark,def,attrs){mark.children.forEach((child)=>{safeAssign(child.attrs,attrs);});}});function makeDatabaseIcon({width:width2,height,x:x2,y:y2}){const rx=width2/2;const ry=HEADER_ELLIPSE_RY;const halfHeight=height/2;const ellipseY=y2-halfHeight+ry;const lineBottomY=y2+halfHeight-ry;const mark=makeMark("group",{},{children:[makeMark("path",{path:[["M",x2-rx,ellipseY],["L",x2-rx,lineBottomY],["A",rx,ry,0,1,0,x2+rx,lineBottomY],["L",x2+rx,ellipseY]
],stroke:PALETTE.normalDark}),makeMark("ellipse",{x:x2,y:ellipseY,cx:x2,cy:y2,rx,ry,stroke:PALETTE.normalDark})]});return makeMark("symbol",{},{mark});}
function makeDatabaseContainer({width:width2,height,x:x2,y:y2}){const rx=width2/2;const ry=12;const halfHeight=height/2;const ellipseY=y2-halfHeight-ry;const lineBottomY=y2+halfHeight;const mark=makeMark("group",{},{children:[makeMark("path",{path:[["M",x2-rx,ellipseY],["L",x2-rx,lineBottomY],["A",rx,ry,0,1,0,x2+rx,lineBottomY],["L",x2+rx,ellipseY]
],stroke:PALETTE.normalDark}),makeMark("ellipse",{x:x2,y:ellipseY,cx:x2,cy:y2,rx,ry,stroke:PALETTE.normalDark})]});const sym=makeMark("symbol",{},{mark,symbolBounds:{left:-rx,right:rx,top:-(halfHeight+2*ry),bottom:halfHeight+ry,width:width2,height:height+ry*3}});return sym;}
var HEADER_HEIGHT=12;symbolRegistry.register("package",{type:"factory",symbolMargin:{top:HEADER_HEIGHT},factory({width:width2,height,x:x2,y:y2}){const halfHeight=height/2;const halfWidth=width2/2;const leftX=x2-width2/2;const topY=y2-halfHeight;const HEADER_HEIGHT2=12;const mark=makeMark("group",{},{children:[makeMark("path",{path:[["M",leftX,topY],["L",leftX,topY-HEADER_HEIGHT2],["L",leftX+width2/2,topY-HEADER_HEIGHT2],["L",leftX+width2/2+4,topY]
]}),makeMark("rect",{x:leftX,y:topY,width:width2,height})]});const sym=makeMark("symbol",{},{mark,symbolBounds:{left:-halfWidth,right:halfWidth,top:-HEADER_HEIGHT2-halfHeight,bottom:halfHeight,width:width2,height:height+HEADER_HEIGHT2}});return sym;},styleMark(mark,def,attrs){mark.children.forEach((child)=>{safeAssign(child.attrs,attrs);});}});symbolRegistry.register("folder",symbolRegistry.get("package"));var PROJECT_X=12;var PROJECT_Y=12;symbolRegistry.register("node",{type:"factory",modes:["container","icon"],symbolMargin:{top:PROJECT_Y,right:PROJECT_X},factory(contentArea,{mode}){if(mode==="icon"){const height=contentArea.height-PROJECT_Y;const newArea={x:contentArea.x,y:contentArea.y+PROJECT_Y/2,width:clamp(contentArea.width-PROJECT_X,contentArea.width*0.6,height),height};return makeNode(newArea);}
return makeNode(contentArea);},styleMark(mark,def,attrs){mark.children.forEach((child)=>{safeAssign(child.attrs,attrs);});}});function makeNode(contentArea){const{width:width2,height,x:x2,y:y2}=contentArea;const halfHeight=height/2;const halfWidth=width2/2;const leftX=x2-width2/2;const topY=y2-halfHeight;const projectX=PROJECT_X;const projectY=PROJECT_Y;const mark=makeMark("group",{},{children:[makeMark("path",{lineJoin:"round",path:[["M",leftX,topY],["L",leftX+projectX,topY-projectY],["L",leftX+projectX+width2,topY-projectY],["L",leftX+width2,topY],["M",leftX+projectX+width2,topY-projectY],["L",leftX+projectX+width2,topY-projectY+height],["L",leftX+width2,topY+height],["L",leftX+width2,topY]]}),makeMark("rect",{x:leftX,y:topY,width:width2,height})]});const sym=makeMark("symbol",{},{mark,symbolBounds:{left:-halfWidth,right:halfWidth,top:-projectY-halfHeight,bottom:halfHeight,width:width2+projectY,height:height+projectY}});return sym;}
symbolRegistry.register("cloud",{type:"factory",symbolMargin:{top:20},factory(contentArea,{mode}){if(mode==="container"){return makeCloudContainer(contentArea);}
return makeCloudIcon(contentArea);},styleMark(mark,def,attrs){mark.children.forEach((child)=>{safeAssign(child.attrs,attrs);});}});function makeCloudIcon({width:width2,height,x:x2,y:y2}){const leftX=x2-width2/2;const topY=y2-height/2;const CLOUD_ICON_HEIGHT=24;const mark=makeMark("group",{},{children:[makeMark("path",{lineJoin:"round",lineWidth:3,path:[`M ${leftX}${topY-CLOUD_ICON_HEIGHT}`,"m 23.2 12.1 c -0.8 -4.1 -4.4 -7.3 -8.8 -7.3 c -3.5 0 -6.5 2 -8 4.9 c -3.6 0.4 -6.4 3.4 -6.4 7.1 c 0 4 3.2 7.2 7.2 7.2 h 15.6 c 3.3 0 6 -2.7 6 -6 c 0 -3.2 -2.5 -5.8 -5.6 -5.9 z"].join(" ")})]});return makeMark("symbol",{},{mark});}
function makeCloudContainer({width:width2,height,x:x2,y:y2}){const halfWidth=width2/2;const ry=height/2;const rx=halfWidth+ry/Math.sqrt(3);const leftX=x2-width2/2;const topY=y2-height/2;const CLOUD_ICON_HEIGHT=24;const mark=makeMark("group",{},{children:[makeMark("path",{lineJoin:"round",lineWidth:3,path:[`M ${leftX}${topY-CLOUD_ICON_HEIGHT+4}`,"m 23.2 12.1 c -0.8 -4.1 -4.4 -7.3 -8.8 -7.3 c -3.5 0 -6.5 2 -8 4.9 c -3.6 0.4 -6.4 3.4 -6.4 7.1 c 0 4 3.2 7.2 7.2 7.2 h 15.6 c 3.3 0 6 -2.7 6 -6 c 0 -3.2 -2.5 -5.8 -5.6 -5.9 z"].join(" ")}),makeMark("rect",{x:leftX,y:topY,width:width2,height})]});const outerWidth=rx;const outerHeight=height;const sym=makeMark("symbol",{},{mark,symbolBounds:{left:-outerWidth/2,right:outerWidth/2,top:-outerHeight/2,bottom:outerHeight/2,width:outerWidth,height:outerHeight}});return sym;}
symbolRegistry.register("actor",{type:"factory",modes:["icon"],factory(contentArea){return makeIcon(contentArea);},styleMark(mark,def,attrs){mark.children.forEach((child)=>{safeAssign(child.attrs,attrs);if(child.type==="path"){child.attrs.fill=null;}
child.attrs.lineWidth=Math.max(attrs.lineWidth||0,1.5);});}});function makeIcon({width:width2,height,x:x2,y:y2}){const radius=Math.min(width2,height)/5;const topY=y2-height/2;const leftX=x2-radius*1.5;const rightX=x2+radius*1.5;const bodyHeight=radius*1;const legHeight=radius*2;const mark=makeMark("group",{},{children:[makeMark("circle",{r:radius,x:x2,y:topY+radius,width:width2,height}),makeMark("path",{path:[["M",leftX,y2+radius/3],["L",rightX,y2+radius/3],["M",x2,y2-radius/2],["L",x2,y2+bodyHeight],["l",-radius,legHeight],["l",radius,-legHeight],["l",radius,legHeight]]})]});const sym=makeMark("symbol",{},{mark});return sym;}
symbolRegistry.register("ellipse",{type:"factory",factory(contentArea,{mode}){if(mode==="container"){return makeEllipseContainer(contentArea);}},styleMark(mark,def,attrs){mark.children.forEach((child)=>{safeAssign(child.attrs,attrs);});}});function makeEllipseContainer({width:width2,height,x:x2,y:y2}){const halfWidth=width2/2;const padX=10;const padY=8;const rx=halfWidth+padX;const ry=height/2+padY;const mark=makeMark("group",{},{children:[makeMark("ellipse",{rx,ry,x:x2,y:y2,cx:x2,cy:y2})]});const leftX=x2-padX;const rightX=x2+padX;const outerWidth=width2+2*padX;const outerHeight=height+2*padY;const sym=makeMark("symbol",{},{mark,symbolBounds:{left:leftX,right:rightX,top:y2-ry,bottom:y2+ry,width:outerWidth,height:outerHeight}});return sym;}
symbolRegistry.register("circle",{type:"factory",factory(contentArea,{mode}){if(mode==="container"){return makeContainer(contentArea);}},styleMark(mark,def,attrs){mark.children.forEach((child)=>{safeAssign(child.attrs,attrs);});}});function makeContainer({width:width2,height,x:x2,y:y2}){const halfWidth=width2/2;const pad2=10;const r=halfWidth+pad2;const mark=makeMark("group",{},{children:[makeMark("circle",{r,x:x2,y:y2})]});const leftX=x2-pad2;const rightX=x2+pad2;const outerWidth=width2+2*pad2;const outerHeight=height+2*pad2;const sym=makeMark("symbol",{},{mark,symbolBounds:{left:leftX,right:rightX,top:y2-r,bottom:y2+r,width:outerWidth,height:outerHeight}});return sym;}
symbolRegistry.register("diamond",{type:"factory",factory(contentArea,{mode}){if(mode==="container"){return makeContainer2(contentArea);}
return makeIcon2(contentArea);},styleMark(mark,def,attrs){mark.children.forEach((child)=>{safeAssign(child.attrs,attrs);});}});function makeContainer2({width:width2,height,x:x2,y:y2}){const padY=6;const ry=height+padY;const rx=ry*width2/height/2;const padX=rx-width2/2;const mark=makeMark("group",{},{children:[makeMark("path",{path:[["M",x2,y2],["M",x2-rx,y2],["L",x2,y2+ry],["L",x2+rx,y2],["L",x2,y2-ry],["Z"]]})]});const leftX=x2-padX;const rightX=x2+padX;const outerWidth=rx*2;const outerHeight=ry*2;const sym=makeMark("symbol",{},{mark,symbolBounds:{left:leftX,right:rightX,top:y2-ry,bottom:y2+ry,width:outerWidth,height:outerHeight}});return sym;}
function makeIcon2({width:width2,height,x:x2,y:y2}){const ry=height/2;const rx=width2/2;const mark=makeMark("group",{},{children:[makeMark("path",{path:[["M",x2,y2],["m",-rx,0],["l",rx,ry],["l",rx,-ry],["l",-rx,-ry],["Z"]]})]});const sym=makeMark("symbol",{},{mark});return sym;}
var DIAGRAMS={erDiagram,sequenceDiagram,componentDiagram,activityDiagram,mindmap,gantt,dotDiagram,classDiagram};var Stack3=class{constructor(){this.list=[];}
top(){return this.list[this.list.length-1];}
push(v){this.list.push(v);}
pop(){return this.list.pop();}
clear(){this.list=[];}};var noop3=()=>void 0;var GraphicEvent=class{constructor(gEvent){this.type=gEvent.type;this.gEvent=gEvent;}
get originEvent(){return this.gEvent.originalEvent;}
get x(){return this.gEvent.x;}
get y(){return this.gEvent.y;}
get clientX(){return this.gEvent.clientX;}
get clientY(){return this.gEvent.clientY;}};function traverseScene(mark,visitors,actions){const visitor=visitors[mark.type]||visitors.default;let visitorEnter;let visitorExit;if(visitor){if(typeof visitor==="function"){visitorEnter=visitor;}else{visitorEnter=visitor.enter;visitorExit=visitor.exit;}}
if(visitorEnter){visitorEnter(mark,actions);}
if(mark.type==="group"&&mark.children){mark.children.forEach((child)=>{traverseScene(child,visitors,actions);});}else if(mark.type==="symbol"){traverseScene(mark.mark,visitors,actions);}
if(visitorExit){visitorExit(mark,actions);}}
var BaseRenderer=class{constructor(ir){this.ir=ir;this.container=null;this.shapeToMarkMap=new WeakMap();}
setContainer(c){if(this.gcvs){this.gcvs.destroy();}
this.container=c;const canvasCls=this.getCanvasClass();const gcvs=new canvasCls({container:c,width:this.ir.width,height:this.ir.height});this.gcvs=gcvs;return this;}
getRootElement(){if(!this.gcvs)
return;return this.gcvs.cfg.el;}
addBgShape(){var _a;if(this.ir.bgColor){(_a=this.gcvs)===null||_a===void 0?void 0:_a.addShape("rect",{attrs:{width:this.ir.width,height:this.ir.height,fill:this.ir.bgColor}});}}
renderGCanvas(){const gcvs=this.gcvs;if(!gcvs)
return;gcvs.clear();const self2=this;this.addBgShape();const groupStack=new Stack3();const actions={addToCurrentGroup(mark){const group=groupStack.top();const container=group||gcvs;const shapeAttrs=self2.preProcessMarkAttrs(mark);const shape=container.addShape(mark.type,{attrs:shapeAttrs});self2.onShapeAdd(shape,mark);return shape;},applyMarkPostProcess(mark,shape){if(mark.matrix){shape.setMatrix(mark.matrix);}}};traverseScene(this.ir.mark,{group:{enter(mark){const prevGroup=groupStack.top();const container=prevGroup||gcvs;const group=container.addGroup();groupStack.push(group);self2.onShapeAdd(group,mark);actions.applyMarkPostProcess(mark,group);},exit(){groupStack.pop();}},symbol:{enter(){}},default(mark){const shape=actions.addToCurrentGroup(mark);actions.applyMarkPostProcess(mark,shape);}},actions);}
on(name,handler){if(!this.gcvs)
return noop3;const gcvs=this.gcvs;const fn=(gEvent)=>{const mark=this.shapeToMarkMap.get(gEvent.shape);const markPath=gEvent.propagationPath.reduce((acc,shape)=>{const m=this.shapeToMarkMap.get(shape);if(m){acc.push(m);}
return acc;},[]);const event=new GraphicEvent(gEvent);event.mark=mark;event.markPath=markPath;handler(event);};gcvs.on(name,fn);return()=>{gcvs.off(name,fn);};}
preProcessMarkAttrs(mark){return mark.attrs;}
onShapeAdd(shape,mark){this.shapeToMarkMap.set(shape,mark);}
render(){this.renderGCanvas();}};var shape_exports={};__export(shape_exports,{Base:()=>base_default2,Circle:()=>circle_default2,Dom:()=>dom_default,Ellipse:()=>ellipse_default3,Image:()=>image_default,Line:()=>line_default4,Marker:()=>marker_default,Path:()=>path_default3,Polygon:()=>polygon_default3,Polyline:()=>polyline_default3,Rect:()=>rect_default2,Text:()=>text_default2});var extendStatics=function(d,b10){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d2,b11){d2.__proto__=b11;}||function(d2,b11){for(var p in b11)
if(Object.prototype.hasOwnProperty.call(b11,p))
d2[p]=b11[p];};return extendStatics(d,b10);};function __extends(d,b10){if(typeof b10!=="function"&&b10!==null)
throw new TypeError("Class extends value "+String(b10)+" is not a constructor or null");extendStatics(d,b10);function __(){this.constructor=d;}
d.prototype=b10===null?Object.create(b10):(__.prototype=b10.prototype,new __());}
var __assign=function(){__assign=Object.assign||function __assign2(t){for(var s,i2=1,n2=arguments.length;i2<n2;i2++){s=arguments[i2];for(var p in s)
if(Object.prototype.hasOwnProperty.call(s,p))
t[p]=s[p];}
return t;};return __assign.apply(this,arguments);};function __decorate(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if(typeof Reflect==="object"&&typeof Reflect.decorate==="function")
r=Reflect.decorate(decorators,target,key,desc);else
for(var i2=decorators.length-1;i2>=0;i2--)
if(d=decorators[i2])
r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;return c>3&&r&&Object.defineProperty(target,key,r),r;}
function __spreadArrays(){for(var s=0,i2=0,il=arguments.length;i2<il;i2++)
s+=arguments[i2].length;for(var r=Array(s),k=0,i2=0;i2<il;i2++)
for(var a=arguments[i2],j=0,jl=a.length;j<jl;j++,k++)
r[k]=a[j];return r;}
var isArrayLike3=function(value){return value!==null&&typeof value!=="function"&&isFinite(value.length);};var is_array_like_default=isArrayLike3;var toString3={}.toString;var isType=function(value,type){return toString3.call(value)==="[object "+type+"]";};var is_type_default=isType;var is_function_default=function(value){return is_type_default(value,"Function");};var isNil=function(value){return value===null||value===void 0;};var is_nil_default=isNil;var is_array_default=function(value){return Array.isArray?Array.isArray(value):is_type_default(value,"Array");};var is_object_default=function(value){var type=typeof value;return value!==null&&type==="object"||type==="function";};function each(elements,func){if(!elements){return;}
var rst;if(is_array_default(elements)){for(var i2=0,len2=elements.length;i2<len2;i2++){rst=func(elements[i2],i2);if(rst===false){break;}}}else if(is_object_default(elements)){for(var k in elements){if(elements.hasOwnProperty(k)){rst=func(elements[k],k);if(rst===false){break;}}}}}
var each_default=each;var isObjectLike3=function(value){return typeof value==="object"&&value!==null;};var is_object_like_default=isObjectLike3;var max_default=function(arr2){if(!is_array_default(arr2)){return void 0;}
return arr2.reduce(function(prev,curr){return Math.max(prev,curr);},arr2[0]);};var min_default=function(arr2){if(!is_array_default(arr2)){return void 0;}
return arr2.reduce(function(prev,curr){return Math.min(prev,curr);},arr2[0]);};var arrPrototype=Array.prototype;var splice3=arrPrototype.splice;var indexOf=arrPrototype.indexOf;var splice4=Array.prototype.splice;var is_string_default=function(str3){return is_type_default(str3,"String");};var isNumber2=function(value){return is_type_default(value,"Number");};var is_number_default=isNumber2;var isInteger=Number.isInteger?Number.isInteger:function(num){return is_number_default(num)&&num%1===0;};var PRECISION=1e-5;function isNumberEqual(a,b10,precision){if(precision===void 0){precision=PRECISION;}
return Math.abs(a-b10)<precision;}
var mod=function(n2,m){return(n2%m+m)%m;};var mod_default=mod;var DEGREE=180/Math.PI;var RADIAN=Math.PI/180;var toRadian=function(degree2){return RADIAN*degree2;};var to_radian_default=toRadian;var values3=Object.values?function(obj){return Object.values(obj);}:function(obj){var result=[];each_default(obj,function(value,key){if(!(is_function_default(obj)&&key==="prototype")){result.push(value);}});return result;};var values_default=values3;var to_string_default=function(value){if(is_nil_default(value))
return"";return value.toString();};var upperFirst=function(value){var str3=to_string_default(value);return str3.charAt(0).toUpperCase()+str3.substring(1);};var upper_first_default=upperFirst;var toString4={}.toString;var objectProto3=Object.prototype;function _mix(dist2,obj){for(var key in obj){if(obj.hasOwnProperty(key)&&key!=="constructor"&&obj[key]!==void 0){dist2[key]=obj[key];}}}
function mix(dist2,src1,src2,src3){if(src1)
_mix(dist2,src1);if(src2)
_mix(dist2,src2);if(src3)
_mix(dist2,src3);return dist2;}
var memoize_default=function(f,resolver){if(!is_function_default(f)){throw new TypeError("Expected a function");}
var memoized=function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}
var key=resolver?resolver.apply(this,args):args[0];var cache2=memoized.cache;if(cache2.has(key)){return cache2.get(key);}
var result=f.apply(this,args);cache2.set(key,result);return result;};memoized.cache=new Map();return memoized;};var isEqual=function(value,other){if(value===other){return true;}
if(!value||!other){return false;}
if(is_string_default(value)||is_string_default(other)){return false;}
if(is_array_like_default(value)||is_array_like_default(other)){if(value.length!==other.length){return false;}
var rst=true;for(var i2=0;i2<value.length;i2++){rst=isEqual(value[i2],other[i2]);if(!rst){break;}}
return rst;}
if(is_object_like_default(value)||is_object_like_default(other)){var valueKeys=Object.keys(value);var otherKeys=Object.keys(other);if(valueKeys.length!==otherKeys.length){return false;}
var rst=true;for(var i2=0;i2<valueKeys.length;i2++){rst=isEqual(value[valueKeys[i2]],other[valueKeys[i2]]);if(!rst){break;}}
return rst;}
return false;};var is_equal_default=isEqual;var to_array_default=function(value){return is_array_like_default(value)?Array.prototype.slice.call(value):[];};var map3={};var unique_id_default=function(prefix){prefix=prefix||"g";if(!map3[prefix]){map3[prefix]=1;}else{map3[prefix]+=1;}
return prefix+map3[prefix];};var noop_default=function(){};var ctx;var measure_text_width_default=memoize_default(function(text,font){if(font===void 0){font={};}
var fontSize2=font.fontSize,fontFamily2=font.fontFamily,fontWeight=font.fontWeight,fontStyle=font.fontStyle,fontVariant=font.fontVariant;if(!ctx){ctx=document.createElement("canvas").getContext("2d");}
ctx.font=[fontStyle,fontVariant,fontWeight,fontSize2+"px",fontFamily2].join(" ");return ctx.measureText(is_string_default(text)?text:"").width;},function(text,font){if(font===void 0){font={};}
return __spreadArrays([text],values_default(font)).join("");});var default_1=(function(){function default_12(){this.map={};}
default_12.prototype.has=function(key){return this.map[key]!==void 0;};default_12.prototype.get=function(key,def){var v=this.map[key];return v===void 0?def:v;};default_12.prototype.set=function(key,value){this.map[key]=value;};default_12.prototype.clear=function(){this.map={};};default_12.prototype.delete=function(key){delete this.map[key];};default_12.prototype.size=function(){return Object.keys(this.map).length;};return default_12;}());var SPACES="	\n\v\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029";var PATH_COMMAND=new RegExp("([a-z])["+SPACES+",]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?["+SPACES+"]*,?["+SPACES+"]*)+)","ig");var PATH_VALUES=new RegExp("(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)["+SPACES+"]*,?["+SPACES+"]*","ig");var parsePathString=function(pathString){if(!pathString){return null;}
if(is_array_default(pathString)){return pathString;}
var paramCounts={a:7,c:6,o:2,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,u:3,z:0};var data=[];String(pathString).replace(PATH_COMMAND,function(a,b10,c){var params=[];var name=b10.toLowerCase();c.replace(PATH_VALUES,function(a2,b11){b11&&params.push(+b11);});if(name==="m"&&params.length>2){data.push([b10].concat(params.splice(0,2)));name="l";b10=b10==="m"?"l":"L";}
if(name==="o"&&params.length===1){data.push([b10,params[0]]);}
if(name==="r"){data.push([b10].concat(params));}else{while(params.length>=paramCounts[name]){data.push([b10].concat(params.splice(0,paramCounts[name])));if(!paramCounts[name]){break;}}}
return pathString;});return data;};var isEqual2=function(obj1,obj2){if(obj1.length!==obj2.length){return false;}
var result=true;each_default(obj1,function(item,i2){if(item!==obj2[i2]){result=false;return false;}});return result;};function getMinDiff(del,add3,modify){var type=null;var min4=modify;if(add3<min4){min4=add3;type="add";}
if(del<min4){min4=del;type="del";}
return{type,min:min4};}
var levenshteinDistance=function(source,target){var sourceLen=source.length;var targetLen=target.length;var sourceSegment;var targetSegment;var temp=0;if(sourceLen===0||targetLen===0){return null;}
var dist2=[];for(var i2=0;i2<=sourceLen;i2++){dist2[i2]=[];dist2[i2][0]={min:i2};}
for(var j=0;j<=targetLen;j++){dist2[0][j]={min:j};}
for(var i2=1;i2<=sourceLen;i2++){sourceSegment=source[i2-1];for(var j=1;j<=targetLen;j++){targetSegment=target[j-1];if(isEqual2(sourceSegment,targetSegment)){temp=0;}else{temp=1;}
var del=dist2[i2-1][j].min+1;var add3=dist2[i2][j-1].min+1;var modify=dist2[i2-1][j-1].min+temp;dist2[i2][j]=getMinDiff(del,add3,modify);}}
return dist2;};var fillPathByDiff=function(source,target){var diffMatrix=levenshteinDistance(source,target);var sourceLen=source.length;var targetLen=target.length;var changes=[];var index2=1;var minPos=1;if(diffMatrix[sourceLen][targetLen].min!==sourceLen){for(var i2=1;i2<=sourceLen;i2++){var min4=diffMatrix[i2][i2].min;minPos=i2;for(var j=index2;j<=targetLen;j++){if(diffMatrix[i2][j].min<min4){min4=diffMatrix[i2][j].min;minPos=j;}}
index2=minPos;if(diffMatrix[i2][index2].type){changes.push({index:i2-1,type:diffMatrix[i2][index2].type});}}
for(var i2=changes.length-1;i2>=0;i2--){index2=changes[i2].index;if(changes[i2].type==="add"){source.splice(index2,0,[].concat(source[index2]));}else{source.splice(index2,1);}}}
sourceLen=source.length;var diff=targetLen-sourceLen;if(sourceLen<targetLen){for(var i2=0;i2<diff;i2++){if(source[sourceLen-1][0]==="z"||source[sourceLen-1][0]==="Z"){source.splice(sourceLen-2,0,source[sourceLen-2]);}else{source.push(source[sourceLen-1]);}
sourceLen+=1;}}
return source;};function _splitPoints(points,former,count){var result=[].concat(points);var index2;var t=1/(count+1);var formerEnd=_getSegmentPoints(former)[0];for(var i2=1;i2<=count;i2++){t*=i2;index2=Math.floor(points.length*t);if(index2===0){result.unshift([formerEnd[0]*t+points[index2][0]*(1-t),formerEnd[1]*t+points[index2][1]*(1-t)]);}else{result.splice(index2,0,[formerEnd[0]*t+points[index2][0]*(1-t),formerEnd[1]*t+points[index2][1]*(1-t)]);}}
return result;}
function _getSegmentPoints(segment){var points=[];switch(segment[0]){case"M":points.push([segment[1],segment[2]]);break;case"L":points.push([segment[1],segment[2]]);break;case"A":points.push([segment[6],segment[7]]);break;case"Q":points.push([segment[3],segment[4]]);points.push([segment[1],segment[2]]);break;case"T":points.push([segment[1],segment[2]]);break;case"C":points.push([segment[5],segment[6]]);points.push([segment[1],segment[2]]);points.push([segment[3],segment[4]]);break;case"S":points.push([segment[3],segment[4]]);points.push([segment[1],segment[2]]);break;case"H":points.push([segment[1],segment[1]]);break;case"V":points.push([segment[1],segment[1]]);break;default:}
return points;}
var formatPath=function(fromPath,toPath){if(fromPath.length<=1){return fromPath;}
var points;for(var i2=0;i2<toPath.length;i2++){if(fromPath[i2][0]!==toPath[i2][0]){points=_getSegmentPoints(fromPath[i2]);switch(toPath[i2][0]){case"M":fromPath[i2]=["M"].concat(points[0]);break;case"L":fromPath[i2]=["L"].concat(points[0]);break;case"A":fromPath[i2]=[].concat(toPath[i2]);fromPath[i2][6]=points[0][0];fromPath[i2][7]=points[0][1];break;case"Q":if(points.length<2){if(i2>0){points=_splitPoints(points,fromPath[i2-1],1);}else{fromPath[i2]=toPath[i2];break;}}
fromPath[i2]=["Q"].concat(points.reduce(function(arr2,i3){return arr2.concat(i3);},[]));break;case"T":fromPath[i2]=["T"].concat(points[0]);break;case"C":if(points.length<3){if(i2>0){points=_splitPoints(points,fromPath[i2-1],2);}else{fromPath[i2]=toPath[i2];break;}}
fromPath[i2]=["C"].concat(points.reduce(function(arr2,i3){return arr2.concat(i3);},[]));break;case"S":if(points.length<2){if(i2>0){points=_splitPoints(points,fromPath[i2-1],1);}else{fromPath[i2]=toPath[i2];break;}}
fromPath[i2]=["S"].concat(points.reduce(function(arr2,i3){return arr2.concat(i3);},[]));break;default:fromPath[i2]=toPath[i2];}}}
return fromPath;};var GraphEvent=(function(){function GraphEvent2(type,event){this.bubbles=true;this.target=null;this.currentTarget=null;this.delegateTarget=null;this.delegateObject=null;this.defaultPrevented=false;this.propagationStopped=false;this.shape=null;this.fromShape=null;this.toShape=null;this.propagationPath=[];this.type=type;this.name=type;this.originalEvent=event;this.timeStamp=event.timeStamp;}
GraphEvent2.prototype.preventDefault=function(){this.defaultPrevented=true;if(this.originalEvent.preventDefault){this.originalEvent.preventDefault();}};GraphEvent2.prototype.stopPropagation=function(){this.propagationStopped=true;};GraphEvent2.prototype.toString=function(){var type=this.type;return"[Event (type="+type+")]";};GraphEvent2.prototype.save=function(){};GraphEvent2.prototype.restore=function(){};return GraphEvent2;}());var graph_event_default=GraphEvent;function removeFromArray(arr2,obj){var index2=arr2.indexOf(obj);if(index2!==-1){arr2.splice(index2,1);}}
var isBrowser=typeof window!=="undefined"&&typeof window.document!=="undefined";function isParent(container,shape){if(container.isCanvas()){return true;}
var parent=shape.getParent();var isParent2=false;while(parent){if(parent===container){isParent2=true;break;}
parent=parent.getParent();}
return isParent2;}
function isAllowCapture(element){return element.cfg.visible&&element.cfg.capture;}
var Base=(function(_super){__extends(Base3,_super);function Base3(cfg){var _this=_super.call(this)||this;_this.destroyed=false;var defaultCfg=_this.getDefaultCfg();_this.cfg=mix(defaultCfg,cfg);return _this;}
Base3.prototype.getDefaultCfg=function(){return{};};Base3.prototype.get=function(name){return this.cfg[name];};Base3.prototype.set=function(name,value){this.cfg[name]=value;};Base3.prototype.destroy=function(){this.cfg={destroyed:true};this.off();this.destroyed=true;};return Base3;}(esm_default));var base_default=Base;var __spreadArray=function(to,from,pack){if(pack||arguments.length===2)
for(var i2=0,l=from.length,ar;i2<l;i2++){if(ar||!(i2 in from)){if(!ar)
ar=Array.prototype.slice.call(from,0,i2);ar[i2]=from[i2];}}
return to.concat(ar||Array.prototype.slice.call(from));};var BrowserInfo=(function(){function BrowserInfo2(name,version,os){this.name=name;this.version=version;this.os=os;this.type="browser";}
return BrowserInfo2;}());var NodeInfo=(function(){function NodeInfo2(version){this.version=version;this.type="node";this.name="node";this.os=process.platform;}
return NodeInfo2;}());var SearchBotDeviceInfo=(function(){function SearchBotDeviceInfo2(name,version,os,bot){this.name=name;this.version=version;this.os=os;this.bot=bot;this.type="bot-device";}
return SearchBotDeviceInfo2;}());var BotInfo=(function(){function BotInfo2(){this.type="bot";this.bot=true;this.name="bot";this.version=null;this.os=null;}
return BotInfo2;}());var ReactNativeInfo=(function(){function ReactNativeInfo2(){this.type="react-native";this.name="react-native";this.version=null;this.os=null;}
return ReactNativeInfo2;}());var SEARCHBOX_UA_REGEX=/alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;var SEARCHBOT_OS_REGEX=/(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/;var REQUIRED_VERSION_PARTS=3;var userAgentRules=[["aol",/AOLShield\/([0-9\._]+)/],["edge",/Edge\/([0-9\._]+)/],["edge-ios",/EdgiOS\/([0-9\._]+)/],["yandexbrowser",/YaBrowser\/([0-9\._]+)/],["kakaotalk",/KAKAOTALK\s([0-9\.]+)/],["samsung",/SamsungBrowser\/([0-9\.]+)/],["silk",/\bSilk\/([0-9._-]+)\b/],["miui",/MiuiBrowser\/([0-9\.]+)$/],["beaker",/BeakerBrowser\/([0-9\.]+)/],["edge-chromium",/EdgA?\/([0-9\.]+)/],["chromium-webview",/(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],["chrome",/(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],["phantomjs",/PhantomJS\/([0-9\.]+)(:?\s|$)/],["crios",/CriOS\/([0-9\.]+)(:?\s|$)/],["firefox",/Firefox\/([0-9\.]+)(?:\s|$)/],["fxios",/FxiOS\/([0-9\.]+)/],["opera-mini",/Opera Mini.*Version\/([0-9\.]+)/],["opera",/Opera\/([0-9\.]+)(?:\s|$)/],["opera",/OPR\/([0-9\.]+)(:?\s|$)/],["pie",/^Microsoft Pocket Internet Explorer\/(\d+\.\d+)$/],["pie",/^Mozilla\/\d\.\d+\s\(compatible;\s(?:MSP?IE|MSInternet Explorer) (\d+\.\d+);.*Windows CE.*\)$/],["netfront",/^Mozilla\/\d\.\d+.*NetFront\/(\d.\d)/],["ie",/Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],["ie",/MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],["ie",/MSIE\s(7\.0)/],["bb10",/BB10;\sTouch.*Version\/([0-9\.]+)/],["android",/Android\s([0-9\.]+)/],["ios",/Version\/([0-9\._]+).*Mobile.*Safari.*/],["safari",/Version\/([0-9\._]+).*Safari/],["facebook",/FB[AS]V\/([0-9\.]+)/],["instagram",/Instagram\s([0-9\.]+)/],["ios-webview",/AppleWebKit\/([0-9\.]+).*Mobile/],["ios-webview",/AppleWebKit\/([0-9\.]+).*Gecko\)$/],["curl",/^curl\/([0-9\.]+)$/],["searchbot",SEARCHBOX_UA_REGEX]];var operatingSystemRules=[["iOS",/iP(hone|od|ad)/],["Android OS",/Android/],["BlackBerry OS",/BlackBerry|BB10/],["Windows Mobile",/IEMobile/],["Amazon OS",/Kindle/],["Windows 3.11",/Win16/],["Windows 95",/(Windows 95)|(Win95)|(Windows_95)/],["Windows 98",/(Windows 98)|(Win98)/],["Windows 2000",/(Windows NT 5.0)|(Windows 2000)/],["Windows XP",/(Windows NT 5.1)|(Windows XP)/],["Windows Server 2003",/(Windows NT 5.2)/],["Windows Vista",/(Windows NT 6.0)/],["Windows 7",/(Windows NT 6.1)/],["Windows 8",/(Windows NT 6.2)/],["Windows 8.1",/(Windows NT 6.3)/],["Windows 10",/(Windows NT 10.0)/],["Windows ME",/Windows ME/],["Windows CE",/Windows CE|WinCE|Microsoft Pocket Internet Explorer/],["Open BSD",/OpenBSD/],["Sun OS",/SunOS/],["Chrome OS",/CrOS/],["Linux",/(Linux)|(X11)/],["Mac OS",/(Mac_PowerPC)|(Macintosh)/],["QNX",/QNX/],["BeOS",/BeOS/],["OS/2",/OS\/2/]];function detect(userAgent){if(!!userAgent){return parseUserAgent(userAgent);}
if(typeof document==="undefined"&&typeof navigator!=="undefined"&&navigator.product==="ReactNative"){return new ReactNativeInfo();}
if(typeof navigator!=="undefined"){return parseUserAgent(navigator.userAgent);}
return getNodeVersion();}
function matchUserAgent(ua){return ua!==""&&userAgentRules.reduce(function(matched,_a){var browser2=_a[0],regex=_a[1];if(matched){return matched;}
var uaMatch=regex.exec(ua);return!!uaMatch&&[browser2,uaMatch];},false);}
function parseUserAgent(ua){var matchedRule=matchUserAgent(ua);if(!matchedRule){return null;}
var name=matchedRule[0],match=matchedRule[1];if(name==="searchbot"){return new BotInfo();}
var versionParts=match[1]&&match[1].split(".").join("_").split("_").slice(0,3);if(versionParts){if(versionParts.length<REQUIRED_VERSION_PARTS){versionParts=__spreadArray(__spreadArray([],versionParts,true),createVersionParts(REQUIRED_VERSION_PARTS-versionParts.length),true);}}else{versionParts=[];}
var version=versionParts.join(".");var os=detectOS(ua);var searchBotMatch=SEARCHBOT_OS_REGEX.exec(ua);if(searchBotMatch&&searchBotMatch[1]){return new SearchBotDeviceInfo(name,version,os,searchBotMatch[1]);}
return new BrowserInfo(name,version,os);}
function detectOS(ua){for(var ii=0,count=operatingSystemRules.length;ii<count;ii++){var _a=operatingSystemRules[ii],os=_a[0],regex=_a[1];var match=regex.exec(ua);if(match){return os;}}
return null;}
function getNodeVersion(){var isNode=typeof process!=="undefined"&&process.version;return isNode?new NodeInfo(process.version.slice(1)):null;}
function createVersionParts(count){var output=[];for(var ii=0;ii<count;ii++){output.push("0");}
return output;}
var ext_exports2={};__export(ext_exports2,{angleTo:()=>angleTo2,direction:()=>direction2,leftRotate:()=>leftRotate3,leftScale:()=>leftScale3,leftTranslate:()=>leftTranslate2,transform:()=>transform5,vertical:()=>vertical2});function leftTranslate2(out,a,v){var transMat=[0,0,0,0,0,0,0,0,0];mat3_exports.fromTranslation(transMat,v);return mat3_exports.multiply(out,transMat,a);}
function leftRotate3(out,a,rad){var rotateMat=[0,0,0,0,0,0,0,0,0];mat3_exports.fromRotation(rotateMat,rad);return mat3_exports.multiply(out,rotateMat,a);}
function leftScale3(out,a,v){var scaleMat=[0,0,0,0,0,0,0,0,0];mat3_exports.fromScaling(scaleMat,v);return mat3_exports.multiply(out,scaleMat,a);}
function leftMultiply2(out,a,a1){return mat3_exports.multiply(out,a1,a);}
function transform5(m,actions){var matrix=m?[].concat(m):[1,0,0,0,1,0,0,0,1];for(var i2=0,len2=actions.length;i2<len2;i2++){var action=actions[i2];switch(action[0]){case"t":leftTranslate2(matrix,matrix,[action[1],action[2]]);break;case"s":leftScale3(matrix,matrix,[action[1],action[2]]);break;case"r":leftRotate3(matrix,matrix,action[1]);break;case"m":leftMultiply2(matrix,matrix,action[1]);break;default:break;}}
return matrix;}
function direction2(v1,v2){return v1[0]*v2[1]-v2[0]*v1[1];}
function angleTo2(v1,v2,direct){var ang=vec2_exports.angle(v1,v2);var angleLargeThanPI=direction2(v1,v2)>=0;if(direct){if(angleLargeThanPI){return Math.PI*2-ang;}
return ang;}
if(angleLargeThanPI){return ang;}
return Math.PI*2-ang;}
function vertical2(out,v,flag){if(flag){out[0]=v[1];out[1]=-1*v[0];}else{out[0]=-1*v[1];out[1]=v[0];}
return out;}
function multiplyMatrix(a,b10){var out=[];var a00=a[0];var a01=a[1];var a02=a[2];var a10=a[3];var a11=a[4];var a12=a[5];var a20=a[6];var a21=a[7];var a22=a[8];var b00=b10[0];var b01=b10[1];var b02=b10[2];var b102=b10[3];var b11=b10[4];var b12=b10[5];var b20=b10[6];var b21=b10[7];var b22=b10[8];out[0]=b00*a00+b01*a10+b02*a20;out[1]=b00*a01+b01*a11+b02*a21;out[2]=b00*a02+b01*a12+b02*a22;out[3]=b102*a00+b11*a10+b12*a20;out[4]=b102*a01+b11*a11+b12*a21;out[5]=b102*a02+b11*a12+b12*a22;out[6]=b20*a00+b21*a10+b22*a20;out[7]=b20*a01+b21*a11+b22*a21;out[8]=b20*a02+b21*a12+b22*a22;return out;}
function multiplyVec2(m,v){var out=[];var x2=v[0];var y2=v[1];out[0]=m[0]*x2+m[3]*y2+m[6];out[1]=m[1]*x2+m[4]*y2+m[7];return out;}
function invert2(a){var out=[];var a00=a[0];var a01=a[1];var a02=a[2];var a10=a[3];var a11=a[4];var a12=a[5];var a20=a[6];var a21=a[7];var a22=a[8];var b01=a22*a11-a12*a21;var b11=-a22*a10+a12*a20;var b21=a21*a10-a11*a20;var det=a00*b01+a01*b11+a02*b21;if(!det){return null;}
det=1/det;out[0]=b01*det;out[1]=(-a22*a01+a02*a21)*det;out[2]=(a12*a01-a02*a11)*det;out[3]=b11*det;out[4]=(a22*a00-a02*a20)*det;out[5]=(-a12*a00+a02*a10)*det;out[6]=b21*det;out[7]=(-a21*a00+a01*a20)*det;out[8]=(a11*a00-a01*a10)*det;return out;}
var transform6=ext_exports2.transform;var MATRIX="matrix";var CLONE_CFGS=["zIndex","capture","visible","type"];var RESERVED_PORPS=["repeat"];var DELEGATION_SPLIT=":";var WILDCARD2="*";function _cloneArrayAttr(arr2){var result=[];for(var i2=0;i2<arr2.length;i2++){if(is_array_default(arr2[i2])){result.push([].concat(arr2[i2]));}else{result.push(arr2[i2]);}}
return result;}
function getFormatFromAttrs(toAttrs,shape){var fromAttrs={};var attrs=shape.attrs;for(var k in toAttrs){fromAttrs[k]=attrs[k];}
return fromAttrs;}
function getFormatToAttrs(props,shape){var toAttrs={};var attrs=shape.attr();each_default(props,function(v,k){if(RESERVED_PORPS.indexOf(k)===-1&&!is_equal_default(attrs[k],v)){toAttrs[k]=v;}});return toAttrs;}
function checkExistedAttrs(animations,animation){if(animation.onFrame){return animations;}
var startTime=animation.startTime,delay=animation.delay,duration=animation.duration;var hasOwnProperty3=Object.prototype.hasOwnProperty;each_default(animations,function(item){if(startTime+delay<item.startTime+item.delay+item.duration&&duration>item.delay){each_default(animation.toAttrs,function(v,k){if(hasOwnProperty3.call(item.toAttrs,k)){delete item.toAttrs[k];delete item.fromAttrs[k];}});}});return animations;}
var Element2=(function(_super){__extends(Element4,_super);function Element4(cfg){var _this=_super.call(this,cfg)||this;_this.attrs={};var attrs=_this.getDefaultAttrs();mix(attrs,cfg.attrs);_this.attrs=attrs;_this.initAttrs(attrs);_this.initAnimate();return _this;}
Element4.prototype.getDefaultCfg=function(){return{visible:true,capture:true,zIndex:0};};Element4.prototype.getDefaultAttrs=function(){return{matrix:this.getDefaultMatrix(),opacity:1};};Element4.prototype.onCanvasChange=function(changeType){};Element4.prototype.initAttrs=function(attrs){};Element4.prototype.initAnimate=function(){this.set("animable",true);this.set("animating",false);};Element4.prototype.isGroup=function(){return false;};Element4.prototype.getParent=function(){return this.get("parent");};Element4.prototype.getCanvas=function(){return this.get("canvas");};Element4.prototype.attr=function(){var _a;var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}
var name=args[0],value=args[1];if(!name)
return this.attrs;if(is_object_default(name)){for(var k in name){this.setAttr(k,name[k]);}
this.afterAttrsChange(name);return this;}
if(args.length===2){this.setAttr(name,value);this.afterAttrsChange((_a={},_a[name]=value,_a));return this;}
return this.attrs[name];};Element4.prototype.isClipped=function(refX,refY){var clip=this.getClip();return clip&&!clip.isHit(refX,refY);};Element4.prototype.setAttr=function(name,value){var originValue=this.attrs[name];if(originValue!==value){this.attrs[name]=value;this.onAttrChange(name,value,originValue);}};Element4.prototype.onAttrChange=function(name,value,originValue){if(name==="matrix"){this.set("totalMatrix",null);}};Element4.prototype.afterAttrsChange=function(targetAttrs){if(this.cfg.isClipShape){var applyTo=this.cfg.applyTo;if(applyTo){applyTo.onCanvasChange("clip");}}else{this.onCanvasChange("attr");}};Element4.prototype.show=function(){this.set("visible",true);this.onCanvasChange("show");return this;};Element4.prototype.hide=function(){this.set("visible",false);this.onCanvasChange("hide");return this;};Element4.prototype.setZIndex=function(zIndex){this.set("zIndex",zIndex);var parent=this.getParent();if(parent){parent.sort();}
return this;};Element4.prototype.toFront=function(){var parent=this.getParent();if(!parent){return;}
var children=parent.getChildren();var el=this.get("el");var index2=children.indexOf(this);children.splice(index2,1);children.push(this);this.onCanvasChange("zIndex");};Element4.prototype.toBack=function(){var parent=this.getParent();if(!parent){return;}
var children=parent.getChildren();var el=this.get("el");var index2=children.indexOf(this);children.splice(index2,1);children.unshift(this);this.onCanvasChange("zIndex");};Element4.prototype.remove=function(destroy){if(destroy===void 0){destroy=true;}
var parent=this.getParent();if(parent){removeFromArray(parent.getChildren(),this);if(!parent.get("clearing")){this.onCanvasChange("remove");}}else{this.onCanvasChange("remove");}
if(destroy){this.destroy();}};Element4.prototype.resetMatrix=function(){this.attr(MATRIX,this.getDefaultMatrix());this.onCanvasChange("matrix");};Element4.prototype.getMatrix=function(){return this.attr(MATRIX);};Element4.prototype.setMatrix=function(m){this.attr(MATRIX,m);this.onCanvasChange("matrix");};Element4.prototype.getTotalMatrix=function(){var totalMatrix=this.cfg.totalMatrix;if(!totalMatrix){var currentMatrix=this.attr("matrix");var parentMatrix=this.cfg.parentMatrix;if(parentMatrix&&currentMatrix){totalMatrix=multiplyMatrix(parentMatrix,currentMatrix);}else{totalMatrix=currentMatrix||parentMatrix;}
this.set("totalMatrix",totalMatrix);}
return totalMatrix;};Element4.prototype.applyMatrix=function(matrix){var currentMatrix=this.attr("matrix");var totalMatrix=null;if(matrix&&currentMatrix){totalMatrix=multiplyMatrix(matrix,currentMatrix);}else{totalMatrix=currentMatrix||matrix;}
this.set("totalMatrix",totalMatrix);this.set("parentMatrix",matrix);};Element4.prototype.getDefaultMatrix=function(){return null;};Element4.prototype.applyToMatrix=function(v){var matrix=this.attr("matrix");if(matrix){return multiplyVec2(matrix,v);}
return v;};Element4.prototype.invertFromMatrix=function(v){var matrix=this.attr("matrix");if(matrix){var invertMatrix=invert2(matrix);if(invertMatrix){return multiplyVec2(invertMatrix,v);}}
return v;};Element4.prototype.setClip=function(clipCfg){var canvas=this.getCanvas();var clipShape=null;if(clipCfg){var ShapeBase2=this.getShapeBase();var shapeType=upper_first_default(clipCfg.type);var Cons=ShapeBase2[shapeType];if(Cons){clipShape=new Cons({type:clipCfg.type,isClipShape:true,applyTo:this,attrs:clipCfg.attrs,canvas});}}
this.set("clipShape",clipShape);this.onCanvasChange("clip");return clipShape;};Element4.prototype.getClip=function(){var clipShape=this.cfg.clipShape;if(!clipShape){return null;}
return clipShape;};Element4.prototype.clone=function(){var _this=this;var originAttrs=this.attrs;var attrs={};each_default(originAttrs,function(i2,k){if(is_array_default(originAttrs[k])){attrs[k]=_cloneArrayAttr(originAttrs[k]);}else{attrs[k]=originAttrs[k];}});var cons=this.constructor;var clone3=new cons({attrs});each_default(CLONE_CFGS,function(cfgName){clone3.set(cfgName,_this.get(cfgName));});return clone3;};Element4.prototype.destroy=function(){var destroyed=this.destroyed;if(destroyed){return;}
this.attrs={};_super.prototype.destroy.call(this);};Element4.prototype.isAnimatePaused=function(){return this.get("_pause").isPaused;};Element4.prototype.animate=function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}
if(!this.get("timeline")&&!this.get("canvas")){return;}
this.set("animating",true);var timeline=this.get("timeline");if(!timeline){timeline=this.get("canvas").get("timeline");this.set("timeline",timeline);}
var animations=this.get("animations")||[];if(!timeline.timer){timeline.initTimer();}
var toAttrs=args[0],duration=args[1],_a=args[2],easing=_a===void 0?"easeLinear":_a,_b=args[3],callback=_b===void 0?noop_default:_b,_c=args[4],delay=_c===void 0?0:_c;var onFrame;var repeat;var pauseCallback;var resumeCallback;var animateCfg;if(is_function_default(toAttrs)){onFrame=toAttrs;toAttrs={};}else if(is_object_default(toAttrs)&&toAttrs.onFrame){onFrame=toAttrs.onFrame;repeat=toAttrs.repeat;}
if(is_object_default(duration)){animateCfg=duration;duration=animateCfg.duration;easing=animateCfg.easing||"easeLinear";delay=animateCfg.delay||0;repeat=animateCfg.repeat||repeat||false;callback=animateCfg.callback||noop_default;pauseCallback=animateCfg.pauseCallback||noop_default;resumeCallback=animateCfg.resumeCallback||noop_default;}else{if(is_number_default(callback)){delay=callback;callback=null;}
if(is_function_default(easing)){callback=easing;easing="easeLinear";}else{easing=easing||"easeLinear";}}
var formatToAttrs=getFormatToAttrs(toAttrs,this);var animation={fromAttrs:getFormatFromAttrs(formatToAttrs,this),toAttrs:formatToAttrs,duration,easing,repeat,callback,pauseCallback,resumeCallback,delay,startTime:timeline.getTime(),id:unique_id_default(),onFrame,pathFormatted:false};if(animations.length>0){animations=checkExistedAttrs(animations,animation);}else{timeline.addAnimator(this);}
animations.push(animation);this.set("animations",animations);this.set("_pause",{isPaused:false});};Element4.prototype.stopAnimate=function(toEnd){var _this=this;if(toEnd===void 0){toEnd=true;}
var animations=this.get("animations");each_default(animations,function(animation){if(toEnd){if(animation.onFrame){_this.attr(animation.onFrame(1));}else{_this.attr(animation.toAttrs);}}
if(animation.callback){animation.callback();}});this.set("animating",false);this.set("animations",[]);};Element4.prototype.pauseAnimate=function(){var timeline=this.get("timeline");var animations=this.get("animations");var pauseTime=timeline.getTime();each_default(animations,function(animation){animation._paused=true;animation._pauseTime=pauseTime;if(animation.pauseCallback){animation.pauseCallback();}});this.set("_pause",{isPaused:true,pauseTime});return this;};Element4.prototype.resumeAnimate=function(){var timeline=this.get("timeline");var current=timeline.getTime();var animations=this.get("animations");var pauseTime=this.get("_pause").pauseTime;each_default(animations,function(animation){animation.startTime=animation.startTime+(current-pauseTime);animation._paused=false;animation._pauseTime=null;if(animation.resumeCallback){animation.resumeCallback();}});this.set("_pause",{isPaused:false});this.set("animations",animations);return this;};Element4.prototype.emitDelegation=function(type,eventObj){var _this=this;var paths=eventObj.propagationPath;var events=this.getEvents();var relativeShape;if(type==="mouseenter"){relativeShape=eventObj.fromShape;}else if(type==="mouseleave"){relativeShape=eventObj.toShape;}
var _loop_1=function(i3){var element=paths[i3];var name_1=element.get("name");if(name_1){if((element.isGroup()||element.isCanvas&&element.isCanvas())&&relativeShape&&isParent(element,relativeShape)){return"break";}
if(is_array_default(name_1)){each_default(name_1,function(subName){_this.emitDelegateEvent(element,subName,eventObj);});}else{this_1.emitDelegateEvent(element,name_1,eventObj);}}};var this_1=this;for(var i2=0;i2<paths.length;i2++){var state_1=_loop_1(i2);if(state_1==="break")
break;}};Element4.prototype.emitDelegateEvent=function(element,name,eventObj){var events=this.getEvents();var eventName=name+DELEGATION_SPLIT+eventObj.type;if(events[eventName]||events[WILDCARD2]){eventObj.name=eventName;eventObj.currentTarget=element;eventObj.delegateTarget=this;eventObj.delegateObject=element.get("delegateObject");this.emit(eventName,eventObj);}};Element4.prototype.translate=function(translateX,translateY){if(translateX===void 0){translateX=0;}
if(translateY===void 0){translateY=0;}
var matrix=this.getMatrix();var newMatrix=transform6(matrix,[["t",translateX,translateY]]);this.setMatrix(newMatrix);return this;};Element4.prototype.move=function(targetX,targetY){var x2=this.attr("x")||0;var y2=this.attr("y")||0;this.translate(targetX-x2,targetY-y2);return this;};Element4.prototype.moveTo=function(targetX,targetY){return this.move(targetX,targetY);};Element4.prototype.scale=function(ratioX,ratioY){var matrix=this.getMatrix();var newMatrix=transform6(matrix,[["s",ratioX,ratioY||ratioX]]);this.setMatrix(newMatrix);return this;};Element4.prototype.rotate=function(radian){var matrix=this.getMatrix();var newMatrix=transform6(matrix,[["r",radian]]);this.setMatrix(newMatrix);return this;};Element4.prototype.rotateAtStart=function(rotate4){var _a=this.attr(),x2=_a.x,y2=_a.y;var matrix=this.getMatrix();var newMatrix=transform6(matrix,[["t",-x2,-y2],["r",rotate4],["t",x2,y2]]);this.setMatrix(newMatrix);return this;};Element4.prototype.rotateAtPoint=function(x2,y2,rotate4){var matrix=this.getMatrix();var newMatrix=transform6(matrix,[["t",-x2,-y2],["r",rotate4],["t",x2,y2]]);this.setMatrix(newMatrix);return this;};return Element4;}(base_default));var element_default=Element2;var SHAPE_MAP2={};var INDEX="_INDEX";function setCanvas(element,canvas){element.set("canvas",canvas);if(element.isGroup()){var children=element.get("children");if(children.length){children.forEach(function(child){setCanvas(child,canvas);});}}}
function setTimeline(element,timeline){element.set("timeline",timeline);if(element.isGroup()){var children=element.get("children");if(children.length){children.forEach(function(child){setTimeline(child,timeline);});}}}
function removeChild(container,element,destroy){if(destroy===void 0){destroy=true;}
if(destroy){element.destroy();}else{element.set("parent",null);element.set("canvas",null);}
removeFromArray(container.getChildren(),element);}
function getComparer(compare){return function(left,right){var result=compare(left,right);return result===0?left[INDEX]-right[INDEX]:result;};}
var Container=(function(_super){__extends(Container2,_super);function Container2(){return _super!==null&&_super.apply(this,arguments)||this;}
Container2.prototype.isCanvas=function(){return false;};Container2.prototype.getBBox=function(){var minX=Infinity;var maxX=-Infinity;var minY=Infinity;var maxY=-Infinity;var xArr=[];var yArr=[];var children=this.getChildren().filter(function(child){return child.get("visible")&&(!child.isGroup()||child.isGroup()&&child.getChildren().length>0);});if(children.length>0){each_default(children,function(child){var box2=child.getBBox();xArr.push(box2.minX,box2.maxX);yArr.push(box2.minY,box2.maxY);});minX=min_default(xArr);maxX=max_default(xArr);minY=min_default(yArr);maxY=max_default(yArr);}else{minX=0;maxX=0;minY=0;maxY=0;}
var box={x:minX,y:minY,minX,minY,maxX,maxY,width:maxX-minX,height:maxY-minY};return box;};Container2.prototype.getCanvasBBox=function(){var minX=Infinity;var maxX=-Infinity;var minY=Infinity;var maxY=-Infinity;var xArr=[];var yArr=[];var children=this.getChildren().filter(function(child){return child.get("visible")&&(!child.isGroup()||child.isGroup()&&child.getChildren().length>0);});if(children.length>0){each_default(children,function(child){var box2=child.getCanvasBBox();xArr.push(box2.minX,box2.maxX);yArr.push(box2.minY,box2.maxY);});minX=min_default(xArr);maxX=max_default(xArr);minY=min_default(yArr);maxY=max_default(yArr);}else{minX=0;maxX=0;minY=0;maxY=0;}
var box={x:minX,y:minY,minX,minY,maxX,maxY,width:maxX-minX,height:maxY-minY};return box;};Container2.prototype.getDefaultCfg=function(){var cfg=_super.prototype.getDefaultCfg.call(this);cfg["children"]=[];return cfg;};Container2.prototype.onAttrChange=function(name,value,originValue){_super.prototype.onAttrChange.call(this,name,value,originValue);if(name==="matrix"){var totalMatrix=this.getTotalMatrix();this._applyChildrenMarix(totalMatrix);}};Container2.prototype.applyMatrix=function(matrix){var preTotalMatrix=this.getTotalMatrix();_super.prototype.applyMatrix.call(this,matrix);var totalMatrix=this.getTotalMatrix();if(totalMatrix===preTotalMatrix){return;}
this._applyChildrenMarix(totalMatrix);};Container2.prototype._applyChildrenMarix=function(totalMatrix){var children=this.getChildren();each_default(children,function(child){child.applyMatrix(totalMatrix);});};Container2.prototype.addShape=function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}
var type=args[0];var cfg=args[1];if(is_object_default(type)){cfg=type;}else{cfg["type"]=type;}
var shapeType=SHAPE_MAP2[cfg.type];if(!shapeType){shapeType=upper_first_default(cfg.type);SHAPE_MAP2[cfg.type]=shapeType;}
var ShapeBase2=this.getShapeBase();var shape=new ShapeBase2[shapeType](cfg);this.add(shape);return shape;};Container2.prototype.addGroup=function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}
var groupClass=args[0],cfg=args[1];var group;if(is_function_default(groupClass)){if(cfg){group=new groupClass(cfg);}else{group=new groupClass({parent:this});}}else{var tmpCfg=groupClass||{};var TmpGroupClass=this.getGroupBase();group=new TmpGroupClass(tmpCfg);}
this.add(group);return group;};Container2.prototype.getCanvas=function(){var canvas;if(this.isCanvas()){canvas=this;}else{canvas=this.get("canvas");}
return canvas;};Container2.prototype.getShape=function(x2,y2,ev){if(!isAllowCapture(this)){return null;}
var children=this.getChildren();var shape;if(!this.isCanvas()){var v=[x2,y2,1];v=this.invertFromMatrix(v);if(!this.isClipped(v[0],v[1])){shape=this._findShape(children,v[0],v[1],ev);}}else{shape=this._findShape(children,x2,y2,ev);}
return shape;};Container2.prototype._findShape=function(children,x2,y2,ev){var shape=null;for(var i2=children.length-1;i2>=0;i2--){var child=children[i2];if(isAllowCapture(child)){if(child.isGroup()){shape=child.getShape(x2,y2,ev);}else if(child.isHit(x2,y2)){shape=child;}}
if(shape){break;}}
return shape;};Container2.prototype.add=function(element){var canvas=this.getCanvas();var children=this.getChildren();var timeline=this.get("timeline");var preParent=element.getParent();if(preParent){removeChild(preParent,element,false);}
element.set("parent",this);if(canvas){setCanvas(element,canvas);}
if(timeline){setTimeline(element,timeline);}
children.push(element);element.onCanvasChange("add");this._applyElementMatrix(element);};Container2.prototype._applyElementMatrix=function(element){var totalMatrix=this.getTotalMatrix();if(totalMatrix){element.applyMatrix(totalMatrix);}};Container2.prototype.getChildren=function(){return this.get("children");};Container2.prototype.sort=function(){var children=this.getChildren();each_default(children,function(child,index2){child[INDEX]=index2;return child;});children.sort(getComparer(function(obj1,obj2){return obj1.get("zIndex")-obj2.get("zIndex");}));this.onCanvasChange("sort");};Container2.prototype.clear=function(){this.set("clearing",true);if(this.destroyed){return;}
var children=this.getChildren();for(var i2=children.length-1;i2>=0;i2--){children[i2].destroy();}
this.set("children",[]);this.onCanvasChange("clear");this.set("clearing",false);};Container2.prototype.destroy=function(){if(this.get("destroyed")){return;}
this.clear();_super.prototype.destroy.call(this);};Container2.prototype.getFirst=function(){return this.getChildByIndex(0);};Container2.prototype.getLast=function(){var children=this.getChildren();return this.getChildByIndex(children.length-1);};Container2.prototype.getChildByIndex=function(index2){var children=this.getChildren();return children[index2];};Container2.prototype.getCount=function(){var children=this.getChildren();return children.length;};Container2.prototype.contain=function(element){var children=this.getChildren();return children.indexOf(element)>-1;};Container2.prototype.removeChild=function(element,destroy){if(destroy===void 0){destroy=true;}
if(this.contain(element)){element.remove(destroy);}};Container2.prototype.findAll=function(fn){var rst=[];var children=this.getChildren();each_default(children,function(element){if(fn(element)){rst.push(element);}
if(element.isGroup()){rst=rst.concat(element.findAll(fn));}});return rst;};Container2.prototype.find=function(fn){var rst=null;var children=this.getChildren();each_default(children,function(element){if(fn(element)){rst=element;}else if(element.isGroup()){rst=element.find(fn);}
if(rst){return false;}});return rst;};Container2.prototype.findById=function(id9){return this.find(function(element){return element.get("id")===id9;});};Container2.prototype.findByClassName=function(className){return this.find(function(element){return element.get("className")===className;});};Container2.prototype.findAllByName=function(name){return this.findAll(function(element){return element.get("name")===name;});};return Container2;}(element_default));var container_default=Container;var frame=0;var timeout=0;var interval=0;var pokeDelay=1e3;var taskHead;var taskTail;var clockLast=0;var clockNow=0;var clockSkew=0;var clock=typeof performance==="object"&&performance.now?performance:Date;var setFrame=typeof window==="object"&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(f){setTimeout(f,17);};function now(){return clockNow||(setFrame(clearNow),clockNow=clock.now()+clockSkew);}
function clearNow(){clockNow=0;}
function Timer(){this._call=this._time=this._next=null;}
Timer.prototype=timer.prototype={constructor:Timer,restart:function(callback,delay,time3){if(typeof callback!=="function")
throw new TypeError("callback is not a function");time3=(time3==null?now():+time3)+(delay==null?0:+delay);if(!this._next&&taskTail!==this){if(taskTail)
taskTail._next=this;else
taskHead=this;taskTail=this;}
this._call=callback;this._time=time3;sleep();},stop:function(){if(this._call){this._call=null;this._time=Infinity;sleep();}}};function timer(callback,delay,time3){var t=new Timer();t.restart(callback,delay,time3);return t;}
function timerFlush(){now();++frame;var t=taskHead,e;while(t){if((e=clockNow-t._time)>=0)
t._call.call(null,e);t=t._next;}
--frame;}
function wake(){clockNow=(clockLast=clock.now())+clockSkew;frame=timeout=0;try{timerFlush();}finally{frame=0;nap();clockNow=0;}}
function poke(){var now2=clock.now(),delay=now2-clockLast;if(delay>pokeDelay)
clockSkew-=delay,clockLast=now2;}
function nap(){var t02,t12=taskHead,t2,time3=Infinity;while(t12){if(t12._call){if(time3>t12._time)
time3=t12._time;t02=t12,t12=t12._next;}else{t2=t12._next,t12._next=null;t12=t02?t02._next=t2:taskHead=t2;}}
taskTail=t02;sleep(time3);}
function sleep(time3){if(frame)
return;if(timeout)
timeout=clearTimeout(timeout);var delay=time3-clockNow;if(delay>24){if(time3<Infinity)
timeout=setTimeout(wake,time3-clock.now()-clockSkew);if(interval)
interval=clearInterval(interval);}else{if(!interval)
clockLast=clock.now(),interval=setInterval(poke,pokeDelay);frame=1,setFrame(wake);}}
function basis2(t12,v0,v1,v2,v3){var t2=t12*t12,t3=t2*t12;return((1-3*t12+3*t2-t3)*v0+(4-6*t2+3*t3)*v1+(1+3*t12+3*t2-3*t3)*v2+t3*v3)/6;}
function basis_default3(values4){var n2=values4.length-1;return function(t){var i2=t<=0?t=0:t>=1?(t=1,n2-1):Math.floor(t*n2),v1=values4[i2],v2=values4[i2+1],v0=i2>0?values4[i2-1]:2*v1-v2,v3=i2<n2-1?values4[i2+2]:2*v2-v1;return basis2((t-i2/n2)*n2,v0,v1,v2,v3);};}
function basisClosed_default2(values4){var n2=values4.length;return function(t){var i2=Math.floor(((t%=1)<0?++t:t)*n2),v0=values4[(i2+n2-1)%n2],v1=values4[i2%n2],v2=values4[(i2+1)%n2],v3=values4[(i2+2)%n2];return basis2((t-i2/n2)*n2,v0,v1,v2,v3);};}
function constant_default3(x2){return function(){return x2;};}
function linear2(a,d){return function(t){return a+t*d;};}
function exponential2(a,b10,y2){return a=Math.pow(a,y2),b10=Math.pow(b10,y2)-a,y2=1/y2,function(t){return Math.pow(a+t*b10,y2);};}
function gamma2(y2){return(y2=+y2)===1?nogamma2:function(a,b10){return b10-a?exponential2(a,b10,y2):constant_default3(isNaN(a)?b10:a);};}
function nogamma2(a,b10){var d=b10-a;return d?linear2(a,d):constant_default3(isNaN(a)?b10:a);}
var rgb_default2=function rgbGamma2(y2){var color2=gamma2(y2);function rgb2(start,end){var r=color2((start=rgb(start)).r,(end=rgb(end)).r),g=color2(start.g,end.g),b10=color2(start.b,end.b),opacity=nogamma2(start.opacity,end.opacity);return function(t){start.r=r(t);start.g=g(t);start.b=b10(t);start.opacity=opacity(t);return start+"";};}
rgb2.gamma=rgbGamma2;return rgb2;}(1);function rgbSpline2(spline){return function(colors){var n2=colors.length,r=new Array(n2),g=new Array(n2),b10=new Array(n2),i2,color2;for(i2=0;i2<n2;++i2){color2=rgb(colors[i2]);r[i2]=color2.r||0;g[i2]=color2.g||0;b10[i2]=color2.b||0;}
r=spline(r);g=spline(g);b10=spline(b10);color2.opacity=1;return function(t){color2.r=r(t);color2.g=g(t);color2.b=b10(t);return color2+"";};};}
var rgbBasis2=rgbSpline2(basis_default3);var rgbBasisClosed2=rgbSpline2(basisClosed_default2);function numberArray_default2(a,b10){if(!b10)
b10=[];var n2=a?Math.min(b10.length,a.length):0,c=b10.slice(),i2;return function(t){for(i2=0;i2<n2;++i2)
c[i2]=a[i2]*(1-t)+b10[i2]*t;return c;};}
function isNumberArray2(x2){return ArrayBuffer.isView(x2)&&!(x2 instanceof DataView);}
function array_default2(a,b10){return(isNumberArray2(b10)?numberArray_default2:genericArray2)(a,b10);}
function genericArray2(a,b10){var nb=b10?b10.length:0,na=a?Math.min(nb,a.length):0,x2=new Array(na),c=new Array(nb),i2;for(i2=0;i2<na;++i2)
x2[i2]=value_default2(a[i2],b10[i2]);for(;i2<nb;++i2)
c[i2]=b10[i2];return function(t){for(i2=0;i2<na;++i2)
c[i2]=x2[i2](t);return c;};}
function date_default2(a,b10){var d=new Date();return a=+a,b10=+b10,function(t){return d.setTime(a*(1-t)+b10*t),d;};}
function number_default2(a,b10){return a=+a,b10=+b10,function(t){return a*(1-t)+b10*t;};}
function object_default2(a,b10){var i2={},c={},k;if(a===null||typeof a!=="object")
a={};if(b10===null||typeof b10!=="object")
b10={};for(k in b10){if(k in a){i2[k]=value_default2(a[k],b10[k]);}else{c[k]=b10[k];}}
return function(t){for(k in i2)
c[k]=i2[k](t);return c;};}
var reA2=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;var reB2=new RegExp(reA2.source,"g");function zero3(b10){return function(){return b10;};}
function one2(b10){return function(t){return b10(t)+"";};}
function string_default2(a,b10){var bi=reA2.lastIndex=reB2.lastIndex=0,am,bm,bs,i2=-1,s=[],q=[];a=a+"",b10=b10+"";while((am=reA2.exec(a))&&(bm=reB2.exec(b10))){if((bs=bm.index)>bi){bs=b10.slice(bi,bs);if(s[i2])
s[i2]+=bs;else
s[++i2]=bs;}
if((am=am[0])===(bm=bm[0])){if(s[i2])
s[i2]+=bm;else
s[++i2]=bm;}else{s[++i2]=null;q.push({i:i2,x:number_default2(am,bm)});}
bi=reB2.lastIndex;}
if(bi<b10.length){bs=b10.slice(bi);if(s[i2])
s[i2]+=bs;else
s[++i2]=bs;}
return s.length<2?q[0]?one2(q[0].x):zero3(b10):(b10=q.length,function(t){for(var i3=0,o;i3<b10;++i3)
s[(o=q[i3]).i]=o.x(t);return s.join("");});}
function value_default2(a,b10){var t=typeof b10,c;return b10==null||t==="boolean"?constant_default3(b10):(t==="number"?number_default2:t==="string"?(c=color(b10))?(b10=c,rgb_default2):string_default2:b10 instanceof color?rgb_default2:b10 instanceof Date?date_default2:isNumberArray2(b10)?numberArray_default2:Array.isArray(b10)?genericArray2:typeof b10.valueOf!=="function"&&typeof b10.toString!=="function"||isNaN(b10)?object_default2:number_default2)(a,b10);}
var src_exports={};__export(src_exports,{easeBack:()=>backInOut,easeBackIn:()=>backIn,easeBackInOut:()=>backInOut,easeBackOut:()=>backOut,easeBounce:()=>bounceOut,easeBounceIn:()=>bounceIn,easeBounceInOut:()=>bounceInOut,easeBounceOut:()=>bounceOut,easeCircle:()=>circleInOut,easeCircleIn:()=>circleIn,easeCircleInOut:()=>circleInOut,easeCircleOut:()=>circleOut,easeCubic:()=>cubicInOut,easeCubicIn:()=>cubicIn,easeCubicInOut:()=>cubicInOut,easeCubicOut:()=>cubicOut,easeElastic:()=>elasticOut,easeElasticIn:()=>elasticIn,easeElasticInOut:()=>elasticInOut,easeElasticOut:()=>elasticOut,easeExp:()=>expInOut,easeExpIn:()=>expIn,easeExpInOut:()=>expInOut,easeExpOut:()=>expOut,easeLinear:()=>linear3,easePoly:()=>polyInOut,easePolyIn:()=>polyIn,easePolyInOut:()=>polyInOut,easePolyOut:()=>polyOut,easeQuad:()=>quadInOut,easeQuadIn:()=>quadIn,easeQuadInOut:()=>quadInOut,easeQuadOut:()=>quadOut,easeSin:()=>sinInOut,easeSinIn:()=>sinIn,easeSinInOut:()=>sinInOut,easeSinOut:()=>sinOut});function linear3(t){return+t;}
function quadIn(t){return t*t;}
function quadOut(t){return t*(2-t);}
function quadInOut(t){return((t*=2)<=1?t*t:--t*(2-t)+1)/2;}
function cubicIn(t){return t*t*t;}
function cubicOut(t){return--t*t*t+1;}
function cubicInOut(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2;}
var exponent=3;var polyIn=function custom(e){e=+e;function polyIn2(t){return Math.pow(t,e);}
polyIn2.exponent=custom;return polyIn2;}(exponent);var polyOut=function custom2(e){e=+e;function polyOut2(t){return 1-Math.pow(1-t,e);}
polyOut2.exponent=custom2;return polyOut2;}(exponent);var polyInOut=function custom3(e){e=+e;function polyInOut2(t){return((t*=2)<=1?Math.pow(t,e):2-Math.pow(2-t,e))/2;}
polyInOut2.exponent=custom3;return polyInOut2;}(exponent);var pi2=Math.PI;var halfPi=pi2/2;function sinIn(t){return+t===1?1:1-Math.cos(t*halfPi);}
function sinOut(t){return Math.sin(t*halfPi);}
function sinInOut(t){return(1-Math.cos(pi2*t))/2;}
function tpmt(x2){return(Math.pow(2,-10*x2)-9765625e-10)*1.0009775171065494;}
function expIn(t){return tpmt(1-+t);}
function expOut(t){return 1-tpmt(t);}
function expInOut(t){return((t*=2)<=1?tpmt(1-t):2-tpmt(t-1))/2;}
function circleIn(t){return 1-Math.sqrt(1-t*t);}
function circleOut(t){return Math.sqrt(1- --t*t);}
function circleInOut(t){return((t*=2)<=1?1-Math.sqrt(1-t*t):Math.sqrt(1-(t-=2)*t)+1)/2;}
var b1=4/11;var b2=6/11;var b3=8/11;var b4=3/4;var b5=9/11;var b6=10/11;var b7=15/16;var b8=21/22;var b9=63/64;var b0=1/b1/b1;function bounceIn(t){return 1-bounceOut(1-t);}
function bounceOut(t){return(t=+t)<b1?b0*t*t:t<b3?b0*(t-=b2)*t+b4:t<b6?b0*(t-=b5)*t+b7:b0*(t-=b8)*t+b9;}
function bounceInOut(t){return((t*=2)<=1?1-bounceOut(1-t):bounceOut(t-1)+1)/2;}
var overshoot=1.70158;var backIn=function custom4(s){s=+s;function backIn2(t){return(t=+t)*t*(s*(t-1)+t);}
backIn2.overshoot=custom4;return backIn2;}(overshoot);var backOut=function custom5(s){s=+s;function backOut2(t){return--t*t*((t+1)*s+t)+1;}
backOut2.overshoot=custom5;return backOut2;}(overshoot);var backInOut=function custom6(s){s=+s;function backInOut2(t){return((t*=2)<1?t*t*((s+1)*t-s):(t-=2)*t*((s+1)*t+s)+2)/2;}
backInOut2.overshoot=custom6;return backInOut2;}(overshoot);var tau2=2*Math.PI;var amplitude=1;var period=0.3;var elasticIn=function custom7(a,p){var s=Math.asin(1/(a=Math.max(1,a)))*(p/=tau2);function elasticIn2(t){return a*tpmt(- --t)*Math.sin((s-t)/p);}
elasticIn2.amplitude=function(a2){return custom7(a2,p*tau2);};elasticIn2.period=function(p2){return custom7(a,p2);};return elasticIn2;}(amplitude,period);var elasticOut=function custom8(a,p){var s=Math.asin(1/(a=Math.max(1,a)))*(p/=tau2);function elasticOut2(t){return 1-a*tpmt(t=+t)*Math.sin((t+s)/p);}
elasticOut2.amplitude=function(a2){return custom8(a2,p*tau2);};elasticOut2.period=function(p2){return custom8(a,p2);};return elasticOut2;}(amplitude,period);var elasticInOut=function custom9(a,p){var s=Math.asin(1/(a=Math.max(1,a)))*(p/=tau2);function elasticInOut2(t){return((t=t*2-1)<0?a*tpmt(-t)*Math.sin((s-t)/p):2-a*tpmt(t)*Math.sin((s+t)/p))/2;}
elasticInOut2.amplitude=function(a2){return custom9(a2,p*tau2);};elasticInOut2.period=function(p2){return custom9(a,p2);};return elasticInOut2;}(amplitude,period);var EASING_MAP={};function getEasing(type){return EASING_MAP[type.toLowerCase()]||src_exports[type];}
var isColorProp=function(prop){return["fill","stroke","fillStyle","strokeStyle"].includes(prop);};var isGradientColor=function(val){return /^[r,R,L,l]{1}[\s]*\(/.test(val);};var IDENTITY_MATRIX=[1,0,0,0,1,0,0,0,1];function _update(shape,animation,ratio){var cProps={};var fromAttrs=animation.fromAttrs,toAttrs=animation.toAttrs;if(shape.destroyed){return;}
var interf;for(var k in toAttrs){if(!is_equal_default(fromAttrs[k],toAttrs[k])){if(k==="path"){var toPath=toAttrs[k];var fromPath=fromAttrs[k];if(toPath.length>fromPath.length){toPath=parsePathString(toAttrs[k]);fromPath=parsePathString(fromAttrs[k]);fromPath=fillPathByDiff(fromPath,toPath);fromPath=formatPath(fromPath,toPath);animation.fromAttrs.path=fromPath;animation.toAttrs.path=toPath;}else if(!animation.pathFormatted){toPath=parsePathString(toAttrs[k]);fromPath=parsePathString(fromAttrs[k]);fromPath=formatPath(fromPath,toPath);animation.fromAttrs.path=fromPath;animation.toAttrs.path=toPath;animation.pathFormatted=true;}
cProps[k]=[];for(var i2=0;i2<toPath.length;i2++){var toPathPoint=toPath[i2];var fromPathPoint=fromPath[i2];var cPathPoint=[];for(var j=0;j<toPathPoint.length;j++){if(is_number_default(toPathPoint[j])&&fromPathPoint&&is_number_default(fromPathPoint[j])){interf=value_default2(fromPathPoint[j],toPathPoint[j]);cPathPoint.push(interf(ratio));}else{cPathPoint.push(toPathPoint[j]);}}
cProps[k].push(cPathPoint);}}else if(k==="matrix"){var matrixFn=array_default2(fromAttrs[k]||IDENTITY_MATRIX,toAttrs[k]||IDENTITY_MATRIX);var currentMatrix=matrixFn(ratio);cProps[k]=currentMatrix;}else if(isColorProp(k)&&isGradientColor(toAttrs[k])){cProps[k]=toAttrs[k];}else if(!is_function_default(toAttrs[k])){interf=value_default2(fromAttrs[k],toAttrs[k]);cProps[k]=interf(ratio);}}}
shape.attr(cProps);}
function update(shape,animation,elapsed){var startTime=animation.startTime,delay=animation.delay;if(elapsed<startTime+delay||animation._paused){return false;}
var ratio;var duration=animation.duration;var easing=animation.easing;var easeFn=getEasing(easing);elapsed=elapsed-startTime-animation.delay;if(animation.repeat){ratio=elapsed%duration/duration;ratio=easeFn(ratio);}else{ratio=elapsed/duration;if(ratio<1){ratio=easeFn(ratio);}else{if(animation.onFrame){shape.attr(animation.onFrame(1));}else{shape.attr(animation.toAttrs);}
return true;}}
if(animation.onFrame){var attrs=animation.onFrame(ratio);shape.attr(attrs);}else{_update(shape,animation,ratio);}
return false;}
var Timeline=(function(){function Timeline2(canvas){this.animators=[];this.current=0;this.timer=null;this.canvas=canvas;}
Timeline2.prototype.initTimer=function(){var _this=this;var isFinished=false;var shape;var animations;var animation;this.timer=timer(function(elapsed){_this.current=elapsed;if(_this.animators.length>0){for(var i2=_this.animators.length-1;i2>=0;i2--){shape=_this.animators[i2];if(shape.destroyed){_this.removeAnimator(i2);continue;}
if(!shape.isAnimatePaused()){animations=shape.get("animations");for(var j=animations.length-1;j>=0;j--){animation=animations[j];isFinished=update(shape,animation,elapsed);if(isFinished){animations.splice(j,1);isFinished=false;if(animation.callback){animation.callback();}}}}
if(animations.length===0){_this.removeAnimator(i2);}}
var autoDraw=_this.canvas.get("autoDraw");if(!autoDraw){_this.canvas.draw();}}});};Timeline2.prototype.addAnimator=function(shape){this.animators.push(shape);};Timeline2.prototype.removeAnimator=function(index2){this.animators.splice(index2,1);};Timeline2.prototype.isAnimating=function(){return!!this.animators.length;};Timeline2.prototype.stop=function(){if(this.timer){this.timer.stop();}};Timeline2.prototype.stopAllAnimations=function(toEnd){if(toEnd===void 0){toEnd=true;}
this.animators.forEach(function(animator){animator.stopAnimate(toEnd);});this.animators=[];this.canvas.draw();};Timeline2.prototype.getTime=function(){return this.current;};return Timeline2;}());var timeline_default=Timeline;var CLICK_OFFSET=40;var LEFT_BTN_CODE=0;var EVENTS=["mousedown","mouseup","dblclick","mouseout","mouseover","mousemove","mouseleave","mouseenter","touchstart","touchmove","touchend","dragenter","dragover","dragleave","drop","contextmenu","mousewheel"];function emitTargetEvent(target,type,eventObj){eventObj.name=type;eventObj.target=target;eventObj.currentTarget=target;eventObj.delegateTarget=target;target.emit(type,eventObj);}
function bubbleEvent(container,type,eventObj){if(eventObj.bubbles){var relativeShape=void 0;var isOverEvent=false;if(type==="mouseenter"){relativeShape=eventObj.fromShape;isOverEvent=true;}else if(type==="mouseleave"){isOverEvent=true;relativeShape=eventObj.toShape;}
if(container.isCanvas()&&isOverEvent){return;}
if(relativeShape&&isParent(container,relativeShape)){eventObj.bubbles=false;return;}
eventObj.name=type;eventObj.currentTarget=container;eventObj.delegateTarget=container;container.emit(type,eventObj);}}
var EventController=(function(){function EventController2(cfg){var _this=this;this.draggingShape=null;this.dragging=false;this.currentShape=null;this.mousedownShape=null;this.mousedownPoint=null;this._eventCallback=function(ev){var type=ev.type;_this._triggerEvent(type,ev);};this._onDocumentMove=function(ev){var canvas=_this.canvas;var el=canvas.get("el");if(el!==ev.target){if(_this.dragging||_this.currentShape){var pointInfo=_this._getPointInfo(ev);if(_this.dragging){_this._emitEvent("drag",ev,pointInfo,_this.draggingShape);}}}};this._onDocumentMouseUp=function(ev){var canvas=_this.canvas;var el=canvas.get("el");if(el!==ev.target){if(_this.dragging){var pointInfo=_this._getPointInfo(ev);if(_this.draggingShape){_this._emitEvent("drop",ev,pointInfo,null);}
_this._emitEvent("dragend",ev,pointInfo,_this.draggingShape);_this._afterDrag(_this.draggingShape,pointInfo,ev);}}};this.canvas=cfg.canvas;}
EventController2.prototype.init=function(){this._bindEvents();};EventController2.prototype._bindEvents=function(){var _this=this;var el=this.canvas.get("el");each_default(EVENTS,function(eventName){el.addEventListener(eventName,_this._eventCallback);});if(document){document.addEventListener("mousemove",this._onDocumentMove);document.addEventListener("mouseup",this._onDocumentMouseUp);}};EventController2.prototype._clearEvents=function(){var _this=this;var el=this.canvas.get("el");each_default(EVENTS,function(eventName){el.removeEventListener(eventName,_this._eventCallback);});if(document){document.removeEventListener("mousemove",this._onDocumentMove);document.removeEventListener("mouseup",this._onDocumentMouseUp);}};EventController2.prototype._getEventObj=function(type,event,point2,target,fromShape,toShape){var eventObj=new graph_event_default(type,event);eventObj.fromShape=fromShape;eventObj.toShape=toShape;eventObj.x=point2.x;eventObj.y=point2.y;eventObj.clientX=point2.clientX;eventObj.clientY=point2.clientY;eventObj.propagationPath.push(target);return eventObj;};EventController2.prototype._getShape=function(point2,ev){return this.canvas.getShape(point2.x,point2.y,ev);};EventController2.prototype._getPointInfo=function(ev){var canvas=this.canvas;var clientPoint=canvas.getClientByEvent(ev);var point2=canvas.getPointByEvent(ev);return{x:point2.x,y:point2.y,clientX:clientPoint.x,clientY:clientPoint.y};};EventController2.prototype._triggerEvent=function(type,ev){var pointInfo=this._getPointInfo(ev);var shape=this._getShape(pointInfo,ev);var method=this["_on"+type];var leaveCanvas=false;if(method){method.call(this,pointInfo,shape,ev);}else{var preShape=this.currentShape;if(type==="mouseenter"||type==="dragenter"||type==="mouseover"){this._emitEvent(type,ev,pointInfo,null,null,shape);if(shape){this._emitEvent(type,ev,pointInfo,shape,null,shape);}
if(type==="mouseenter"&&this.draggingShape){this._emitEvent("dragenter",ev,pointInfo,null);}}else if(type==="mouseleave"||type==="dragleave"||type==="mouseout"){leaveCanvas=true;if(preShape){this._emitEvent(type,ev,pointInfo,preShape,preShape,null);}
this._emitEvent(type,ev,pointInfo,null,preShape,null);if(type==="mouseleave"&&this.draggingShape){this._emitEvent("dragleave",ev,pointInfo,null);}}else{this._emitEvent(type,ev,pointInfo,shape,null,null);}}
if(!leaveCanvas){this.currentShape=shape;}
if(shape&&!shape.get("destroyed")){var canvas=this.canvas;var el=canvas.get("el");el.style.cursor=shape.attr("cursor")||canvas.get("cursor");}};EventController2.prototype._onmousedown=function(pointInfo,shape,event){if(event.button===LEFT_BTN_CODE){this.mousedownShape=shape;this.mousedownPoint=pointInfo;this.mousedownTimeStamp=event.timeStamp;}
this._emitEvent("mousedown",event,pointInfo,shape,null,null);};EventController2.prototype._emitMouseoverEvents=function(event,pointInfo,fromShape,toShape){var el=this.canvas.get("el");if(fromShape!==toShape){if(fromShape){this._emitEvent("mouseout",event,pointInfo,fromShape,fromShape,toShape);this._emitEvent("mouseleave",event,pointInfo,fromShape,fromShape,toShape);if(!toShape||toShape.get("destroyed")){el.style.cursor=this.canvas.get("cursor");}}
if(toShape){this._emitEvent("mouseover",event,pointInfo,toShape,fromShape,toShape);this._emitEvent("mouseenter",event,pointInfo,toShape,fromShape,toShape);}}};EventController2.prototype._emitDragoverEvents=function(event,pointInfo,fromShape,toShape,isCanvasEmit){if(toShape){if(toShape!==fromShape){if(fromShape){this._emitEvent("dragleave",event,pointInfo,fromShape,fromShape,toShape);}
this._emitEvent("dragenter",event,pointInfo,toShape,fromShape,toShape);}
if(!isCanvasEmit){this._emitEvent("dragover",event,pointInfo,toShape);}}else if(fromShape){this._emitEvent("dragleave",event,pointInfo,fromShape,fromShape,toShape);}
if(isCanvasEmit){this._emitEvent("dragover",event,pointInfo,toShape);}};EventController2.prototype._afterDrag=function(draggingShape,pointInfo,event){if(draggingShape){draggingShape.set("capture",true);this.draggingShape=null;}
this.dragging=false;var shape=this._getShape(pointInfo,event);if(shape!==draggingShape){this._emitMouseoverEvents(event,pointInfo,draggingShape,shape);}
this.currentShape=shape;};EventController2.prototype._onmouseup=function(pointInfo,shape,event){if(event.button===LEFT_BTN_CODE){var draggingShape=this.draggingShape;if(this.dragging){if(draggingShape){this._emitEvent("drop",event,pointInfo,shape);}
this._emitEvent("dragend",event,pointInfo,draggingShape);this._afterDrag(draggingShape,pointInfo,event);}else{this._emitEvent("mouseup",event,pointInfo,shape);if(shape===this.mousedownShape){this._emitEvent("click",event,pointInfo,shape);}
this.mousedownShape=null;this.mousedownPoint=null;}}};EventController2.prototype._ondragover=function(pointInfo,shape,event){event.preventDefault();var preShape=this.currentShape;this._emitDragoverEvents(event,pointInfo,preShape,shape,true);};EventController2.prototype._onmousemove=function(pointInfo,shape,event){var canvas=this.canvas;var preShape=this.currentShape;var draggingShape=this.draggingShape;if(this.dragging){if(draggingShape){this._emitDragoverEvents(event,pointInfo,preShape,shape,false);}
this._emitEvent("drag",event,pointInfo,draggingShape);}else{var mousedownPoint=this.mousedownPoint;if(mousedownPoint){var mousedownShape=this.mousedownShape;var now2=event.timeStamp;var timeWindow=now2-this.mousedownTimeStamp;var dx=mousedownPoint.clientX-pointInfo.clientX;var dy=mousedownPoint.clientY-pointInfo.clientY;var dist2=dx*dx+dy*dy;if(timeWindow>120||dist2>CLICK_OFFSET){if(mousedownShape&&mousedownShape.get("draggable")){draggingShape=this.mousedownShape;draggingShape.set("capture",false);this.draggingShape=draggingShape;this.dragging=true;this._emitEvent("dragstart",event,pointInfo,draggingShape);this.mousedownShape=null;this.mousedownPoint=null;}else if(!mousedownShape&&canvas.get("draggable")){this.dragging=true;this._emitEvent("dragstart",event,pointInfo,null);this.mousedownShape=null;this.mousedownPoint=null;}else{this._emitMouseoverEvents(event,pointInfo,preShape,shape);this._emitEvent("mousemove",event,pointInfo,shape);}}else{this._emitMouseoverEvents(event,pointInfo,preShape,shape);this._emitEvent("mousemove",event,pointInfo,shape);}}else{this._emitMouseoverEvents(event,pointInfo,preShape,shape);this._emitEvent("mousemove",event,pointInfo,shape);}}};EventController2.prototype._emitEvent=function(type,event,pointInfo,shape,fromShape,toShape){var eventObj=this._getEventObj(type,event,pointInfo,shape,fromShape,toShape);if(shape){eventObj.shape=shape;emitTargetEvent(shape,type,eventObj);var parent_1=shape.getParent();while(parent_1){parent_1.emitDelegation(type,eventObj);if(!eventObj.propagationStopped){bubbleEvent(parent_1,type,eventObj);}
eventObj.propagationPath.push(parent_1);parent_1=parent_1.getParent();}}else{var canvas=this.canvas;emitTargetEvent(canvas,type,eventObj);}};EventController2.prototype.destroy=function(){this._clearEvents();this.canvas=null;this.currentShape=null;this.draggingShape=null;this.mousedownPoint=null;this.mousedownShape=null;this.mousedownTimeStamp=null;};return EventController2;}());var event_contoller_default=EventController;var PX_SUFFIX="px";var browser=detect();var isFirefox=browser&&browser.name==="firefox";var Canvas=(function(_super){__extends(Canvas4,_super);function Canvas4(cfg){var _this=_super.call(this,cfg)||this;_this.initContainer();_this.initDom();_this.initEvents();_this.initTimeline();return _this;}
Canvas4.prototype.getDefaultCfg=function(){var cfg=_super.prototype.getDefaultCfg.call(this);cfg["cursor"]="default";cfg["supportCSSTransform"]=false;return cfg;};Canvas4.prototype.initContainer=function(){var container=this.get("container");if(is_string_default(container)){container=document.getElementById(container);this.set("container",container);}};Canvas4.prototype.initDom=function(){var el=this.createDom();this.set("el",el);var container=this.get("container");container.appendChild(el);this.setDOMSize(this.get("width"),this.get("height"));};Canvas4.prototype.initEvents=function(){var eventController=new event_contoller_default({canvas:this});eventController.init();this.set("eventController",eventController);};Canvas4.prototype.initTimeline=function(){var timeline=new timeline_default(this);this.set("timeline",timeline);};Canvas4.prototype.setDOMSize=function(width2,height){var el=this.get("el");if(isBrowser){el.style.width=width2+PX_SUFFIX;el.style.height=height+PX_SUFFIX;}};Canvas4.prototype.changeSize=function(width2,height){this.setDOMSize(width2,height);this.set("width",width2);this.set("height",height);this.onCanvasChange("changeSize");};Canvas4.prototype.getRenderer=function(){return this.get("renderer");};Canvas4.prototype.getCursor=function(){return this.get("cursor");};Canvas4.prototype.setCursor=function(cursor){this.set("cursor",cursor);var el=this.get("el");if(isBrowser&&el){el.style.cursor=cursor;}};Canvas4.prototype.getPointByEvent=function(ev){var supportCSSTransform=this.get("supportCSSTransform");if(supportCSSTransform){if(isFirefox&&!is_nil_default(ev.layerX)&&ev.layerX!==ev.offsetX){return{x:ev.layerX,y:ev.layerY};}
if(!is_nil_default(ev.offsetX)){return{x:ev.offsetX,y:ev.offsetY};}}
var _a=this.getClientByEvent(ev),clientX=_a.x,clientY=_a.y;return this.getPointByClient(clientX,clientY);};Canvas4.prototype.getClientByEvent=function(ev){var clientInfo=ev;if(ev.touches){if(ev.type==="touchend"){clientInfo=ev.changedTouches[0];}else{clientInfo=ev.touches[0];}}
return{x:clientInfo.clientX,y:clientInfo.clientY};};Canvas4.prototype.getPointByClient=function(clientX,clientY){var el=this.get("el");var bbox=el.getBoundingClientRect();return{x:clientX-bbox.left,y:clientY-bbox.top};};Canvas4.prototype.getClientByPoint=function(x2,y2){var el=this.get("el");var bbox=el.getBoundingClientRect();return{x:x2+bbox.left,y:y2+bbox.top};};Canvas4.prototype.draw=function(){};Canvas4.prototype.removeDom=function(){var el=this.get("el");el.parentNode.removeChild(el);};Canvas4.prototype.clearEvents=function(){var eventController=this.get("eventController");eventController.destroy();};Canvas4.prototype.isCanvas=function(){return true;};Canvas4.prototype.getParent=function(){return null;};Canvas4.prototype.destroy=function(){var timeline=this.get("timeline");if(this.get("destroyed")){return;}
this.clear();if(timeline){timeline.stop();}
this.clearEvents();this.removeDom();_super.prototype.destroy.call(this);};return Canvas4;}(container_default));var canvas_default=Canvas;var AbstractGroup=(function(_super){__extends(AbstractGroup2,_super);function AbstractGroup2(){return _super!==null&&_super.apply(this,arguments)||this;}
AbstractGroup2.prototype.isGroup=function(){return true;};AbstractGroup2.prototype.isEntityGroup=function(){return false;};AbstractGroup2.prototype.clone=function(){var clone3=_super.prototype.clone.call(this);var children=this.getChildren();for(var i2=0;i2<children.length;i2++){var child=children[i2];clone3.add(child.clone());}
return clone3;};return AbstractGroup2;}(container_default));var group_default2=AbstractGroup;var AbstractShape=(function(_super){__extends(AbstractShape2,_super);function AbstractShape2(cfg){return _super.call(this,cfg)||this;}
AbstractShape2.prototype._isInBBox=function(refX,refY){var bbox=this.getBBox();return bbox.minX<=refX&&bbox.maxX>=refX&&bbox.minY<=refY&&bbox.maxY>=refY;};AbstractShape2.prototype.afterAttrsChange=function(targetAttrs){_super.prototype.afterAttrsChange.call(this,targetAttrs);this.clearCacheBBox();};AbstractShape2.prototype.getBBox=function(){var bbox=this.cfg.bbox;if(!bbox){bbox=this.calculateBBox();this.set("bbox",bbox);}
return bbox;};AbstractShape2.prototype.getCanvasBBox=function(){var canvasBBox=this.cfg.canvasBBox;if(!canvasBBox){canvasBBox=this.calculateCanvasBBox();this.set("canvasBBox",canvasBBox);}
return canvasBBox;};AbstractShape2.prototype.applyMatrix=function(matrix){_super.prototype.applyMatrix.call(this,matrix);this.set("canvasBBox",null);};AbstractShape2.prototype.calculateCanvasBBox=function(){var bbox=this.getBBox();var totalMatrix=this.getTotalMatrix();var minX=bbox.minX,minY=bbox.minY,maxX=bbox.maxX,maxY=bbox.maxY;if(totalMatrix){var topLeft=multiplyVec2(totalMatrix,[bbox.minX,bbox.minY]);var topRight=multiplyVec2(totalMatrix,[bbox.maxX,bbox.minY]);var bottomLeft=multiplyVec2(totalMatrix,[bbox.minX,bbox.maxY]);var bottomRight=multiplyVec2(totalMatrix,[bbox.maxX,bbox.maxY]);minX=Math.min(topLeft[0],topRight[0],bottomLeft[0],bottomRight[0]);maxX=Math.max(topLeft[0],topRight[0],bottomLeft[0],bottomRight[0]);minY=Math.min(topLeft[1],topRight[1],bottomLeft[1],bottomRight[1]);maxY=Math.max(topLeft[1],topRight[1],bottomLeft[1],bottomRight[1]);}
var attrs=this.attrs;if(attrs.shadowColor){var _a=attrs.shadowBlur,shadowBlur=_a===void 0?0:_a,_b=attrs.shadowOffsetX,shadowOffsetX=_b===void 0?0:_b,_c=attrs.shadowOffsetY,shadowOffsetY=_c===void 0?0:_c;var shadowLeft=minX-shadowBlur+shadowOffsetX;var shadowRight=maxX+shadowBlur+shadowOffsetX;var shadowTop=minY-shadowBlur+shadowOffsetY;var shadowBottom=maxY+shadowBlur+shadowOffsetY;minX=Math.min(minX,shadowLeft);maxX=Math.max(maxX,shadowRight);minY=Math.min(minY,shadowTop);maxY=Math.max(maxY,shadowBottom);}
return{x:minX,y:minY,minX,minY,maxX,maxY,width:maxX-minX,height:maxY-minY};};AbstractShape2.prototype.clearCacheBBox=function(){this.set("bbox",null);this.set("canvasBBox",null);};AbstractShape2.prototype.isClipShape=function(){return this.get("isClipShape");};AbstractShape2.prototype.isInShape=function(refX,refY){return false;};AbstractShape2.prototype.isOnlyHitBox=function(){return false;};AbstractShape2.prototype.isHit=function(x2,y2){var startArrowShape=this.get("startArrowShape");var endArrowShape=this.get("endArrowShape");var vec=[x2,y2,1];vec=this.invertFromMatrix(vec);var refX=vec[0],refY=vec[1];var inBBox=this._isInBBox(refX,refY);if(this.isOnlyHitBox()){return inBBox;}
if(inBBox&&!this.isClipped(refX,refY)){if(this.isInShape(refX,refY)){return true;}
if(startArrowShape&&startArrowShape.isHit(refX,refY)){return true;}
if(endArrowShape&&endArrowShape.isHit(refX,refY)){return true;}}
return false;};return AbstractShape2;}(element_default));var shape_default=AbstractShape;var cache=new Map();function register(type,method){cache.set(type,method);}
function getMethod(type){return cache.get(type);}
function rect_default(shape){var attrs=shape.attr();var x2=attrs.x,y2=attrs.y,width2=attrs.width,height=attrs.height;return{x:x2,y:y2,width:width2,height};}
function circle_default(shape){var _a=shape.attr(),x2=_a.x,y2=_a.y,r=_a.r;return{x:x2-r,y:y2-r,width:r*2,height:r*2};}
var util_exports={};__export(util_exports,{distance:()=>distance2,getBBoxByArray:()=>getBBoxByArray,getBBoxRange:()=>getBBoxRange,isNumberEqual:()=>isNumberEqual2,piMod:()=>piMod});function minNum(array){return Math.min.apply(null,array);}
function maxNum(array){return Math.max.apply(null,array);}
function distance2(x1,y1,x2,y2){var dx=x1-x2;var dy=y1-y2;return Math.sqrt(dx*dx+dy*dy);}
function isNumberEqual2(v1,v2){return Math.abs(v1-v2)<1e-3;}
function getBBoxByArray(xArr,yArr){var minX=minNum(xArr);var minY=minNum(yArr);var maxX=maxNum(xArr);var maxY=maxNum(yArr);return{x:minX,y:minY,width:maxX-minX,height:maxY-minY};}
function getBBoxRange(x1,y1,x2,y2){return{minX:minNum([x1,x2]),maxX:maxNum([x1,x2]),minY:minNum([y1,y2]),maxY:maxNum([y1,y2])};}
function piMod(angle2){return(angle2+Math.PI*2)%(Math.PI*2);}
var line_default2={box:function(x1,y1,x2,y2){return getBBoxByArray([x1,x2],[y1,y2]);},length:function(x1,y1,x2,y2){return distance2(x1,y1,x2,y2);},pointAt:function(x1,y1,x2,y2,t){return{x:(1-t)*x1+t*x2,y:(1-t)*y1+t*y2};},pointDistance:function(x1,y1,x2,y2,x3,y3){var cross2=(x2-x1)*(x3-x1)+(y2-y1)*(y3-y1);if(cross2<0){return distance2(x1,y1,x3,y3);}
var lengthSquare=(x2-x1)*(x2-x1)+(y2-y1)*(y2-y1);if(cross2>lengthSquare){return distance2(x2,y2,x3,y3);}
return this.pointToLine(x1,y1,x2,y2,x3,y3);},pointToLine:function(x1,y1,x2,y2,x3,y3){var d=[x2-x1,y2-y1];if(exactEquals2(d,[0,0])){return Math.sqrt((x3-x1)*(x3-x1)+(y3-y1)*(y3-y1));}
var u=[-d[1],d[0]];normalize(u,u);var a=[x3-x1,y3-y1];return Math.abs(dot(a,u));},tangentAngle:function(x1,y1,x2,y2){return Math.atan2(y2-y1,x2-x1);}};var EPSILON2=1e-4;function nearestPoint(xArr,yArr,x2,y2,tCallback,length3){var t;var d=Infinity;var v0=[x2,y2];var segNum=20;if(length3&&length3>200){segNum=length3/10;}
var increaseRate=1/segNum;var interval2=increaseRate/10;for(var i2=0;i2<=segNum;i2++){var _t=i2*increaseRate;var v1=[tCallback.apply(null,xArr.concat([_t])),tCallback.apply(null,yArr.concat([_t]))];var d1=distance2(v0[0],v0[1],v1[0],v1[1]);if(d1<d){t=_t;d=d1;}}
if(t===0){return{x:xArr[0],y:yArr[0]};}
if(t===1){var count=xArr.length;return{x:xArr[count-1],y:yArr[count-1]};}
d=Infinity;for(var i2=0;i2<32;i2++){if(interval2<EPSILON2){break;}
var prev=t-interval2;var next=t+interval2;var v1=[tCallback.apply(null,xArr.concat([prev])),tCallback.apply(null,yArr.concat([prev]))];var d1=distance2(v0[0],v0[1],v1[0],v1[1]);if(prev>=0&&d1<d){t=prev;d=d1;}else{var v2=[tCallback.apply(null,xArr.concat([next])),tCallback.apply(null,yArr.concat([next]))];var d2=distance2(v0[0],v0[1],v2[0],v2[1]);if(next<=1&&d2<d){t=next;d=d2;}else{interval2*=0.5;}}}
return{x:tCallback.apply(null,xArr.concat([t])),y:tCallback.apply(null,yArr.concat([t]))};}
function snapLength(xArr,yArr){var totalLength=0;var count=xArr.length;for(var i2=0;i2<count;i2++){var x2=xArr[i2];var y2=yArr[i2];var nextX=xArr[(i2+1)%count];var nextY=yArr[(i2+1)%count];totalLength+=distance2(x2,y2,nextX,nextY);}
return totalLength/2;}
function quadraticAt(p0,p1,p2,t){var onet=1-t;return onet*onet*p0+2*t*onet*p1+t*t*p2;}
function extrema(p0,p1,p2){var a=p0+p2-2*p1;if(isNumberEqual2(a,0)){return[0.5];}
var rst=(p0-p1)/a;if(rst<=1&&rst>=0){return[rst];}
return[];}
function derivativeAt(p0,p1,p2,t){return 2*(1-t)*(p1-p0)+2*t*(p2-p1);}
function divideQuadratic(x1,y1,x2,y2,x3,y3,t){var xt=quadraticAt(x1,x2,x3,t);var yt=quadraticAt(y1,y2,y3,t);var controlPoint1=line_default2.pointAt(x1,y1,x2,y2,t);var controlPoint2=line_default2.pointAt(x2,y2,x3,y3,t);return[[x1,y1,controlPoint1.x,controlPoint1.y,xt,yt],[xt,yt,controlPoint2.x,controlPoint2.y,x3,y3]];}
function quadraticLength(x1,y1,x2,y2,x3,y3,iterationCount){if(iterationCount===0){return(distance2(x1,y1,x2,y2)+distance2(x2,y2,x3,y3)+distance2(x1,y1,x3,y3))/2;}
var quadratics=divideQuadratic(x1,y1,x2,y2,x3,y3,0.5);var left=quadratics[0];var right=quadratics[1];left.push(iterationCount-1);right.push(iterationCount-1);return quadraticLength.apply(null,left)+quadraticLength.apply(null,right);}
var quadratic_default={box:function(x1,y1,x2,y2,x3,y3){var xExtrema2=extrema(x1,x2,x3)[0];var yExtrema2=extrema(y1,y2,y3)[0];var xArr=[x1,x3];var yArr=[y1,y3];if(xExtrema2!==void 0){xArr.push(quadraticAt(x1,x2,x3,xExtrema2));}
if(yExtrema2!==void 0){yArr.push(quadraticAt(y1,y2,y3,yExtrema2));}
return getBBoxByArray(xArr,yArr);},length:function(x1,y1,x2,y2,x3,y3){return quadraticLength(x1,y1,x2,y2,x3,y3,3);},nearestPoint:function(x1,y1,x2,y2,x3,y3,x0,y0){return nearestPoint([x1,x2,x3],[y1,y2,y3],x0,y0,quadraticAt);},pointDistance:function(x1,y1,x2,y2,x3,y3,x0,y0){var point2=this.nearestPoint(x1,y1,x2,y2,x3,y3,x0,y0);return distance2(point2.x,point2.y,x0,y0);},interpolationAt:quadraticAt,pointAt:function(x1,y1,x2,y2,x3,y3,t){return{x:quadraticAt(x1,x2,x3,t),y:quadraticAt(y1,y2,y3,t)};},divide:function(x1,y1,x2,y2,x3,y3,t){return divideQuadratic(x1,y1,x2,y2,x3,y3,t);},tangentAngle:function(x1,y1,x2,y2,x3,y3,t){var dx=derivativeAt(x1,x2,x3,t);var dy=derivativeAt(y1,y2,y3,t);var angle2=Math.atan2(dy,dx);return piMod(angle2);}};function cubicAt(p0,p1,p2,p3,t){var onet=1-t;return onet*onet*onet*p0+3*p1*t*onet*onet+3*p2*t*t*onet+p3*t*t*t;}
function derivativeAt2(p0,p1,p2,p3,t){var onet=1-t;return 3*(onet*onet*(p1-p0)+2*onet*t*(p2-p1)+t*t*(p3-p2));}
function extrema2(p0,p1,p2,p3){var a=-3*p0+9*p1-9*p2+3*p3;var b10=6*p0-12*p1+6*p2;var c=3*p1-3*p0;var extremas=[];var t12;var t2;var discSqrt;if(isNumberEqual2(a,0)){if(!isNumberEqual2(b10,0)){t12=-c/b10;if(t12>=0&&t12<=1){extremas.push(t12);}}}else{var disc=b10*b10-4*a*c;if(isNumberEqual2(disc,0)){extremas.push(-b10/(2*a));}else if(disc>0){discSqrt=Math.sqrt(disc);t12=(-b10+discSqrt)/(2*a);t2=(-b10-discSqrt)/(2*a);if(t12>=0&&t12<=1){extremas.push(t12);}
if(t2>=0&&t2<=1){extremas.push(t2);}}}
return extremas;}
function divideCubic(x1,y1,x2,y2,x3,y3,x4,y4,t){var xt=cubicAt(x1,x2,x3,x4,t);var yt=cubicAt(y1,y2,y3,y4,t);var c1=line_default2.pointAt(x1,y1,x2,y2,t);var c2=line_default2.pointAt(x2,y2,x3,y3,t);var c3=line_default2.pointAt(x3,y3,x4,y4,t);var c12=line_default2.pointAt(c1.x,c1.y,c2.x,c2.y,t);var c23=line_default2.pointAt(c2.x,c2.y,c3.x,c3.y,t);return[[x1,y1,c1.x,c1.y,c12.x,c12.y,xt,yt],[xt,yt,c23.x,c23.y,c3.x,c3.y,x4,y4]];}
function cubicLength(x1,y1,x2,y2,x3,y3,x4,y4,iterationCount){if(iterationCount===0){return snapLength([x1,x2,x3,x4],[y1,y2,y3,y4]);}
var cubics=divideCubic(x1,y1,x2,y2,x3,y3,x4,y4,0.5);var left=cubics[0];var right=cubics[1];left.push(iterationCount-1);right.push(iterationCount-1);return cubicLength.apply(null,left)+cubicLength.apply(null,right);}
var cubic_default={extrema:extrema2,box:function(x1,y1,x2,y2,x3,y3,x4,y4){var xArr=[x1,x4];var yArr=[y1,y4];var xExtrema2=extrema2(x1,x2,x3,x4);var yExtrema2=extrema2(y1,y2,y3,y4);for(var i2=0;i2<xExtrema2.length;i2++){xArr.push(cubicAt(x1,x2,x3,x4,xExtrema2[i2]));}
for(var i2=0;i2<yExtrema2.length;i2++){yArr.push(cubicAt(y1,y2,y3,y4,yExtrema2[i2]));}
return getBBoxByArray(xArr,yArr);},length:function(x1,y1,x2,y2,x3,y3,x4,y4){return cubicLength(x1,y1,x2,y2,x3,y3,x4,y4,3);},nearestPoint:function(x1,y1,x2,y2,x3,y3,x4,y4,x0,y0,length3){return nearestPoint([x1,x2,x3,x4],[y1,y2,y3,y4],x0,y0,cubicAt,length3);},pointDistance:function(x1,y1,x2,y2,x3,y3,x4,y4,x0,y0,length3){var point2=this.nearestPoint(x1,y1,x2,y2,x3,y3,x4,y4,x0,y0,length3);return distance2(point2.x,point2.y,x0,y0);},interpolationAt:cubicAt,pointAt:function(x1,y1,x2,y2,x3,y3,x4,y4,t){return{x:cubicAt(x1,x2,x3,x4,t),y:cubicAt(y1,y2,y3,y4,t)};},divide:function(x1,y1,x2,y2,x3,y3,x4,y4,t){return divideCubic(x1,y1,x2,y2,x3,y3,x4,y4,t);},tangentAngle:function(x1,y1,x2,y2,x3,y3,x4,y4,t){var dx=derivativeAt2(x1,x2,x3,x4,t);var dy=derivativeAt2(y1,y2,y3,y4,t);return piMod(Math.atan2(dy,dx));}};function copysign(v1,v2){var absv=Math.abs(v1);return v2>0?absv:absv*-1;}
var ellipse_default={box:function(x2,y2,rx,ry){return{x:x2-rx,y:y2-ry,width:rx*2,height:ry*2};},length:function(x2,y2,rx,ry){return Math.PI*(3*(rx+ry)-Math.sqrt((3*rx+ry)*(rx+3*ry)));},nearestPoint:function(x2,y2,rx,ry,x0,y0){var a=rx;var b10=ry;if(a===0||b10===0){return{x:x2,y:y2};}
var relativeX=x0-x2;var relativeY=y0-y2;var px=Math.abs(relativeX);var py=Math.abs(relativeY);var squareA=a*a;var squareB=b10*b10;var t=Math.PI/4;var nearestX;var nearestY;for(var i2=0;i2<4;i2++){nearestX=a*Math.cos(t);nearestY=b10*Math.sin(t);var ex=(squareA-squareB)*Math.pow(Math.cos(t),3)/a;var ey=(squareB-squareA)*Math.pow(Math.sin(t),3)/b10;var rx1=nearestX-ex;var ry1=nearestY-ey;var qx=px-ex;var qy=py-ey;var r=Math.hypot(ry1,rx1);var q=Math.hypot(qy,qx);var delta_c=r*Math.asin((rx1*qy-ry1*qx)/(r*q));var delta_t=delta_c/Math.sqrt(squareA+squareB-nearestX*nearestX-nearestY*nearestY);t+=delta_t;t=Math.min(Math.PI/2,Math.max(0,t));}
return{x:x2+copysign(nearestX,relativeX),y:y2+copysign(nearestY,relativeY)};},pointDistance:function(x2,y2,rx,ry,x0,y0){var nearestPoint2=this.nearestPoint(x2,y2,rx,ry,x0,y0);return distance2(nearestPoint2.x,nearestPoint2.y,x0,y0);},pointAt:function(x2,y2,rx,ry,t){var angle2=2*Math.PI*t;return{x:x2+rx*Math.cos(angle2),y:y2+ry*Math.sin(angle2)};},tangentAngle:function(x2,y2,rx,ry,t){var angle2=2*Math.PI*t;var tangentAngle=Math.atan2(ry*Math.cos(angle2),-rx*Math.sin(angle2));return piMod(tangentAngle);}};function derivativeXAt(cx,cy,rx,ry,xRotation,startAngle,endAngle,angle2){return-1*rx*Math.cos(xRotation)*Math.sin(angle2)-ry*Math.sin(xRotation)*Math.cos(angle2);}
function derivativeYAt(cx,cy,rx,ry,xRotation,startAngle,endAngle,angle2){return-1*rx*Math.sin(xRotation)*Math.sin(angle2)+ry*Math.cos(xRotation)*Math.cos(angle2);}
function xExtrema(rx,ry,xRotation){return Math.atan(-ry/rx*Math.tan(xRotation));}
function yExtrema(rx,ry,xRotation){return Math.atan(ry/(rx*Math.tan(xRotation)));}
function xAt(cx,cy,rx,ry,xRotation,angle2){return rx*Math.cos(xRotation)*Math.cos(angle2)-ry*Math.sin(xRotation)*Math.sin(angle2)+cx;}
function yAt(cx,cy,rx,ry,xRotation,angle2){return rx*Math.sin(xRotation)*Math.cos(angle2)+ry*Math.cos(xRotation)*Math.sin(angle2)+cy;}
function getAngle(rx,ry,x0,y0){var angle2=Math.atan2(y0*rx,x0*ry);return(angle2+Math.PI*2)%(Math.PI*2);}
function getPoint(rx,ry,angle2){return{x:rx*Math.cos(angle2),y:ry*Math.sin(angle2)};}
function rotate3(x2,y2,angle2){var cos=Math.cos(angle2);var sin=Math.sin(angle2);return[x2*cos-y2*sin,x2*sin+y2*cos];}
var arc_default={box:function(cx,cy,rx,ry,xRotation,startAngle,endAngle){var xDim=xExtrema(rx,ry,xRotation);var minX=Infinity;var maxX=-Infinity;var xs=[startAngle,endAngle];for(var i2=-Math.PI*2;i2<=Math.PI*2;i2+=Math.PI){var xAngle=xDim+i2;if(startAngle<endAngle){if(startAngle<xAngle&&xAngle<endAngle){xs.push(xAngle);}}else{if(endAngle<xAngle&&xAngle<startAngle){xs.push(xAngle);}}}
for(var i2=0;i2<xs.length;i2++){var x2=xAt(cx,cy,rx,ry,xRotation,xs[i2]);if(x2<minX){minX=x2;}
if(x2>maxX){maxX=x2;}}
var yDim=yExtrema(rx,ry,xRotation);var minY=Infinity;var maxY=-Infinity;var ys=[startAngle,endAngle];for(var i2=-Math.PI*2;i2<=Math.PI*2;i2+=Math.PI){var yAngle=yDim+i2;if(startAngle<endAngle){if(startAngle<yAngle&&yAngle<endAngle){ys.push(yAngle);}}else{if(endAngle<yAngle&&yAngle<startAngle){ys.push(yAngle);}}}
for(var i2=0;i2<ys.length;i2++){var y2=yAt(cx,cy,rx,ry,xRotation,ys[i2]);if(y2<minY){minY=y2;}
if(y2>maxY){maxY=y2;}}
return{x:minX,y:minY,width:maxX-minX,height:maxY-minY};},length:function(cx,cy,rx,ry,xRotation,startAngle,endAngle){},nearestPoint:function(cx,cy,rx,ry,xRotation,startAngle,endAngle,x0,y0){var relativeVector=rotate3(x0-cx,y0-cy,-xRotation);var x1=relativeVector[0],y1=relativeVector[1];var relativePoint=ellipse_default.nearestPoint(0,0,rx,ry,x1,y1);var angle2=getAngle(rx,ry,relativePoint.x,relativePoint.y);if(angle2<startAngle){relativePoint=getPoint(rx,ry,startAngle);}else if(angle2>endAngle){relativePoint=getPoint(rx,ry,endAngle);}
var vector=rotate3(relativePoint.x,relativePoint.y,xRotation);return{x:vector[0]+cx,y:vector[1]+cy};},pointDistance:function(cx,cy,rx,ry,xRotation,startAngle,endAngle,x0,y0){var nearestPoint2=this.nearestPoint(cx,cy,rx,ry,x0,y0);return distance2(nearestPoint2.x,nearestPoint2.y,x0,y0);},pointAt:function(cx,cy,rx,ry,xRotation,startAngle,endAngle,t){var angle2=(endAngle-startAngle)*t+startAngle;return{x:xAt(cx,cy,rx,ry,xRotation,angle2),y:yAt(cx,cy,rx,ry,xRotation,angle2)};},tangentAngle:function(cx,cy,rx,ry,xRotation,startAngle,endAngle,t){var angle2=(endAngle-startAngle)*t+startAngle;var dx=derivativeXAt(cx,cy,rx,ry,xRotation,startAngle,endAngle,angle2);var dy=derivativeYAt(cx,cy,rx,ry,xRotation,startAngle,endAngle,angle2);return piMod(Math.atan2(dy,dx));}};function analyzePoints(points){var totalLength=0;var segments=[];for(var i2=0;i2<points.length-1;i2++){var from=points[i2];var to=points[i2+1];var length_1=distance2(from[0],from[1],to[0],to[1]);var seg={from,to,length:length_1};segments.push(seg);totalLength+=length_1;}
return{segments,totalLength};}
function lengthOfSegment(points){if(points.length<2){return 0;}
var totalLength=0;for(var i2=0;i2<points.length-1;i2++){var from=points[i2];var to=points[i2+1];totalLength+=distance2(from[0],from[1],to[0],to[1]);}
return totalLength;}
function pointAtSegments(points,t){if(t>1||t<0||points.length<2){return null;}
var _a=analyzePoints(points),segments=_a.segments,totalLength=_a.totalLength;if(totalLength===0){return{x:points[0][0],y:points[0][1]};}
var startRatio=0;var point2=null;for(var i2=0;i2<segments.length;i2++){var seg=segments[i2];var from=seg.from,to=seg.to;var currentRatio=seg.length/totalLength;if(t>=startRatio&&t<=startRatio+currentRatio){var localRatio=(t-startRatio)/currentRatio;point2=line_default2.pointAt(from[0],from[1],to[0],to[1],localRatio);break;}
startRatio+=currentRatio;}
return point2;}
function angleAtSegments(points,t){if(t>1||t<0||points.length<2){return 0;}
var _a=analyzePoints(points),segments=_a.segments,totalLength=_a.totalLength;var startRatio=0;var angle2=0;for(var i2=0;i2<segments.length;i2++){var seg=segments[i2];var from=seg.from,to=seg.to;var currentRatio=seg.length/totalLength;if(t>=startRatio&&t<=startRatio+currentRatio){angle2=Math.atan2(to[1]-from[1],to[0]-from[0]);break;}
startRatio+=currentRatio;}
return angle2;}
function distanceAtSegment(points,x2,y2){var minDistance=Infinity;for(var i2=0;i2<points.length-1;i2++){var point2=points[i2];var nextPoint=points[i2+1];var distance_1=line_default2.pointDistance(point2[0],point2[1],nextPoint[0],nextPoint[1],x2,y2);if(distance_1<minDistance){minDistance=distance_1;}}
return minDistance;}
var polyline_default={box:function(points){var xArr=[];var yArr=[];for(var i2=0;i2<points.length;i2++){var point2=points[i2];xArr.push(point2[0]);yArr.push(point2[1]);}
return getBBoxByArray(xArr,yArr);},length:function(points){return lengthOfSegment(points);},pointAt:function(points,t){return pointAtSegments(points,t);},pointDistance:function(points,x2,y2){return distanceAtSegment(points,x2,y2);},tangentAngle:function(points,t){return angleAtSegments(points,t);}};function mergeBBox(bbox1,bbox2){if(!bbox1||!bbox2){return bbox1||bbox2;}
return{minX:Math.min(bbox1.minX,bbox2.minX),minY:Math.min(bbox1.minY,bbox2.minY),maxX:Math.max(bbox1.maxX,bbox2.maxX),maxY:Math.max(bbox1.maxY,bbox2.maxY)};}
function mergeArrowBBox(shape,bbox){var startArrowShape=shape.get("startArrowShape");var endArrowShape=shape.get("endArrowShape");var startArrowBBox=null;var endArrowBBox=null;if(startArrowShape){startArrowBBox=startArrowShape.getCanvasBBox();bbox=mergeBBox(bbox,startArrowBBox);}
if(endArrowShape){endArrowBBox=endArrowShape.getCanvasBBox();bbox=mergeBBox(bbox,endArrowBBox);}
return bbox;}
function polyline_default2(shape){var attrs=shape.attr();var points=attrs.points;var xArr=[];var yArr=[];for(var i2=0;i2<points.length;i2++){var point2=points[i2];xArr.push(point2[0]);yArr.push(point2[1]);}
var _a=util_exports.getBBoxByArray(xArr,yArr),x2=_a.x,y2=_a.y,width2=_a.width,height=_a.height;var bbox={minX:x2,minY:y2,maxX:x2+width2,maxY:y2+height};bbox=mergeArrowBBox(shape,bbox);return{x:bbox.minX,y:bbox.minY,width:bbox.maxX-bbox.minX,height:bbox.maxY-bbox.minY};}
function polygon_default2(shape){var attrs=shape.attr();var points=attrs.points;var xArr=[];var yArr=[];for(var i2=0;i2<points.length;i2++){var point2=points[i2];xArr.push(point2[0]);yArr.push(point2[1]);}
return util_exports.getBBoxByArray(xArr,yArr);}
var offScreenCtx=null;function getOffScreenContext(){if(!offScreenCtx){var canvas=document.createElement("canvas");canvas.width=1;canvas.height=1;offScreenCtx=canvas.getContext("2d");}
return offScreenCtx;}
function getTextHeight(text,fontSize2,lineHeight){var lineCount=1;if(is_string_default(text)){lineCount=text.split("\n").length;}
if(lineCount>1){var spaceingY=getLineSpaceing(fontSize2,lineHeight);return fontSize2*lineCount+spaceingY*(lineCount-1);}
return fontSize2;}
function getLineSpaceing(fontSize2,lineHeight){return lineHeight?lineHeight-fontSize2:fontSize2*0.14;}
function getTextWidth(text,font){var context=getOffScreenContext();var width2=0;if(is_nil_default(text)||text===""){return width2;}
context.save();context.font=font;if(is_string_default(text)&&text.includes("\n")){var textArr=text.split("\n");each_default(textArr,function(subText){var measureWidth=context.measureText(subText).width;if(width2<measureWidth){width2=measureWidth;}});}else{width2=context.measureText(text).width;}
context.restore();return width2;}
function assembleFont(attrs){var fontSize2=attrs.fontSize,fontFamily2=attrs.fontFamily,fontWeight=attrs.fontWeight,fontStyle=attrs.fontStyle,fontVariant=attrs.fontVariant;return[fontStyle,fontVariant,fontWeight,fontSize2+"px",fontFamily2].join(" ").trim();}
function text_default(shape){var attrs=shape.attr();var x2=attrs.x,y2=attrs.y,text=attrs.text,fontSize2=attrs.fontSize,lineHeight=attrs.lineHeight;var font=attrs.font;if(!font){font=assembleFont(attrs);}
var width2=getTextWidth(text,font);var bbox;if(!width2){bbox={x:x2,y:y2,width:0,height:0};}else{var textAlign=attrs.textAlign,textBaseline=attrs.textBaseline;var height=getTextHeight(text,fontSize2,lineHeight);var point2={x:x2,y:y2-height};if(textAlign){if(textAlign==="end"||textAlign==="right"){point2.x-=width2;}else if(textAlign==="center"){point2.x-=width2/2;}}
if(textBaseline){if(textBaseline==="top"){point2.y+=height;}else if(textBaseline==="middle"){point2.y+=height/2;}}
bbox={x:point2.x,y:point2.y,width:width2,height};}
return bbox;}
var regexTags=/[MLHVQTCSAZ]([^MLHVQTCSAZ]*)/ig;var regexDot=/[^\s\,]+/ig;function parsePath(p){var path4=p||[];if(is_array_default(path4)){return path4;}
if(is_string_default(path4)){path4=path4.match(regexTags);each_default(path4,function(item,index2){item=item.match(regexDot);if(item[0].length>1){var tag2=item[0].charAt(0);item.splice(1,0,item[0].substr(1));item[0]=tag2;}
each_default(item,function(sub3,i2){if(!isNaN(sub3)){item[i2]=+sub3;}});path4[index2]=item;});return path4;}}
var parse_path_default=parsePath;var SPACES2="	\n\v\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029";var PATH_COMMAND2=new RegExp("([a-z])["+SPACES2+",]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?["+SPACES2+"]*,?["+SPACES2+"]*)+)","ig");var PATH_VALUES2=new RegExp("(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)["+SPACES2+"]*,?["+SPACES2+"]*","ig");var TAU=Math.PI*2;function vMag(v){return Math.sqrt(v[0]*v[0]+v[1]*v[1]);}
function vRatio(u,v){return vMag(u)*vMag(v)?(u[0]*v[0]+u[1]*v[1])/(vMag(u)*vMag(v)):1;}
function vAngle(u,v){return(u[0]*v[1]<u[1]*v[0]?-1:1)*Math.acos(vRatio(u,v));}
function isSamePoint(point1,point2){return point1[0]===point2[0]&&point1[1]===point2[1];}
function getArcParams(startPoint,params){var rx=params[1];var ry=params[2];var xRotation=mod_default(to_radian_default(params[3]),Math.PI*2);var arcFlag=params[4];var sweepFlag=params[5];var x1=startPoint[0];var y1=startPoint[1];var x2=params[6];var y2=params[7];var xp=Math.cos(xRotation)*(x1-x2)/2+Math.sin(xRotation)*(y1-y2)/2;var yp=-1*Math.sin(xRotation)*(x1-x2)/2+Math.cos(xRotation)*(y1-y2)/2;var lambda=xp*xp/(rx*rx)+yp*yp/(ry*ry);if(lambda>1){rx*=Math.sqrt(lambda);ry*=Math.sqrt(lambda);}
var diff=rx*rx*(yp*yp)+ry*ry*(xp*xp);var f=diff?Math.sqrt((rx*rx*(ry*ry)-diff)/diff):1;if(arcFlag===sweepFlag){f*=-1;}
if(isNaN(f)){f=0;}
var cxp=ry?f*rx*yp/ry:0;var cyp=rx?f*-ry*xp/rx:0;var cx=(x1+x2)/2+Math.cos(xRotation)*cxp-Math.sin(xRotation)*cyp;var cy=(y1+y2)/2+Math.sin(xRotation)*cxp+Math.cos(xRotation)*cyp;var u=[(xp-cxp)/rx,(yp-cyp)/ry];var v=[(-1*xp-cxp)/rx,(-1*yp-cyp)/ry];var theta=vAngle([1,0],u);var dTheta=vAngle(u,v);if(vRatio(u,v)<=-1){dTheta=Math.PI;}
if(vRatio(u,v)>=1){dTheta=0;}
if(sweepFlag===0&&dTheta>0){dTheta=dTheta-2*Math.PI;}
if(sweepFlag===1&&dTheta<0){dTheta=dTheta+2*Math.PI;}
return{cx,cy,rx:isSamePoint(startPoint,[x2,y2])?0:rx,ry:isSamePoint(startPoint,[x2,y2])?0:ry,startAngle:theta,endAngle:theta+dTheta,xRotation,arcFlag,sweepFlag};}
function toSymmetry(point2,center){return[center[0]+(center[0]-point2[0]),center[1]+(center[1]-point2[1])];}
function getSegments(path4){path4=parse_path_default(path4);var segments=[];var currentPoint=null;var nextParams=null;var startMovePoint=null;var lastStartMovePointIndex=0;var count=path4.length;for(var i2=0;i2<count;i2++){var params=path4[i2];nextParams=path4[i2+1];var command=params[0];var segment={command,prePoint:currentPoint,params,startTangent:null,endTangent:null};switch(command){case"M":startMovePoint=[params[1],params[2]];lastStartMovePointIndex=i2;break;case"A":var arcParams=getArcParams(currentPoint,params);segment["arcParams"]=arcParams;break;default:break;}
if(command==="Z"){currentPoint=startMovePoint;nextParams=path4[lastStartMovePointIndex+1];}else{var len2=params.length;currentPoint=[params[len2-2],params[len2-1]];}
if(nextParams&&nextParams[0]==="Z"){nextParams=path4[lastStartMovePointIndex];if(segments[lastStartMovePointIndex]){segments[lastStartMovePointIndex].prePoint=currentPoint;}}
segment["currentPoint"]=currentPoint;if(segments[lastStartMovePointIndex]&&isSamePoint(currentPoint,segments[lastStartMovePointIndex].currentPoint)){segments[lastStartMovePointIndex].prePoint=segment.prePoint;}
var nextPoint=nextParams?[nextParams[nextParams.length-2],nextParams[nextParams.length-1]]:null;segment["nextPoint"]=nextPoint;var prePoint=segment.prePoint;if(["L","H","V"].includes(command)){segment.startTangent=[prePoint[0]-currentPoint[0],prePoint[1]-currentPoint[1]];segment.endTangent=[currentPoint[0]-prePoint[0],currentPoint[1]-prePoint[1]];}else if(command==="Q"){var cp=[params[1],params[2]];segment.startTangent=[prePoint[0]-cp[0],prePoint[1]-cp[1]];segment.endTangent=[currentPoint[0]-cp[0],currentPoint[1]-cp[1]];}else if(command==="T"){var preSegment=segments[i2-1];var cp=toSymmetry(preSegment.currentPoint,prePoint);if(preSegment.command==="Q"){segment.command="Q";segment.startTangent=[prePoint[0]-cp[0],prePoint[1]-cp[1]];segment.endTangent=[currentPoint[0]-cp[0],currentPoint[1]-cp[1]];}else{segment.command="TL";segment.startTangent=[prePoint[0]-currentPoint[0],prePoint[1]-currentPoint[1]];segment.endTangent=[currentPoint[0]-prePoint[0],currentPoint[1]-prePoint[1]];}}else if(command==="C"){var cp1=[params[1],params[2]];var cp2=[params[3],params[4]];segment.startTangent=[prePoint[0]-cp1[0],prePoint[1]-cp1[1]];segment.endTangent=[currentPoint[0]-cp2[0],currentPoint[1]-cp2[1]];if(segment.startTangent[0]===0&&segment.startTangent[1]===0){segment.startTangent=[cp1[0]-cp2[0],cp1[1]-cp2[1]];}
if(segment.endTangent[0]===0&&segment.endTangent[1]===0){segment.endTangent=[cp2[0]-cp1[0],cp2[1]-cp1[1]];}}else if(command==="S"){var preSegment=segments[i2-1];var cp1=toSymmetry(preSegment.currentPoint,prePoint);var cp2=[params[1],params[2]];if(preSegment.command==="C"){segment.command="C";segment.startTangent=[prePoint[0]-cp1[0],prePoint[1]-cp1[1]];segment.endTangent=[currentPoint[0]-cp2[0],currentPoint[1]-cp2[1]];}else{segment.command="SQ";segment.startTangent=[prePoint[0]-cp2[0],prePoint[1]-cp2[1]];segment.endTangent=[currentPoint[0]-cp2[0],currentPoint[1]-cp2[1]];}}else if(command==="A"){var d=1e-3;var _a=segment["arcParams"]||{},_b=_a.cx,cx=_b===void 0?0:_b,_c=_a.cy,cy=_c===void 0?0:_c,_d=_a.rx,rx=_d===void 0?0:_d,_e=_a.ry,ry=_e===void 0?0:_e,_f=_a.sweepFlag,sweepFlag=_f===void 0?0:_f,_g=_a.startAngle,startAngle=_g===void 0?0:_g,_h=_a.endAngle,endAngle=_h===void 0?0:_h;if(sweepFlag===0){d*=-1;}
var dx1=rx*Math.cos(startAngle-d)+cx;var dy1=ry*Math.sin(startAngle-d)+cy;segment.startTangent=[dx1-startMovePoint[0],dy1-startMovePoint[1]];var dx2=rx*Math.cos(startAngle+endAngle+d)+cx;var dy2=ry*Math.sin(startAngle+endAngle-d)+cy;segment.endTangent=[prePoint[0]-dx2,prePoint[1]-dy2];}
segments.push(segment);}
return segments;}
function getPathBox(segments,lineWidth){var xArr=[];var yArr=[];var segmentsWithAngle=[];for(var i2=0;i2<segments.length;i2++){var segment=segments[i2];var currentPoint=segment.currentPoint,params=segment.params,prePoint=segment.prePoint;var box=void 0;switch(segment.command){case"Q":box=quadratic_default.box(prePoint[0],prePoint[1],params[1],params[2],params[3],params[4]);break;case"C":box=cubic_default.box(prePoint[0],prePoint[1],params[1],params[2],params[3],params[4],params[5],params[6]);break;case"A":var arcParams=segment.arcParams;box=arc_default.box(arcParams.cx,arcParams.cy,arcParams.rx,arcParams.ry,arcParams.xRotation,arcParams.startAngle,arcParams.endAngle);break;default:xArr.push(currentPoint[0]);yArr.push(currentPoint[1]);break;}
if(box){segment.box=box;xArr.push(box.x,box.x+box.width);yArr.push(box.y,box.y+box.height);}
if(lineWidth&&(segment.command==="L"||segment.command==="M")&&segment.prePoint&&segment.nextPoint){segmentsWithAngle.push(segment);}}
xArr=xArr.filter(function(item){return!Number.isNaN(item)&&item!==Infinity&&item!==-Infinity;});yArr=yArr.filter(function(item){return!Number.isNaN(item)&&item!==Infinity&&item!==-Infinity;});var minX=min_default(xArr);var minY=min_default(yArr);var maxX=max_default(xArr);var maxY=max_default(yArr);if(segmentsWithAngle.length===0){return{x:minX,y:minY,width:maxX-minX,height:maxY-minY};}
for(var i2=0;i2<segmentsWithAngle.length;i2++){var segment=segmentsWithAngle[i2];var currentPoint=segment.currentPoint;var extra=void 0;if(currentPoint[0]===minX){extra=getExtraFromSegmentWithAngle(segment,lineWidth);minX=minX-extra.xExtra;}else if(currentPoint[0]===maxX){extra=getExtraFromSegmentWithAngle(segment,lineWidth);maxX=maxX+extra.xExtra;}
if(currentPoint[1]===minY){extra=getExtraFromSegmentWithAngle(segment,lineWidth);minY=minY-extra.yExtra;}else if(currentPoint[1]===maxY){extra=getExtraFromSegmentWithAngle(segment,lineWidth);maxY=maxY+extra.yExtra;}}
return{x:minX,y:minY,width:maxX-minX,height:maxY-minY};}
function getExtraFromSegmentWithAngle(segment,lineWidth){var prePoint=segment.prePoint,currentPoint=segment.currentPoint,nextPoint=segment.nextPoint;var currentAndPre=Math.pow(currentPoint[0]-prePoint[0],2)+Math.pow(currentPoint[1]-prePoint[1],2);var currentAndNext=Math.pow(currentPoint[0]-nextPoint[0],2)+Math.pow(currentPoint[1]-nextPoint[1],2);var preAndNext=Math.pow(prePoint[0]-nextPoint[0],2)+Math.pow(prePoint[1]-nextPoint[1],2);var currentAngle=Math.acos((currentAndPre+currentAndNext-preAndNext)/(2*Math.sqrt(currentAndPre)*Math.sqrt(currentAndNext)));if(!currentAngle||Math.sin(currentAngle)===0||isNumberEqual(currentAngle,0)){return{xExtra:0,yExtra:0};}
var xAngle=Math.abs(Math.atan2(nextPoint[1]-currentPoint[1],nextPoint[0]-currentPoint[0]));var yAngle=Math.abs(Math.atan2(nextPoint[0]-currentPoint[0],nextPoint[1]-currentPoint[1]));xAngle=xAngle>Math.PI/2?Math.PI-xAngle:xAngle;yAngle=yAngle>Math.PI/2?Math.PI-yAngle:yAngle;var extra={xExtra:Math.cos(currentAngle/2-xAngle)*(lineWidth/2*(1/Math.sin(currentAngle/2)))-lineWidth/2||0,yExtra:Math.cos(yAngle-currentAngle/2)*(lineWidth/2*(1/Math.sin(currentAngle/2)))-lineWidth/2||0};return extra;}
function path_default2(shape){var attrs=shape.attr();var path4=attrs.path,stroke=attrs.stroke;var lineWidth=stroke?attrs.lineWidth:0;var segments=shape.get("segments")||getSegments(path4);var _a=getPathBox(segments,lineWidth),x2=_a.x,y2=_a.y,width2=_a.width,height=_a.height;var bbox={minX:x2,minY:y2,maxX:x2+width2,maxY:y2+height};bbox=mergeArrowBBox(shape,bbox);return{x:bbox.minX,y:bbox.minY,width:bbox.maxX-bbox.minX,height:bbox.maxY-bbox.minY};}
function line_default3(shape){var attrs=shape.attr();var x1=attrs.x1,y1=attrs.y1,x2=attrs.x2,y2=attrs.y2;var minX=Math.min(x1,x2);var maxX=Math.max(x1,x2);var minY=Math.min(y1,y2);var maxY=Math.max(y1,y2);var bbox={minX,maxX,minY,maxY};bbox=mergeArrowBBox(shape,bbox);return{x:bbox.minX,y:bbox.minY,width:bbox.maxX-bbox.minX,height:bbox.maxY-bbox.minY};}
function ellipse_default2(shape){var attrs=shape.attr();var x2=attrs.x,y2=attrs.y,rx=attrs.rx,ry=attrs.ry;return{x:x2-rx,y:y2-ry,width:rx*2,height:ry*2};}
register("rect",rect_default);register("image",rect_default);register("circle",circle_default);register("marker",circle_default);register("polyline",polyline_default2);register("polygon",polygon_default2);register("text",text_default);register("path",path_default2);register("line",line_default3);register("ellipse",ellipse_default2);var SHAPE_TO_TAGS={rect:"path",circle:"circle",line:"line",path:"path",marker:"path",text:"text",polyline:"polyline",polygon:"polygon",image:"image",ellipse:"ellipse",dom:"foreignObject"};var SVG_ATTR_MAP={opacity:"opacity",fillStyle:"fill",fill:"fill",fillOpacity:"fill-opacity",strokeStyle:"stroke",strokeOpacity:"stroke-opacity",stroke:"stroke",x:"x",y:"y",r:"r",rx:"rx",ry:"ry",width:"width",height:"height",x1:"x1",x2:"x2",y1:"y1",y2:"y2",lineCap:"stroke-linecap",lineJoin:"stroke-linejoin",lineWidth:"stroke-width",lineDash:"stroke-dasharray",lineDashOffset:"stroke-dashoffset",miterLimit:"stroke-miterlimit",font:"font",fontSize:"font-size",fontStyle:"font-style",fontVariant:"font-variant",fontWeight:"font-weight",fontFamily:"font-family",startArrow:"marker-start",endArrow:"marker-end",path:"d",class:"class",id:"id",style:"style",preserveAspectRatio:"preserveAspectRatio"};function createSVGElement(type){return document.createElementNS("http://www.w3.org/2000/svg",type);}
function createDom(shape){var type=SHAPE_TO_TAGS[shape.type];var parent=shape.getParent();if(!type){throw new Error("the type "+shape.type+" is not supported by svg");}
var element=createSVGElement(type);if(shape.get("id")){element.id=shape.get("id");}
shape.set("el",element);shape.set("attrs",{});if(parent){var parentNode=parent.get("el");if(parentNode){parentNode.appendChild(element);}else{parentNode=parent.createDom();parent.set("el",parentNode);parentNode.appendChild(element);}}
return element;}
function sortDom(element,sorter){var el=element.get("el");var childList=to_array_default(el.children).sort(sorter);var fragment=document.createDocumentFragment();childList.forEach(function(child){fragment.appendChild(child);});el.appendChild(fragment);}
function moveTo(element,targetIndex){var parentNode=element.parentNode;var siblings=Array.from(parentNode.childNodes).filter(function(node2){return node2.nodeType===1&&node2.nodeName.toLowerCase()!=="defs";});var target=siblings[targetIndex];var currentIndex=siblings.indexOf(element);if(target){if(currentIndex>targetIndex){parentNode.insertBefore(element,target);}else if(currentIndex<targetIndex){var targetNext=siblings[targetIndex+1];if(targetNext){parentNode.insertBefore(element,targetNext);}else{parentNode.appendChild(element);}}}else{parentNode.appendChild(element);}}
function setShadow(model3,context){var el=model3.cfg.el;var attrs=model3.attr();var cfg={dx:attrs.shadowOffsetX,dy:attrs.shadowOffsetY,blur:attrs.shadowBlur,color:attrs.shadowColor};if(!cfg.dx&&!cfg.dy&&!cfg.blur&&!cfg.color){el.removeAttribute("filter");}else{var id9=context.find("filter",cfg);if(!id9){id9=context.addShadow(cfg);}
el.setAttribute("filter","url(#"+id9+")");}}
function setTransform(model3){var matrix=model3.attr().matrix;if(matrix){var el=model3.cfg.el;var transform7=[];for(var i2=0;i2<9;i2+=3){transform7.push(matrix[i2]+","+matrix[i2+1]);}
transform7=transform7.join(",");if(transform7.indexOf("NaN")===-1){el.setAttribute("transform","matrix("+transform7+")");}else{console.warn("invalid matrix:",matrix);}}}
function setClip(model3,context){var clip=model3.getClip();var el=model3.get("el");if(!clip){el.removeAttribute("clip-path");}else if(clip&&!el.hasAttribute("clip-path")){createDom(clip);clip.createPath(context);var id9=context.addClip(clip);el.setAttribute("clip-path","url(#"+id9+")");}}
function drawChildren(context,children){children.forEach(function(child){child.draw(context);});}
function refreshElement(element,changeType){var canvas=element.get("canvas");if(canvas&&canvas.get("autoDraw")){var context=canvas.get("context");var parent_1=element.getParent();var parentChildren=parent_1?parent_1.getChildren():[canvas];var el=element.get("el");if(changeType==="remove"){var isClipShape=element.get("isClipShape");if(isClipShape){var clipPathEl=el&&el.parentNode;var defsEl=clipPathEl&&clipPathEl.parentNode;if(clipPathEl&&defsEl){defsEl.removeChild(clipPathEl);}}else if(el&&el.parentNode){el.parentNode.removeChild(el);}}else if(changeType==="show"){el.setAttribute("visibility","visible");}else if(changeType==="hide"){el.setAttribute("visibility","hidden");}else if(changeType==="zIndex"){moveTo(el,parentChildren.indexOf(element));}else if(changeType==="sort"){var children_1=element.get("children");if(children_1&&children_1.length){sortDom(element,function(a,b10){return children_1.indexOf(a)-children_1.indexOf(b10)?1:0;});}}else if(changeType==="clear"){if(el){el.innerHTML="";}}else if(changeType==="matrix"){setTransform(element);}else if(changeType==="clip"){setClip(element,context);}else if(changeType==="attr"){}else if(changeType==="add"){element.draw(context);}}}
var Group=(function(_super){__extends(Group2,_super);function Group2(){return _super!==null&&_super.apply(this,arguments)||this;}
Group2.prototype.isEntityGroup=function(){return true;};Group2.prototype.createDom=function(){var element=createSVGElement("g");this.set("el",element);var parent=this.getParent();if(parent){var parentNode=parent.get("el");if(parentNode){parentNode.appendChild(element);}else{parentNode=parent.createDom();parent.set("el",parentNode);parentNode.appendChild(element);}}
return element;};Group2.prototype.afterAttrsChange=function(targetAttrs){_super.prototype.afterAttrsChange.call(this,targetAttrs);var canvas=this.get("canvas");if(canvas&&canvas.get("autoDraw")){var context=canvas.get("context");this.createPath(context,targetAttrs);}};Group2.prototype.onCanvasChange=function(changeType){refreshElement(this,changeType);};Group2.prototype.getShapeBase=function(){return shape_exports;};Group2.prototype.getGroupBase=function(){return Group2;};Group2.prototype.draw=function(context){var children=this.getChildren();var el=this.get("el");if(this.get("destroyed")){if(el){el.parentNode.removeChild(el);}}else{if(!el){this.createDom();}
setClip(this,context);this.createPath(context);if(children.length){drawChildren(context,children);}}};Group2.prototype.createPath=function(context,targetAttrs){var attrs=this.attr();var el=this.get("el");each_default(targetAttrs||attrs,function(value,attr){if(SVG_ATTR_MAP[attr]){el.setAttribute(SVG_ATTR_MAP[attr],value);}});setTransform(this);};return Group2;}(group_default2));var group_default3=Group;var ShapeBase=(function(_super){__extends(ShapeBase2,_super);function ShapeBase2(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.type="svg";_this.canFill=false;_this.canStroke=false;return _this;}
ShapeBase2.prototype.getDefaultAttrs=function(){var attrs=_super.prototype.getDefaultAttrs.call(this);return __assign(__assign({},attrs),{lineWidth:1,lineAppendWidth:0,strokeOpacity:1,fillOpacity:1});};ShapeBase2.prototype.afterAttrsChange=function(targetAttrs){_super.prototype.afterAttrsChange.call(this,targetAttrs);var canvas=this.get("canvas");if(canvas&&canvas.get("autoDraw")){var context=canvas.get("context");this.draw(context,targetAttrs);}};ShapeBase2.prototype.getShapeBase=function(){return shape_exports;};ShapeBase2.prototype.getGroupBase=function(){return group_default3;};ShapeBase2.prototype.onCanvasChange=function(changeType){refreshElement(this,changeType);};ShapeBase2.prototype.calculateBBox=function(){var el=this.get("el");var bbox=null;if(el){bbox=el.getBBox();}else{var bboxMethod=getMethod(this.get("type"));if(bboxMethod){bbox=bboxMethod(this);}}
if(bbox){var x2=bbox.x,y2=bbox.y,width2=bbox.width,height=bbox.height;var lineWidth=this.getHitLineWidth();var halfWidth=lineWidth/2;var minX=x2-halfWidth;var minY=y2-halfWidth;var maxX=x2+width2+halfWidth;var maxY=y2+height+halfWidth;return{x:minX,y:minY,minX,minY,maxX,maxY,width:width2+lineWidth,height:height+lineWidth};}
return{x:0,y:0,minX:0,minY:0,maxX:0,maxY:0,width:0,height:0};};ShapeBase2.prototype.isFill=function(){var _a=this.attr(),fill=_a.fill,fillStyle=_a.fillStyle;return(fill||fillStyle||this.isClipShape())&&this.canFill;};ShapeBase2.prototype.isStroke=function(){var _a=this.attr(),stroke=_a.stroke,strokeStyle=_a.strokeStyle;return(stroke||strokeStyle)&&this.canStroke;};ShapeBase2.prototype.draw=function(context,targetAttrs){var el=this.get("el");if(this.get("destroyed")){if(el){el.parentNode.removeChild(el);}}else{if(!el){createDom(this);}
setClip(this,context);this.createPath(context,targetAttrs);this.shadow(context,targetAttrs);this.strokeAndFill(context,targetAttrs);this.transform(targetAttrs);}};ShapeBase2.prototype.createPath=function(context,targetAttrs){};ShapeBase2.prototype.strokeAndFill=function(context,targetAttrs){var attrs=targetAttrs||this.attr();var fill=attrs.fill,fillStyle=attrs.fillStyle,stroke=attrs.stroke,strokeStyle=attrs.strokeStyle,fillOpacity=attrs.fillOpacity,strokeOpacity=attrs.strokeOpacity,lineWidth=attrs.lineWidth;var el=this.get("el");if(this.canFill){if(!targetAttrs){this._setColor(context,"fill",fill||fillStyle);}else if("fill"in attrs){this._setColor(context,"fill",fill);}else if("fillStyle"in attrs){this._setColor(context,"fill",fillStyle);}
if(fillOpacity){el.setAttribute(SVG_ATTR_MAP["fillOpacity"],fillOpacity);}}
if(this.canStroke&&lineWidth>0){if(!targetAttrs){this._setColor(context,"stroke",stroke||strokeStyle);}else if("stroke"in attrs){this._setColor(context,"stroke",stroke);}else if("strokeStyle"in attrs){this._setColor(context,"stroke",strokeStyle);}
if(strokeOpacity){el.setAttribute(SVG_ATTR_MAP["strokeOpacity"],strokeOpacity);}
if(lineWidth){el.setAttribute(SVG_ATTR_MAP["lineWidth"],lineWidth);}}};ShapeBase2.prototype._setColor=function(context,attr,value){var el=this.get("el");if(!value){el.setAttribute(SVG_ATTR_MAP[attr],"none");return;}
value=value.trim();if(/^[r,R,L,l]{1}[\s]*\(/.test(value)){var id9=context.find("gradient",value);if(!id9){id9=context.addGradient(value);}
el.setAttribute(SVG_ATTR_MAP[attr],"url(#"+id9+")");}else if(/^[p,P]{1}[\s]*\(/.test(value)){var id9=context.find("pattern",value);if(!id9){id9=context.addPattern(value);}
el.setAttribute(SVG_ATTR_MAP[attr],"url(#"+id9+")");}else{el.setAttribute(SVG_ATTR_MAP[attr],value);}};ShapeBase2.prototype.shadow=function(context,targetAttrs){var attrs=this.attr();var _a=targetAttrs||attrs,shadowOffsetX=_a.shadowOffsetX,shadowOffsetY=_a.shadowOffsetY,shadowBlur=_a.shadowBlur,shadowColor=_a.shadowColor;if(shadowOffsetX||shadowOffsetY||shadowBlur||shadowColor){setShadow(this,context);}};ShapeBase2.prototype.transform=function(targetAttrs){var attrs=this.attr();var matrix=(targetAttrs||attrs).matrix;if(matrix){setTransform(this);}};ShapeBase2.prototype.isInShape=function(refX,refY){return this.isPointInPath(refX,refY);};ShapeBase2.prototype.isPointInPath=function(refX,refY){var el=this.get("el");var canvas=this.get("canvas");var bbox=canvas.get("el").getBoundingClientRect();var clientX=refX+bbox.left;var clientY=refY+bbox.top;var element=document.elementFromPoint(clientX,clientY);if(element&&element.isEqualNode(el)){return true;}
return false;};ShapeBase2.prototype.getHitLineWidth=function(){var _a=this.attrs,lineWidth=_a.lineWidth,lineAppendWidth=_a.lineAppendWidth;if(this.isStroke()){return lineWidth+lineAppendWidth;}
return 0;};return ShapeBase2;}(shape_default));var base_default2=ShapeBase;var Circle=(function(_super){__extends(Circle2,_super);function Circle2(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.type="circle";_this.canFill=true;_this.canStroke=true;return _this;}
Circle2.prototype.getDefaultAttrs=function(){var attrs=_super.prototype.getDefaultAttrs.call(this);return __assign(__assign({},attrs),{x:0,y:0,r:0});};Circle2.prototype.createPath=function(context,targetAttrs){var attrs=this.attr();var el=this.get("el");each_default(targetAttrs||attrs,function(value,attr){if(attr==="x"||attr==="y"){el.setAttribute("c"+attr,value);}else if(SVG_ATTR_MAP[attr]){el.setAttribute(SVG_ATTR_MAP[attr],value);}});};return Circle2;}(base_default2));var circle_default2=Circle;var Dom=(function(_super){__extends(Dom2,_super);function Dom2(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.type="dom";_this.canFill=false;_this.canStroke=false;return _this;}
Dom2.prototype.createPath=function(context,targetAttrs){var attrs=this.attr();var el=this.get("el");each_default(targetAttrs||attrs,function(value,attr){if(SVG_ATTR_MAP[attr]){el.setAttribute(SVG_ATTR_MAP[attr],value);}});if(typeof attrs["html"]==="function"){var element=attrs["html"].call(this,attrs);if(element instanceof Element||element instanceof HTMLDocument){var children=el.childNodes;for(var i2=children.length-1;i2>=0;i2--){el.removeChild(children[i2]);}
el.appendChild(element);}else{el.innerHTML=element;}}else{el.innerHTML=attrs["html"];}};return Dom2;}(base_default2));var dom_default=Dom;var Ellipse=(function(_super){__extends(Ellipse2,_super);function Ellipse2(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.type="ellipse";_this.canFill=true;_this.canStroke=true;return _this;}
Ellipse2.prototype.getDefaultAttrs=function(){var attrs=_super.prototype.getDefaultAttrs.call(this);return __assign(__assign({},attrs),{x:0,y:0,rx:0,ry:0});};Ellipse2.prototype.createPath=function(context,targetAttrs){var attrs=this.attr();var el=this.get("el");each_default(targetAttrs||attrs,function(value,attr){if(attr==="x"||attr==="y"){el.setAttribute("c"+attr,value);}else if(SVG_ATTR_MAP[attr]){el.setAttribute(SVG_ATTR_MAP[attr],value);}});};return Ellipse2;}(base_default2));var ellipse_default3=Ellipse;var Image2=(function(_super){__extends(Image3,_super);function Image3(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.type="image";_this.canFill=false;_this.canStroke=false;return _this;}
Image3.prototype.getDefaultAttrs=function(){var attrs=_super.prototype.getDefaultAttrs.call(this);return __assign(__assign({},attrs),{x:0,y:0,width:0,height:0});};Image3.prototype.createPath=function(context,targetAttrs){var _this=this;var attrs=this.attr();var el=this.get("el");each_default(targetAttrs||attrs,function(value,attr){if(attr==="img"){_this._setImage(attrs.img);}else if(SVG_ATTR_MAP[attr]){el.setAttribute(SVG_ATTR_MAP[attr],value);}});};Image3.prototype.setAttr=function(name,value){this.attrs[name]=value;if(name==="img"){this._setImage(value);}};Image3.prototype._setImage=function(img){var attrs=this.attr();var el=this.get("el");if(is_string_default(img)){el.setAttribute("href",img);}else if(img instanceof window.Image){if(!attrs.width){el.setAttribute("width",img.width);this.attr("width",img.width);}
if(!attrs.height){el.setAttribute("height",img.height);this.attr("height",img.height);}
el.setAttribute("href",img.src);}else if(img instanceof HTMLElement&&is_string_default(img.nodeName)&&img.nodeName.toUpperCase()==="CANVAS"){el.setAttribute("href",img.toDataURL());}else if(img instanceof ImageData){var canvas=document.createElement("canvas");canvas.setAttribute("width",""+img.width);canvas.setAttribute("height",""+img.height);canvas.getContext("2d").putImageData(img,0,0);if(!attrs.width){el.setAttribute("width",""+img.width);this.attr("width",img.width);}
if(!attrs.height){el.setAttribute("height",""+img.height);this.attr("height",img.height);}
el.setAttribute("href",canvas.toDataURL());}};return Image3;}(base_default2));var image_default=Image2;var Line=(function(_super){__extends(Line3,_super);function Line3(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.type="line";_this.canFill=false;_this.canStroke=true;return _this;}
Line3.prototype.getDefaultAttrs=function(){var attrs=_super.prototype.getDefaultAttrs.call(this);return __assign(__assign({},attrs),{x1:0,y1:0,x2:0,y2:0,startArrow:false,endArrow:false});};Line3.prototype.createPath=function(context,targetAttrs){var attrs=this.attr();var el=this.get("el");each_default(targetAttrs||attrs,function(value,attr){if(attr==="startArrow"||attr==="endArrow"){if(value){var id9=is_object_default(value)?context.addArrow(attrs,SVG_ATTR_MAP[attr]):context.getDefaultArrow(attrs,SVG_ATTR_MAP[attr]);el.setAttribute(SVG_ATTR_MAP[attr],"url(#"+id9+")");}else{el.removeAttribute(SVG_ATTR_MAP[attr]);}}else if(SVG_ATTR_MAP[attr]){el.setAttribute(SVG_ATTR_MAP[attr],value);}});};Line3.prototype.getTotalLength=function(){var _a=this.attr(),x1=_a.x1,y1=_a.y1,x2=_a.x2,y2=_a.y2;return line_default2.length(x1,y1,x2,y2);};Line3.prototype.getPoint=function(ratio){var _a=this.attr(),x1=_a.x1,y1=_a.y1,x2=_a.x2,y2=_a.y2;return line_default2.pointAt(x1,y1,x2,y2,ratio);};return Line3;}(base_default2));var line_default4=Line;var Symbols={circle:function(x2,y2,r){return[["M",x2,y2],["m",-r,0],["a",r,r,0,1,0,r*2,0],["a",r,r,0,1,0,-r*2,0]];},square:function(x2,y2,r){return[["M",x2-r,y2-r],["L",x2+r,y2-r],["L",x2+r,y2+r],["L",x2-r,y2+r],["Z"]];},diamond:function(x2,y2,r){return[["M",x2-r,y2],["L",x2,y2-r],["L",x2+r,y2],["L",x2,y2+r],["Z"]];},triangle:function(x2,y2,r){var diffY=r*Math.sin(1/3*Math.PI);return[["M",x2-r,y2+diffY],["L",x2,y2-diffY],["L",x2+r,y2+diffY],["z"]];},triangleDown:function(x2,y2,r){var diffY=r*Math.sin(1/3*Math.PI);return[["M",x2-r,y2-diffY],["L",x2+r,y2-diffY],["L",x2,y2+diffY],["Z"]];}};var symbols_default={get:function(type){return Symbols[type];},register:function(type,func){Symbols[type]=func;},remove:function(type){delete Symbols[type];},getAll:function(){return Symbols;}};var Marker=(function(_super){__extends(Marker2,_super);function Marker2(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.type="marker";_this.canFill=true;_this.canStroke=true;return _this;}
Marker2.prototype.createPath=function(context){var el=this.get("el");el.setAttribute("d",this._assembleMarker());};Marker2.prototype._assembleMarker=function(){var d=this._getPath();if(is_array_default(d)){return d.map(function(path4){return path4.join(" ");}).join("");}
return d;};Marker2.prototype._getPath=function(){var attrs=this.attr();var x2=attrs.x,y2=attrs.y;var r=attrs.r||attrs.radius;var symbol=attrs.symbol||"circle";var method;if(is_function_default(symbol)){method=symbol;}else{method=symbols_default.get(symbol);}
if(!method){console.warn(method+" symbol is not exist.");return null;}
return method(x2,y2,r);};Marker2.symbolsFactory=symbols_default;return Marker2;}(base_default2));var marker_default=Marker;var Path2=(function(_super){__extends(Path3,_super);function Path3(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.type="path";_this.canFill=true;_this.canStroke=true;return _this;}
Path3.prototype.getDefaultAttrs=function(){var attrs=_super.prototype.getDefaultAttrs.call(this);return __assign(__assign({},attrs),{startArrow:false,endArrow:false});};Path3.prototype.createPath=function(context,targetAttrs){var _this=this;var attrs=this.attr();var el=this.get("el");each_default(targetAttrs||attrs,function(value,attr){if(attr==="path"&&is_array_default(value)){el.setAttribute("d",_this._formatPath(value));}else if(attr==="startArrow"||attr==="endArrow"){if(value){var id9=is_object_default(value)?context.addArrow(attrs,SVG_ATTR_MAP[attr]):context.getDefaultArrow(attrs,SVG_ATTR_MAP[attr]);el.setAttribute(SVG_ATTR_MAP[attr],"url(#"+id9+")");}else{el.removeAttribute(SVG_ATTR_MAP[attr]);}}else if(SVG_ATTR_MAP[attr]){el.setAttribute(SVG_ATTR_MAP[attr],value);}});};Path3.prototype._formatPath=function(value){var newValue=value.map(function(path4){return path4.join(" ");}).join("");if(~newValue.indexOf("NaN")){return"";}
return newValue;};Path3.prototype.getTotalLength=function(){var el=this.get("el");return el?el.getTotalLength():null;};Path3.prototype.getPoint=function(ratio){var el=this.get("el");var totalLength=this.getTotalLength();if(totalLength===0){return null;}
var point2=el?el.getPointAtLength(ratio*totalLength):null;return point2?{x:point2.x,y:point2.y}:null;};return Path3;}(base_default2));var path_default3=Path2;var Polygon=(function(_super){__extends(Polygon2,_super);function Polygon2(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.type="polygon";_this.canFill=true;_this.canStroke=true;return _this;}
Polygon2.prototype.createPath=function(context,targetAttrs){var attrs=this.attr();var el=this.get("el");each_default(targetAttrs||attrs,function(value,attr){if(attr==="points"&&is_array_default(value)&&value.length>=2){el.setAttribute("points",value.map(function(point2){return point2[0]+","+point2[1];}).join(" "));}else if(SVG_ATTR_MAP[attr]){el.setAttribute(SVG_ATTR_MAP[attr],value);}});};return Polygon2;}(base_default2));var polygon_default3=Polygon;var Polyline=(function(_super){__extends(Polyline2,_super);function Polyline2(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.type="polyline";_this.canFill=true;_this.canStroke=true;return _this;}
Polyline2.prototype.getDefaultAttrs=function(){var attrs=_super.prototype.getDefaultAttrs.call(this);return __assign(__assign({},attrs),{startArrow:false,endArrow:false});};Polyline2.prototype.onAttrChange=function(name,value,originValue){_super.prototype.onAttrChange.call(this,name,value,originValue);if(["points"].indexOf(name)!==-1){this._resetCache();}};Polyline2.prototype._resetCache=function(){this.set("totalLength",null);this.set("tCache",null);};Polyline2.prototype.createPath=function(context,targetAttrs){var attrs=this.attr();var el=this.get("el");each_default(targetAttrs||attrs,function(value,attr){if(attr==="points"&&is_array_default(value)&&value.length>=2){el.setAttribute("points",value.map(function(point2){return point2[0]+","+point2[1];}).join(" "));}else if(SVG_ATTR_MAP[attr]){el.setAttribute(SVG_ATTR_MAP[attr],value);}});};Polyline2.prototype.getTotalLength=function(){var points=this.attr().points;var totalLength=this.get("totalLength");if(!is_nil_default(totalLength)){return totalLength;}
this.set("totalLength",polyline_default.length(points));return this.get("totalLength");};Polyline2.prototype.getPoint=function(ratio){var points=this.attr().points;var tCache=this.get("tCache");if(!tCache){this._setTcache();tCache=this.get("tCache");}
var subt;var index2;each_default(tCache,function(v,i2){if(ratio>=v[0]&&ratio<=v[1]){subt=(ratio-v[0])/(v[1]-v[0]);index2=i2;}});return line_default2.pointAt(points[index2][0],points[index2][1],points[index2+1][0],points[index2+1][1],subt);};Polyline2.prototype._setTcache=function(){var points=this.attr().points;if(!points||points.length===0){return;}
var totalLength=this.getTotalLength();if(totalLength<=0){return;}
var tempLength=0;var tCache=[];var segmentT;var segmentL;each_default(points,function(p,i2){if(points[i2+1]){segmentT=[];segmentT[0]=tempLength/totalLength;segmentL=line_default2.length(p[0],p[1],points[i2+1][0],points[i2+1][1]);tempLength+=segmentL;segmentT[1]=tempLength/totalLength;tCache.push(segmentT);}});this.set("tCache",tCache);};Polyline2.prototype.getStartTangent=function(){var points=this.attr().points;var result=[];result.push([points[1][0],points[1][1]]);result.push([points[0][0],points[0][1]]);return result;};Polyline2.prototype.getEndTangent=function(){var points=this.attr().points;var l=points.length-1;var result=[];result.push([points[l-1][0],points[l-1][1]]);result.push([points[l][0],points[l][1]]);return result;};return Polyline2;}(base_default2));var polyline_default3=Polyline;function parseRadius(radius){var r1=0;var r2=0;var r3=0;var r4=0;if(is_array_default(radius)){if(radius.length===1){r1=r2=r3=r4=radius[0];}else if(radius.length===2){r1=r3=radius[0];r2=r4=radius[1];}else if(radius.length===3){r1=radius[0];r2=r4=radius[1];r3=radius[2];}else{r1=radius[0];r2=radius[1];r3=radius[2];r4=radius[3];}}else{r1=r2=r3=r4=radius;}
return{r1,r2,r3,r4};}
var Rect=(function(_super){__extends(Rect2,_super);function Rect2(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.type="rect";_this.canFill=true;_this.canStroke=true;return _this;}
Rect2.prototype.getDefaultAttrs=function(){var attrs=_super.prototype.getDefaultAttrs.call(this);return __assign(__assign({},attrs),{x:0,y:0,width:0,height:0,radius:0});};Rect2.prototype.createPath=function(context,targetAttrs){var _this=this;var attrs=this.attr();var el=this.get("el");var completed=false;var pathRelatedAttrs=["x","y","width","height","radius"];each_default(targetAttrs||attrs,function(value,attr){if(pathRelatedAttrs.indexOf(attr)!==-1&&!completed){el.setAttribute("d",_this._assembleRect(attrs));completed=true;}else if(pathRelatedAttrs.indexOf(attr)===-1&&SVG_ATTR_MAP[attr]){el.setAttribute(SVG_ATTR_MAP[attr],value);}});};Rect2.prototype._assembleRect=function(attrs){var x2=attrs.x;var y2=attrs.y;var w=attrs.width;var h=attrs.height;var radius=attrs.radius;if(!radius){return"M "+x2+","+y2+" l "+w+",0 l 0,"+h+" l"+-w+" 0 z";}
var r=parseRadius(radius);if(is_array_default(radius)){if(radius.length===1){r.r1=r.r2=r.r3=r.r4=radius[0];}else if(radius.length===2){r.r1=r.r3=radius[0];r.r2=r.r4=radius[1];}else if(radius.length===3){r.r1=radius[0];r.r2=r.r4=radius[1];r.r3=radius[2];}else{r.r1=radius[0];r.r2=radius[1];r.r3=radius[2];r.r4=radius[3];}}else{r.r1=r.r2=r.r3=r.r4=radius;}
var d=[["M "+(x2+r.r1)+","+y2],["l "+(w-r.r1-r.r2)+",0"],["a "+r.r2+","+r.r2+",0,0,1,"+r.r2+","+r.r2],["l 0,"+(h-r.r2-r.r3)],["a "+r.r3+","+r.r3+",0,0,1,"+-r.r3+","+r.r3],["l "+(r.r3+r.r4-w)+",0"],["a "+r.r4+","+r.r4+",0,0,1,"+-r.r4+","+-r.r4],["l 0,"+(r.r4+r.r1-h)],["a "+r.r1+","+r.r1+",0,0,1,"+r.r1+","+-r.r1],["z"]];return d.join(" ");};return Rect2;}(base_default2));var rect_default2=Rect;var LETTER_SPACING=0.3;var BASELINE_MAP={top:"before-edge",middle:"central",bottom:"after-edge",alphabetic:"baseline",hanging:"hanging"};var BASELINE_MAP_FOR_FIREFOX={top:"text-before-edge",middle:"central",bottom:"text-after-edge",alphabetic:"alphabetic",hanging:"hanging"};var ANCHOR_MAP={left:"left",start:"left",center:"middle",right:"end",end:"end"};var Text=(function(_super){__extends(Text3,_super);function Text3(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.type="text";_this.canFill=true;_this.canStroke=true;return _this;}
Text3.prototype.getDefaultAttrs=function(){var attrs=_super.prototype.getDefaultAttrs.call(this);return __assign(__assign({},attrs),{x:0,y:0,text:null,fontSize:12,fontFamily:"sans-serif",fontStyle:"normal",fontWeight:"normal",fontVariant:"normal",textAlign:"start",textBaseline:"bottom"});};Text3.prototype.createPath=function(context,targetAttrs){var _this=this;var attrs=this.attr();var el=this.get("el");this._setFont();each_default(targetAttrs||attrs,function(value,attr){if(attr==="text"){_this._setText(""+value);}else if(attr==="matrix"&&value){setTransform(_this);}else if(SVG_ATTR_MAP[attr]){el.setAttribute(SVG_ATTR_MAP[attr],value);}});el.setAttribute("paint-order","stroke");el.setAttribute("style","stroke-linecap:butt; stroke-linejoin:miter;");};Text3.prototype._setFont=function(){var el=this.get("el");var _a=this.attr(),textBaseline=_a.textBaseline,textAlign=_a.textAlign;var browser2=detect();if(browser2&&browser2.name==="firefox"){el.setAttribute("dominant-baseline",BASELINE_MAP_FOR_FIREFOX[textBaseline]||"alphabetic");}else{el.setAttribute("alignment-baseline",BASELINE_MAP[textBaseline]||"baseline");}
el.setAttribute("text-anchor",ANCHOR_MAP[textAlign]||"left");};Text3.prototype._setText=function(text){var el=this.get("el");var _a=this.attr(),x2=_a.x,_b=_a.textBaseline,baseline=_b===void 0?"bottom":_b;if(!text){el.innerHTML="";}else if(~text.indexOf("\n")){var textArr=text.split("\n");var textLen_1=textArr.length-1;var arr_1="";each_default(textArr,function(segment,i2){if(i2===0){if(baseline==="alphabetic"){arr_1+='<tspan x="'+x2+'" dy="'+-textLen_1+'em">'+segment+"</tspan>";}else if(baseline==="top"){arr_1+='<tspan x="'+x2+'" dy="0.9em">'+segment+"</tspan>";}else if(baseline==="middle"){arr_1+='<tspan x="'+x2+'" dy="'+-(textLen_1-1)/2+'em">'+segment+"</tspan>";}else if(baseline==="bottom"){arr_1+='<tspan x="'+x2+'" dy="-'+(textLen_1+LETTER_SPACING)+'em">'+segment+"</tspan>";}else if(baseline==="hanging"){arr_1+='<tspan x="'+x2+'" dy="'+(-(textLen_1-1)-LETTER_SPACING)+'em">'+segment+"</tspan>";}}else{arr_1+='<tspan x="'+x2+'" dy="1em">'+segment+"</tspan>";}});el.innerHTML=arr_1;}else{el.innerHTML=text;}};return Text3;}(base_default2));var text_default2=Text;var regexLG=/^l\s*\(\s*([\d.]+)\s*\)\s*(.*)/i;var regexRG=/^r\s*\(\s*([\d.]+)\s*,\s*([\d.]+)\s*,\s*([\d.]+)\s*\)\s*(.*)/i;var regexColorStop=/[\d.]+:(#[^\s]+|[^)]+\))/gi;function addStop(steps){var arr2=steps.match(regexColorStop);if(!arr2){return"";}
var stops="";arr2.sort(function(a,b10){a=a.split(":");b10=b10.split(":");return Number(a[0])-Number(b10[0]);});each_default(arr2,function(item){item=item.split(":");stops+='<stop offset="'+item[0]+'" stop-color="'+item[1]+'"></stop>';});return stops;}
function parseLineGradient(color2,el){var arr2=regexLG.exec(color2);var angle2=mod_default(to_radian_default(parseFloat(arr2[1])),Math.PI*2);var steps=arr2[2];var start;var end;if(angle2>=0&&angle2<0.5*Math.PI){start={x:0,y:0};end={x:1,y:1};}else if(0.5*Math.PI<=angle2&&angle2<Math.PI){start={x:1,y:0};end={x:0,y:1};}else if(Math.PI<=angle2&&angle2<1.5*Math.PI){start={x:1,y:1};end={x:0,y:0};}else{start={x:0,y:1};end={x:1,y:0};}
var tanTheta=Math.tan(angle2);var tanTheta2=tanTheta*tanTheta;var x2=(end.x-start.x+tanTheta*(end.y-start.y))/(tanTheta2+1)+start.x;var y2=tanTheta*(end.x-start.x+tanTheta*(end.y-start.y))/(tanTheta2+1)+start.y;el.setAttribute("x1",start.x);el.setAttribute("y1",start.y);el.setAttribute("x2",x2);el.setAttribute("y2",y2);el.innerHTML=addStop(steps);}
function parseRadialGradient(color2,self2){var arr2=regexRG.exec(color2);var cx=parseFloat(arr2[1]);var cy=parseFloat(arr2[2]);var r=parseFloat(arr2[3]);var steps=arr2[4];self2.setAttribute("cx",cx);self2.setAttribute("cy",cy);self2.setAttribute("r",r);self2.innerHTML=addStop(steps);}
var Gradient=(function(){function Gradient2(cfg){this.cfg={};var el=null;var id9=unique_id_default("gradient_");if(cfg.toLowerCase()[0]==="l"){el=createSVGElement("linearGradient");parseLineGradient(cfg,el);}else{el=createSVGElement("radialGradient");parseRadialGradient(cfg,el);}
el.setAttribute("id",id9);this.el=el;this.id=id9;this.cfg=cfg;return this;}
Gradient2.prototype.match=function(type,attr){return this.cfg===attr;};return Gradient2;}());var gradient_default=Gradient;var ATTR_MAP={shadowColor:"color",shadowOpacity:"opacity",shadowBlur:"blur",shadowOffsetX:"dx",shadowOffsetY:"dy"};var SHADOW_DIMENSION={x:"-40%",y:"-40%",width:"200%",height:"200%"};var Shadow=(function(){function Shadow2(cfg){this.type="filter";this.cfg={};this.type="filter";var el=createSVGElement("filter");each_default(SHADOW_DIMENSION,function(v,k){el.setAttribute(k,v);});this.el=el;this.id=unique_id_default("filter_");this.el.id=this.id;this.cfg=cfg;this._parseShadow(cfg,el);return this;}
Shadow2.prototype.match=function(type,cfg){if(this.type!==type){return false;}
var flag=true;var config2=this.cfg;each_default(Object.keys(config2),function(attr){if(config2[attr]!==cfg[attr]){flag=false;return false;}});return flag;};Shadow2.prototype.update=function(name,value){var config2=this.cfg;config2[ATTR_MAP[name]]=value;this._parseShadow(config2,this.el);return this;};Shadow2.prototype._parseShadow=function(config2,el){var child='<feDropShadow\n      dx="'+(config2.dx||0)+'"\n      dy="'+(config2.dy||0)+'"\n      stdDeviation="'+(config2.blur?config2.blur/10:0)+'"\n      flood-color="'+(config2.color?config2.color:"#000")+'"\n      flood-opacity="'+(config2.opacity?config2.opacity:1)+'"\n      />';el.innerHTML=child;};return Shadow2;}());var shadow_default=Shadow;var Arrow=(function(){function Arrow2(attrs,type){this.cfg={};var el=createSVGElement("marker");var id9=unique_id_default("marker_");el.setAttribute("id",id9);var shape=createSVGElement("path");shape.setAttribute("stroke",attrs.stroke||"none");shape.setAttribute("fill",attrs.fill||"none");el.appendChild(shape);el.setAttribute("overflow","visible");el.setAttribute("orient","auto-start-reverse");this.el=el;this.child=shape;this.id=id9;var cfg=attrs[type==="marker-start"?"startArrow":"endArrow"];this.stroke=attrs.stroke||"#000";if(cfg===true){this._setDefaultPath(type,shape);}else{this.cfg=cfg;this._setMarker(attrs.lineWidth,shape);}
return this;}
Arrow2.prototype.match=function(){return false;};Arrow2.prototype._setDefaultPath=function(type,el){var parent=this.el;el.setAttribute("d","M0,0 L"+10*Math.cos(Math.PI/6)+",5 L0,10");parent.setAttribute("refX",""+10*Math.cos(Math.PI/6));parent.setAttribute("refY","5");};Arrow2.prototype._setMarker=function(r,el){var parent=this.el;var path4=this.cfg.path;var d=this.cfg.d;if(is_array_default(path4)){path4=path4.map(function(segment){return segment.join(" ");}).join("");}
el.setAttribute("d",path4);parent.appendChild(el);if(d){parent.setAttribute("refX",""+d/r);}};Arrow2.prototype.update=function(fill){var child=this.child;if(child.attr){child.attr("fill",fill);}else{child.setAttribute("fill",fill);}};return Arrow2;}());var arrow_default=Arrow;var Clip=(function(){function Clip2(cfg){this.type="clip";this.cfg={};var el=createSVGElement("clipPath");this.el=el;this.id=unique_id_default("clip_");el.id=this.id;var shapeEl=cfg.cfg.el;el.appendChild(shapeEl);this.cfg=cfg;return this;}
Clip2.prototype.match=function(){return false;};Clip2.prototype.remove=function(){var el=this.el;el.parentNode.removeChild(el);};return Clip2;}());var clip_default=Clip;var regexPR=/^p\s*\(\s*([axyn])\s*\)\s*(.*)/i;var Pattern=(function(){function Pattern2(cfg){this.cfg={};var el=createSVGElement("pattern");el.setAttribute("patternUnits","userSpaceOnUse");var child=createSVGElement("image");el.appendChild(child);var id9=unique_id_default("pattern_");el.id=id9;this.el=el;this.id=id9;this.cfg=cfg;var arr2=regexPR.exec(cfg);var source=arr2[2];child.setAttribute("href",source);var img=new Image();if(!source.match(/^data:/i)){img.crossOrigin="Anonymous";}
img.src=source;function onload(){el.setAttribute("width",""+img.width);el.setAttribute("height",""+img.height);}
if(img.complete){onload();}else{img.onload=onload;img.src=img.src;}
return this;}
Pattern2.prototype.match=function(type,attr){return this.cfg===attr;};return Pattern2;}());var pattern_default=Pattern;var Defs=(function(){function Defs2(canvas){var el=createSVGElement("defs");var id9=unique_id_default("defs_");el.id=id9;canvas.appendChild(el);this.children=[];this.defaultArrow={};this.el=el;this.canvas=canvas;}
Defs2.prototype.find=function(type,attr){var children=this.children;var result=null;for(var i2=0;i2<children.length;i2++){if(children[i2].match(type,attr)){result=children[i2].id;break;}}
return result;};Defs2.prototype.findById=function(id9){var children=this.children;var flag=null;for(var i2=0;i2<children.length;i2++){if(children[i2].id===id9){flag=children[i2];break;}}
return flag;};Defs2.prototype.add=function(item){this.children.push(item);item.canvas=this.canvas;item.parent=this;};Defs2.prototype.getDefaultArrow=function(attrs,name){var stroke=attrs.stroke||attrs.strokeStyle;if(this.defaultArrow[stroke]){return this.defaultArrow[stroke].id;}
var arrow=new arrow_default(attrs,name);this.defaultArrow[stroke]=arrow;this.el.appendChild(arrow.el);this.add(arrow);return arrow.id;};Defs2.prototype.addGradient=function(cfg){var gradient=new gradient_default(cfg);this.el.appendChild(gradient.el);this.add(gradient);return gradient.id;};Defs2.prototype.addArrow=function(attrs,name){var arrow=new arrow_default(attrs,name);this.el.appendChild(arrow.el);this.add(arrow);return arrow.id;};Defs2.prototype.addShadow=function(cfg){var shadow=new shadow_default(cfg);this.el.appendChild(shadow.el);this.add(shadow);return shadow.id;};Defs2.prototype.addPattern=function(cfg){var pattern=new pattern_default(cfg);this.el.appendChild(pattern.el);this.add(pattern);return pattern.id;};Defs2.prototype.addClip=function(cfg){var clip=new clip_default(cfg);this.el.appendChild(clip.el);this.add(clip);return clip.id;};return Defs2;}());var defs_default=Defs;var Canvas2=(function(_super){__extends(Canvas4,_super);function Canvas4(cfg){return _super.call(this,__assign(__assign({},cfg),{autoDraw:true,renderer:"svg"}))||this;}
Canvas4.prototype.getShapeBase=function(){return shape_exports;};Canvas4.prototype.getGroupBase=function(){return group_default3;};Canvas4.prototype.getShape=function(x2,y2,ev){var target=ev.target||ev.srcElement;if(!SHAPE_TO_TAGS[target.tagName]){var parent_1=target.parentNode;while(parent_1&&!SHAPE_TO_TAGS[parent_1.tagName]){parent_1=parent_1.parentNode;}
target=parent_1;}
return this.find(function(child){return child.get("el")===target;});};Canvas4.prototype.createDom=function(){var element=createSVGElement("svg");var context=new defs_default(element);element.setAttribute("width",""+this.get("width"));element.setAttribute("height",""+this.get("height"));this.set("context",context);return element;};Canvas4.prototype.onCanvasChange=function(changeType){var context=this.get("context");var el=this.get("el");if(changeType==="sort"){var children_1=this.get("children");if(children_1&&children_1.length){sortDom(this,function(a,b10){return children_1.indexOf(a)-children_1.indexOf(b10)?1:0;});}}else if(changeType==="clear"){if(el){el.innerHTML="";var defsEl=context.el;defsEl.innerHTML="";el.appendChild(defsEl);}}else if(changeType==="matrix"){setTransform(this);}else if(changeType==="clip"){setClip(this,context);}else if(changeType==="changeSize"){el.setAttribute("width",""+this.get("width"));el.setAttribute("height",""+this.get("height"));}};Canvas4.prototype.draw=function(){var context=this.get("context");var children=this.getChildren();setClip(this,context);if(children.length){drawChildren(context,children);}};return Canvas4;}(canvas_default));var canvas_default2=Canvas2;var SvgRenderer=class extends BaseRenderer{getCanvasClass(){return canvas_default2;}
preProcessMarkAttrs(mark){if(mark.type==="text"){return{...mark.attrs,text:escapeHtml(mark.attrs.text)};}
return mark.attrs;}
onShapeAdd(shape,mark){super.onShapeAdd(shape,mark);if(mark.class){const el=shape.get("el");if(el&&el.classList){mark.class.split(" ").forEach((cls)=>{if(cls)
el.classList.add(cls);});}}}};function escapeHtml(unsafe){return unsafe.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;");}
var import_g_canvas=__toESM(require_canvas());var CanvasRenderer=class extends BaseRenderer{getCanvasClass(){return import_g_canvas.Canvas;}};var RendererRegistry=class{constructor(){this.renderers={svg:SvgRenderer,canvas:CanvasRenderer};}
getRendererClass(name){return this.renderers[name];}
register(name,cls){this.renderers[name]=cls;}};var rendererRegistry=new RendererRegistry();function makeRenderer(ir,type){type=type||"svg";const rendererCtor=rendererRegistry.getRendererClass(type);if(!rendererCtor){return new SvgRenderer(ir);}
return new rendererCtor(ir);}
function render(ir,opts){const renderer=makeRenderer(ir,opts.renderer).setContainer(opts.container);renderer.render();if(opts.onRender){opts.onRender(renderer);}}
function initDiagrams(){Object.keys(DIAGRAMS).forEach((name)=>{diagramRegistry.registerDiagram(name,DIAGRAMS[name]);});}
initDiagrams();var CLASSES={wrapper:"pintora-wrapper"};var ConfigStack=class{constructor(){this.list=[];}
push(c){this.list.push(c);}
pop(){return this.list.pop();}
get size(){return this.list.length;}};var configStack=new ConfigStack();var pintoraStandalone={renderTo(code,options){const{container,config:config2}=options;let ctn;if(typeof container==="string"){ctn=document.querySelector(container);}else{ctn=container;}
let backupConfig;if(config2){backupConfig=config_default.cloneConfig();configStack.push(backupConfig);pintoraStandalone.setConfig(config2);}
let drawResult;try{const containerSize={width:ctn.clientWidth};drawResult=parseAndDraw(code,safeAssign({containerSize},options));}catch(error){const onError=options.onError||console.warn;onError(error);}
try{if(drawResult){let graphicIR=drawResult.graphicIR;if(options.enhanceGraphicIR)
graphicIR=options.enhanceGraphicIR(graphicIR);if(!graphicIR.bgColor){const diagramIR=drawResult.diagramIR;const conf6=config_default.gnernateNewConfig(diagramIR.overrideConfig||{});const canvasBackground=conf6.themeConfig.themeVariables?.canvasBackground;if(canvasBackground)
graphicIR.bgColor=canvasBackground;}
const originOnRender=options.onRender;render(graphicIR,{...options,container:ctn,onRender(renderer){diagramEventManager.wireCurrentEventsToRenderer(renderer,drawResult.diagramIR);if(options.eventsHandlers){for(const[eventName,handler]of Object.entries(options.eventsHandlers)){diagramEventManager.wireDiagramEventToRenderer(renderer,eventName,handler,drawResult.diagramIR);}}
if(originOnRender)
originOnRender(renderer);}});}}finally{if(config2&&backupConfig){config_default.replaceConfig(backupConfig);configStack.pop();}}},initBrowser(options={}){const selector=".pintora";const containers=document.querySelectorAll(selector);containers.forEach((container)=>{pintoraStandalone.renderContentOf(container);});},renderContentOf(container,opts={}){let resultContainer=opts.resultContainer;if(!resultContainer){const prevSibling=container.previousElementSibling;if(prevSibling&&prevSibling.classList.contains(CLASSES.wrapper)){prevSibling.remove();}
const wrapper=document.createElement("div");wrapper.classList.add(CLASSES.wrapper);container.style.display="none";if(container.parentNode){container.parentNode.insertBefore(wrapper,container);}
resultContainer=wrapper;}
const configFromEle=pintoraStandalone.getConfigFromElement(container);const renderer=configFromEle.renderer||config_default.getConfig().core?.defaultRenderer||"svg";let config2=null;if(configFromEle.theme){config2={themeConfig:{theme:configFromEle.theme}};}
const code=opts.getContent?opts.getContent(container):container.innerText;pintoraStandalone.renderTo(code,{container:resultContainer,renderer,config:config2,eventsHandlers:opts.eventsHandlers});return resultContainer;},getConfigFromElement(ele){const output=["renderer","theme"].reduce((acc,k)=>{const v=ele.dataset[k];if(v){acc[k]=v;}
return acc;},{});return output;},getConfig:config_default.getConfig,setConfig:config_default.setConfig,diagramEventManager,configApi:config_default,configEngine:config_engine_exports,diagramRegistry,themeRegistry,symbolRegistry,parseAndDraw,util};var defaults_exports={};__export(defaults_exports,{fontDir:()=>fontDir,fontFamily:()=>fontFamily,fontFamilyMappings:()=>fontFamilyMappings,fontSize:()=>fontSize});var import_node_path=__toESM(require_path_browserify(),1);var import_node_url=__toESM(require_url2(),1);var __dirname=(0,import_node_path.dirname)((0,import_node_url.fileURLToPath)(""));var fontSize=16;var fontFamily="sans-serif";var fontDir=(0,import_node_path.join)(__dirname,"../../","fonts/");var fontFamilyMappings={"sans-serif":"OpenSans-Regular.ttf","Open Sans":"OpenSans-Regular.ttf"};var extend2=(...modules)=>{var methods,key,i2;methods=modules.pop();for(i2=modules.length-1;i2>=0;i2--){for(key in methods){modules[i2].prototype[key]=methods[key];}}};var extendStatic=(...modules)=>{var methods,key,i2;methods=modules.pop();for(i2=modules.length-1;i2>=0;i2--){for(key in methods){modules[i2][key]=methods[key];}}};var mixin=(mixin2,_class)=>{const descriptors=Object.getOwnPropertyDescriptors(mixin2);Object.defineProperties(_class.prototype,descriptors);};var $=Symbol("private properties");var EventTarget=class{constructor(){this[$]={};this[$].listeners={};}
addEventListener(type,callback){if(!(type in this[$].listeners)){this[$].listeners[type]=[];}
this[$].listeners[type].push(callback);}
dispatchEvent(event){if(!(event.type in this[$].listeners)){return true;}
var stack=this[$].listeners[event.type];event.target=this;stack.forEach(function(el){el(event);});return!event.defaultPrevented;}
removeEventListener(type,callback){if(!(type in this[$].listeners)){return;}
var stack=this[$].listeners[type];for(var i2=0,il=stack.length;i2<il;i2++){if(stack[i2]===callback){stack.splice(i2,1);return;}}}};var htmlEntities=function(str3){return String(str3).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;");};var emptyElements={br:true,hr:true,img:true,link:true};var tag=function(node2){const attrs=[...node2.attrs].map(function(node3){return(node3.prefix?node3.prefix+":":"")+node3.localName+'="'+htmlEntities(node3.value)+'"';});const{prefix,localName}=node2;const qualifiedName=(prefix?prefix+":":"")+localName;return"<"+[].concat(qualifiedName,attrs).join(" ")+">"+(emptyElements[qualifiedName.toLowerCase()]?"":node2.innerHTML+"</"+qualifiedName+">");};var cloneNode=function(node2){const{prefix,localName,namespaceURI:ns,nodeValue,ownerDocument}=node2;const qualifiedName=(prefix?prefix+":":"")+localName;const local=localName.includes(":");var clone3=new node2.constructor(qualifiedName,{attrs:new Set([...node2.attrs].map((node3)=>node3.cloneNode())),nodeValue,ownerDocument,local},ns);return clone3;};var svg="http://www.w3.org/2000/svg";var html="http://www.w3.org/1999/xhtml";var xml="http://www.w3.org/XML/1998/namespace";var xmlns="http://www.w3.org/2000/xmlns/";var nodeTypes={ELEMENT_NODE:1,ATTRIBUTE_NODE:2,TEXT_NODE:3,CDATA_SECTION_NODE:4,ENTITY_REFERENCE_NODE:5,ENTITY_NODE:6,PROCESSING_INSTRUCTION_NODE:7,COMMENT_NODE:8,DOCUMENT_NODE:9,DOCUMENT_TYPE_NODE:10,DOCUMENT_FRAGMENT_NODE:11,NOTATION_NODE:12};var Node=class _Node extends EventTarget{constructor(name="",props={},ns=null){super();if(name.includes(":")&&!props.local){;[this.prefix,this.localName]=name.split(":");}else{this.localName=name;this.prefix=null;}
this.nodeName=ns===html?name.toUpperCase():name;this.namespaceURI=ns;this.nodeType=_Node.ELEMENT_NODE;this.nodeValue=props.nodeValue!=null?props.nodeValue:null;this.childNodes=[];this.attrs=props.attrs||new Set();this.ownerDocument=props.ownerDocument||null;this.parentNode=null;if(props.childNodes){for(let i2=0,il=props.childNodes.length;i2<il;++i2){this.appendChild(props.childNodes[i2]);}}}
appendChild(node2){return this.insertBefore(node2);}
cloneNode(deep=false){const clone3=cloneNode(this);if(deep){this.childNodes.forEach(function(el){const node2=el.cloneNode(deep);clone3.appendChild(node2);});}
return clone3;}
contains(node2){if(node2===this)
return false;while(node2.parentNode){if(node2===this)
return true;node2=node2.parentNode;}
return false;}
getRootNode(){if(!this.parentNode||this.nodeType===_Node.DOCUMENT_NODE)
return this;return this.parentNode.getRootNode();}
hasChildNodes(){return!!this.childNodes.length;}
insertBefore(node2,before){let index2=this.childNodes.indexOf(before);if(index2===-1){index2=this.childNodes.length;}
if(node2.nodeType===_Node.DOCUMENT_FRAGMENT_NODE){let child;let oldChild=before;while(child=node2.childNodes.pop()){this.insertBefore(child,oldChild);oldChild=child;}
return node2;}
if(node2.parentNode){node2.parentNode.removeChild(node2);}
node2.parentNode=this;this.childNodes.splice(index2,0,node2);return node2;}
isDefaultNamespace(namespaceURI){switch(this.nodeType){case _Node.ELEMENT_NODE:if(!this.prefix){return this.namespaceURI===namespaceURI;}
if(this.hasAttribute("xmlns")){return this.getAttribute("xmlns");}
if(this.parentNode){return this.parentNode.isDefaultNamespace(namespaceURI);}
return false;case _Node.DOCUMENT_NODE:return this.documentElement.isDefaultNamespace(namespaceURI);case _Node.ENTITY_NODE:case _Node.NOTATION_NODE:case _Node.DOCUMENT_TYPE_NODE:case _Node.DOCUMENT_FRAGMENT_NODE:return false;case _Node.ATTRIBUTE_NODE:if(this.ownerElement){return this.ownerElement.isDefaultNamespace(namespaceURI);}
return false;default:if(this.parentNode){return this.parentNode.isDefaultNamespace(namespaceURI);}
return false;}}
isEqualNode(node2){this.normalize();node2.normalize();let bool=this.nodeName===node2.nodeName;bool=bool&&this.localName===node2.localName;bool=bool&&this.namespaceURI===node2.namespaceURI;bool=bool&&this.prefix===node2.prefix;bool=bool&&this.nodeValue===node2.nodeValue;bool=bool&&this.childNodes.length===node2.childNodes.length;if(!bool)
return false;bool=bool&&!this.childNodes.reduce((last4,curr,index2)=>{return last4&&curr.isEqualNode(node2.childNodes[index2]);},true);if(this.nodeType===_Node.DOCUMENT_TYPE_NODE&&node2.nodeType===_Node.DOCUMENT_TYPE_NODE){bool=bool&&this.publicId===node2.publicId;bool=bool&&this.systemId===node2.systemId;bool=bool&&this.internalSubset===node2.internalSubset;}
return bool;}
isSameNode(node2){return this===node2;}
lookupNamespacePrefix(namespaceURI,originalElement){if(this.namespaceURI&&this.namespaceURI===namespaceURI&&this.prefix&&originalElement.lookupNamespaceURI(this.prefix)===namespaceURI){return this.prefix;}
for(const[key,val]of this.attrs.entries()){if(!key.includes(":"))
continue;const[attrPrefix,name]=key.split(":");if(attrPrefix==="xmlns"&&val===namespaceURI&&originalElement.lookupNamespaceURI(name)===namespaceURI){return name;}}
if(this.parentNode){return this.parentNode.lookupNamespacePrefix(namespaceURI,originalElement);}
return null;}
lookupNamespaceURI(prefix){switch(this.nodeType){case _Node.ELEMENT_NODE:if(this.namespaceURI!=null&&this.prefix===prefix){return this.namespaceURI;}
for(const[key,val]of this.attrs.entries()){if(!key.includes(":"))
continue;const[attrPrefix,name]=key.split(":");if(attrPrefix==="xmlns"&&name===prefix){if(val!=null){return val;}
return null;}else if(name==="xmlns"&&prefix==null){if(val!=null){return val;}
return null;}}
if(this.parentNode){return this.parentNode.lookupNamespaceURI(prefix);}
return null;case _Node.DOCUMENT_NODE:return this.documentElement.lookupNamespaceURI(prefix);case _Node.ENTITY_NODE:case _Node.NOTATION_NODE:case _Node.DOCUMENT_TYPE_NODE:case _Node.DOCUMENT_FRAGMENT_NODE:return null;case _Node.ATTRIBUTE_NODE:if(this.ownerElement){return this.ownerElement.lookupNamespaceURI(prefix);}
return null;default:if(this.parentNode){return this.parentNode.lookupNamespaceURI(prefix);}
return null;}}
lookupPrefix(namespaceURI){if(!namespaceURI){return null;}
const type=this.nodeType;switch(type){case _Node.ELEMENT_NODE:return this.lookupNamespacePrefix(namespaceURI,this);case _Node.DOCUMENT_NODE:return this.documentElement.lookupNamespacePrefix(namespaceURI);case _Node.ENTITY_NODE:case _Node.NOTATION_NODE:case _Node.DOCUMENT_FRAGMENT_NODE:case _Node.DOCUMENT_TYPE_NODE:return null;case _Node.ATTRIBUTE_NODE:if(this.ownerElement){return this.ownerElement.lookupNamespacePrefix(namespaceURI);}
return null;default:if(this.parentNode){return this.parentNode.lookupNamespacePrefix(namespaceURI);}
return null;}}
normalize(){const childNodes=[];for(const node2 of this.childNodes){const last4=childNodes.shift();if(!last4){if(node2.data){childNodes.unshift(node2);}
continue;}
if(node2.nodeType===_Node.TEXT_NODE){if(!node2.data){childNodes.unshift(last4);continue;}
if(last4.nodeType===_Node.TEXT_NODE){const merged=this.ownerDocument.createTextNode(last4.data+node2.data);childNodes.push(merged);continue;}
childNodes.push(last4,node2);}}
childNodes.forEach((node2)=>{node2.parentNode=this;});this.childNodes=childNodes;}
removeChild(node2){node2.parentNode=null;const index2=this.childNodes.indexOf(node2);if(index2===-1)
return node2;this.childNodes.splice(index2,1);return node2;}
replaceChild(newChild,oldChild){const before=oldChild.nextSibling;this.removeChild(oldChild);this.insertBefore(newChild,before);return oldChild;}
get nextSibling(){const child=this.parentNode&&this.parentNode.childNodes[this.parentNode.childNodes.indexOf(this)+1];return child||null;}
get previousSibling(){const child=this.parentNode&&this.parentNode.childNodes[this.parentNode.childNodes.indexOf(this)-1];return child||null;}
get textContent(){if(this.nodeType===_Node.TEXT_NODE)
return this.data;if(this.nodeType===_Node.CDATA_SECTION_NODE)
return this.data;if(this.nodeType===_Node.COMMENT_NODE)
return this.data;return this.childNodes.reduce(function(last4,current){return last4+current.textContent;},"");}
set textContent(text){if(this.nodeType===_Node.TEXT_NODE||this.nodeType===_Node.CDATA_SECTION_NODE||this.nodeType===_Node.COMMENT_NODE){this.data=text;return;}
this.childNodes=[];this.appendChild(this.ownerDocument.createTextNode(text));}
get lastChild(){return this.childNodes[this.childNodes.length-1]||null;}
get firstChild(){return this.childNodes[0]||null;}};extendStatic(Node,nodeTypes);extend2(Node,nodeTypes);var Attr=class extends Node{constructor(name,props,ns){super(name,{nodeValue:"",...props},ns);this.nodeName=ns===html?name.toLowerCase():name;this.nodeType=Node.ATTRIBUTE_NODE;this.ownerElement=null;}
get value(){return this.nodeValue;}
set value(val){this.nodeValue=val;}
get name(){return this.nodeName;}};var NonDocumentTypeChildNode={};Object.defineProperties(NonDocumentTypeChildNode,{previousElementSibling:{get(){let node2;while(node2=this.previousSibling){if(node2.nodeType===node2.ELEMENT_NODE){return node2;}}
return null;}},nextElementSibling:{get(){let node2;while(node2=this.nextSibling){if(node2.nodeType===node2.ELEMENT_NODE){return node2;}}
return null;}}});var nodesToNode=(nodes,document2)=>{nodes=nodes.map((node3)=>{if(typeof node3==="string"){return document2.createTextNode(node3);}
return node3;});if(nodes.length===1){return nodes[0];}
const node2=document2.createDocumentFragment();nodes.forEach(node2.appendChild,node2);return node2;};var ChildNode={before(...nodes){if(!this.parentNode)
return;const node2=nodesToNode(nodes,this.ownerDocument);this.parentNode.insertBefore(node2,this);},after(...nodes){if(!this.parentNode)
return;const node2=nodesToNode(nodes,this.ownerDocument);this.parentNode.insertBefore(node2,this.nextSibling);},replaceWith(...nodes){if(!this.parentNode)
return;const next=this.nextSibling;const node2=nodesToNode(nodes,this.ownerDocument);this.parentNode.insertBefore(node2,next);this.remove();},remove(){if(!this.parentNode)
return;this.parentNode.removeChild(this);}};var CharacterData=class extends Node{constructor(name,props){super(name,props);this.data=this.nodeValue;}
appendData(data){this.data+=data;}
deleteData(offset,count){this.data=this.data.slice(0,offset)+this.data.slice(0,offset+count);}
insertData(offset,data){this.data=this.data.slice(0,offset)+data+this.data.slice(offset);}
replaceData(offset,count,data){this.deleteData(offset,count);this.insertData(offset,data);}
substringData(offset,count){this.data=this.data.substr(offset,count);}
get length(){return this.data.length;}};mixin(NonDocumentTypeChildNode,CharacterData);mixin(ChildNode,CharacterData);var Comment=class extends CharacterData{constructor(name,props){super(name,props);this.nodeType=Node.COMMENT_NODE;}};var Event=class{constructor(type){this.type=type;this.cancelable=false;this.defaultPrevented=false;this.target=null;}
preventDefault(){if(this.cancelable){this.defaultPrevented=true;}}};var CustomEvent=class extends Event{constructor(name,props={}){super(name);this.detail=props.detail||null;this.cancelable=props.cancelable||false;}};var Text2=class extends CharacterData{constructor(name,props){super(name,props);this.nodeType=Node.TEXT_NODE;}};var NodeFilter=class _NodeFilter{acceptNode(){return _NodeFilter.FILTER_ACCEPT;}};extendStatic(NodeFilter,{FILTER_ACCEPT:1,FILTER_REJECT:2,FILTER_IGNORE:4,SHOW_ALL:-1,SHOW_ELEMENT:1,SHOW_TEXT:4,SHOW_ENTITY_REFERENCE:16,SHOW_ENTITY:32,SHOW_PROCESSING_INSTRUCTION:64,SHOW_COMMENT:128,SHOW_DOCUMENT:256,SHOW_DOCUMENT_TYPE:512,SHOW_DOCUMENT_FRAGMENT:1024,SHOW_NOTATION:2048});var showThisNode=(whatToShow,node2)=>{if(whatToShow===NodeFilter.SHOW_ALL)
return true;if(whatToShow&NodeFilter.SHOW_ELEMENT&&node2.nodeType===node2.ELEMENT_NODE)
return true;if(whatToShow&NodeFilter.SHOW_TEXT&&node2.nodeType===node2.TEXT_NODE)
return true;if(whatToShow&NodeFilter.SHOW_ENTITY_REFERENCE&&node2.nodeType===node2.ENTITY_REFERENCE_NODE)
return true;if(whatToShow&NodeFilter.SHOW_ENTITY&&node2.nodeType===node2.ENTITY_NODE)
return true;if(whatToShow&NodeFilter.SHOW_PROCESSING_INSTRUCTION&&node2.nodeType===node2.PROCESSING_INSTRUCTION_NODE)
return true;if(whatToShow&NodeFilter.SHOW_COMMENT&&node2.nodeType===node2.COMMENT_NODE)
return true;if(whatToShow&NodeFilter.SHOW_DOCUMENT&&node2.nodeType===node2.DOCUMENT_NODE)
return true;if(whatToShow&NodeFilter.SHOW_DOCUMENT_TYPE&&node2.nodeType===node2.DOCUMENT_TYPE_NODE)
return true;if(whatToShow&NodeFilter.SHOW_DOCUMENT_FRAGMENT&&node2.nodeType===node2.DOCUMENT_FRAGMENT_NODE)
return true;if(whatToShow&NodeFilter.SHOW_NOTATION&&node2.nodeType===node2.NOTATION_NODE)
return true;return false;};var NodeIterator=class _NodeIterator{constructor(root3,whatToShow=NodeFilter.SHOW_ALL,filter3=()=>NodeFilter.FILTER_ACCEPT,includeParent=true){this.root=includeParent?{childNodes:[root3]}:root3;this.whatToShow=whatToShow;this.filter=filter3;}*[Symbol.iterator](){const nodes=this.root.childNodes;for(const node2 of nodes){if(!showThisNode(this.whatToShow,node2))
continue;const filterRet=this.filter(node2);if(filterRet===NodeFilter.FILTER_REJECT)
continue;if(filterRet===NodeFilter.FILTER_ACCEPT){yield node2;}
yield*new _NodeIterator(node2,this.whatToShow,this.filter,false);}
return this;}};var hasClass=(node2,name)=>{const classList=node2.className.split(/\s+/);return classList.includes(name);};var elementAccess={getElementsByTagName(name){const iter=new NodeIterator(this,NodeFilter.SHOW_ELEMENT,(node2)=>node2.nodeName===name?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_IGNORE,false);return[...iter];},getElementsByTagNameNS(ns,name){const iter=new NodeIterator(this,NodeFilter.SHOW_ELEMENT,(node2)=>node2.isNamespace(ns)&&node2.nodeName===name?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_IGNORE,false);return[...iter];},getElementsByClassName(name){const iter=new NodeIterator(this,NodeFilter.SHOW_ELEMENT,(node2)=>hasClass(node2,name)?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_IGNORE,false);return[...iter];}};var fullHex=function(hex2){return hex2.length===4?["#",hex2.substring(1,2),hex2.substring(1,2),hex2.substring(2,3),hex2.substring(2,3),hex2.substring(3,4),hex2.substring(3,4)].join(""):hex2;};var hexToRGB=function(valOrMap){if(typeof valOrMap instanceof Map){for(const[key,val]of valOrMap){valOrMap.set(key,hexToRGB(val));}
return valOrMap;}
if(!/#[0-9a-f]{3,6}/.test(valOrMap)){return valOrMap;}
valOrMap=fullHex(valOrMap);return"rgb("+[parseInt(valOrMap.slice(1,3),16),parseInt(valOrMap.slice(3,5),16),parseInt(valOrMap.slice(5,7),16)].join(",")+")";};function decamelize(s){return String(s).replace(/([a-z])([A-Z])/g,function(m,g1,g2){return g1+"-"+g2.toLowerCase();});}
function camelCase(s){return String(s).replace(/([a-z])-([a-z])/g,function(m,g1,g2){return g1+g2.toUpperCase();});}
function removeQuotes(str3){if(str3.startsWith('"')||str3.startsWith("'")){return str3.slice(1,-1);}
return str3;}
function htmlEntities2(str3){return String(str3).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;");}
function cdata(str3){return`<![CDATA[${str3}]]>`;}
function comment(str3){return`<!--${str3}-->`;}
var splitNotInBrackets=(str3,delimiter2)=>{var roundBrackets=0;var squareBrackets=0;var lastIndex=0;var split=[];var ch;var i2;var il;for(i2=0,il=str3.length;i2<il;++i2){ch=str3.charAt(i2);if(ch===delimiter2&&!roundBrackets&&!squareBrackets){split.push(str3.slice(lastIndex,i2).trim());lastIndex=i2+1;continue;}
if(ch==="(")
++roundBrackets;else if(ch===")")
--roundBrackets;else if(ch==="[")
++squareBrackets;else if(ch==="]")
--squareBrackets;}
split.push(str3.slice(lastIndex).trim());return split;};var transforms=/\)\s*,?\s*/;var delimiter=/[\s,]+/;var hyphen=/([^e])-/gi;var pathLetters=/[MLHVCSQTAZ]/gi;var isPathLetter=/[MLHVCSQTAZ]/i;var numbersWithDots=/((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi;var dots=/\./g;var CssQuery=class _CssQuery{constructor(query){if(_CssQuery.cache.has(query)){this.queries=_CssQuery.cache.get(query);return;}
let queries=splitNotInBrackets(query,",");queries=queries.map((query2)=>{let roundBrackets=0;let squareBrackets=0;query2=query2.replace(/[()[\]>~+]/g,function(ch){if(ch==="(")
++roundBrackets;else if(ch===")")
--roundBrackets;else if(ch==="[")
++squareBrackets;else if(ch==="]")
--squareBrackets;if("()[]".indexOf(ch)>-1)
return ch;if(squareBrackets||roundBrackets)
return ch;return" "+ch+" ";});query2=splitNotInBrackets(query2," ").filter((el)=>!!el.length);const pairs=[];let relation="%";for(let i2=0,il=query2.length;i2<il;++i2){if(">~+%".indexOf(query2[i2])>-1){relation=query2[i2];continue;}
pairs.push([relation,query2[i2]]);relation="%";}
return pairs;});this.queries=queries;if(_CssQuery.cacheKeys.length>50){_CssQuery.cache.delete(_CssQuery.cacheKeys.shift());}
_CssQuery.cache.set(query,queries);_CssQuery.cacheKeys.push(query);}
matches(node2,scope){for(let i2=this.queries.length;i2--;){if(this.matchHelper(this.queries[i2],node2,scope)){return true;}}
return false;}
matchHelper(query,node2,scope){query=query.slice();const last4=query.pop();if(!new CssQueryNode(last4[1]).matches(node2,scope)){return false;}
if(!query.length)
return true;if(last4[0]===",")
return true;if(last4[0]==="+"){return!!node2.previousSibling&&this.matchHelper(query,node2.previousSibling,scope);}
if(last4[0]===">"){return!!node2.parentNode&&this.matchHelper(query,node2.parentNode,scope);}
if(last4[0]==="~"){while(node2=node2.previousSibling){if(this.matchHelper(query,node2,scope)){return true;}}
return false;}
if(last4[0]==="%"){while(node2=node2.parentNode){if(this.matchHelper(query,node2,scope)){return true;}}
return false;}}};CssQuery.cache=new Map();CssQuery.cacheKeys=[];var nth3=(node,arr,nth)=>{if(nth==="even")
nth="2n";else if(nth==="odd")
nth="2n+1";if(/[^\d\-n+*/]+/.test(nth))
return false;nth=nth.replace("n","*n");for(var i,n=0,nl=arr.length;n<nl;++n){i=eval(nth);if(i>nl)
break;if(arr[i-1]===node)
return true;}
return false;};var lower=(a)=>a.toLowerCase();var eq3=(a,b10,i2)=>i2?lower(a)===lower(b10):a===b10;var attributeMatcher={"=":(i2,a,b10)=>eq3(a,b10,i2),"~=":(i2,a,b10)=>b10.split(delimiter).filter((el)=>eq3(el,a,i2)).length>0,"|=":(i2,a,b10)=>eq3(b10.split(delimiter)[0],a,i2),"^=":(i2,a,b10)=>i2?lower(b10).startsWith(lower(a)):b10.startsWith(a),"$=":(i2,a,b10)=>i2?lower(b10).endsWith(lower(a)):b10.endsWith(a),"*=":(i2,a,b10)=>i2?lower(b10).includes(lower(a)):b10.includes(a),"*":(i2,a,b10)=>b10!=null};var getAttributeValue=(prefix,name,node2)=>{if(!prefix||prefix==="*"){return node2.getAttribute(name);}
return node2.getAttribute(prefix+":"+name);};var pseudoMatcher={"first-child":(a,n2)=>n2.parentNode&&n2.parentNode.firstChild===n2,"last-child":(a,n2)=>n2.parentNode&&n2.parentNode.lastChild===n2,"nth-child":(a,n2)=>n2.parentNode&&nth3(n2,n2.parentNode.childNodes,a),"nth-last-child":(a,n2)=>n2.parentNode&&nth3(n2,n2.parentNode.childNodes.slice().reverse(),a),"first-of-type":(a,n2)=>n2.parentNode&&n2.parentNode.childNodes.filter((el)=>el.nodeName===n2.nodeName)[0]===n2,"last-of-type":(a,n2)=>n2.parentNode&&n2.parentNode.childNodes.filter((el)=>el.nodeName===n2.nodeName).pop()===n2,"nth-of-type":(a,n2)=>n2.parentNode&&nth3(n2,n2.parentNode.childNodes.filter((el)=>el.nodeName===n2.nodeName),a),"nth-last-of-type":(a,n2)=>n2.parentNode&&nth3(n2,n2.parentNode.childNodes.filter((el)=>el.nodeName===n2.nodeName).reverse(),a),"only-child":(a,n2)=>n2.parentNode&&n2.parentNode.childNodes.length===1,"only-of-type":(a,n2)=>n2.parentNode&&n2.parentNode.childNodes.filter((el)=>el.nodeName===n2.nodeName).length===1,root:(a,n2)=>n2.ownerDocument.documentElement===n2,not:(a,n2,s)=>!new CssQuery(a).matches(n2,s),matches:(a,n2,s)=>new CssQuery(a).matches(n2,s),scope:(a,n2,s)=>n2===s};var CssQueryNode=class{constructor(node2){this.tag="";this.id="";this.classList=[];this.attrs=[];this.pseudo=[];let matches=node2.match(/^[\w-]+|^\*/);if(matches){this.tag=matches[0];node2=node2.slice(this.tag.length);}
while(matches=/:([\w-]+)(?:\((.+)\))?/g.exec(node2)){this.pseudo.push(pseudoMatcher[matches[1]].bind(this,removeQuotes(matches[2]||"")));node2=node2.slice(0,matches.index)+node2.slice(matches.index+matches[0].length);}
while(matches=/\[([\w-*]+\|)?([\w-]+)(([=^~$|*]+)(.+?)( +[iI])?)?\]/g.exec(node2)){const prefix=matches[1]?matches[1].split("|")[0]:null;this.attrs.push({name:matches[2],getValue:getAttributeValue.bind(this,prefix,matches[2]),matcher:attributeMatcher[matches[4]||"*"].bind(this,!!matches[6],removeQuotes((matches[5]||"").trim())
)});node2=node2.slice(0,matches.index)+node2.slice(matches.index+matches[0].length);}
matches=node2.match(/#([\w-]+)/);if(matches){this.id=matches[1];node2=node2.slice(0,matches.index)+node2.slice(matches.index+matches[0].length);}
while(matches=/\.([\w-]+)/g.exec(node2)){this.classList.push(matches[1]);node2=node2.slice(0,matches.index)+node2.slice(matches.index+matches[0].length);}}
matches(node2,scope){let i2;if(node2.nodeType!==1)
return false;if(node2.namespaceURI===html){this.tag=this.tag.toUpperCase();}
if(this.tag&&this.tag!==node2.nodeName&&this.tag!=="*"){return false;}
if(this.id&&this.id!==node2.id){return false;}
const classList=(node2.getAttribute("class")||"").split(delimiter).filter((el)=>!!el.length);if(this.classList.filter((className)=>classList.indexOf(className)<0).length){return false;}
for(i2=this.attrs.length;i2--;){const attrValue=this.attrs[i2].getValue(node2);if(attrValue===null||!this.attrs[i2].matcher(attrValue)){return false;}}
for(i2=this.pseudo.length;i2--;){if(!this.pseudo[i2](node2,scope)){return false;}}
return true;}};var ParentNode={matchWithScope(query,scope){return new CssQuery(query).matches(this,scope);},query(query,scope,single=false){const iter=new NodeIterator(scope,NodeFilter.SHOW_ELEMENT,(node2)=>node2.matchWithScope(query,scope)?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_IGNORE,false);const nodes=[];for(const node2 of iter){nodes.push(node2);if(single)
return nodes;}
return nodes;},querySelectorAll(query){return this.query(query,this);},querySelector(query){return this.query(query,this,true)[0]||null;},closest(query){const cssQuery=new CssQuery(query);let node2=this;while(node2){if(cssQuery.matches(node2,this)){return node2;}
node2=node2.parentNode;}
return null;},prepend(...nodes){const node2=nodesToNode(nodes,this.ownerDocument);this.insertBefore(node2,this.firstChild);},append(...nodes){const node2=nodesToNode(nodes,this.ownerDocument);this.appendChild(node2);},replaceChildren(...nodes){while(this.firstChild){this.removeChild(this.firstChild);}
this.append(...nodes);}};Object.defineProperties(ParentNode,{children:{get(){return this.childNodes.filter(function(node2){return node2.nodeType===node2.ELEMENT_NODE;});}},firstElementChild:{get(){for(const node2 of this.childNodes){if(node2&&node2.nodeType===node2.ELEMENT_NODE){return node2;}}
return null;}},lastElementChild:{get(){for(const node2 of this.childNodes.slice().reverse()){if(node2&&node2.nodeType===node2.ELEMENT_NODE){return node2;}}
return null;}},childElementCount:{get(){return this.children.length;}}});var NonElementParentNode={getElementById(id9){const iter=new NodeIterator(this,NodeFilter.SHOW_ELEMENT,(node2)=>id9===node2.id?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_IGNORE,false);for(const node2 of iter){return node2;}
return null;}};var DocumentFragment=class extends Node{constructor(name,props){super(name,props);this.nodeType=Node.DOCUMENT_FRAGMENT_NODE;}};mixin(elementAccess,DocumentFragment);mixin(ParentNode,DocumentFragment);mixin(NonElementParentNode,DocumentFragment);var import_sax=__toESM(require_sax(),1);var HTMLParser=function(str3,el){let currentTag=el;let document2=el.ownerDocument;let cdata2=null;if(el.nodeType!==el.DOCUMENT_NODE){str3='<svgdom:wrapper xmlns:svgdom="svgdom:rocks">'+str3+"</svgdom:wrapper>";}else{document2=el;}
const parser=import_sax.default.parser(true,{xmlns:true,strictEntities:true});parser.onerror=(e)=>{throw e;};parser.ondoctype=(str4)=>{if(currentTag!==document2){throw new Error("Doctype can only be appended to document");}
currentTag.appendChild(document2.implementation.createDocumentType());};parser.ontext=(str4)=>currentTag.appendChild(document2.createTextNode(str4));parser.oncomment=(str4)=>currentTag.appendChild(document2.createComment(str4));parser.onopentag=(node2)=>{if(node2.name==="svgdom:wrapper")
return;const attrs=node2.attributes;const uri=node2.uri||currentTag.lookupNamespaceURI(node2.prefix||null);var newElement=document2.createElementNS(uri,node2.name);for(const[name,node3]of Object.entries(attrs)){newElement.setAttributeNS(node3.uri,name,node3.value);}
currentTag.appendChild(newElement);currentTag=newElement;};parser.onclosetag=(tagName)=>{if(tagName==="svgdom:wrapper")
return;currentTag=currentTag.parentNode;};parser.onopencdata=()=>{cdata2=document2.createCDATASection("");};parser.oncdata=(str4)=>{cdata2.appendData(str4);};parser.onclosecdata=()=>{currentTag.appendChild(cdata2);};parser.write(str3);};var mapMap=function(map4,cb){var arr2=[];map4.forEach(function(value,key){arr2.push(cb(value,key));});return arr2;};var mapToCss=function(myMap){return mapMap(myMap,function(value,key){if(!value)
return false;return decamelize(key)+": "+value;}).filter(function(el){return!!el;}).join("; ")+";"||null;};var cssToMap=function(css){return new Map(css.split(/\s*;\s*/).filter(function(el){return!!el;}).map(function(el){return el.split(/\s*:\s*/);}));};var validateAndExtract=(ns,name)=>{let prefix=null;let localname=name;if(!ns)
ns=null;if(name.includes(":")){[prefix,localname]=name.split(":");}
if(!ns&&prefix){throw new Error("Namespace Error");}
if(prefix==="xml"&&ns!==xml){throw new Error("Namespace Error");}
if((prefix==="xmlns"||name==="xmlns")&&ns!==xmlns){throw new Error("Namespace Error");}
if(prefix!=="xmlns"&&name!=="xmlns"&&ns===xmlns){throw new Error("Namespace Error");}
return[ns,prefix,localname];};var getAttributeByNsAndLocalName=(el,ns,localName)=>{if(!ns)
ns=null;return[...el.attrs].find((node2)=>node2.localName===localName&&node2.namespaceURI===ns);};var getAttributeByQualifiedName=(el,qualifiedName)=>{if(el.namespaceURI===html&&el.ownerDocument.namespaceURI===html){qualifiedName=qualifiedName.toLowerCase();}
return[...el.attrs].find((node2)=>node2.name===qualifiedName);};var getStyleProxy=(node2)=>{return new Proxy(node2,{get(target,key){const styles=target.getAttribute("style")||"";const styleMap=cssToMap(styles);if(key==="cssText"){return styles;}
if(key==="setProperty"){return function(propertyName,value="",priority=""){node2.style[propertyName]=value+(priority?`!${priority}`:"");};}
if(key==="getPropertyValue"){return function(propertyName){return node2.style[propertyName]??"";};}
key=decamelize(key);if(!styleMap.has(key))
return"";return styleMap.get(key);},set(target,key,value){key=decamelize(key);if(key==="css-text"){target.setAttribute("style",mapToCss(cssToMap(value)));return true;}else{value=hexToRGB(value.toString());const styles=target.getAttribute("style")||"";const styleMap=cssToMap(styles);styleMap.set(key,value);target.setAttribute("style",mapToCss(styleMap));return true;}}});};var Element3=class extends Node{constructor(name,props,ns){super(name,props,ns);this.style=getStyleProxy(this);this.tagName=this.nodeName;}
getAttribute(qualifiedName){const attr=this.getAttributeNode(qualifiedName);return attr?attr.value:null;}
getAttributeNode(qualifiedName){return getAttributeByQualifiedName(this,qualifiedName);}
getAttributeNodeNS(ns,localName){return getAttributeByNsAndLocalName(this,ns,localName);}
getAttributeNS(ns,localName){const attr=this.getAttributeNodeNS(ns,localName);return attr?attr.value:null;}
getBoundingClientRect(){throw new Error("Only implemented for SVG Elements");}
hasAttribute(qualifiedName){const attr=this.getAttributeNode(qualifiedName);return!!attr;}
hasAttributeNS(ns,localName){const attr=this.getAttributeNodeNS(ns,localName);return!!attr;}
matches(query){return this.matchWithScope(query,this);}
removeAttribute(qualifiedName){const attr=this.getAttributeNode(qualifiedName);if(attr){this.removeAttributeNode(attr);}
return attr;}
removeAttributeNode(node2){if(!this.attrs.delete(node2))
throw new Error("Attribute cannot be removed because it was not found on the element");return node2;}
removeAttributeNS(ns,localName){const attr=this.getAttributeNodeNS(ns,localName);if(attr){this.removeAttributeNode(attr);}
return attr;}
setAttribute(qualifiedName,value){if(this.namespaceURI===html&&this.ownerDocument.namespaceURI===html){qualifiedName=qualifiedName.toLowerCase();}
let attr=this.getAttributeNode(qualifiedName);if(!attr){attr=this.ownerDocument.createAttributeNS(null,qualifiedName,true);this.setAttributeNode(attr);}
attr.value=value;}
setAttributeNode(node2){this.attrs.add(node2);node2.ownerElement=this;}
setAttributeNS(namespace,name,value){const[ns,prefix,localName]=validateAndExtract(namespace,name);let attr=this.getAttributeNodeNS(ns,localName);if(!attr){attr=this.ownerDocument.createAttributeNS(ns,name);this.setAttributeNode(attr);}
attr.value=value;this.attrs.add(attr);}
get attributes(){return[...this.attrs];}
get className(){return this.getAttribute("class");}
set className(c){this.setAttribute("class",c);}
get id(){return this.getAttribute("id")||"";}
set id(id9){return this.setAttribute("id",id9);}
get innerHTML(){return this.childNodes.map((node2)=>{if(node2.nodeType===Node.TEXT_NODE)
return htmlEntities2(node2.data);if(node2.nodeType===Node.CDATA_SECTION_NODE)
return cdata(node2.data);if(node2.nodeType===Node.COMMENT_NODE)
return comment(node2.data);return node2.outerHTML;}).join("");}
set innerHTML(str3){while(this.firstChild){this.removeChild(this.firstChild);}
HTMLParser(str3,this);}
get outerHTML(){return tag(this);}
set outerHTML(str3){const well=new DocumentFragment();HTMLParser(str3,well);this.parentNode.insertBefore(well,this);this.parentNode.removeChild(this);}};mixin(ParentNode,Element3);mixin(elementAccess,Element3);mixin(NonDocumentTypeChildNode,Element3);mixin(ChildNode,Element3);var HTMLElement2=class extends Element3{};var HTMLLinkElement=class extends HTMLElement2{};Object.defineProperties(HTMLLinkElement.prototype,{href:{get(){return this.getAttribute("href");},set(val){this.setAttribute("href",val);}},rel:{get(){return this.getAttribute("rel");},set(val){this.setAttribute("rel",val);}},type:{get(){return this.getAttribute("type");},set(val){this.setAttribute("type",val);}}});var HTMLScriptElement=class extends HTMLElement2{};Object.defineProperties(HTMLScriptElement.prototype,{src:{get(){return this.getAttribute("src");},set(val){this.setAttribute("src",val);}},type:{get(){return this.getAttribute("type");},set(val){this.setAttribute("type",val);}}});var import_image_size=__toESM(require_dist(),1);var HTMLImageElement=class extends HTMLElement2{constructor(...args){super(...args);this.naturalWidth=0;this.naturalHeight=0;this.complete=false;}};Object.defineProperties(HTMLImageElement.prototype,{src:{get(){return this.getAttribute("src");},set(val){this.setAttribute("src",val);(0,import_image_size.default)(val,(err,size4)=>{if(err){this.dispatchEvent(new Event("error"));return;}
this.naturalWidth=size4.width;this.naturalHeight=size4.height;this.complete=true;this.dispatchEvent(new Event("load"));});}},height:{get(){return this.getAttribute("height")||this.naturalHeight;},set(val){this.setAttribute("height",val);}},width:{get(){return this.getAttribute("width")||this.naturalWidth;},set(val){this.setAttribute("width",val);}}});var SVGElement=class extends Element3{get ownerSVGElement(){let parent=this;while(parent=parent.parentNode){if("svg"==parent.nodeName){return parent;}}
return null;}
get viewportElement(){let parent=this;while(parent=parent.parentNode){if(["svg","symbol"].includes(parent.nodeName)){return parent;}}
return null;}};var SVGPoint=class _SVGPoint{constructor(){this.x=0;this.y=0;}
matrixTransform(m){var r=new _SVGPoint();r.x=m.a*this.x+m.c*this.y+m.e*1;r.y=m.b*this.x+m.d*this.y+m.f*1;return r;}};var Point=class _Point{constructor(x2,y2){const base={x:0,y:0};const source=Array.isArray(x2)?{x:x2[0],y:x2[1]}:typeof x2==="object"?{x:x2.x,y:x2.y}:x2!=null?{x:x2,y:y2!=null?y2:x2}:base;this.x=source.x;this.y=source.y;}
abs(){return Math.sqrt(this.absQuad());}
absQuad(){return this.x*this.x+this.y*this.y;}
add(x2,y2){const p=new _Point(x2,y2);return new _Point(this.x+p.x,this.y+p.y);}
angleTo(p){let sign=Math.sign(this.x*p.y-this.y*p.x);sign=sign||1;return sign*Math.acos(Math.round(this.dot(p)/(this.abs()*p.abs())*1e6)/1e6);}
clone(){return new _Point(this);}
closeTo(p,eta=1e-5){return this.equals(p)||Math.abs(this.x-p.x)<eta&&Math.abs(this.y-p.y)<eta;}
div(factor){return new _Point(this.x/factor,this.y/factor);}
dot(p){return this.x*p.x+this.y*p.y;}
equals(p){return this.x===p.x&&this.y===p.y;}
mul(factor){return new _Point(this.x*factor,this.y*factor);}
native(){const point2=new SVGPoint();point2.x=this.x;point2.y=this.y;return point2;}
normal(){return new _Point(this.y,-this.x);}
normalize(){const abs=this.abs();if(!abs)
throw new Error("Can't normalize vector of zero length");return this.div(abs);}
reflectAt(p){return p.add(p.sub(this));}
sub(x2,y2){const p=new _Point(x2,y2);return new _Point(this.x-p.x,this.y-p.y);}
toArray(){return[this.x,this.y];}
toPath(){return["M",this.x,this.y].join(" ");}
transform(matrix){return new _Point(this.native().matrixTransform(matrix));}
transformO(matrix){const{x:x2,y:y2}=this.native().matrixTransform(matrix);this.x=x2;this.y=y2;}};var Box=class _Box{constructor(source){var base=[0,0,0,0];source=typeof source==="string"?source.split(delimiter).map(parseFloat):Array.isArray(source)?source:typeof source==="object"?[source.left!=null?source.left:source.x,source.top!=null?source.top:source.y,source.width,source.height]:arguments.length===4?[].slice.call(arguments):base;this.x=this.left=source[0];this.y=this.top=source[1];this.width=source[2];this.height=source[3];this.right=this.left+this.width;this.bottom=this.top+this.height;}
merge(box){if(box instanceof NoBox)
return new _Box(this);var x2=Math.min(this.x,box.x);var y2=Math.min(this.y,box.y);return new _Box(x2,y2,Math.max(this.x+this.width,box.x+box.width)-x2,Math.max(this.y+this.height,box.y+box.height)-y2);}
transform(m){var xMin=Infinity;var xMax=-Infinity;var yMin=Infinity;var yMax=-Infinity;var pts=[new Point(this.x,this.y),new Point(this.x+this.width,this.y),new Point(this.x,this.y+this.height),new Point(this.x+this.width,this.y+this.height)];pts.forEach(function(p){p=p.transform(m);xMin=Math.min(xMin,p.x);xMax=Math.max(xMax,p.x);yMin=Math.min(yMin,p.y);yMax=Math.max(yMax,p.y);});return new _Box(xMin,yMin,xMax-xMin,yMax-yMin);}};var NoBox=class _NoBox extends Box{merge(box){return box instanceof _NoBox?new _NoBox():new Box(box);}
transform(m){return new _NoBox();}};var radians=function(d){return d%360*Math.PI/180;};function matrixFactory(a,b10,c,d,e,f){var r=new SVGMatrix();r.a=a;r.b=b10;r.c=c;r.d=d;r.e=e;r.f=f;return r;}
var SVGMatrix=class _SVGMatrix{constructor(){this.a=this.d=1;this.b=this.c=this.e=this.f=0;}
inverse(){var a=this.a;var b10=this.b;var c=this.c;var d=this.d;var e=this.e;var f=this.f;var det=a*d-b10*c;if(!det)
throw new Error("Cannot invert "+this);var na=d/det;var nb=-b10/det;var nc=-c/det;var nd=a/det;var ne=-(na*e+nc*f);var nf=-(nb*e+nd*f);this.a=na;this.b=nb;this.c=nc;this.d=nd;this.e=ne;this.f=nf;return this;}
multiply(m){var r=new _SVGMatrix();r.a=this.a*m.a+this.c*m.b+this.e*0;r.b=this.b*m.a+this.d*m.b+this.f*0;r.c=this.a*m.c+this.c*m.d+this.e*0;r.d=this.b*m.c+this.d*m.d+this.f*0;r.e=this.a*m.e+this.c*m.f+this.e*1;r.f=this.b*m.e+this.d*m.f+this.f*1;return r;}
rotate(r,x2,y2){r=r%360*Math.PI/180;return this.multiply(matrixFactory(Math.cos(r),Math.sin(r),-Math.sin(r),Math.cos(r),x2?-Math.cos(r)*x2+Math.sin(r)*y2+x2:0,y2?-Math.sin(r)*x2-Math.cos(r)*y2+y2:0));}
scale(scaleX,scaleY=scaleX){return this.multiply(matrixFactory(scaleX,0,0,scaleY,0,0));}
skew(x2,y2){return this.multiply(matrixFactory(1,Math.tan(radians(y2)),Math.tan(radians(x2)),1,0,0));}
skewX(x2){return this.skew(x2,0);}
skewY(y2){return this.skew(0,y2);}
toString(){return"SVGMatrix";}
translate(x2=0,y2=0){return this.multiply(matrixFactory(1,0,0,1,x2,y2));}};var PointCloud=class _PointCloud extends Array{constructor(...args){if(args.length===1&&typeof args[0]==="number"){super(args.shift());}else{super();}
args.reduce((last4,curr)=>{last4.push(...curr);return this;},this);}
bbox(){if(!this.length){return new NoBox();}
let xMin=Infinity;let xMax=-Infinity;let yMin=Infinity;let yMax=-Infinity;this.forEach(function(p){xMin=Math.min(xMin,p.x);xMax=Math.max(xMax,p.x);yMin=Math.min(yMin,p.y);yMax=Math.max(yMax,p.y);});return new Box(xMin,yMin,xMax-xMin,yMax-yMin);}
merge(cloud){return new _PointCloud(this,cloud);}
transform(m){return new _PointCloud(this.map((p)=>p.transform(m)));}};var pathHandlers={M(c,p,r,p0){p.x=p0.x=c[0];p.y=p0.y=c[1];return new Move(p);},L(c,p){const ret=new Line2(p.x,p.y,c[0],c[1]);p.x=c[0];p.y=c[1];return ret;},H(c,p){return pathHandlers.L([c[0],p.y],p);},V(c,p){return pathHandlers.L([p.x,c[0]],p);},Q(c,p,r){const ret=Cubic.fromQuad(p,new Point(c[0],c[1]),new Point(c[2],c[3]));p.x=c[2];p.y=c[3];const reflect=new Point(c[0],c[1]).reflectAt(p);r.x=reflect.x;r.y=reflect.y;return ret;},T(c,p,r,p0,reflectionIsPossible){if(reflectionIsPossible){c=[r.x,r.y].concat(c);}else{c=[p.x,p.y].concat(c);}
return pathHandlers.Q(c,p,r);},C(c,p,r){const ret=new Cubic(p,new Point(c[0],c[1]),new Point(c[2],c[3]),new Point(c[4],c[5]));p.x=c[4];p.y=c[5];const reflect=new Point(c[2],c[3]).reflectAt(p);r.x=reflect.x;r.y=reflect.y;return ret;},S(c,p,r,p0,reflectionIsPossible){if(reflectionIsPossible){c=[r.x,r.y].concat(c);}else{c=[p.x,p.y].concat(c);}
return pathHandlers.C(c,p,r);},Z(c,p,r,p0){return pathHandlers.L([p0.x,p0.y],p);},A(c,p,r){const ret=new Arc(p,new Point(c[5],c[6]),c[0],c[1],c[2],c[3],c[4]);p.x=c[5];p.y=c[6];return ret;}};var mlhvqtcsa="mlhvqtcsaz".split("");for(let i2=0,il=mlhvqtcsa.length;i2<il;++i2){pathHandlers[mlhvqtcsa[i2]]=function(i3){return function(c,p,r,p0,reflectionIsPossible){if(i3==="H")
c[0]=c[0]+p.x;else if(i3==="V")
c[0]=c[0]+p.y;else if(i3==="A"){c[5]=c[5]+p.x;c[6]=c[6]+p.y;}else{for(let j=0,jl=c.length;j<jl;++j){c[j]=c[j]+(j%2?p.y:p.x);}}
return pathHandlers[i3](c,p,r,p0,reflectionIsPossible);};}(mlhvqtcsa[i2].toUpperCase());}
function pathRegReplace(a,b10,c,d){return c+d.replace(dots," .");}
function isBeziere(obj){return obj instanceof Cubic;}
var pathParser=(array)=>{if(!array)
return[];const paramCnt={M:2,L:2,H:1,V:1,C:6,S:4,Q:4,T:2,A:7,Z:0};array=array.replace(numbersWithDots,pathRegReplace).replace(pathLetters," $& ").replace(hyphen,"$1 -").trim().split(delimiter);const arr2=[];const p=new Point();const p0=new Point();const r=new Point();let index2=0;const len2=array.length;let s;do{if(isPathLetter.test(array[index2])){s=array[index2];++index2;}else if(s==="M"){s="L";}else if(s==="m"){s="l";}
arr2.push(pathHandlers[s].call(null,array.slice(index2,index2=index2+paramCnt[s.toUpperCase()]).map(parseFloat),p,r,p0,isBeziere(arr2[arr2.length-1])));}while(len2>index2);return arr2;};var Move=class{constructor(p){this.p1=p.clone();}
bbox(){const p=this.p1;return new Box(p.x,p.y,0,0);}
getCloud(){return new PointCloud([this.p1]);}
length(){return 0;}
toPath(){return["M",this.p1.x,this.p1.y].join(" ");}
toPathFragment(){return["M",this.p1.x,this.p1.y];}
transform(matrix){this.p1.transformO(matrix);return this;}};var Arc=class _Arc{constructor(p1,p2,rx,ry,\u03C6,arc,sweep){if(!rx||!ry)
return new Line2(p1,p2);rx=Math.abs(rx);ry=Math.abs(ry);this.p1=p1.clone();this.p2=p2.clone();this.arc=arc?1:0;this.sweep=sweep?1:0;const cos\u03C6=Math.cos(\u03C6/180*Math.PI);const sin\u03C6=Math.sin(\u03C6/180*Math.PI);const p1_=new Point((p1.x-p2.x)/2,(p1.y-p2.y)/2).transform(matrixFactory(cos\u03C6,-sin\u03C6,sin\u03C6,cos\u03C6,0,0));const ratio=p1_.x**2/rx**2+p1_.y**2/ry**2;if(ratio>1){rx=Math.sqrt(ratio)*rx;ry=Math.sqrt(ratio)*ry;}
const rxQuad=rx**2;const ryQuad=ry**2;const divisor1=rxQuad*p1_.y**2;const divisor2=ryQuad*p1_.x**2;const dividend=rxQuad*ryQuad-divisor1-divisor2;let c_;if(Math.abs(dividend)<1e-15){c_=new Point(0,0);}else{c_=new Point(rx*p1_.y/ry,-ry*p1_.x/rx).mul(Math.sqrt(dividend/(divisor1+divisor2)));}
if(this.arc===this.sweep)
c_=c_.mul(-1);const c=c_.transform(matrixFactory(cos\u03C6,sin\u03C6,-sin\u03C6,cos\u03C6,0,0)).add(new Point((p1.x+p2.x)/2,(p1.y+p2.y)/2));const anglePoint=new Point((p1_.x-c_.x)/rx,(p1_.y-c_.y)/ry);const \u03B8=new Point(1,0).angleTo(anglePoint);let \u0394\u03B8=anglePoint.angleTo(new Point((-p1_.x-c_.x)/rx,(-p1_.y-c_.y)/ry));\u0394\u03B8=\u0394\u03B8%(2*Math.PI);if(!sweep&&\u0394\u03B8>0)
\u0394\u03B8-=2*Math.PI;if(sweep&&\u0394\u03B8<0)
\u0394\u03B8+=2*Math.PI;this.c=c;this.theta=\u03B8*180/Math.PI;this.theta2=(\u03B8+\u0394\u03B8)*180/Math.PI;this.delta=\u0394\u03B8*180/Math.PI;this.rx=rx;this.ry=ry;this.phi=\u03C6;this.cos\u03C6=cos\u03C6;this.sin\u03C6=sin\u03C6;}
static fromCenterForm(c,rx,ry,\u03C6,\u03B8,\u0394\u03B8){const cos\u03C6=Math.cos(\u03C6/180*Math.PI);const sin\u03C6=Math.sin(\u03C6/180*Math.PI);const m=matrixFactory(cos\u03C6,sin\u03C6,-sin\u03C6,cos\u03C6,0,0);const p1=new Point(rx*Math.cos(\u03B8/180*Math.PI),ry*Math.sin(\u03B8/180*Math.PI)).transform(m).add(c);const p2=new Point(rx*Math.cos((\u03B8+\u0394\u03B8)/180*Math.PI),ry*Math.sin((\u03B8+\u0394\u03B8)/180*Math.PI)).transform(m).add(c);const arc=Math.abs(\u0394\u03B8)>180?1:0;const sweep=\u0394\u03B8>0?1:0;return new _Arc(p1,p2,rx,ry,\u03C6,arc,sweep);}
bbox(){const cloud=this.getCloud();return cloud.bbox();}
clone(){return new _Arc(this.p1,this.p2,this.rx,this.ry,this.phi,this.arc,this.sweep);}
getCloud(){if(this.p1.equals(this.p2))
return new PointCloud([this.p1]);let \u03B801=Math.atan(-this.sin\u03C6/this.cos\u03C6*this.ry/this.rx)*180/Math.PI;let \u03B802=Math.atan(this.cos\u03C6/this.sin\u03C6*this.ry/this.rx)*180/Math.PI;let \u03B81=this.theta;let \u03B82=this.theta2;if(\u03B81<0||\u03B82<0){\u03B81+=360;\u03B82+=360;}
if(\u03B82<\u03B81){const temp=\u03B81;\u03B81=\u03B82;\u03B82=temp;}
while(\u03B801-90>\u03B801)
\u03B801-=90;while(\u03B801<\u03B81)
\u03B801+=90;while(\u03B802-90>\u03B802)
\u03B802-=90;while(\u03B802<\u03B81)
\u03B802+=90;const angleToTest=[\u03B801,\u03B802,\u03B801+90,\u03B802+90,\u03B801+180,\u03B802+180,\u03B801+270,\u03B802+270];const points=angleToTest.filter(function(angle2){return angle2>\u03B81&&angle2<\u03B82;}).map(function(angle2){while(this.theta<angle2)
angle2-=360;return this.pointAt((angle2-this.theta)%360/this.delta);}.bind(this)).concat(this.p1,this.p2);return new PointCloud(points);}
length(){if(this.p1.equals(this.p2))
return 0;const length3=this.p2.sub(this.p1).abs();const ret=this.splitAt(0.5);const len1=ret[0].p2.sub(ret[0].p1).abs();const len2=ret[1].p2.sub(ret[1].p1).abs();if(len1+len2-length3<1e-5){return len1+len2;}
return ret[0].length()+ret[1].length();}
pointAt(t){if(this.p1.equals(this.p2))
return this.p1.clone();const tInAngle=(this.theta+t*this.delta)/180*Math.PI;const sin\u03B8=Math.sin(tInAngle);const cos\u03B8=Math.cos(tInAngle);return new Point(this.cos\u03C6*this.rx*cos\u03B8-this.sin\u03C6*this.ry*sin\u03B8+this.c.x,this.sin\u03C6*this.ry*cos\u03B8+this.cos\u03C6*this.rx*sin\u03B8+this.c.y);}
splitAt(t){const absDelta=Math.abs(this.delta);const delta1=absDelta*t;const delta2=absDelta*(1-t);const pointAtT=this.pointAt(t);return[new _Arc(this.p1,pointAtT,this.rx,this.ry,this.phi,delta1>180,this.sweep),new _Arc(pointAtT,this.p2,this.rx,this.ry,this.phi,delta2>180,this.sweep)];}
toPath(){return["M",this.p1.x,this.p1.y,"A",this.rx,this.ry,this.phi,this.arc,this.sweep,this.p2.x,this.p2.y].join(" ");}
toPathFragment(){return["A",this.rx,this.ry,this.phi,this.arc,this.sweep,this.p2.x,this.p2.y];}
toString(){return`p1:${this.p1.x.toFixed(4)}${this.p1.y.toFixed(4)},p2:${this.p2.x.toFixed(4)}${this.p2.y.toFixed(4)},c:${this.c.x.toFixed(4)}${this.c.y.toFixed(4)}theta:${this.theta.toFixed(4)},theta2:${this.theta2.toFixed(4)},delta:${this.delta.toFixed(4)},large:${this.arc},sweep:${this.sweep}`;}
transform(matrix){return new _Arc(this.p1.transform(matrix),this.p2.transform(matrix),this.rx,this.ry,this.phi,this.arc,this.sweep);}};var Cubic=class _Cubic{constructor(p1,c1,c2,p2){if(p1 instanceof Point){this.p1=new Point(p1);this.c1=new Point(c1);this.c2=new Point(c2);this.p2=new Point(p2);}else{this.p1=new Point(p1.p1);this.c1=new Point(p1.c1);this.c2=new Point(p1.c2);this.p2=new Point(p1.p2);}}
static fromQuad(p1,c,p2){const c1=p1.mul(1/3).add(c.mul(2/3));const c2=c.mul(2/3).add(p2.mul(1/3));return new _Cubic(p1,c1,c2,p2);}
bbox(){return this.getCloud().bbox();}
findRoots(){return this.findRootsX().concat(this.findRootsY());}
findRootsX(){return this.findRootsXY(this.p1.x,this.c1.x,this.c2.x,this.p2.x);}
findRootsXY(p1,p2,p3,p4){const a=3*(-p1+3*p2-3*p3+p4);const b10=6*(p1-2*p2+p3);const c=3*(p2-p1);if(a===0)
return[-c/b10].filter(function(el){return el>0&&el<1;});if(b10*b10-4*a*c<0)
return[];if(b10*b10-4*a*c===0)
return[Math.round(-b10/(2*a)*1e5)/1e5].filter(function(el){return el>0&&el<1;});return[Math.round((-b10+Math.sqrt(b10*b10-4*a*c))/(2*a)*1e5)/1e5,Math.round((-b10-Math.sqrt(b10*b10-4*a*c))/(2*a)*1e5)/1e5].filter(function(el){return el>0&&el<1;});}
findRootsY(){return this.findRootsXY(this.p1.y,this.c1.y,this.c2.y,this.p2.y);}
flatness(){let ux=Math.pow(3*this.c1.x-2*this.p1.x-this.p2.x,2);let uy=Math.pow(3*this.c1.y-2*this.p1.y-this.p2.y,2);const vx=Math.pow(3*this.c2.x-2*this.p2.x-this.p1.x,2);const vy=Math.pow(3*this.c2.y-2*this.p2.y-this.p1.y,2);if(ux<vx){ux=vx;}
if(uy<vy){uy=vy;}
return ux+uy;}
getCloud(){const points=this.findRoots().filter((root3)=>root3!==0&&root3!==1).map((root3)=>this.pointAt(root3)).concat(this.p1,this.p2);return new PointCloud(points);}
length(){return this.lengthAt();}
lengthAt(t=1){const curves=this.splitAt(t)[0].makeFlat(t);let length3=0;for(let i2=0,len2=curves.length;i2<len2;++i2){length3+=curves[i2].p2.sub(curves[i2].p1).abs();}
return length3;}
makeFlat(t){if(this.flatness()>0.15){return this.splitAt(0.5).map(function(el){return el.makeFlat(t*0.5);}).reduce(function(last4,current){return last4.concat(current);},[]);}else{this.t_value=t;return[this];}}
pointAt(t){return new Point((1-t)*(1-t)*(1-t)*this.p1.x+3*(1-t)*(1-t)*t*this.c1.x+3*(1-t)*t*t*this.c2.x+t*t*t*this.p2.x,(1-t)*(1-t)*(1-t)*this.p1.y+3*(1-t)*(1-t)*t*this.c1.y+3*(1-t)*t*t*this.c2.y+t*t*t*this.p2.y);}
splitAt(z){const x2=this.splitAtScalar(z,"x");const y2=this.splitAtScalar(z,"y");const a=new _Cubic(new Point(x2[0][0],y2[0][0]),new Point(x2[0][1],y2[0][1]),new Point(x2[0][2],y2[0][2]),new Point(x2[0][3],y2[0][3]));const b10=new _Cubic(new Point(x2[1][0],y2[1][0]),new Point(x2[1][1],y2[1][1]),new Point(x2[1][2],y2[1][2]),new Point(x2[1][3],y2[1][3]));return[a,b10];}
splitAtScalar(z,p){const p1=this.p1[p];const p2=this.c1[p];const p3=this.c2[p];const p4=this.p2[p];const t=z*z*z*p4-3*z*z*(z-1)*p3+3*z*(z-1)*(z-1)*p2-(z-1)*(z-1)*(z-1)*p1;return[[p1,z*p2-(z-1)*p1,z*z*p3-2*z*(z-1)*p2+(z-1)*(z-1)*p1,t],[t,z*z*p4-2*z*(z-1)*p3+(z-1)*(z-1)*p2,z*p4-(z-1)*p3,p4]];}
toPath(){return["M",this.p1.x,this.p1.y].concat(this.toPathFragment()).join(" ");}
toPathFragment(){return["C",this.c1.x,this.c1.y,this.c2.x,this.c2.y,this.p2.x,this.p2.y];}
transform(matrix){this.p1.transformO(matrix);this.c1.transformO(matrix);this.c2.transformO(matrix);this.p2.transformO(matrix);return this;}};var Line2=class{constructor(x1,y1,x2,y2){if(x1 instanceof Object){this.p1=new Point(x1);this.p2=new Point(y1);}else{this.p1=new Point(x1,y1);this.p2=new Point(x2,y2);}}
bbox(){return this.getCloud().bbox();}
getCloud(){return new PointCloud([this.p1,this.p2]);}
length(){return this.p2.sub(this.p1).abs();}
pointAt(t){const vec=this.p2.sub(this.p1).mul(t);return this.p1.add(vec);}
toPath(){return["M",this.p1.x,this.p1.y,this.p2.x,this.p2.y].join(" ");}
toPathFragment(){return["L",this.p2.x,this.p2.y];}
transform(matrix){this.p1.transformO(matrix);this.p2.transformO(matrix);return this;}};var PathSegmentArray=class extends Array{bbox(){return this.reduce((l,c)=>l.merge(c.bbox()),new NoBox());}
cloud(){return this.reduce((cloud,segment)=>segment.getCloud().merge(cloud),new PointCloud());}
merge(other){return this.concat(other);}
transform(matrix){return this.map((segment)=>segment.transform(matrix));}};var getPathSegments=function(d){return new PathSegmentArray(...pathParser(d));};var pointAtLength=function(d,len2){const segs=pathParser(d);const segLengths=segs.map((el)=>el.length());const length3=segLengths.reduce((l,c)=>l+c,0);let i2=0;let t=len2/length3;if(t>=1){if(segs[segs.length-1].p2){return segs[segs.length-1].p2.native();}else{return segs[segs.length-1].p1.native();}}
if(t<=0)
return segs[0].p1.native();while(segs[segs.length-1]instanceof Move)
segs.pop();let segEnd=0;for(const il=segLengths.length;i2<il;++i2){const k=segLengths[i2]/length3;segEnd+=k;if(segEnd>t){break;}}
const ratio=length3/segLengths[i2];t=ratio*(t-segEnd)+1;return segs[i2].pointAt(t).native();};var length2=function(d){return pathParser(d).reduce((l,c)=>l+c.length(),0);};var pathFrom={box({x:x2,y:y2,width:width2,height}){return`M ${x2}${y2}h ${width2}v ${height}H ${x2}V ${y2}`;},rect(node2){const width2=parseFloat(node2.getAttribute("width"))||0;const height=parseFloat(node2.getAttribute("height"))||0;const x2=parseFloat(node2.getAttribute("x"))||0;const y2=parseFloat(node2.getAttribute("y"))||0;return`M ${x2}${y2}h ${width2}v ${height}H ${x2}V ${y2}`;},circle(node2){const r=parseFloat(node2.getAttribute("r"))||0;const x2=parseFloat(node2.getAttribute("cx"))||0;const y2=parseFloat(node2.getAttribute("cy"))||0;if(r===0)
return"M0 0";return`M ${x2-r}${y2}A ${r}${r}0 0 0 ${x2+r}${y2}A ${r}${r}0 0 0 ${x2-r}${y2}`;},ellipse(node2){const rx=parseFloat(node2.getAttribute("rx"))||0;const ry=parseFloat(node2.getAttribute("ry"))||0;const x2=parseFloat(node2.getAttribute("cx"))||0;const y2=parseFloat(node2.getAttribute("cy"))||0;return`M ${x2-rx}${y2}A ${rx}${ry}0 0 0 ${x2+rx}${y2}A ${rx}${ry}0 0 0 ${x2-rx}${y2}`;},line(node2){const x1=parseFloat(node2.getAttribute("x1"))||0;const x2=parseFloat(node2.getAttribute("x2"))||0;const y1=parseFloat(node2.getAttribute("y1"))||0;const y2=parseFloat(node2.getAttribute("y2"))||0;return`M ${x1}${y1}L ${x2}${y2}`;},polygon(node2){return`M ${node2.getAttribute("points")}z`;},polyline(node2){return`M ${node2.getAttribute("points")}`;}};var import_node_path2=__toESM(require_path_browserify(),1);var ENCODING_MAPPING={utf16le:"utf-16le",ucs2:"utf-16le",utf16be:"utf-16be"};var DecodeStream=class{constructor(buffer){this.buffer=buffer;this.view=new DataView(buffer.buffer,buffer.byteOffset,buffer.byteLength);this.pos=0;this.length=this.buffer.length;}
readString(length3,encoding="ascii"){encoding=ENCODING_MAPPING[encoding]||encoding;let buf=this.readBuffer(length3);try{let decoder=new TextDecoder(encoding);return decoder.decode(buf);}catch(err){return buf;}}
readBuffer(length3){return this.buffer.slice(this.pos,this.pos+=length3);}
readUInt24BE(){return(this.readUInt16BE()<<8)+this.readUInt8();}
readUInt24LE(){return this.readUInt16LE()+(this.readUInt8()<<16);}
readInt24BE(){return(this.readInt16BE()<<8)+this.readUInt8();}
readInt24LE(){return this.readUInt16LE()+(this.readInt8()<<16);}};DecodeStream.TYPES={UInt8:1,UInt16:2,UInt24:3,UInt32:4,Int8:1,Int16:2,Int24:3,Int32:4,Float:4,Double:8};for(let key of Object.getOwnPropertyNames(DataView.prototype)){if(key.slice(0,3)==="get"){let type=key.slice(3).replace("Ui","UI");if(type==="Float32"){type="Float";}else if(type==="Float64"){type="Double";}
let bytes=DecodeStream.TYPES[type];DecodeStream.prototype["read"+type+(bytes===1?"":"BE")]=function(){const ret=this.view[key](this.pos,false);this.pos+=bytes;return ret;};if(bytes!==1){DecodeStream.prototype["read"+type+"LE"]=function(){const ret=this.view[key](this.pos,true);this.pos+=bytes;return ret;};}}}
var textEncoder=new TextEncoder();var isBigEndian=new Uint8Array(new Uint16Array([4660]).buffer)[0]==18;var EncodeStream=class{constructor(buffer){this.buffer=buffer;this.view=new DataView(this.buffer.buffer,this.buffer.byteOffset,this.buffer.byteLength);this.pos=0;}
writeBuffer(buffer){this.buffer.set(buffer,this.pos);this.pos+=buffer.length;}
writeString(string,encoding="ascii"){let buf;switch(encoding){case"utf16le":case"utf16-le":case"ucs2":buf=stringToUtf16(string,isBigEndian);break;case"utf16be":case"utf16-be":buf=stringToUtf16(string,!isBigEndian);break;case"utf8":buf=textEncoder.encode(string);break;case"ascii":buf=stringToAscii(string);break;default:throw new Error(`Unsupported encoding:${encoding}`);}
this.writeBuffer(buf);}
writeUInt24BE(val){this.buffer[this.pos++]=val>>>16&255;this.buffer[this.pos++]=val>>>8&255;this.buffer[this.pos++]=val&255;}
writeUInt24LE(val){this.buffer[this.pos++]=val&255;this.buffer[this.pos++]=val>>>8&255;this.buffer[this.pos++]=val>>>16&255;}
writeInt24BE(val){if(val>=0){this.writeUInt24BE(val);}else{this.writeUInt24BE(val+16777215+1);}}
writeInt24LE(val){if(val>=0){this.writeUInt24LE(val);}else{this.writeUInt24LE(val+16777215+1);}}
fill(val,length3){if(length3<this.buffer.length){this.buffer.fill(val,this.pos,this.pos+length3);this.pos+=length3;}else{const buf=new Uint8Array(length3);buf.fill(val);this.writeBuffer(buf);}}};function stringToUtf16(string,swap){let buf=new Uint16Array(string.length);for(let i2=0;i2<string.length;i2++){let code=string.charCodeAt(i2);if(swap){code=code>>8|(code&255)<<8;}
buf[i2]=code;}
return new Uint8Array(buf.buffer);}
function stringToAscii(string){let buf=new Uint8Array(string.length);for(let i2=0;i2<string.length;i2++){buf[i2]=string.charCodeAt(i2);}
return buf;}
for(let key of Object.getOwnPropertyNames(DataView.prototype)){if(key.slice(0,3)==="set"){let type=key.slice(3).replace("Ui","UI");if(type==="Float32"){type="Float";}else if(type==="Float64"){type="Double";}
let bytes=DecodeStream.TYPES[type];EncodeStream.prototype["write"+type+(bytes===1?"":"BE")]=function(value){this.view[key](this.pos,value,false);this.pos+=bytes;};if(bytes!==1){EncodeStream.prototype["write"+type+"LE"]=function(value){this.view[key](this.pos,value,true);this.pos+=bytes;};}}}
var Base2=class{fromBuffer(buffer){let stream=new DecodeStream(buffer);return this.decode(stream);}
toBuffer(value){let size4=this.size(value);let buffer=new Uint8Array(size4);let stream=new EncodeStream(buffer);this.encode(stream,value);return buffer;}};var NumberT=class extends Base2{constructor(type,endian="BE"){super();this.type=type;this.endian=endian;this.fn=this.type;if(this.type[this.type.length-1]!=="8"){this.fn+=this.endian;}}
size(){return DecodeStream.TYPES[this.type];}
decode(stream){return stream[`read${this.fn}`]();}
encode(stream,val){return stream[`write${this.fn}`](val);}};var uint8=new NumberT("UInt8");var uint16be=new NumberT("UInt16","BE");var uint16=uint16be;var uint16le=new NumberT("UInt16","LE");var uint24be=new NumberT("UInt24","BE");var uint24=uint24be;var uint24le=new NumberT("UInt24","LE");var uint32be=new NumberT("UInt32","BE");var uint32=uint32be;var uint32le=new NumberT("UInt32","LE");var int8=new NumberT("Int8");var int16be=new NumberT("Int16","BE");var int16=int16be;var int16le=new NumberT("Int16","LE");var int24be=new NumberT("Int24","BE");var int24le=new NumberT("Int24","LE");var int32be=new NumberT("Int32","BE");var int32=int32be;var int32le=new NumberT("Int32","LE");var floatbe=new NumberT("Float","BE");var floatle=new NumberT("Float","LE");var doublebe=new NumberT("Double","BE");var doublele=new NumberT("Double","LE");var Fixed=class extends NumberT{constructor(size4,endian,fracBits=size4>>1){super(`Int${size4}`,endian);this._point=1<<fracBits;}
decode(stream){return super.decode(stream)/this._point;}
encode(stream,val){return super.encode(stream,val*this._point|0);}};var fixed16be=new Fixed(16,"BE");var fixed16=fixed16be;var fixed16le=new Fixed(16,"LE");var fixed32be=new Fixed(32,"BE");var fixed32=fixed32be;var fixed32le=new Fixed(32,"LE");function resolveLength(length3,stream,parent){let res;if(typeof length3==="number"){res=length3;}else if(typeof length3==="function"){res=length3.call(parent,parent);}else if(parent&&typeof length3==="string"){res=parent[length3];}else if(stream&&length3 instanceof NumberT){res=length3.decode(stream);}
if(isNaN(res)){throw new Error("Not a fixed size");}
return res;}
var PropertyDescriptor=class{constructor(opts={}){this.enumerable=true;this.configurable=true;for(let key in opts){const val=opts[key];this[key]=val;}}};var ArrayT=class extends Base2{constructor(type,length3,lengthType="count"){super();this.type=type;this.length=length3;this.lengthType=lengthType;}
decode(stream,parent){let length3;const{pos}=stream;const res=[];let ctx2=parent;if(this.length!=null){length3=resolveLength(this.length,stream,parent);}
if(this.length instanceof NumberT){Object.defineProperties(res,{parent:{value:parent},_startOffset:{value:pos},_currentOffset:{value:0,writable:true},_length:{value:length3}});ctx2=res;}
if(length3==null||this.lengthType==="bytes"){const target=length3!=null?stream.pos+length3:(parent!=null?parent._length:void 0)?parent._startOffset+parent._length:stream.length;while(stream.pos<target){res.push(this.type.decode(stream,ctx2));}}else{for(let i2=0,end=length3;i2<end;i2++){res.push(this.type.decode(stream,ctx2));}}
return res;}
size(array,ctx2,includePointers=true){if(!array){return this.type.size(null,ctx2)*resolveLength(this.length,null,ctx2);}
let size4=0;if(this.length instanceof NumberT){size4+=this.length.size();ctx2={parent:ctx2,pointerSize:0};}
for(let item of array){size4+=this.type.size(item,ctx2);}
if(ctx2&&includePointers&&this.length instanceof NumberT){size4+=ctx2.pointerSize;}
return size4;}
encode(stream,array,parent){let ctx2=parent;if(this.length instanceof NumberT){ctx2={pointers:[],startOffset:stream.pos,parent};ctx2.pointerOffset=stream.pos+this.size(array,ctx2,false);this.length.encode(stream,array.length);}
for(let item of array){this.type.encode(stream,item,ctx2);}
if(this.length instanceof NumberT){let i2=0;while(i2<ctx2.pointers.length){const ptr=ctx2.pointers[i2++];ptr.type.encode(stream,ptr.val,ptr.parent);}}}};var LazyArray=class extends ArrayT{decode(stream,parent){const{pos}=stream;const length3=resolveLength(this.length,stream,parent);if(this.length instanceof NumberT){parent={parent,_startOffset:pos,_currentOffset:0,_length:length3};}
const res=new LazyArrayValue(this.type,length3,stream,parent);stream.pos+=length3*this.type.size(null,parent);return res;}
size(val,ctx2){if(val instanceof LazyArrayValue){val=val.toArray();}
return super.size(val,ctx2);}
encode(stream,val,ctx2){if(val instanceof LazyArrayValue){val=val.toArray();}
return super.encode(stream,val,ctx2);}};var LazyArrayValue=class{constructor(type,length3,stream,ctx2){this.type=type;this.length=length3;this.stream=stream;this.ctx=ctx2;this.base=this.stream.pos;this.items=[];}
get(index2){if(index2<0||index2>=this.length){return void 0;}
if(this.items[index2]==null){const{pos}=this.stream;this.stream.pos=this.base+this.type.size(null,this.ctx)*index2;this.items[index2]=this.type.decode(this.stream,this.ctx);this.stream.pos=pos;}
return this.items[index2];}
toArray(){const result=[];for(let i2=0,end=this.length;i2<end;i2++){result.push(this.get(i2));}
return result;}};var Bitfield=class extends Base2{constructor(type,flags=[]){super();this.type=type;this.flags=flags;}
decode(stream){const val=this.type.decode(stream);const res={};for(let i2=0;i2<this.flags.length;i2++){const flag=this.flags[i2];if(flag!=null){res[flag]=!!(val&1<<i2);}}
return res;}
size(){return this.type.size();}
encode(stream,keys3){let val=0;for(let i2=0;i2<this.flags.length;i2++){const flag=this.flags[i2];if(flag!=null){if(keys3[flag]){val|=1<<i2;}}}
return this.type.encode(stream,val);}};var BufferT=class extends Base2{constructor(length3){super();this.length=length3;}
decode(stream,parent){const length3=resolveLength(this.length,stream,parent);return stream.readBuffer(length3);}
size(val,parent){if(!val){return resolveLength(this.length,null,parent);}
let len2=val.length;if(this.length instanceof NumberT){len2+=this.length.size();}
return len2;}
encode(stream,buf,parent){if(this.length instanceof NumberT){this.length.encode(stream,buf.length);}
return stream.writeBuffer(buf);}};var Optional=class extends Base2{constructor(type,condition=true){super();this.type=type;this.condition=condition;}
decode(stream,parent){let{condition}=this;if(typeof condition==="function"){condition=condition.call(parent,parent);}
if(condition){return this.type.decode(stream,parent);}}
size(val,parent){let{condition}=this;if(typeof condition==="function"){condition=condition.call(parent,parent);}
if(condition){return this.type.size(val,parent);}else{return 0;}}
encode(stream,val,parent){let{condition}=this;if(typeof condition==="function"){condition=condition.call(parent,parent);}
if(condition){return this.type.encode(stream,val,parent);}}};var Reserved=class extends Base2{constructor(type,count=1){super();this.type=type;this.count=count;}
decode(stream,parent){stream.pos+=this.size(null,parent);return void 0;}
size(data,parent){const count=resolveLength(this.count,null,parent);return this.type.size()*count;}
encode(stream,val,parent){return stream.fill(0,this.size(val,parent));}};var StringT=class extends Base2{constructor(length3,encoding="ascii"){super();this.length=length3;this.encoding=encoding;}
decode(stream,parent){let length3,pos;if(this.length!=null){length3=resolveLength(this.length,stream,parent);}else{let buffer;({buffer,length:length3,pos}=stream);while(pos<length3&&buffer[pos]!==0){++pos;}
length3=pos-stream.pos;}
let{encoding}=this;if(typeof encoding==="function"){encoding=encoding.call(parent,parent)||"ascii";}
const string=stream.readString(length3,encoding);if(this.length==null&&stream.pos<stream.length){stream.pos++;}
return string;}
size(val,parent){if(!val){return resolveLength(this.length,null,parent);}
let{encoding}=this;if(typeof encoding==="function"){encoding=encoding.call(parent!=null?parent.val:void 0,parent!=null?parent.val:void 0)||"ascii";}
if(encoding==="utf16be"){encoding="utf16le";}
let size4=byteLength(val,encoding);if(this.length instanceof NumberT){size4+=this.length.size();}
if(this.length==null){size4++;}
return size4;}
encode(stream,val,parent){let{encoding}=this;if(typeof encoding==="function"){encoding=encoding.call(parent!=null?parent.val:void 0,parent!=null?parent.val:void 0)||"ascii";}
if(this.length instanceof NumberT){this.length.encode(stream,byteLength(val,encoding));}
stream.writeString(val,encoding);if(this.length==null){return stream.writeUInt8(0);}}};function byteLength(string,encoding){switch(encoding){case"ascii":return string.length;case"utf8":let len2=0;for(let i2=0;i2<string.length;i2++){let c=string.charCodeAt(i2);if(c>=55296&&c<=56319&&i2<string.length-1){let c2=string.charCodeAt(++i2);if((c2&64512)===56320){c=((c&1023)<<10)+(c2&1023)+65536;}else{i2--;}}
if((c&4294967168)===0){len2++;}else if((c&4294965248)===0){len2+=2;}else if((c&4294901760)===0){len2+=3;}else if((c&4292870144)===0){len2+=4;}}
return len2;case"utf16le":case"utf16-le":case"utf16be":case"utf16-be":case"ucs2":return string.length*2;default:throw new Error("Unknown encoding "+encoding);}}
var Struct=class extends Base2{constructor(fields={}){super();this.fields=fields;}
decode(stream,parent,length3=0){const res=this._setup(stream,parent,length3);this._parseFields(stream,res,this.fields);if(this.process!=null){this.process.call(res,stream);}
return res;}
_setup(stream,parent,length3){const res={};Object.defineProperties(res,{parent:{value:parent},_startOffset:{value:stream.pos},_currentOffset:{value:0,writable:true},_length:{value:length3}});return res;}
_parseFields(stream,res,fields){for(let key in fields){var val;const type=fields[key];if(typeof type==="function"){val=type.call(res,res);}else{val=type.decode(stream,res);}
if(val!==void 0){if(val instanceof PropertyDescriptor){Object.defineProperty(res,key,val);}else{res[key]=val;}}
res._currentOffset=stream.pos-res._startOffset;}}
size(val,parent,includePointers=true){if(val==null){val={};}
const ctx2={parent,val,pointerSize:0};if(this.preEncode!=null){this.preEncode.call(val);}
let size4=0;for(let key in this.fields){const type=this.fields[key];if(type.size!=null){size4+=type.size(val[key],ctx2);}}
if(includePointers){size4+=ctx2.pointerSize;}
return size4;}
encode(stream,val,parent){let type;if(this.preEncode!=null){this.preEncode.call(val,stream);}
const ctx2={pointers:[],startOffset:stream.pos,parent,val,pointerSize:0};ctx2.pointerOffset=stream.pos+this.size(val,ctx2,false);for(let key in this.fields){type=this.fields[key];if(type.encode!=null){type.encode(stream,val[key],ctx2);}}
let i2=0;while(i2<ctx2.pointers.length){const ptr=ctx2.pointers[i2++];ptr.type.encode(stream,ptr.val,ptr.parent);}}};var getPath=(object,pathArray)=>{return pathArray.reduce((prevObj,key)=>prevObj&&prevObj[key],object);};var VersionedStruct=class _VersionedStruct extends Struct{constructor(type,versions={}){super();this.type=type;this.versions=versions;if(typeof type==="string"){this.versionPath=type.split(".");}}
decode(stream,parent,length3=0){const res=this._setup(stream,parent,length3);if(typeof this.type==="string"){res.version=getPath(parent,this.versionPath);}else{res.version=this.type.decode(stream);}
if(this.versions.header){this._parseFields(stream,res,this.versions.header);}
const fields=this.versions[res.version];if(fields==null){throw new Error(`Unknown version ${res.version}`);}
if(fields instanceof _VersionedStruct){return fields.decode(stream,parent);}
this._parseFields(stream,res,fields);if(this.process!=null){this.process.call(res,stream);}
return res;}
size(val,parent,includePointers=true){let key,type;if(!val){throw new Error("Not a fixed size");}
if(this.preEncode!=null){this.preEncode.call(val);}
const ctx2={parent,val,pointerSize:0};let size4=0;if(typeof this.type!=="string"){size4+=this.type.size(val.version,ctx2);}
if(this.versions.header){for(key in this.versions.header){type=this.versions.header[key];if(type.size!=null){size4+=type.size(val[key],ctx2);}}}
const fields=this.versions[val.version];if(fields==null){throw new Error(`Unknown version ${val.version}`);}
for(key in fields){type=fields[key];if(type.size!=null){size4+=type.size(val[key],ctx2);}}
if(includePointers){size4+=ctx2.pointerSize;}
return size4;}
encode(stream,val,parent){let key,type;if(this.preEncode!=null){this.preEncode.call(val,stream);}
const ctx2={pointers:[],startOffset:stream.pos,parent,val,pointerSize:0};ctx2.pointerOffset=stream.pos+this.size(val,ctx2,false);if(typeof this.type!=="string"){this.type.encode(stream,val.version);}
if(this.versions.header){for(key in this.versions.header){type=this.versions.header[key];if(type.encode!=null){type.encode(stream,val[key],ctx2);}}}
const fields=this.versions[val.version];for(key in fields){type=fields[key];if(type.encode!=null){type.encode(stream,val[key],ctx2);}}
let i2=0;while(i2<ctx2.pointers.length){const ptr=ctx2.pointers[i2++];ptr.type.encode(stream,ptr.val,ptr.parent);}}};var Pointer=class extends Base2{constructor(offsetType,type,options={}){super();this.offsetType=offsetType;this.type=type;this.options=options;if(this.type==="void"){this.type=null;}
if(this.options.type==null){this.options.type="local";}
if(this.options.allowNull==null){this.options.allowNull=true;}
if(this.options.nullValue==null){this.options.nullValue=0;}
if(this.options.lazy==null){this.options.lazy=false;}
if(this.options.relativeTo){if(typeof this.options.relativeTo!=="function"){throw new Error("relativeTo option must be a function");}
this.relativeToGetter=options.relativeTo;}}
decode(stream,ctx2){const offset=this.offsetType.decode(stream,ctx2);if(offset===this.options.nullValue&&this.options.allowNull){return null;}
let relative;switch(this.options.type){case"local":relative=ctx2._startOffset;break;case"immediate":relative=stream.pos-this.offsetType.size();break;case"parent":relative=ctx2.parent._startOffset;break;default:var c=ctx2;while(c.parent){c=c.parent;}
relative=c._startOffset||0;}
if(this.options.relativeTo){relative+=this.relativeToGetter(ctx2);}
const ptr=offset+relative;if(this.type!=null){let val=null;const decodeValue=()=>{if(val!=null){return val;}
const{pos}=stream;stream.pos=ptr;val=this.type.decode(stream,ctx2);stream.pos=pos;return val;};if(this.options.lazy){return new PropertyDescriptor({get:decodeValue});}
return decodeValue();}else{return ptr;}}
size(val,ctx2){const parent=ctx2;switch(this.options.type){case"local":case"immediate":break;case"parent":ctx2=ctx2.parent;break;default:while(ctx2.parent){ctx2=ctx2.parent;}}
let{type}=this;if(type==null){if(!(val instanceof VoidPointer)){throw new Error("Must be a VoidPointer");}
({type}=val);val=val.value;}
if(val&&ctx2){let size4=type.size(val,parent);ctx2.pointerSize+=size4;}
return this.offsetType.size();}
encode(stream,val,ctx2){let relative;const parent=ctx2;if(val==null){this.offsetType.encode(stream,this.options.nullValue);return;}
switch(this.options.type){case"local":relative=ctx2.startOffset;break;case"immediate":relative=stream.pos+this.offsetType.size(val,parent);break;case"parent":ctx2=ctx2.parent;relative=ctx2.startOffset;break;default:relative=0;while(ctx2.parent){ctx2=ctx2.parent;}}
if(this.options.relativeTo){relative+=this.relativeToGetter(parent.val);}
this.offsetType.encode(stream,ctx2.pointerOffset-relative);let{type}=this;if(type==null){if(!(val instanceof VoidPointer)){throw new Error("Must be a VoidPointer");}
({type}=val);val=val.value;}
ctx2.pointers.push({type,val,parent});return ctx2.pointerOffset+=type.size(val,parent);}};var VoidPointer=class{constructor(type,value){this.type=type;this.value=value;}};function _define_property(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value,enumerable:true,configurable:true,writable:true});}else
obj[key]=value;return obj;}
var import_fast_deep_equal=__toESM(require_fast_deep_equal(),1);var import_base64_js=__toESM(require_base64_js(),1);var import_unicode_trie=__toESM(require_unicode_trie(),1);function $parcel$interopDefault(a){return a&&a.__esModule?a.default:a;}
var $f4087201da764553$exports={};$f4087201da764553$exports=JSON.parse('{"categories":["Cc","Zs","Po","Sc","Ps","Pe","Sm","Pd","Nd","Lu","Sk","Pc","Ll","So","Lo","Pi","Cf","No","Pf","Lt","Lm","Mn","Me","Mc","Nl","Zl","Zp","Cs","Co"],"combiningClasses":["Not_Reordered","Above","Above_Right","Below","Attached_Above_Right","Attached_Below","Overlay","Iota_Subscript","Double_Below","Double_Above","Below_Right","Above_Left","CCC10","CCC11","CCC12","CCC13","CCC14","CCC15","CCC16","CCC17","CCC18","CCC19","CCC20","CCC21","CCC22","CCC23","CCC24","CCC25","CCC30","CCC31","CCC32","CCC27","CCC28","CCC29","CCC33","CCC34","CCC35","CCC36","Nukta","Virama","CCC84","CCC91","CCC103","CCC107","CCC118","CCC122","CCC129","CCC130","CCC132","Attached_Above","Below_Left","Left","Kana_Voicing","CCC26","Right"],"scripts":["Common","Latin","Bopomofo","Inherited","Greek","Coptic","Cyrillic","Armenian","Hebrew","Arabic","Syriac","Thaana","Nko","Samaritan","Mandaic","Devanagari","Bengali","Gurmukhi","Gujarati","Oriya","Tamil","Telugu","Kannada","Malayalam","Sinhala","Thai","Lao","Tibetan","Myanmar","Georgian","Hangul","Ethiopic","Cherokee","Canadian_Aboriginal","Ogham","Runic","Tagalog","Hanunoo","Buhid","Tagbanwa","Khmer","Mongolian","Limbu","Tai_Le","New_Tai_Lue","Buginese","Tai_Tham","Balinese","Sundanese","Batak","Lepcha","Ol_Chiki","Braille","Glagolitic","Tifinagh","Han","Hiragana","Katakana","Yi","Lisu","Vai","Bamum","Syloti_Nagri","Phags_Pa","Saurashtra","Kayah_Li","Rejang","Javanese","Cham","Tai_Viet","Meetei_Mayek","null","Linear_B","Lycian","Carian","Old_Italic","Gothic","Old_Permic","Ugaritic","Old_Persian","Deseret","Shavian","Osmanya","Osage","Elbasan","Caucasian_Albanian","Linear_A","Cypriot","Imperial_Aramaic","Palmyrene","Nabataean","Hatran","Phoenician","Lydian","Meroitic_Hieroglyphs","Meroitic_Cursive","Kharoshthi","Old_South_Arabian","Old_North_Arabian","Manichaean","Avestan","Inscriptional_Parthian","Inscriptional_Pahlavi","Psalter_Pahlavi","Old_Turkic","Old_Hungarian","Hanifi_Rohingya","Old_Sogdian","Sogdian","Elymaic","Brahmi","Kaithi","Sora_Sompeng","Chakma","Mahajani","Sharada","Khojki","Multani","Khudawadi","Grantha","Newa","Tirhuta","Siddham","Modi","Takri","Ahom","Dogra","Warang_Citi","Nandinagari","Zanabazar_Square","Soyombo","Pau_Cin_Hau","Bhaiksuki","Marchen","Masaram_Gondi","Gunjala_Gondi","Makasar","Cuneiform","Egyptian_Hieroglyphs","Anatolian_Hieroglyphs","Mro","Bassa_Vah","Pahawh_Hmong","Medefaidrin","Miao","Tangut","Nushu","Duployan","SignWriting","Nyiakeng_Puachue_Hmong","Wancho","Mende_Kikakui","Adlam"],"eaw":["N","Na","A","W","H","F"]}');var $747425b437e121da$var$trie=new(0,import_unicode_trie.default)((0,import_base64_js.default).toByteArray(""));var $747425b437e121da$var$log2=Math.log2||((n2)=>Math.log(n2)/Math.LN2);var $747425b437e121da$var$bits=(n2)=>$747425b437e121da$var$log2(n2)+1|0;var $747425b437e121da$var$CATEGORY_BITS=$747425b437e121da$var$bits((0,$parcel$interopDefault($f4087201da764553$exports)).categories.length-1);var $747425b437e121da$var$COMBINING_BITS=$747425b437e121da$var$bits((0,$parcel$interopDefault($f4087201da764553$exports)).combiningClasses.length-1);var $747425b437e121da$var$SCRIPT_BITS=$747425b437e121da$var$bits((0,$parcel$interopDefault($f4087201da764553$exports)).scripts.length-1);var $747425b437e121da$var$EAW_BITS=$747425b437e121da$var$bits((0,$parcel$interopDefault($f4087201da764553$exports)).eaw.length-1);var $747425b437e121da$var$NUMBER_BITS=10;var $747425b437e121da$var$CATEGORY_SHIFT=$747425b437e121da$var$COMBINING_BITS+$747425b437e121da$var$SCRIPT_BITS+$747425b437e121da$var$EAW_BITS+$747425b437e121da$var$NUMBER_BITS;var $747425b437e121da$var$COMBINING_SHIFT=$747425b437e121da$var$SCRIPT_BITS+$747425b437e121da$var$EAW_BITS+$747425b437e121da$var$NUMBER_BITS;var $747425b437e121da$var$SCRIPT_SHIFT=$747425b437e121da$var$EAW_BITS+$747425b437e121da$var$NUMBER_BITS;var $747425b437e121da$var$CATEGORY_MASK=(1<<$747425b437e121da$var$CATEGORY_BITS)-1;var $747425b437e121da$var$COMBINING_MASK=(1<<$747425b437e121da$var$COMBINING_BITS)-1;var $747425b437e121da$var$SCRIPT_MASK=(1<<$747425b437e121da$var$SCRIPT_BITS)-1;var $747425b437e121da$var$EAW_MASK=(1<<$747425b437e121da$var$EAW_BITS)-1;var $747425b437e121da$var$NUMBER_MASK=(1<<$747425b437e121da$var$NUMBER_BITS)-1;function $747425b437e121da$export$410364bbb673ddbc(codePoint){const val=$747425b437e121da$var$trie.get(codePoint);return(0,$parcel$interopDefault($f4087201da764553$exports)).categories[val>>$747425b437e121da$var$CATEGORY_SHIFT&$747425b437e121da$var$CATEGORY_MASK];}
function $747425b437e121da$export$c03b919c6651ed55(codePoint){const val=$747425b437e121da$var$trie.get(codePoint);return(0,$parcel$interopDefault($f4087201da764553$exports)).combiningClasses[val>>$747425b437e121da$var$COMBINING_SHIFT&$747425b437e121da$var$COMBINING_MASK];}
function $747425b437e121da$export$941569448d136665(codePoint){const val=$747425b437e121da$var$trie.get(codePoint);return(0,$parcel$interopDefault($f4087201da764553$exports)).scripts[val>>$747425b437e121da$var$SCRIPT_SHIFT&$747425b437e121da$var$SCRIPT_MASK];}
function $747425b437e121da$export$727d9dbc4fbb948f(codePoint){return $747425b437e121da$export$410364bbb673ddbc(codePoint)==="Nd";}
function $747425b437e121da$export$e33ad6871e762338(codePoint){const category=$747425b437e121da$export$410364bbb673ddbc(codePoint);return category==="Mn"||category==="Me"||category==="Mc";}
var import_unicode_trie2=__toESM(require_unicode_trie(),1);var import_dfa=__toESM(require_dfa(),1);var import_clone2=__toESM(require_clone(),1);var import_tiny_inflate=__toESM(require_tiny_inflate(),1);var import_decompress=__toESM(require_decompress(),1);function $parcel$export(e,n2,v,s){Object.defineProperty(e,n2,{get:v,set:s,enumerable:true,configurable:true});}
function $parcel$interopDefault2(a){return a&&a.__esModule?a.default:a;}
var $d636bc798e7178db$exports={};$parcel$export($d636bc798e7178db$exports,"logErrors",()=>$d636bc798e7178db$export$bd5c5d8b8dcafd78);$parcel$export($d636bc798e7178db$exports,"registerFormat",()=>$d636bc798e7178db$export$36b2f24e97d43be);$parcel$export($d636bc798e7178db$exports,"create",()=>$d636bc798e7178db$export$185802fd694ee1f5);$parcel$export($d636bc798e7178db$exports,"defaultLanguage",()=>$d636bc798e7178db$export$42940898df819940);$parcel$export($d636bc798e7178db$exports,"setDefaultLanguage",()=>$d636bc798e7178db$export$5157e7780d44cc36);var $d636bc798e7178db$export$bd5c5d8b8dcafd78=false;var $d636bc798e7178db$var$formats=[];function $d636bc798e7178db$export$36b2f24e97d43be(format){$d636bc798e7178db$var$formats.push(format);}
function $d636bc798e7178db$export$185802fd694ee1f5(buffer,postscriptName){for(let i2=0;i2<$d636bc798e7178db$var$formats.length;i2++){let format=$d636bc798e7178db$var$formats[i2];if(format.probe(buffer)){let font=new format(new(0,DecodeStream)(buffer));if(postscriptName)
return font.getFont(postscriptName);return font;}}
throw new Error("Unknown font format");}
var $d636bc798e7178db$export$42940898df819940="en";function $d636bc798e7178db$export$5157e7780d44cc36(lang="en"){$d636bc798e7178db$export$42940898df819940=lang;}
function $e71565f2ce09cb6b$export$69a3209f1a06c04d(target,key1,descriptor){if(descriptor.get){let get3=descriptor.get;descriptor.get=function(){let value=get3.call(this);Object.defineProperty(this,key1,{value});return value;};}else if(typeof descriptor.value==="function"){let fn=descriptor.value;return{get(){let cache1=new Map();function memoized(...args){let key=args.length>0?args[0]:"value";if(cache1.has(key))
return cache1.get(key);let result=fn.apply(this,args);cache1.set(key,result);return result;}
Object.defineProperty(this,key1,{value:memoized});return memoized;}};}}
var $26a62205ad06574e$var$SubHeader=new Struct({firstCode:uint16,entryCount:uint16,idDelta:int16,idRangeOffset:uint16});var $26a62205ad06574e$var$CmapGroup=new Struct({startCharCode:uint32,endCharCode:uint32,glyphID:uint32});var $26a62205ad06574e$var$UnicodeValueRange=new Struct({startUnicodeValue:uint24,additionalCount:uint8});var $26a62205ad06574e$var$UVSMapping=new Struct({unicodeValue:uint24,glyphID:uint16});var $26a62205ad06574e$var$DefaultUVS=new ArrayT($26a62205ad06574e$var$UnicodeValueRange,uint32);var $26a62205ad06574e$var$NonDefaultUVS=new ArrayT($26a62205ad06574e$var$UVSMapping,uint32);var $26a62205ad06574e$var$VarSelectorRecord=new Struct({varSelector:uint24,defaultUVS:new Pointer(uint32,$26a62205ad06574e$var$DefaultUVS,{type:"parent"}),nonDefaultUVS:new Pointer(uint32,$26a62205ad06574e$var$NonDefaultUVS,{type:"parent"})});var $26a62205ad06574e$var$CmapSubtable=new VersionedStruct(uint16,{0:{length:uint16,language:uint16,codeMap:new LazyArray(uint8,256)},2:{length:uint16,language:uint16,subHeaderKeys:new ArrayT(uint16,256),subHeaderCount:(t)=>Math.max.apply(Math,t.subHeaderKeys),subHeaders:new LazyArray($26a62205ad06574e$var$SubHeader,"subHeaderCount"),glyphIndexArray:new LazyArray(uint16,"subHeaderCount")},4:{length:uint16,language:uint16,segCountX2:uint16,segCount:(t)=>t.segCountX2>>1,searchRange:uint16,entrySelector:uint16,rangeShift:uint16,endCode:new LazyArray(uint16,"segCount"),reservedPad:new Reserved(uint16),startCode:new LazyArray(uint16,"segCount"),idDelta:new LazyArray(int16,"segCount"),idRangeOffset:new LazyArray(uint16,"segCount"),glyphIndexArray:new LazyArray(uint16,(t)=>(t.length-t._currentOffset)/2)},6:{length:uint16,language:uint16,firstCode:uint16,entryCount:uint16,glyphIndices:new LazyArray(uint16,"entryCount")},8:{reserved:new Reserved(uint16),length:uint32,language:uint16,is32:new LazyArray(uint8,8192),nGroups:uint32,groups:new LazyArray($26a62205ad06574e$var$CmapGroup,"nGroups")},10:{reserved:new Reserved(uint16),length:uint32,language:uint32,firstCode:uint32,entryCount:uint32,glyphIndices:new LazyArray(uint16,"numChars")},12:{reserved:new Reserved(uint16),length:uint32,language:uint32,nGroups:uint32,groups:new LazyArray($26a62205ad06574e$var$CmapGroup,"nGroups")},13:{reserved:new Reserved(uint16),length:uint32,language:uint32,nGroups:uint32,groups:new LazyArray($26a62205ad06574e$var$CmapGroup,"nGroups")},14:{length:uint32,numRecords:uint32,varSelectors:new LazyArray($26a62205ad06574e$var$VarSelectorRecord,"numRecords")}});var $26a62205ad06574e$var$CmapEntry=new Struct({platformID:uint16,encodingID:uint16,table:new Pointer(uint32,$26a62205ad06574e$var$CmapSubtable,{type:"parent",lazy:true})});var $26a62205ad06574e$export$2e2bcd8739ae039=new Struct({version:uint16,numSubtables:uint16,tables:new ArrayT($26a62205ad06574e$var$CmapEntry,"numSubtables")});var $f2612a29f92ac062$export$2e2bcd8739ae039=new Struct({version:int32,revision:int32,checkSumAdjustment:uint32,magicNumber:uint32,flags:uint16,unitsPerEm:uint16,created:new ArrayT(int32,2),modified:new ArrayT(int32,2),xMin:int16,yMin:int16,xMax:int16,yMax:int16,macStyle:new Bitfield(uint16,["bold","italic","underline","outline","shadow","condensed","extended"]),lowestRecPPEM:uint16,fontDirectionHint:int16,indexToLocFormat:int16,glyphDataFormat:int16
});var $2c179dd593583073$export$2e2bcd8739ae039=new Struct({version:int32,ascent:int16,descent:int16,lineGap:int16,advanceWidthMax:uint16,minLeftSideBearing:int16,minRightSideBearing:int16,xMaxExtent:int16,caretSlopeRise:int16,caretSlopeRun:int16,caretOffset:int16,reserved:new Reserved(int16,4),metricDataFormat:int16,numberOfMetrics:uint16
});var $bdc9060542264b85$var$HmtxEntry=new Struct({advance:uint16,bearing:int16});var $bdc9060542264b85$export$2e2bcd8739ae039=new Struct({metrics:new LazyArray($bdc9060542264b85$var$HmtxEntry,(t)=>t.parent.hhea.numberOfMetrics),bearings:new LazyArray(int16,(t)=>t.parent.maxp.numGlyphs-t.parent.hhea.numberOfMetrics)});var $dbf51cb3d3fe409d$export$2e2bcd8739ae039=new Struct({version:int32,numGlyphs:uint16,maxPoints:uint16,maxContours:uint16,maxComponentPoints:uint16,maxComponentContours:uint16,maxZones:uint16,maxTwilightPoints:uint16,maxStorage:uint16,maxFunctionDefs:uint16,maxInstructionDefs:uint16,maxStackElements:uint16,maxSizeOfInstructions:uint16,maxComponentElements:uint16,maxComponentDepth:uint16
});function $e449ad78d50845fe$export$badc544e0651b6b1(platformID,encodingID,languageID=0){if(platformID===1&&$e449ad78d50845fe$export$479e671907f486d1[languageID])
return $e449ad78d50845fe$export$479e671907f486d1[languageID];return $e449ad78d50845fe$export$6fef87b7618bdf0b[platformID][encodingID];}
var $e449ad78d50845fe$var$SINGLE_BYTE_ENCODINGS=new Set(["x-mac-roman","x-mac-cyrillic","iso-8859-6","iso-8859-8"]);var $e449ad78d50845fe$var$MAC_ENCODINGS={"x-mac-croatian":"\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\u0160\u2122\xB4\xA8\u2260\u017D\xD8\u221E\xB1\u2264\u2265\u2206\xB5\u2202\u2211\u220F\u0161\u222B\xAA\xBA\u03A9\u017E\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u0106\xAB\u010C\u2026 \xC0\xC3\xD5\u0152\u0153\u0110\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\uF8FF\xA9\u2044\u20AC\u2039\u203A\xC6\xBB\u2013\xB7\u201A\u201E\u2030\xC2\u0107\xC1\u010D\xC8\xCD\xCE\xCF\xCC\xD3\xD4\u0111\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u03C0\xCB\u02DA\xB8\xCA\xE6\u02C7","x-mac-gaelic":"\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u1E02\xB1\u2264\u2265\u1E03\u010A\u010B\u1E0A\u1E0B\u1E1E\u1E1F\u0120\u0121\u1E40\xE6\xF8\u1E41\u1E56\u1E57\u027C\u0192\u017F\u1E60\xAB\xBB\u2026 \xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u1E61\u1E9B\xFF\u0178\u1E6A\u20AC\u2039\u203A\u0176\u0177\u1E6B\xB7\u1EF2\u1EF3\u204A\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\u2663\xD2\xDA\xDB\xD9\u0131\xDD\xFD\u0174\u0175\u1E84\u1E85\u1E80\u1E81\u1E82\u1E83","x-mac-greek":"\xC4\xB9\xB2\xC9\xB3\xD6\xDC\u0385\xE0\xE2\xE4\u0384\xA8\xE7\xE9\xE8\xEA\xEB\xA3\u2122\xEE\xEF\u2022\xBD\u2030\xF4\xF6\xA6\u20AC\xF9\xFB\xFC\u2020\u0393\u0394\u0398\u039B\u039E\u03A0\xDF\xAE\xA9\u03A3\u03AA\xA7\u2260\xB0\xB7\u0391\xB1\u2264\u2265\xA5\u0392\u0395\u0396\u0397\u0399\u039A\u039C\u03A6\u03AB\u03A8\u03A9\u03AC\u039D\xAC\u039F\u03A1\u2248\u03A4\xAB\xBB\u2026 \u03A5\u03A7\u0386\u0388\u0153\u2013\u2015\u201C\u201D\u2018\u2019\xF7\u0389\u038A\u038C\u038E\u03AD\u03AE\u03AF\u03CC\u038F\u03CD\u03B1\u03B2\u03C8\u03B4\u03B5\u03C6\u03B3\u03B7\u03B9\u03BE\u03BA\u03BB\u03BC\u03BD\u03BF\u03C0\u03CE\u03C1\u03C3\u03C4\u03B8\u03C9\u03C2\u03C7\u03C5\u03B6\u03CA\u03CB\u0390\u03B0\xAD","x-mac-icelandic":"\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\xDD\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026 \xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\u20AC\xD0\xF0\xDE\xFE\xFD\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7","x-mac-inuit":"\u1403\u1404\u1405\u1406\u140A\u140B\u1431\u1432\u1433\u1434\u1438\u1439\u1449\u144E\u144F\u1450\u1451\u1455\u1456\u1466\u146D\u146E\u146F\u1470\u1472\u1473\u1483\u148B\u148C\u148D\u148E\u1490\u1491\xB0\u14A1\u14A5\u14A6\u2022\xB6\u14A7\xAE\xA9\u2122\u14A8\u14AA\u14AB\u14BB\u14C2\u14C3\u14C4\u14C5\u14C7\u14C8\u14D0\u14EF\u14F0\u14F1\u14F2\u14F4\u14F5\u1505\u14D5\u14D6\u14D7\u14D8\u14DA\u14DB\u14EA\u1528\u1529\u152A\u152B\u152D\u2026 \u152E\u153E\u1555\u1556\u1557\u2013\u2014\u201C\u201D\u2018\u2019\u1558\u1559\u155A\u155D\u1546\u1547\u1548\u1549\u154B\u154C\u1550\u157F\u1580\u1581\u1582\u1583\u1584\u1585\u158F\u1590\u1591\u1592\u1593\u1594\u1595\u1671\u1672\u1673\u1674\u1675\u1676\u1596\u15A0\u15A1\u15A2\u15A3\u15A4\u15A5\u15A6\u157C\u0141\u0142","x-mac-ce":"\xC4\u0100\u0101\xC9\u0104\xD6\xDC\xE1\u0105\u010C\xE4\u010D\u0106\u0107\xE9\u0179\u017A\u010E\xED\u010F\u0112\u0113\u0116\xF3\u0117\xF4\xF6\xF5\xFA\u011A\u011B\xFC\u2020\xB0\u0118\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\u0119\xA8\u2260\u0123\u012E\u012F\u012A\u2264\u2265\u012B\u0136\u2202\u2211\u0142\u013B\u013C\u013D\u013E\u0139\u013A\u0145\u0146\u0143\xAC\u221A\u0144\u0147\u2206\xAB\xBB\u2026 \u0148\u0150\xD5\u0151\u014C\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\u014D\u0154\u0155\u0158\u2039\u203A\u0159\u0156\u0157\u0160\u201A\u201E\u0161\u015A\u015B\xC1\u0164\u0165\xCD\u017D\u017E\u016A\xD3\xD4\u016B\u016E\xDA\u016F\u0170\u0171\u0172\u0173\xDD\xFD\u0137\u017B\u0141\u017C\u0122\u02C7","x-mac-romanian":"\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\u0102\u0218\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\u0103\u0219\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026 \xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\u20AC\u2039\u203A\u021A\u021B\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7","x-mac-turkish":"\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026 \xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u011E\u011F\u0130\u0131\u015E\u015F\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\uF8A0\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7"};var $e449ad78d50845fe$var$encodingCache=new Map();function $e449ad78d50845fe$export$1dceb3c14ed68bee(encoding){let cached=$e449ad78d50845fe$var$encodingCache.get(encoding);if(cached)
return cached;let mapping=$e449ad78d50845fe$var$MAC_ENCODINGS[encoding];if(mapping){let res=new Map();for(let i2=0;i2<mapping.length;i2++)
res.set(mapping.charCodeAt(i2),128+i2);$e449ad78d50845fe$var$encodingCache.set(encoding,res);return res;}
if($e449ad78d50845fe$var$SINGLE_BYTE_ENCODINGS.has(encoding)){let decoder=new TextDecoder(encoding);let mapping2=new Uint8Array(128);for(let i2=0;i2<128;i2++)
mapping2[i2]=128+i2;let res=new Map();let s=decoder.decode(mapping2);for(let i1=0;i1<128;i1++)
res.set(s.charCodeAt(i1),128+i1);$e449ad78d50845fe$var$encodingCache.set(encoding,res);return res;}}
var $e449ad78d50845fe$export$6fef87b7618bdf0b=[["utf16be","utf16be","utf16be","utf16be","utf16be","utf16be"],["x-mac-roman","shift-jis","big5","euc-kr","iso-8859-6","iso-8859-8","x-mac-greek","x-mac-cyrillic","x-mac-symbol","x-mac-devanagari","x-mac-gurmukhi","x-mac-gujarati","Oriya","Bengali","Tamil","Telugu","Kannada","Malayalam","Sinhalese","Burmese","Khmer","iso-8859-11","Laotian","Georgian","Armenian","hz-gb-2312","Tibetan","Mongolian","Geez","x-mac-ce","Vietnamese","Sindhi"],["ascii"],["symbol","utf16be","shift-jis","gb18030","big5","x-cp20949","johab",null,null,null,"utf16be"]];var $e449ad78d50845fe$export$479e671907f486d1={15:"x-mac-icelandic",17:"x-mac-turkish",18:"x-mac-croatian",24:"x-mac-ce",25:"x-mac-ce",26:"x-mac-ce",27:"x-mac-ce",28:"x-mac-ce",30:"x-mac-icelandic",37:"x-mac-romanian",38:"x-mac-ce",39:"x-mac-ce",40:"x-mac-ce",143:"x-mac-inuit",146:"x-mac-gaelic"};var $e449ad78d50845fe$export$2092376fd002e13=[[],{0:"en",30:"fo",60:"ks",90:"rw",1:"fr",31:"fa",61:"ku",91:"rn",2:"de",32:"ru",62:"sd",92:"ny",3:"it",33:"zh",63:"bo",93:"mg",4:"nl",34:"nl-BE",64:"ne",94:"eo",5:"sv",35:"ga",65:"sa",128:"cy",6:"es",36:"sq",66:"mr",129:"eu",7:"da",37:"ro",67:"bn",130:"ca",8:"pt",38:"cz",68:"as",131:"la",9:"no",39:"sk",69:"gu",132:"qu",10:"he",40:"si",70:"pa",133:"gn",11:"ja",41:"yi",71:"or",134:"ay",12:"ar",42:"sr",72:"ml",135:"tt",13:"fi",43:"mk",73:"kn",136:"ug",14:"el",44:"bg",74:"ta",137:"dz",15:"is",45:"uk",75:"te",138:"jv",16:"mt",46:"be",76:"si",139:"su",17:"tr",47:"uz",77:"my",140:"gl",18:"hr",48:"kk",78:"km",141:"af",19:"zh-Hant",49:"az-Cyrl",79:"lo",142:"br",20:"ur",50:"az-Arab",80:"vi",143:"iu",21:"hi",51:"hy",81:"id",144:"gd",22:"th",52:"ka",82:"tl",145:"gv",23:"ko",53:"mo",83:"ms",146:"ga",24:"lt",54:"ky",84:"ms-Arab",147:"to",25:"pl",55:"tg",85:"am",148:"el-polyton",26:"hu",56:"tk",86:"ti",149:"kl",27:"es",57:"mn-CN",87:"om",150:"az",28:"lv",58:"mn",88:"so",151:"nn",29:"se",59:"ps",89:"sw"},[],{1078:"af",16393:"en-IN",1159:"rw",1074:"tn",1052:"sq",6153:"en-IE",1089:"sw",1115:"si",1156:"gsw",8201:"en-JM",1111:"kok",1051:"sk",1118:"am",17417:"en-MY",1042:"ko",1060:"sl",5121:"ar-DZ",5129:"en-NZ",1088:"ky",11274:"es-AR",15361:"ar-BH",13321:"en-PH",1108:"lo",16394:"es-BO",3073:"ar",18441:"en-SG",1062:"lv",13322:"es-CL",2049:"ar-IQ",7177:"en-ZA",1063:"lt",9226:"es-CO",11265:"ar-JO",11273:"en-TT",2094:"dsb",5130:"es-CR",13313:"ar-KW",2057:"en-GB",1134:"lb",7178:"es-DO",12289:"ar-LB",1033:"en",1071:"mk",12298:"es-EC",4097:"ar-LY",12297:"en-ZW",2110:"ms-BN",17418:"es-SV",6145:"ary",1061:"et",1086:"ms",4106:"es-GT",8193:"ar-OM",1080:"fo",1100:"ml",18442:"es-HN",16385:"ar-QA",1124:"fil",1082:"mt",2058:"es-MX",1025:"ar-SA",1035:"fi",1153:"mi",19466:"es-NI",10241:"ar-SY",2060:"fr-BE",1146:"arn",6154:"es-PA",7169:"aeb",3084:"fr-CA",1102:"mr",15370:"es-PY",14337:"ar-AE",1036:"fr",1148:"moh",10250:"es-PE",9217:"ar-YE",5132:"fr-LU",1104:"mn",20490:"es-PR",1067:"hy",6156:"fr-MC",2128:"mn-CN",3082:"es",1101:"as",4108:"fr-CH",1121:"ne",1034:"es",2092:"az-Cyrl",1122:"fy",1044:"nb",21514:"es-US",1068:"az",1110:"gl",2068:"nn",14346:"es-UY",1133:"ba",1079:"ka",1154:"oc",8202:"es-VE",1069:"eu",3079:"de-AT",1096:"or",2077:"sv-FI",1059:"be",1031:"de",1123:"ps",1053:"sv",2117:"bn",5127:"de-LI",1045:"pl",1114:"syr",1093:"bn-IN",4103:"de-LU",1046:"pt",1064:"tg",8218:"bs-Cyrl",2055:"de-CH",2070:"pt-PT",2143:"tzm",5146:"bs",1032:"el",1094:"pa",1097:"ta",1150:"br",1135:"kl",1131:"qu-BO",1092:"tt",1026:"bg",1095:"gu",2155:"qu-EC",1098:"te",1027:"ca",1128:"ha",3179:"qu",1054:"th",3076:"zh-HK",1037:"he",1048:"ro",1105:"bo",5124:"zh-MO",1081:"hi",1047:"rm",1055:"tr",2052:"zh",1038:"hu",1049:"ru",1090:"tk",4100:"zh-SG",1039:"is",9275:"smn",1152:"ug",1028:"zh-TW",1136:"ig",4155:"smj-NO",1058:"uk",1155:"co",1057:"id",5179:"smj",1070:"hsb",1050:"hr",1117:"iu",3131:"se-FI",1056:"ur",4122:"hr-BA",2141:"iu-Latn",1083:"se",2115:"uz-Cyrl",1029:"cs",2108:"ga",2107:"se-SE",1091:"uz",1030:"da",1076:"xh",8251:"sms",1066:"vi",1164:"prs",1077:"zu",6203:"sma-NO",1106:"cy",1125:"dv",1040:"it",7227:"sms",1160:"wo",2067:"nl-BE",2064:"it-CH",1103:"sa",1157:"sah",1043:"nl",1041:"ja",7194:"sr-Cyrl-BA",1144:"ii",3081:"en-AU",1099:"kn",3098:"sr",1130:"yo",10249:"en-BZ",1087:"kk",6170:"sr-Latn-BA",4105:"en-CA",1107:"km",2074:"sr-Latn",9225:"en-029",1158:"quc",1132:"nso"}];var $2bcf221753ec8e32$var$NameRecord=new Struct({platformID:uint16,encodingID:uint16,languageID:uint16,nameID:uint16,length:uint16,string:new Pointer(uint16,new StringT("length",(t)=>(0,$e449ad78d50845fe$export$badc544e0651b6b1)(t.platformID,t.encodingID,t.languageID)),{type:"parent",relativeTo:(ctx2)=>ctx2.parent.stringOffset,allowNull:false})});var $2bcf221753ec8e32$var$LangTagRecord=new Struct({length:uint16,tag:new Pointer(uint16,new StringT("length","utf16be"),{type:"parent",relativeTo:(ctx2)=>ctx2.stringOffset})});var $2bcf221753ec8e32$var$NameTable=new VersionedStruct(uint16,{0:{count:uint16,stringOffset:uint16,records:new ArrayT($2bcf221753ec8e32$var$NameRecord,"count")},1:{count:uint16,stringOffset:uint16,records:new ArrayT($2bcf221753ec8e32$var$NameRecord,"count"),langTagCount:uint16,langTags:new ArrayT($2bcf221753ec8e32$var$LangTagRecord,"langTagCount")}});var $2bcf221753ec8e32$export$2e2bcd8739ae039=$2bcf221753ec8e32$var$NameTable;var $2bcf221753ec8e32$var$NAMES=["copyright","fontFamily","fontSubfamily","uniqueSubfamily","fullName","version","postscriptName","trademark","manufacturer","designer","description","vendorURL","designerURL","license","licenseURL",null,"preferredFamily","preferredSubfamily","compatibleFull","sampleText","postscriptCIDFontName","wwsFamilyName","wwsSubfamilyName"];$2bcf221753ec8e32$var$NameTable.process=function(stream){var records={};for(let record of this.records){let language=(0,$e449ad78d50845fe$export$2092376fd002e13)[record.platformID][record.languageID];if(language==null&&this.langTags!=null&&record.languageID>=32768)
language=this.langTags[record.languageID-32768].tag;if(language==null)
language=record.platformID+"-"+record.languageID;let key=record.nameID>=256?"fontFeatures":$2bcf221753ec8e32$var$NAMES[record.nameID]||record.nameID;if(records[key]==null)
records[key]={};let obj=records[key];if(record.nameID>=256)
obj=obj[record.nameID]||(obj[record.nameID]={});if(typeof record.string==="string"||typeof obj[language]!=="string")
obj[language]=record.string;}
this.records=records;};$2bcf221753ec8e32$var$NameTable.preEncode=function(){if(Array.isArray(this.records))
return;this.version=0;let records=[];for(let key in this.records){let val=this.records[key];if(key==="fontFeatures")
continue;records.push({platformID:3,encodingID:1,languageID:1033,nameID:$2bcf221753ec8e32$var$NAMES.indexOf(key),length:val.en.length*2,string:val.en});if(key==="postscriptName")
records.push({platformID:1,encodingID:0,languageID:0,nameID:$2bcf221753ec8e32$var$NAMES.indexOf(key),length:val.en.length,string:val.en});}
this.records=records;this.count=records.length;this.stringOffset=$2bcf221753ec8e32$var$NameTable.size(this,null,false);};var $84b272aa31b70606$var$OS2=new VersionedStruct(uint16,{header:{xAvgCharWidth:int16,usWeightClass:uint16,usWidthClass:uint16,fsType:new Bitfield(uint16,[null,"noEmbedding","viewOnly","editable",null,null,null,null,"noSubsetting","bitmapOnly"]),ySubscriptXSize:int16,ySubscriptYSize:int16,ySubscriptXOffset:int16,ySubscriptYOffset:int16,ySuperscriptXSize:int16,ySuperscriptYSize:int16,ySuperscriptXOffset:int16,ySuperscriptYOffset:int16,yStrikeoutSize:int16,yStrikeoutPosition:int16,sFamilyClass:int16,panose:new ArrayT(uint8,10),ulCharRange:new ArrayT(uint32,4),vendorID:new StringT(4),fsSelection:new Bitfield(uint16,["italic","underscore","negative","outlined","strikeout","bold","regular","useTypoMetrics","wws","oblique"]),usFirstCharIndex:uint16,usLastCharIndex:uint16
},0:{},1:{typoAscender:int16,typoDescender:int16,typoLineGap:int16,winAscent:uint16,winDescent:uint16,codePageRange:new ArrayT(uint32,2)},2:{typoAscender:int16,typoDescender:int16,typoLineGap:int16,winAscent:uint16,winDescent:uint16,codePageRange:new ArrayT(uint32,2),xHeight:int16,capHeight:int16,defaultChar:uint16,breakChar:uint16,maxContent:uint16},5:{typoAscender:int16,typoDescender:int16,typoLineGap:int16,winAscent:uint16,winDescent:uint16,codePageRange:new ArrayT(uint32,2),xHeight:int16,capHeight:int16,defaultChar:uint16,breakChar:uint16,maxContent:uint16,usLowerOpticalPointSize:uint16,usUpperOpticalPointSize:uint16}});var $84b272aa31b70606$var$versions=$84b272aa31b70606$var$OS2.versions;$84b272aa31b70606$var$versions[3]=$84b272aa31b70606$var$versions[4]=$84b272aa31b70606$var$versions[2];var $84b272aa31b70606$export$2e2bcd8739ae039=$84b272aa31b70606$var$OS2;var $32d9e2eb9565d93c$export$2e2bcd8739ae039=new VersionedStruct(fixed32,{header:{italicAngle:fixed32,underlinePosition:int16,underlineThickness:int16,isFixedPitch:uint32,minMemType42:uint32,maxMemType42:uint32,minMemType1:uint32,maxMemType1:uint32
},1:{},2:{numberOfGlyphs:uint16,glyphNameIndex:new ArrayT(uint16,"numberOfGlyphs"),names:new ArrayT(new StringT(uint8))},2.5:{numberOfGlyphs:uint16,offsets:new ArrayT(uint8,"numberOfGlyphs")},3:{},4:{map:new ArrayT(uint32,(t)=>t.parent.maxp.numGlyphs)}});var $5202bd9d9ad8eaac$export$2e2bcd8739ae039=new Struct({controlValues:new ArrayT(int16)});var $5c0f37ca5ffb1850$export$2e2bcd8739ae039=new Struct({instructions:new ArrayT(uint8)});var $2b2b260902b1c57e$var$loca=new VersionedStruct("head.indexToLocFormat",{0:{offsets:new ArrayT(uint16)},1:{offsets:new ArrayT(uint32)}});$2b2b260902b1c57e$var$loca.process=function(){if(this.version===0&&!this._processed){for(let i2=0;i2<this.offsets.length;i2++)
this.offsets[i2]<<=1;this._processed=true;}};$2b2b260902b1c57e$var$loca.preEncode=function(){if(this.version===0&&this._processed!==false){for(let i2=0;i2<this.offsets.length;i2++)
this.offsets[i2]>>>=1;this._processed=false;}};var $2b2b260902b1c57e$export$2e2bcd8739ae039=$2b2b260902b1c57e$var$loca;var $7afb878c7bea4f66$export$2e2bcd8739ae039=new Struct({controlValueProgram:new ArrayT(uint8)});var $6c92b6371bce8bd9$export$2e2bcd8739ae039=new ArrayT(new BufferT());var $43e9821ef3717eec$export$2e2bcd8739ae039=class{getCFFVersion(ctx2){while(ctx2&&!ctx2.hdrSize)
ctx2=ctx2.parent;return ctx2?ctx2.version:-1;}
decode(stream,parent){let version=this.getCFFVersion(parent);let count=version>=2?stream.readUInt32BE():stream.readUInt16BE();if(count===0)
return[];let offSize=stream.readUInt8();let offsetType;if(offSize===1)
offsetType=uint8;else if(offSize===2)
offsetType=uint16;else if(offSize===3)
offsetType=uint24;else if(offSize===4)
offsetType=uint32;else
throw new Error(`Bad offset size in CFFIndex:${offSize}${stream.pos}`);let ret=[];let startPos=stream.pos+(count+1)*offSize-1;let start=offsetType.decode(stream);for(let i2=0;i2<count;i2++){let end=offsetType.decode(stream);if(this.type!=null){let pos=stream.pos;stream.pos=startPos+start;parent.length=end-start;ret.push(this.type.decode(stream,parent));stream.pos=pos;}else
ret.push({offset:startPos+start,length:end-start});start=end;}
stream.pos=startPos+start;return ret;}
size(arr2,parent){let size4=2;if(arr2.length===0)
return size4;let type=this.type||new BufferT();let offset=1;for(let i2=0;i2<arr2.length;i2++){let item=arr2[i2];offset+=type.size(item,parent);}
let offsetType;if(offset<=255)
offsetType=uint8;else if(offset<=65535)
offsetType=uint16;else if(offset<=16777215)
offsetType=uint24;else if(offset<=4294967295)
offsetType=uint32;else
throw new Error("Bad offset in CFFIndex");size4+=1+offsetType.size()*(arr2.length+1);size4+=offset-1;return size4;}
encode(stream,arr2,parent){stream.writeUInt16BE(arr2.length);if(arr2.length===0)
return;let type=this.type||new BufferT();let sizes=[];let offset=1;for(let item of arr2){let s=type.size(item,parent);sizes.push(s);offset+=s;}
let offsetType;if(offset<=255)
offsetType=uint8;else if(offset<=65535)
offsetType=uint16;else if(offset<=16777215)
offsetType=uint24;else if(offset<=4294967295)
offsetType=uint32;else
throw new Error("Bad offset in CFFIndex");stream.writeUInt8(offsetType.size());offset=1;offsetType.encode(stream,offset);for(let size4 of sizes){offset+=size4;offsetType.encode(stream,offset);}
for(let item1 of arr2)
type.encode(stream,item1,parent);return;}
constructor(type){this.type=type;}};var $c2d28e92708f99da$var$FLOAT_EOF=15;var $c2d28e92708f99da$var$FLOAT_LOOKUP=["0","1","2","3","4","5","6","7","8","9",".","E","E-",null,"-"];var $c2d28e92708f99da$var$FLOAT_ENCODE_LOOKUP={".":10,"E":11,"E-":12,"-":14};var $c2d28e92708f99da$export$2e2bcd8739ae039=class{static decode(stream,value){if(32<=value&&value<=246)
return value-139;if(247<=value&&value<=250)
return(value-247)*256+stream.readUInt8()+108;if(251<=value&&value<=254)
return-(value-251)*256-stream.readUInt8()-108;if(value===28)
return stream.readInt16BE();if(value===29)
return stream.readInt32BE();if(value===30){let str3="";while(true){let b10=stream.readUInt8();let n1=b10>>4;if(n1===$c2d28e92708f99da$var$FLOAT_EOF)
break;str3+=$c2d28e92708f99da$var$FLOAT_LOOKUP[n1];let n2=b10&15;if(n2===$c2d28e92708f99da$var$FLOAT_EOF)
break;str3+=$c2d28e92708f99da$var$FLOAT_LOOKUP[n2];}
return parseFloat(str3);}
return null;}
static size(value){if(value.forceLarge)
value=32768;if((value|0)!==value){let str3=""+value;return 1+Math.ceil((str3.length+1)/2);}else if(-107<=value&&value<=107)
return 1;else if(108<=value&&value<=1131||-1131<=value&&value<=-108)
return 2;else if(-32768<=value&&value<=32767)
return 3;else
return 5;}
static encode(stream,value){let val=Number(value);if(value.forceLarge){stream.writeUInt8(29);return stream.writeInt32BE(val);}else if((val|0)!==val){stream.writeUInt8(30);let str3=""+val;for(let i2=0;i2<str3.length;i2+=2){let c1=str3[i2];let n1=$c2d28e92708f99da$var$FLOAT_ENCODE_LOOKUP[c1]||+c1;if(i2===str3.length-1)
var n2=$c2d28e92708f99da$var$FLOAT_EOF;else{let c2=str3[i2+1];var n2=$c2d28e92708f99da$var$FLOAT_ENCODE_LOOKUP[c2]||+c2;}
stream.writeUInt8(n1<<4|n2&15);}
if(n2!==$c2d28e92708f99da$var$FLOAT_EOF)
return stream.writeUInt8($c2d28e92708f99da$var$FLOAT_EOF<<4);}else if(-107<=val&&val<=107)
return stream.writeUInt8(val+139);else if(108<=val&&val<=1131){val-=108;stream.writeUInt8((val>>8)+247);return stream.writeUInt8(val&255);}else if(-1131<=val&&val<=-108){val=-val-108;stream.writeUInt8((val>>8)+251);return stream.writeUInt8(val&255);}else if(-32768<=val&&val<=32767){stream.writeUInt8(28);return stream.writeInt16BE(val);}else{stream.writeUInt8(29);return stream.writeInt32BE(val);}}};var $61aa549f16d58b9b$export$2e2bcd8739ae039=class{decodeOperands(type,stream,ret,operands){if(Array.isArray(type))
return operands.map((op,i2)=>this.decodeOperands(type[i2],stream,ret,[op]));else if(type.decode!=null)
return type.decode(stream,ret,operands);else
switch(type){case"number":case"offset":case"sid":return operands[0];case"boolean":return!!operands[0];default:return operands;}}
encodeOperands(type,stream,ctx2,operands){if(Array.isArray(type))
return operands.map((op,i2)=>this.encodeOperands(type[i2],stream,ctx2,op)[0]);else if(type.encode!=null)
return type.encode(stream,operands,ctx2);else if(typeof operands==="number")
return[operands];else if(typeof operands==="boolean")
return[+operands];else if(Array.isArray(operands))
return operands;else
return[operands];}
decode(stream,parent){let end=stream.pos+parent.length;let ret={};let operands=[];Object.defineProperties(ret,{parent:{value:parent},_startOffset:{value:stream.pos}});for(let key in this.fields){let field=this.fields[key];ret[field[1]]=field[3];}
while(stream.pos<end){let b10=stream.readUInt8();if(b10<28){if(b10===12)
b10=b10<<8|stream.readUInt8();let field=this.fields[b10];if(!field)
throw new Error(`Unknown operator ${b10}`);let val=this.decodeOperands(field[2],stream,ret,operands);if(val!=null){if(val instanceof(0,PropertyDescriptor))
Object.defineProperty(ret,field[1],val);else
ret[field[1]]=val;}
operands=[];}else
operands.push((0,$c2d28e92708f99da$export$2e2bcd8739ae039).decode(stream,b10));}
return ret;}
size(dict,parent,includePointers=true){let ctx2={parent,val:dict,pointerSize:0,startOffset:parent.startOffset||0};let len2=0;for(let k in this.fields){let field=this.fields[k];let val=dict[field[1]];if(val==null||(0,import_fast_deep_equal.default)(val,field[3]))
continue;let operands=this.encodeOperands(field[2],null,ctx2,val);for(let op of operands)
len2+=(0,$c2d28e92708f99da$export$2e2bcd8739ae039).size(op);let key=Array.isArray(field[0])?field[0]:[field[0]];len2+=key.length;}
if(includePointers)
len2+=ctx2.pointerSize;return len2;}
encode(stream,dict,parent){let ctx2={pointers:[],startOffset:stream.pos,parent,val:dict,pointerSize:0};ctx2.pointerOffset=stream.pos+this.size(dict,ctx2,false);for(let field of this.ops){let val=dict[field[1]];if(val==null||(0,import_fast_deep_equal.default)(val,field[3]))
continue;let operands=this.encodeOperands(field[2],stream,ctx2,val);for(let op of operands)
(0,$c2d28e92708f99da$export$2e2bcd8739ae039).encode(stream,op);let key=Array.isArray(field[0])?field[0]:[field[0]];for(let op1 of key)
stream.writeUInt8(op1);}
let i2=0;while(i2<ctx2.pointers.length){let ptr=ctx2.pointers[i2++];ptr.type.encode(stream,ptr.val,ptr.parent);}
return;}
constructor(ops=[]){this.ops=ops;this.fields={};for(let field of ops){let key=Array.isArray(field[0])?field[0][0]<<8|field[0][1]:field[0];this.fields[key]=field;}}};var $0e34a43d05bde82c$export$2e2bcd8739ae039=class extends Pointer{decode(stream,parent,operands){this.offsetType={decode:()=>operands[0]};return super.decode(stream,parent,operands);}
encode(stream,value,ctx2){if(!stream){this.offsetType={size:()=>0};this.size(value,ctx2);return[new $0e34a43d05bde82c$var$Ptr(0)];}
let ptr=null;this.offsetType={encode:(stream2,val)=>ptr=val};super.encode(stream,value,ctx2);return[new $0e34a43d05bde82c$var$Ptr(ptr)];}
constructor(type,options={}){if(options.type==null)
options.type="global";super(null,type,options);}};var $0e34a43d05bde82c$var$Ptr=class{valueOf(){return this.val;}
constructor(val){this.val=val;this.forceLarge=true;}};var $6d59db2e29cc77b3$var$CFFBlendOp=class{static decode(stream,parent,operands){let numBlends=operands.pop();while(operands.length>numBlends)
operands.pop();}};var $6d59db2e29cc77b3$export$2e2bcd8739ae039=new(0,$61aa549f16d58b9b$export$2e2bcd8739ae039)([[6,"BlueValues","delta",null],[7,"OtherBlues","delta",null],[8,"FamilyBlues","delta",null],[9,"FamilyOtherBlues","delta",null],[[12,9],"BlueScale","number",0.039625],[[12,10],"BlueShift","number",7],[[12,11],"BlueFuzz","number",1],[10,"StdHW","number",null],[11,"StdVW","number",null],[[12,12],"StemSnapH","delta",null],[[12,13],"StemSnapV","delta",null],[[12,14],"ForceBold","boolean",false],[[12,17],"LanguageGroup","number",0],[[12,18],"ExpansionFactor","number",0.06],[[12,19],"initialRandomSeed","number",0],[20,"defaultWidthX","number",0],[21,"nominalWidthX","number",0],[22,"vsindex","number",0],[23,"blend",$6d59db2e29cc77b3$var$CFFBlendOp,null],[19,"Subrs",new(0,$0e34a43d05bde82c$export$2e2bcd8739ae039)(new(0,$43e9821ef3717eec$export$2e2bcd8739ae039)(),{type:"local"}),null]]);var $229224aec43783c5$export$2e2bcd8739ae039=[".notdef","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","onesuperior","logicalnot","mu","trademark","Eth","onehalf","plusminus","Thorn","onequarter","divide","brokenbar","degree","thorn","threequarters","twosuperior","registered","minus","eth","multiply","threesuperior","copyright","Aacute","Acircumflex","Adieresis","Agrave","Aring","Atilde","Ccedilla","Eacute","Ecircumflex","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Ntilde","Oacute","Ocircumflex","Odieresis","Ograve","Otilde","Scaron","Uacute","Ucircumflex","Udieresis","Ugrave","Yacute","Ydieresis","Zcaron","aacute","acircumflex","adieresis","agrave","aring","atilde","ccedilla","eacute","ecircumflex","edieresis","egrave","iacute","icircumflex","idieresis","igrave","ntilde","oacute","ocircumflex","odieresis","ograve","otilde","scaron","uacute","ucircumflex","udieresis","ugrave","yacute","ydieresis","zcaron","exclamsmall","Hungarumlautsmall","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","commasuperior","threequartersemdash","periodsuperior","questionsmall","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","ffi","ffl","parenleftinferior","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","exclamdownsmall","centoldstyle","Lslashsmall","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","Dotaccentsmall","Macronsmall","figuredash","hypheninferior","Ogoneksmall","Ringsmall","Cedillasmall","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall","001.000","001.001","001.002","001.003","Black","Bold","Book","Light","Medium","Regular","Roman","Semibold"];var $bc0433d9b7e41f5f$export$dee0027060fa13bd=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","","endash","dagger","daggerdbl","periodcentered","","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","","questiondown","","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","","ring","cedilla","","hungarumlaut","ogonek","caron","emdash","","","","","","","","","","","","","","","","","AE","","ordfeminine","","","","","Lslash","Oslash","OE","ordmasculine","","","","","","ae","","","","dotlessi","","","lslash","oslash","oe","germandbls"];var $bc0433d9b7e41f5f$export$4f58f497e14a53c3=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclamsmall","Hungarumlautsmall","","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","questionsmall","","asuperior","bsuperior","centsuperior","dsuperior","esuperior","","","isuperior","","","lsuperior","msuperior","nsuperior","osuperior","","","rsuperior","ssuperior","tsuperior","","ff","fi","fl","ffi","ffl","parenleftinferior","","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdownsmall","centoldstyle","Lslashsmall","","","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","","Dotaccentsmall","","","Macronsmall","","","figuredash","hypheninferior","","","Ogoneksmall","Ringsmall","Cedillasmall","","","","onequarter","onehalf","threequarters","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","","","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall"];var $ef658f5c9a1488b2$export$c33b50336c234f16=[".notdef","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","onesuperior","logicalnot","mu","trademark","Eth","onehalf","plusminus","Thorn","onequarter","divide","brokenbar","degree","thorn","threequarters","twosuperior","registered","minus","eth","multiply","threesuperior","copyright","Aacute","Acircumflex","Adieresis","Agrave","Aring","Atilde","Ccedilla","Eacute","Ecircumflex","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Ntilde","Oacute","Ocircumflex","Odieresis","Ograve","Otilde","Scaron","Uacute","Ucircumflex","Udieresis","Ugrave","Yacute","Ydieresis","Zcaron","aacute","acircumflex","adieresis","agrave","aring","atilde","ccedilla","eacute","ecircumflex","edieresis","egrave","iacute","icircumflex","idieresis","igrave","ntilde","oacute","ocircumflex","odieresis","ograve","otilde","scaron","uacute","ucircumflex","udieresis","ugrave","yacute","ydieresis","zcaron"];var $ef658f5c9a1488b2$export$3ed0f9e1fee8d489=[".notdef","space","exclamsmall","Hungarumlautsmall","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","questionsmall","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","fi","fl","ffi","ffl","parenleftinferior","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","exclamdownsmall","centoldstyle","Lslashsmall","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","Dotaccentsmall","Macronsmall","figuredash","hypheninferior","Ogoneksmall","Ringsmall","Cedillasmall","onequarter","onehalf","threequarters","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall"];var $ef658f5c9a1488b2$export$dc28be11139d4120=[".notdef","space","dollaroldstyle","dollarsuperior","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","fi","fl","ffi","ffl","parenleftinferior","parenrightinferior","hyphensuperior","colonmonetary","onefitted","rupiah","centoldstyle","figuredash","hypheninferior","onequarter","onehalf","threequarters","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior"];var $7cbbe4e24ef3cb75$var$LangSysTable=new Struct({reserved:new Reserved(uint16),reqFeatureIndex:uint16,featureCount:uint16,featureIndexes:new ArrayT(uint16,"featureCount")});var $7cbbe4e24ef3cb75$var$LangSysRecord=new Struct({tag:new StringT(4),langSys:new Pointer(uint16,$7cbbe4e24ef3cb75$var$LangSysTable,{type:"parent"})});var $7cbbe4e24ef3cb75$var$Script=new Struct({defaultLangSys:new Pointer(uint16,$7cbbe4e24ef3cb75$var$LangSysTable),count:uint16,langSysRecords:new ArrayT($7cbbe4e24ef3cb75$var$LangSysRecord,"count")});var $7cbbe4e24ef3cb75$var$ScriptRecord=new Struct({tag:new StringT(4),script:new Pointer(uint16,$7cbbe4e24ef3cb75$var$Script,{type:"parent"})});var $7cbbe4e24ef3cb75$export$3e15fc05ce864229=new ArrayT($7cbbe4e24ef3cb75$var$ScriptRecord,uint16);var $7cbbe4e24ef3cb75$var$FeatureParams=new Struct({version:uint16,nameID:uint16});var $7cbbe4e24ef3cb75$export$6e91cf7616333d5=new Struct({featureParams:new Pointer(uint16,$7cbbe4e24ef3cb75$var$FeatureParams),lookupCount:uint16,lookupListIndexes:new ArrayT(uint16,"lookupCount")});var $7cbbe4e24ef3cb75$var$FeatureRecord=new Struct({tag:new StringT(4),feature:new Pointer(uint16,$7cbbe4e24ef3cb75$export$6e91cf7616333d5,{type:"parent"})});var $7cbbe4e24ef3cb75$export$aa18130def4b6cb4=new ArrayT($7cbbe4e24ef3cb75$var$FeatureRecord,uint16);var $7cbbe4e24ef3cb75$var$LookupFlags=new Struct({markAttachmentType:uint8,flags:new Bitfield(uint8,["rightToLeft","ignoreBaseGlyphs","ignoreLigatures","ignoreMarks","useMarkFilteringSet"])});function $7cbbe4e24ef3cb75$export$df0008c6ff2da22a(SubTable){let Lookup=new Struct({lookupType:uint16,flags:$7cbbe4e24ef3cb75$var$LookupFlags,subTableCount:uint16,subTables:new ArrayT(new Pointer(uint16,SubTable),"subTableCount"),markFilteringSet:new Optional(uint16,(t)=>t.flags.flags.useMarkFilteringSet)});return new LazyArray(new Pointer(uint16,Lookup),uint16);}
var $7cbbe4e24ef3cb75$var$RangeRecord=new Struct({start:uint16,end:uint16,startCoverageIndex:uint16});var $7cbbe4e24ef3cb75$export$17608c3f81a6111=new VersionedStruct(uint16,{1:{glyphCount:uint16,glyphs:new ArrayT(uint16,"glyphCount")},2:{rangeCount:uint16,rangeRecords:new ArrayT($7cbbe4e24ef3cb75$var$RangeRecord,"rangeCount")}});var $7cbbe4e24ef3cb75$var$ClassRangeRecord=new Struct({start:uint16,end:uint16,class:uint16});var $7cbbe4e24ef3cb75$export$843d551fbbafef71=new VersionedStruct(uint16,{1:{startGlyph:uint16,glyphCount:uint16,classValueArray:new ArrayT(uint16,"glyphCount")},2:{classRangeCount:uint16,classRangeRecord:new ArrayT($7cbbe4e24ef3cb75$var$ClassRangeRecord,"classRangeCount")}});var $7cbbe4e24ef3cb75$export$8215d14a63d9fb10=new Struct({a:uint16,b:uint16,deltaFormat:uint16});var $7cbbe4e24ef3cb75$var$LookupRecord=new Struct({sequenceIndex:uint16,lookupListIndex:uint16});var $7cbbe4e24ef3cb75$var$Rule=new Struct({glyphCount:uint16,lookupCount:uint16,input:new ArrayT(uint16,(t)=>t.glyphCount-1),lookupRecords:new ArrayT($7cbbe4e24ef3cb75$var$LookupRecord,"lookupCount")});var $7cbbe4e24ef3cb75$var$RuleSet=new ArrayT(new Pointer(uint16,$7cbbe4e24ef3cb75$var$Rule),uint16);var $7cbbe4e24ef3cb75$var$ClassRule=new Struct({glyphCount:uint16,lookupCount:uint16,classes:new ArrayT(uint16,(t)=>t.glyphCount-1),lookupRecords:new ArrayT($7cbbe4e24ef3cb75$var$LookupRecord,"lookupCount")});var $7cbbe4e24ef3cb75$var$ClassSet=new ArrayT(new Pointer(uint16,$7cbbe4e24ef3cb75$var$ClassRule),uint16);var $7cbbe4e24ef3cb75$export$841858b892ce1f4c=new VersionedStruct(uint16,{1:{coverage:new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),ruleSetCount:uint16,ruleSets:new ArrayT(new Pointer(uint16,$7cbbe4e24ef3cb75$var$RuleSet),"ruleSetCount")},2:{coverage:new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),classDef:new Pointer(uint16,$7cbbe4e24ef3cb75$export$843d551fbbafef71),classSetCnt:uint16,classSet:new ArrayT(new Pointer(uint16,$7cbbe4e24ef3cb75$var$ClassSet),"classSetCnt")},3:{glyphCount:uint16,lookupCount:uint16,coverages:new ArrayT(new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),"glyphCount"),lookupRecords:new ArrayT($7cbbe4e24ef3cb75$var$LookupRecord,"lookupCount")}});var $7cbbe4e24ef3cb75$var$ChainRule=new Struct({backtrackGlyphCount:uint16,backtrack:new ArrayT(uint16,"backtrackGlyphCount"),inputGlyphCount:uint16,input:new ArrayT(uint16,(t)=>t.inputGlyphCount-1),lookaheadGlyphCount:uint16,lookahead:new ArrayT(uint16,"lookaheadGlyphCount"),lookupCount:uint16,lookupRecords:new ArrayT($7cbbe4e24ef3cb75$var$LookupRecord,"lookupCount")});var $7cbbe4e24ef3cb75$var$ChainRuleSet=new ArrayT(new Pointer(uint16,$7cbbe4e24ef3cb75$var$ChainRule),uint16);var $7cbbe4e24ef3cb75$export$5e6d09e6861162f6=new VersionedStruct(uint16,{1:{coverage:new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),chainCount:uint16,chainRuleSets:new ArrayT(new Pointer(uint16,$7cbbe4e24ef3cb75$var$ChainRuleSet),"chainCount")},2:{coverage:new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),backtrackClassDef:new Pointer(uint16,$7cbbe4e24ef3cb75$export$843d551fbbafef71),inputClassDef:new Pointer(uint16,$7cbbe4e24ef3cb75$export$843d551fbbafef71),lookaheadClassDef:new Pointer(uint16,$7cbbe4e24ef3cb75$export$843d551fbbafef71),chainCount:uint16,chainClassSet:new ArrayT(new Pointer(uint16,$7cbbe4e24ef3cb75$var$ChainRuleSet),"chainCount")},3:{backtrackGlyphCount:uint16,backtrackCoverage:new ArrayT(new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),"backtrackGlyphCount"),inputGlyphCount:uint16,inputCoverage:new ArrayT(new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),"inputGlyphCount"),lookaheadGlyphCount:uint16,lookaheadCoverage:new ArrayT(new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),"lookaheadGlyphCount"),lookupCount:uint16,lookupRecords:new ArrayT($7cbbe4e24ef3cb75$var$LookupRecord,"lookupCount")}});var $1a47b0c45c1c22fe$var$F2DOT14=new Fixed(16,"BE",14);var $1a47b0c45c1c22fe$var$RegionAxisCoordinates=new Struct({startCoord:$1a47b0c45c1c22fe$var$F2DOT14,peakCoord:$1a47b0c45c1c22fe$var$F2DOT14,endCoord:$1a47b0c45c1c22fe$var$F2DOT14});var $1a47b0c45c1c22fe$var$VariationRegionList=new Struct({axisCount:uint16,regionCount:uint16,variationRegions:new ArrayT(new ArrayT($1a47b0c45c1c22fe$var$RegionAxisCoordinates,"axisCount"),"regionCount")});var $1a47b0c45c1c22fe$var$DeltaSet=new Struct({shortDeltas:new ArrayT(int16,(t)=>t.parent.shortDeltaCount),regionDeltas:new ArrayT(int8,(t)=>t.parent.regionIndexCount-t.parent.shortDeltaCount),deltas:(t)=>t.shortDeltas.concat(t.regionDeltas)});var $1a47b0c45c1c22fe$var$ItemVariationData=new Struct({itemCount:uint16,shortDeltaCount:uint16,regionIndexCount:uint16,regionIndexes:new ArrayT(uint16,"regionIndexCount"),deltaSets:new ArrayT($1a47b0c45c1c22fe$var$DeltaSet,"itemCount")});var $1a47b0c45c1c22fe$export$fe1b122a2710f241=new Struct({format:uint16,variationRegionList:new Pointer(uint32,$1a47b0c45c1c22fe$var$VariationRegionList),variationDataCount:uint16,itemVariationData:new ArrayT(new Pointer(uint32,$1a47b0c45c1c22fe$var$ItemVariationData),"variationDataCount")});var $1a47b0c45c1c22fe$var$ConditionTable=new VersionedStruct(uint16,{1:{axisIndex:uint16,axisIndex:uint16,filterRangeMinValue:$1a47b0c45c1c22fe$var$F2DOT14,filterRangeMaxValue:$1a47b0c45c1c22fe$var$F2DOT14}});var $1a47b0c45c1c22fe$var$ConditionSet=new Struct({conditionCount:uint16,conditionTable:new ArrayT(new Pointer(uint32,$1a47b0c45c1c22fe$var$ConditionTable),"conditionCount")});var $1a47b0c45c1c22fe$var$FeatureTableSubstitutionRecord=new Struct({featureIndex:uint16,alternateFeatureTable:new Pointer(uint32,(0,$7cbbe4e24ef3cb75$export$6e91cf7616333d5),{type:"parent"})});var $1a47b0c45c1c22fe$var$FeatureTableSubstitution=new Struct({version:fixed32,substitutionCount:uint16,substitutions:new ArrayT($1a47b0c45c1c22fe$var$FeatureTableSubstitutionRecord,"substitutionCount")});var $1a47b0c45c1c22fe$var$FeatureVariationRecord=new Struct({conditionSet:new Pointer(uint32,$1a47b0c45c1c22fe$var$ConditionSet,{type:"parent"}),featureTableSubstitution:new Pointer(uint32,$1a47b0c45c1c22fe$var$FeatureTableSubstitution,{type:"parent"})});var $1a47b0c45c1c22fe$export$441b70b7971dd419=new Struct({majorVersion:uint16,minorVersion:uint16,featureVariationRecordCount:uint32,featureVariationRecords:new ArrayT($1a47b0c45c1c22fe$var$FeatureVariationRecord,"featureVariationRecordCount")});var $b84fd3dd9d8eddb2$var$PredefinedOp=class{decode(stream,parent,operands){if(this.predefinedOps[operands[0]])
return this.predefinedOps[operands[0]];return this.type.decode(stream,parent,operands);}
size(value,ctx2){return this.type.size(value,ctx2);}
encode(stream,value,ctx2){let index2=this.predefinedOps.indexOf(value);if(index2!==-1)
return index2;return this.type.encode(stream,value,ctx2);}
constructor(predefinedOps,type){this.predefinedOps=predefinedOps;this.type=type;}};var $b84fd3dd9d8eddb2$var$CFFEncodingVersion=class extends NumberT{decode(stream){return uint8.decode(stream)&127;}
constructor(){super("UInt8");}};var $b84fd3dd9d8eddb2$var$Range1=new Struct({first:uint16,nLeft:uint8});var $b84fd3dd9d8eddb2$var$Range2=new Struct({first:uint16,nLeft:uint16});var $b84fd3dd9d8eddb2$var$CFFCustomEncoding=new VersionedStruct(new $b84fd3dd9d8eddb2$var$CFFEncodingVersion(),{0:{nCodes:uint8,codes:new ArrayT(uint8,"nCodes")},1:{nRanges:uint8,ranges:new ArrayT($b84fd3dd9d8eddb2$var$Range1,"nRanges")}});var $b84fd3dd9d8eddb2$var$CFFEncoding=new $b84fd3dd9d8eddb2$var$PredefinedOp([(0,$bc0433d9b7e41f5f$export$dee0027060fa13bd),(0,$bc0433d9b7e41f5f$export$4f58f497e14a53c3)],new(0,$0e34a43d05bde82c$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$CFFCustomEncoding,{lazy:true}));var $b84fd3dd9d8eddb2$var$RangeArray=class extends ArrayT{decode(stream,parent){let length3=(0,resolveLength)(this.length,stream,parent);let count=0;let res=[];while(count<length3){let range2=this.type.decode(stream,parent);range2.offset=count;count+=range2.nLeft+1;res.push(range2);}
return res;}};var $b84fd3dd9d8eddb2$var$CFFCustomCharset=new VersionedStruct(uint8,{0:{glyphs:new ArrayT(uint16,(t)=>t.parent.CharStrings.length-1)},1:{ranges:new $b84fd3dd9d8eddb2$var$RangeArray($b84fd3dd9d8eddb2$var$Range1,(t)=>t.parent.CharStrings.length-1)},2:{ranges:new $b84fd3dd9d8eddb2$var$RangeArray($b84fd3dd9d8eddb2$var$Range2,(t)=>t.parent.CharStrings.length-1)}});var $b84fd3dd9d8eddb2$var$CFFCharset=new $b84fd3dd9d8eddb2$var$PredefinedOp([(0,$ef658f5c9a1488b2$export$c33b50336c234f16),(0,$ef658f5c9a1488b2$export$3ed0f9e1fee8d489),(0,$ef658f5c9a1488b2$export$dc28be11139d4120)],new(0,$0e34a43d05bde82c$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$CFFCustomCharset,{lazy:true}));var $b84fd3dd9d8eddb2$var$FDRange3=new Struct({first:uint16,fd:uint8});var $b84fd3dd9d8eddb2$var$FDRange4=new Struct({first:uint32,fd:uint16});var $b84fd3dd9d8eddb2$var$FDSelect=new VersionedStruct(uint8,{0:{fds:new ArrayT(uint8,(t)=>t.parent.CharStrings.length)},3:{nRanges:uint16,ranges:new ArrayT($b84fd3dd9d8eddb2$var$FDRange3,"nRanges"),sentinel:uint16},4:{nRanges:uint32,ranges:new ArrayT($b84fd3dd9d8eddb2$var$FDRange4,"nRanges"),sentinel:uint32}});var $b84fd3dd9d8eddb2$var$ptr=new(0,$0e34a43d05bde82c$export$2e2bcd8739ae039)((0,$6d59db2e29cc77b3$export$2e2bcd8739ae039));var $b84fd3dd9d8eddb2$var$CFFPrivateOp=class{decode(stream,parent,operands){parent.length=operands[0];return $b84fd3dd9d8eddb2$var$ptr.decode(stream,parent,[operands[1]]);}
size(dict,ctx2){return[(0,$6d59db2e29cc77b3$export$2e2bcd8739ae039).size(dict,ctx2,false),$b84fd3dd9d8eddb2$var$ptr.size(dict,ctx2)[0]];}
encode(stream,dict,ctx2){return[(0,$6d59db2e29cc77b3$export$2e2bcd8739ae039).size(dict,ctx2,false),$b84fd3dd9d8eddb2$var$ptr.encode(stream,dict,ctx2)[0]];}};var $b84fd3dd9d8eddb2$var$FontDict=new(0,$61aa549f16d58b9b$export$2e2bcd8739ae039)([[18,"Private",new $b84fd3dd9d8eddb2$var$CFFPrivateOp(),null],[[12,38],"FontName","sid",null],[[12,7],"FontMatrix","array",[1e-3,0,0,1e-3,0,0]],[[12,5],"PaintType","number",0]]);var $b84fd3dd9d8eddb2$var$CFFTopDict=new(0,$61aa549f16d58b9b$export$2e2bcd8739ae039)([[[12,30],"ROS",["sid","sid","number"],null],[0,"version","sid",null],[1,"Notice","sid",null],[[12,0],"Copyright","sid",null],[2,"FullName","sid",null],[3,"FamilyName","sid",null],[4,"Weight","sid",null],[[12,1],"isFixedPitch","boolean",false],[[12,2],"ItalicAngle","number",0],[[12,3],"UnderlinePosition","number",-100],[[12,4],"UnderlineThickness","number",50],[[12,5],"PaintType","number",0],[[12,6],"CharstringType","number",2],[[12,7],"FontMatrix","array",[1e-3,0,0,1e-3,0,0]],[13,"UniqueID","number",null],[5,"FontBBox","array",[0,0,0,0]],[[12,8],"StrokeWidth","number",0],[14,"XUID","array",null],[15,"charset",$b84fd3dd9d8eddb2$var$CFFCharset,(0,$ef658f5c9a1488b2$export$c33b50336c234f16)],[16,"Encoding",$b84fd3dd9d8eddb2$var$CFFEncoding,(0,$bc0433d9b7e41f5f$export$dee0027060fa13bd)],[17,"CharStrings",new(0,$0e34a43d05bde82c$export$2e2bcd8739ae039)(new(0,$43e9821ef3717eec$export$2e2bcd8739ae039)()),null],[18,"Private",new $b84fd3dd9d8eddb2$var$CFFPrivateOp(),null],[[12,20],"SyntheticBase","number",null],[[12,21],"PostScript","sid",null],[[12,22],"BaseFontName","sid",null],[[12,23],"BaseFontBlend","delta",null],[[12,31],"CIDFontVersion","number",0],[[12,32],"CIDFontRevision","number",0],[[12,33],"CIDFontType","number",0],[[12,34],"CIDCount","number",8720],[[12,35],"UIDBase","number",null],[[12,37],"FDSelect",new(0,$0e34a43d05bde82c$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$FDSelect),null],[[12,36],"FDArray",new(0,$0e34a43d05bde82c$export$2e2bcd8739ae039)(new(0,$43e9821ef3717eec$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$FontDict)),null],[[12,38],"FontName","sid",null]]);var $b84fd3dd9d8eddb2$var$VariationStore=new Struct({length:uint16,itemVariationStore:(0,$1a47b0c45c1c22fe$export$fe1b122a2710f241)});var $b84fd3dd9d8eddb2$var$CFF2TopDict=new(0,$61aa549f16d58b9b$export$2e2bcd8739ae039)([[[12,7],"FontMatrix","array",[1e-3,0,0,1e-3,0,0]],[17,"CharStrings",new(0,$0e34a43d05bde82c$export$2e2bcd8739ae039)(new(0,$43e9821ef3717eec$export$2e2bcd8739ae039)()),null],[[12,37],"FDSelect",new(0,$0e34a43d05bde82c$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$FDSelect),null],[[12,36],"FDArray",new(0,$0e34a43d05bde82c$export$2e2bcd8739ae039)(new(0,$43e9821ef3717eec$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$FontDict)),null],[24,"vstore",new(0,$0e34a43d05bde82c$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$VariationStore),null],[25,"maxstack","number",193]]);var $b84fd3dd9d8eddb2$var$CFFTop=new VersionedStruct(fixed16,{1:{hdrSize:uint8,offSize:uint8,nameIndex:new(0,$43e9821ef3717eec$export$2e2bcd8739ae039)(new StringT("length")),topDictIndex:new(0,$43e9821ef3717eec$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$CFFTopDict),stringIndex:new(0,$43e9821ef3717eec$export$2e2bcd8739ae039)(new StringT("length")),globalSubrIndex:new(0,$43e9821ef3717eec$export$2e2bcd8739ae039)()},2:{hdrSize:uint8,length:uint16,topDict:$b84fd3dd9d8eddb2$var$CFF2TopDict,globalSubrIndex:new(0,$43e9821ef3717eec$export$2e2bcd8739ae039)()}});var $b84fd3dd9d8eddb2$export$2e2bcd8739ae039=$b84fd3dd9d8eddb2$var$CFFTop;var $822ac0d589e4e237$var$CFFFont=class _$822ac0d589e4e237$var$CFFFont{static decode(stream){return new _$822ac0d589e4e237$var$CFFFont(stream);}
decode(){let start=this.stream.pos;let top=(0,$b84fd3dd9d8eddb2$export$2e2bcd8739ae039).decode(this.stream);for(let key in top){let val=top[key];this[key]=val;}
if(this.version<2){if(this.topDictIndex.length!==1)
throw new Error("Only a single font is allowed in CFF");this.topDict=this.topDictIndex[0];}
this.isCIDFont=this.topDict.ROS!=null;return this;}
string(sid){if(this.version>=2)
return null;if(sid<(0,$229224aec43783c5$export$2e2bcd8739ae039).length)
return(0,$229224aec43783c5$export$2e2bcd8739ae039)[sid];return this.stringIndex[sid-(0,$229224aec43783c5$export$2e2bcd8739ae039).length];}
get postscriptName(){if(this.version<2)
return this.nameIndex[0];return null;}
get fullName(){return this.string(this.topDict.FullName);}
get familyName(){return this.string(this.topDict.FamilyName);}
getCharString(glyph){this.stream.pos=this.topDict.CharStrings[glyph].offset;return this.stream.readBuffer(this.topDict.CharStrings[glyph].length);}
getGlyphName(gid){if(this.version>=2)
return null;if(this.isCIDFont)
return null;let{charset}=this.topDict;if(Array.isArray(charset))
return charset[gid];if(gid===0)
return".notdef";gid-=1;switch(charset.version){case 0:return this.string(charset.glyphs[gid]);case 1:case 2:for(let i2=0;i2<charset.ranges.length;i2++){let range2=charset.ranges[i2];if(range2.offset<=gid&&gid<=range2.offset+range2.nLeft)
return this.string(range2.first+(gid-range2.offset));}
break;}
return null;}
fdForGlyph(gid){if(!this.topDict.FDSelect)
return null;switch(this.topDict.FDSelect.version){case 0:return this.topDict.FDSelect.fds[gid];case 3:case 4:let{ranges}=this.topDict.FDSelect;let low=0;let high=ranges.length-1;while(low<=high){let mid=low+high>>1;if(gid<ranges[mid].first)
high=mid-1;else if(mid<high&&gid>=ranges[mid+1].first)
low=mid+1;else
return ranges[mid].fd;}
default:throw new Error(`Unknown FDSelect version:${this.topDict.FDSelect.version}`);}}
privateDictForGlyph(gid){if(this.topDict.FDSelect){let fd=this.fdForGlyph(gid);if(this.topDict.FDArray[fd])
return this.topDict.FDArray[fd].Private;return null;}
if(this.version<2)
return this.topDict.Private;return this.topDict.FDArray[0].Private;}
constructor(stream){this.stream=stream;this.decode();}};var $822ac0d589e4e237$export$2e2bcd8739ae039=$822ac0d589e4e237$var$CFFFont;var $2bbf2bc1ce37cd8f$var$VerticalOrigin=new Struct({glyphIndex:uint16,vertOriginY:int16});var $2bbf2bc1ce37cd8f$export$2e2bcd8739ae039=new Struct({majorVersion:uint16,minorVersion:uint16,defaultVertOriginY:int16,numVertOriginYMetrics:uint16,metrics:new ArrayT($2bbf2bc1ce37cd8f$var$VerticalOrigin,"numVertOriginYMetrics")});var $0941618dc22a946d$export$16b227cb15d716a0=new Struct({height:uint8,width:uint8,horiBearingX:int8,horiBearingY:int8,horiAdvance:uint8,vertBearingX:int8,vertBearingY:int8,vertAdvance:uint8});var $0941618dc22a946d$export$62c53e75f69bfe12=new Struct({height:uint8,width:uint8,bearingX:int8,bearingY:int8,advance:uint8});var $0941618dc22a946d$var$EBDTComponent=new Struct({glyph:uint16,xOffset:int8,yOffset:int8});var $0941618dc22a946d$var$ByteAligned=class{};var $0941618dc22a946d$var$BitAligned=class{};var $0941618dc22a946d$export$f1f5ddeb20d14f=new VersionedStruct("version",{1:{metrics:$0941618dc22a946d$export$62c53e75f69bfe12,data:$0941618dc22a946d$var$ByteAligned},2:{metrics:$0941618dc22a946d$export$62c53e75f69bfe12,data:$0941618dc22a946d$var$BitAligned},5:{data:$0941618dc22a946d$var$BitAligned},6:{metrics:$0941618dc22a946d$export$16b227cb15d716a0,data:$0941618dc22a946d$var$ByteAligned},7:{metrics:$0941618dc22a946d$export$16b227cb15d716a0,data:$0941618dc22a946d$var$BitAligned},8:{metrics:$0941618dc22a946d$export$62c53e75f69bfe12,pad:new Reserved(uint8),numComponents:uint16,components:new ArrayT($0941618dc22a946d$var$EBDTComponent,"numComponents")},9:{metrics:$0941618dc22a946d$export$16b227cb15d716a0,pad:new Reserved(uint8),numComponents:uint16,components:new ArrayT($0941618dc22a946d$var$EBDTComponent,"numComponents")},17:{metrics:$0941618dc22a946d$export$62c53e75f69bfe12,dataLen:uint32,data:new BufferT("dataLen")},18:{metrics:$0941618dc22a946d$export$16b227cb15d716a0,dataLen:uint32,data:new BufferT("dataLen")},19:{dataLen:uint32,data:new BufferT("dataLen")}});var $9911c4c7201c13de$var$SBitLineMetrics=new Struct({ascender:int8,descender:int8,widthMax:uint8,caretSlopeNumerator:int8,caretSlopeDenominator:int8,caretOffset:int8,minOriginSB:int8,minAdvanceSB:int8,maxBeforeBL:int8,minAfterBL:int8,pad:new Reserved(int8,2)});var $9911c4c7201c13de$var$CodeOffsetPair=new Struct({glyphCode:uint16,offset:uint16});var $9911c4c7201c13de$var$IndexSubtable=new VersionedStruct(uint16,{header:{imageFormat:uint16,imageDataOffset:uint32},1:{offsetArray:new ArrayT(uint32,(t)=>t.parent.lastGlyphIndex-t.parent.firstGlyphIndex+1)},2:{imageSize:uint32,bigMetrics:(0,$0941618dc22a946d$export$16b227cb15d716a0)},3:{offsetArray:new ArrayT(uint16,(t)=>t.parent.lastGlyphIndex-t.parent.firstGlyphIndex+1)},4:{numGlyphs:uint32,glyphArray:new ArrayT($9911c4c7201c13de$var$CodeOffsetPair,(t)=>t.numGlyphs+1)},5:{imageSize:uint32,bigMetrics:(0,$0941618dc22a946d$export$16b227cb15d716a0),numGlyphs:uint32,glyphCodeArray:new ArrayT(uint16,"numGlyphs")}});var $9911c4c7201c13de$var$IndexSubtableArray=new Struct({firstGlyphIndex:uint16,lastGlyphIndex:uint16,subtable:new Pointer(uint32,$9911c4c7201c13de$var$IndexSubtable)});var $9911c4c7201c13de$var$BitmapSizeTable=new Struct({indexSubTableArray:new Pointer(uint32,new ArrayT($9911c4c7201c13de$var$IndexSubtableArray,1),{type:"parent"}),indexTablesSize:uint32,numberOfIndexSubTables:uint32,colorRef:uint32,hori:$9911c4c7201c13de$var$SBitLineMetrics,vert:$9911c4c7201c13de$var$SBitLineMetrics,startGlyphIndex:uint16,endGlyphIndex:uint16,ppemX:uint8,ppemY:uint8,bitDepth:uint8,flags:new Bitfield(uint8,["horizontal","vertical"])});var $9911c4c7201c13de$export$2e2bcd8739ae039=new Struct({version:uint32,numSizes:uint32,sizes:new ArrayT($9911c4c7201c13de$var$BitmapSizeTable,"numSizes")});var $abb847051efd51b1$var$ImageTable=new Struct({ppem:uint16,resolution:uint16,imageOffsets:new ArrayT(new Pointer(uint32,"void"),(t)=>t.parent.parent.maxp.numGlyphs+1)});var $abb847051efd51b1$export$2e2bcd8739ae039=new Struct({version:uint16,flags:new Bitfield(uint16,["renderOutlines"]),numImgTables:uint32,imageTables:new ArrayT(new Pointer(uint32,$abb847051efd51b1$var$ImageTable),"numImgTables")});var $eb629188f3dfefdd$var$LayerRecord=new Struct({gid:uint16,paletteIndex:uint16
});var $eb629188f3dfefdd$var$BaseGlyphRecord=new Struct({gid:uint16,firstLayerIndex:uint16,numLayers:uint16});var $eb629188f3dfefdd$export$2e2bcd8739ae039=new Struct({version:uint16,numBaseGlyphRecords:uint16,baseGlyphRecord:new Pointer(uint32,new ArrayT($eb629188f3dfefdd$var$BaseGlyphRecord,"numBaseGlyphRecords")),layerRecords:new Pointer(uint32,new ArrayT($eb629188f3dfefdd$var$LayerRecord,"numLayerRecords"),{lazy:true}),numLayerRecords:uint16});var $08734b8e7dc64587$var$ColorRecord=new Struct({blue:uint8,green:uint8,red:uint8,alpha:uint8});var $08734b8e7dc64587$export$2e2bcd8739ae039=new VersionedStruct(uint16,{header:{numPaletteEntries:uint16,numPalettes:uint16,numColorRecords:uint16,colorRecords:new Pointer(uint32,new ArrayT($08734b8e7dc64587$var$ColorRecord,"numColorRecords")),colorRecordIndices:new ArrayT(uint16,"numPalettes")},0:{},1:{offsetPaletteTypeArray:new Pointer(uint32,new ArrayT(uint32,"numPalettes")),offsetPaletteLabelArray:new Pointer(uint32,new ArrayT(uint16,"numPalettes")),offsetPaletteEntryLabelArray:new Pointer(uint32,new ArrayT(uint16,"numPaletteEntries"))}});var $497cef411d884e34$var$BaseCoord=new VersionedStruct(uint16,{1:{coordinate:int16
},2:{coordinate:int16,referenceGlyph:uint16,baseCoordPoint:uint16
},3:{coordinate:int16,deviceTable:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$8215d14a63d9fb10))
}});var $497cef411d884e34$var$BaseValues=new Struct({defaultIndex:uint16,baseCoordCount:uint16,baseCoords:new ArrayT(new Pointer(uint16,$497cef411d884e34$var$BaseCoord),"baseCoordCount")});var $497cef411d884e34$var$FeatMinMaxRecord=new Struct({tag:new StringT(4),minCoord:new Pointer(uint16,$497cef411d884e34$var$BaseCoord,{type:"parent"}),maxCoord:new Pointer(uint16,$497cef411d884e34$var$BaseCoord,{type:"parent"})
});var $497cef411d884e34$var$MinMax=new Struct({minCoord:new Pointer(uint16,$497cef411d884e34$var$BaseCoord),maxCoord:new Pointer(uint16,$497cef411d884e34$var$BaseCoord),featMinMaxCount:uint16,featMinMaxRecords:new ArrayT($497cef411d884e34$var$FeatMinMaxRecord,"featMinMaxCount")
});var $497cef411d884e34$var$BaseLangSysRecord=new Struct({tag:new StringT(4),minMax:new Pointer(uint16,$497cef411d884e34$var$MinMax,{type:"parent"})});var $497cef411d884e34$var$BaseScript=new Struct({baseValues:new Pointer(uint16,$497cef411d884e34$var$BaseValues),defaultMinMax:new Pointer(uint16,$497cef411d884e34$var$MinMax),baseLangSysCount:uint16,baseLangSysRecords:new ArrayT($497cef411d884e34$var$BaseLangSysRecord,"baseLangSysCount")
});var $497cef411d884e34$var$BaseScriptRecord=new Struct({tag:new StringT(4),script:new Pointer(uint16,$497cef411d884e34$var$BaseScript,{type:"parent"})});var $497cef411d884e34$var$BaseScriptList=new ArrayT($497cef411d884e34$var$BaseScriptRecord,uint16);var $497cef411d884e34$var$BaseTagList=new ArrayT(new StringT(4),uint16);var $497cef411d884e34$var$Axis=new Struct({baseTagList:new Pointer(uint16,$497cef411d884e34$var$BaseTagList),baseScriptList:new Pointer(uint16,$497cef411d884e34$var$BaseScriptList)});var $497cef411d884e34$export$2e2bcd8739ae039=new VersionedStruct(uint32,{header:{horizAxis:new Pointer(uint16,$497cef411d884e34$var$Axis),vertAxis:new Pointer(uint16,$497cef411d884e34$var$Axis)
},65536:{},65537:{itemVariationStore:new Pointer(uint32,(0,$1a47b0c45c1c22fe$export$fe1b122a2710f241))}});var $cf5f33c63ef209e6$var$AttachPoint=new ArrayT(uint16,uint16);var $cf5f33c63ef209e6$var$AttachList=new Struct({coverage:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$17608c3f81a6111)),glyphCount:uint16,attachPoints:new ArrayT(new Pointer(uint16,$cf5f33c63ef209e6$var$AttachPoint),"glyphCount")});var $cf5f33c63ef209e6$var$CaretValue=new VersionedStruct(uint16,{1:{coordinate:int16},2:{caretValuePoint:uint16},3:{coordinate:int16,deviceTable:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$8215d14a63d9fb10))}});var $cf5f33c63ef209e6$var$LigGlyph=new ArrayT(new Pointer(uint16,$cf5f33c63ef209e6$var$CaretValue),uint16);var $cf5f33c63ef209e6$var$LigCaretList=new Struct({coverage:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$17608c3f81a6111)),ligGlyphCount:uint16,ligGlyphs:new ArrayT(new Pointer(uint16,$cf5f33c63ef209e6$var$LigGlyph),"ligGlyphCount")});var $cf5f33c63ef209e6$var$MarkGlyphSetsDef=new Struct({markSetTableFormat:uint16,markSetCount:uint16,coverage:new ArrayT(new Pointer(uint32,(0,$7cbbe4e24ef3cb75$export$17608c3f81a6111)),"markSetCount")});var $cf5f33c63ef209e6$export$2e2bcd8739ae039=new VersionedStruct(uint32,{header:{glyphClassDef:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$843d551fbbafef71)),attachList:new Pointer(uint16,$cf5f33c63ef209e6$var$AttachList),ligCaretList:new Pointer(uint16,$cf5f33c63ef209e6$var$LigCaretList),markAttachClassDef:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$843d551fbbafef71))},65536:{},65538:{markGlyphSetsDef:new Pointer(uint16,$cf5f33c63ef209e6$var$MarkGlyphSetsDef)},65539:{markGlyphSetsDef:new Pointer(uint16,$cf5f33c63ef209e6$var$MarkGlyphSetsDef),itemVariationStore:new Pointer(uint32,(0,$1a47b0c45c1c22fe$export$fe1b122a2710f241))}});var $47e0e8ef515d9903$var$ValueFormat=new Bitfield(uint16,["xPlacement","yPlacement","xAdvance","yAdvance","xPlaDevice","yPlaDevice","xAdvDevice","yAdvDevice"]);var $47e0e8ef515d9903$var$types={xPlacement:int16,yPlacement:int16,xAdvance:int16,yAdvance:int16,xPlaDevice:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$8215d14a63d9fb10),{type:"global",relativeTo:(ctx2)=>ctx2.rel}),yPlaDevice:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$8215d14a63d9fb10),{type:"global",relativeTo:(ctx2)=>ctx2.rel}),xAdvDevice:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$8215d14a63d9fb10),{type:"global",relativeTo:(ctx2)=>ctx2.rel}),yAdvDevice:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$8215d14a63d9fb10),{type:"global",relativeTo:(ctx2)=>ctx2.rel})};var $47e0e8ef515d9903$var$ValueRecord=class{buildStruct(parent){let struct=parent;while(!struct[this.key]&&struct.parent)
struct=struct.parent;if(!struct[this.key])
return;let fields={};fields.rel=()=>struct._startOffset;let format=struct[this.key];for(let key in format)
if(format[key])
fields[key]=$47e0e8ef515d9903$var$types[key];return new Struct(fields);}
size(val,ctx2){return this.buildStruct(ctx2).size(val,ctx2);}
decode(stream,parent){let res=this.buildStruct(parent).decode(stream,parent);delete res.rel;return res;}
constructor(key="valueFormat"){this.key=key;}};var $47e0e8ef515d9903$var$PairValueRecord=new Struct({secondGlyph:uint16,value1:new $47e0e8ef515d9903$var$ValueRecord("valueFormat1"),value2:new $47e0e8ef515d9903$var$ValueRecord("valueFormat2")});var $47e0e8ef515d9903$var$PairSet=new ArrayT($47e0e8ef515d9903$var$PairValueRecord,uint16);var $47e0e8ef515d9903$var$Class2Record=new Struct({value1:new $47e0e8ef515d9903$var$ValueRecord("valueFormat1"),value2:new $47e0e8ef515d9903$var$ValueRecord("valueFormat2")});var $47e0e8ef515d9903$var$Anchor=new VersionedStruct(uint16,{1:{xCoordinate:int16,yCoordinate:int16},2:{xCoordinate:int16,yCoordinate:int16,anchorPoint:uint16},3:{xCoordinate:int16,yCoordinate:int16,xDeviceTable:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$8215d14a63d9fb10)),yDeviceTable:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$8215d14a63d9fb10))}});var $47e0e8ef515d9903$var$EntryExitRecord=new Struct({entryAnchor:new Pointer(uint16,$47e0e8ef515d9903$var$Anchor,{type:"parent"}),exitAnchor:new Pointer(uint16,$47e0e8ef515d9903$var$Anchor,{type:"parent"})});var $47e0e8ef515d9903$var$MarkRecord=new Struct({class:uint16,markAnchor:new Pointer(uint16,$47e0e8ef515d9903$var$Anchor,{type:"parent"})});var $47e0e8ef515d9903$var$MarkArray=new ArrayT($47e0e8ef515d9903$var$MarkRecord,uint16);var $47e0e8ef515d9903$var$BaseRecord=new ArrayT(new Pointer(uint16,$47e0e8ef515d9903$var$Anchor),(t)=>t.parent.classCount);var $47e0e8ef515d9903$var$BaseArray=new ArrayT($47e0e8ef515d9903$var$BaseRecord,uint16);var $47e0e8ef515d9903$var$ComponentRecord=new ArrayT(new Pointer(uint16,$47e0e8ef515d9903$var$Anchor),(t)=>t.parent.parent.classCount);var $47e0e8ef515d9903$var$LigatureAttach=new ArrayT($47e0e8ef515d9903$var$ComponentRecord,uint16);var $47e0e8ef515d9903$var$LigatureArray=new ArrayT(new Pointer(uint16,$47e0e8ef515d9903$var$LigatureAttach),uint16);var $47e0e8ef515d9903$export$73a8cfb19cd43a0f=new VersionedStruct("lookupType",{1:new VersionedStruct(uint16,{1:{coverage:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$17608c3f81a6111)),valueFormat:$47e0e8ef515d9903$var$ValueFormat,value:new $47e0e8ef515d9903$var$ValueRecord()},2:{coverage:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$17608c3f81a6111)),valueFormat:$47e0e8ef515d9903$var$ValueFormat,valueCount:uint16,values:new LazyArray(new $47e0e8ef515d9903$var$ValueRecord(),"valueCount")}}),2:new VersionedStruct(uint16,{1:{coverage:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$17608c3f81a6111)),valueFormat1:$47e0e8ef515d9903$var$ValueFormat,valueFormat2:$47e0e8ef515d9903$var$ValueFormat,pairSetCount:uint16,pairSets:new LazyArray(new Pointer(uint16,$47e0e8ef515d9903$var$PairSet),"pairSetCount")},2:{coverage:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$17608c3f81a6111)),valueFormat1:$47e0e8ef515d9903$var$ValueFormat,valueFormat2:$47e0e8ef515d9903$var$ValueFormat,classDef1:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$843d551fbbafef71)),classDef2:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$843d551fbbafef71)),class1Count:uint16,class2Count:uint16,classRecords:new LazyArray(new LazyArray($47e0e8ef515d9903$var$Class2Record,"class2Count"),"class1Count")}}),3:{format:uint16,coverage:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$17608c3f81a6111)),entryExitCount:uint16,entryExitRecords:new ArrayT($47e0e8ef515d9903$var$EntryExitRecord,"entryExitCount")},4:{format:uint16,markCoverage:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$17608c3f81a6111)),baseCoverage:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$17608c3f81a6111)),classCount:uint16,markArray:new Pointer(uint16,$47e0e8ef515d9903$var$MarkArray),baseArray:new Pointer(uint16,$47e0e8ef515d9903$var$BaseArray)},5:{format:uint16,markCoverage:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$17608c3f81a6111)),ligatureCoverage:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$17608c3f81a6111)),classCount:uint16,markArray:new Pointer(uint16,$47e0e8ef515d9903$var$MarkArray),ligatureArray:new Pointer(uint16,$47e0e8ef515d9903$var$LigatureArray)},6:{format:uint16,mark1Coverage:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$17608c3f81a6111)),mark2Coverage:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$17608c3f81a6111)),classCount:uint16,mark1Array:new Pointer(uint16,$47e0e8ef515d9903$var$MarkArray),mark2Array:new Pointer(uint16,$47e0e8ef515d9903$var$BaseArray)},7:(0,$7cbbe4e24ef3cb75$export$841858b892ce1f4c),8:(0,$7cbbe4e24ef3cb75$export$5e6d09e6861162f6),9:{posFormat:uint16,lookupType:uint16,extension:new Pointer(uint32,null)}});$47e0e8ef515d9903$export$73a8cfb19cd43a0f.versions[9].extension.type=$47e0e8ef515d9903$export$73a8cfb19cd43a0f;var $47e0e8ef515d9903$export$2e2bcd8739ae039=new VersionedStruct(uint32,{header:{scriptList:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$3e15fc05ce864229)),featureList:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$aa18130def4b6cb4)),lookupList:new Pointer(uint16,new(0,$7cbbe4e24ef3cb75$export$df0008c6ff2da22a)($47e0e8ef515d9903$export$73a8cfb19cd43a0f))},65536:{},65537:{featureVariations:new Pointer(uint32,(0,$1a47b0c45c1c22fe$export$441b70b7971dd419))}});var $d3f442064af66e06$var$Sequence=new ArrayT(uint16,uint16);var $d3f442064af66e06$var$AlternateSet=$d3f442064af66e06$var$Sequence;var $d3f442064af66e06$var$Ligature=new Struct({glyph:uint16,compCount:uint16,components:new ArrayT(uint16,(t)=>t.compCount-1)});var $d3f442064af66e06$var$LigatureSet=new ArrayT(new Pointer(uint16,$d3f442064af66e06$var$Ligature),uint16);var $d3f442064af66e06$var$GSUBLookup=new VersionedStruct("lookupType",{1:new VersionedStruct(uint16,{1:{coverage:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$17608c3f81a6111)),deltaGlyphID:int16},2:{coverage:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$17608c3f81a6111)),glyphCount:uint16,substitute:new LazyArray(uint16,"glyphCount")}}),2:{substFormat:uint16,coverage:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$17608c3f81a6111)),count:uint16,sequences:new LazyArray(new Pointer(uint16,$d3f442064af66e06$var$Sequence),"count")},3:{substFormat:uint16,coverage:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$17608c3f81a6111)),count:uint16,alternateSet:new LazyArray(new Pointer(uint16,$d3f442064af66e06$var$AlternateSet),"count")},4:{substFormat:uint16,coverage:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$17608c3f81a6111)),count:uint16,ligatureSets:new LazyArray(new Pointer(uint16,$d3f442064af66e06$var$LigatureSet),"count")},5:(0,$7cbbe4e24ef3cb75$export$841858b892ce1f4c),6:(0,$7cbbe4e24ef3cb75$export$5e6d09e6861162f6),7:{substFormat:uint16,lookupType:uint16,extension:new Pointer(uint32,null)},8:{substFormat:uint16,coverage:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$17608c3f81a6111)),backtrackCoverage:new ArrayT(new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$17608c3f81a6111)),"backtrackGlyphCount"),lookaheadGlyphCount:uint16,lookaheadCoverage:new ArrayT(new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$17608c3f81a6111)),"lookaheadGlyphCount"),glyphCount:uint16,substitutes:new ArrayT(uint16,"glyphCount")}});$d3f442064af66e06$var$GSUBLookup.versions[7].extension.type=$d3f442064af66e06$var$GSUBLookup;var $d3f442064af66e06$export$2e2bcd8739ae039=new VersionedStruct(uint32,{header:{scriptList:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$3e15fc05ce864229)),featureList:new Pointer(uint16,(0,$7cbbe4e24ef3cb75$export$aa18130def4b6cb4)),lookupList:new Pointer(uint16,new(0,$7cbbe4e24ef3cb75$export$df0008c6ff2da22a)($d3f442064af66e06$var$GSUBLookup))},65536:{},65537:{featureVariations:new Pointer(uint32,(0,$1a47b0c45c1c22fe$export$441b70b7971dd419))}});var $71cfb3c4767fbd0c$var$JstfGSUBModList=new ArrayT(uint16,uint16);var $71cfb3c4767fbd0c$var$JstfPriority=new Struct({shrinkageEnableGSUB:new Pointer(uint16,$71cfb3c4767fbd0c$var$JstfGSUBModList),shrinkageDisableGSUB:new Pointer(uint16,$71cfb3c4767fbd0c$var$JstfGSUBModList),shrinkageEnableGPOS:new Pointer(uint16,$71cfb3c4767fbd0c$var$JstfGSUBModList),shrinkageDisableGPOS:new Pointer(uint16,$71cfb3c4767fbd0c$var$JstfGSUBModList),shrinkageJstfMax:new Pointer(uint16,new(0,$7cbbe4e24ef3cb75$export$df0008c6ff2da22a)((0,$47e0e8ef515d9903$export$73a8cfb19cd43a0f))),extensionEnableGSUB:new Pointer(uint16,$71cfb3c4767fbd0c$var$JstfGSUBModList),extensionDisableGSUB:new Pointer(uint16,$71cfb3c4767fbd0c$var$JstfGSUBModList),extensionEnableGPOS:new Pointer(uint16,$71cfb3c4767fbd0c$var$JstfGSUBModList),extensionDisableGPOS:new Pointer(uint16,$71cfb3c4767fbd0c$var$JstfGSUBModList),extensionJstfMax:new Pointer(uint16,new(0,$7cbbe4e24ef3cb75$export$df0008c6ff2da22a)((0,$47e0e8ef515d9903$export$73a8cfb19cd43a0f)))});var $71cfb3c4767fbd0c$var$JstfLangSys=new ArrayT(new Pointer(uint16,$71cfb3c4767fbd0c$var$JstfPriority),uint16);var $71cfb3c4767fbd0c$var$JstfLangSysRecord=new Struct({tag:new StringT(4),jstfLangSys:new Pointer(uint16,$71cfb3c4767fbd0c$var$JstfLangSys)});var $71cfb3c4767fbd0c$var$JstfScript=new Struct({extenderGlyphs:new Pointer(uint16,new ArrayT(uint16,uint16)),defaultLangSys:new Pointer(uint16,$71cfb3c4767fbd0c$var$JstfLangSys),langSysCount:uint16,langSysRecords:new ArrayT($71cfb3c4767fbd0c$var$JstfLangSysRecord,"langSysCount")});var $71cfb3c4767fbd0c$var$JstfScriptRecord=new Struct({tag:new StringT(4),script:new Pointer(uint16,$71cfb3c4767fbd0c$var$JstfScript,{type:"parent"})});var $71cfb3c4767fbd0c$export$2e2bcd8739ae039=new Struct({version:uint32,scriptCount:uint16,scriptList:new ArrayT($71cfb3c4767fbd0c$var$JstfScriptRecord,"scriptCount")});var $d059a6bd2d3b5b63$var$VariableSizeNumber=class{decode(stream,parent){switch(this.size(0,parent)){case 1:return stream.readUInt8();case 2:return stream.readUInt16BE();case 3:return stream.readUInt24BE();case 4:return stream.readUInt32BE();}}
size(val,parent){return(0,resolveLength)(this._size,null,parent);}
constructor(size4){this._size=size4;}};var $d059a6bd2d3b5b63$var$MapDataEntry=new Struct({entry:new $d059a6bd2d3b5b63$var$VariableSizeNumber((t)=>((t.parent.entryFormat&48)>>4)+1),outerIndex:(t)=>t.entry>>(t.parent.entryFormat&15)+1,innerIndex:(t)=>t.entry&(1<<(t.parent.entryFormat&15)+1)-1});var $d059a6bd2d3b5b63$var$DeltaSetIndexMap=new Struct({entryFormat:uint16,mapCount:uint16,mapData:new ArrayT($d059a6bd2d3b5b63$var$MapDataEntry,"mapCount")});var $d059a6bd2d3b5b63$export$2e2bcd8739ae039=new Struct({majorVersion:uint16,minorVersion:uint16,itemVariationStore:new Pointer(uint32,(0,$1a47b0c45c1c22fe$export$fe1b122a2710f241)),advanceWidthMapping:new Pointer(uint32,$d059a6bd2d3b5b63$var$DeltaSetIndexMap),LSBMapping:new Pointer(uint32,$d059a6bd2d3b5b63$var$DeltaSetIndexMap),RSBMapping:new Pointer(uint32,$d059a6bd2d3b5b63$var$DeltaSetIndexMap)});var $dceeca3e1977ce30$var$Signature=new Struct({format:uint32,length:uint32,offset:uint32});var $dceeca3e1977ce30$var$SignatureBlock=new Struct({reserved:new Reserved(uint16,2),cbSignature:uint32,signature:new BufferT("cbSignature")});var $dceeca3e1977ce30$export$2e2bcd8739ae039=new Struct({ulVersion:uint32,usNumSigs:uint16,usFlag:uint16,signatures:new ArrayT($dceeca3e1977ce30$var$Signature,"usNumSigs"),signatureBlocks:new ArrayT($dceeca3e1977ce30$var$SignatureBlock,"usNumSigs")});var $8acd740a9435aad0$var$GaspRange=new Struct({rangeMaxPPEM:uint16,rangeGaspBehavior:new Bitfield(uint16,["grayscale","gridfit","symmetricSmoothing","symmetricGridfit"
])});var $8acd740a9435aad0$export$2e2bcd8739ae039=new Struct({version:uint16,numRanges:uint16,gaspRanges:new ArrayT($8acd740a9435aad0$var$GaspRange,"numRanges")
});var $b5f380243c34d6a0$var$DeviceRecord=new Struct({pixelSize:uint8,maximumWidth:uint8,widths:new ArrayT(uint8,(t)=>t.parent.parent.maxp.numGlyphs)});var $b5f380243c34d6a0$export$2e2bcd8739ae039=new Struct({version:uint16,numRecords:int16,sizeDeviceRecord:int32,records:new ArrayT($b5f380243c34d6a0$var$DeviceRecord,"numRecords")});var $ca2df1256966e313$var$KernPair=new Struct({left:uint16,right:uint16,value:int16});var $ca2df1256966e313$var$ClassTable=new Struct({firstGlyph:uint16,nGlyphs:uint16,offsets:new ArrayT(uint16,"nGlyphs"),max:(t)=>t.offsets.length&&Math.max.apply(Math,t.offsets)});var $ca2df1256966e313$var$Kern2Array=new Struct({off:(t)=>t._startOffset-t.parent.parent._startOffset,len:(t)=>((t.parent.leftTable.max-t.off)/t.parent.rowWidth+1)*(t.parent.rowWidth/2),values:new LazyArray(int16,"len")});var $ca2df1256966e313$var$KernSubtable=new VersionedStruct("format",{0:{nPairs:uint16,searchRange:uint16,entrySelector:uint16,rangeShift:uint16,pairs:new ArrayT($ca2df1256966e313$var$KernPair,"nPairs")},2:{rowWidth:uint16,leftTable:new Pointer(uint16,$ca2df1256966e313$var$ClassTable,{type:"parent"}),rightTable:new Pointer(uint16,$ca2df1256966e313$var$ClassTable,{type:"parent"}),array:new Pointer(uint16,$ca2df1256966e313$var$Kern2Array,{type:"parent"})},3:{glyphCount:uint16,kernValueCount:uint8,leftClassCount:uint8,rightClassCount:uint8,flags:uint8,kernValue:new ArrayT(int16,"kernValueCount"),leftClass:new ArrayT(uint8,"glyphCount"),rightClass:new ArrayT(uint8,"glyphCount"),kernIndex:new ArrayT(uint8,(t)=>t.leftClassCount*t.rightClassCount)}});var $ca2df1256966e313$var$KernTable=new VersionedStruct("version",{0:{subVersion:uint16,length:uint16,format:uint8,coverage:new Bitfield(uint8,["horizontal","minimum","crossStream","override"
]),subtable:$ca2df1256966e313$var$KernSubtable,padding:new Reserved(uint8,(t)=>t.length-t._currentOffset)},1:{length:uint32,coverage:new Bitfield(uint8,[null,null,null,null,null,"variation","crossStream","vertical"
]),format:uint8,tupleIndex:uint16,subtable:$ca2df1256966e313$var$KernSubtable,padding:new Reserved(uint8,(t)=>t.length-t._currentOffset)}});var $ca2df1256966e313$export$2e2bcd8739ae039=new VersionedStruct(uint16,{0:{nTables:uint16,tables:new ArrayT($ca2df1256966e313$var$KernTable,"nTables")},1:{reserved:new Reserved(uint16),nTables:uint32,tables:new ArrayT($ca2df1256966e313$var$KernTable,"nTables")}});var $7a9f92b0c46ebe33$export$2e2bcd8739ae039=new Struct({version:uint16,numGlyphs:uint16,yPels:new ArrayT(uint8,"numGlyphs")});var $2b2ccc419d152631$export$2e2bcd8739ae039=new Struct({version:uint16,fontNumber:uint32,pitch:uint16,xHeight:uint16,style:uint16,typeFamily:uint16,capHeight:uint16,symbolSet:uint16,typeface:new StringT(16),characterComplement:new StringT(8),fileName:new StringT(6),strokeWeight:new StringT(1),widthType:new StringT(1),serifStyle:uint8,reserved:new Reserved(uint8)});var $ca5b40b9bcda9c9b$var$Ratio=new Struct({bCharSet:uint8,xRatio:uint8,yStartRatio:uint8,yEndRatio:uint8
});var $ca5b40b9bcda9c9b$var$vTable=new Struct({yPelHeight:uint16,yMax:int16,yMin:int16
});var $ca5b40b9bcda9c9b$var$VdmxGroup=new Struct({recs:uint16,startsz:uint8,endsz:uint8,entries:new ArrayT($ca5b40b9bcda9c9b$var$vTable,"recs")
});var $ca5b40b9bcda9c9b$export$2e2bcd8739ae039=new Struct({version:uint16,numRecs:uint16,numRatios:uint16,ratioRanges:new ArrayT($ca5b40b9bcda9c9b$var$Ratio,"numRatios"),offsets:new ArrayT(uint16,"numRatios"),groups:new ArrayT($ca5b40b9bcda9c9b$var$VdmxGroup,"numRecs")
});var $69530a3c40755af0$export$2e2bcd8739ae039=new Struct({version:uint16,ascent:int16,descent:int16,lineGap:int16,advanceHeightMax:int16,minTopSideBearing:int16,minBottomSideBearing:int16,yMaxExtent:int16,caretSlopeRise:int16,caretSlopeRun:int16,caretOffset:int16,reserved:new Reserved(int16,4),metricDataFormat:int16,numberOfMetrics:uint16
});var $344073dd270f0e62$var$VmtxEntry=new Struct({advance:uint16,bearing:int16
});var $344073dd270f0e62$export$2e2bcd8739ae039=new Struct({metrics:new LazyArray($344073dd270f0e62$var$VmtxEntry,(t)=>t.parent.vhea.numberOfMetrics),bearings:new LazyArray(int16,(t)=>t.parent.maxp.numGlyphs-t.parent.vhea.numberOfMetrics)});var $3793b781918cfced$var$shortFrac=new Fixed(16,"BE",14);var $3793b781918cfced$var$Correspondence=new Struct({fromCoord:$3793b781918cfced$var$shortFrac,toCoord:$3793b781918cfced$var$shortFrac});var $3793b781918cfced$var$Segment=new Struct({pairCount:uint16,correspondence:new ArrayT($3793b781918cfced$var$Correspondence,"pairCount")});var $3793b781918cfced$export$2e2bcd8739ae039=new Struct({version:fixed32,axisCount:uint32,segment:new ArrayT($3793b781918cfced$var$Segment,"axisCount")});var $6cb7dd5f47d82580$var$UnboundedArrayAccessor=class{getItem(index2){if(this._items[index2]==null){let pos=this.stream.pos;this.stream.pos=this.base+this.type.size(null,this.parent)*index2;this._items[index2]=this.type.decode(this.stream,this.parent);this.stream.pos=pos;}
return this._items[index2];}
inspect(){return`[UnboundedArray ${this.type.constructor.name}]`;}
constructor(type,stream,parent){this.type=type;this.stream=stream;this.parent=parent;this.base=this.stream.pos;this._items=[];}};var $6cb7dd5f47d82580$export$c5af1eebc882e39a=class extends ArrayT{decode(stream,parent){return new $6cb7dd5f47d82580$var$UnboundedArrayAccessor(this.type,stream,parent);}
constructor(type){super(type,0);}};var $6cb7dd5f47d82580$export$8351f8c2ae2f103c=function(ValueType=uint16){class Shadow2{decode(stream,ctx2){ctx2=ctx2.parent.parent;return this.type.decode(stream,ctx2);}
size(val,ctx2){ctx2=ctx2.parent.parent;return this.type.size(val,ctx2);}
encode(stream,val,ctx2){ctx2=ctx2.parent.parent;return this.type.encode(stream,val,ctx2);}
constructor(type){this.type=type;}}
ValueType=new Shadow2(ValueType);let BinarySearchHeader=new Struct({unitSize:uint16,nUnits:uint16,searchRange:uint16,entrySelector:uint16,rangeShift:uint16});let LookupSegmentSingle=new Struct({lastGlyph:uint16,firstGlyph:uint16,value:ValueType});let LookupSegmentArray=new Struct({lastGlyph:uint16,firstGlyph:uint16,values:new Pointer(uint16,new ArrayT(ValueType,(t)=>t.lastGlyph-t.firstGlyph+1),{type:"parent"})});let LookupSingle=new Struct({glyph:uint16,value:ValueType});return new VersionedStruct(uint16,{0:{values:new $6cb7dd5f47d82580$export$c5af1eebc882e39a(ValueType)
},2:{binarySearchHeader:BinarySearchHeader,segments:new ArrayT(LookupSegmentSingle,(t)=>t.binarySearchHeader.nUnits)},4:{binarySearchHeader:BinarySearchHeader,segments:new ArrayT(LookupSegmentArray,(t)=>t.binarySearchHeader.nUnits)},6:{binarySearchHeader:BinarySearchHeader,segments:new ArrayT(LookupSingle,(t)=>t.binarySearchHeader.nUnits)},8:{firstGlyph:uint16,count:uint16,values:new ArrayT(ValueType,"count")}});};function $6cb7dd5f47d82580$export$79f7d93d790934ba(entryData={},lookupType=uint16){let entry=Object.assign({newState:uint16,flags:uint16},entryData);let Entry=new Struct(entry);let StateArray=new $6cb7dd5f47d82580$export$c5af1eebc882e39a(new ArrayT(uint16,(t)=>t.nClasses));let StateHeader=new Struct({nClasses:uint32,classTable:new Pointer(uint32,new $6cb7dd5f47d82580$export$8351f8c2ae2f103c(lookupType)),stateArray:new Pointer(uint32,StateArray),entryTable:new Pointer(uint32,new $6cb7dd5f47d82580$export$c5af1eebc882e39a(Entry))});return StateHeader;}
function $6cb7dd5f47d82580$export$105027425199cc51(entryData={},lookupType=uint16){let ClassLookupTable=new Struct({version(){return 8;},firstGlyph:uint16,values:new ArrayT(uint8,uint16)});let entry=Object.assign({newStateOffset:uint16,newState:(t)=>(t.newStateOffset-(t.parent.stateArray.base-t.parent._startOffset))/t.parent.nClasses,flags:uint16},entryData);let Entry=new Struct(entry);let StateArray=new $6cb7dd5f47d82580$export$c5af1eebc882e39a(new ArrayT(uint8,(t)=>t.nClasses));let StateHeader1=new Struct({nClasses:uint16,classTable:new Pointer(uint16,ClassLookupTable),stateArray:new Pointer(uint16,StateArray),entryTable:new Pointer(uint16,new $6cb7dd5f47d82580$export$c5af1eebc882e39a(Entry))});return StateHeader1;}
var $6a3746e8c708f5a3$var$BslnSubtable=new VersionedStruct("format",{0:{deltas:new ArrayT(int16,32)},1:{deltas:new ArrayT(int16,32),mappingData:new(0,$6cb7dd5f47d82580$export$8351f8c2ae2f103c)(uint16)},2:{standardGlyph:uint16,controlPoints:new ArrayT(uint16,32)},3:{standardGlyph:uint16,controlPoints:new ArrayT(uint16,32),mappingData:new(0,$6cb7dd5f47d82580$export$8351f8c2ae2f103c)(uint16)}});var $6a3746e8c708f5a3$export$2e2bcd8739ae039=new Struct({version:fixed32,format:uint16,defaultBaseline:uint16,subtable:$6a3746e8c708f5a3$var$BslnSubtable});var $d0c76fac617b308a$var$Setting=new Struct({setting:uint16,nameIndex:int16,name:(t)=>t.parent.parent.parent.name.records.fontFeatures[t.nameIndex]});var $d0c76fac617b308a$var$FeatureName=new Struct({feature:uint16,nSettings:uint16,settingTable:new Pointer(uint32,new ArrayT($d0c76fac617b308a$var$Setting,"nSettings"),{type:"parent"}),featureFlags:new Bitfield(uint8,[null,null,null,null,null,null,"hasDefault","exclusive"]),defaultSetting:uint8,nameIndex:int16,name:(t)=>t.parent.parent.name.records.fontFeatures[t.nameIndex]});var $d0c76fac617b308a$export$2e2bcd8739ae039=new Struct({version:fixed32,featureNameCount:uint16,reserved1:new Reserved(uint16),reserved2:new Reserved(uint32),featureNames:new ArrayT($d0c76fac617b308a$var$FeatureName,"featureNameCount")});var $e83fd065f00fcd01$var$Axis=new Struct({axisTag:new StringT(4),minValue:fixed32,defaultValue:fixed32,maxValue:fixed32,flags:uint16,nameID:uint16,name:(t)=>t.parent.parent.name.records.fontFeatures[t.nameID]});var $e83fd065f00fcd01$var$Instance=new Struct({nameID:uint16,name:(t)=>t.parent.parent.name.records.fontFeatures[t.nameID],flags:uint16,coord:new ArrayT(fixed32,(t)=>t.parent.axisCount),postscriptNameID:new Optional(uint16,(t)=>t.parent.instanceSize-t._currentOffset>0)});var $e83fd065f00fcd01$export$2e2bcd8739ae039=new Struct({version:fixed32,offsetToData:uint16,countSizePairs:uint16,axisCount:uint16,axisSize:uint16,instanceCount:uint16,instanceSize:uint16,axis:new ArrayT($e83fd065f00fcd01$var$Axis,"axisCount"),instance:new ArrayT($e83fd065f00fcd01$var$Instance,"instanceCount")});var $dbe33c8d3a7f131c$var$shortFrac=new Fixed(16,"BE",14);var $dbe33c8d3a7f131c$var$Offset=class{static decode(stream,parent){return parent.flags?stream.readUInt32BE():stream.readUInt16BE()*2;}};var $dbe33c8d3a7f131c$var$gvar=new Struct({version:uint16,reserved:new Reserved(uint16),axisCount:uint16,globalCoordCount:uint16,globalCoords:new Pointer(uint32,new ArrayT(new ArrayT($dbe33c8d3a7f131c$var$shortFrac,"axisCount"),"globalCoordCount")),glyphCount:uint16,flags:uint16,offsetToData:uint32,offsets:new ArrayT(new Pointer($dbe33c8d3a7f131c$var$Offset,"void",{relativeTo:(ctx2)=>ctx2.offsetToData,allowNull:false}),(t)=>t.glyphCount+1)});var $dbe33c8d3a7f131c$export$2e2bcd8739ae039=$dbe33c8d3a7f131c$var$gvar;var $05b01887df96c4ee$var$ClassTable=new Struct({length:uint16,coverage:uint16,subFeatureFlags:uint32,stateTable:new(0,$6cb7dd5f47d82580$export$105027425199cc51)()});var $05b01887df96c4ee$var$WidthDeltaRecord=new Struct({justClass:uint32,beforeGrowLimit:fixed32,beforeShrinkLimit:fixed32,afterGrowLimit:fixed32,afterShrinkLimit:fixed32,growFlags:uint16,shrinkFlags:uint16});var $05b01887df96c4ee$var$WidthDeltaCluster=new ArrayT($05b01887df96c4ee$var$WidthDeltaRecord,uint32);var $05b01887df96c4ee$var$ActionData=new VersionedStruct("actionType",{0:{lowerLimit:fixed32,upperLimit:fixed32,order:uint16,glyphs:new ArrayT(uint16,uint16)},1:{addGlyph:uint16},2:{substThreshold:fixed32,addGlyph:uint16,substGlyph:uint16},3:{},4:{variationAxis:uint32,minimumLimit:fixed32,noStretchValue:fixed32,maximumLimit:fixed32},5:{flags:uint16,glyph:uint16}});var $05b01887df96c4ee$var$Action=new Struct({actionClass:uint16,actionType:uint16,actionLength:uint32,actionData:$05b01887df96c4ee$var$ActionData,padding:new Reserved(uint8,(t)=>t.actionLength-t._currentOffset)});var $05b01887df96c4ee$var$PostcompensationAction=new ArrayT($05b01887df96c4ee$var$Action,uint32);var $05b01887df96c4ee$var$PostCompensationTable=new Struct({lookupTable:new(0,$6cb7dd5f47d82580$export$8351f8c2ae2f103c)(new Pointer(uint16,$05b01887df96c4ee$var$PostcompensationAction))});var $05b01887df96c4ee$var$JustificationTable=new Struct({classTable:new Pointer(uint16,$05b01887df96c4ee$var$ClassTable,{type:"parent"}),wdcOffset:uint16,postCompensationTable:new Pointer(uint16,$05b01887df96c4ee$var$PostCompensationTable,{type:"parent"}),widthDeltaClusters:new(0,$6cb7dd5f47d82580$export$8351f8c2ae2f103c)(new Pointer(uint16,$05b01887df96c4ee$var$WidthDeltaCluster,{type:"parent",relativeTo:(ctx2)=>ctx2.wdcOffset}))});var $05b01887df96c4ee$export$2e2bcd8739ae039=new Struct({version:uint32,format:uint16,horizontal:new Pointer(uint16,$05b01887df96c4ee$var$JustificationTable),vertical:new Pointer(uint16,$05b01887df96c4ee$var$JustificationTable)});var $03ee6ebd54db1053$var$LigatureData={action:uint16};var $03ee6ebd54db1053$var$ContextualData={markIndex:uint16,currentIndex:uint16};var $03ee6ebd54db1053$var$InsertionData={currentInsertIndex:uint16,markedInsertIndex:uint16};var $03ee6ebd54db1053$var$SubstitutionTable=new Struct({items:new(0,$6cb7dd5f47d82580$export$c5af1eebc882e39a)(new Pointer(uint32,new(0,$6cb7dd5f47d82580$export$8351f8c2ae2f103c)()))});var $03ee6ebd54db1053$var$SubtableData=new VersionedStruct("type",{0:{stateTable:new(0,$6cb7dd5f47d82580$export$79f7d93d790934ba)()},1:{stateTable:new(0,$6cb7dd5f47d82580$export$79f7d93d790934ba)($03ee6ebd54db1053$var$ContextualData),substitutionTable:new Pointer(uint32,$03ee6ebd54db1053$var$SubstitutionTable)},2:{stateTable:new(0,$6cb7dd5f47d82580$export$79f7d93d790934ba)($03ee6ebd54db1053$var$LigatureData),ligatureActions:new Pointer(uint32,new(0,$6cb7dd5f47d82580$export$c5af1eebc882e39a)(uint32)),components:new Pointer(uint32,new(0,$6cb7dd5f47d82580$export$c5af1eebc882e39a)(uint16)),ligatureList:new Pointer(uint32,new(0,$6cb7dd5f47d82580$export$c5af1eebc882e39a)(uint16))},4:{lookupTable:new(0,$6cb7dd5f47d82580$export$8351f8c2ae2f103c)()},5:{stateTable:new(0,$6cb7dd5f47d82580$export$79f7d93d790934ba)($03ee6ebd54db1053$var$InsertionData),insertionActions:new Pointer(uint32,new(0,$6cb7dd5f47d82580$export$c5af1eebc882e39a)(uint16))}});var $03ee6ebd54db1053$var$Subtable=new Struct({length:uint32,coverage:uint24,type:uint8,subFeatureFlags:uint32,table:$03ee6ebd54db1053$var$SubtableData,padding:new Reserved(uint8,(t)=>t.length-t._currentOffset)});var $03ee6ebd54db1053$var$FeatureEntry=new Struct({featureType:uint16,featureSetting:uint16,enableFlags:uint32,disableFlags:uint32});var $03ee6ebd54db1053$var$MorxChain=new Struct({defaultFlags:uint32,chainLength:uint32,nFeatureEntries:uint32,nSubtables:uint32,features:new ArrayT($03ee6ebd54db1053$var$FeatureEntry,"nFeatureEntries"),subtables:new ArrayT($03ee6ebd54db1053$var$Subtable,"nSubtables")});var $03ee6ebd54db1053$export$2e2bcd8739ae039=new Struct({version:uint16,unused:new Reserved(uint16),nChains:uint32,chains:new ArrayT($03ee6ebd54db1053$var$MorxChain,"nChains")});var $b7492a80b0d1a056$var$OpticalBounds=new Struct({left:int16,top:int16,right:int16,bottom:int16});var $b7492a80b0d1a056$export$2e2bcd8739ae039=new Struct({version:fixed32,format:uint16,lookupTable:new(0,$6cb7dd5f47d82580$export$8351f8c2ae2f103c)($b7492a80b0d1a056$var$OpticalBounds)});var $c3395722bea751e2$var$tables={};var $c3395722bea751e2$export$2e2bcd8739ae039=$c3395722bea751e2$var$tables;$c3395722bea751e2$var$tables.cmap=(0,$26a62205ad06574e$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.head=(0,$f2612a29f92ac062$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.hhea=(0,$2c179dd593583073$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.hmtx=(0,$bdc9060542264b85$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.maxp=(0,$dbf51cb3d3fe409d$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.name=(0,$2bcf221753ec8e32$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables["OS/2"]=(0,$84b272aa31b70606$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.post=(0,$32d9e2eb9565d93c$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.fpgm=(0,$5c0f37ca5ffb1850$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.loca=(0,$2b2b260902b1c57e$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.prep=(0,$7afb878c7bea4f66$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables["cvt "]=(0,$5202bd9d9ad8eaac$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.glyf=(0,$6c92b6371bce8bd9$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables["CFF "]=(0,$822ac0d589e4e237$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables["CFF2"]=(0,$822ac0d589e4e237$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.VORG=(0,$2bbf2bc1ce37cd8f$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.EBLC=(0,$9911c4c7201c13de$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.CBLC=$c3395722bea751e2$var$tables.EBLC;$c3395722bea751e2$var$tables.sbix=(0,$abb847051efd51b1$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.COLR=(0,$eb629188f3dfefdd$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.CPAL=(0,$08734b8e7dc64587$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.BASE=(0,$497cef411d884e34$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.GDEF=(0,$cf5f33c63ef209e6$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.GPOS=(0,$47e0e8ef515d9903$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.GSUB=(0,$d3f442064af66e06$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.JSTF=(0,$71cfb3c4767fbd0c$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.HVAR=(0,$d059a6bd2d3b5b63$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.DSIG=(0,$dceeca3e1977ce30$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.gasp=(0,$8acd740a9435aad0$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.hdmx=(0,$b5f380243c34d6a0$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.kern=(0,$ca2df1256966e313$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.LTSH=(0,$7a9f92b0c46ebe33$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.PCLT=(0,$2b2ccc419d152631$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.VDMX=(0,$ca5b40b9bcda9c9b$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.vhea=(0,$69530a3c40755af0$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.vmtx=(0,$344073dd270f0e62$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.avar=(0,$3793b781918cfced$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.bsln=(0,$6a3746e8c708f5a3$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.feat=(0,$d0c76fac617b308a$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.fvar=(0,$e83fd065f00fcd01$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.gvar=(0,$dbe33c8d3a7f131c$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.just=(0,$05b01887df96c4ee$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.morx=(0,$03ee6ebd54db1053$export$2e2bcd8739ae039);$c3395722bea751e2$var$tables.opbd=(0,$b7492a80b0d1a056$export$2e2bcd8739ae039);var $816c07a04b6dba87$var$TableEntry=new Struct({tag:new StringT(4),checkSum:uint32,offset:new Pointer(uint32,"void",{type:"global"}),length:uint32});var $816c07a04b6dba87$var$Directory=new Struct({tag:new StringT(4),numTables:uint16,searchRange:uint16,entrySelector:uint16,rangeShift:uint16,tables:new ArrayT($816c07a04b6dba87$var$TableEntry,"numTables")});$816c07a04b6dba87$var$Directory.process=function(){let tables={};for(let table of this.tables)
tables[table.tag]=table;this.tables=tables;};$816c07a04b6dba87$var$Directory.preEncode=function(){if(!Array.isArray(this.tables)){let tables=[];for(let tag2 in this.tables){let table=this.tables[tag2];if(table)
tables.push({tag:tag2,checkSum:0,offset:new VoidPointer((0,$c3395722bea751e2$export$2e2bcd8739ae039)[tag2],table),length:(0,$c3395722bea751e2$export$2e2bcd8739ae039)[tag2].size(table)});}
this.tables=tables;}
this.tag="true";this.numTables=this.tables.length;let maxExponentFor2=Math.floor(Math.log(this.numTables)/Math.LN2);let maxPowerOf2=Math.pow(2,maxExponentFor2);this.searchRange=maxPowerOf2*16;this.entrySelector=Math.log(maxPowerOf2)/Math.LN2;this.rangeShift=this.numTables*16-this.searchRange;};var $816c07a04b6dba87$export$2e2bcd8739ae039=$816c07a04b6dba87$var$Directory;function $12727730ddfc8bfe$export$2e0ae67339d5f1ac(arr2,cmp){let min4=0;let max4=arr2.length-1;while(min4<=max4){let mid=min4+max4>>1;let res=cmp(arr2[mid]);if(res<0)
max4=mid-1;else if(res>0)
min4=mid+1;else
return mid;}
return-1;}
function $12727730ddfc8bfe$export$d02631cccf789723(index2,end){let range1=[];while(index2<end)
range1.push(index2++);return range1;}
var $12727730ddfc8bfe$export$3d28c1996ced1f14=new TextDecoder("ascii");var $12727730ddfc8bfe$var$CHARS="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";var $12727730ddfc8bfe$var$LOOKUP=new Uint8Array(256);for(let i2=0;i2<$12727730ddfc8bfe$var$CHARS.length;i2++)
$12727730ddfc8bfe$var$LOOKUP[$12727730ddfc8bfe$var$CHARS.charCodeAt(i2)]=i2;function $12727730ddfc8bfe$export$94fdf11bafc8de6b(base64){let bufferLength=base64.length*0.75;if(base64[base64.length-1]==="="){bufferLength--;if(base64[base64.length-2]==="=")
bufferLength--;}
let bytes=new Uint8Array(bufferLength);let p=0;for(let i1=0,len2=base64.length;i1<len2;i1+=4){let encoded1=$12727730ddfc8bfe$var$LOOKUP[base64.charCodeAt(i1)];let encoded2=$12727730ddfc8bfe$var$LOOKUP[base64.charCodeAt(i1+1)];let encoded3=$12727730ddfc8bfe$var$LOOKUP[base64.charCodeAt(i1+2)];let encoded4=$12727730ddfc8bfe$var$LOOKUP[base64.charCodeAt(i1+3)];bytes[p++]=encoded1<<2|encoded2>>4;bytes[p++]=(encoded2&15)<<4|encoded3>>2;bytes[p++]=(encoded3&3)<<6|encoded4&63;}
return bytes;}
var $f08dd41ef10b694c$export$2e2bcd8739ae039=class{findSubtable(cmapTable,pairs){for(let[platformID,encodingID]of pairs)
for(let cmap of cmapTable.tables){if(cmap.platformID===platformID&&cmap.encodingID===encodingID)
return cmap.table;}
return null;}
lookup(codepoint,variationSelector){if(this.encoding)
codepoint=this.encoding.get(codepoint)||codepoint;else if(variationSelector){let gid=this.getVariationSelector(codepoint,variationSelector);if(gid)
return gid;}
let cmap=this.cmap;switch(cmap.version){case 0:return cmap.codeMap.get(codepoint)||0;case 4:{let min4=0;let max4=cmap.segCount-1;while(min4<=max4){let mid=min4+max4>>1;if(codepoint<cmap.startCode.get(mid))
max4=mid-1;else if(codepoint>cmap.endCode.get(mid))
min4=mid+1;else{let rangeOffset=cmap.idRangeOffset.get(mid);let gid;if(rangeOffset===0)
gid=codepoint+cmap.idDelta.get(mid);else{let index2=rangeOffset/2+(codepoint-cmap.startCode.get(mid))-(cmap.segCount-mid);gid=cmap.glyphIndexArray.get(index2)||0;if(gid!==0)
gid+=cmap.idDelta.get(mid);}
return gid&65535;}}
return 0;}
case 8:throw new Error("TODO: cmap format 8");case 6:case 10:return cmap.glyphIndices.get(codepoint-cmap.firstCode)||0;case 12:case 13:{let min4=0;let max4=cmap.nGroups-1;while(min4<=max4){let mid=min4+max4>>1;let group=cmap.groups.get(mid);if(codepoint<group.startCharCode)
max4=mid-1;else if(codepoint>group.endCharCode)
min4=mid+1;else{if(cmap.version===12)
return group.glyphID+(codepoint-group.startCharCode);else
return group.glyphID;}}
return 0;}
case 14:throw new Error("TODO: cmap format 14");default:throw new Error(`Unknown cmap format ${cmap.version}`);}}
getVariationSelector(codepoint,variationSelector){if(!this.uvs)
return 0;let selectors=this.uvs.varSelectors.toArray();let i2=(0,$12727730ddfc8bfe$export$2e0ae67339d5f1ac)(selectors,(x2)=>variationSelector-x2.varSelector);let sel=selectors[i2];if(i2!==-1&&sel.defaultUVS)
i2=(0,$12727730ddfc8bfe$export$2e0ae67339d5f1ac)(sel.defaultUVS,(x2)=>codepoint<x2.startUnicodeValue?-1:codepoint>x2.startUnicodeValue+x2.additionalCount?1:0);if(i2!==-1&&sel.nonDefaultUVS){i2=(0,$12727730ddfc8bfe$export$2e0ae67339d5f1ac)(sel.nonDefaultUVS,(x2)=>codepoint-x2.unicodeValue);if(i2!==-1)
return sel.nonDefaultUVS[i2].glyphID;}
return 0;}
getCharacterSet(){let cmap=this.cmap;switch(cmap.version){case 0:return(0,$12727730ddfc8bfe$export$d02631cccf789723)(0,cmap.codeMap.length);case 4:{let res=[];let endCodes=cmap.endCode.toArray();for(let i2=0;i2<endCodes.length;i2++){let tail=endCodes[i2]+1;let start=cmap.startCode.get(i2);res.push(...(0,$12727730ddfc8bfe$export$d02631cccf789723)(start,tail));}
return res;}
case 8:throw new Error("TODO: cmap format 8");case 6:case 10:return(0,$12727730ddfc8bfe$export$d02631cccf789723)(cmap.firstCode,cmap.firstCode+cmap.glyphIndices.length);case 12:case 13:{let res=[];for(let group of cmap.groups.toArray())
res.push(...(0,$12727730ddfc8bfe$export$d02631cccf789723)(group.startCharCode,group.endCharCode+1));return res;}
case 14:throw new Error("TODO: cmap format 14");default:throw new Error(`Unknown cmap format ${cmap.version}`);}}
codePointsForGlyph(gid){let cmap=this.cmap;switch(cmap.version){case 0:{let res=[];for(let i2=0;i2<256;i2++)
if(cmap.codeMap.get(i2)===gid)
res.push(i2);return res;}
case 4:{let res=[];for(let i2=0;i2<cmap.segCount;i2++){let end=cmap.endCode.get(i2);let start=cmap.startCode.get(i2);let rangeOffset=cmap.idRangeOffset.get(i2);let delta=cmap.idDelta.get(i2);for(var c=start;c<=end;c++){let g=0;if(rangeOffset===0)
g=c+delta;else{let index2=rangeOffset/2+(c-start)-(cmap.segCount-i2);g=cmap.glyphIndexArray.get(index2)||0;if(g!==0)
g+=delta;}
if(g===gid)
res.push(c);}}
return res;}
case 12:{let res=[];for(let group of cmap.groups.toArray())
if(gid>=group.glyphID&&gid<=group.glyphID+(group.endCharCode-group.startCharCode))
res.push(group.startCharCode+(gid-group.glyphID));return res;}
case 13:{let res=[];for(let group of cmap.groups.toArray())
if(gid===group.glyphID)
res.push(...(0,$12727730ddfc8bfe$export$d02631cccf789723)(group.startCharCode,group.endCharCode+1));return res;}
default:throw new Error(`Unknown cmap format ${cmap.version}`);}}
constructor(cmapTable){this.encoding=null;this.cmap=this.findSubtable(cmapTable,[[3,10],[0,6],[0,4],[3,1],[0,3],[0,2],[0,1],[0,0]]);if(!this.cmap)
for(let cmap of cmapTable.tables){let encoding=(0,$e449ad78d50845fe$export$badc544e0651b6b1)(cmap.platformID,cmap.encodingID,cmap.table.language-1);let mapping=(0,$e449ad78d50845fe$export$1dceb3c14ed68bee)(encoding);if(mapping){this.cmap=cmap.table;this.encoding=mapping;}}
if(!this.cmap)
throw new Error("Could not find a supported cmap table");this.uvs=this.findSubtable(cmapTable,[[0,5]]);if(this.uvs&&this.uvs.version!==14)
this.uvs=null;}};(0,__decorate)([(0,$e71565f2ce09cb6b$export$69a3209f1a06c04d)],$f08dd41ef10b694c$export$2e2bcd8739ae039.prototype,"getCharacterSet",null);(0,__decorate)([(0,$e71565f2ce09cb6b$export$69a3209f1a06c04d)],$f08dd41ef10b694c$export$2e2bcd8739ae039.prototype,"codePointsForGlyph",null);var $0bba3a9db57637f3$export$2e2bcd8739ae039=class{process(glyphs,positions){for(let glyphIndex=0;glyphIndex<glyphs.length-1;glyphIndex++){let left=glyphs[glyphIndex].id;let right=glyphs[glyphIndex+1].id;positions[glyphIndex].xAdvance+=this.getKerning(left,right);}}
getKerning(left,right){let res=0;for(let table of this.kern.tables){if(table.coverage.crossStream)
continue;switch(table.version){case 0:if(!table.coverage.horizontal)
continue;break;case 1:if(table.coverage.vertical||table.coverage.variation)
continue;break;default:throw new Error(`Unsupported kerning table version ${table.version}`);}
let val=0;let s=table.subtable;switch(table.format){case 0:let pairIdx=(0,$12727730ddfc8bfe$export$2e0ae67339d5f1ac)(s.pairs,function(pair){return left-pair.left||right-pair.right;});if(pairIdx>=0)
val=s.pairs[pairIdx].value;break;case 2:let leftOffset=0,rightOffset=0;if(left>=s.leftTable.firstGlyph&&left<s.leftTable.firstGlyph+s.leftTable.nGlyphs)
leftOffset=s.leftTable.offsets[left-s.leftTable.firstGlyph];else
leftOffset=s.array.off;if(right>=s.rightTable.firstGlyph&&right<s.rightTable.firstGlyph+s.rightTable.nGlyphs)
rightOffset=s.rightTable.offsets[right-s.rightTable.firstGlyph];let index2=(leftOffset+rightOffset-s.array.off)/2;val=s.array.values.get(index2);break;case 3:if(left>=s.glyphCount||right>=s.glyphCount)
return 0;val=s.kernValue[s.kernIndex[s.leftClass[left]*s.rightClassCount+s.rightClass[right]]];break;default:throw new Error(`Unsupported kerning sub-table format ${table.format}`);}
if(table.coverage.override)
res=val;else
res+=val;}
return res;}
constructor(font){this.kern=font.kern;}};var $0a4bdfeb6dfd6f5e$export$2e2bcd8739ae039=class{positionGlyphs(glyphs,positions){let clusterStart=0;let clusterEnd=0;for(let index2=0;index2<glyphs.length;index2++){let glyph=glyphs[index2];if(glyph.isMark)
clusterEnd=index2;else{if(clusterStart!==clusterEnd)
this.positionCluster(glyphs,positions,clusterStart,clusterEnd);clusterStart=clusterEnd=index2;}}
if(clusterStart!==clusterEnd)
this.positionCluster(glyphs,positions,clusterStart,clusterEnd);return positions;}
positionCluster(glyphs,positions,clusterStart,clusterEnd){let base=glyphs[clusterStart];let baseBox=base.cbox.copy();if(base.codePoints.length>1)
baseBox.minX+=(base.codePoints.length-1)*baseBox.width/base.codePoints.length;let xOffset=-positions[clusterStart].xAdvance;let yOffset=0;let yGap=this.font.unitsPerEm/16;for(let index2=clusterStart+1;index2<=clusterEnd;index2++){let mark=glyphs[index2];let markBox=mark.cbox;let position2=positions[index2];let combiningClass=this.getCombiningClass(mark.codePoints[0]);if(combiningClass!=="Not_Reordered"){position2.xOffset=position2.yOffset=0;switch(combiningClass){case"Double_Above":case"Double_Below":position2.xOffset+=baseBox.minX-markBox.width/2-markBox.minX;break;case"Attached_Below_Left":case"Below_Left":case"Above_Left":position2.xOffset+=baseBox.minX-markBox.minX;break;case"Attached_Above_Right":case"Below_Right":case"Above_Right":position2.xOffset+=baseBox.maxX-markBox.width-markBox.minX;break;default:position2.xOffset+=baseBox.minX+(baseBox.width-markBox.width)/2-markBox.minX;}
switch(combiningClass){case"Double_Below":case"Below_Left":case"Below":case"Below_Right":case"Attached_Below_Left":case"Attached_Below":if(combiningClass==="Attached_Below_Left"||combiningClass==="Attached_Below")
baseBox.minY+=yGap;position2.yOffset=-baseBox.minY-markBox.maxY;baseBox.minY+=markBox.height;break;case"Double_Above":case"Above_Left":case"Above":case"Above_Right":case"Attached_Above":case"Attached_Above_Right":if(combiningClass==="Attached_Above"||combiningClass==="Attached_Above_Right")
baseBox.maxY+=yGap;position2.yOffset=baseBox.maxY-markBox.minY;baseBox.maxY+=markBox.height;break;}
position2.xAdvance=position2.yAdvance=0;position2.xOffset+=xOffset;position2.yOffset+=yOffset;}else{xOffset-=position2.xAdvance;yOffset-=position2.yAdvance;}}
return;}
getCombiningClass(codePoint){let combiningClass=(0,$747425b437e121da$export$c03b919c6651ed55)(codePoint);if((codePoint&-256)===3584){if(combiningClass==="Not_Reordered")
switch(codePoint){case 3633:case 3636:case 3637:case 3638:case 3639:case 3655:case 3660:case 3645:case 3662:return"Above_Right";case 3761:case 3764:case 3765:case 3766:case 3767:case 3771:case 3788:case 3789:return"Above";case 3772:return"Below";}
else if(codePoint===3642)
return"Below_Right";}
switch(combiningClass){case"CCC10":case"CCC11":case"CCC12":case"CCC13":case"CCC14":case"CCC15":case"CCC16":case"CCC17":case"CCC18":case"CCC20":case"CCC22":return"Below";case"CCC23":return"Attached_Above";case"CCC24":return"Above_Right";case"CCC25":case"CCC19":return"Above_Left";case"CCC26":return"Above";case"CCC21":break;case"CCC27":case"CCC28":case"CCC30":case"CCC31":case"CCC33":case"CCC34":case"CCC35":case"CCC36":return"Above";case"CCC29":case"CCC32":return"Below";case"CCC103":return"Below_Right";case"CCC107":return"Above_Right";case"CCC118":return"Below";case"CCC122":return"Above";case"CCC129":case"CCC132":return"Below";case"CCC130":return"Above";}
return combiningClass;}
constructor(font){this.font=font;}};var $f34600ab9d7f70d8$export$2e2bcd8739ae039=class _$f34600ab9d7f70d8$export$2e2bcd8739ae039{get width(){return this.maxX-this.minX;}
get height(){return this.maxY-this.minY;}
addPoint(x2,y2){if(Math.abs(x2)!==Infinity){if(x2<this.minX)
this.minX=x2;if(x2>this.maxX)
this.maxX=x2;}
if(Math.abs(y2)!==Infinity){if(y2<this.minY)
this.minY=y2;if(y2>this.maxY)
this.maxY=y2;}}
copy(){return new _$f34600ab9d7f70d8$export$2e2bcd8739ae039(this.minX,this.minY,this.maxX,this.maxY);}
constructor(minX=Infinity,minY=Infinity,maxX=-Infinity,maxY=-Infinity){this.minX=minX;this.minY=minY;this.maxX=maxX;this.maxY=maxY;}};var $130d1a642ebcd2b7$var$UNICODE_SCRIPTS={Caucasian_Albanian:"aghb",Arabic:"arab",Imperial_Aramaic:"armi",Armenian:"armn",Avestan:"avst",Balinese:"bali",Bamum:"bamu",Bassa_Vah:"bass",Batak:"batk",Bengali:["bng2","beng"],Bopomofo:"bopo",Brahmi:"brah",Braille:"brai",Buginese:"bugi",Buhid:"buhd",Chakma:"cakm",Canadian_Aboriginal:"cans",Carian:"cari",Cham:"cham",Cherokee:"cher",Coptic:"copt",Cypriot:"cprt",Cyrillic:"cyrl",Devanagari:["dev2","deva"],Deseret:"dsrt",Duployan:"dupl",Egyptian_Hieroglyphs:"egyp",Elbasan:"elba",Ethiopic:"ethi",Georgian:"geor",Glagolitic:"glag",Gothic:"goth",Grantha:"gran",Greek:"grek",Gujarati:["gjr2","gujr"],Gurmukhi:["gur2","guru"],Hangul:"hang",Han:"hani",Hanunoo:"hano",Hebrew:"hebr",Hiragana:"hira",Pahawh_Hmong:"hmng",Katakana_Or_Hiragana:"hrkt",Old_Italic:"ital",Javanese:"java",Kayah_Li:"kali",Katakana:"kana",Kharoshthi:"khar",Khmer:"khmr",Khojki:"khoj",Kannada:["knd2","knda"],Kaithi:"kthi",Tai_Tham:"lana",Lao:"lao ",Latin:"latn",Lepcha:"lepc",Limbu:"limb",Linear_A:"lina",Linear_B:"linb",Lisu:"lisu",Lycian:"lyci",Lydian:"lydi",Mahajani:"mahj",Mandaic:"mand",Manichaean:"mani",Mende_Kikakui:"mend",Meroitic_Cursive:"merc",Meroitic_Hieroglyphs:"mero",Malayalam:["mlm2","mlym"],Modi:"modi",Mongolian:"mong",Mro:"mroo",Meetei_Mayek:"mtei",Myanmar:["mym2","mymr"],Old_North_Arabian:"narb",Nabataean:"nbat",Nko:"nko ",Ogham:"ogam",Ol_Chiki:"olck",Old_Turkic:"orkh",Oriya:["ory2","orya"],Osmanya:"osma",Palmyrene:"palm",Pau_Cin_Hau:"pauc",Old_Permic:"perm",Phags_Pa:"phag",Inscriptional_Pahlavi:"phli",Psalter_Pahlavi:"phlp",Phoenician:"phnx",Miao:"plrd",Inscriptional_Parthian:"prti",Rejang:"rjng",Runic:"runr",Samaritan:"samr",Old_South_Arabian:"sarb",Saurashtra:"saur",Shavian:"shaw",Sharada:"shrd",Siddham:"sidd",Khudawadi:"sind",Sinhala:"sinh",Sora_Sompeng:"sora",Sundanese:"sund",Syloti_Nagri:"sylo",Syriac:"syrc",Tagbanwa:"tagb",Takri:"takr",Tai_Le:"tale",New_Tai_Lue:"talu",Tamil:["tml2","taml"],Tai_Viet:"tavt",Telugu:["tel2","telu"],Tifinagh:"tfng",Tagalog:"tglg",Thaana:"thaa",Thai:"thai",Tibetan:"tibt",Tirhuta:"tirh",Ugaritic:"ugar",Vai:"vai ",Warang_Citi:"wara",Old_Persian:"xpeo",Cuneiform:"xsux",Yi:"yi  ",Inherited:"zinh",Common:"zyyy",Unknown:"zzzz"};var $130d1a642ebcd2b7$var$OPENTYPE_SCRIPTS={};for(let script in $130d1a642ebcd2b7$var$UNICODE_SCRIPTS){let tag2=$130d1a642ebcd2b7$var$UNICODE_SCRIPTS[script];if(Array.isArray(tag2))
for(let t of tag2)
$130d1a642ebcd2b7$var$OPENTYPE_SCRIPTS[t]=script;else
$130d1a642ebcd2b7$var$OPENTYPE_SCRIPTS[tag2]=script;}
function $130d1a642ebcd2b7$export$ce50e82f12a827a4(tag2){return $130d1a642ebcd2b7$var$OPENTYPE_SCRIPTS[tag2];}
function $130d1a642ebcd2b7$export$e5cb25e204fb8450(string){let len2=string.length;let idx=0;while(idx<len2){let code=string.charCodeAt(idx++);if(55296<=code&&code<=56319&&idx<len2){let next=string.charCodeAt(idx);if(56320<=next&&next<=57343){idx++;code=((code&1023)<<10)+(next&1023)+65536;}}
let script2=(0,$747425b437e121da$export$941569448d136665)(code);if(script2!=="Common"&&script2!=="Inherited"&&script2!=="Unknown")
return $130d1a642ebcd2b7$var$UNICODE_SCRIPTS[script2];}
return $130d1a642ebcd2b7$var$UNICODE_SCRIPTS.Unknown;}
function $130d1a642ebcd2b7$export$16fab0757cfc223d(codePoints){for(let i2=0;i2<codePoints.length;i2++){let codePoint=codePoints[i2];let script3=(0,$747425b437e121da$export$941569448d136665)(codePoint);if(script3!=="Common"&&script3!=="Inherited"&&script3!=="Unknown")
return $130d1a642ebcd2b7$var$UNICODE_SCRIPTS[script3];}
return $130d1a642ebcd2b7$var$UNICODE_SCRIPTS.Unknown;}
var $130d1a642ebcd2b7$var$RTL={arab:true,hebr:true,syrc:true,thaa:true,cprt:true,khar:true,phnx:true,"nko ":true,lydi:true,avst:true,armi:true,phli:true,prti:true,sarb:true,orkh:true,samr:true,mand:true,merc:true,mero:true,mani:true,mend:true,nbat:true,narb:true,palm:true,phlp:true
};function $130d1a642ebcd2b7$export$9fddb9d0dd7d8a54(script4){if($130d1a642ebcd2b7$var$RTL[script4])
return"rtl";return"ltr";}
var $be07b3e97a42687a$export$2e2bcd8739ae039=class{get advanceWidth(){let width2=0;for(let position2 of this.positions)
width2+=position2.xAdvance;return width2;}
get advanceHeight(){let height=0;for(let position2 of this.positions)
height+=position2.yAdvance;return height;}
get bbox(){let bbox=new(0,$f34600ab9d7f70d8$export$2e2bcd8739ae039)();let x2=0;let y2=0;for(let index2=0;index2<this.glyphs.length;index2++){let glyph=this.glyphs[index2];let p=this.positions[index2];let b10=glyph.bbox;bbox.addPoint(b10.minX+x2+p.xOffset,b10.minY+y2+p.yOffset);bbox.addPoint(b10.maxX+x2+p.xOffset,b10.maxY+y2+p.yOffset);x2+=p.xAdvance;y2+=p.yAdvance;}
return bbox;}
constructor(glyphs,features,script,language,direction3){this.glyphs=glyphs;this.positions=null;this.script=script;this.language=language||null;this.direction=direction3||$130d1a642ebcd2b7$export$9fddb9d0dd7d8a54(script);this.features={};if(Array.isArray(features))
for(let tag2 of features)
this.features[tag2]=true;else if(typeof features==="object")
this.features=features;}};var $1ac75d9a55b67f01$export$2e2bcd8739ae039=class{constructor(xAdvance=0,yAdvance=0,xOffset=0,yOffset=0){this.xAdvance=xAdvance;this.yAdvance=yAdvance;this.xOffset=xOffset;this.yOffset=yOffset;}};var $3b6302b64eccc32c$var$features={allTypographicFeatures:{code:0,exclusive:false,allTypeFeatures:0},ligatures:{code:1,exclusive:false,requiredLigatures:0,commonLigatures:2,rareLigatures:4,rebusPictures:8,diphthongLigatures:10,squaredLigatures:12,abbrevSquaredLigatures:14,symbolLigatures:16,contextualLigatures:18,historicalLigatures:20},cursiveConnection:{code:2,exclusive:true,unconnected:0,partiallyConnected:1,cursive:2},letterCase:{code:3,exclusive:true},verticalSubstitution:{code:4,exclusive:false,substituteVerticalForms:0},linguisticRearrangement:{code:5,exclusive:false,linguisticRearrangement:0},numberSpacing:{code:6,exclusive:true,monospacedNumbers:0,proportionalNumbers:1,thirdWidthNumbers:2,quarterWidthNumbers:3},smartSwash:{code:8,exclusive:false,wordInitialSwashes:0,wordFinalSwashes:2,nonFinalSwashes:8},diacritics:{code:9,exclusive:true,showDiacritics:0,hideDiacritics:1,decomposeDiacritics:2},verticalPosition:{code:10,exclusive:true,normalPosition:0,superiors:1,inferiors:2,ordinals:3,scientificInferiors:4},fractions:{code:11,exclusive:true,noFractions:0,verticalFractions:1,diagonalFractions:2},overlappingCharacters:{code:13,exclusive:false,preventOverlap:0},typographicExtras:{code:14,exclusive:false,slashedZero:4},mathematicalExtras:{code:15,exclusive:false,mathematicalGreek:10},ornamentSets:{code:16,exclusive:true,noOrnaments:0,dingbats:1,piCharacters:2,fleurons:3,decorativeBorders:4,internationalSymbols:5,mathSymbols:6},characterAlternatives:{code:17,exclusive:true,noAlternates:0},designComplexity:{code:18,exclusive:true,designLevel1:0,designLevel2:1,designLevel3:2,designLevel4:3,designLevel5:4},styleOptions:{code:19,exclusive:true,noStyleOptions:0,displayText:1,engravedText:2,illuminatedCaps:3,titlingCaps:4,tallCaps:5},characterShape:{code:20,exclusive:true,traditionalCharacters:0,simplifiedCharacters:1,JIS1978Characters:2,JIS1983Characters:3,JIS1990Characters:4,traditionalAltOne:5,traditionalAltTwo:6,traditionalAltThree:7,traditionalAltFour:8,traditionalAltFive:9,expertCharacters:10,JIS2004Characters:11,hojoCharacters:12,NLCCharacters:13,traditionalNamesCharacters:14},numberCase:{code:21,exclusive:true,lowerCaseNumbers:0,upperCaseNumbers:1},textSpacing:{code:22,exclusive:true,proportionalText:0,monospacedText:1,halfWidthText:2,thirdWidthText:3,quarterWidthText:4,altProportionalText:5,altHalfWidthText:6},transliteration:{code:23,exclusive:true,noTransliteration:0},annotation:{code:24,exclusive:true,noAnnotation:0,boxAnnotation:1,roundedBoxAnnotation:2,circleAnnotation:3,invertedCircleAnnotation:4,parenthesisAnnotation:5,periodAnnotation:6,romanNumeralAnnotation:7,diamondAnnotation:8,invertedBoxAnnotation:9,invertedRoundedBoxAnnotation:10},kanaSpacing:{code:25,exclusive:true,fullWidthKana:0,proportionalKana:1},ideographicSpacing:{code:26,exclusive:true,fullWidthIdeographs:0,proportionalIdeographs:1,halfWidthIdeographs:2},unicodeDecomposition:{code:27,exclusive:false,canonicalComposition:0,compatibilityComposition:2,transcodingComposition:4},rubyKana:{code:28,exclusive:false,rubyKana:2},CJKSymbolAlternatives:{code:29,exclusive:true,noCJKSymbolAlternatives:0,CJKSymbolAltOne:1,CJKSymbolAltTwo:2,CJKSymbolAltThree:3,CJKSymbolAltFour:4,CJKSymbolAltFive:5},ideographicAlternatives:{code:30,exclusive:true,noIdeographicAlternatives:0,ideographicAltOne:1,ideographicAltTwo:2,ideographicAltThree:3,ideographicAltFour:4,ideographicAltFive:5},CJKVerticalRomanPlacement:{code:31,exclusive:true,CJKVerticalRomanCentered:0,CJKVerticalRomanHBaseline:1},italicCJKRoman:{code:32,exclusive:false,CJKItalicRoman:2},caseSensitiveLayout:{code:33,exclusive:false,caseSensitiveLayout:0,caseSensitiveSpacing:2},alternateKana:{code:34,exclusive:false,alternateHorizKana:0,alternateVertKana:2},stylisticAlternatives:{code:35,exclusive:false,noStylisticAlternates:0,stylisticAltOne:2,stylisticAltTwo:4,stylisticAltThree:6,stylisticAltFour:8,stylisticAltFive:10,stylisticAltSix:12,stylisticAltSeven:14,stylisticAltEight:16,stylisticAltNine:18,stylisticAltTen:20,stylisticAltEleven:22,stylisticAltTwelve:24,stylisticAltThirteen:26,stylisticAltFourteen:28,stylisticAltFifteen:30,stylisticAltSixteen:32,stylisticAltSeventeen:34,stylisticAltEighteen:36,stylisticAltNineteen:38,stylisticAltTwenty:40},contextualAlternates:{code:36,exclusive:false,contextualAlternates:0,swashAlternates:2,contextualSwashAlternates:4},lowerCase:{code:37,exclusive:true,defaultLowerCase:0,lowerCaseSmallCaps:1,lowerCasePetiteCaps:2},upperCase:{code:38,exclusive:true,defaultUpperCase:0,upperCaseSmallCaps:1,upperCasePetiteCaps:2},languageTag:{code:39,exclusive:true},CJKRomanSpacing:{code:103,exclusive:true,halfWidthCJKRoman:0,proportionalCJKRoman:1,defaultCJKRoman:2,fullWidthCJKRoman:3}};var $3b6302b64eccc32c$var$feature=(name,selector)=>[$3b6302b64eccc32c$var$features[name].code,$3b6302b64eccc32c$var$features[name][selector]];var $3b6302b64eccc32c$var$OTMapping={rlig:$3b6302b64eccc32c$var$feature("ligatures","requiredLigatures"),clig:$3b6302b64eccc32c$var$feature("ligatures","contextualLigatures"),dlig:$3b6302b64eccc32c$var$feature("ligatures","rareLigatures"),hlig:$3b6302b64eccc32c$var$feature("ligatures","historicalLigatures"),liga:$3b6302b64eccc32c$var$feature("ligatures","commonLigatures"),hist:$3b6302b64eccc32c$var$feature("ligatures","historicalLigatures"),smcp:$3b6302b64eccc32c$var$feature("lowerCase","lowerCaseSmallCaps"),pcap:$3b6302b64eccc32c$var$feature("lowerCase","lowerCasePetiteCaps"),frac:$3b6302b64eccc32c$var$feature("fractions","diagonalFractions"),dnom:$3b6302b64eccc32c$var$feature("fractions","diagonalFractions"),numr:$3b6302b64eccc32c$var$feature("fractions","diagonalFractions"),afrc:$3b6302b64eccc32c$var$feature("fractions","verticalFractions"),case:$3b6302b64eccc32c$var$feature("caseSensitiveLayout","caseSensitiveLayout"),ccmp:$3b6302b64eccc32c$var$feature("unicodeDecomposition","canonicalComposition"),cpct:$3b6302b64eccc32c$var$feature("CJKVerticalRomanPlacement","CJKVerticalRomanCentered"),valt:$3b6302b64eccc32c$var$feature("CJKVerticalRomanPlacement","CJKVerticalRomanCentered"),swsh:$3b6302b64eccc32c$var$feature("contextualAlternates","swashAlternates"),cswh:$3b6302b64eccc32c$var$feature("contextualAlternates","contextualSwashAlternates"),curs:$3b6302b64eccc32c$var$feature("cursiveConnection","cursive"),c2pc:$3b6302b64eccc32c$var$feature("upperCase","upperCasePetiteCaps"),c2sc:$3b6302b64eccc32c$var$feature("upperCase","upperCaseSmallCaps"),init:$3b6302b64eccc32c$var$feature("smartSwash","wordInitialSwashes"),fin2:$3b6302b64eccc32c$var$feature("smartSwash","wordFinalSwashes"),medi:$3b6302b64eccc32c$var$feature("smartSwash","nonFinalSwashes"),med2:$3b6302b64eccc32c$var$feature("smartSwash","nonFinalSwashes"),fin3:$3b6302b64eccc32c$var$feature("smartSwash","wordFinalSwashes"),fina:$3b6302b64eccc32c$var$feature("smartSwash","wordFinalSwashes"),pkna:$3b6302b64eccc32c$var$feature("kanaSpacing","proportionalKana"),half:$3b6302b64eccc32c$var$feature("textSpacing","halfWidthText"),halt:$3b6302b64eccc32c$var$feature("textSpacing","altHalfWidthText"),hkna:$3b6302b64eccc32c$var$feature("alternateKana","alternateHorizKana"),vkna:$3b6302b64eccc32c$var$feature("alternateKana","alternateVertKana"),ital:$3b6302b64eccc32c$var$feature("italicCJKRoman","CJKItalicRoman"),lnum:$3b6302b64eccc32c$var$feature("numberCase","upperCaseNumbers"),onum:$3b6302b64eccc32c$var$feature("numberCase","lowerCaseNumbers"),mgrk:$3b6302b64eccc32c$var$feature("mathematicalExtras","mathematicalGreek"),calt:$3b6302b64eccc32c$var$feature("contextualAlternates","contextualAlternates"),vrt2:$3b6302b64eccc32c$var$feature("verticalSubstitution","substituteVerticalForms"),vert:$3b6302b64eccc32c$var$feature("verticalSubstitution","substituteVerticalForms"),tnum:$3b6302b64eccc32c$var$feature("numberSpacing","monospacedNumbers"),pnum:$3b6302b64eccc32c$var$feature("numberSpacing","proportionalNumbers"),sups:$3b6302b64eccc32c$var$feature("verticalPosition","superiors"),subs:$3b6302b64eccc32c$var$feature("verticalPosition","inferiors"),ordn:$3b6302b64eccc32c$var$feature("verticalPosition","ordinals"),pwid:$3b6302b64eccc32c$var$feature("textSpacing","proportionalText"),hwid:$3b6302b64eccc32c$var$feature("textSpacing","halfWidthText"),qwid:$3b6302b64eccc32c$var$feature("textSpacing","quarterWidthText"),twid:$3b6302b64eccc32c$var$feature("textSpacing","thirdWidthText"),fwid:$3b6302b64eccc32c$var$feature("textSpacing","proportionalText"),palt:$3b6302b64eccc32c$var$feature("textSpacing","altProportionalText"),trad:$3b6302b64eccc32c$var$feature("characterShape","traditionalCharacters"),smpl:$3b6302b64eccc32c$var$feature("characterShape","simplifiedCharacters"),jp78:$3b6302b64eccc32c$var$feature("characterShape","JIS1978Characters"),jp83:$3b6302b64eccc32c$var$feature("characterShape","JIS1983Characters"),jp90:$3b6302b64eccc32c$var$feature("characterShape","JIS1990Characters"),jp04:$3b6302b64eccc32c$var$feature("characterShape","JIS2004Characters"),expt:$3b6302b64eccc32c$var$feature("characterShape","expertCharacters"),hojo:$3b6302b64eccc32c$var$feature("characterShape","hojoCharacters"),nlck:$3b6302b64eccc32c$var$feature("characterShape","NLCCharacters"),tnam:$3b6302b64eccc32c$var$feature("characterShape","traditionalNamesCharacters"),ruby:$3b6302b64eccc32c$var$feature("rubyKana","rubyKana"),titl:$3b6302b64eccc32c$var$feature("styleOptions","titlingCaps"),zero:$3b6302b64eccc32c$var$feature("typographicExtras","slashedZero"),ss01:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltOne"),ss02:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltTwo"),ss03:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltThree"),ss04:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltFour"),ss05:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltFive"),ss06:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltSix"),ss07:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltSeven"),ss08:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltEight"),ss09:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltNine"),ss10:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltTen"),ss11:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltEleven"),ss12:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltTwelve"),ss13:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltThirteen"),ss14:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltFourteen"),ss15:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltFifteen"),ss16:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltSixteen"),ss17:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltSeventeen"),ss18:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltEighteen"),ss19:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltNineteen"),ss20:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltTwenty")};for(let i2=1;i2<=99;i2++)
$3b6302b64eccc32c$var$OTMapping[`cv${`00${i2}`.slice(-2)}`]=[$3b6302b64eccc32c$var$features.characterAlternatives.code,i2];var $3b6302b64eccc32c$var$AATMapping={};for(let ot in $3b6302b64eccc32c$var$OTMapping){let aat=$3b6302b64eccc32c$var$OTMapping[ot];if($3b6302b64eccc32c$var$AATMapping[aat[0]]==null)
$3b6302b64eccc32c$var$AATMapping[aat[0]]={};$3b6302b64eccc32c$var$AATMapping[aat[0]][aat[1]]=ot;}
function $3b6302b64eccc32c$export$b813f7d2a1677c16(features1){let res={};for(let k in features1){let r;if(r=$3b6302b64eccc32c$var$OTMapping[k]){if(res[r[0]]==null)
res[r[0]]={};res[r[0]][r[1]]=features1[k];}}
return res;}
function $3b6302b64eccc32c$var$mapFeatureStrings(f){let[type,setting]=f;if(isNaN(type))
var typeCode=$3b6302b64eccc32c$var$features[type]&&$3b6302b64eccc32c$var$features[type].code;else
var typeCode=type;if(isNaN(setting))
var settingCode=$3b6302b64eccc32c$var$features[type]&&$3b6302b64eccc32c$var$features[type][setting];else
var settingCode=setting;return[typeCode,settingCode];}
function $3b6302b64eccc32c$export$bd6df347a4f391c4(features2){let res={};if(Array.isArray(features2))
for(let k=0;k<features2.length;k++){let r;let f=$3b6302b64eccc32c$var$mapFeatureStrings(features2[k]);if(r=$3b6302b64eccc32c$var$AATMapping[f[0]]&&$3b6302b64eccc32c$var$AATMapping[f[0]][f[1]])
res[r]=true;}
else if(typeof features2==="object")
for(let type in features2){let feature1=features2[type];for(let setting in feature1){let r;let f=$3b6302b64eccc32c$var$mapFeatureStrings([type,setting]);if(feature1[setting]&&(r=$3b6302b64eccc32c$var$AATMapping[f[0]]&&$3b6302b64eccc32c$var$AATMapping[f[0]][f[1]]))
res[r]=true;}}
return Object.keys(res);}
var $ff5ce077dae0f144$export$2e2bcd8739ae039=class{lookup(glyph){switch(this.table.version){case 0:return this.table.values.getItem(glyph);case 2:case 4:{let min4=0;let max4=this.table.binarySearchHeader.nUnits-1;while(min4<=max4){var mid=min4+max4>>1;var seg=this.table.segments[mid];if(seg.firstGlyph===65535)
return null;if(glyph<seg.firstGlyph)
max4=mid-1;else if(glyph>seg.lastGlyph)
min4=mid+1;else{if(this.table.version===2)
return seg.value;else
return seg.values[glyph-seg.firstGlyph];}}
return null;}
case 6:{let min4=0;let max4=this.table.binarySearchHeader.nUnits-1;while(min4<=max4){var mid=min4+max4>>1;var seg=this.table.segments[mid];if(seg.glyph===65535)
return null;if(glyph<seg.glyph)
max4=mid-1;else if(glyph>seg.glyph)
min4=mid+1;else
return seg.value;}
return null;}
case 8:return this.table.values[glyph-this.table.firstGlyph];default:throw new Error(`Unknown lookup table format:${this.table.version}`);}}
glyphsForValue(classValue){let res=[];switch(this.table.version){case 2:case 4:for(let segment of this.table.segments)
if(this.table.version===2&&segment.value===classValue)
res.push(...(0,$12727730ddfc8bfe$export$d02631cccf789723)(segment.firstGlyph,segment.lastGlyph+1));else{for(let index2=0;index2<segment.values.length;index2++)
if(segment.values[index2]===classValue)
res.push(segment.firstGlyph+index2);}
break;case 6:for(let segment1 of this.table.segments)
if(segment1.value===classValue)
res.push(segment1.glyph);break;case 8:for(let i2=0;i2<this.table.values.length;i2++)
if(this.table.values[i2]===classValue)
res.push(this.table.firstGlyph+i2);break;default:throw new Error(`Unknown lookup table format:${this.table.version}`);}
return res;}
constructor(table){this.table=table;}};(0,__decorate)([(0,$e71565f2ce09cb6b$export$69a3209f1a06c04d)],$ff5ce077dae0f144$export$2e2bcd8739ae039.prototype,"glyphsForValue",null);var $50c7aac9316f2948$var$START_OF_TEXT_STATE=0;var $50c7aac9316f2948$var$END_OF_TEXT_CLASS=0;var $50c7aac9316f2948$var$OUT_OF_BOUNDS_CLASS=1;var $50c7aac9316f2948$var$DELETED_GLYPH_CLASS=2;var $50c7aac9316f2948$var$DONT_ADVANCE=16384;var $50c7aac9316f2948$export$2e2bcd8739ae039=class{process(glyphs,reverse,processEntry){let currentState=$50c7aac9316f2948$var$START_OF_TEXT_STATE;let index2=reverse?glyphs.length-1:0;let dir=reverse?-1:1;while(dir===1&&index2<=glyphs.length||dir===-1&&index2>=-1){let glyph=null;let classCode=$50c7aac9316f2948$var$OUT_OF_BOUNDS_CLASS;let shouldAdvance=true;if(index2===glyphs.length||index2===-1)
classCode=$50c7aac9316f2948$var$END_OF_TEXT_CLASS;else{glyph=glyphs[index2];if(glyph.id===65535)
classCode=$50c7aac9316f2948$var$DELETED_GLYPH_CLASS;else{classCode=this.lookupTable.lookup(glyph.id);if(classCode==null)
classCode=$50c7aac9316f2948$var$OUT_OF_BOUNDS_CLASS;}}
let row=this.stateTable.stateArray.getItem(currentState);let entryIndex=row[classCode];let entry=this.stateTable.entryTable.getItem(entryIndex);if(classCode!==$50c7aac9316f2948$var$END_OF_TEXT_CLASS&&classCode!==$50c7aac9316f2948$var$DELETED_GLYPH_CLASS){processEntry(glyph,entry,index2);shouldAdvance=!(entry.flags&$50c7aac9316f2948$var$DONT_ADVANCE);}
currentState=entry.newState;if(shouldAdvance)
index2+=dir;}
return glyphs;}
traverse(opts,state=0,visited=new Set()){if(visited.has(state))
return;visited.add(state);let{nClasses,stateArray,entryTable}=this.stateTable;let row=stateArray.getItem(state);for(let classCode=4;classCode<nClasses;classCode++){let entryIndex=row[classCode];let entry=entryTable.getItem(entryIndex);for(let glyph of this.lookupTable.glyphsForValue(classCode)){if(opts.enter)
opts.enter(glyph,entry);if(entry.newState!==0)
this.traverse(opts,entry.newState,visited);if(opts.exit)
opts.exit(glyph,entry);}}}
constructor(stateTable){this.stateTable=stateTable;this.lookupTable=new(0,$ff5ce077dae0f144$export$2e2bcd8739ae039)(stateTable.classTable);}};var $55f71433a605c87d$var$MARK_FIRST=32768;var $55f71433a605c87d$var$MARK_LAST=8192;var $55f71433a605c87d$var$VERB=15;var $55f71433a605c87d$var$SET_MARK=32768;var $55f71433a605c87d$var$SET_COMPONENT=32768;var $55f71433a605c87d$var$PERFORM_ACTION=8192;var $55f71433a605c87d$var$LAST_MASK=2147483648;var $55f71433a605c87d$var$STORE_MASK=1073741824;var $55f71433a605c87d$var$OFFSET_MASK=1073741823;var $55f71433a605c87d$var$REVERSE_DIRECTION=4194304;var $55f71433a605c87d$var$CURRENT_INSERT_BEFORE=2048;var $55f71433a605c87d$var$MARKED_INSERT_BEFORE=1024;var $55f71433a605c87d$var$CURRENT_INSERT_COUNT=992;var $55f71433a605c87d$var$MARKED_INSERT_COUNT=31;var $55f71433a605c87d$export$2e2bcd8739ae039=class{process(glyphs,features={}){for(let chain of this.morx.chains){let flags=chain.defaultFlags;for(let feature of chain.features){let f;if(f=features[feature.featureType]){if(f[feature.featureSetting]){flags&=feature.disableFlags;flags|=feature.enableFlags;}else if(f[feature.featureSetting]===false){flags|=~feature.disableFlags;flags&=~feature.enableFlags;}}}
for(let subtable of chain.subtables)
if(subtable.subFeatureFlags&flags)
this.processSubtable(subtable,glyphs);}
let index2=glyphs.length-1;while(index2>=0){if(glyphs[index2].id===65535)
glyphs.splice(index2,1);index2--;}
return glyphs;}
processSubtable(subtable,glyphs){this.subtable=subtable;this.glyphs=glyphs;if(this.subtable.type===4){this.processNoncontextualSubstitutions(this.subtable,this.glyphs);return;}
this.ligatureStack=[];this.markedGlyph=null;this.firstGlyph=null;this.lastGlyph=null;this.markedIndex=null;let stateMachine=this.getStateMachine(subtable);let process2=this.getProcessor();let reverse=!!(this.subtable.coverage&$55f71433a605c87d$var$REVERSE_DIRECTION);return stateMachine.process(this.glyphs,reverse,process2);}
getStateMachine(subtable){return new(0,$50c7aac9316f2948$export$2e2bcd8739ae039)(subtable.table.stateTable);}
getProcessor(){switch(this.subtable.type){case 0:return this.processIndicRearragement;case 1:return this.processContextualSubstitution;case 2:return this.processLigature;case 4:return this.processNoncontextualSubstitutions;case 5:return this.processGlyphInsertion;default:throw new Error(`Invalid morx subtable type:${this.subtable.type}`);}}
processIndicRearragement(glyph,entry,index2){if(entry.flags&$55f71433a605c87d$var$MARK_FIRST)
this.firstGlyph=index2;if(entry.flags&$55f71433a605c87d$var$MARK_LAST)
this.lastGlyph=index2;$55f71433a605c87d$var$reorderGlyphs(this.glyphs,entry.flags&$55f71433a605c87d$var$VERB,this.firstGlyph,this.lastGlyph);}
processContextualSubstitution(glyph,entry,index2){let subsitutions=this.subtable.table.substitutionTable.items;if(entry.markIndex!==65535){let lookup=subsitutions.getItem(entry.markIndex);let lookupTable=new(0,$ff5ce077dae0f144$export$2e2bcd8739ae039)(lookup);glyph=this.glyphs[this.markedGlyph];var gid=lookupTable.lookup(glyph.id);if(gid)
this.glyphs[this.markedGlyph]=this.font.getGlyph(gid,glyph.codePoints);}
if(entry.currentIndex!==65535){let lookup=subsitutions.getItem(entry.currentIndex);let lookupTable=new(0,$ff5ce077dae0f144$export$2e2bcd8739ae039)(lookup);glyph=this.glyphs[index2];var gid=lookupTable.lookup(glyph.id);if(gid)
this.glyphs[index2]=this.font.getGlyph(gid,glyph.codePoints);}
if(entry.flags&$55f71433a605c87d$var$SET_MARK)
this.markedGlyph=index2;}
processLigature(glyph,entry,index2){if(entry.flags&$55f71433a605c87d$var$SET_COMPONENT)
this.ligatureStack.push(index2);if(entry.flags&$55f71433a605c87d$var$PERFORM_ACTION){let actions=this.subtable.table.ligatureActions;let components2=this.subtable.table.components;let ligatureList=this.subtable.table.ligatureList;let actionIndex=entry.action;let last4=false;let ligatureIndex=0;let codePoints=[];let ligatureGlyphs=[];while(!last4){let componentGlyph=this.ligatureStack.pop();codePoints.unshift(...this.glyphs[componentGlyph].codePoints);let action=actions.getItem(actionIndex++);last4=!!(action&$55f71433a605c87d$var$LAST_MASK);let store=!!(action&$55f71433a605c87d$var$STORE_MASK);let offset=(action&$55f71433a605c87d$var$OFFSET_MASK)<<2>>2;offset+=this.glyphs[componentGlyph].id;let component=components2.getItem(offset);ligatureIndex+=component;if(last4||store){let ligatureEntry=ligatureList.getItem(ligatureIndex);this.glyphs[componentGlyph]=this.font.getGlyph(ligatureEntry,codePoints);ligatureGlyphs.push(componentGlyph);ligatureIndex=0;codePoints=[];}else
this.glyphs[componentGlyph]=this.font.getGlyph(65535);}
this.ligatureStack.push(...ligatureGlyphs);}}
processNoncontextualSubstitutions(subtable,glyphs,index2){let lookupTable=new(0,$ff5ce077dae0f144$export$2e2bcd8739ae039)(subtable.table.lookupTable);for(index2=0;index2<glyphs.length;index2++){let glyph=glyphs[index2];if(glyph.id!==65535){let gid=lookupTable.lookup(glyph.id);if(gid)
glyphs[index2]=this.font.getGlyph(gid,glyph.codePoints);}}}
_insertGlyphs(glyphIndex,insertionActionIndex,count,isBefore){let insertions=[];while(count--){let gid=this.subtable.table.insertionActions.getItem(insertionActionIndex++);insertions.push(this.font.getGlyph(gid));}
if(!isBefore)
glyphIndex++;this.glyphs.splice(glyphIndex,0,...insertions);}
processGlyphInsertion(glyph,entry,index2){if(entry.flags&$55f71433a605c87d$var$SET_MARK)
this.markedIndex=index2;if(entry.markedInsertIndex!==65535){let count=(entry.flags&$55f71433a605c87d$var$MARKED_INSERT_COUNT)>>>5;let isBefore=!!(entry.flags&$55f71433a605c87d$var$MARKED_INSERT_BEFORE);this._insertGlyphs(this.markedIndex,entry.markedInsertIndex,count,isBefore);}
if(entry.currentInsertIndex!==65535){let count=(entry.flags&$55f71433a605c87d$var$CURRENT_INSERT_COUNT)>>>5;let isBefore=!!(entry.flags&$55f71433a605c87d$var$CURRENT_INSERT_BEFORE);this._insertGlyphs(index2,entry.currentInsertIndex,count,isBefore);}}
getSupportedFeatures(){let features=[];for(let chain of this.morx.chains)
for(let feature of chain.features)
features.push([feature.featureType,feature.featureSetting]);return features;}
generateInputs(gid){if(!this.inputCache)
this.generateInputCache();return this.inputCache[gid]||[];}
generateInputCache(){this.inputCache={};for(let chain of this.morx.chains){let flags=chain.defaultFlags;for(let subtable of chain.subtables)
if(subtable.subFeatureFlags&flags)
this.generateInputsForSubtable(subtable);}}
generateInputsForSubtable(subtable){if(subtable.type!==2)
return;let reverse=!!(subtable.coverage&$55f71433a605c87d$var$REVERSE_DIRECTION);if(reverse)
throw new Error("Reverse subtable, not supported.");this.subtable=subtable;this.ligatureStack=[];let stateMachine=this.getStateMachine(subtable);let process2=this.getProcessor();let input=[];let stack=[];this.glyphs=[];stateMachine.traverse({enter:(glyph,entry)=>{let glyphs=this.glyphs;stack.push({glyphs:glyphs.slice(),ligatureStack:this.ligatureStack.slice()});let g1=this.font.getGlyph(glyph);input.push(g1);glyphs.push(input[input.length-1]);process2(glyphs[glyphs.length-1],entry,glyphs.length-1);let count=0;let found=0;for(let i2=0;i2<glyphs.length&&count<=1;i2++)
if(glyphs[i2].id!==65535){count++;found=glyphs[i2].id;}
if(count===1){let result=input.map((g)=>g.id);let cache1=this.inputCache[found];if(cache1)
cache1.push(result);else
this.inputCache[found]=[result];}},exit:()=>{({glyphs:this.glyphs,ligatureStack:this.ligatureStack}=stack.pop());input.pop();}});}
constructor(font){this.processIndicRearragement=this.processIndicRearragement.bind(this);this.processContextualSubstitution=this.processContextualSubstitution.bind(this);this.processLigature=this.processLigature.bind(this);this.processNoncontextualSubstitutions=this.processNoncontextualSubstitutions.bind(this);this.processGlyphInsertion=this.processGlyphInsertion.bind(this);this.font=font;this.morx=font.morx;this.inputCache=null;}};(0,__decorate)([(0,$e71565f2ce09cb6b$export$69a3209f1a06c04d)],$55f71433a605c87d$export$2e2bcd8739ae039.prototype,"getStateMachine",null);function $55f71433a605c87d$var$swap(glyphs,rangeA,rangeB,reverseA=false,reverseB=false){let end=glyphs.splice(rangeB[0]-(rangeB[1]-1),rangeB[1]);if(reverseB)
end.reverse();let start=glyphs.splice(rangeA[0],rangeA[1],...end);if(reverseA)
start.reverse();glyphs.splice(rangeB[0]-(rangeA[1]-1),0,...start);return glyphs;}
function $55f71433a605c87d$var$reorderGlyphs(glyphs,verb,firstGlyph,lastGlyph){let length3=lastGlyph-firstGlyph+1;switch(verb){case 0:return glyphs;case 1:return $55f71433a605c87d$var$swap(glyphs,[firstGlyph,1],[lastGlyph,0]);case 2:return $55f71433a605c87d$var$swap(glyphs,[firstGlyph,0],[lastGlyph,1]);case 3:return $55f71433a605c87d$var$swap(glyphs,[firstGlyph,1],[lastGlyph,1]);case 4:return $55f71433a605c87d$var$swap(glyphs,[firstGlyph,2],[lastGlyph,0]);case 5:return $55f71433a605c87d$var$swap(glyphs,[firstGlyph,2],[lastGlyph,0],true,false);case 6:return $55f71433a605c87d$var$swap(glyphs,[firstGlyph,0],[lastGlyph,2]);case 7:return $55f71433a605c87d$var$swap(glyphs,[firstGlyph,0],[lastGlyph,2],false,true);case 8:return $55f71433a605c87d$var$swap(glyphs,[firstGlyph,1],[lastGlyph,2]);case 9:return $55f71433a605c87d$var$swap(glyphs,[firstGlyph,1],[lastGlyph,2],false,true);case 10:return $55f71433a605c87d$var$swap(glyphs,[firstGlyph,2],[lastGlyph,1]);case 11:return $55f71433a605c87d$var$swap(glyphs,[firstGlyph,2],[lastGlyph,1],true,false);case 12:return $55f71433a605c87d$var$swap(glyphs,[firstGlyph,2],[lastGlyph,2]);case 13:return $55f71433a605c87d$var$swap(glyphs,[firstGlyph,2],[lastGlyph,2],true,false);case 14:return $55f71433a605c87d$var$swap(glyphs,[firstGlyph,2],[lastGlyph,2],false,true);case 15:return $55f71433a605c87d$var$swap(glyphs,[firstGlyph,2],[lastGlyph,2],true,true);default:throw new Error(`Unknown verb:${verb}`);}}
var $ba6dd74203be8728$export$2e2bcd8739ae039=class{substitute(glyphRun){if(glyphRun.direction==="rtl")
glyphRun.glyphs.reverse();this.morxProcessor.process(glyphRun.glyphs,$3b6302b64eccc32c$export$b813f7d2a1677c16(glyphRun.features));}
getAvailableFeatures(script,language){return $3b6302b64eccc32c$export$bd6df347a4f391c4(this.morxProcessor.getSupportedFeatures());}
stringsForGlyph(gid){let glyphStrings=this.morxProcessor.generateInputs(gid);let result=new Set();for(let glyphs of glyphStrings)
this._addStrings(glyphs,0,result,"");return result;}
_addStrings(glyphs,index2,strings,string){let codePoints=this.font._cmapProcessor.codePointsForGlyph(glyphs[index2]);for(let codePoint of codePoints){let s=string+String.fromCodePoint(codePoint);if(index2<glyphs.length-1)
this._addStrings(glyphs,index2+1,strings,s);else
strings.add(s);}}
constructor(font){this.font=font;this.morxProcessor=new(0,$55f71433a605c87d$export$2e2bcd8739ae039)(font);this.fallbackPosition=false;}};var $94d7a73bd2edfc9a$export$2e2bcd8739ae039=class{_addFeatures(features,global2){let stageIndex=this.stages.length-1;let stage=this.stages[stageIndex];for(let feature of features)
if(this.allFeatures[feature]==null){stage.push(feature);this.allFeatures[feature]=stageIndex;if(global2)
this.globalFeatures[feature]=true;}}
add(arg,global2=true){if(this.stages.length===0)
this.stages.push([]);if(typeof arg==="string")
arg=[arg];if(Array.isArray(arg))
this._addFeatures(arg,global2);else if(typeof arg==="object"){this._addFeatures(arg.global||[],true);this._addFeatures(arg.local||[],false);}else
throw new Error("Unsupported argument to ShapingPlan#add");}
addStage(arg,global2){if(typeof arg==="function")
this.stages.push(arg,[]);else{this.stages.push([]);this.add(arg,global2);}}
setFeatureOverrides(features){if(Array.isArray(features))
this.add(features);else if(typeof features==="object")
for(let tag2 in features){if(features[tag2])
this.add(tag2);else if(this.allFeatures[tag2]!=null){let stage=this.stages[this.allFeatures[tag2]];stage.splice(stage.indexOf(tag2),1);delete this.allFeatures[tag2];delete this.globalFeatures[tag2];}}}
assignGlobalFeatures(glyphs){for(let glyph of glyphs)
for(let feature in this.globalFeatures)
glyph.features[feature]=true;}
process(processor,glyphs,positions){for(let stage of this.stages){if(typeof stage==="function"){if(!positions)
stage(this.font,glyphs,this);}else if(stage.length>0)
processor.applyFeatures(stage,glyphs,positions);}}
constructor(font,script,direction3){this.font=font;this.script=script;this.direction=direction3;this.stages=[];this.globalFeatures={};this.allFeatures={};}};var $649970d87335b30f$var$VARIATION_FEATURES=["rvrn"];var $649970d87335b30f$var$COMMON_FEATURES=["ccmp","locl","rlig","mark","mkmk"];var $649970d87335b30f$var$FRACTIONAL_FEATURES=["frac","numr","dnom"];var $649970d87335b30f$var$HORIZONTAL_FEATURES=["calt","clig","liga","rclt","curs","kern"];var $649970d87335b30f$var$DIRECTIONAL_FEATURES={ltr:["ltra","ltrm"],rtl:["rtla","rtlm"]};var $649970d87335b30f$export$2e2bcd8739ae039=class{static plan(plan,glyphs,features){this.planPreprocessing(plan);this.planFeatures(plan);this.planPostprocessing(plan,features);plan.assignGlobalFeatures(glyphs);this.assignFeatures(plan,glyphs);}
static planPreprocessing(plan){plan.add({global:[...$649970d87335b30f$var$VARIATION_FEATURES,...$649970d87335b30f$var$DIRECTIONAL_FEATURES[plan.direction]],local:$649970d87335b30f$var$FRACTIONAL_FEATURES});}
static planFeatures(plan){}
static planPostprocessing(plan,userFeatures){plan.add([...$649970d87335b30f$var$COMMON_FEATURES,...$649970d87335b30f$var$HORIZONTAL_FEATURES]);plan.setFeatureOverrides(userFeatures);}
static assignFeatures(plan,glyphs){for(let i2=0;i2<glyphs.length;i2++){let glyph=glyphs[i2];if(glyph.codePoints[0]===8260){let start=i2;let end=i2+1;while(start>0&&(0,$747425b437e121da$export$727d9dbc4fbb948f)(glyphs[start-1].codePoints[0])){glyphs[start-1].features.numr=true;glyphs[start-1].features.frac=true;start--;}
while(end<glyphs.length&&(0,$747425b437e121da$export$727d9dbc4fbb948f)(glyphs[end].codePoints[0])){glyphs[end].features.dnom=true;glyphs[end].features.frac=true;end++;}
glyph.features.frac=true;i2=end-1;}}}};(0,_define_property)($649970d87335b30f$export$2e2bcd8739ae039,"zeroMarkWidths","AFTER_GPOS");var $764eb544bbe1ccf0$var$trie=new(0,import_unicode_trie2.default)((0,$12727730ddfc8bfe$export$94fdf11bafc8de6b)("ABABAAAAAACgMQAAAZUBav7t2CtPA0EUBeDZB00pin9AJZIEgyUEj0QhweDAgQOJxCBRBElQSBwSicLgkOAwnNKZ5GaY2c7uzj4o5yZfZrrbefbuIx2nSq3CGmzAWH/+K+UO7MIe7MMhHMMpnMMFXMIVXIt2t3CnP088iPqjqNN8e4Ij7Rle4LUH82rLm6i/92A+RERERERERERNmfz/89GDeRARERERzbN8ceps2Iwt9H0C9/AJ6yOlDkbTczcot5VSm8Pm1vcFWfb7+BKOLTuOd2UlTX4wGP85Eg953lWPFbnuN7PkjtLmalOWbNenkHOSa7T3KmR9MVTZ2zZkVj1kHa68MueVKH0R4zqQ44WEXLM8VjcWHP0PtKLfPzQnMtGn3W4QYf6qxFxceVI394r2xnV+1rih0fV1Vzf3fO1n3evL5J78ruvZ5ptX2Rwy92Tfb1wlEqut3U+sZ3HXOeJ7/zDrbyuP6+Zz0fqa6Nv3vhY7Yu1xWnGevmsvsUpTT/RYIe8waUH/rvHMWKFzLfN8L+rTfp645mfX7ftlnfDtYxN59w0="));var $764eb544bbe1ccf0$var$FEATURES=["isol","fina","fin2","fin3","medi","med2","init"];var $764eb544bbe1ccf0$var$ShapingClasses={Non_Joining:0,Left_Joining:1,Right_Joining:2,Dual_Joining:3,Join_Causing:3,ALAPH:4,"DALATH RISH":5,Transparent:6};var $764eb544bbe1ccf0$var$ISOL="isol";var $764eb544bbe1ccf0$var$FINA="fina";var $764eb544bbe1ccf0$var$FIN2="fin2";var $764eb544bbe1ccf0$var$FIN3="fin3";var $764eb544bbe1ccf0$var$MEDI="medi";var $764eb544bbe1ccf0$var$MED2="med2";var $764eb544bbe1ccf0$var$INIT="init";var $764eb544bbe1ccf0$var$NONE=null;var $764eb544bbe1ccf0$var$STATE_TABLE=[[[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$NONE,0],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,2],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,1],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,2],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,1],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,6]],[[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$NONE,0],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,2],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,1],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,2],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$FIN2,5],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,6]],[[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$NONE,0],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,2],[$764eb544bbe1ccf0$var$INIT,$764eb544bbe1ccf0$var$FINA,1],[$764eb544bbe1ccf0$var$INIT,$764eb544bbe1ccf0$var$FINA,3],[$764eb544bbe1ccf0$var$INIT,$764eb544bbe1ccf0$var$FINA,4],[$764eb544bbe1ccf0$var$INIT,$764eb544bbe1ccf0$var$FINA,6]],[[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$NONE,0],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,2],[$764eb544bbe1ccf0$var$MEDI,$764eb544bbe1ccf0$var$FINA,1],[$764eb544bbe1ccf0$var$MEDI,$764eb544bbe1ccf0$var$FINA,3],[$764eb544bbe1ccf0$var$MEDI,$764eb544bbe1ccf0$var$FINA,4],[$764eb544bbe1ccf0$var$MEDI,$764eb544bbe1ccf0$var$FINA,6]],[[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$NONE,0],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,2],[$764eb544bbe1ccf0$var$MED2,$764eb544bbe1ccf0$var$ISOL,1],[$764eb544bbe1ccf0$var$MED2,$764eb544bbe1ccf0$var$ISOL,2],[$764eb544bbe1ccf0$var$MED2,$764eb544bbe1ccf0$var$FIN2,5],[$764eb544bbe1ccf0$var$MED2,$764eb544bbe1ccf0$var$ISOL,6]],[[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$NONE,0],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,2],[$764eb544bbe1ccf0$var$ISOL,$764eb544bbe1ccf0$var$ISOL,1],[$764eb544bbe1ccf0$var$ISOL,$764eb544bbe1ccf0$var$ISOL,2],[$764eb544bbe1ccf0$var$ISOL,$764eb544bbe1ccf0$var$FIN2,5],[$764eb544bbe1ccf0$var$ISOL,$764eb544bbe1ccf0$var$ISOL,6]],[[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$NONE,0],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,2],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,1],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,2],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$FIN3,5],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,6]]];var $764eb544bbe1ccf0$export$2e2bcd8739ae039=class extends(0,$649970d87335b30f$export$2e2bcd8739ae039){static planFeatures(plan){plan.add(["ccmp","locl"]);for(let i2=0;i2<$764eb544bbe1ccf0$var$FEATURES.length;i2++){let feature=$764eb544bbe1ccf0$var$FEATURES[i2];plan.addStage(feature,false);}
plan.addStage("mset");}
static assignFeatures(plan,glyphs){super.assignFeatures(plan,glyphs);let prev=-1;let state=0;let actions=[];for(let i2=0;i2<glyphs.length;i2++){let curAction,prevAction;var glyph=glyphs[i2];let type=$764eb544bbe1ccf0$var$getShapingClass(glyph.codePoints[0]);if(type===$764eb544bbe1ccf0$var$ShapingClasses.Transparent){actions[i2]=$764eb544bbe1ccf0$var$NONE;continue;}
[prevAction,curAction,state]=$764eb544bbe1ccf0$var$STATE_TABLE[state][type];if(prevAction!==$764eb544bbe1ccf0$var$NONE&&prev!==-1)
actions[prev]=prevAction;actions[i2]=curAction;prev=i2;}
for(let index2=0;index2<glyphs.length;index2++){let feature;var glyph=glyphs[index2];if(feature=actions[index2])
glyph.features[feature]=true;}}};function $764eb544bbe1ccf0$var$getShapingClass(codePoint){let res=$764eb544bbe1ccf0$var$trie.get(codePoint);if(res)
return res-1;let category=(0,$747425b437e121da$export$410364bbb673ddbc)(codePoint);if(category==="Mn"||category==="Me"||category==="Cf")
return $764eb544bbe1ccf0$var$ShapingClasses.Transparent;return $764eb544bbe1ccf0$var$ShapingClasses.Non_Joining;}
var $85d408632270248b$export$2e2bcd8739ae039=class{reset(options={},index2=0){this.options=options;this.flags=options.flags||{};this.markAttachmentType=options.markAttachmentType||0;this.index=index2;}
get cur(){return this.glyphs[this.index]||null;}
shouldIgnore(glyph){return this.flags.ignoreMarks&&glyph.isMark||this.flags.ignoreBaseGlyphs&&glyph.isBase||this.flags.ignoreLigatures&&glyph.isLigature||this.markAttachmentType&&glyph.isMark&&glyph.markAttachmentType!==this.markAttachmentType;}
move(dir){this.index+=dir;while(0<=this.index&&this.index<this.glyphs.length&&this.shouldIgnore(this.glyphs[this.index]))
this.index+=dir;if(0>this.index||this.index>=this.glyphs.length)
return null;return this.glyphs[this.index];}
next(){return this.move(1);}
prev(){return this.move(-1);}
peek(count=1){let idx=this.index;let res=this.increment(count);this.index=idx;return res;}
peekIndex(count=1){let idx=this.index;this.increment(count);let res=this.index;this.index=idx;return res;}
increment(count=1){let dir=count<0?-1:1;count=Math.abs(count);while(count--)
this.move(dir);return this.glyphs[this.index];}
constructor(glyphs,options){this.glyphs=glyphs;this.reset(options);}};var $a83b9c36aaa94fd3$var$DEFAULT_SCRIPTS=["DFLT","dflt","latn"];var $a83b9c36aaa94fd3$export$2e2bcd8739ae039=class{findScript(script){if(this.table.scriptList==null)
return null;if(!Array.isArray(script))
script=[script];for(let s of script)
for(let entry of this.table.scriptList){if(entry.tag===s)
return entry;}
return null;}
selectScript(script,language,direction3){let changed=false;let entry;if(!this.script||script!==this.scriptTag){entry=this.findScript(script);if(!entry)
entry=this.findScript($a83b9c36aaa94fd3$var$DEFAULT_SCRIPTS);if(!entry)
return this.scriptTag;this.scriptTag=entry.tag;this.script=entry.script;this.language=null;this.languageTag=null;changed=true;}
if(!direction3||direction3!==this.direction)
this.direction=direction3||$130d1a642ebcd2b7$export$9fddb9d0dd7d8a54(script);if(language&&language.length<4)
language+=" ".repeat(4-language.length);if(!language||language!==this.languageTag){this.language=null;for(let lang of this.script.langSysRecords)
if(lang.tag===language){this.language=lang.langSys;this.languageTag=lang.tag;break;}
if(!this.language){this.language=this.script.defaultLangSys;this.languageTag=null;}
changed=true;}
if(changed){this.features={};if(this.language)
for(let featureIndex of this.language.featureIndexes){let record=this.table.featureList[featureIndex];let substituteFeature=this.substituteFeatureForVariations(featureIndex);this.features[record.tag]=substituteFeature||record.feature;}}
return this.scriptTag;}
lookupsForFeatures(userFeatures=[],exclude){let lookups=[];for(let tag2 of userFeatures){let feature=this.features[tag2];if(!feature)
continue;for(let lookupIndex of feature.lookupListIndexes){if(exclude&&exclude.indexOf(lookupIndex)!==-1)
continue;lookups.push({feature:tag2,index:lookupIndex,lookup:this.table.lookupList.get(lookupIndex)});}}
lookups.sort((a,b10)=>a.index-b10.index);return lookups;}
substituteFeatureForVariations(featureIndex){if(this.variationsIndex===-1)
return null;let record=this.table.featureVariations.featureVariationRecords[this.variationsIndex];let substitutions=record.featureTableSubstitution.substitutions;for(let substitution of substitutions){if(substitution.featureIndex===featureIndex)
return substitution.alternateFeatureTable;}
return null;}
findVariationsIndex(coords){let variations=this.table.featureVariations;if(!variations)
return-1;let records=variations.featureVariationRecords;for(let i2=0;i2<records.length;i2++){let conditions=records[i2].conditionSet.conditionTable;if(this.variationConditionsMatch(conditions,coords))
return i2;}
return-1;}
variationConditionsMatch(conditions,coords){return conditions.every((condition)=>{let coord=condition.axisIndex<coords.length?coords[condition.axisIndex]:0;return condition.filterRangeMinValue<=coord&&coord<=condition.filterRangeMaxValue;});}
applyFeatures(userFeatures,glyphs,advances){let lookups=this.lookupsForFeatures(userFeatures);this.applyLookups(lookups,glyphs,advances);}
applyLookups(lookups,glyphs,positions){this.glyphs=glyphs;this.positions=positions;this.glyphIterator=new(0,$85d408632270248b$export$2e2bcd8739ae039)(glyphs);for(let{feature,lookup}of lookups){this.currentFeature=feature;this.glyphIterator.reset(lookup.flags);while(this.glyphIterator.index<glyphs.length){if(!(feature in this.glyphIterator.cur.features)){this.glyphIterator.next();continue;}
for(let table of lookup.subTables){let res=this.applyLookup(lookup.lookupType,table);if(res)
break;}
this.glyphIterator.next();}}}
applyLookup(lookup,table){throw new Error("applyLookup must be implemented by subclasses");}
applyLookupList(lookupRecords){let options=this.glyphIterator.options;let glyphIndex=this.glyphIterator.index;for(let lookupRecord of lookupRecords){this.glyphIterator.reset(options,glyphIndex);this.glyphIterator.increment(lookupRecord.sequenceIndex);let lookup=this.table.lookupList.get(lookupRecord.lookupListIndex);this.glyphIterator.reset(lookup.flags,this.glyphIterator.index);for(let table of lookup.subTables){if(this.applyLookup(lookup.lookupType,table))
break;}}
this.glyphIterator.reset(options,glyphIndex);return true;}
coverageIndex(coverage,glyph){if(glyph==null)
glyph=this.glyphIterator.cur.id;switch(coverage.version){case 1:return coverage.glyphs.indexOf(glyph);case 2:for(let range2 of coverage.rangeRecords){if(range2.start<=glyph&&glyph<=range2.end)
return range2.startCoverageIndex+glyph-range2.start;}
break;}
return-1;}
match(sequenceIndex,sequence,fn,matched){let pos=this.glyphIterator.index;let glyph=this.glyphIterator.increment(sequenceIndex);let idx=0;while(idx<sequence.length&&glyph&&fn(sequence[idx],glyph)){if(matched)
matched.push(this.glyphIterator.index);idx++;glyph=this.glyphIterator.next();}
this.glyphIterator.index=pos;if(idx<sequence.length)
return false;return matched||true;}
sequenceMatches(sequenceIndex,sequence){return this.match(sequenceIndex,sequence,(component,glyph)=>component===glyph.id);}
sequenceMatchIndices(sequenceIndex,sequence){return this.match(sequenceIndex,sequence,(component,glyph)=>{if(!(this.currentFeature in glyph.features))
return false;return component===glyph.id;},[]);}
coverageSequenceMatches(sequenceIndex,sequence){return this.match(sequenceIndex,sequence,(coverage,glyph)=>this.coverageIndex(coverage,glyph.id)>=0);}
getClassID(glyph,classDef){switch(classDef.version){case 1:let i2=glyph-classDef.startGlyph;if(i2>=0&&i2<classDef.classValueArray.length)
return classDef.classValueArray[i2];break;case 2:for(let range2 of classDef.classRangeRecord){if(range2.start<=glyph&&glyph<=range2.end)
return range2.class;}
break;}
return 0;}
classSequenceMatches(sequenceIndex,sequence,classDef){return this.match(sequenceIndex,sequence,(classID,glyph)=>classID===this.getClassID(glyph.id,classDef));}
applyContext(table){let index2,set3;switch(table.version){case 1:index2=this.coverageIndex(table.coverage);if(index2===-1)
return false;set3=table.ruleSets[index2];for(let rule of set3){if(this.sequenceMatches(1,rule.input))
return this.applyLookupList(rule.lookupRecords);}
break;case 2:if(this.coverageIndex(table.coverage)===-1)
return false;index2=this.getClassID(this.glyphIterator.cur.id,table.classDef);if(index2===-1)
return false;set3=table.classSet[index2];for(let rule1 of set3){if(this.classSequenceMatches(1,rule1.classes,table.classDef))
return this.applyLookupList(rule1.lookupRecords);}
break;case 3:if(this.coverageSequenceMatches(0,table.coverages))
return this.applyLookupList(table.lookupRecords);break;}
return false;}
applyChainingContext(table){let index2;switch(table.version){case 1:index2=this.coverageIndex(table.coverage);if(index2===-1)
return false;let set3=table.chainRuleSets[index2];for(let rule of set3){if(this.sequenceMatches(-rule.backtrack.length,rule.backtrack)&&this.sequenceMatches(1,rule.input)&&this.sequenceMatches(1+rule.input.length,rule.lookahead))
return this.applyLookupList(rule.lookupRecords);}
break;case 2:if(this.coverageIndex(table.coverage)===-1)
return false;index2=this.getClassID(this.glyphIterator.cur.id,table.inputClassDef);let rules=table.chainClassSet[index2];if(!rules)
return false;for(let rule2 of rules){if(this.classSequenceMatches(-rule2.backtrack.length,rule2.backtrack,table.backtrackClassDef)&&this.classSequenceMatches(1,rule2.input,table.inputClassDef)&&this.classSequenceMatches(1+rule2.input.length,rule2.lookahead,table.lookaheadClassDef))
return this.applyLookupList(rule2.lookupRecords);}
break;case 3:if(this.coverageSequenceMatches(-table.backtrackGlyphCount,table.backtrackCoverage)&&this.coverageSequenceMatches(0,table.inputCoverage)&&this.coverageSequenceMatches(table.inputGlyphCount,table.lookaheadCoverage))
return this.applyLookupList(table.lookupRecords);break;}
return false;}
constructor(font,table){this.font=font;this.table=table;this.script=null;this.scriptTag=null;this.language=null;this.languageTag=null;this.features={};this.lookups={};this.variationsIndex=font._variationProcessor?this.findVariationsIndex(font._variationProcessor.normalizedCoords):-1;this.selectScript();this.glyphs=[];this.positions=[];this.ligatureID=1;this.currentFeature=null;}};var $10e7b257e1a9a756$export$2e2bcd8739ae039=class _$10e7b257e1a9a756$export$2e2bcd8739ae039{get id(){return this._id;}
set id(id9){this._id=id9;this.substituted=true;let GDEF=this._font.GDEF;if(GDEF&&GDEF.glyphClassDef){let classID=(0,$a83b9c36aaa94fd3$export$2e2bcd8739ae039).prototype.getClassID(id9,GDEF.glyphClassDef);this.isBase=classID===1;this.isLigature=classID===2;this.isMark=classID===3;this.markAttachmentType=GDEF.markAttachClassDef?(0,$a83b9c36aaa94fd3$export$2e2bcd8739ae039).prototype.getClassID(id9,GDEF.markAttachClassDef):0;}else{this.isMark=this.codePoints.length>0&&this.codePoints.every((0,$747425b437e121da$export$e33ad6871e762338));this.isBase=!this.isMark;this.isLigature=this.codePoints.length>1;this.markAttachmentType=0;}}
copy(){return new _$10e7b257e1a9a756$export$2e2bcd8739ae039(this._font,this.id,this.codePoints,this.features);}
constructor(font,id9,codePoints=[],features){this._font=font;this.codePoints=codePoints;this.id=id9;this.features={};if(Array.isArray(features))
for(let i2=0;i2<features.length;i2++){let feature=features[i2];this.features[feature]=true;}
else if(typeof features==="object")
Object.assign(this.features,features);this.ligatureID=null;this.ligatureComponent=null;this.isLigated=false;this.cursiveAttachment=null;this.markAttachment=null;this.shaperInfo=null;this.substituted=false;this.isMultiplied=false;}};var $e1c6bbc8cb416f8c$export$2e2bcd8739ae039=class extends(0,$649970d87335b30f$export$2e2bcd8739ae039){static planFeatures(plan){plan.add(["ljmo","vjmo","tjmo"],false);}
static assignFeatures(plan,glyphs){let state=0;let i2=0;while(i2<glyphs.length){let action;let glyph=glyphs[i2];let code=glyph.codePoints[0];let type=$e1c6bbc8cb416f8c$var$getType(code);[action,state]=$e1c6bbc8cb416f8c$var$STATE_TABLE[state][type];switch(action){case $e1c6bbc8cb416f8c$var$DECOMPOSE:if(!plan.font.hasGlyphForCodePoint(code))
i2=$e1c6bbc8cb416f8c$var$decompose(glyphs,i2,plan.font);break;case $e1c6bbc8cb416f8c$var$COMPOSE:i2=$e1c6bbc8cb416f8c$var$compose(glyphs,i2,plan.font);break;case $e1c6bbc8cb416f8c$var$TONE_MARK:$e1c6bbc8cb416f8c$var$reorderToneMark(glyphs,i2,plan.font);break;case $e1c6bbc8cb416f8c$var$INVALID:i2=$e1c6bbc8cb416f8c$var$insertDottedCircle(glyphs,i2,plan.font);break;}
i2++;}}};(0,_define_property)($e1c6bbc8cb416f8c$export$2e2bcd8739ae039,"zeroMarkWidths","NONE");var $e1c6bbc8cb416f8c$var$HANGUL_BASE=44032;var $e1c6bbc8cb416f8c$var$HANGUL_END=55204;var $e1c6bbc8cb416f8c$var$HANGUL_COUNT=$e1c6bbc8cb416f8c$var$HANGUL_END-$e1c6bbc8cb416f8c$var$HANGUL_BASE+1;var $e1c6bbc8cb416f8c$var$L_BASE=4352;var $e1c6bbc8cb416f8c$var$V_BASE=4449;var $e1c6bbc8cb416f8c$var$T_BASE=4519;var $e1c6bbc8cb416f8c$var$L_COUNT=19;var $e1c6bbc8cb416f8c$var$V_COUNT=21;var $e1c6bbc8cb416f8c$var$T_COUNT=28;var $e1c6bbc8cb416f8c$var$L_END=$e1c6bbc8cb416f8c$var$L_BASE+$e1c6bbc8cb416f8c$var$L_COUNT-1;var $e1c6bbc8cb416f8c$var$V_END=$e1c6bbc8cb416f8c$var$V_BASE+$e1c6bbc8cb416f8c$var$V_COUNT-1;var $e1c6bbc8cb416f8c$var$T_END=$e1c6bbc8cb416f8c$var$T_BASE+$e1c6bbc8cb416f8c$var$T_COUNT-1;var $e1c6bbc8cb416f8c$var$DOTTED_CIRCLE=9676;var $e1c6bbc8cb416f8c$var$isL=(code)=>4352<=code&&code<=4447||43360<=code&&code<=43388;var $e1c6bbc8cb416f8c$var$isV=(code)=>4448<=code&&code<=4519||55216<=code&&code<=55238;var $e1c6bbc8cb416f8c$var$isT=(code)=>4520<=code&&code<=4607||55243<=code&&code<=55291;var $e1c6bbc8cb416f8c$var$isTone=(code)=>12334<=code&&code<=12335;var $e1c6bbc8cb416f8c$var$isLVT=(code)=>$e1c6bbc8cb416f8c$var$HANGUL_BASE<=code&&code<=$e1c6bbc8cb416f8c$var$HANGUL_END;var $e1c6bbc8cb416f8c$var$isLV=(code)=>code-$e1c6bbc8cb416f8c$var$HANGUL_BASE<$e1c6bbc8cb416f8c$var$HANGUL_COUNT&&(code-$e1c6bbc8cb416f8c$var$HANGUL_BASE)%$e1c6bbc8cb416f8c$var$T_COUNT===0;var $e1c6bbc8cb416f8c$var$isCombiningL=(code)=>$e1c6bbc8cb416f8c$var$L_BASE<=code&&code<=$e1c6bbc8cb416f8c$var$L_END;var $e1c6bbc8cb416f8c$var$isCombiningV=(code)=>$e1c6bbc8cb416f8c$var$V_BASE<=code&&code<=$e1c6bbc8cb416f8c$var$V_END;var $e1c6bbc8cb416f8c$var$isCombiningT=(code)=>$e1c6bbc8cb416f8c$var$T_BASE+1&&1<=code&&code<=$e1c6bbc8cb416f8c$var$T_END;var $e1c6bbc8cb416f8c$var$X=0;var $e1c6bbc8cb416f8c$var$L=1;var $e1c6bbc8cb416f8c$var$V=2;var $e1c6bbc8cb416f8c$var$T=3;var $e1c6bbc8cb416f8c$var$LV=4;var $e1c6bbc8cb416f8c$var$LVT=5;var $e1c6bbc8cb416f8c$var$M=6;function $e1c6bbc8cb416f8c$var$getType(code){if($e1c6bbc8cb416f8c$var$isL(code))
return $e1c6bbc8cb416f8c$var$L;if($e1c6bbc8cb416f8c$var$isV(code))
return $e1c6bbc8cb416f8c$var$V;if($e1c6bbc8cb416f8c$var$isT(code))
return $e1c6bbc8cb416f8c$var$T;if($e1c6bbc8cb416f8c$var$isLV(code))
return $e1c6bbc8cb416f8c$var$LV;if($e1c6bbc8cb416f8c$var$isLVT(code))
return $e1c6bbc8cb416f8c$var$LVT;if($e1c6bbc8cb416f8c$var$isTone(code))
return $e1c6bbc8cb416f8c$var$M;return $e1c6bbc8cb416f8c$var$X;}
var $e1c6bbc8cb416f8c$var$NO_ACTION=0;var $e1c6bbc8cb416f8c$var$DECOMPOSE=1;var $e1c6bbc8cb416f8c$var$COMPOSE=2;var $e1c6bbc8cb416f8c$var$TONE_MARK=4;var $e1c6bbc8cb416f8c$var$INVALID=5;var $e1c6bbc8cb416f8c$var$STATE_TABLE=[[[$e1c6bbc8cb416f8c$var$NO_ACTION,0],[$e1c6bbc8cb416f8c$var$NO_ACTION,1],[$e1c6bbc8cb416f8c$var$NO_ACTION,0],[$e1c6bbc8cb416f8c$var$NO_ACTION,0],[$e1c6bbc8cb416f8c$var$DECOMPOSE,2],[$e1c6bbc8cb416f8c$var$DECOMPOSE,3],[$e1c6bbc8cb416f8c$var$INVALID,0]],[[$e1c6bbc8cb416f8c$var$NO_ACTION,0],[$e1c6bbc8cb416f8c$var$NO_ACTION,1],[$e1c6bbc8cb416f8c$var$COMPOSE,2],[$e1c6bbc8cb416f8c$var$NO_ACTION,0],[$e1c6bbc8cb416f8c$var$DECOMPOSE,2],[$e1c6bbc8cb416f8c$var$DECOMPOSE,3],[$e1c6bbc8cb416f8c$var$INVALID,0]],[[$e1c6bbc8cb416f8c$var$NO_ACTION,0],[$e1c6bbc8cb416f8c$var$NO_ACTION,1],[$e1c6bbc8cb416f8c$var$NO_ACTION,0],[$e1c6bbc8cb416f8c$var$COMPOSE,3],[$e1c6bbc8cb416f8c$var$DECOMPOSE,2],[$e1c6bbc8cb416f8c$var$DECOMPOSE,3],[$e1c6bbc8cb416f8c$var$TONE_MARK,0]],[[$e1c6bbc8cb416f8c$var$NO_ACTION,0],[$e1c6bbc8cb416f8c$var$NO_ACTION,1],[$e1c6bbc8cb416f8c$var$NO_ACTION,0],[$e1c6bbc8cb416f8c$var$NO_ACTION,0],[$e1c6bbc8cb416f8c$var$DECOMPOSE,2],[$e1c6bbc8cb416f8c$var$DECOMPOSE,3],[$e1c6bbc8cb416f8c$var$TONE_MARK,0]]];function $e1c6bbc8cb416f8c$var$getGlyph(font,code,features){return new(0,$10e7b257e1a9a756$export$2e2bcd8739ae039)(font,font.glyphForCodePoint(code).id,[code],features);}
function $e1c6bbc8cb416f8c$var$decompose(glyphs,i2,font){let glyph=glyphs[i2];let code=glyph.codePoints[0];let s=code-$e1c6bbc8cb416f8c$var$HANGUL_BASE;let t=$e1c6bbc8cb416f8c$var$T_BASE+s%$e1c6bbc8cb416f8c$var$T_COUNT;s=s/$e1c6bbc8cb416f8c$var$T_COUNT|0;let l=$e1c6bbc8cb416f8c$var$L_BASE+s/$e1c6bbc8cb416f8c$var$V_COUNT|0;let v=$e1c6bbc8cb416f8c$var$V_BASE+s%$e1c6bbc8cb416f8c$var$V_COUNT;if(!font.hasGlyphForCodePoint(l)||!font.hasGlyphForCodePoint(v)||t!==$e1c6bbc8cb416f8c$var$T_BASE&&!font.hasGlyphForCodePoint(t))
return i2;let ljmo=$e1c6bbc8cb416f8c$var$getGlyph(font,l,glyph.features);ljmo.features.ljmo=true;let vjmo=$e1c6bbc8cb416f8c$var$getGlyph(font,v,glyph.features);vjmo.features.vjmo=true;let insert=[ljmo,vjmo];if(t>$e1c6bbc8cb416f8c$var$T_BASE){let tjmo=$e1c6bbc8cb416f8c$var$getGlyph(font,t,glyph.features);tjmo.features.tjmo=true;insert.push(tjmo);}
glyphs.splice(i2,1,...insert);return i2+insert.length-1;}
function $e1c6bbc8cb416f8c$var$compose(glyphs,i2,font){let glyph=glyphs[i2];let code=glyphs[i2].codePoints[0];let type=$e1c6bbc8cb416f8c$var$getType(code);let prev=glyphs[i2-1].codePoints[0];let prevType=$e1c6bbc8cb416f8c$var$getType(prev);let lv,ljmo,vjmo,tjmo;if(prevType===$e1c6bbc8cb416f8c$var$LV&&type===$e1c6bbc8cb416f8c$var$T){lv=prev;tjmo=glyph;}else{if(type===$e1c6bbc8cb416f8c$var$V){ljmo=glyphs[i2-1];vjmo=glyph;}else{ljmo=glyphs[i2-2];vjmo=glyphs[i2-1];tjmo=glyph;}
let l=ljmo.codePoints[0];let v=vjmo.codePoints[0];if($e1c6bbc8cb416f8c$var$isCombiningL(l)&&$e1c6bbc8cb416f8c$var$isCombiningV(v))
lv=$e1c6bbc8cb416f8c$var$HANGUL_BASE+((l-$e1c6bbc8cb416f8c$var$L_BASE)*$e1c6bbc8cb416f8c$var$V_COUNT+(v-$e1c6bbc8cb416f8c$var$V_BASE))*$e1c6bbc8cb416f8c$var$T_COUNT;}
let t=tjmo&&tjmo.codePoints[0]||$e1c6bbc8cb416f8c$var$T_BASE;if(lv!=null&&(t===$e1c6bbc8cb416f8c$var$T_BASE||$e1c6bbc8cb416f8c$var$isCombiningT(t))){let s=lv+(t-$e1c6bbc8cb416f8c$var$T_BASE);if(font.hasGlyphForCodePoint(s)){let del=prevType===$e1c6bbc8cb416f8c$var$V?3:2;glyphs.splice(i2-del+1,del,$e1c6bbc8cb416f8c$var$getGlyph(font,s,glyph.features));return i2-del+1;}}
if(ljmo)
ljmo.features.ljmo=true;if(vjmo)
vjmo.features.vjmo=true;if(tjmo)
tjmo.features.tjmo=true;if(prevType===$e1c6bbc8cb416f8c$var$LV){$e1c6bbc8cb416f8c$var$decompose(glyphs,i2-1,font);return i2+1;}
return i2;}
function $e1c6bbc8cb416f8c$var$getLength(code){switch($e1c6bbc8cb416f8c$var$getType(code)){case $e1c6bbc8cb416f8c$var$LV:case $e1c6bbc8cb416f8c$var$LVT:return 1;case $e1c6bbc8cb416f8c$var$V:return 2;case $e1c6bbc8cb416f8c$var$T:return 3;}}
function $e1c6bbc8cb416f8c$var$reorderToneMark(glyphs,i2,font){let glyph=glyphs[i2];let code=glyphs[i2].codePoints[0];if(font.glyphForCodePoint(code).advanceWidth===0)
return;let prev=glyphs[i2-1].codePoints[0];let len2=$e1c6bbc8cb416f8c$var$getLength(prev);glyphs.splice(i2,1);return glyphs.splice(i2-len2,0,glyph);}
function $e1c6bbc8cb416f8c$var$insertDottedCircle(glyphs,i2,font){let glyph=glyphs[i2];let code=glyphs[i2].codePoints[0];if(font.hasGlyphForCodePoint($e1c6bbc8cb416f8c$var$DOTTED_CIRCLE)){let dottedCircle=$e1c6bbc8cb416f8c$var$getGlyph(font,$e1c6bbc8cb416f8c$var$DOTTED_CIRCLE,glyph.features);let idx=font.glyphForCodePoint(code).advanceWidth===0?i2:i2+1;glyphs.splice(idx,0,dottedCircle);i2++;}
return i2;}
var $4b0735ca6c692ea5$exports={};$4b0735ca6c692ea5$exports=JSON.parse('{"stateTable":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,14,15,16,17],[0,0,0,18,19,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,28,29,30,31,32,33,0,34,0,0,35,36,0,0,37,0],[0,0,0,38,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,39,0,0,0,40,41,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,12,43,0,0,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,0,43,0,0,0,0],[0,0,0,45,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,50,0,0,51,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0],[0,0,0,53,54,55,56,57,58,0,59,0,0,60,61,0,0,62,0],[0,0,0,4,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,63,64,0,0,40,41,0,9,0,10,0,0,0,42,0,63,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,0,2,16,0],[0,0,0,18,65,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,0,0],[0,0,0,69,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,73,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,75,0,0,0,76,77,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,25,79,0,0,0,0],[0,0,0,18,19,20,74,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,81,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,86,0,0,87,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,88,0,0,0,0,0,0,0,0],[0,0,0,18,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,89,90,0,0,76,77,0,23,0,24,0,0,0,78,0,89,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,0,0],[0,0,0,94,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,96,0,0,0,97,98,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,35,100,0,0,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,102,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,107,0,0,108,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,109,0,0,0,0,0,0,0,0],[0,0,0,28,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,110,111,0,0,97,98,0,33,0,34,0,0,0,99,0,110,0,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,0,0],[0,0,0,0,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,0,0,115,116,117,118,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,39,0,122,0,123,123,8,9,0,10,0,0,0,42,0,39,0,0],[0,124,64,0,0,0,0,0,0,0,0,0,0,0,0,0,124,0,0],[0,39,0,0,0,121,125,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,126,126,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,47,47,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,128,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,129,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,50,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,134,0,0,0,0,0,0,0,0],[0,0,0,135,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,136,0,0,0,137,138,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,60,140,0,0,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,0,140,0,0,0,0],[0,0,0,142,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,147,0,0,148,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,149,0,0,0,0,0,0,0,0],[0,0,0,53,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,150,151,0,0,137,138,0,58,0,59,0,0,0,139,0,150,0,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,0,0],[0,0,0,155,116,156,157,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,75,3,4,5,159,160,8,161,0,162,0,11,12,163,0,75,16,0],[0,0,0,0,0,40,164,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,0,165,0,0,0,0],[0,124,64,0,0,40,164,0,9,0,10,0,0,0,42,0,124,0,0],[0,0,0,0,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,71,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,167,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,168,0,0,0,0,0,0,0,0],[0,0,0,0,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,0,79,0,0,0,0],[0,0,0,169,170,171,172,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,75,0,176,0,177,177,22,23,0,24,0,0,0,78,0,75,0,0],[0,178,90,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0],[0,75,0,0,0,175,179,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,180,180,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,83,83,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,182,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,183,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,86,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,188,0,0,0,0,0,0,0,0],[0,0,0,189,170,190,191,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,76,193,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,0,194,0,0,0,0],[0,178,90,0,0,76,193,0,23,0,24,0,0,0,78,0,178,0,0],[0,0,0,0,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,195,196,197,198,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,96,0,202,0,203,203,32,33,0,34,0,0,0,99,0,96,0,0],[0,204,111,0,0,0,0,0,0,0,0,0,0,0,0,0,204,0,0],[0,96,0,0,0,201,205,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,206,206,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,104,104,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,208,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,209,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,107,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,214,0,0,0,0,0,0,0,0],[0,0,0,215,196,216,217,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,97,219,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,0,220,0,0,0,0],[0,204,111,0,0,97,219,0,33,0,34,0,0,0,99,0,204,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,223,0,0,0,40,224,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,119,225,0,0,0,0],[0,0,0,115,116,117,222,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,115,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,226,64,0,0,40,224,0,9,0,10,0,0,0,42,0,226,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,39,0,0,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,44,44,8,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,227,0,228,229,0,9,0,10,0,0,230,0,0,0,0,0],[0,39,0,122,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,231,231,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,232,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,131,131,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,234,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,235,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,0,0,240,241,242,243,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,136,0,247,0,248,248,57,58,0,59,0,0,0,139,0,136,0,0],[0,249,151,0,0,0,0,0,0,0,0,0,0,0,0,0,249,0,0],[0,136,0,0,0,246,250,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,251,251,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,144,144,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,253,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,254,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,147,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,259,0,0,0,0,0,0,0,0],[0,0,0,260,241,261,262,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,137,264,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,0,265,0,0,0,0],[0,249,151,0,0,137,264,0,58,0,59,0,0,0,139,0,249,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,158,225,0,0,0,0],[0,0,0,155,116,156,222,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,155,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,43,266,266,8,161,0,24,0,0,12,267,0,0,0,0],[0,75,0,176,43,268,268,269,161,0,24,0,0,0,267,0,75,0,0],[0,0,0,0,0,270,0,0,271,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,272,0,0,0,0,0,0,0,0],[0,273,274,0,0,40,41,0,9,0,10,0,0,0,42,0,273,0,0],[0,0,0,40,0,123,123,8,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,121,275,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,276,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,279,0,0,0,76,280,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,173,281,0,0,0,0],[0,0,0,169,170,171,278,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,169,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,282,90,0,0,76,280,0,23,0,24,0,0,0,78,0,282,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,75,0,0,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,80,80,22,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,283,0,284,285,0,23,0,24,0,0,286,0,0,0,0,0],[0,75,0,176,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,287,287,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,288,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,185,185,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,290,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,291,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,192,281,0,0,0,0],[0,0,0,189,170,190,278,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,189,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,76,0,177,177,22,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,175,296,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,299,0,0,0,97,300,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,199,301,0,0,0,0],[0,0,0,195,196,197,298,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,195,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,302,111,0,0,97,300,0,33,0,34,0,0,0,99,0,302,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,96,0,0,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,101,101,32,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,303,0,304,305,0,33,0,34,0,0,306,0,0,0,0,0],[0,96,0,202,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,307,307,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,308,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,211,211,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,310,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,311,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,218,301,0,0,0,0],[0,0,0,215,196,216,298,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,215,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,97,0,203,203,32,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,201,316,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,0,225,0,0,0,0],[0,0,0,317,318,319,320,8,9,0,10,0,0,321,322,0,0,16,0],[0,223,0,323,0,123,123,8,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,0,0,121,324,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,325,318,326,327,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,64,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,230,0,0,0,0,0],[0,0,0,227,0,228,121,0,9,0,10,0,0,230,0,0,0,0,0],[0,0,0,227,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0],[0,0,0,0,0,329,329,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,330,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,237,237,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,332,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,333,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,337,0,0,0,137,338,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,244,339,0,0,0,0],[0,0,0,240,241,242,336,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,240,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,340,151,0,0,137,338,0,58,0,59,0,0,0,139,0,340,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,136,0,0,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,141,141,57,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,341,0,342,343,0,58,0,59,0,0,344,0,0,0,0,0],[0,136,0,247,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,345,345,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,346,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,256,256,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,348,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,349,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,263,339,0,0,0,0],[0,0,0,260,241,261,336,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,260,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,137,0,248,248,57,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,246,354,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,126,126,8,23,0,0,0,0,0,0,0,0,0,0],[0,355,90,0,0,121,125,0,9,0,10,0,0,0,42,0,355,0,0],[0,0,0,0,0,356,356,269,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,357,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,270,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,363,0,0,0,0,0,0,0,0],[0,0,0,364,116,365,366,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,40,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,0,281,0,0,0,0],[0,0,0,369,370,371,372,22,23,0,24,0,0,373,374,0,0,27,0],[0,279,0,375,0,177,177,22,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,0,0,175,376,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,377,370,378,379,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,90,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,286,0,0,0,0,0],[0,0,0,283,0,284,175,0,23,0,24,0,0,286,0,0,0,0,0],[0,0,0,283,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,0,0],[0,0,0,0,0,381,381,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,382,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,293,293,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,384,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,385,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,76,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,0,301,0,0,0,0],[0,0,0,387,388,389,390,32,33,0,34,0,0,391,392,0,0,37,0],[0,299,0,393,0,203,203,32,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,0,0,201,394,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,395,388,396,397,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,111,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,306,0,0,0,0,0],[0,0,0,303,0,304,201,0,33,0,34,0,0,306,0,0,0,0,0],[0,0,0,303,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,0,0],[0,0,0,0,0,399,399,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,400,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,313,313,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,402,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,403,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,97,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,407,0,0,0,40,408,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,321,409,0,0,0,0],[0,0,0,317,318,319,406,8,9,0,10,0,0,321,322,0,0,16,0],[0,0,0,317,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,410,64,0,0,40,408,0,9,0,10,0,0,0,42,0,410,0,0],[0,223,0,0,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,323,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,328,409,0,0,0,0],[0,0,0,325,318,326,406,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,325,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,0,0,0,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0],[0,0,0,0,0,411,411,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,412,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,413,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,0,339,0,0,0,0],[0,0,0,414,415,416,417,57,58,0,59,0,0,418,419,0,0,62,0],[0,337,0,420,0,248,248,57,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,0,0,246,421,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,422,415,423,424,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,151,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,344,0,0,0,0,0],[0,0,0,341,0,342,246,0,58,0,59,0,0,344,0,0,0,0,0],[0,0,0,341,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0],[0,0,0,0,0,426,426,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,427,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,351,351,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,429,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,430,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,137,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,432,116,433,434,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,0,0,180,180,269,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,359,359,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,437,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,438,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,443,274,0,0,0,0,0,0,0,0,0,0,0,0,0,443,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,367,225,0,0,0,0],[0,0,0,364,116,365,445,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,364,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,448,0,0,0,76,449,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,373,450,0,0,0,0],[0,0,0,369,370,371,447,22,23,0,24,0,0,373,374,0,0,27,0],[0,0,0,369,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,451,90,0,0,76,449,0,23,0,24,0,0,0,78,0,451,0,0],[0,279,0,0,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,375,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,380,450,0,0,0,0],[0,0,0,377,370,378,447,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,377,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,0,0,0,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,0,0],[0,0,0,0,0,452,452,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,453,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,454,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,457,0,0,0,97,458,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,391,459,0,0,0,0],[0,0,0,387,388,389,456,32,33,0,34,0,0,391,392,0,0,37,0],[0,0,0,387,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,460,111,0,0,97,458,0,33,0,34,0,0,0,99,0,460,0,0],[0,299,0,0,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,393,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,398,459,0,0,0,0],[0,0,0,395,388,396,456,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,395,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,0,0,0,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,0,0],[0,0,0,0,0,461,461,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,462,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,463,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,0,409,0,0,0,0],[0,0,0,464,465,466,467,8,9,0,10,0,0,468,469,0,0,16,0],[0,407,0,470,0,123,123,8,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,0,0,121,471,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,472,465,473,474,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,0,0,0,0,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,0,0],[0,0,0,0,0,0,476,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,479,0,0,0,137,480,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,418,481,0,0,0,0],[0,0,0,414,415,416,478,57,58,0,59,0,0,418,419,0,0,62,0],[0,0,0,414,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,482,151,0,0,137,480,0,58,0,59,0,0,0,139,0,482,0,0],[0,337,0,0,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,420,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,425,481,0,0,0,0],[0,0,0,422,415,423,478,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,422,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,0,0,0,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0],[0,0,0,0,0,483,483,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,484,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,485,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,435,225,0,0,0,0],[0,0,0,432,116,433,445,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,432,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,486,486,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,487,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,440,440,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,489,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,490,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,495,0,496,497,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,0,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,0,225,0,0,0,0],[0,0,0,0,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,0,450,0,0,0,0],[0,0,0,499,500,501,502,22,23,0,24,0,0,503,504,0,0,27,0],[0,448,0,505,0,177,177,22,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,0,0,175,506,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,507,500,508,509,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,0,0,0,0,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,292,0,0],[0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,0,459,0,0,0,0],[0,0,0,512,513,514,515,32,33,0,34,0,0,516,517,0,0,37,0],[0,457,0,518,0,203,203,32,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,0,0,201,519,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,520,513,521,522,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,0,0,0,0,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,312,0,0],[0,0,0,0,0,0,524,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,527,0,0,0,40,528,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,468,529,0,0,0,0],[0,0,0,464,465,466,526,8,9,0,10,0,0,468,469,0,0,16,0],[0,0,0,464,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,530,64,0,0,40,528,0,9,0,10,0,0,0,42,0,530,0,0],[0,407,0,0,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,470,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,475,529,0,0,0,0],[0,0,0,472,465,473,526,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,472,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0],[0,0,0,0,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,0,481,0,0,0,0],[0,0,0,531,532,533,534,57,58,0,59,0,0,535,536,0,0,62,0],[0,479,0,537,0,248,248,57,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,0,0,246,538,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,539,532,540,541,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,0,0,0,0,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,350,0,0],[0,0,0,0,0,0,543,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,358,0,0],[0,0,0,0,0,544,544,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,545,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,492,492,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,547,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,548,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,274,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,498,0,0,0,0,0],[0,0,0,495,0,496,368,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,495,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,553,0,0,0,76,554,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,503,555,0,0,0,0],[0,0,0,499,500,501,552,22,23,0,24,0,0,503,504,0,0,27,0],[0,0,0,499,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,556,90,0,0,76,554,0,23,0,24,0,0,0,78,0,556,0,0],[0,448,0,0,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,505,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,510,555,0,0,0,0],[0,0,0,507,500,508,552,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,507,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,559,0,0,0,97,560,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,516,561,0,0,0,0],[0,0,0,512,513,514,558,32,33,0,34,0,0,516,517,0,0,37,0],[0,0,0,512,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,562,111,0,0,97,560,0,33,0,34,0,0,0,99,0,562,0,0],[0,457,0,0,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,518,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,523,561,0,0,0,0],[0,0,0,520,513,521,558,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,520,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0],[0,0,0,0,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,0,529,0,0,0,0],[0,0,0,563,66,564,565,8,9,0,10,0,0,566,68,0,0,16,0],[0,527,0,567,0,123,123,8,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,0,0,121,568,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,569,66,570,571,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,575,0,0,0,137,576,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,535,577,0,0,0,0],[0,0,0,531,532,533,574,57,58,0,59,0,0,535,536,0,0,62,0],[0,0,0,531,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,578,151,0,0,137,576,0,58,0,59,0,0,0,139,0,578,0,0],[0,479,0,0,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,537,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,542,577,0,0,0,0],[0,0,0,539,532,540,574,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,539,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,137,0,0],[0,0,0,0,0,0,0,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,439,0,0],[0,0,0,0,0,579,579,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,580,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,581,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,0,555,0,0,0,0],[0,0,0,582,91,583,584,22,23,0,24,0,0,585,93,0,0,27,0],[0,553,0,586,0,177,177,22,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,0,0,175,587,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,588,91,589,590,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,0,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,0,561,0,0,0,0],[0,0,0,592,112,593,594,32,33,0,34,0,0,595,114,0,0,37,0],[0,559,0,596,0,203,203,32,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,0,0,201,597,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,598,112,599,600,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,566,165,0,0,0,0],[0,0,0,563,66,564,67,8,9,0,10,0,0,566,68,0,0,16,0],[0,0,0,563,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,527,0,0,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,567,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,572,165,0,0,0,0],[0,0,0,569,66,570,67,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,569,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,0,577,0,0,0,0],[0,0,0,603,152,604,605,57,58,0,59,0,0,606,154,0,0,62,0],[0,575,0,607,0,248,248,57,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,0,0,246,608,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,609,152,610,611,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,0,0,0,0,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,491,0,0],[0,0,0,0,0,0,613,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,585,194,0,0,0,0],[0,0,0,582,91,583,92,22,23,0,24,0,0,585,93,0,0,27,0],[0,0,0,582,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,553,0,0,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,586,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,591,194,0,0,0,0],[0,0,0,588,91,589,92,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,588,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,595,220,0,0,0,0],[0,0,0,592,112,593,113,32,33,0,34,0,0,595,114,0,0,37,0],[0,0,0,592,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,559,0,0,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,596,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,601,220,0,0,0,0],[0,0,0,598,112,599,113,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,598,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,606,265,0,0,0,0],[0,0,0,603,152,604,153,57,58,0,59,0,0,606,154,0,0,62,0],[0,0,0,603,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,575,0,0,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,607,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,612,265,0,0,0,0],[0,0,0,609,152,610,153,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,609,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,549,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0]],"accepting":[false,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,false,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,false,false,true,false,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,false,false,true,true,false,false,true,true,true,false,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,false,false,false,false,false,false,false,true,true,false,false,true,true,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,false,true,true,false,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,false,true,true,true,true,true,false,true,true,false,true,true,true],"tags":[[],["broken_cluster"],["consonant_syllable"],["vowel_syllable"],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["consonant_syllable"],["broken_cluster"],["symbol_cluster"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["broken_cluster"],["broken_cluster"],["consonant_syllable","broken_cluster"],["broken_cluster"],[],["broken_cluster"],["symbol_cluster"],[],["symbol_cluster"],["symbol_cluster"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],[],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["symbol_cluster"],["symbol_cluster"],["symbol_cluster"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],[],["consonant_syllable"],["consonant_syllable"],[],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],[],["vowel_syllable"],["vowel_syllable"],[],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],[],[],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["broken_cluster"],["symbol_cluster"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],[],[],["consonant_syllable"],["consonant_syllable"],[],[],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],[],[],["vowel_syllable"],["vowel_syllable"],[],[],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],[],[],["broken_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],[],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],[],[],["consonant_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],[],[],["vowel_syllable"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],[],[],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],[],["standalone_cluster"],[],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],[],[],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],[],[],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],[],[],[],[],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],[],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],["consonant_syllable"],["vowel_syllable"],["standalone_cluster"]]}');var $aa333a9607471296$exports={};$aa333a9607471296$exports=JSON.parse('{"categories":["O","IND","S","GB","B","FM","CGJ","VMAbv","VMPst","VAbv","VPst","CMBlw","VPre","VBlw","H","VMBlw","CMAbv","MBlw","CS","R","SUB","MPst","MPre","FAbv","FPst","FBlw","SMAbv","SMBlw","VMPre","ZWNJ","ZWJ","WJ","VS","N","HN","MAbv"],"decompositions":{"2507":[2503,2494],"2508":[2503,2519],"2888":[2887,2902],"2891":[2887,2878],"2892":[2887,2903],"3018":[3014,3006],"3019":[3015,3006],"3020":[3014,3031],"3144":[3142,3158],"3264":[3263,3285],"3271":[3270,3285],"3272":[3270,3286],"3274":[3270,3266],"3275":[3270,3266,3285],"3402":[3398,3390],"3403":[3399,3390],"3404":[3398,3415],"3546":[3545,3530],"3548":[3545,3535],"3549":[3545,3535,3530],"3550":[3545,3551],"3635":[3661,3634],"3763":[3789,3762],"3955":[3953,3954],"3957":[3953,3956],"3958":[4018,3968],"3959":[4018,3953,3968],"3960":[4019,3968],"3961":[4019,3953,3968],"3969":[3953,3968],"6971":[6970,6965],"6973":[6972,6965],"6976":[6974,6965],"6977":[6975,6965],"6979":[6978,6965],"69934":[69937,69927],"69935":[69938,69927],"70475":[70471,70462],"70476":[70471,70487],"70843":[70841,70842],"70844":[70841,70832],"70846":[70841,70845],"71098":[71096,71087],"71099":[71097,71087]},"stateTable":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[2,2,3,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,17,18,11,19,20,21,22,0,0,23,0,0,2,0,24,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,27,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,39,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,49,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,53,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0]],"accepting":[false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true],"tags":[[],["broken_cluster"],["independent_cluster"],["symbol_cluster"],["standard_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["numeral_cluster"],["broken_cluster"],["independent_cluster"],["symbol_cluster"],["symbol_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["virama_terminated_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["broken_cluster"],["broken_cluster"],["numeral_cluster"],["number_joiner_terminated_cluster"],["standard_cluster"],["standard_cluster"],["numeral_cluster"]]}');var $90a9d3398ee54fe5$export$a513ea61a7bee91c={X:1,C:2,V:4,N:8,H:16,ZWNJ:32,ZWJ:64,M:128,SM:256,VD:512,A:1024,Placeholder:2048,Dotted_Circle:4096,RS:8192,Coeng:16384,Repha:32768,Ra:65536,CM:131072,Symbol:262144
};var $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0={Start:1,Ra_To_Become_Reph:2,Pre_M:4,Pre_C:8,Base_C:16,After_Main:32,Above_C:64,Before_Sub:128,Below_C:256,After_Sub:512,Before_Post:1024,Post_C:2048,After_Post:4096,Final_C:8192,SMVD:16384,End:32768};var $90a9d3398ee54fe5$export$8519deaa7de2b07=$90a9d3398ee54fe5$export$a513ea61a7bee91c.C|$90a9d3398ee54fe5$export$a513ea61a7bee91c.Ra|$90a9d3398ee54fe5$export$a513ea61a7bee91c.CM|$90a9d3398ee54fe5$export$a513ea61a7bee91c.V|$90a9d3398ee54fe5$export$a513ea61a7bee91c.Placeholder|$90a9d3398ee54fe5$export$a513ea61a7bee91c.Dotted_Circle;var $90a9d3398ee54fe5$export$bbcd928767338e0d=$90a9d3398ee54fe5$export$a513ea61a7bee91c.ZWJ|$90a9d3398ee54fe5$export$a513ea61a7bee91c.ZWNJ;var $90a9d3398ee54fe5$export$ca9599b2a300afc=$90a9d3398ee54fe5$export$a513ea61a7bee91c.H|$90a9d3398ee54fe5$export$a513ea61a7bee91c.Coeng;var $90a9d3398ee54fe5$export$e99d119da76a0fc5={Default:{hasOldSpec:false,virama:0,basePos:"Last",rephPos:$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Before_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Devanagari:{hasOldSpec:true,virama:2381,basePos:"Last",rephPos:$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Before_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Bengali:{hasOldSpec:true,virama:2509,basePos:"Last",rephPos:$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Sub,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Gurmukhi:{hasOldSpec:true,virama:2637,basePos:"Last",rephPos:$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Before_Sub,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Gujarati:{hasOldSpec:true,virama:2765,basePos:"Last",rephPos:$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Before_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Oriya:{hasOldSpec:true,virama:2893,basePos:"Last",rephPos:$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Main,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Tamil:{hasOldSpec:true,virama:3021,basePos:"Last",rephPos:$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Telugu:{hasOldSpec:true,virama:3149,basePos:"Last",rephPos:$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Post,rephMode:"Explicit",blwfMode:"Post_Only"},Kannada:{hasOldSpec:true,virama:3277,basePos:"Last",rephPos:$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Post,rephMode:"Implicit",blwfMode:"Post_Only"},Malayalam:{hasOldSpec:true,virama:3405,basePos:"Last",rephPos:$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Main,rephMode:"Log_Repha",blwfMode:"Pre_And_Post"},Khmer:{hasOldSpec:false,virama:6098,basePos:"First",rephPos:$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Ra_To_Become_Reph,rephMode:"Vis_Repha",blwfMode:"Pre_And_Post"}};var $90a9d3398ee54fe5$export$f647c9cfdd77d95a={6078:[6081,6078],6079:[6081,6079],6080:[6081,6080],6084:[6081,6084],6085:[6081,6085]};var{decompositions:$7826f90f6f0cecc9$var$decompositions}=(0,$parcel$interopDefault2($aa333a9607471296$exports));var $7826f90f6f0cecc9$var$trie=new(0,import_unicode_trie2.default)((0,$12727730ddfc8bfe$export$94fdf11bafc8de6b)("AAARAAAAAACgwgAAAbENTvLtnX+sHUUVx/f13nd/vHf7bl+FRGL7R0OJMcWYphBrimkVCSJR2xiEaLEGQ7AkBGowbYRSgj8K2B/GkpRYE6wlQSyJKCagrSlGkmqsqUZMY7S2CWkgqQViQSkt4Hfuzrx77tyZ2fm1u+/RPcknuzs7O3PmnDOzs7N73zteS5KXwKvgDTCnniTvBfPBJeAVpP2vFr69GGUtAkvAModyr0DeT4BrwCpwPVgDbga3ga+DjYbyluLcCvBN8F2wGWwHO8Ej4DjyPIbtz0DCeZpvD4CD4E/gb+AoOAFOgtPgLKiNJkkbTIKLwALwfvAh8GGwHFwFPg2uAzeCm8Ft4E5wN7gPPAi+D34AfgR+Ap7kx8+AZ8HvwZ/BEXAMvAheAa+Bc6OpzvVGknTABY30eB62C8GlYDFYCpaDq/n5z2J7PVgDbgG3N1KbrOdbWzby/N/G9i6wlR8/wLebUNcOll7vX7PLsQ4bdpAy92B/L3gK7AO/A38EfwX/AC+AkyT/m3x7mqdtYz7Gfq2ZJOPgPc3UXu/D9uJmmmcRT1uC7TJwZTONJxFL1+J4JbgBrAG3gNv5Nev5dhO2m3l54rqtON7RNLd1V8Z5auMfI+8Wbvv12P4Ux78AvyZl/Bb7fwD34HwH/EVR/t8t6rRlrYgFlHnMsdyXIupRFP+Gzv8Bb4CklSSjrTR9bz21uZx/Nj8v+uIFOJ4HFnJo3kWtNG6WkPSzBl1YbC8jeVfx+q+R9Pg48lxN8jFdhd8+01LrLTCdq6io8GNb1a8qKioqKioqKioc2cbXGcrWQ2Ynf9a9rmV/zVua9Dc16V/gz8pfxvar4A6wAdwL7gdbwUPgh+BR8AR4qpWuLe3D9gA4CA6DI+AoOAFOtdL1nNexfYs937fxDA8ubKf1zmv3dViI/Uvb9m2sqKioqAiHrVtehrH3TK2/3l4WZduioqIiDq+Rd1Jbef9ehnHmSnCtNNf7nOPcr8PHilO8jrfBF9v996lfwf6tUpl3tPvvdSjsvcwGnLt3Gsw/kzkpK8CdYH83my3Id0iT91WkL5xMktXgIfD85OD54zjfmYu5OFgN7h1LkmdBMg5fgbvAChzv49ujfEuZ3xlOk7kReTaSfL/B/jl+fMXsJLkb7AcPj8TlHC/zsgnYcyLd3zSh1vGAJr2ioqKiIn/eKXkMjn3/cWF5t/z6y37+K5urwP2YB36vPfw8yr7zeRjpu8g8cTf2H2+n89EtivLE93fs27Ez/Br2vM2+qWPl/ZyX9StFfQxW5v724PPxzXz7XHu4Pps5Jvtmiq13szmzfP0hlHkYHGn358bHeD0vYvsy+K+kz9vt/jy8gT40G1w4Rua0PN98nnaGf/e1G+mXIO2DY8P6Xz7WPz7Ky/7omJ0PBff4+B91fAqsAp8HXwI3gR04txbbdWDDWDpP/g7Yxs6BXWAP2AueJHo+M5bOpw+Cw+AIOApOgFMW7Xkdec6AkXH1+QfgyzbOTY73jy/C/gJ+/CCOP4D9xfz4I9h+TFMWtf9SRWzZwq7f0yi/L9voWSRbDfV/clx/3TuKfjoT26/iX813URx4tiVG3ay/sfFuJenb7J50A4mr1di/CZzLKZ6y2reunup4qzT+fM0wHp0PUD9+A7bYNJ5fn3eNP/Ft5bc0+S4n9/l1Gj+K82zesd1wfj3fZ79h2YyyVvLj7djfCR4xjJEyuy1+S/FyDt/MPwodn5hB8axrxy9nSBtYjOyHrs+BQ+B58E+u+wsWbWBtpb/hYL8RuA/pJ8fT2GffX+wl+daSa08jz9nxNG2k4963XBG/ZVhpUS573mh3BtPo7x/Eb7pE2yd5XvZssY/M/RZLc9SLeDsfD5gfTidi9//pwrzWu7t9lKcN7dxynthAh8vcKrQu1frHTGKBNF662KfoOXU1FsaFxe6x2kjClkBnGvXxwX0bytZ5unK+S9n2jxabTc5M0HUaIyTrfFa+Ljmflc9Xz7JtNdPa4eKz6WAPlb5l6xfLBzopWxcfncvSf7rHRJk2KSN2bKRsvcu2UZmxVIb9qd551e8rZcTERGuQ+qwIjERkjl2+djOlhWfpibnp/qxmP92FVr1/bc9GYxxuI5o3UzdukzYpj+H6nOxra9nHiaksjhDdsasPe9ca/CvOU1GVwUT4t8P921H4T8gsnkdIh+dn/pXrU0mnOZw21CbJv1P5LP0r4jtkbLH171BbCvavnFfeZ8L8K2wv/CuQRU6n/qWSNSbr2mO8xtK/U+Mq6Y/1yQyFJHHtv8Kn2uOC/Gvbf2VEPxJ9SvhY5d+Q+y21iRxLruOzsY6MWGrOkPHZ1b+jFuPzqEX/VcmoZkyIPT53k36/DZnrMd+K/Dbjs6kv6+6VYl9OU+WT07TplvMvWWhfVo3f4t48S+rbjIZl/1b5Xyd5vJdQiTyf7tUdMlbn0J9d/cn6c7M5DO1TNF0+bmT0Z3qdKaaoXeg1Lv7NEhufzyT/6vIKEeO1jX/psdi38a889qpkStcI/u12U3zE1Re+/Yv6QNwvdTDJGi9t2ps1XtKYDJ0PmcZKcU812sRxvms7J47mZ5c+SWJD5LPRg4qqj+nWL8Q5sRVrGar1EG0sOI6ndH3DVWL7wpeuwaY6O1Nh19N+Oqs5uI7Eto3aICxNrCn5rAuZ7Cn2bdJtfZPlL/k8Ld+ki6v9E56XPUvT52mV/YVvmMj2Zz8TEuNMTxfHuFfFUJ60OLrz1utODnFG47fLbSjXy0xSy4gN63EywlhMxWcNmK71svszi5OGTvdJe3rtd8ifB6I/mKBr1ap7uU/sqqTsMb+H5fxBFyuq+yqLnd7cmj33TwyOVVOwuj3nVXRtQtUGWR9jzI6kecZrKSKPuFakU2hZmXXZMDlsS1W9jBavv6eHpf3EtfJ7mKwYV0lX2g9FVY5N+Ung9aH1590+n3KLgEredfiez6u9svisY/Suk9Jsnkli1a+C1m/T7rzqd5UY9mfiXX9R92ibdZUIawTC96b1GBn6rDG1JsPv/b392SkiXVUGmyN0LO5LYi46Zf/Adc/QMaCo8TtG/bH1Z/TsW1QfUPRjm2cZee5PRaT33lEbnhlMax4qe1o/Y8a0icdaoOv9bsh+Hj6jonueoGtHumcMlX9lxLxXq7/D84fSzznGt6rtUerXxYU47/IcPeG3vqBbJ1StETZqg9fS2Akd/0Ovp+/CxD3P+/6bQwzJtsvyh5w+XjeXH9KfXGH3/VbSX4tS4XoftPZbnvcyxX1G5QvW1wbWTkbs7c3mTco6NWODbdxk3R9lGZo/aGxhiknTmETXLVs1c90u9+mBGCf6hs6fsmTq29sxPv8d82CuhCpNjGNjg31blGHrz1i41hd6nuYzbU3XhLQzj7Jt67Otw0uXUdDoH8e4F/joMdVui2dMJc3E+Tetvr6jEtPnPhJaVwz9Y7TDVlx1qnfitlEbtzlTVD0qX/pcm1esxI65PO3mU4eNrr5SZMz46FDE+aIlb5tntb1o/WOUETsW847pvNpaZH225eUpNnrS9yDy9wTysyr9XVOe63+qd3M6e4X6Ptd1Dpc1SdV53ZqFag1hpP+bE5f4ivY74BzXilzWWW1+S0TjJng91Gd9wmbNgpMVz6W8d7GJZwWtWp8p++c8fpjW0Vzff3dJfzGuoersEtnmpjVLupY48H6o7n8/C+kvJn+Lcd6q3QHx3usvZax3W8apvP6rev+UJSHfiCYe/h2aTwTaRi5DO28ZSd9zNhTfJ8b2je7drOo9HtNNbPMW03zOpq2qNqnKFN+0huhlMye2Pe9TdzfCedfxMlRfG7xjncaJ7fiXMYZk3X+ZvuKbXCGh8y8XH8TybajPTfq4tjG2/qb0RJO3SB19ba2SMuoNbW8R/g653qa9sdsRYsssu+ZxPss+tnayFd94yjofEi+hZdvo73q9jd3yisUYbfEpQ9XmMqUIm2fFZh4xkZeE1BNDL5v+ZcqXh/90bSwjflz8U0QcFWHzPOpy0amM+stqf1ad7LltVPqWmG3p3+GiIvLJf8duYA3NcBwbWRpkDXmo7RP+z5E6+8Xswz512dbrW2aMNrpKaBt9y45VR2j9efhAQL/PF38Xadq907NYC5dpZLy3kMX6PUHgeGGS3nfoPn9rObJ9s/4uMntnSt/J5TX+2ZRhtFcB8ZgVmyZbit8GCd/7/C7EOcYK7LdyjNhIlL81nqN/Xf9mOHt/anovP4X0tyem/OUZF9TmscY2nzEulq96ZeVwv2Bxxnwk3s9njT8m/YWOKl199fe53tTXyu5DLojfKWXej6R3RAPtDf1ex/PvtdJ8Q7aP7Ht6XpdXSJf8/wMdQuS/j0/HtKny9KbT+oT2K2ETuW7Tt09Uss5nCdWhjPuMTXzrztO4FHMy+V6TJaH9I6+2C5HPq9oc8xlKRva5rF8M/7tC26/6BsNFivQ//e1pVsyP19VrNrH1D5Wi7oUDdVp8Q5HVr1ztlzXPtH2Gc30+lMX3edH3ecm3fp0+Ps/IPvWH6OpiV7meEMlbzyIkpi1jtDU0Pmm6nMd0jU8bXK7N0jWkb/joHyNebfWgtrJpc0h7QiQP24aKqcwYPnTRIUmG63fRQ5VXLsekgy5NtVXVadLfpjzV9S6xYnuNri159ZmsmLCpJ8/6XSRGOaH659H+GLYtwhd51xvq31B9Qm0UavM84qhoKaNOnfwf"));var $7826f90f6f0cecc9$var$stateMachine=new(0,import_dfa.default)((0,$parcel$interopDefault2($4b0735ca6c692ea5$exports)));var $7826f90f6f0cecc9$export$2e2bcd8739ae039=class extends(0,$649970d87335b30f$export$2e2bcd8739ae039){static planFeatures(plan){plan.addStage($7826f90f6f0cecc9$var$setupSyllables);plan.addStage(["locl","ccmp"]);plan.addStage($7826f90f6f0cecc9$var$initialReordering);plan.addStage("nukt");plan.addStage("akhn");plan.addStage("rphf",false);plan.addStage("rkrf");plan.addStage("pref",false);plan.addStage("blwf",false);plan.addStage("abvf",false);plan.addStage("half",false);plan.addStage("pstf",false);plan.addStage("vatu");plan.addStage("cjct");plan.addStage("cfar",false);plan.addStage($7826f90f6f0cecc9$var$finalReordering);plan.addStage({local:["init"],global:["pres","abvs","blws","psts","haln","dist","abvm","blwm","calt","clig"]});plan.unicodeScript=$130d1a642ebcd2b7$export$ce50e82f12a827a4(plan.script);plan.indicConfig=(0,$90a9d3398ee54fe5$export$e99d119da76a0fc5)[plan.unicodeScript]||(0,$90a9d3398ee54fe5$export$e99d119da76a0fc5).Default;plan.isOldSpec=plan.indicConfig.hasOldSpec&&plan.script[plan.script.length-1]!=="2";}
static assignFeatures(plan,glyphs){for(let i2=glyphs.length-1;i2>=0;i2--){let codepoint=glyphs[i2].codePoints[0];let d=(0,$90a9d3398ee54fe5$export$f647c9cfdd77d95a)[codepoint]||$7826f90f6f0cecc9$var$decompositions[codepoint];if(d){let decomposed=d.map((c)=>{let g=plan.font.glyphForCodePoint(c);return new(0,$10e7b257e1a9a756$export$2e2bcd8739ae039)(plan.font,g.id,[c],glyphs[i2].features);});glyphs.splice(i2,1,...decomposed);}}}};(0,_define_property)($7826f90f6f0cecc9$export$2e2bcd8739ae039,"zeroMarkWidths","NONE");function $7826f90f6f0cecc9$var$indicCategory(glyph){return $7826f90f6f0cecc9$var$trie.get(glyph.codePoints[0])>>8;}
function $7826f90f6f0cecc9$var$indicPosition(glyph){return 1<<($7826f90f6f0cecc9$var$trie.get(glyph.codePoints[0])&255);}
var $7826f90f6f0cecc9$var$IndicInfo=class{constructor(category,position2,syllableType,syllable){this.category=category;this.position=position2;this.syllableType=syllableType;this.syllable=syllable;}};function $7826f90f6f0cecc9$var$setupSyllables(font,glyphs){let syllable=0;let last4=0;for(let[start,end,tags]of $7826f90f6f0cecc9$var$stateMachine.match(glyphs.map($7826f90f6f0cecc9$var$indicCategory))){if(start>last4){++syllable;for(let i2=last4;i2<start;i2++)
glyphs[i2].shaperInfo=new $7826f90f6f0cecc9$var$IndicInfo((0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).X,(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).End,"non_indic_cluster",syllable);}
++syllable;for(let i2=start;i2<=end;i2++)
glyphs[i2].shaperInfo=new $7826f90f6f0cecc9$var$IndicInfo(1<<$7826f90f6f0cecc9$var$indicCategory(glyphs[i2]),$7826f90f6f0cecc9$var$indicPosition(glyphs[i2]),tags[0],syllable);last4=end+1;}
if(last4<glyphs.length){++syllable;for(let i2=last4;i2<glyphs.length;i2++)
glyphs[i2].shaperInfo=new $7826f90f6f0cecc9$var$IndicInfo((0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).X,(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).End,"non_indic_cluster",syllable);}}
function $7826f90f6f0cecc9$var$isConsonant(glyph){return glyph.shaperInfo.category&(0,$90a9d3398ee54fe5$export$8519deaa7de2b07);}
function $7826f90f6f0cecc9$var$isJoiner(glyph){return glyph.shaperInfo.category&(0,$90a9d3398ee54fe5$export$bbcd928767338e0d);}
function $7826f90f6f0cecc9$var$isHalantOrCoeng(glyph){return glyph.shaperInfo.category&(0,$90a9d3398ee54fe5$export$ca9599b2a300afc);}
function $7826f90f6f0cecc9$var$wouldSubstitute(glyphs,feature){for(let glyph of glyphs)
glyph.features={[feature]:true};let GSUB=glyphs[0]._font._layoutEngine.engine.GSUBProcessor;GSUB.applyFeatures([feature],glyphs);return glyphs.length===1;}
function $7826f90f6f0cecc9$var$consonantPosition(font,consonant,virama){let glyphs=[virama,consonant,virama];if($7826f90f6f0cecc9$var$wouldSubstitute(glyphs.slice(0,2),"blwf")||$7826f90f6f0cecc9$var$wouldSubstitute(glyphs.slice(1,3),"blwf"))
return(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Below_C;else if($7826f90f6f0cecc9$var$wouldSubstitute(glyphs.slice(0,2),"pstf")||$7826f90f6f0cecc9$var$wouldSubstitute(glyphs.slice(1,3),"pstf"))
return(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Post_C;else if($7826f90f6f0cecc9$var$wouldSubstitute(glyphs.slice(0,2),"pref")||$7826f90f6f0cecc9$var$wouldSubstitute(glyphs.slice(1,3),"pref"))
return(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Post_C;return(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C;}
function $7826f90f6f0cecc9$var$initialReordering(font,glyphs,plan){let indicConfig=plan.indicConfig;let features=font._layoutEngine.engine.GSUBProcessor.features;let dottedCircle=font.glyphForCodePoint(9676).id;let virama=font.glyphForCodePoint(indicConfig.virama).id;if(virama){let info=new(0,$10e7b257e1a9a756$export$2e2bcd8739ae039)(font,virama,[indicConfig.virama]);for(let i2=0;i2<glyphs.length;i2++)
if(glyphs[i2].shaperInfo.position===(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C)
glyphs[i2].shaperInfo.position=$7826f90f6f0cecc9$var$consonantPosition(font,glyphs[i2].copy(),info);}
for(let start=0,end=$7826f90f6f0cecc9$var$nextSyllable(glyphs,0);start<glyphs.length;start=end,end=$7826f90f6f0cecc9$var$nextSyllable(glyphs,start)){let{category,syllableType}=glyphs[start].shaperInfo;if(syllableType==="symbol_cluster"||syllableType==="non_indic_cluster")
continue;if(syllableType==="broken_cluster"&&dottedCircle){let g=new(0,$10e7b257e1a9a756$export$2e2bcd8739ae039)(font,dottedCircle,[9676]);g.shaperInfo=new $7826f90f6f0cecc9$var$IndicInfo(1<<$7826f90f6f0cecc9$var$indicCategory(g),$7826f90f6f0cecc9$var$indicPosition(g),glyphs[start].shaperInfo.syllableType,glyphs[start].shaperInfo.syllable);let i2=start;while(i2<end&&glyphs[i2].shaperInfo.category===(0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).Repha)
i2++;glyphs.splice(i2++,0,g);end++;}
let base=end;let limit=start;let hasReph=false;if(indicConfig.rephPos!==(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph&&features.rphf&&start+3<=end&&(indicConfig.rephMode==="Implicit"&&!$7826f90f6f0cecc9$var$isJoiner(glyphs[start+2])||indicConfig.rephMode==="Explicit"&&glyphs[start+2].shaperInfo.category===(0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).ZWJ)){let g=[glyphs[start].copy(),glyphs[start+1].copy(),glyphs[start+2].copy()];if($7826f90f6f0cecc9$var$wouldSubstitute(g.slice(0,2),"rphf")||indicConfig.rephMode==="Explicit"&&$7826f90f6f0cecc9$var$wouldSubstitute(g,"rphf")){limit+=2;while(limit<end&&$7826f90f6f0cecc9$var$isJoiner(glyphs[limit]))
limit++;base=start;hasReph=true;}}else if(indicConfig.rephMode==="Log_Repha"&&glyphs[start].shaperInfo.category===(0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).Repha){limit++;while(limit<end&&$7826f90f6f0cecc9$var$isJoiner(glyphs[limit]))
limit++;base=start;hasReph=true;}
switch(indicConfig.basePos){case"Last":{let i2=end;let seenBelow=false;do{let info=glyphs[--i2].shaperInfo;if($7826f90f6f0cecc9$var$isConsonant(glyphs[i2])){if(info.position!==(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Below_C&&(info.position!==(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Post_C||seenBelow)){base=i2;break;}
if(info.position===(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Below_C)
seenBelow=true;base=i2;}else if(start<i2&&info.category===(0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).ZWJ&&glyphs[i2-1].shaperInfo.category===(0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).H)
break;}while(i2>limit);break;}
case"First":base=start;for(let i2=base+1;i2<end;i2++)
if($7826f90f6f0cecc9$var$isConsonant(glyphs[i2]))
glyphs[i2].shaperInfo.position=(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Below_C;}
if(hasReph&&base===start&&limit-base<=2)
hasReph=false;for(let i1=start;i1<base;i1++){let info=glyphs[i1].shaperInfo;info.position=Math.min((0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_C,info.position);}
if(base<end)
glyphs[base].shaperInfo.position=(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C;for(let i2=base+1;i2<end;i2++)
if(glyphs[i2].shaperInfo.category===(0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).M){for(let j=i2+1;j<end;j++)
if($7826f90f6f0cecc9$var$isConsonant(glyphs[j])){glyphs[j].shaperInfo.position=(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Final_C;break;}
break;}
if(hasReph)
glyphs[start].shaperInfo.position=(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph;if(plan.isOldSpec){let disallowDoubleHalants=plan.unicodeScript!=="Malayalam";for(let i2=base+1;i2<end;i2++)
if(glyphs[i2].shaperInfo.category===(0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).H){let j;for(j=end-1;j>i2;j--){if($7826f90f6f0cecc9$var$isConsonant(glyphs[j])||disallowDoubleHalants&&glyphs[j].shaperInfo.category===(0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).H)
break;}
if(glyphs[j].shaperInfo.category!==(0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).H&&j>i2){let t=glyphs[i2];glyphs.splice(i2,0,...glyphs.splice(i2+1,j-i2));glyphs[j]=t;}
break;}}
let lastPos=(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Start;for(let i3=start;i3<end;i3++){let info=glyphs[i3].shaperInfo;if(info.category&((0,$90a9d3398ee54fe5$export$bbcd928767338e0d)|(0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).N|(0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).RS|(0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).CM|(0,$90a9d3398ee54fe5$export$ca9599b2a300afc)&info.category)){info.position=lastPos;if(info.category===(0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).H&&info.position===(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_M){for(let j=i3;j>start;j--)
if(glyphs[j-1].shaperInfo.position!==(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_M){info.position=glyphs[j-1].shaperInfo.position;break;}}}else if(info.position!==(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).SMVD)
lastPos=info.position;}
let last4=base;for(let i4=base+1;i4<end;i4++){if($7826f90f6f0cecc9$var$isConsonant(glyphs[i4])){for(let j=last4+1;j<i4;j++)
if(glyphs[j].shaperInfo.position<(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).SMVD)
glyphs[j].shaperInfo.position=glyphs[i4].shaperInfo.position;last4=i4;}else if(glyphs[i4].shaperInfo.category===(0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).M)
last4=i4;}
let arr2=glyphs.slice(start,end);arr2.sort((a,b10)=>a.shaperInfo.position-b10.shaperInfo.position);glyphs.splice(start,arr2.length,...arr2);for(let i5=start;i5<end;i5++)
if(glyphs[i5].shaperInfo.position===(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C){base=i5;break;}
for(let i6=start;i6<end&&glyphs[i6].shaperInfo.position===(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph;i6++)
glyphs[i6].features.rphf=true;let blwf=!plan.isOldSpec&&indicConfig.blwfMode==="Pre_And_Post";for(let i7=start;i7<base;i7++){glyphs[i7].features.half=true;if(blwf)
glyphs[i7].features.blwf=true;}
for(let i8=base+1;i8<end;i8++){glyphs[i8].features.abvf=true;glyphs[i8].features.pstf=true;glyphs[i8].features.blwf=true;}
if(plan.isOldSpec&&plan.unicodeScript==="Devanagari"){for(let i2=start;i2+1<base;i2++)
if(glyphs[i2].shaperInfo.category===(0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).Ra&&glyphs[i2+1].shaperInfo.category===(0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).H&&(i2+1===base||glyphs[i2+2].shaperInfo.category===(0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).ZWJ)){glyphs[i2].features.blwf=true;glyphs[i2+1].features.blwf=true;}}
let prefLen=2;if(features.pref&&base+prefLen<end)
for(let i9=base+1;i9+prefLen-1<end;i9++){let g=[glyphs[i9].copy(),glyphs[i9+1].copy()];if($7826f90f6f0cecc9$var$wouldSubstitute(g,"pref")){for(let j=0;j<prefLen;j++)
glyphs[i9++].features.pref=true;if(features.cfar)
for(;i9<end;i9++)
glyphs[i9].features.cfar=true;break;}}
for(let i10=start+1;i10<end;i10++)
if($7826f90f6f0cecc9$var$isJoiner(glyphs[i10])){let nonJoiner=glyphs[i10].shaperInfo.category===(0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).ZWNJ;let j=i10;do{j--;if(nonJoiner)
delete glyphs[j].features.half;}while(j>start&&!$7826f90f6f0cecc9$var$isConsonant(glyphs[j]));}}}
function $7826f90f6f0cecc9$var$finalReordering(font,glyphs,plan){let indicConfig=plan.indicConfig;let features=font._layoutEngine.engine.GSUBProcessor.features;for(let start=0,end=$7826f90f6f0cecc9$var$nextSyllable(glyphs,0);start<glyphs.length;start=end,end=$7826f90f6f0cecc9$var$nextSyllable(glyphs,start)){let tryPref=!!features.pref;let base=start;for(;base<end;base++)
if(glyphs[base].shaperInfo.position>=(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C){if(tryPref&&base+1<end){for(let i2=base+1;i2<end;i2++)
if(glyphs[i2].features.pref){if(!(glyphs[i2].substituted&&glyphs[i2].isLigated&&!glyphs[i2].isMultiplied)){base=i2;while(base<end&&$7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[base]))
base++;glyphs[base].shaperInfo.position=(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).BASE_C;tryPref=false;}
break;}}
if(plan.unicodeScript==="Malayalam")
for(let i2=base+1;i2<end;i2++){while(i2<end&&$7826f90f6f0cecc9$var$isJoiner(glyphs[i2]))
i2++;if(i2===end||!$7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[i2]))
break;i2++;while(i2<end&&$7826f90f6f0cecc9$var$isJoiner(glyphs[i2]))
i2++;if(i2<end&&$7826f90f6f0cecc9$var$isConsonant(glyphs[i2])&&glyphs[i2].shaperInfo.position===(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Below_C){base=i2;glyphs[base].shaperInfo.position=(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C;}}
if(start<base&&glyphs[base].shaperInfo.position>(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C)
base--;break;}
if(base===end&&start<base&&glyphs[base-1].shaperInfo.category===(0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).ZWJ)
base--;if(base<end)
while(start<base&&glyphs[base].shaperInfo.category&((0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).N|(0,$90a9d3398ee54fe5$export$ca9599b2a300afc)))
base--;if(start+1<end&&start<base){let newPos=base===end?base-2:base-1;if(plan.unicodeScript!=="Malayalam"&&plan.unicodeScript!=="Tamil"){while(newPos>start&&!(glyphs[newPos].shaperInfo.category&((0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).M|(0,$90a9d3398ee54fe5$export$ca9599b2a300afc))))
newPos--;if($7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[newPos])&&glyphs[newPos].shaperInfo.position!==(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_M){if(newPos+1<end&&$7826f90f6f0cecc9$var$isJoiner(glyphs[newPos+1]))
newPos++;}else
newPos=start;}
if(start<newPos&&glyphs[newPos].shaperInfo.position!==(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_M){for(let i2=newPos;i2>start;i2--)
if(glyphs[i2-1].shaperInfo.position===(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_M){let oldPos=i2-1;if(oldPos<base&&base<=newPos)
base--;let tmp=glyphs[oldPos];glyphs.splice(oldPos,0,...glyphs.splice(oldPos+1,newPos-oldPos));glyphs[newPos]=tmp;newPos--;}}}
if(start+1<end&&glyphs[start].shaperInfo.position===(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph&&glyphs[start].shaperInfo.category===(0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).Repha!==(glyphs[start].isLigated&&!glyphs[start].isMultiplied)){let newRephPos;let rephPos=indicConfig.rephPos;let found=false;if(rephPos!==(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).After_Post){newRephPos=start+1;while(newRephPos<base&&!$7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[newRephPos]))
newRephPos++;if(newRephPos<base&&$7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[newRephPos])){if(newRephPos+1<base&&$7826f90f6f0cecc9$var$isJoiner(glyphs[newRephPos+1]))
newRephPos++;found=true;}
if(!found&&rephPos===(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).After_Main){newRephPos=base;while(newRephPos+1<end&&glyphs[newRephPos+1].shaperInfo.position<=(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).After_Main)
newRephPos++;found=newRephPos<end;}
if(!found&&rephPos===(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).After_Sub){newRephPos=base;while(newRephPos+1<end&&!(glyphs[newRephPos+1].shaperInfo.position&((0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Post_C|(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).After_Post|(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).SMVD)))
newRephPos++;found=newRephPos<end;}}
if(!found){newRephPos=start+1;while(newRephPos<base&&!$7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[newRephPos]))
newRephPos++;if(newRephPos<base&&$7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[newRephPos])){if(newRephPos+1<base&&$7826f90f6f0cecc9$var$isJoiner(glyphs[newRephPos+1]))
newRephPos++;found=true;}}
if(!found){newRephPos=end-1;while(newRephPos>start&&glyphs[newRephPos].shaperInfo.position===(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).SMVD)
newRephPos--;if($7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[newRephPos])){for(let i2=base+1;i2<newRephPos;i2++)
if(glyphs[i2].shaperInfo.category===(0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).M)
newRephPos--;}}
let reph=glyphs[start];glyphs.splice(start,0,...glyphs.splice(start+1,newRephPos-start));glyphs[newRephPos]=reph;if(start<base&&base<=newRephPos)
base--;}
if(tryPref&&base+1<end){for(let i2=base+1;i2<end;i2++)
if(glyphs[i2].features.pref){if(glyphs[i2].isLigated&&!glyphs[i2].isMultiplied){let newPos=base;if(plan.unicodeScript!=="Malayalam"&&plan.unicodeScript!=="Tamil"){while(newPos>start&&!(glyphs[newPos-1].shaperInfo.category&((0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).M|(0,$90a9d3398ee54fe5$export$ca9599b2a300afc))))
newPos--;if(newPos>start&&glyphs[newPos-1].shaperInfo.category===(0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).M){let oldPos2=i2;for(let j=base+1;j<oldPos2;j++)
if(glyphs[j].shaperInfo.category===(0,$90a9d3398ee54fe5$export$a513ea61a7bee91c).M){newPos--;break;}}}
if(newPos>start&&$7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[newPos-1])){if(newPos<end&&$7826f90f6f0cecc9$var$isJoiner(glyphs[newPos]))
newPos++;}
let oldPos=i2;let tmp=glyphs[oldPos];glyphs.splice(newPos+1,0,...glyphs.splice(newPos,oldPos-newPos));glyphs[newPos]=tmp;if(newPos<=base&&base<oldPos)
base++;}
break;}}
if(glyphs[start].shaperInfo.position===(0,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_M&&(!start||!/Cf|Mn/.test((0,$747425b437e121da$export$410364bbb673ddbc)(glyphs[start-1].codePoints[0]))))
glyphs[start].features.init=true;}}
function $7826f90f6f0cecc9$var$nextSyllable(glyphs,start){if(start>=glyphs.length)
return start;let syllable=glyphs[start].shaperInfo.syllable;while(++start<glyphs.length&&glyphs[start].shaperInfo.syllable===syllable);return start;}
var{categories:$7ab494fe977143c6$var$categories,decompositions:$7ab494fe977143c6$var$decompositions}=(0,$parcel$interopDefault2($aa333a9607471296$exports));var $7ab494fe977143c6$var$trie=new(0,import_unicode_trie2.default)((0,$12727730ddfc8bfe$export$94fdf11bafc8de6b)("AAACAAAAAADQqQAAAVEMrvPtnH+oHUcVx+fd99799W5e8mx+9NkYm7YUI2KtimkVDG3FWgVTFY1Fqa2VJirYB0IaUFLBaKGJViXir6oxKCSBoi0UTKtg2yA26h+milYNtMH+0WK1VQyvtBS/487hnncyMzuzu7N7n7kHPszu7OzMmTNzdmdmfzzfUmpiUqkemAMbwSZwKbjcxM1XEL4VvB28G3zAk+56cLMlfgdYADvBbvBF8GWwH9xl+CFLfwj8BPwU/MKS38/AMfA86v9ro9ucQcdR+CjCP4CT4EnwDPg3eAFMTik1A+bAPNgINoFLwGawZSpLfzXCrWAb+AjYDm4BO8FusAfsA/vBXeAgOALuNfv3g4fAcXACPAaeAE+B58Bp8NJUpnN7WqlZsHY629+A8GLwWvAG8BZwJXinOf5ehB8EN4AdYGE6q7dmF9uugs8hvz0V58nZK/L+Kva/BX4ADoN7prP6HgUPgkfA73L0eQzHnwBPgX+Y80+DF8FUW6lBO4tbjXA9uAi8pj3sS2/E9mawBVwNtoJt5pzrTXgzwk+B7awP7sT+7nY6WxFfQBlfAl8H3wU/Anezcu/D9s/BMRN3HOEJ8EdwMkC/J5HmmXZmq2fBIjgEVEepbieLX4Fw0MnSrzRxmrVsm7MB8ReDV4vjr3ekJy7rZGVPMb196Xm6oug83oRyt4CrwDVgK9gGPtzxn3uTOD6YPDPNJ5Hm0+AznazffJ7Z4KSnXncg3VfAN8EBhx42/z/UGdbrx52sr9yH8AFTrt5+2GzfnWPbKuw7ZszZyNh/xowZM2bMmDFjxsQyZ5lPNs3h9nBNYHuAfr9ic9ffiHnsJzznU91/j3P+2snWYf6G8O/gn+A0eMnEt7vQp5ulX4NwHmwEm7rZ8UsRXg6uMPvXIHwPuK7rLl+nu9FzfMyYMWPGpGVuslmarv+YMWPSkNq/d2D8uNDNngvdivA2y3jy9m72bF9v3ymOf2MExp8fG2TsAcfA2wJYBJetWBq3i+0fwPafwLmzSl0LFmZNPMLHZ4fpnsX2AdjgcXB+T6kPge+AG7D/vXYW/tLsc9r9M+MkVyLNR1m6g9g+ZfYvmMExcHCm+ftP0+T5y/e17Uw/PYLwHnC0m80TH+zG30/3mjSDnPS2/B4pUJ4rX3n+b5H3o92l6UjfvZ7y/oJzToGnu8O66XTPYf8/Jr8XWL6TPXf9bPnHtmVs+89AnxVgDVgPLgKvAg+Y/F6H7c1gC7jKHH8XeJ/x15vAjt4wvwVs7wKfBXvAPvA18G1wsJevj36f5gjS3etIq+ft9+PYQ73h/nFsn2D7f+5l75bo/VPYftpTblFb2/Jo2pdjfL0uXOX/qxfnp8vZVk2Xv9hbmu+LxvYt3A/7/WZsPoptPkr9bdCv1ya+d4TuMO8Tre5n4XkILwSbzP4l/WHazX1//r2O/z7cFHnvSYW8R/Vm02ZXIHxHze1Xdf9bbn7p0z2kDroNr2X9WL+7937sX9fP+v9h9n6jTrfI3jG9EfsfN3G35PR/G4uRfY3eMTwdkFa/C3hrf2kcfy/xYTOmprrfZsLbEe7rDPW/U9Rrv9k/ahmTL0cWWxP/YxRkgtES+zwNhZPs+FQgMj/liEsto2HxsZBQX2pZoLZqWc5riXDaQBLSt1L3hcnE+Vct7aYVKCEhbXk2+b7NZ84mmXAwCiL14Ne85S62MYPcXi5StM/YxlJF2lfabznZsC6/C807xvZV+yFve9d1KY//d3HNO8pKUXuTDh0Gpp7B852q6QFMgdWM2dfbAxOuEPQEfcEsO5fquJLZrMfyCtWP0heZF6oSdiH9u4aQvJRIJ/eL6BBynItLp5D2JRkY5L5u3xAf6lviXHWSZcfaKO/+5zvO/c9Xtq8uRXSObd+8bS0zJrS1rxTyX7k/a0nrk5D+mHeOC90uq1Q216X57lykfqHt62uTGJ2rat+i/kttyq/RSi29PlclZf2Xxq55ZeSV34T96d5X5PqZJ9I3ZX2lnkXt3xL1Kyrav/LutbZ6uGxuS6ss6V3pXOXY4kP7EBfyJT7+4TJQS9uf74f6n+3+6ZIi9bCtieatFfCxUMx4KMYfy/pzrB30vm88q9SZ11K+n9eeNN612UFKWX8uI9TmRca7TbWvKy2JvF6naF+b/0uRupZp35cZikhZvyniY2R/CbdB3vXynIC6hbRBHf4l1xps6w4x/lVEtxRtGZMuRA8uNh/jfYV8kdpsBUszcODrD7E2JT2KrB3V6XMhbdNjcXItxzaOJWkpf976/I5glQn1sbLP86U9FQvz4l0S28/lcWUJbbrE2l+Z/TlHvi4/kvZXLMyrmy1PW7x8hl6UFgvlmNM1Jq3aJ3Se0yJcpdwS6mOp/ZgLX5N1rdFKaIzH9ztquMbqq+/qCFRk+hRoyZvrTHuO8fNd/djmEzZJ3TdisN1bNQNl7y96DV/3mVkTtwasVdk1ai6ybGlDek8nT1fXc4M5tVSPvhqOsWQeXQs8L1n3IradU8OxCeVjK7dr7Dpl0cMHnUvt18TzfVsfb/pZY56fV2GnVPVIYaOi9xcZJ8cmKcu3wcuPsVHV5cdKFfZXNZefp5sWft+wzR1cczKCxh99NRx76HvwOpWNv6YZtAajt6WPyPswtVVs/VOJ7xpYx3VR31er7gMxNuV9Q443CDlW43KuYSXblsybfKYt58trfez7A1X7Tdm+V7TcoudL+LpVGf2khN63U5OyD5Af0NoUv06l7Jc0Rte+so4xL9Ayy3Rz+SufY5Jf267xcm7J4dd3kumIOrmk7Pl549bUY1puI91Gdb8Tpu+9tjmhXFdwtfVsTv5SQvXKW0cK4eXgPBO6iJ07NNVOHH7/tF1jyJdnWbrU/Uau3VNI156QZ2ZaZFu76i6vQXy9YJ2H9QZ97aF3p1xlx1yfuYRcd0Kl7NyaX190+pUOKI0tvus5j7/nSWKLo3FER8R3LHEx8gqwge1POgi1l1yfirV3zHpISHxs3vLeFXOellcG1DFGbGP00PPkeKEOaXIsqhzbruOh9Qk5L08nW2grJ0avsvWocv0zRh/fGCG0TV35hB4v0rds5Vddjm/sFCKx+aXSt2yalPZsolxXW46CDnXp0YQ0rdso9OUYPSYT6+yzuxxzlrVfFfavQ/LKqsP+dbVzE/0qRb8pKin6V9U6Fnn24pqHufLMWy90nV+0DkXmcrb0Uq+6pU7/qcs/67SHTeTaaBk9ipyXQvLqW1U7uPKpux/ESlP9umydR8H3UjzHoXxj0/J1Yr5ubHsPrWOJqxK+hk5r+EVtH3pe1XWIXa+1vQ9YJ/oZre1bGReh3xKWeX7BxfYstwh5errGJi59be8482cSsfUPQT4Xlc9K+XMmatcY0fo2+SxYQs/4XO8M03Ng/TxujYH+FRELSdH+6mtveu8itb1Cy7C9X8GfsVOcfN86RHg56wJ0ob5qOz/E/rIdq7YhF34/0cfoeWKVftJjIbWDbDfXeXR/prBOKWJ/3dd43+sr+32TvgEIEZ6/7Zt5/l7ghMm77u+ey4gcz5xfktA5vE9C5vy2Y3lpXeX40tHcLMX42qZHS/ltZluXiSlDxillt3VdIvufbc0j75wy5aWaOxWRUZmfl5nDSh3LzoWbXJOg8uumKkndp1PnH2IPfe+U33z7vjWhdPQuWMh4raqxWMh9X89RZtSZ7/JpyXs3NWQcETN3CZHU/lmVnstZB1+ZfM5A/1VJ2V9t8wTXN1S+f27mzaulbCxJHePwC1Tz/0K1/VdPvtOsba+vL7ZxM1/jakJ/V9/yfdtNx+i7bhVRRll/rrK+sk3qLt/3T0afH+tzz1HDfxzZ/HlGDduK1y/GL21zvKptQGWFSpVlFm0z+ZxD/vdAt9EqQ971NkRHW7qytog53+cfVfeFGLStfddfYka5x6dl+yi//4z6/559aUn4/+/k2pv8BqfM/0qVCnu+If2OJPRZUcyzJF/5RQm5xtM9ln+LRN+8U9+iMQS1Veg9q2z/TlV3Ett3/rLOIXOookidy/5X3GYD+S8a1z2e0vH695T9vhEqdbY//0dU3jWZ2rYq/cvCRT8r08/NLlT5/zySdSurv1ybLiup5tAp5+NNzfPJ5r61warapajItfTQNeK610/rWEMPyb+uOo/ierRNbGU01Z+rqneIPWNsT9t1rD+OYr8rm0eKvp/Ch1P4Yepyy+hWVD/f+VWXX5X+TZdfZZ+KLb9J+S8="));var $7ab494fe977143c6$var$stateMachine=new(0,import_dfa.default)((0,$parcel$interopDefault2($aa333a9607471296$exports)));var $7ab494fe977143c6$export$2e2bcd8739ae039=class extends(0,$649970d87335b30f$export$2e2bcd8739ae039){static planFeatures(plan){plan.addStage($7ab494fe977143c6$var$setupSyllables);plan.addStage(["locl","ccmp","nukt","akhn"]);plan.addStage($7ab494fe977143c6$var$clearSubstitutionFlags);plan.addStage(["rphf"],false);plan.addStage($7ab494fe977143c6$var$recordRphf);plan.addStage($7ab494fe977143c6$var$clearSubstitutionFlags);plan.addStage(["pref"]);plan.addStage($7ab494fe977143c6$var$recordPref);plan.addStage(["rkrf","abvf","blwf","half","pstf","vatu","cjct"]);plan.addStage($7ab494fe977143c6$var$reorder);plan.addStage(["abvs","blws","pres","psts","dist","abvm","blwm"]);}
static assignFeatures(plan,glyphs){for(let i2=glyphs.length-1;i2>=0;i2--){let codepoint=glyphs[i2].codePoints[0];if($7ab494fe977143c6$var$decompositions[codepoint]){let decomposed=$7ab494fe977143c6$var$decompositions[codepoint].map((c)=>{let g=plan.font.glyphForCodePoint(c);return new(0,$10e7b257e1a9a756$export$2e2bcd8739ae039)(plan.font,g.id,[c],glyphs[i2].features);});glyphs.splice(i2,1,...decomposed);}}}};(0,_define_property)($7ab494fe977143c6$export$2e2bcd8739ae039,"zeroMarkWidths","BEFORE_GPOS");function $7ab494fe977143c6$var$useCategory(glyph){return $7ab494fe977143c6$var$trie.get(glyph.codePoints[0]);}
var $7ab494fe977143c6$var$USEInfo=class{constructor(category,syllableType,syllable){this.category=category;this.syllableType=syllableType;this.syllable=syllable;}};function $7ab494fe977143c6$var$setupSyllables(font,glyphs){let syllable=0;for(let[start,end,tags]of $7ab494fe977143c6$var$stateMachine.match(glyphs.map($7ab494fe977143c6$var$useCategory))){++syllable;for(let i2=start;i2<=end;i2++)
glyphs[i2].shaperInfo=new $7ab494fe977143c6$var$USEInfo($7ab494fe977143c6$var$categories[$7ab494fe977143c6$var$useCategory(glyphs[i2])],tags[0],syllable);let limit=glyphs[start].shaperInfo.category==="R"?1:Math.min(3,end-start);for(let i1=start;i1<start+limit;i1++)
glyphs[i1].features.rphf=true;}}
function $7ab494fe977143c6$var$clearSubstitutionFlags(font,glyphs){for(let glyph of glyphs)
glyph.substituted=false;}
function $7ab494fe977143c6$var$recordRphf(font,glyphs){for(let glyph of glyphs)
if(glyph.substituted&&glyph.features.rphf)
glyph.shaperInfo.category="R";}
function $7ab494fe977143c6$var$recordPref(font,glyphs){for(let glyph of glyphs)
if(glyph.substituted)
glyph.shaperInfo.category="VPre";}
function $7ab494fe977143c6$var$reorder(font,glyphs){let dottedCircle=font.glyphForCodePoint(9676).id;for(let start=0,end=$7ab494fe977143c6$var$nextSyllable(glyphs,0);start<glyphs.length;start=end,end=$7ab494fe977143c6$var$nextSyllable(glyphs,start)){let i2,j;let info=glyphs[start].shaperInfo;let type=info.syllableType;if(type!=="virama_terminated_cluster"&&type!=="standard_cluster"&&type!=="broken_cluster")
continue;if(type==="broken_cluster"&&dottedCircle){let g=new(0,$10e7b257e1a9a756$export$2e2bcd8739ae039)(font,dottedCircle,[9676]);g.shaperInfo=info;for(i2=start;i2<end&&glyphs[i2].shaperInfo.category==="R";i2++);glyphs.splice(++i2,0,g);end++;}
if(info.category==="R"&&end-start>1)
for(i2=start+1;i2<end;i2++){info=glyphs[i2].shaperInfo;if($7ab494fe977143c6$var$isBase(info)||$7ab494fe977143c6$var$isHalant(glyphs[i2])){if($7ab494fe977143c6$var$isHalant(glyphs[i2]))
i2--;glyphs.splice(start,0,...glyphs.splice(start+1,i2-start),glyphs[i2]);break;}}
for(i2=start,j=end;i2<end;i2++){info=glyphs[i2].shaperInfo;if($7ab494fe977143c6$var$isBase(info)||$7ab494fe977143c6$var$isHalant(glyphs[i2]))
j=$7ab494fe977143c6$var$isHalant(glyphs[i2])?i2+1:i2;else if((info.category==="VPre"||info.category==="VMPre")&&j<i2)
glyphs.splice(j,1,glyphs[i2],...glyphs.splice(j,i2-j));}}}
function $7ab494fe977143c6$var$nextSyllable(glyphs,start){if(start>=glyphs.length)
return start;let syllable=glyphs[start].shaperInfo.syllable;while(++start<glyphs.length&&glyphs[start].shaperInfo.syllable===syllable);return start;}
function $7ab494fe977143c6$var$isHalant(glyph){return glyph.shaperInfo.category==="H"&&!glyph.isLigated;}
function $7ab494fe977143c6$var$isBase(info){return info.category==="B"||info.category==="GB";}
var $102b6fe50f1d50b4$var$SHAPERS={arab:(0,$764eb544bbe1ccf0$export$2e2bcd8739ae039),mong:(0,$764eb544bbe1ccf0$export$2e2bcd8739ae039),syrc:(0,$764eb544bbe1ccf0$export$2e2bcd8739ae039),"nko ":(0,$764eb544bbe1ccf0$export$2e2bcd8739ae039),phag:(0,$764eb544bbe1ccf0$export$2e2bcd8739ae039),mand:(0,$764eb544bbe1ccf0$export$2e2bcd8739ae039),mani:(0,$764eb544bbe1ccf0$export$2e2bcd8739ae039),phlp:(0,$764eb544bbe1ccf0$export$2e2bcd8739ae039),hang:(0,$e1c6bbc8cb416f8c$export$2e2bcd8739ae039),bng2:(0,$7826f90f6f0cecc9$export$2e2bcd8739ae039),beng:(0,$7826f90f6f0cecc9$export$2e2bcd8739ae039),dev2:(0,$7826f90f6f0cecc9$export$2e2bcd8739ae039),deva:(0,$7826f90f6f0cecc9$export$2e2bcd8739ae039),gjr2:(0,$7826f90f6f0cecc9$export$2e2bcd8739ae039),gujr:(0,$7826f90f6f0cecc9$export$2e2bcd8739ae039),guru:(0,$7826f90f6f0cecc9$export$2e2bcd8739ae039),gur2:(0,$7826f90f6f0cecc9$export$2e2bcd8739ae039),knda:(0,$7826f90f6f0cecc9$export$2e2bcd8739ae039),knd2:(0,$7826f90f6f0cecc9$export$2e2bcd8739ae039),mlm2:(0,$7826f90f6f0cecc9$export$2e2bcd8739ae039),mlym:(0,$7826f90f6f0cecc9$export$2e2bcd8739ae039),ory2:(0,$7826f90f6f0cecc9$export$2e2bcd8739ae039),orya:(0,$7826f90f6f0cecc9$export$2e2bcd8739ae039),taml:(0,$7826f90f6f0cecc9$export$2e2bcd8739ae039),tml2:(0,$7826f90f6f0cecc9$export$2e2bcd8739ae039),telu:(0,$7826f90f6f0cecc9$export$2e2bcd8739ae039),tel2:(0,$7826f90f6f0cecc9$export$2e2bcd8739ae039),khmr:(0,$7826f90f6f0cecc9$export$2e2bcd8739ae039),bali:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),batk:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),brah:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),bugi:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),buhd:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),cakm:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),cham:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),dupl:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),egyp:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),gran:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),hano:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),java:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),kthi:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),kali:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),khar:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),khoj:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),sind:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),lepc:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),limb:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),mahj:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),mtei:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),modi:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),hmng:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),rjng:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),saur:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),shrd:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),sidd:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),sinh:(0,$7826f90f6f0cecc9$export$2e2bcd8739ae039),sund:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),sylo:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),tglg:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),tagb:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),tale:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),lana:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),tavt:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),takr:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),tibt:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),tfng:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),tirh:(0,$7ab494fe977143c6$export$2e2bcd8739ae039),latn:(0,$649970d87335b30f$export$2e2bcd8739ae039),DFLT:(0,$649970d87335b30f$export$2e2bcd8739ae039)};function $102b6fe50f1d50b4$export$7877a478dd30fd3d(script){if(!Array.isArray(script))
script=[script];for(let s of script){let shaper=$102b6fe50f1d50b4$var$SHAPERS[s];if(shaper)
return shaper;}
return 0,$649970d87335b30f$export$2e2bcd8739ae039;}
var $0a876c45f1f7c41c$export$2e2bcd8739ae039=class extends(0,$a83b9c36aaa94fd3$export$2e2bcd8739ae039){applyLookup(lookupType,table){switch(lookupType){case 1:{let index2=this.coverageIndex(table.coverage);if(index2===-1)
return false;let glyph=this.glyphIterator.cur;switch(table.version){case 1:glyph.id=glyph.id+table.deltaGlyphID&65535;break;case 2:glyph.id=table.substitute.get(index2);break;}
return true;}
case 2:{let index2=this.coverageIndex(table.coverage);if(index2!==-1){let sequence=table.sequences.get(index2);if(sequence.length===0){this.glyphs.splice(this.glyphIterator.index,1);return true;}
this.glyphIterator.cur.id=sequence[0];this.glyphIterator.cur.ligatureComponent=0;let features=this.glyphIterator.cur.features;let curGlyph=this.glyphIterator.cur;let replacement=sequence.slice(1).map((gid,i2)=>{let glyph=new(0,$10e7b257e1a9a756$export$2e2bcd8739ae039)(this.font,gid,void 0,features);glyph.shaperInfo=curGlyph.shaperInfo;glyph.isLigated=curGlyph.isLigated;glyph.ligatureComponent=i2+1;glyph.substituted=true;glyph.isMultiplied=true;return glyph;});this.glyphs.splice(this.glyphIterator.index+1,0,...replacement);return true;}
return false;}
case 3:{let index2=this.coverageIndex(table.coverage);if(index2!==-1){let USER_INDEX=0;this.glyphIterator.cur.id=table.alternateSet.get(index2)[USER_INDEX];return true;}
return false;}
case 4:{let index2=this.coverageIndex(table.coverage);if(index2===-1)
return false;for(let ligature of table.ligatureSets.get(index2)){let matched=this.sequenceMatchIndices(1,ligature.components);if(!matched)
continue;let curGlyph=this.glyphIterator.cur;let characters=curGlyph.codePoints.slice();for(let index3 of matched)
characters.push(...this.glyphs[index3].codePoints);let ligatureGlyph=new(0,$10e7b257e1a9a756$export$2e2bcd8739ae039)(this.font,ligature.glyph,characters,curGlyph.features);ligatureGlyph.shaperInfo=curGlyph.shaperInfo;ligatureGlyph.isLigated=true;ligatureGlyph.substituted=true;let isMarkLigature=curGlyph.isMark;for(let i2=0;i2<matched.length&&isMarkLigature;i2++)
isMarkLigature=this.glyphs[matched[i2]].isMark;ligatureGlyph.ligatureID=isMarkLigature?null:this.ligatureID++;let lastLigID=curGlyph.ligatureID;let lastNumComps=curGlyph.codePoints.length;let curComps=lastNumComps;let idx=this.glyphIterator.index+1;for(let matchIndex of matched){if(isMarkLigature)
idx=matchIndex;else
while(idx<matchIndex){var ligatureComponent=curComps-lastNumComps+Math.min(this.glyphs[idx].ligatureComponent||1,lastNumComps);this.glyphs[idx].ligatureID=ligatureGlyph.ligatureID;this.glyphs[idx].ligatureComponent=ligatureComponent;idx++;}
lastLigID=this.glyphs[idx].ligatureID;lastNumComps=this.glyphs[idx].codePoints.length;curComps+=lastNumComps;idx++;}
if(lastLigID&&!isMarkLigature)
for(let i1=idx;i1<this.glyphs.length;i1++){if(this.glyphs[i1].ligatureID===lastLigID){var ligatureComponent=curComps-lastNumComps+Math.min(this.glyphs[i1].ligatureComponent||1,lastNumComps);this.glyphs[i1].ligatureComponent=ligatureComponent;}else
break;}
for(let i2=matched.length-1;i2>=0;i2--)
this.glyphs.splice(matched[i2],1);this.glyphs[this.glyphIterator.index]=ligatureGlyph;return true;}
return false;}
case 5:return this.applyContext(table);case 6:return this.applyChainingContext(table);case 7:return this.applyLookup(table.lookupType,table.extension);default:throw new Error(`GSUB lookupType ${lookupType}is not supported`);}}};var $c96c93587d49c14d$export$2e2bcd8739ae039=class extends(0,$a83b9c36aaa94fd3$export$2e2bcd8739ae039){applyPositionValue(sequenceIndex,value){let position2=this.positions[this.glyphIterator.peekIndex(sequenceIndex)];if(value.xAdvance!=null)
position2.xAdvance+=value.xAdvance;if(value.yAdvance!=null)
position2.yAdvance+=value.yAdvance;if(value.xPlacement!=null)
position2.xOffset+=value.xPlacement;if(value.yPlacement!=null)
position2.yOffset+=value.yPlacement;let variationProcessor=this.font._variationProcessor;let variationStore=this.font.GDEF&&this.font.GDEF.itemVariationStore;if(variationProcessor&&variationStore){if(value.xPlaDevice)
position2.xOffset+=variationProcessor.getDelta(variationStore,value.xPlaDevice.a,value.xPlaDevice.b);if(value.yPlaDevice)
position2.yOffset+=variationProcessor.getDelta(variationStore,value.yPlaDevice.a,value.yPlaDevice.b);if(value.xAdvDevice)
position2.xAdvance+=variationProcessor.getDelta(variationStore,value.xAdvDevice.a,value.xAdvDevice.b);if(value.yAdvDevice)
position2.yAdvance+=variationProcessor.getDelta(variationStore,value.yAdvDevice.a,value.yAdvDevice.b);}}
applyLookup(lookupType,table){switch(lookupType){case 1:{let index2=this.coverageIndex(table.coverage);if(index2===-1)
return false;switch(table.version){case 1:this.applyPositionValue(0,table.value);break;case 2:this.applyPositionValue(0,table.values.get(index2));break;}
return true;}
case 2:{let nextGlyph=this.glyphIterator.peek();if(!nextGlyph)
return false;let index2=this.coverageIndex(table.coverage);if(index2===-1)
return false;switch(table.version){case 1:let set3=table.pairSets.get(index2);for(let pair of set3)
if(pair.secondGlyph===nextGlyph.id){this.applyPositionValue(0,pair.value1);this.applyPositionValue(1,pair.value2);return true;}
return false;case 2:let class1=this.getClassID(this.glyphIterator.cur.id,table.classDef1);let class2=this.getClassID(nextGlyph.id,table.classDef2);if(class1===-1||class2===-1)
return false;var pair1=table.classRecords.get(class1).get(class2);this.applyPositionValue(0,pair1.value1);this.applyPositionValue(1,pair1.value2);return true;}}
case 3:{let nextIndex=this.glyphIterator.peekIndex();let nextGlyph=this.glyphs[nextIndex];if(!nextGlyph)
return false;let curRecord=table.entryExitRecords[this.coverageIndex(table.coverage)];if(!curRecord||!curRecord.exitAnchor)
return false;let nextRecord=table.entryExitRecords[this.coverageIndex(table.coverage,nextGlyph.id)];if(!nextRecord||!nextRecord.entryAnchor)
return false;let entry=this.getAnchor(nextRecord.entryAnchor);let exit=this.getAnchor(curRecord.exitAnchor);let cur=this.positions[this.glyphIterator.index];let next=this.positions[nextIndex];let d;switch(this.direction){case"ltr":cur.xAdvance=exit.x+cur.xOffset;d=entry.x+next.xOffset;next.xAdvance-=d;next.xOffset-=d;break;case"rtl":d=exit.x+cur.xOffset;cur.xAdvance-=d;cur.xOffset-=d;next.xAdvance=entry.x+next.xOffset;break;}
if(this.glyphIterator.flags.rightToLeft){this.glyphIterator.cur.cursiveAttachment=nextIndex;cur.yOffset=entry.y-exit.y;}else{nextGlyph.cursiveAttachment=this.glyphIterator.index;cur.yOffset=exit.y-entry.y;}
return true;}
case 4:{let markIndex=this.coverageIndex(table.markCoverage);if(markIndex===-1)
return false;let baseGlyphIndex=this.glyphIterator.index;while(--baseGlyphIndex>=0&&(this.glyphs[baseGlyphIndex].isMark||this.glyphs[baseGlyphIndex].ligatureComponent>0));if(baseGlyphIndex<0)
return false;let baseIndex=this.coverageIndex(table.baseCoverage,this.glyphs[baseGlyphIndex].id);if(baseIndex===-1)
return false;let markRecord=table.markArray[markIndex];let baseAnchor=table.baseArray[baseIndex][markRecord.class];this.applyAnchor(markRecord,baseAnchor,baseGlyphIndex);return true;}
case 5:{let markIndex=this.coverageIndex(table.markCoverage);if(markIndex===-1)
return false;let baseGlyphIndex=this.glyphIterator.index;while(--baseGlyphIndex>=0&&this.glyphs[baseGlyphIndex].isMark);if(baseGlyphIndex<0)
return false;let ligIndex=this.coverageIndex(table.ligatureCoverage,this.glyphs[baseGlyphIndex].id);if(ligIndex===-1)
return false;let ligAttach=table.ligatureArray[ligIndex];let markGlyph=this.glyphIterator.cur;let ligGlyph=this.glyphs[baseGlyphIndex];let compIndex=ligGlyph.ligatureID&&ligGlyph.ligatureID===markGlyph.ligatureID&&markGlyph.ligatureComponent>0?Math.min(markGlyph.ligatureComponent,ligGlyph.codePoints.length)-1:ligGlyph.codePoints.length-1;let markRecord=table.markArray[markIndex];let baseAnchor=ligAttach[compIndex][markRecord.class];this.applyAnchor(markRecord,baseAnchor,baseGlyphIndex);return true;}
case 6:{let mark1Index=this.coverageIndex(table.mark1Coverage);if(mark1Index===-1)
return false;let prevIndex=this.glyphIterator.peekIndex(-1);let prev=this.glyphs[prevIndex];if(!prev||!prev.isMark)
return false;let cur=this.glyphIterator.cur;let good=false;if(cur.ligatureID===prev.ligatureID){if(!cur.ligatureID)
good=true;else if(cur.ligatureComponent===prev.ligatureComponent)
good=true;}else if(cur.ligatureID&&!cur.ligatureComponent||prev.ligatureID&&!prev.ligatureComponent)
good=true;if(!good)
return false;let mark2Index=this.coverageIndex(table.mark2Coverage,prev.id);if(mark2Index===-1)
return false;let markRecord=table.mark1Array[mark1Index];let baseAnchor=table.mark2Array[mark2Index][markRecord.class];this.applyAnchor(markRecord,baseAnchor,prevIndex);return true;}
case 7:return this.applyContext(table);case 8:return this.applyChainingContext(table);case 9:return this.applyLookup(table.lookupType,table.extension);default:throw new Error(`Unsupported GPOS table:${lookupType}`);}}
applyAnchor(markRecord,baseAnchor,baseGlyphIndex){let baseCoords=this.getAnchor(baseAnchor);let markCoords=this.getAnchor(markRecord.markAnchor);let basePos=this.positions[baseGlyphIndex];let markPos=this.positions[this.glyphIterator.index];markPos.xOffset=baseCoords.x-markCoords.x;markPos.yOffset=baseCoords.y-markCoords.y;this.glyphIterator.cur.markAttachment=baseGlyphIndex;}
getAnchor(anchor){let x2=anchor.xCoordinate;let y2=anchor.yCoordinate;let variationProcessor=this.font._variationProcessor;let variationStore=this.font.GDEF&&this.font.GDEF.itemVariationStore;if(variationProcessor&&variationStore){if(anchor.xDeviceTable)
x2+=variationProcessor.getDelta(variationStore,anchor.xDeviceTable.a,anchor.xDeviceTable.b);if(anchor.yDeviceTable)
y2+=variationProcessor.getDelta(variationStore,anchor.yDeviceTable.a,anchor.yDeviceTable.b);}
return{x:x2,y:y2};}
applyFeatures(userFeatures,glyphs,advances){super.applyFeatures(userFeatures,glyphs,advances);for(var i2=0;i2<this.glyphs.length;i2++)
this.fixCursiveAttachment(i2);this.fixMarkAttachment();}
fixCursiveAttachment(i2){let glyph=this.glyphs[i2];if(glyph.cursiveAttachment!=null){let j=glyph.cursiveAttachment;glyph.cursiveAttachment=null;this.fixCursiveAttachment(j);this.positions[i2].yOffset+=this.positions[j].yOffset;}}
fixMarkAttachment(){for(let i2=0;i2<this.glyphs.length;i2++){let glyph=this.glyphs[i2];if(glyph.markAttachment!=null){let j=glyph.markAttachment;this.positions[i2].xOffset+=this.positions[j].xOffset;this.positions[i2].yOffset+=this.positions[j].yOffset;if(this.direction==="ltr")
for(let k=j;k<i2;k++){this.positions[i2].xOffset-=this.positions[k].xAdvance;this.positions[i2].yOffset-=this.positions[k].yAdvance;}
else
for(let k1=j+1;k1<i2+1;k1++){this.positions[i2].xOffset+=this.positions[k1].xAdvance;this.positions[i2].yOffset+=this.positions[k1].yAdvance;}}}}};var $a62492810de27e3d$export$2e2bcd8739ae039=class{setup(glyphRun){this.glyphInfos=glyphRun.glyphs.map((glyph)=>new(0,$10e7b257e1a9a756$export$2e2bcd8739ae039)(this.font,glyph.id,[...glyph.codePoints]));let script=null;if(this.GPOSProcessor)
script=this.GPOSProcessor.selectScript(glyphRun.script,glyphRun.language,glyphRun.direction);if(this.GSUBProcessor)
script=this.GSUBProcessor.selectScript(glyphRun.script,glyphRun.language,glyphRun.direction);this.shaper=$102b6fe50f1d50b4$export$7877a478dd30fd3d(script);this.plan=new(0,$94d7a73bd2edfc9a$export$2e2bcd8739ae039)(this.font,script,glyphRun.direction);this.shaper.plan(this.plan,this.glyphInfos,glyphRun.features);for(let key in this.plan.allFeatures)
glyphRun.features[key]=true;}
substitute(glyphRun){if(this.GSUBProcessor){this.plan.process(this.GSUBProcessor,this.glyphInfos);glyphRun.glyphs=this.glyphInfos.map((glyphInfo)=>this.font.getGlyph(glyphInfo.id,glyphInfo.codePoints));}}
position(glyphRun){if(this.shaper.zeroMarkWidths==="BEFORE_GPOS")
this.zeroMarkAdvances(glyphRun.positions);if(this.GPOSProcessor)
this.plan.process(this.GPOSProcessor,this.glyphInfos,glyphRun.positions);if(this.shaper.zeroMarkWidths==="AFTER_GPOS")
this.zeroMarkAdvances(glyphRun.positions);if(glyphRun.direction==="rtl"){glyphRun.glyphs.reverse();glyphRun.positions.reverse();}
return this.GPOSProcessor&&this.GPOSProcessor.features;}
zeroMarkAdvances(positions){for(let i2=0;i2<this.glyphInfos.length;i2++)
if(this.glyphInfos[i2].isMark){positions[i2].xAdvance=0;positions[i2].yAdvance=0;}}
cleanup(){this.glyphInfos=null;this.plan=null;this.shaper=null;}
getAvailableFeatures(script,language){let features=[];if(this.GSUBProcessor){this.GSUBProcessor.selectScript(script,language);features.push(...Object.keys(this.GSUBProcessor.features));}
if(this.GPOSProcessor){this.GPOSProcessor.selectScript(script,language);features.push(...Object.keys(this.GPOSProcessor.features));}
return features;}
constructor(font){this.font=font;this.glyphInfos=null;this.plan=null;this.GSUBProcessor=null;this.GPOSProcessor=null;this.fallbackPosition=true;if(font.GSUB)
this.GSUBProcessor=new(0,$0a876c45f1f7c41c$export$2e2bcd8739ae039)(font,font.GSUB);if(font.GPOS)
this.GPOSProcessor=new(0,$c96c93587d49c14d$export$2e2bcd8739ae039)(font,font.GPOS);}};var $4c0a7fa5df7a9ab1$export$2e2bcd8739ae039=class{layout(string,features,script,language,direction3){if(typeof features==="string"){direction3=language;language=script;script=features;features=[];}
if(typeof string==="string"){if(script==null)
script=$130d1a642ebcd2b7$export$e5cb25e204fb8450(string);var glyphs=this.font.glyphsForString(string);}else{if(script==null){let codePoints=[];for(let glyph of string)
codePoints.push(...glyph.codePoints);script=$130d1a642ebcd2b7$export$16fab0757cfc223d(codePoints);}
var glyphs=string;}
let glyphRun=new(0,$be07b3e97a42687a$export$2e2bcd8739ae039)(glyphs,features,script,language,direction3);if(glyphs.length===0){glyphRun.positions=[];return glyphRun;}
if(this.engine&&this.engine.setup)
this.engine.setup(glyphRun);this.substitute(glyphRun);this.position(glyphRun);this.hideDefaultIgnorables(glyphRun.glyphs,glyphRun.positions);if(this.engine&&this.engine.cleanup)
this.engine.cleanup();return glyphRun;}
substitute(glyphRun){if(this.engine&&this.engine.substitute)
this.engine.substitute(glyphRun);}
position(glyphRun){glyphRun.positions=glyphRun.glyphs.map((glyph)=>new(0,$1ac75d9a55b67f01$export$2e2bcd8739ae039)(glyph.advanceWidth));let positioned=null;if(this.engine&&this.engine.position)
positioned=this.engine.position(glyphRun);if(!positioned&&(!this.engine||this.engine.fallbackPosition)){if(!this.unicodeLayoutEngine)
this.unicodeLayoutEngine=new(0,$0a4bdfeb6dfd6f5e$export$2e2bcd8739ae039)(this.font);this.unicodeLayoutEngine.positionGlyphs(glyphRun.glyphs,glyphRun.positions);}
if((!positioned||!positioned.kern)&&glyphRun.features.kern!==false&&this.font.kern){if(!this.kernProcessor)
this.kernProcessor=new(0,$0bba3a9db57637f3$export$2e2bcd8739ae039)(this.font);this.kernProcessor.process(glyphRun.glyphs,glyphRun.positions);glyphRun.features.kern=true;}}
hideDefaultIgnorables(glyphs,positions){let space=this.font.glyphForCodePoint(32);for(let i2=0;i2<glyphs.length;i2++)
if(this.isDefaultIgnorable(glyphs[i2].codePoints[0])){glyphs[i2]=space;positions[i2].xAdvance=0;positions[i2].yAdvance=0;}}
isDefaultIgnorable(ch){let plane=ch>>16;if(plane===0)
switch(ch>>8){case 0:return ch===173;case 3:return ch===847;case 6:return ch===1564;case 23:return 6068<=ch&&ch<=6069;case 24:return 6155<=ch&&ch<=6158;case 32:return 8203<=ch&&ch<=8207||8234<=ch&&ch<=8238||8288<=ch&&ch<=8303;case 254:return 65024<=ch&&ch<=65039||ch===65279;case 255:return 65520<=ch&&ch<=65528;default:return false;}
else
switch(plane){case 1:return 113824<=ch&&ch<=113827||119155<=ch&&ch<=119162;case 14:return 917504<=ch&&ch<=921599;default:return false;}}
getAvailableFeatures(script,language){let features=[];if(this.engine)
features.push(...this.engine.getAvailableFeatures(script,language));if(this.font.kern&&features.indexOf("kern")===-1)
features.push("kern");return features;}
stringsForGlyph(gid){let result=new Set();let codePoints=this.font._cmapProcessor.codePointsForGlyph(gid);for(let codePoint of codePoints)
result.add(String.fromCodePoint(codePoint));if(this.engine&&this.engine.stringsForGlyph)
for(let string of this.engine.stringsForGlyph(gid))
result.add(string);return Array.from(result);}
constructor(font){this.font=font;this.unicodeLayoutEngine=null;this.kernProcessor=null;if(this.font.morx)
this.engine=new(0,$ba6dd74203be8728$export$2e2bcd8739ae039)(this.font);else if(this.font.GSUB||this.font.GPOS)
this.engine=new(0,$a62492810de27e3d$export$2e2bcd8739ae039)(this.font);}};var $f43aec954cdfdf21$var$SVG_COMMANDS={moveTo:"M",lineTo:"L",quadraticCurveTo:"Q",bezierCurveTo:"C",closePath:"Z"};var $f43aec954cdfdf21$export$2e2bcd8739ae039=class _$f43aec954cdfdf21$export$2e2bcd8739ae039{toFunction(){return(ctx2)=>{this.commands.forEach((c)=>{return ctx2[c.command].apply(ctx2,c.args);});};}
toSVG(){let cmds=this.commands.map((c)=>{let args=c.args.map((arg)=>Math.round(arg*100)/100);return`${$f43aec954cdfdf21$var$SVG_COMMANDS[c.command]}${args.join(" ")}`;});return cmds.join("");}
get cbox(){if(!this._cbox){let cbox=new(0,$f34600ab9d7f70d8$export$2e2bcd8739ae039)();for(let command1 of this.commands)
for(let i2=0;i2<command1.args.length;i2+=2)
cbox.addPoint(command1.args[i2],command1.args[i2+1]);this._cbox=Object.freeze(cbox);}
return this._cbox;}
get bbox(){if(this._bbox)
return this._bbox;let bbox=new(0,$f34600ab9d7f70d8$export$2e2bcd8739ae039)();let cx=0,cy=0;let f=(t)=>Math.pow(1-t,3)*p0[i2]+3*Math.pow(1-t,2)*t*p1[i2]+3*(1-t)*Math.pow(t,2)*p2[i2]+Math.pow(t,3)*p3[i2];for(let c of this.commands)
switch(c.command){case"moveTo":case"lineTo":let[x2,y2]=c.args;bbox.addPoint(x2,y2);cx=x2;cy=y2;break;case"quadraticCurveTo":case"bezierCurveTo":if(c.command==="quadraticCurveTo"){var[qp1x,qp1y,p3x,p3y]=c.args;var cp1x=cx+2/3*(qp1x-cx);var cp1y=cy+2/3*(qp1y-cy);var cp2x=p3x+2/3*(qp1x-p3x);var cp2y=p3y+2/3*(qp1y-p3y);}else
var[cp1x,cp1y,cp2x,cp2y,p3x,p3y]=c.args;bbox.addPoint(p3x,p3y);var p0=[cx,cy];var p1=[cp1x,cp1y];var p2=[cp2x,cp2y];var p3=[p3x,p3y];for(var i2=0;i2<=1;i2++){let b10=6*p0[i2]-12*p1[i2]+6*p2[i2];let a=-3*p0[i2]+9*p1[i2]-9*p2[i2]+3*p3[i2];c=3*p1[i2]-3*p0[i2];if(a===0){if(b10===0)
continue;let t=-c/b10;if(0<t&&t<1){if(i2===0)
bbox.addPoint(f(t),bbox.maxY);else if(i2===1)
bbox.addPoint(bbox.maxX,f(t));}
continue;}
let b2ac=Math.pow(b10,2)-4*c*a;if(b2ac<0)
continue;let t12=(-b10+Math.sqrt(b2ac))/(2*a);if(0<t12&&t12<1){if(i2===0)
bbox.addPoint(f(t12),bbox.maxY);else if(i2===1)
bbox.addPoint(bbox.maxX,f(t12));}
let t2=(-b10-Math.sqrt(b2ac))/(2*a);if(0<t2&&t2<1){if(i2===0)
bbox.addPoint(f(t2),bbox.maxY);else if(i2===1)
bbox.addPoint(bbox.maxX,f(t2));}}
cx=p3x;cy=p3y;break;}
return this._bbox=Object.freeze(bbox);}
mapPoints(fn){let path4=new _$f43aec954cdfdf21$export$2e2bcd8739ae039();for(let c of this.commands){let args=[];for(let i2=0;i2<c.args.length;i2+=2){let[x2,y2]=fn(c.args[i2],c.args[i2+1]);args.push(x2,y2);}
path4[c.command](...args);}
return path4;}
transform(m0,m1,m2,m3,m4,m5){return this.mapPoints((x2,y2)=>{const tx=m0*x2+m2*y2+m4;const ty=m1*x2+m3*y2+m5;return[tx,ty];});}
translate(x2,y2){return this.transform(1,0,0,1,x2,y2);}
rotate(angle2){let cos=Math.cos(angle2);let sin=Math.sin(angle2);return this.transform(cos,sin,-sin,cos,0,0);}
scale(scaleX,scaleY=scaleX){return this.transform(scaleX,0,0,scaleY,0,0);}
constructor(){this.commands=[];this._bbox=null;this._cbox=null;}};for(let command of["moveTo","lineTo","quadraticCurveTo","bezierCurveTo","closePath"])
$f43aec954cdfdf21$export$2e2bcd8739ae039.prototype[command]=function(...args){this._bbox=this._cbox=null;this.commands.push({command,args});return this;};var $7713b9b7b438dff8$export$2e2bcd8739ae039=[".notdef",".null","nonmarkingreturn","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quotesingle","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","grave","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","Adieresis","Aring","Ccedilla","Eacute","Ntilde","Odieresis","Udieresis","aacute","agrave","acircumflex","adieresis","atilde","aring","ccedilla","eacute","egrave","ecircumflex","edieresis","iacute","igrave","icircumflex","idieresis","ntilde","oacute","ograve","ocircumflex","odieresis","otilde","uacute","ugrave","ucircumflex","udieresis","dagger","degree","cent","sterling","section","bullet","paragraph","germandbls","registered","copyright","trademark","acute","dieresis","notequal","AE","Oslash","infinity","plusminus","lessequal","greaterequal","yen","mu","partialdiff","summation","product","pi","integral","ordfeminine","ordmasculine","Omega","ae","oslash","questiondown","exclamdown","logicalnot","radical","florin","approxequal","Delta","guillemotleft","guillemotright","ellipsis","nonbreakingspace","Agrave","Atilde","Otilde","OE","oe","endash","emdash","quotedblleft","quotedblright","quoteleft","quoteright","divide","lozenge","ydieresis","Ydieresis","fraction","currency","guilsinglleft","guilsinglright","fi","fl","daggerdbl","periodcentered","quotesinglbase","quotedblbase","perthousand","Acircumflex","Ecircumflex","Aacute","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Oacute","Ocircumflex","apple","Ograve","Uacute","Ucircumflex","Ugrave","dotlessi","circumflex","tilde","macron","breve","dotaccent","ring","cedilla","hungarumlaut","ogonek","caron","Lslash","lslash","Scaron","scaron","Zcaron","zcaron","brokenbar","Eth","eth","Yacute","yacute","Thorn","thorn","minus","multiply","onesuperior","twosuperior","threesuperior","onehalf","onequarter","threequarters","franc","Gbreve","gbreve","Idotaccent","Scedilla","scedilla","Cacute","cacute","Ccaron","ccaron","dcroat"];var $f92906be28e61769$export$2e2bcd8739ae039=class{_getPath(){return new(0,$f43aec954cdfdf21$export$2e2bcd8739ae039)();}
_getCBox(){return this.path.cbox;}
_getBBox(){return this.path.bbox;}
_getTableMetrics(table){if(this.id<table.metrics.length)
return table.metrics.get(this.id);let metric=table.metrics.get(table.metrics.length-1);let res={advance:metric?metric.advance:0,bearing:table.bearings.get(this.id-table.metrics.length)||0};return res;}
_getMetrics(cbox){if(this._metrics)
return this._metrics;let{advance:advanceWidth,bearing:leftBearing}=this._getTableMetrics(this._font.hmtx);if(this._font.vmtx)
var{advance:advanceHeight,bearing:topBearing}=this._getTableMetrics(this._font.vmtx);else{let os2;if(typeof cbox==="undefined"||cbox===null)
({cbox}=this);if((os2=this._font["OS/2"])&&os2.version>0){var advanceHeight=Math.abs(os2.typoAscender-os2.typoDescender);var topBearing=os2.typoAscender-cbox.maxY;}else{let{hhea}=this._font;var advanceHeight=Math.abs(hhea.ascent-hhea.descent);var topBearing=hhea.ascent-cbox.maxY;}}
if(this._font._variationProcessor&&this._font.HVAR)
advanceWidth+=this._font._variationProcessor.getAdvanceAdjustment(this.id,this._font.HVAR);return this._metrics={advanceWidth,advanceHeight,leftBearing,topBearing};}
get cbox(){return this._getCBox();}
get bbox(){return this._getBBox();}
get path(){return this._getPath();}
getScaledPath(size4){let scale3=1/this._font.unitsPerEm*size4;return this.path.scale(scale3);}
get advanceWidth(){return this._getMetrics().advanceWidth;}
get advanceHeight(){return this._getMetrics().advanceHeight;}
get ligatureCaretPositions(){}
_getName(){let{post}=this._font;if(!post)
return null;switch(post.version){case 1:return(0,$7713b9b7b438dff8$export$2e2bcd8739ae039)[this.id];case 2:let id9=post.glyphNameIndex[this.id];if(id9<(0,$7713b9b7b438dff8$export$2e2bcd8739ae039).length)
return(0,$7713b9b7b438dff8$export$2e2bcd8739ae039)[id9];return post.names[id9-(0,$7713b9b7b438dff8$export$2e2bcd8739ae039).length];case 2.5:return(0,$7713b9b7b438dff8$export$2e2bcd8739ae039)[this.id+post.offsets[this.id]];case 4:return String.fromCharCode(post.map[this.id]);}}
get name(){return this._getName();}
render(ctx2,size4){ctx2.save();let scale3=1/this._font.head.unitsPerEm*size4;ctx2.scale(scale3,scale3);let fn=this.path.toFunction();fn(ctx2);ctx2.fill();ctx2.restore();}
constructor(id9,codePoints,font){this.id=id9;this.codePoints=codePoints;this._font=font;this.isMark=this.codePoints.length>0&&this.codePoints.every((0,$747425b437e121da$export$e33ad6871e762338));this.isLigature=this.codePoints.length>1;}};(0,__decorate)([(0,$e71565f2ce09cb6b$export$69a3209f1a06c04d)],$f92906be28e61769$export$2e2bcd8739ae039.prototype,"cbox",null);(0,__decorate)([(0,$e71565f2ce09cb6b$export$69a3209f1a06c04d)],$f92906be28e61769$export$2e2bcd8739ae039.prototype,"bbox",null);(0,__decorate)([(0,$e71565f2ce09cb6b$export$69a3209f1a06c04d)],$f92906be28e61769$export$2e2bcd8739ae039.prototype,"path",null);(0,__decorate)([(0,$e71565f2ce09cb6b$export$69a3209f1a06c04d)],$f92906be28e61769$export$2e2bcd8739ae039.prototype,"advanceWidth",null);(0,__decorate)([(0,$e71565f2ce09cb6b$export$69a3209f1a06c04d)],$f92906be28e61769$export$2e2bcd8739ae039.prototype,"advanceHeight",null);(0,__decorate)([(0,$e71565f2ce09cb6b$export$69a3209f1a06c04d)],$f92906be28e61769$export$2e2bcd8739ae039.prototype,"name",null);var $69aac16029968692$var$GlyfHeader=new Struct({numberOfContours:int16,xMin:int16,yMin:int16,xMax:int16,yMax:int16});var $69aac16029968692$var$ON_CURVE=1;var $69aac16029968692$var$X_SHORT_VECTOR=2;var $69aac16029968692$var$Y_SHORT_VECTOR=4;var $69aac16029968692$var$REPEAT=8;var $69aac16029968692$var$SAME_X=16;var $69aac16029968692$var$SAME_Y=32;var $69aac16029968692$var$ARG_1_AND_2_ARE_WORDS=1;var $69aac16029968692$var$WE_HAVE_A_SCALE=8;var $69aac16029968692$var$MORE_COMPONENTS=32;var $69aac16029968692$var$WE_HAVE_AN_X_AND_Y_SCALE=64;var $69aac16029968692$var$WE_HAVE_A_TWO_BY_TWO=128;var $69aac16029968692$var$WE_HAVE_INSTRUCTIONS=256;var $69aac16029968692$export$baf26146a414f24a=class _$69aac16029968692$export$baf26146a414f24a{copy(){return new _$69aac16029968692$export$baf26146a414f24a(this.onCurve,this.endContour,this.x,this.y);}
constructor(onCurve,endContour,x2=0,y2=0){this.onCurve=onCurve;this.endContour=endContour;this.x=x2;this.y=y2;}};var $69aac16029968692$var$Component=class{constructor(glyphID,dx,dy){this.glyphID=glyphID;this.dx=dx;this.dy=dy;this.pos=0;this.scaleX=this.scaleY=1;this.scale01=this.scale10=0;}};var $69aac16029968692$export$2e2bcd8739ae039=class extends(0,$f92906be28e61769$export$2e2bcd8739ae039){_getCBox(internal){if(this._font._variationProcessor&&!internal)
return this.path.cbox;let stream=this._font._getTableStream("glyf");stream.pos+=this._font.loca.offsets[this.id];let glyph=$69aac16029968692$var$GlyfHeader.decode(stream);let cbox=new(0,$f34600ab9d7f70d8$export$2e2bcd8739ae039)(glyph.xMin,glyph.yMin,glyph.xMax,glyph.yMax);return Object.freeze(cbox);}
_parseGlyphCoord(stream,prev,short,same){if(short){var val=stream.readUInt8();if(!same)
val=-val;val+=prev;}else if(same)
var val=prev;else
var val=prev+stream.readInt16BE();return val;}
_decode(){let glyfPos=this._font.loca.offsets[this.id];let nextPos=this._font.loca.offsets[this.id+1];if(glyfPos===nextPos)
return null;let stream=this._font._getTableStream("glyf");stream.pos+=glyfPos;let startPos=stream.pos;let glyph=$69aac16029968692$var$GlyfHeader.decode(stream);if(glyph.numberOfContours>0)
this._decodeSimple(glyph,stream);else if(glyph.numberOfContours<0)
this._decodeComposite(glyph,stream,startPos);return glyph;}
_decodeSimple(glyph,stream){glyph.points=[];let endPtsOfContours=new ArrayT(uint16,glyph.numberOfContours).decode(stream);glyph.instructions=new ArrayT(uint8,uint16).decode(stream);let flags=[];let numCoords=endPtsOfContours[endPtsOfContours.length-1]+1;while(flags.length<numCoords){var flag=stream.readUInt8();flags.push(flag);if(flag&$69aac16029968692$var$REPEAT){let count=stream.readUInt8();for(let j=0;j<count;j++)
flags.push(flag);}}
for(var i2=0;i2<flags.length;i2++){var flag=flags[i2];let point2=new $69aac16029968692$export$baf26146a414f24a(!!(flag&$69aac16029968692$var$ON_CURVE),endPtsOfContours.indexOf(i2)>=0,0,0);glyph.points.push(point2);}
let px=0;for(var i2=0;i2<flags.length;i2++){var flag=flags[i2];glyph.points[i2].x=px=this._parseGlyphCoord(stream,px,flag&$69aac16029968692$var$X_SHORT_VECTOR,flag&$69aac16029968692$var$SAME_X);}
let py=0;for(var i2=0;i2<flags.length;i2++){var flag=flags[i2];glyph.points[i2].y=py=this._parseGlyphCoord(stream,py,flag&$69aac16029968692$var$Y_SHORT_VECTOR,flag&$69aac16029968692$var$SAME_Y);}
if(this._font._variationProcessor){let points=glyph.points.slice();points.push(...this._getPhantomPoints(glyph));this._font._variationProcessor.transformPoints(this.id,points);glyph.phantomPoints=points.slice(-4);}
return;}
_decodeComposite(glyph,stream,offset=0){glyph.components=[];let haveInstructions=false;let flags=$69aac16029968692$var$MORE_COMPONENTS;while(flags&$69aac16029968692$var$MORE_COMPONENTS){flags=stream.readUInt16BE();let gPos=stream.pos-offset;let glyphID=stream.readUInt16BE();if(!haveInstructions)
haveInstructions=(flags&$69aac16029968692$var$WE_HAVE_INSTRUCTIONS)!==0;if(flags&$69aac16029968692$var$ARG_1_AND_2_ARE_WORDS){var dx=stream.readInt16BE();var dy=stream.readInt16BE();}else{var dx=stream.readInt8();var dy=stream.readInt8();}
var component=new $69aac16029968692$var$Component(glyphID,dx,dy);component.pos=gPos;if(flags&$69aac16029968692$var$WE_HAVE_A_SCALE)
component.scaleX=component.scaleY=(stream.readUInt8()<<24|stream.readUInt8()<<16)/1073741824;else if(flags&$69aac16029968692$var$WE_HAVE_AN_X_AND_Y_SCALE){component.scaleX=(stream.readUInt8()<<24|stream.readUInt8()<<16)/1073741824;component.scaleY=(stream.readUInt8()<<24|stream.readUInt8()<<16)/1073741824;}else if(flags&$69aac16029968692$var$WE_HAVE_A_TWO_BY_TWO){component.scaleX=(stream.readUInt8()<<24|stream.readUInt8()<<16)/1073741824;component.scale01=(stream.readUInt8()<<24|stream.readUInt8()<<16)/1073741824;component.scale10=(stream.readUInt8()<<24|stream.readUInt8()<<16)/1073741824;component.scaleY=(stream.readUInt8()<<24|stream.readUInt8()<<16)/1073741824;}
glyph.components.push(component);}
if(this._font._variationProcessor){let points=[];for(let j=0;j<glyph.components.length;j++){var component=glyph.components[j];points.push(new $69aac16029968692$export$baf26146a414f24a(true,true,component.dx,component.dy));}
points.push(...this._getPhantomPoints(glyph));this._font._variationProcessor.transformPoints(this.id,points);glyph.phantomPoints=points.splice(-4,4);for(let i2=0;i2<points.length;i2++){let point2=points[i2];glyph.components[i2].dx=point2.x;glyph.components[i2].dy=point2.y;}}
return haveInstructions;}
_getPhantomPoints(glyph){let cbox=this._getCBox(true);if(this._metrics==null)
this._metrics=(0,$f92906be28e61769$export$2e2bcd8739ae039).prototype._getMetrics.call(this,cbox);let{advanceWidth,advanceHeight,leftBearing,topBearing}=this._metrics;return[new $69aac16029968692$export$baf26146a414f24a(false,true,glyph.xMin-leftBearing,0),new $69aac16029968692$export$baf26146a414f24a(false,true,glyph.xMin-leftBearing+advanceWidth,0),new $69aac16029968692$export$baf26146a414f24a(false,true,0,glyph.yMax+topBearing),new $69aac16029968692$export$baf26146a414f24a(false,true,0,glyph.yMax+topBearing+advanceHeight)];}
_getContours(){let glyph=this._decode();if(!glyph)
return[];let points=[];if(glyph.numberOfContours<0)
for(let component of glyph.components){let contours2=this._font.getGlyph(component.glyphID)._getContours();for(let i2=0;i2<contours2.length;i2++){let contour=contours2[i2];for(let j=0;j<contour.length;j++){let point3=contour[j];let x2=point3.x*component.scaleX+point3.y*component.scale01+component.dx;let y2=point3.y*component.scaleY+point3.x*component.scale10+component.dy;points.push(new $69aac16029968692$export$baf26146a414f24a(point3.onCurve,point3.endContour,x2,y2));}}}
else
points=glyph.points||[];if(glyph.phantomPoints&&!this._font.directory.tables.HVAR){this._metrics.advanceWidth=glyph.phantomPoints[1].x-glyph.phantomPoints[0].x;this._metrics.advanceHeight=glyph.phantomPoints[3].y-glyph.phantomPoints[2].y;this._metrics.leftBearing=glyph.xMin-glyph.phantomPoints[0].x;this._metrics.topBearing=glyph.phantomPoints[2].y-glyph.yMax;}
let contours=[];let cur=[];for(let k=0;k<points.length;k++){var point2=points[k];cur.push(point2);if(point2.endContour){contours.push(cur);cur=[];}}
return contours;}
_getMetrics(){if(this._metrics)
return this._metrics;let cbox=this._getCBox(true);super._getMetrics(cbox);if(this._font._variationProcessor&&!this._font.HVAR)
this.path;return this._metrics;}
_getPath(){let contours=this._getContours();let path4=new(0,$f43aec954cdfdf21$export$2e2bcd8739ae039)();for(let i2=0;i2<contours.length;i2++){let contour=contours[i2];let firstPt=contour[0];let lastPt=contour[contour.length-1];let start=0;if(firstPt.onCurve){var curvePt=null;start=1;}else{if(lastPt.onCurve)
firstPt=lastPt;else
firstPt=new $69aac16029968692$export$baf26146a414f24a(false,false,(firstPt.x+lastPt.x)/2,(firstPt.y+lastPt.y)/2);var curvePt=firstPt;}
path4.moveTo(firstPt.x,firstPt.y);for(let j=start;j<contour.length;j++){let pt=contour[j];let prevPt=j===0?firstPt:contour[j-1];if(prevPt.onCurve&&pt.onCurve)
path4.lineTo(pt.x,pt.y);else if(prevPt.onCurve&&!pt.onCurve)
var curvePt=pt;else if(!prevPt.onCurve&&!pt.onCurve){let midX=(prevPt.x+pt.x)/2;let midY=(prevPt.y+pt.y)/2;path4.quadraticCurveTo(prevPt.x,prevPt.y,midX,midY);var curvePt=pt;}else if(!prevPt.onCurve&&pt.onCurve){path4.quadraticCurveTo(curvePt.x,curvePt.y,pt.x,pt.y);var curvePt=null;}else
throw new Error("Unknown TTF path state");}
if(curvePt)
path4.quadraticCurveTo(curvePt.x,curvePt.y,firstPt.x,firstPt.y);path4.closePath();}
return path4;}
constructor(...args){super(...args);(0,_define_property)(this,"type","TTF");}};var $62cc5109c6101893$export$2e2bcd8739ae039=class extends(0,$f92906be28e61769$export$2e2bcd8739ae039){_getName(){if(this._font.CFF2)
return super._getName();return this._font["CFF "].getGlyphName(this.id);}
bias(s){if(s.length<1240)
return 107;else if(s.length<33900)
return 1131;else
return 32768;}
_getPath(){let cff=this._font.CFF2||this._font["CFF "];let{stream}=cff;let str3=cff.topDict.CharStrings[this.id];let end=str3.offset+str3.length;stream.pos=str3.offset;let path4=new(0,$f43aec954cdfdf21$export$2e2bcd8739ae039)();let stack=[];let trans=[];let width2=null;let nStems=0;let x1=0,y1=0;let usedGsubrs;let usedSubrs;let open=false;this._usedGsubrs=usedGsubrs={};this._usedSubrs=usedSubrs={};let gsubrs=cff.globalSubrIndex||[];let gsubrsBias=this.bias(gsubrs);let privateDict=cff.privateDictForGlyph(this.id)||{};let subrs=privateDict.Subrs||[];let subrsBias=this.bias(subrs);let vstore=cff.topDict.vstore&&cff.topDict.vstore.itemVariationStore;let vsindex=privateDict.vsindex;let variationProcessor=this._font._variationProcessor;function checkWidth(){if(width2==null)
width2=stack.shift()+privateDict.nominalWidthX;}
function parseStems(){if(stack.length%2!==0)
checkWidth();nStems+=stack.length>>1;return stack.length=0;}
function moveTo2(x2,y2){if(open)
path4.closePath();path4.moveTo(x2,y2);open=true;}
let parse9=function(){while(stream.pos<end){let op=stream.readUInt8();if(op<32){let index2,subr,phase;switch(op){case 1:case 3:case 18:case 23:parseStems();break;case 4:if(stack.length>1)
checkWidth();y1+=stack.shift();moveTo2(x1,y1);break;case 5:while(stack.length>=2){x1+=stack.shift();y1+=stack.shift();path4.lineTo(x1,y1);}
break;case 6:case 7:phase=op===6;while(stack.length>=1){if(phase)
x1+=stack.shift();else
y1+=stack.shift();path4.lineTo(x1,y1);phase=!phase;}
break;case 8:while(stack.length>0){var c1x=x1+stack.shift();var c1y=y1+stack.shift();var c2x=c1x+stack.shift();var c2y=c1y+stack.shift();x1=c2x+stack.shift();y1=c2y+stack.shift();path4.bezierCurveTo(c1x,c1y,c2x,c2y,x1,y1);}
break;case 10:index2=stack.pop()+subrsBias;subr=subrs[index2];if(subr){usedSubrs[index2]=true;var p=stream.pos;var e=end;stream.pos=subr.offset;end=subr.offset+subr.length;parse9();stream.pos=p;end=e;}
break;case 11:if(cff.version>=2)
break;return;case 14:if(cff.version>=2)
break;if(stack.length>0)
checkWidth();if(open){path4.closePath();open=false;}
break;case 15:if(cff.version<2)
throw new Error("vsindex operator not supported in CFF v1");vsindex=stack.pop();break;case 16:{if(cff.version<2)
throw new Error("blend operator not supported in CFF v1");if(!variationProcessor)
throw new Error("blend operator in non-variation font");let blendVector=variationProcessor.getBlendVector(vstore,vsindex);let numBlends=stack.pop();let numOperands=numBlends*blendVector.length;let delta=stack.length-numOperands;let base=delta-numBlends;for(let i2=0;i2<numBlends;i2++){let sum=stack[base+i2];for(let j=0;j<blendVector.length;j++)
sum+=blendVector[j]*stack[delta++];stack[base+i2]=sum;}
while(numOperands--)
stack.pop();break;}
case 19:case 20:parseStems();stream.pos+=nStems+7>>3;break;case 21:if(stack.length>2)
checkWidth();x1+=stack.shift();y1+=stack.shift();moveTo2(x1,y1);break;case 22:if(stack.length>1)
checkWidth();x1+=stack.shift();moveTo2(x1,y1);break;case 24:while(stack.length>=8){var c1x=x1+stack.shift();var c1y=y1+stack.shift();var c2x=c1x+stack.shift();var c2y=c1y+stack.shift();x1=c2x+stack.shift();y1=c2y+stack.shift();path4.bezierCurveTo(c1x,c1y,c2x,c2y,x1,y1);}
x1+=stack.shift();y1+=stack.shift();path4.lineTo(x1,y1);break;case 25:while(stack.length>=8){x1+=stack.shift();y1+=stack.shift();path4.lineTo(x1,y1);}
var c1x=x1+stack.shift();var c1y=y1+stack.shift();var c2x=c1x+stack.shift();var c2y=c1y+stack.shift();x1=c2x+stack.shift();y1=c2y+stack.shift();path4.bezierCurveTo(c1x,c1y,c2x,c2y,x1,y1);break;case 26:if(stack.length%2)
x1+=stack.shift();while(stack.length>=4){c1x=x1;c1y=y1+stack.shift();c2x=c1x+stack.shift();c2y=c1y+stack.shift();x1=c2x;y1=c2y+stack.shift();path4.bezierCurveTo(c1x,c1y,c2x,c2y,x1,y1);}
break;case 27:if(stack.length%2)
y1+=stack.shift();while(stack.length>=4){c1x=x1+stack.shift();c1y=y1;c2x=c1x+stack.shift();c2y=c1y+stack.shift();x1=c2x+stack.shift();y1=c2y;path4.bezierCurveTo(c1x,c1y,c2x,c2y,x1,y1);}
break;case 28:stack.push(stream.readInt16BE());break;case 29:index2=stack.pop()+gsubrsBias;subr=gsubrs[index2];if(subr){usedGsubrs[index2]=true;var p=stream.pos;var e=end;stream.pos=subr.offset;end=subr.offset+subr.length;parse9();stream.pos=p;end=e;}
break;case 30:case 31:phase=op===31;while(stack.length>=4){if(phase){c1x=x1+stack.shift();c1y=y1;c2x=c1x+stack.shift();c2y=c1y+stack.shift();y1=c2y+stack.shift();x1=c2x+(stack.length===1?stack.shift():0);}else{c1x=x1;c1y=y1+stack.shift();c2x=c1x+stack.shift();c2y=c1y+stack.shift();x1=c2x+stack.shift();y1=c2y+(stack.length===1?stack.shift():0);}
path4.bezierCurveTo(c1x,c1y,c2x,c2y,x1,y1);phase=!phase;}
break;case 12:op=stream.readUInt8();switch(op){case 3:let a=stack.pop();let b10=stack.pop();stack.push(a&&b10?1:0);break;case 4:a=stack.pop();b10=stack.pop();stack.push(a||b10?1:0);break;case 5:a=stack.pop();stack.push(a?0:1);break;case 9:a=stack.pop();stack.push(Math.abs(a));break;case 10:a=stack.pop();b10=stack.pop();stack.push(a+b10);break;case 11:a=stack.pop();b10=stack.pop();stack.push(a-b10);break;case 12:a=stack.pop();b10=stack.pop();stack.push(a/b10);break;case 14:a=stack.pop();stack.push(-a);break;case 15:a=stack.pop();b10=stack.pop();stack.push(a===b10?1:0);break;case 18:stack.pop();break;case 20:let val=stack.pop();let idx=stack.pop();trans[idx]=val;break;case 21:idx=stack.pop();stack.push(trans[idx]||0);break;case 22:let s1=stack.pop();let s2=stack.pop();let v1=stack.pop();let v2=stack.pop();stack.push(v1<=v2?s1:s2);break;case 23:stack.push(Math.random());break;case 24:a=stack.pop();b10=stack.pop();stack.push(a*b10);break;case 26:a=stack.pop();stack.push(Math.sqrt(a));break;case 27:a=stack.pop();stack.push(a,a);break;case 28:a=stack.pop();b10=stack.pop();stack.push(b10,a);break;case 29:idx=stack.pop();if(idx<0)
idx=0;else if(idx>stack.length-1)
idx=stack.length-1;stack.push(stack[idx]);break;case 30:let n2=stack.pop();let j=stack.pop();if(j>=0)
while(j>0){var t=stack[n2-1];for(let i2=n2-2;i2>=0;i2--)
stack[i2+1]=stack[i2];stack[0]=t;j--;}
else
while(j<0){var t=stack[0];for(let i2=0;i2<=n2;i2++)
stack[i2]=stack[i2+1];stack[n2-1]=t;j++;}
break;case 34:c1x=x1+stack.shift();c1y=y1;c2x=c1x+stack.shift();c2y=c1y+stack.shift();let c3x=c2x+stack.shift();let c3y=c2y;let c4x=c3x+stack.shift();let c4y=c3y;let c5x=c4x+stack.shift();let c5y=c4y;let c6x=c5x+stack.shift();let c6y=c5y;x1=c6x;y1=c6y;path4.bezierCurveTo(c1x,c1y,c2x,c2y,c3x,c3y);path4.bezierCurveTo(c4x,c4y,c5x,c5y,c6x,c6y);break;case 35:let pts=[];for(let i2=0;i2<=5;i2++){x1+=stack.shift();y1+=stack.shift();pts.push(x1,y1);}
path4.bezierCurveTo(...pts.slice(0,6));path4.bezierCurveTo(...pts.slice(6));stack.shift();break;case 36:c1x=x1+stack.shift();c1y=y1+stack.shift();c2x=c1x+stack.shift();c2y=c1y+stack.shift();c3x=c2x+stack.shift();c3y=c2y;c4x=c3x+stack.shift();c4y=c3y;c5x=c4x+stack.shift();c5y=c4y+stack.shift();c6x=c5x+stack.shift();c6y=c5y;x1=c6x;y1=c6y;path4.bezierCurveTo(c1x,c1y,c2x,c2y,c3x,c3y);path4.bezierCurveTo(c4x,c4y,c5x,c5y,c6x,c6y);break;case 37:let startx=x1;let starty=y1;pts=[];for(let i1=0;i1<=4;i1++){x1+=stack.shift();y1+=stack.shift();pts.push(x1,y1);}
if(Math.abs(x1-startx)>Math.abs(y1-starty)){x1+=stack.shift();y1=starty;}else{x1=startx;y1+=stack.shift();}
pts.push(x1,y1);path4.bezierCurveTo(...pts.slice(0,6));path4.bezierCurveTo(...pts.slice(6));break;default:throw new Error(`Unknown op:12 ${op}`);}
break;default:throw new Error(`Unknown op:${op}`);}}else if(op<247)
stack.push(op-139);else if(op<251){var b12=stream.readUInt8();stack.push((op-247)*256+b12+108);}else if(op<255){var b12=stream.readUInt8();stack.push(-(op-251)*256-b12-108);}else
stack.push(stream.readInt32BE()/65536);}};parse9();if(open)
path4.closePath();return path4;}
constructor(...args){super(...args);(0,_define_property)(this,"type","CFF");}};var $25d8f049c222084c$var$SBIXImage=new Struct({originX:uint16,originY:uint16,type:new StringT(4),data:new BufferT((t)=>t.parent.buflen-t._currentOffset)});var $25d8f049c222084c$export$2e2bcd8739ae039=class extends(0,$69aac16029968692$export$2e2bcd8739ae039){getImageForSize(size4){for(let i2=0;i2<this._font.sbix.imageTables.length;i2++){var table=this._font.sbix.imageTables[i2];if(table.ppem>=size4)
break;}
let offsets=table.imageOffsets;let start=offsets[this.id];let end=offsets[this.id+1];if(start===end)
return null;this._font.stream.pos=start;return $25d8f049c222084c$var$SBIXImage.decode(this._font.stream,{buflen:end-start});}
render(ctx2,size4){let img=this.getImageForSize(size4);if(img!=null){let scale3=size4/this._font.unitsPerEm;ctx2.image(img.data,{height:size4,x:img.originX,y:(this.bbox.minY-img.originY)*scale3});}
if(this._font.sbix.flags.renderOutlines)
super.render(ctx2,size4);}
constructor(...args){super(...args);(0,_define_property)(this,"type","SBIX");}};var $0d411f0165859681$var$COLRLayer=class{constructor(glyph,color2){this.glyph=glyph;this.color=color2;}};var $0d411f0165859681$export$2e2bcd8739ae039=class extends(0,$f92906be28e61769$export$2e2bcd8739ae039){_getBBox(){let bbox=new(0,$f34600ab9d7f70d8$export$2e2bcd8739ae039)();for(let i2=0;i2<this.layers.length;i2++){let layer=this.layers[i2];let b10=layer.glyph.bbox;bbox.addPoint(b10.minX,b10.minY);bbox.addPoint(b10.maxX,b10.maxY);}
return bbox;}
get layers(){let cpal=this._font.CPAL;let colr=this._font.COLR;let low=0;let high=colr.baseGlyphRecord.length-1;while(low<=high){let mid=low+high>>1;var rec=colr.baseGlyphRecord[mid];if(this.id<rec.gid)
high=mid-1;else if(this.id>rec.gid)
low=mid+1;else{var baseLayer=rec;break;}}
if(baseLayer==null){var g=this._font._getBaseGlyph(this.id);var color2={red:0,green:0,blue:0,alpha:255};return[new $0d411f0165859681$var$COLRLayer(g,color2)];}
let layers=[];for(let i2=baseLayer.firstLayerIndex;i2<baseLayer.firstLayerIndex+baseLayer.numLayers;i2++){var rec=colr.layerRecords[i2];var color2=cpal.colorRecords[rec.paletteIndex];var g=this._font._getBaseGlyph(rec.gid);layers.push(new $0d411f0165859681$var$COLRLayer(g,color2));}
return layers;}
render(ctx2,size4){for(let{glyph,color:color2}of this.layers){ctx2.fillColor([color2.red,color2.green,color2.blue],color2.alpha/255*100);glyph.render(ctx2,size4);}
return;}
constructor(...args){super(...args);(0,_define_property)(this,"type","COLR");}};var $0bb840cac04e911b$var$TUPLES_SHARE_POINT_NUMBERS=32768;var $0bb840cac04e911b$var$TUPLE_COUNT_MASK=4095;var $0bb840cac04e911b$var$EMBEDDED_TUPLE_COORD=32768;var $0bb840cac04e911b$var$INTERMEDIATE_TUPLE=16384;var $0bb840cac04e911b$var$PRIVATE_POINT_NUMBERS=8192;var $0bb840cac04e911b$var$TUPLE_INDEX_MASK=4095;var $0bb840cac04e911b$var$POINTS_ARE_WORDS=128;var $0bb840cac04e911b$var$POINT_RUN_COUNT_MASK=127;var $0bb840cac04e911b$var$DELTAS_ARE_ZERO=128;var $0bb840cac04e911b$var$DELTAS_ARE_WORDS=64;var $0bb840cac04e911b$var$DELTA_RUN_COUNT_MASK=63;var $0bb840cac04e911b$export$2e2bcd8739ae039=class{normalizeCoords(coords){let normalized=[];for(var i2=0;i2<this.font.fvar.axis.length;i2++){let axis=this.font.fvar.axis[i2];if(coords[i2]<axis.defaultValue)
normalized.push((coords[i2]-axis.defaultValue+Number.EPSILON)/(axis.defaultValue-axis.minValue+Number.EPSILON));else
normalized.push((coords[i2]-axis.defaultValue+Number.EPSILON)/(axis.maxValue-axis.defaultValue+Number.EPSILON));}
if(this.font.avar)
for(var i2=0;i2<this.font.avar.segment.length;i2++){let segment=this.font.avar.segment[i2];for(let j=0;j<segment.correspondence.length;j++){let pair=segment.correspondence[j];if(j>=1&&normalized[i2]<pair.fromCoord){let prev=segment.correspondence[j-1];normalized[i2]=((normalized[i2]-prev.fromCoord)*(pair.toCoord-prev.toCoord)+Number.EPSILON)/(pair.fromCoord-prev.fromCoord+Number.EPSILON)+prev.toCoord;break;}}}
return normalized;}
transformPoints(gid,glyphPoints){if(!this.font.fvar||!this.font.gvar)
return;let{gvar}=this.font;if(gid>=gvar.glyphCount)
return;let offset=gvar.offsets[gid];if(offset===gvar.offsets[gid+1])
return;let{stream}=this.font;stream.pos=offset;if(stream.pos>=stream.length)
return;let tupleCount=stream.readUInt16BE();let offsetToData=offset+stream.readUInt16BE();if(tupleCount&$0bb840cac04e911b$var$TUPLES_SHARE_POINT_NUMBERS){var here=stream.pos;stream.pos=offsetToData;var sharedPoints=this.decodePoints();offsetToData=stream.pos;stream.pos=here;}
let origPoints=glyphPoints.map((pt)=>pt.copy());tupleCount&=$0bb840cac04e911b$var$TUPLE_COUNT_MASK;for(let i2=0;i2<tupleCount;i2++){let tupleDataSize=stream.readUInt16BE();let tupleIndex=stream.readUInt16BE();if(tupleIndex&$0bb840cac04e911b$var$EMBEDDED_TUPLE_COORD){var tupleCoords=[];for(let a=0;a<gvar.axisCount;a++)
tupleCoords.push(stream.readInt16BE()/16384);}else{if((tupleIndex&$0bb840cac04e911b$var$TUPLE_INDEX_MASK)>=gvar.globalCoordCount)
throw new Error("Invalid gvar table");var tupleCoords=gvar.globalCoords[tupleIndex&$0bb840cac04e911b$var$TUPLE_INDEX_MASK];}
if(tupleIndex&$0bb840cac04e911b$var$INTERMEDIATE_TUPLE){var startCoords=[];for(let a=0;a<gvar.axisCount;a++)
startCoords.push(stream.readInt16BE()/16384);var endCoords=[];for(let a1=0;a1<gvar.axisCount;a1++)
endCoords.push(stream.readInt16BE()/16384);}
let factor=this.tupleFactor(tupleIndex,tupleCoords,startCoords,endCoords);if(factor===0){offsetToData+=tupleDataSize;continue;}
var here=stream.pos;stream.pos=offsetToData;if(tupleIndex&$0bb840cac04e911b$var$PRIVATE_POINT_NUMBERS)
var points=this.decodePoints();else
var points=sharedPoints;let nPoints=points.length===0?glyphPoints.length:points.length;let xDeltas=this.decodeDeltas(nPoints);let yDeltas=this.decodeDeltas(nPoints);if(points.length===0)
for(let i3=0;i3<glyphPoints.length;i3++){var point2=glyphPoints[i3];point2.x+=Math.round(xDeltas[i3]*factor);point2.y+=Math.round(yDeltas[i3]*factor);}
else{let outPoints=origPoints.map((pt)=>pt.copy());let hasDelta=glyphPoints.map(()=>false);for(let i3=0;i3<points.length;i3++){let idx=points[i3];if(idx<glyphPoints.length){let point3=outPoints[idx];hasDelta[idx]=true;point3.x+=Math.round(xDeltas[i3]*factor);point3.y+=Math.round(yDeltas[i3]*factor);}}
this.interpolateMissingDeltas(outPoints,origPoints,hasDelta);for(let i1=0;i1<glyphPoints.length;i1++){let deltaX=outPoints[i1].x-origPoints[i1].x;let deltaY=outPoints[i1].y-origPoints[i1].y;glyphPoints[i1].x+=deltaX;glyphPoints[i1].y+=deltaY;}}
offsetToData+=tupleDataSize;stream.pos=here;}}
decodePoints(){let stream=this.font.stream;let count=stream.readUInt8();if(count&$0bb840cac04e911b$var$POINTS_ARE_WORDS)
count=(count&$0bb840cac04e911b$var$POINT_RUN_COUNT_MASK)<<8|stream.readUInt8();let points=new Uint16Array(count);let i2=0;let point2=0;while(i2<count){let run2=stream.readUInt8();let runCount=(run2&$0bb840cac04e911b$var$POINT_RUN_COUNT_MASK)+1;let fn=run2&$0bb840cac04e911b$var$POINTS_ARE_WORDS?stream.readUInt16:stream.readUInt8;for(let j=0;j<runCount&&i2<count;j++){point2+=fn.call(stream);points[i2++]=point2;}}
return points;}
decodeDeltas(count){let stream=this.font.stream;let i2=0;let deltas=new Int16Array(count);while(i2<count){let run2=stream.readUInt8();let runCount=(run2&$0bb840cac04e911b$var$DELTA_RUN_COUNT_MASK)+1;if(run2&$0bb840cac04e911b$var$DELTAS_ARE_ZERO)
i2+=runCount;else{let fn=run2&$0bb840cac04e911b$var$DELTAS_ARE_WORDS?stream.readInt16BE:stream.readInt8;for(let j=0;j<runCount&&i2<count;j++)
deltas[i2++]=fn.call(stream);}}
return deltas;}
tupleFactor(tupleIndex,tupleCoords,startCoords,endCoords){let normalized=this.normalizedCoords;let{gvar}=this.font;let factor=1;for(let i2=0;i2<gvar.axisCount;i2++){if(tupleCoords[i2]===0)
continue;if(normalized[i2]===0)
return 0;if((tupleIndex&$0bb840cac04e911b$var$INTERMEDIATE_TUPLE)===0){if(normalized[i2]<Math.min(0,tupleCoords[i2])||normalized[i2]>Math.max(0,tupleCoords[i2]))
return 0;factor=(factor*normalized[i2]+Number.EPSILON)/(tupleCoords[i2]+Number.EPSILON);}else{if(normalized[i2]<startCoords[i2]||normalized[i2]>endCoords[i2])
return 0;else if(normalized[i2]<tupleCoords[i2])
factor=factor*(normalized[i2]-startCoords[i2]+Number.EPSILON)/(tupleCoords[i2]-startCoords[i2]+Number.EPSILON);else
factor=factor*(endCoords[i2]-normalized[i2]+Number.EPSILON)/(endCoords[i2]-tupleCoords[i2]+Number.EPSILON);}}
return factor;}
interpolateMissingDeltas(points,inPoints,hasDelta){if(points.length===0)
return;let point2=0;while(point2<points.length){let firstPoint=point2;let endPoint=point2;let pt=points[endPoint];while(!pt.endContour)
pt=points[++endPoint];while(point2<=endPoint&&!hasDelta[point2])
point2++;if(point2>endPoint)
continue;let firstDelta=point2;let curDelta=point2;point2++;while(point2<=endPoint){if(hasDelta[point2]){this.deltaInterpolate(curDelta+1,point2-1,curDelta,point2,inPoints,points);curDelta=point2;}
point2++;}
if(curDelta===firstDelta)
this.deltaShift(firstPoint,endPoint,curDelta,inPoints,points);else{this.deltaInterpolate(curDelta+1,endPoint,curDelta,firstDelta,inPoints,points);if(firstDelta>0)
this.deltaInterpolate(firstPoint,firstDelta-1,curDelta,firstDelta,inPoints,points);}
point2=endPoint+1;}}
deltaInterpolate(p1,p2,ref1,ref2,inPoints,outPoints){if(p1>p2)
return;let iterable=["x","y"];for(let i2=0;i2<iterable.length;i2++){let k=iterable[i2];if(inPoints[ref1][k]>inPoints[ref2][k]){var p=ref1;ref1=ref2;ref2=p;}
let in1=inPoints[ref1][k];let in2=inPoints[ref2][k];let out1=outPoints[ref1][k];let out2=outPoints[ref2][k];if(in1!==in2||out1===out2){let scale3=in1===in2?0:(out2-out1)/(in2-in1);for(let p3=p1;p3<=p2;p3++){let out=inPoints[p3][k];if(out<=in1)
out+=out1-in1;else if(out>=in2)
out+=out2-in2;else
out=out1+(out-in1)*scale3;outPoints[p3][k]=out;}}}}
deltaShift(p1,p2,ref,inPoints,outPoints){let deltaX=outPoints[ref].x-inPoints[ref].x;let deltaY=outPoints[ref].y-inPoints[ref].y;if(deltaX===0&&deltaY===0)
return;for(let p=p1;p<=p2;p++)
if(p!==ref){outPoints[p].x+=deltaX;outPoints[p].y+=deltaY;}}
getAdvanceAdjustment(gid,table){let outerIndex,innerIndex;if(table.advanceWidthMapping){let idx=gid;if(idx>=table.advanceWidthMapping.mapCount)
idx=table.advanceWidthMapping.mapCount-1;let entryFormat=table.advanceWidthMapping.entryFormat;({outerIndex,innerIndex}=table.advanceWidthMapping.mapData[idx]);}else{outerIndex=0;innerIndex=gid;}
return this.getDelta(table.itemVariationStore,outerIndex,innerIndex);}
getDelta(itemStore,outerIndex,innerIndex){if(outerIndex>=itemStore.itemVariationData.length)
return 0;let varData=itemStore.itemVariationData[outerIndex];if(innerIndex>=varData.deltaSets.length)
return 0;let deltaSet=varData.deltaSets[innerIndex];let blendVector=this.getBlendVector(itemStore,outerIndex);let netAdjustment=0;for(let master=0;master<varData.regionIndexCount;master++)
netAdjustment+=deltaSet.deltas[master]*blendVector[master];return netAdjustment;}
getBlendVector(itemStore,outerIndex){let varData=itemStore.itemVariationData[outerIndex];if(this.blendVectors.has(varData))
return this.blendVectors.get(varData);let normalizedCoords=this.normalizedCoords;let blendVector=[];for(let master=0;master<varData.regionIndexCount;master++){let scalar=1;let regionIndex=varData.regionIndexes[master];let axes=itemStore.variationRegionList.variationRegions[regionIndex];for(let j=0;j<axes.length;j++){let axis=axes[j];let axisScalar;if(axis.startCoord>axis.peakCoord||axis.peakCoord>axis.endCoord)
axisScalar=1;else if(axis.startCoord<0&&axis.endCoord>0&&axis.peakCoord!==0)
axisScalar=1;else if(axis.peakCoord===0)
axisScalar=1;else if(normalizedCoords[j]<axis.startCoord||normalizedCoords[j]>axis.endCoord)
axisScalar=0;else{if(normalizedCoords[j]===axis.peakCoord)
axisScalar=1;else if(normalizedCoords[j]<axis.peakCoord)
axisScalar=(normalizedCoords[j]-axis.startCoord+Number.EPSILON)/(axis.peakCoord-axis.startCoord+Number.EPSILON);else
axisScalar=(axis.endCoord-normalizedCoords[j]+Number.EPSILON)/(axis.endCoord-axis.peakCoord+Number.EPSILON);}
scalar*=axisScalar;}
blendVector[master]=scalar;}
this.blendVectors.set(varData,blendVector);return blendVector;}
constructor(font,coords){this.font=font;this.normalizedCoords=this.normalizeCoords(coords);this.blendVectors=new Map();}};var $5cc7476da92df375$var$resolved=Promise.resolve();var $5cc7476da92df375$export$2e2bcd8739ae039=class{includeGlyph(glyph){if(typeof glyph==="object")
glyph=glyph.id;if(this.mapping[glyph]==null){this.glyphs.push(glyph);this.mapping[glyph]=this.glyphs.length-1;}
return this.mapping[glyph];}
constructor(font){this.font=font;this.glyphs=[];this.mapping={};this.includeGlyph(0);}};var $807e58506be70005$var$ON_CURVE=1;var $807e58506be70005$var$X_SHORT_VECTOR=2;var $807e58506be70005$var$Y_SHORT_VECTOR=4;var $807e58506be70005$var$REPEAT=8;var $807e58506be70005$var$SAME_X=16;var $807e58506be70005$var$SAME_Y=32;var $807e58506be70005$var$Point=class{static size(val){return val>=0&&val<=255?1:2;}
static encode(stream,value){if(value>=0&&value<=255)
stream.writeUInt8(value);else
stream.writeInt16BE(value);}};var $807e58506be70005$var$Glyf=new Struct({numberOfContours:int16,xMin:int16,yMin:int16,xMax:int16,yMax:int16,endPtsOfContours:new ArrayT(uint16,"numberOfContours"),instructions:new ArrayT(uint8,uint16),flags:new ArrayT(uint8,0),xPoints:new ArrayT($807e58506be70005$var$Point,0),yPoints:new ArrayT($807e58506be70005$var$Point,0)});var $807e58506be70005$export$2e2bcd8739ae039=class{encodeSimple(path4,instructions=[]){let endPtsOfContours=[];let xPoints=[];let yPoints=[];let flags=[];let same=0;let lastX=0,lastY=0,lastFlag=0;let pointCount=0;for(let i2=0;i2<path4.commands.length;i2++){let c=path4.commands[i2];for(let j=0;j<c.args.length;j+=2){let x2=c.args[j];let y2=c.args[j+1];let flag=0;if(c.command==="quadraticCurveTo"&&j===2){let next=path4.commands[i2+1];if(next&&next.command==="quadraticCurveTo"){let midX=(lastX+next.args[0])/2;let midY=(lastY+next.args[1])/2;if(x2===midX&&y2===midY)
continue;}}
if(!(c.command==="quadraticCurveTo"&&j===0))
flag|=$807e58506be70005$var$ON_CURVE;flag=this._encodePoint(x2,lastX,xPoints,flag,$807e58506be70005$var$X_SHORT_VECTOR,$807e58506be70005$var$SAME_X);flag=this._encodePoint(y2,lastY,yPoints,flag,$807e58506be70005$var$Y_SHORT_VECTOR,$807e58506be70005$var$SAME_Y);if(flag===lastFlag&&same<255){flags[flags.length-1]|=$807e58506be70005$var$REPEAT;same++;}else{if(same>0){flags.push(same);same=0;}
flags.push(flag);lastFlag=flag;}
lastX=x2;lastY=y2;pointCount++;}
if(c.command==="closePath")
endPtsOfContours.push(pointCount-1);}
if(path4.commands.length>1&&path4.commands[path4.commands.length-1].command!=="closePath")
endPtsOfContours.push(pointCount-1);let bbox=path4.bbox;let glyf={numberOfContours:endPtsOfContours.length,xMin:bbox.minX,yMin:bbox.minY,xMax:bbox.maxX,yMax:bbox.maxY,endPtsOfContours,instructions,flags,xPoints,yPoints};let size4=$807e58506be70005$var$Glyf.size(glyf);let tail=4-size4%4;let stream=new EncodeStream(size4+tail);$807e58506be70005$var$Glyf.encode(stream,glyf);if(tail!==0)
stream.fill(0,tail);return stream.buffer;}
_encodePoint(value,last4,points,flag,shortFlag,sameFlag){let diff=value-last4;if(value===last4)
flag|=sameFlag;else{if(-255<=diff&&diff<=255){flag|=shortFlag;if(diff<0)
diff=-diff;else
flag|=sameFlag;}
points.push(diff);}
return flag;}};var $4abbb6a5dbdc441a$export$2e2bcd8739ae039=class extends(0,$5cc7476da92df375$export$2e2bcd8739ae039){_addGlyph(gid){let glyph=this.font.getGlyph(gid);let glyf=glyph._decode();let curOffset=this.font.loca.offsets[gid];let nextOffset=this.font.loca.offsets[gid+1];let stream=this.font._getTableStream("glyf");stream.pos+=curOffset;let buffer=stream.readBuffer(nextOffset-curOffset);if(glyf&&glyf.numberOfContours<0){buffer=new Uint8Array(buffer);let view=new DataView(buffer.buffer);for(let component of glyf.components){gid=this.includeGlyph(component.glyphID);view.setUint16(component.pos,gid);}}else if(glyf&&this.font._variationProcessor)
buffer=this.glyphEncoder.encodeSimple(glyph.path,glyf.instructions);this.glyf.push(buffer);this.loca.offsets.push(this.offset);this.hmtx.metrics.push({advance:glyph.advanceWidth,bearing:glyph._getMetrics().leftBearing});this.offset+=buffer.length;return this.glyf.length-1;}
encode(){this.glyf=[];this.offset=0;this.loca={offsets:[],version:this.font.loca.version};this.hmtx={metrics:[],bearings:[]};let i2=0;while(i2<this.glyphs.length)
this._addGlyph(this.glyphs[i2++]);let maxp=(0,import_clone2.default)(this.font.maxp);maxp.numGlyphs=this.glyf.length;this.loca.offsets.push(this.offset);let head2=(0,import_clone2.default)(this.font.head);head2.indexToLocFormat=this.loca.version;let hhea=(0,import_clone2.default)(this.font.hhea);hhea.numberOfMetrics=this.hmtx.metrics.length;return(0,$816c07a04b6dba87$export$2e2bcd8739ae039).toBuffer({tables:{head:head2,hhea,loca:this.loca,maxp,"cvt ":this.font["cvt "],prep:this.font.prep,glyf:this.glyf,hmtx:this.hmtx,fpgm:this.font.fpgm}});}
constructor(font){super(font);this.glyphEncoder=new(0,$807e58506be70005$export$2e2bcd8739ae039)();}};var $001d739428a71d5a$export$2e2bcd8739ae039=class extends(0,$5cc7476da92df375$export$2e2bcd8739ae039){subsetCharstrings(){this.charstrings=[];let gsubrs={};for(let gid of this.glyphs){this.charstrings.push(this.cff.getCharString(gid));let glyph=this.font.getGlyph(gid);let path4=glyph.path;for(let subr in glyph._usedGsubrs)
gsubrs[subr]=true;}
this.gsubrs=this.subsetSubrs(this.cff.globalSubrIndex,gsubrs);}
subsetSubrs(subrs,used){let res=[];for(let i2=0;i2<subrs.length;i2++){let subr=subrs[i2];if(used[i2]){this.cff.stream.pos=subr.offset;res.push(this.cff.stream.readBuffer(subr.length));}else
res.push(new Uint8Array([11]));}
return res;}
subsetFontdict(topDict){topDict.FDArray=[];topDict.FDSelect={version:0,fds:[]};let used_fds={};let used_subrs=[];let fd_select={};for(let gid of this.glyphs){let fd=this.cff.fdForGlyph(gid);if(fd==null)
continue;if(!used_fds[fd]){topDict.FDArray.push(Object.assign({},this.cff.topDict.FDArray[fd]));used_subrs.push({});fd_select[fd]=topDict.FDArray.length-1;}
used_fds[fd]=true;topDict.FDSelect.fds.push(fd_select[fd]);let glyph=this.font.getGlyph(gid);let path4=glyph.path;for(let subr in glyph._usedSubrs)
used_subrs[fd_select[fd]][subr]=true;}
for(let i2=0;i2<topDict.FDArray.length;i2++){let dict=topDict.FDArray[i2];delete dict.FontName;if(dict.Private&&dict.Private.Subrs){dict.Private=Object.assign({},dict.Private);dict.Private.Subrs=this.subsetSubrs(dict.Private.Subrs,used_subrs[i2]);}}
return;}
createCIDFontdict(topDict){let used_subrs={};for(let gid of this.glyphs){let glyph=this.font.getGlyph(gid);let path4=glyph.path;for(let subr in glyph._usedSubrs)
used_subrs[subr]=true;}
let privateDict=Object.assign({},this.cff.topDict.Private);if(this.cff.topDict.Private&&this.cff.topDict.Private.Subrs)
privateDict.Subrs=this.subsetSubrs(this.cff.topDict.Private.Subrs,used_subrs);topDict.FDArray=[{Private:privateDict}];return topDict.FDSelect={version:3,nRanges:1,ranges:[{first:0,fd:0}],sentinel:this.charstrings.length};}
addString(string){if(!string)
return null;if(!this.strings)
this.strings=[];this.strings.push(string);return(0,$229224aec43783c5$export$2e2bcd8739ae039).length+this.strings.length-1;}
encode(){this.subsetCharstrings();let charset={version:this.charstrings.length>255?2:1,ranges:[{first:1,nLeft:this.charstrings.length-2}]};let topDict=Object.assign({},this.cff.topDict);topDict.Private=null;topDict.charset=charset;topDict.Encoding=null;topDict.CharStrings=this.charstrings;for(let key of["version","Notice","Copyright","FullName","FamilyName","Weight","PostScript","BaseFontName","FontName"])
topDict[key]=this.addString(this.cff.string(topDict[key]));topDict.ROS=[this.addString("Adobe"),this.addString("Identity"),0];topDict.CIDCount=this.charstrings.length;if(this.cff.isCIDFont)
this.subsetFontdict(topDict);else
this.createCIDFontdict(topDict);let top={version:1,hdrSize:this.cff.hdrSize,offSize:4,header:this.cff.header,nameIndex:[this.cff.postscriptName],topDictIndex:[topDict],stringIndex:this.strings,globalSubrIndex:this.gsubrs};return(0,$b84fd3dd9d8eddb2$export$2e2bcd8739ae039).toBuffer(top);}
constructor(font){super(font);this.cff=this.font["CFF "];if(!this.cff)
throw new Error("Not a CFF Font");}};var $4c1709dee528ea76$export$2e2bcd8739ae039=class _$4c1709dee528ea76$export$2e2bcd8739ae039{static probe(buffer){let format=(0,$12727730ddfc8bfe$export$3d28c1996ced1f14).decode(buffer.slice(0,4));return format==="true"||format==="OTTO"||format===String.fromCharCode(0,1,0,0);}
setDefaultLanguage(lang=null){this.defaultLanguage=lang;}
_getTable(table){if(!(table.tag in this._tables))
try{this._tables[table.tag]=this._decodeTable(table);}catch(e){if($d636bc798e7178db$export$bd5c5d8b8dcafd78){console.error(`Error decoding table ${table.tag}`);console.error(e.stack);}}
return this._tables[table.tag];}
_getTableStream(tag2){let table=this.directory.tables[tag2];if(table){this.stream.pos=table.offset;return this.stream;}
return null;}
_decodeDirectory(){return this.directory=(0,$816c07a04b6dba87$export$2e2bcd8739ae039).decode(this.stream,{_startOffset:0});}
_decodeTable(table){let pos=this.stream.pos;let stream=this._getTableStream(table.tag);let result=(0,$c3395722bea751e2$export$2e2bcd8739ae039)[table.tag].decode(stream,this,table.length);this.stream.pos=pos;return result;}
getName(key,lang=this.defaultLanguage||$d636bc798e7178db$export$42940898df819940){let record=this.name&&this.name.records[key];if(record)
return record[lang]||record[this.defaultLanguage]||record[$d636bc798e7178db$export$42940898df819940]||record["en"]||record[Object.keys(record)[0]]||null;return null;}
get postscriptName(){return this.getName("postscriptName");}
get fullName(){return this.getName("fullName");}
get familyName(){return this.getName("fontFamily");}
get subfamilyName(){return this.getName("fontSubfamily");}
get copyright(){return this.getName("copyright");}
get version(){return this.getName("version");}
get ascent(){return this.hhea.ascent;}
get descent(){return this.hhea.descent;}
get lineGap(){return this.hhea.lineGap;}
get underlinePosition(){return this.post.underlinePosition;}
get underlineThickness(){return this.post.underlineThickness;}
get italicAngle(){return this.post.italicAngle;}
get capHeight(){let os2=this["OS/2"];return os2?os2.capHeight:this.ascent;}
get xHeight(){let os2=this["OS/2"];return os2?os2.xHeight:0;}
get numGlyphs(){return this.maxp.numGlyphs;}
get unitsPerEm(){return this.head.unitsPerEm;}
get bbox(){return Object.freeze(new(0,$f34600ab9d7f70d8$export$2e2bcd8739ae039)(this.head.xMin,this.head.yMin,this.head.xMax,this.head.yMax));}
get _cmapProcessor(){return new(0,$f08dd41ef10b694c$export$2e2bcd8739ae039)(this.cmap);}
get characterSet(){return this._cmapProcessor.getCharacterSet();}
hasGlyphForCodePoint(codePoint){return!!this._cmapProcessor.lookup(codePoint);}
glyphForCodePoint(codePoint){return this.getGlyph(this._cmapProcessor.lookup(codePoint),[codePoint]);}
glyphsForString(string){let glyphs=[];let len2=string.length;let idx=0;let last4=-1;let state=-1;while(idx<=len2){let code=0;let nextState=0;if(idx<len2){code=string.charCodeAt(idx++);if(55296<=code&&code<=56319&&idx<len2){let next=string.charCodeAt(idx);if(56320<=next&&next<=57343){idx++;code=((code&1023)<<10)+(next&1023)+65536;}}
nextState=65024<=code&&code<=65039||917760<=code&&code<=917999?1:0;}else
idx++;if(state===0&&nextState===1)
glyphs.push(this.getGlyph(this._cmapProcessor.lookup(last4,code),[last4,code]));else if(state===0&&nextState===0)
glyphs.push(this.glyphForCodePoint(last4));last4=code;state=nextState;}
return glyphs;}
get _layoutEngine(){return new(0,$4c0a7fa5df7a9ab1$export$2e2bcd8739ae039)(this);}
layout(string,userFeatures,script,language,direction3){return this._layoutEngine.layout(string,userFeatures,script,language,direction3);}
stringsForGlyph(gid){return this._layoutEngine.stringsForGlyph(gid);}
get availableFeatures(){return this._layoutEngine.getAvailableFeatures();}
getAvailableFeatures(script,language){return this._layoutEngine.getAvailableFeatures(script,language);}
_getBaseGlyph(glyph,characters=[]){if(!this._glyphs[glyph]){if(this.directory.tables.glyf)
this._glyphs[glyph]=new(0,$69aac16029968692$export$2e2bcd8739ae039)(glyph,characters,this);else if(this.directory.tables["CFF "]||this.directory.tables.CFF2)
this._glyphs[glyph]=new(0,$62cc5109c6101893$export$2e2bcd8739ae039)(glyph,characters,this);}
return this._glyphs[glyph]||null;}
getGlyph(glyph,characters=[]){if(!this._glyphs[glyph]){if(this.directory.tables.sbix)
this._glyphs[glyph]=new(0,$25d8f049c222084c$export$2e2bcd8739ae039)(glyph,characters,this);else if(this.directory.tables.COLR&&this.directory.tables.CPAL)
this._glyphs[glyph]=new(0,$0d411f0165859681$export$2e2bcd8739ae039)(glyph,characters,this);else
this._getBaseGlyph(glyph,characters);}
return this._glyphs[glyph]||null;}
createSubset(){if(this.directory.tables["CFF "])
return new(0,$001d739428a71d5a$export$2e2bcd8739ae039)(this);return new(0,$4abbb6a5dbdc441a$export$2e2bcd8739ae039)(this);}
get variationAxes(){let res={};if(!this.fvar)
return res;for(let axis of this.fvar.axis)
res[axis.axisTag.trim()]={name:axis.name.en,min:axis.minValue,default:axis.defaultValue,max:axis.maxValue};return res;}
get namedVariations(){let res={};if(!this.fvar)
return res;for(let instance of this.fvar.instance){let settings={};for(let i2=0;i2<this.fvar.axis.length;i2++){let axis=this.fvar.axis[i2];settings[axis.axisTag.trim()]=instance.coord[i2];}
res[instance.name.en]=settings;}
return res;}
getVariation(settings){if(!(this.directory.tables.fvar&&(this.directory.tables.gvar&&this.directory.tables.glyf||this.directory.tables.CFF2)))
throw new Error("Variations require a font with the fvar, gvar and glyf, or CFF2 tables.");if(typeof settings==="string")
settings=this.namedVariations[settings];if(typeof settings!=="object")
throw new Error("Variation settings must be either a variation name or settings object.");let coords=this.fvar.axis.map((axis,i2)=>{let axisTag=axis.axisTag.trim();if(axisTag in settings)
return Math.max(axis.minValue,Math.min(axis.maxValue,settings[axisTag]));else
return axis.defaultValue;});let stream=new DecodeStream(this.stream.buffer);stream.pos=this._directoryPos;let font=new _$4c1709dee528ea76$export$2e2bcd8739ae039(stream,coords);font._tables=this._tables;return font;}
get _variationProcessor(){if(!this.fvar)
return null;let variationCoords=this.variationCoords;if(!variationCoords&&!this.CFF2)
return null;if(!variationCoords)
variationCoords=this.fvar.axis.map((axis)=>axis.defaultValue);return new(0,$0bb840cac04e911b$export$2e2bcd8739ae039)(this,variationCoords);}
getFont(name){return this.getVariation(name);}
constructor(stream,variationCoords=null){(0,_define_property)(this,"type","TTF");this.defaultLanguage=null;this.stream=stream;this.variationCoords=variationCoords;this._directoryPos=this.stream.pos;this._tables={};this._glyphs={};this._decodeDirectory();for(let tag2 in this.directory.tables){let table=this.directory.tables[tag2];if((0,$c3395722bea751e2$export$2e2bcd8739ae039)[tag2]&&table.length>0)
Object.defineProperty(this,tag2,{get:this._getTable.bind(this,table)});}}};(0,__decorate)([(0,$e71565f2ce09cb6b$export$69a3209f1a06c04d)],$4c1709dee528ea76$export$2e2bcd8739ae039.prototype,"bbox",null);(0,__decorate)([(0,$e71565f2ce09cb6b$export$69a3209f1a06c04d)],$4c1709dee528ea76$export$2e2bcd8739ae039.prototype,"_cmapProcessor",null);(0,__decorate)([(0,$e71565f2ce09cb6b$export$69a3209f1a06c04d)],$4c1709dee528ea76$export$2e2bcd8739ae039.prototype,"characterSet",null);(0,__decorate)([(0,$e71565f2ce09cb6b$export$69a3209f1a06c04d)],$4c1709dee528ea76$export$2e2bcd8739ae039.prototype,"_layoutEngine",null);(0,__decorate)([(0,$e71565f2ce09cb6b$export$69a3209f1a06c04d)],$4c1709dee528ea76$export$2e2bcd8739ae039.prototype,"variationAxes",null);(0,__decorate)([(0,$e71565f2ce09cb6b$export$69a3209f1a06c04d)],$4c1709dee528ea76$export$2e2bcd8739ae039.prototype,"namedVariations",null);(0,__decorate)([(0,$e71565f2ce09cb6b$export$69a3209f1a06c04d)],$4c1709dee528ea76$export$2e2bcd8739ae039.prototype,"_variationProcessor",null);var $c1726355ecc5b889$var$WOFFDirectoryEntry=new Struct({tag:new StringT(4),offset:new Pointer(uint32,"void",{type:"global"}),compLength:uint32,length:uint32,origChecksum:uint32});var $c1726355ecc5b889$var$WOFFDirectory=new Struct({tag:new StringT(4),flavor:uint32,length:uint32,numTables:uint16,reserved:new Reserved(uint16),totalSfntSize:uint32,majorVersion:uint16,minorVersion:uint16,metaOffset:uint32,metaLength:uint32,metaOrigLength:uint32,privOffset:uint32,privLength:uint32,tables:new ArrayT($c1726355ecc5b889$var$WOFFDirectoryEntry,"numTables")});$c1726355ecc5b889$var$WOFFDirectory.process=function(){let tables1={};for(let table of this.tables)
tables1[table.tag]=table;this.tables=tables1;};var $c1726355ecc5b889$export$2e2bcd8739ae039=$c1726355ecc5b889$var$WOFFDirectory;var $760785214b9fc52c$export$2e2bcd8739ae039=class extends(0,$4c1709dee528ea76$export$2e2bcd8739ae039){static probe(buffer){return(0,$12727730ddfc8bfe$export$3d28c1996ced1f14).decode(buffer.slice(0,4))==="wOFF";}
_decodeDirectory(){this.directory=(0,$c1726355ecc5b889$export$2e2bcd8739ae039).decode(this.stream,{_startOffset:0});}
_getTableStream(tag2){let table=this.directory.tables[tag2];if(table){this.stream.pos=table.offset;if(table.compLength<table.length){this.stream.pos+=2;let outBuffer=new Uint8Array(table.length);let buf=(0,import_tiny_inflate.default)(this.stream.readBuffer(table.compLength-2),outBuffer);return new DecodeStream(buf);}else
return this.stream;}
return null;}
constructor(...args){super(...args);(0,_define_property)(this,"type","WOFF");}};var $8046190c9f1ad19e$export$2e2bcd8739ae039=class extends(0,$69aac16029968692$export$2e2bcd8739ae039){_decode(){return this._font._transformedGlyphs[this.id];}
_getCBox(){return this.path.bbox;}
constructor(...args){super(...args);(0,_define_property)(this,"type","WOFF2");}};var $c28ec7bbb3b8de3a$var$Base128={decode(stream){let result=0;let iterable=[0,1,2,3,4];for(let j=0;j<iterable.length;j++){let i2=iterable[j];let code=stream.readUInt8();if(result&3758096384)
throw new Error("Overflow");result=result<<7|code&127;if((code&128)===0)
return result;}
throw new Error("Bad base 128 number");}};var $c28ec7bbb3b8de3a$var$knownTags=["cmap","head","hhea","hmtx","maxp","name","OS/2","post","cvt ","fpgm","glyf","loca","prep","CFF ","VORG","EBDT","EBLC","gasp","hdmx","kern","LTSH","PCLT","VDMX","vhea","vmtx","BASE","GDEF","GPOS","GSUB","EBSC","JSTF","MATH","CBDT","CBLC","COLR","CPAL","SVG ","sbix","acnt","avar","bdat","bloc","bsln","cvar","fdsc","feat","fmtx","fvar","gvar","hsty","just","lcar","mort","morx","opbd","prop","trak","Zapf","Silf","Glat","Gloc","Feat","Sill"];var $c28ec7bbb3b8de3a$var$WOFF2DirectoryEntry=new Struct({flags:uint8,customTag:new Optional(new StringT(4),(t)=>(t.flags&63)===63),tag:(t)=>t.customTag||$c28ec7bbb3b8de3a$var$knownTags[t.flags&63],length:$c28ec7bbb3b8de3a$var$Base128,transformVersion:(t)=>t.flags>>>6&3,transformed:(t)=>t.tag==="glyf"||t.tag==="loca"?t.transformVersion===0:t.transformVersion!==0,transformLength:new Optional($c28ec7bbb3b8de3a$var$Base128,(t)=>t.transformed)});var $c28ec7bbb3b8de3a$var$WOFF2Directory=new Struct({tag:new StringT(4),flavor:uint32,length:uint32,numTables:uint16,reserved:new Reserved(uint16),totalSfntSize:uint32,totalCompressedSize:uint32,majorVersion:uint16,minorVersion:uint16,metaOffset:uint32,metaLength:uint32,metaOrigLength:uint32,privOffset:uint32,privLength:uint32,tables:new ArrayT($c28ec7bbb3b8de3a$var$WOFF2DirectoryEntry,"numTables")});$c28ec7bbb3b8de3a$var$WOFF2Directory.process=function(){let tables={};for(let i2=0;i2<this.tables.length;i2++){let table=this.tables[i2];tables[table.tag]=table;}
return this.tables=tables;};var $c28ec7bbb3b8de3a$export$2e2bcd8739ae039=$c28ec7bbb3b8de3a$var$WOFF2Directory;var $21ee218f84ac7f32$export$2e2bcd8739ae039=class extends(0,$4c1709dee528ea76$export$2e2bcd8739ae039){static probe(buffer){return(0,$12727730ddfc8bfe$export$3d28c1996ced1f14).decode(buffer.slice(0,4))==="wOF2";}
_decodeDirectory(){this.directory=(0,$c28ec7bbb3b8de3a$export$2e2bcd8739ae039).decode(this.stream);this._dataPos=this.stream.pos;}
_decompress(){if(!this._decompressed){this.stream.pos=this._dataPos;let buffer=this.stream.readBuffer(this.directory.totalCompressedSize);let decompressedSize=0;for(let tag2 in this.directory.tables){let entry=this.directory.tables[tag2];entry.offset=decompressedSize;decompressedSize+=entry.transformLength!=null?entry.transformLength:entry.length;}
let decompressed=(0,import_decompress.default)(buffer,decompressedSize);if(!decompressed)
throw new Error("Error decoding compressed data in WOFF2");this.stream=new DecodeStream(decompressed);this._decompressed=true;}}
_decodeTable(table){this._decompress();return super._decodeTable(table);}
_getBaseGlyph(glyph,characters=[]){if(!this._glyphs[glyph]){if(this.directory.tables.glyf&&this.directory.tables.glyf.transformed){if(!this._transformedGlyphs)
this._transformGlyfTable();return this._glyphs[glyph]=new(0,$8046190c9f1ad19e$export$2e2bcd8739ae039)(glyph,characters,this);}else
return super._getBaseGlyph(glyph,characters);}}
_transformGlyfTable(){this._decompress();this.stream.pos=this.directory.tables.glyf.offset;let table=$21ee218f84ac7f32$var$GlyfTable.decode(this.stream);let glyphs=[];for(let index2=0;index2<table.numGlyphs;index2++){let glyph={};let nContours=table.nContours.readInt16BE();glyph.numberOfContours=nContours;if(nContours>0){let nPoints=[];let totalPoints=0;for(let i2=0;i2<nContours;i2++){let r1=$21ee218f84ac7f32$var$read255UInt16(table.nPoints);totalPoints+=r1;nPoints.push(totalPoints);}
glyph.points=$21ee218f84ac7f32$var$decodeTriplet(table.flags,table.glyphs,totalPoints);for(let i1=0;i1<nContours;i1++)
glyph.points[nPoints[i1]-1].endContour=true;var instructionSize=$21ee218f84ac7f32$var$read255UInt16(table.glyphs);}else if(nContours<0){let haveInstructions=(0,$69aac16029968692$export$2e2bcd8739ae039).prototype._decodeComposite.call({_font:this},glyph,table.composites);if(haveInstructions)
var instructionSize=$21ee218f84ac7f32$var$read255UInt16(table.glyphs);}
glyphs.push(glyph);}
this._transformedGlyphs=glyphs;}
constructor(...args){super(...args);(0,_define_property)(this,"type","WOFF2");}};var $21ee218f84ac7f32$var$Substream=class{decode(stream,parent){return new DecodeStream(this._buf.decode(stream,parent));}
constructor(length3){this.length=length3;this._buf=new BufferT(length3);}};var $21ee218f84ac7f32$var$GlyfTable=new Struct({version:uint32,numGlyphs:uint16,indexFormat:uint16,nContourStreamSize:uint32,nPointsStreamSize:uint32,flagStreamSize:uint32,glyphStreamSize:uint32,compositeStreamSize:uint32,bboxStreamSize:uint32,instructionStreamSize:uint32,nContours:new $21ee218f84ac7f32$var$Substream("nContourStreamSize"),nPoints:new $21ee218f84ac7f32$var$Substream("nPointsStreamSize"),flags:new $21ee218f84ac7f32$var$Substream("flagStreamSize"),glyphs:new $21ee218f84ac7f32$var$Substream("glyphStreamSize"),composites:new $21ee218f84ac7f32$var$Substream("compositeStreamSize"),bboxes:new $21ee218f84ac7f32$var$Substream("bboxStreamSize"),instructions:new $21ee218f84ac7f32$var$Substream("instructionStreamSize")});var $21ee218f84ac7f32$var$WORD_CODE=253;var $21ee218f84ac7f32$var$ONE_MORE_BYTE_CODE2=254;var $21ee218f84ac7f32$var$ONE_MORE_BYTE_CODE1=255;var $21ee218f84ac7f32$var$LOWEST_U_CODE=253;function $21ee218f84ac7f32$var$read255UInt16(stream){let code=stream.readUInt8();if(code===$21ee218f84ac7f32$var$WORD_CODE)
return stream.readUInt16BE();if(code===$21ee218f84ac7f32$var$ONE_MORE_BYTE_CODE1)
return stream.readUInt8()+$21ee218f84ac7f32$var$LOWEST_U_CODE;if(code===$21ee218f84ac7f32$var$ONE_MORE_BYTE_CODE2)
return stream.readUInt8()+$21ee218f84ac7f32$var$LOWEST_U_CODE*2;return code;}
function $21ee218f84ac7f32$var$withSign(flag,baseval){return flag&1?baseval:-baseval;}
function $21ee218f84ac7f32$var$decodeTriplet(flags,glyphs,nPoints){let y2;let x2=y2=0;let res=[];for(let i2=0;i2<nPoints;i2++){let dx=0,dy=0;let flag=flags.readUInt8();let onCurve=!(flag>>7);flag&=127;if(flag<10){dx=0;dy=$21ee218f84ac7f32$var$withSign(flag,((flag&14)<<7)+glyphs.readUInt8());}else if(flag<20){dx=$21ee218f84ac7f32$var$withSign(flag,((flag-10&14)<<7)+glyphs.readUInt8());dy=0;}else if(flag<84){var b02=flag-20;var b12=glyphs.readUInt8();dx=$21ee218f84ac7f32$var$withSign(flag,1+(b02&48)+(b12>>4));dy=$21ee218f84ac7f32$var$withSign(flag>>1,1+((b02&12)<<2)+(b12&15));}else if(flag<120){var b02=flag-84;dx=$21ee218f84ac7f32$var$withSign(flag,1+(b02/12<<8)+glyphs.readUInt8());dy=$21ee218f84ac7f32$var$withSign(flag>>1,1+(b02%12>>2<<8)+glyphs.readUInt8());}else if(flag<124){var b12=glyphs.readUInt8();let b22=glyphs.readUInt8();dx=$21ee218f84ac7f32$var$withSign(flag,(b12<<4)+(b22>>4));dy=$21ee218f84ac7f32$var$withSign(flag>>1,((b22&15)<<8)+glyphs.readUInt8());}else{dx=$21ee218f84ac7f32$var$withSign(flag,glyphs.readUInt16BE());dy=$21ee218f84ac7f32$var$withSign(flag>>1,glyphs.readUInt16BE());}
x2+=dx;y2+=dy;res.push(new(0,$69aac16029968692$export$baf26146a414f24a)(onCurve,false,x2,y2));}
return res;}
var $cd5853a56c68fec7$var$TTCHeader=new VersionedStruct(uint32,{65536:{numFonts:uint32,offsets:new ArrayT(uint32,"numFonts")},131072:{numFonts:uint32,offsets:new ArrayT(uint32,"numFonts"),dsigTag:uint32,dsigLength:uint32,dsigOffset:uint32}});var $cd5853a56c68fec7$export$2e2bcd8739ae039=class{static probe(buffer){return(0,$12727730ddfc8bfe$export$3d28c1996ced1f14).decode(buffer.slice(0,4))==="ttcf";}
getFont(name){for(let offset of this.header.offsets){let stream=new DecodeStream(this.stream.buffer);stream.pos=offset;let font=new(0,$4c1709dee528ea76$export$2e2bcd8739ae039)(stream);if(font.postscriptName===name||font.postscriptName instanceof Uint8Array&&name instanceof Uint8Array&&font.postscriptName.every((v,i2)=>name[i2]===v))
return font;}
return null;}
get fonts(){let fonts3=[];for(let offset of this.header.offsets){let stream=new DecodeStream(this.stream.buffer);stream.pos=offset;fonts3.push(new(0,$4c1709dee528ea76$export$2e2bcd8739ae039)(stream));}
return fonts3;}
constructor(stream){(0,_define_property)(this,"type","TTC");this.stream=stream;if(stream.readString(4)!=="ttcf")
throw new Error("Not a TrueType collection");this.header=$cd5853a56c68fec7$var$TTCHeader.decode(stream);}};var $05f49f930186144e$var$DFontName=new StringT(uint8);var $05f49f930186144e$var$DFontData=new Struct({len:uint32,buf:new BufferT("len")});var $05f49f930186144e$var$Ref=new Struct({id:uint16,nameOffset:int16,attr:uint8,dataOffset:uint24,handle:uint32});var $05f49f930186144e$var$Type=new Struct({name:new StringT(4),maxTypeIndex:uint16,refList:new Pointer(uint16,new ArrayT($05f49f930186144e$var$Ref,(t)=>t.maxTypeIndex+1),{type:"parent"})});var $05f49f930186144e$var$TypeList=new Struct({length:uint16,types:new ArrayT($05f49f930186144e$var$Type,(t)=>t.length+1)});var $05f49f930186144e$var$DFontMap=new Struct({reserved:new Reserved(uint8,24),typeList:new Pointer(uint16,$05f49f930186144e$var$TypeList),nameListOffset:new Pointer(uint16,"void")});var $05f49f930186144e$var$DFontHeader=new Struct({dataOffset:uint32,map:new Pointer(uint32,$05f49f930186144e$var$DFontMap),dataLength:uint32,mapLength:uint32});var $05f49f930186144e$export$2e2bcd8739ae039=class{static probe(buffer){let stream=new DecodeStream(buffer);try{var header=$05f49f930186144e$var$DFontHeader.decode(stream);}catch(e){return false;}
for(let type of header.map.typeList.types){if(type.name==="sfnt")
return true;}
return false;}
getFont(name){if(!this.sfnt)
return null;for(let ref of this.sfnt.refList){let pos=this.header.dataOffset+ref.dataOffset+4;let stream=new DecodeStream(this.stream.buffer.slice(pos));let font=new(0,$4c1709dee528ea76$export$2e2bcd8739ae039)(stream);if(font.postscriptName===name||font.postscriptName instanceof Uint8Array&&name instanceof Uint8Array&&font.postscriptName.every((v,i2)=>name[i2]===v))
return font;}
return null;}
get fonts(){let fonts3=[];for(let ref of this.sfnt.refList){let pos=this.header.dataOffset+ref.dataOffset+4;let stream=new DecodeStream(this.stream.buffer.slice(pos));fonts3.push(new(0,$4c1709dee528ea76$export$2e2bcd8739ae039)(stream));}
return fonts3;}
constructor(stream){(0,_define_property)(this,"type","DFont");this.stream=stream;this.header=$05f49f930186144e$var$DFontHeader.decode(this.stream);for(let type of this.header.map.typeList.types){for(let ref of type.refList)
if(ref.nameOffset>=0){this.stream.pos=ref.nameOffset+this.header.map.nameListOffset;ref.name=$05f49f930186144e$var$DFontName.decode(this.stream);}else
ref.name=null;if(type.name==="sfnt")
this.sfnt=type;}}};(0,$d636bc798e7178db$export$36b2f24e97d43be)((0,$4c1709dee528ea76$export$2e2bcd8739ae039));(0,$d636bc798e7178db$export$36b2f24e97d43be)((0,$760785214b9fc52c$export$2e2bcd8739ae039));(0,$d636bc798e7178db$export$36b2f24e97d43be)((0,$21ee218f84ac7f32$export$2e2bcd8739ae039));(0,$d636bc798e7178db$export$36b2f24e97d43be)((0,$cd5853a56c68fec7$export$2e2bcd8739ae039));(0,$d636bc798e7178db$export$36b2f24e97d43be)((0,$05f49f930186144e$export$2e2bcd8739ae039));var import_path4=__toESM(require_path_browserify(),1);var _config={fontFamilyMappings:{}};var fonts={};var getConfig=()=>_config;var getFonts=()=>fonts;var textBBox=function(text,x2,y2,details){if(!text)
return new NoBox();const config2=getConfig();const preloaded=getFonts();const families=(details.fontFamily||fontFamily).split(/\s*,\s*/);const fontMap=Object.assign({},fontFamilyMappings,config2.fontFamilyMappings);const fontSize2=details.fontSize||fontSize;const fontDir2=config2.fontDir||fontDir;let fontFamily2;let font;for(let i2=0,il=families.length;i2<il;++i2){if(fontMap[families[i2]]){fontFamily2=families[i2];break;}}
if(!fontFamily2){fontFamily2=fontFamily;}
if(preloaded[fontFamily2]){font=preloaded[fontFamily2];}else{const filename=import_node_path2.default.join(fontDir2,fontMap[fontFamily2]);try{font=(void 0)(filename);}catch(e){console.warn(`Could not open font"${fontFamily2}"in file"${filename}".${e.toString()}`);return new NoBox();}
preloaded[fontFamily2]=font;}
const fontHeight=font.ascent-font.descent;const lineHeight=fontHeight>font.unitsPerEm?fontHeight:fontHeight+font.lineGap;const height=lineHeight/font.unitsPerEm*fontSize2;const width2=font.layout(text).glyphs.reduce((last4,curr)=>last4+curr.advanceWidth,0)/font.unitsPerEm*fontSize2;let xAdjust=0;if(details.textAnchor==="end"){xAdjust=-width2;}else if(details.textAnchor==="middle"){xAdjust=-width2/2;}
let yAdjust=font.ascent;if(details.dominantBaseline==="before-edge"||details.dominantBaseline==="text-before-edge"){yAdjust=0;}else if(details.dominantBaseline==="hanging"){yAdjust=font.ascent-font.xHeight-font.capHeight;}else if(details.dominantBaseline==="mathematical"){yAdjust=font.ascent-font.xHeight;}else if(details.dominantBaseline==="middle"){yAdjust=font.ascent-font.xHeight/2;}else if(details.dominantBaseline==="central"){yAdjust=font.ascent/2+font.descent/2;}else if(details.dominantBaseline==="ideographic"){yAdjust=font.ascent+font.descent;}
return new Box(x2+xAdjust,y2-yAdjust/font.unitsPerEm*fontSize2,width2,height);};var applyTransformation=(segments,node2,applyTransformations)=>{if(node2.matrixify&&applyTransformations){return segments.transform(node2.matrixify());}
return segments;};var getSegments2=(node2,applyTransformations,rbox=false)=>{const segments=getPathSegments2(node2,rbox);return applyTransformation(segments,node2,applyTransformations);};var getPathSegments2=(node2,rbox)=>{if(node2.nodeType!==1)
return new PathSegmentArray();switch(node2.nodeName){case"rect":case"image":case"pattern":case"mask":case"foreignObject":return getPathSegments(pathFrom.rect(node2));case"svg":case"symbol":if(rbox){return getPathSegments(pathFrom.rect(node2));}
case"g":case"clipPath":case"a":case"marker":return node2.childNodes.reduce((segments,child)=>{if(!child.matrixify)
return segments;return segments.merge(getSegments2(child,true).transform(child.generateViewBoxMatrix()));},new PathSegmentArray());case"circle":return getPathSegments(pathFrom.circle(node2));case"ellipse":return getPathSegments(pathFrom.ellipse(node2));case"line":return getPathSegments(pathFrom.line(node2));case"polyline":case"polygon":return getPathSegments(pathFrom.polyline(node2));case"path":case"glyph":case"missing-glyph":return getPathSegments(node2.getAttribute("d"));case"use":{const ref=node2.getAttribute("href")||node2.getAttribute("xlink:href");const refNode=node2.getRootNode().querySelector(ref);return getSegments2(refNode).transform(node2.generateViewBoxMatrix());}
case"tspan":case"text":case"altGlyph":{const box=getTextBBox(node2);if(box instanceof NoBox){return new PathSegmentArray();}
return getPathSegments(pathFrom.box(box));}
default:return new PathSegmentArray();}};var getTextBBox=(node2)=>{const textRoot=findTextRoot(node2);const boxes=getTextBBoxes(node2,textRoot);return boxes.filter(isNotEmptyBox).reduce((last4,curr)=>last4.merge(curr),new NoBox());};var findTextRoot=(node2)=>{while(node2.parentNode){if(node2.nodeName==="text"&&node2.parentNode.nodeName==="text"||(node2.nodeName==="tspan"||node2.nodeName==="textPath")&&["tspan","text","textPath"].includes(node2.parentNode.nodeName)){node2=node2.parentNode;}else{break;}}
return node2;};var getTextBBoxes=function(target,textRoot=target,pos={x:0,y:0},dx=[0],dy=[0],boxes=[]){const iter=new NodeIterator(textRoot,NodeFilter.SHOW_ELEMENT|NodeFilter.SHOW_TEXT,(node2)=>{if(node2.nodeName==="title")
return NodeFilter.FILTER_IGNORE;return NodeFilter.FILTER_ACCEPT;});for(const node2 of iter){if(node2===target&&node2!==textRoot){return getTextBBoxes(node2,node2,pos,dx,dy);}
getPositionDetailsFor(node2,pos,dx,dy,boxes);}
return boxes;};var isNotEmptyBox=(box)=>box.x!==0||box.y!==0||box.width!==0||box.height!==0;var getPositionDetailsFor=(node2,pos,dx,dy,boxes)=>{if(node2.nodeType===node2.ELEMENT_NODE){const x2=parseFloat(node2.getAttribute("x"));const y2=parseFloat(node2.getAttribute("y"));pos.x=isNaN(x2)?pos.x:x2;pos.y=isNaN(y2)?pos.y:y2;const dx0=(node2.getAttribute("dx")||"").split(delimiter).filter((num)=>num!=="").map(parseFloat);const dy0=(node2.getAttribute("dy")||"").split(delimiter).filter((num)=>num!=="").map(parseFloat);dx.splice(0,dx0.length,...dx0);dy.splice(0,dy0.length,...dy0);}else{const data=node2.data;let j=0;const jl=data.length;const details=getFontDetails(node2);if(dy.length||dx.length){for(;j<jl;j++){boxes.push(textBBox(data.substr(j,1),pos.x,pos.y,details));pos.x+=dx.shift()||0;pos.y+=dy.shift()||0;if(!dy.length&&!dx.length)
break;}}
boxes.push(textBBox(data.substr(j),pos.x,pos.y,details));pos.x+=boxes[boxes.length-1].width;}};var getFontDetails=(node2)=>{if(node2.nodeType===node2.TEXT_NODE)
node2=node2.parentNode;let fontSize2=null;let fontFamily2=null;let textAnchor=null;let dominantBaseline=null;const textContentElements=["text","tspan","tref","textPath","altGlyph","g"];do{if(!fontSize2){fontSize2=node2.style.fontSize||node2.getAttribute("font-size");}
if(!fontFamily2){fontFamily2=node2.style.fontFamily||node2.getAttribute("font-family");}
if(!textAnchor){textAnchor=node2.style.textAnchor||node2.getAttribute("text-anchor");}
if(!dominantBaseline){dominantBaseline=node2.style.dominantBaseline||node2.getAttribute("dominant-baseline");}}while((node2=node2.parentNode)&&node2.nodeType===node2.ELEMENT_NODE&&textContentElements.includes(node2.nodeName));return{fontFamily:fontFamily2,fontSize:fontSize2,textAnchor:textAnchor||"start",dominantBaseline:dominantBaseline||"alphabetical"
};};function arrayToMatrix(a){return{a:a[0],b:a[1],c:a[2],d:a[3],e:a[4],f:a[5]};}
var SVGGraphicsElement=class _SVGGraphicsElement extends SVGElement{generateViewBoxMatrix(){if(!["marker","symbol","pattern","svg","view"].includes(this.nodeName)){return new SVGMatrix();}
let view=(this.getAttribute("viewBox")||"").split(delimiter).map(parseFloat).filter((el)=>!isNaN(el));const width2=parseFloat(this.getAttribute("width"))||0;const height=parseFloat(this.getAttribute("height"))||0;const x2=parseFloat(this.getAttribute("x"))||0;const y2=parseFloat(this.getAttribute("y"))||0;if(!width2||!height){return new SVGMatrix().translate(x2,y2);}
if(view.length!==4){view=[0,0,width2,height];}
return new SVGMatrix().translate(x2,y2).scale(width2/view[2],height/view[3]).translate(-view[0],-view[1]);}
getBBox(){return getSegments2(this).bbox();}
getBoundingClientRect(){let m=this.matrixify();if(this.parentNode&&this.parentNode.nodeName!=="#document"){m=this.parentNode.getScreenCTM().multiply(m);}
return getSegments2(this,false,true).transform(m).bbox();}
getCTM(){let m=this.matrixify();let node2=this;while(node2=node2.parentNode){if(["svg","symbol","image","pattern","marker"].indexOf(node2.nodeName)>-1)
break;m=m.multiply(node2.matrixify());if(node2.nodeName==="#document")
return this.getScreenCTM();}
return node2.generateViewBoxMatrix().multiply(m);}
getInnerMatrix(){let m=this.matrixify();if(["svg","symbol","image","pattern","marker"].indexOf(this.nodeName)>-1){m=this.generateViewBoxMatrix().multiply(m);}
return m;}
getScreenCTM(){const m=this.getInnerMatrix();if(this.parentNode&&this.parentNode instanceof _SVGGraphicsElement){return this.parentNode.getScreenCTM().multiply(m);}
return m;}
matrixify(){const matrix=(this.getAttribute("transform")||"").trim().split(transforms).slice(0,-1).map(function(str3){const kv=str3.trim().split("(");return[kv[0].trim(),kv[1].split(delimiter).map(function(str4){return parseFloat(str4.trim());})];}).reduce(function(matrix2,transform7){if(transform7[0]==="matrix")
return matrix2.multiply(arrayToMatrix(transform7[1]));return matrix2[transform7[0]].apply(matrix2,transform7[1]);},new SVGMatrix());return matrix;}
get transform(){throw new Error("Not implemented");}};var SVGSVGElement=class extends SVGGraphicsElement{createSVGMatrix(){return new SVGMatrix();}
createSVGPoint(){return new SVGPoint();}
createSVGRect(){return new Box();}};var SVGPathElement=class extends SVGGraphicsElement{getPointAtLength(len2){return pointAtLength(this.getAttribute("d"),len2);}
getTotalLength(){return length2(this.getAttribute("d"));}};var unitTypes={SVG_LENGTHTYPE_UNKNOWN:0,SVG_LENGTHTYPE_NUMBER:1,SVG_LENGTHTYPE_PERCENTAGE:2,SVG_LENGTHTYPE_EMS:3,SVG_LENGTHTYPE_EXS:4,SVG_LENGTHTYPE_PX:5,SVG_LENGTHTYPE_CM:6,SVG_LENGTHTYPE_MM:7,SVG_LENGTHTYPE_IN:8,SVG_LENGTHTYPE_PT:9,SVG_LENGTHTYPE_PC:10};var unitByString={[""]:unitTypes.SVG_LENGTHTYPE_NUMBER,["%"]:unitTypes.SVG_LENGTHTYPE_PERCENTAGE,["em"]:unitTypes.SVG_LENGTHTYPE_EMS,["ex"]:unitTypes.SVG_LENGTHTYPE_EXS,["px"]:unitTypes.SVG_LENGTHTYPE_PX,["cm"]:unitTypes.SVG_LENGTHTYPE_CM,["mm"]:unitTypes.SVG_LENGTHTYPE_MM,["in"]:unitTypes.SVG_LENGTHTYPE_IN,["pt"]:unitTypes.SVG_LENGTHTYPE_PT,["pc"]:unitTypes.SVG_LENGTHTYPE_PC};var unitStringByConstant=new Map(Object.entries(unitByString).map(([unitString2,unitConstant])=>[unitConstant,unitString2]));var unitFactors=new Map([[unitTypes.SVG_LENGTHTYPE_NUMBER,1],[unitTypes.SVG_LENGTHTYPE_PERCENTAGE,NaN],[unitTypes.SVG_LENGTHTYPE_EMS,NaN],[unitTypes.SVG_LENGTHTYPE_EXS,NaN],[unitTypes.SVG_LENGTHTYPE_PX,1],[unitTypes.SVG_LENGTHTYPE_CM,6],[unitTypes.SVG_LENGTHTYPE_MM,96/25.4],[unitTypes.SVG_LENGTHTYPE_IN,96],[unitTypes.SVG_LENGTHTYPE_PT,4/3],[unitTypes.SVG_LENGTHTYPE_PC,16]]);var valuePattern=/^\s*([+-]?[0-9]*[.]?[0-9]+(?:e[+-]?[0-9]+)?)(em|ex|px|in|cm|mm|pt|pc|%)?\s*$/i;var SVGLength=class{element;attributeName;constructor(element,attributeName){this.element=element;this.attributeName=attributeName;}
get unitType(){return parseValue(this.element.getAttribute(this.attributeName))[1];}
get value(){const[value,unit2]=parseValue(this.element.getAttribute(this.attributeName));return value*getUnitFactor(unit2);}
set value(value){const unitFactor=getUnitFactor(this.unitType);this.element.setAttribute(this.attributeName,value/unitFactor+unitString(this));}
get valueInSpecifiedUnits(){return parseValue(this.element.getAttribute(this.attributeName))[0];}
set valueInSpecifiedUnits(value){this.element.setAttribute(this.attributeName,value+unitString(this));}
get valueAsString(){return this.valueInSpecifiedUnits+unitString(this);}
set valueAsString(valueString){const[value,unit2]=parseValue(valueString,false);const unitString2=unitStringByConstant.get(unit2)||"";this.element.setAttribute(this.attributeName,value+unitString2);}};function parseValue(valueString,fallback=true){const[,rawValue,rawUnit]=(valueString||"").match(valuePattern)||[];const unit2=unitByString[(rawUnit||"").toLowerCase()];if(rawValue!==void 0&&unit2!==void 0){return[parseFloat(rawValue),unit2];}
if(fallback){return[0,unitTypes.SVG_LENGTHTYPE_NUMBER];}
throw new Error("An invalid or illegal string was specified");}
function getUnitFactor(unit2){const unitFactor=unitFactors.get(unit2);if(unitFactor===void 0){throw new Error(unitFactor+" is not a known unit constant");}
if(isNaN(unitFactor)){throw new Error(`Unit ${unitStringByConstant.get(unit2)}is not supported`);}
return unitFactor;}
function unitString(svgLength){return unitStringByConstant.get(svgLength.unitType)||"";}
extendStatic(SVGLength,unitTypes);var SVGAnimatedLength=class{baseVal;constructor(element,attributeName){this.baseVal=new SVGLength(element,attributeName);}
get animVal(){throw new Error("animVal is not implemented");}};var SVGTextContentElement=class extends SVGGraphicsElement{textWidth=new SVGAnimatedLength(this,"textWidth");getComputedTextLength(){return this.getBBox().width;}};var DocumentType=class extends Node{constructor(name,props){super(name,props);this.nodeType=Node.DOCUMENT_TYPE_NODE;this.name=name;const{publicId,systemId}=props;this.publicId=publicId||"";this.systemId=systemId||"";}};mixin(ChildNode,DocumentType);var SVGRectElement=class extends SVGGraphicsElement{x=new SVGAnimatedLength(this,"x");y=new SVGAnimatedLength(this,"y");width=new SVGAnimatedLength(this,"width");height=new SVGAnimatedLength(this,"height");rx=new SVGAnimatedLength(this,"rx");ry=new SVGAnimatedLength(this,"ry");};var SVGCircleElement=class extends SVGGraphicsElement{cx=new SVGAnimatedLength(this,"cx");cy=new SVGAnimatedLength(this,"cy");r=new SVGAnimatedLength(this,"r");};var SVGLineElement=class extends SVGGraphicsElement{x1=new SVGAnimatedLength(this,"x1");y1=new SVGAnimatedLength(this,"y1");x2=new SVGAnimatedLength(this,"x2");y2=new SVGAnimatedLength(this,"y2");};var SVGEllipseElement=class extends SVGGraphicsElement{cx=new SVGAnimatedLength(this,"cx");cy=new SVGAnimatedLength(this,"cy");rx=new SVGAnimatedLength(this,"rx");ry=new SVGAnimatedLength(this,"ry");};var SVGForeignObjectElement=class extends SVGGraphicsElement{x=new SVGAnimatedLength(this,"x");y=new SVGAnimatedLength(this,"y");width=new SVGAnimatedLength(this,"width");height=new SVGAnimatedLength(this,"height");};var SVGImageElement=class extends SVGGraphicsElement{x=new SVGAnimatedLength(this,"x");y=new SVGAnimatedLength(this,"y");width=new SVGAnimatedLength(this,"width");height=new SVGAnimatedLength(this,"height");};function getChildByTagName(parent,name){for(let child=parent.firstChild;child!=null;child=child.nextSibling){if(child.nodeType===Node.ELEMENT_NODE&&child.nodeName===name){return child;}}
return null;}
var getSVGElementForName=(name)=>{switch(name.toLowerCase()){case"svg":return SVGSVGElement;case"path":return SVGPathElement;case"circle":return SVGCircleElement;case"ellipse":return SVGEllipseElement;case"line":return SVGLineElement;case"rect":return SVGRectElement;case"foreignObject":return SVGForeignObjectElement;case"image":return SVGImageElement;case"text":case"tspan":case"tref":case"altglyph":case"textpath":return SVGTextContentElement;default:return SVGGraphicsElement;}};var getHTMLElementForName=(name)=>{switch(name.toLowerCase()){case"img":return HTMLImageElement;case"link":return HTMLLinkElement;case"script":return HTMLScriptElement;default:return HTMLElement2;}};var getElementForNamespace=(ns,name)=>{switch(ns){case svg:return getSVGElementForName(name);case html:case null:case"":default:return getHTMLElementForName(name);}};var supportedFeatures={xml:{"":true,"1.0":true,"2.0":true},core:{"":true,"2.0":true},html:{"":true,"1.0":true,"2.0":true},xhtml:{"":true,"1.0":true,"2.0":true}
};var DOMImplementation={hasFeature(feature,version){const f=supportedFeatures[(feature||"").toLowerCase()];return f&&f[version||""]||false;},createDocumentType(qualifiedName,publicId,systemId){return new DocumentType(qualifiedName,{publicId,systemId,ownerDocument:this});},createDocument(namespace,qualifiedName,doctype){const doc=new Document(namespace);if(doctype){if(doctype.ownerDocument){throw new Error("the object is in the wrong Document, a call to importNode is required");}
doctype.ownerDocument=doc;doc.appendChild(doctype);}
if(qualifiedName){doc.appendChild(doc.createElementNS(namespace,qualifiedName));}
return doc;},createHTMLDocument(titleText=""){const d=new Document(html);const root3=d.createElement("html");const head2=d.createElement("head");const title=d.createElement("title");title.appendChild(d.createTextNode(titleText));head2.appendChild(title);root3.appendChild(head2);root3.appendChild(d.createElement("body"));d.appendChild(root3);return d;}};var Document=class extends Node{constructor(ns){super("#document",{},ns);this.nodeType=Node.DOCUMENT_NODE;this.implementation=DOMImplementation;this.defaultView=null;}
createAttribute(localName){if(this.namespaceURI===html){localName=localName.toLowerCase();}
return this.createAttributeNS(null,localName,true);}
createAttributeNS(ns,qualifiedName,local=false){return new Attr(qualifiedName,{ownerDocument:this,local},ns);}
createComment(text){return new Comment("#comment",{nodeValue:text,ownerDocument:this});}
createDocumentFragment(name){return new DocumentFragment("#document-fragment",{ownerDocument:this});}
createElement(localName){return this.createElementNS(this.namespaceURI,localName,true);}
createElementNS(ns,qualifiedName,local=false){const Element4=getElementForNamespace(ns,qualifiedName);return new Element4(qualifiedName,{ownerDocument:this,local},ns);}
createTextNode(text){return new Text2("#text",{nodeValue:text,ownerDocument:this});}
get compatMode(){return"CSS1Compat";}
get body(){return getChildByTagName(this.documentElement,"BODY");}
get head(){return getChildByTagName(this.documentElement,"HEAD");}
get documentElement(){return this.lastChild;}};mixin(elementAccess,Document);mixin(ParentNode,Document);mixin(NonElementParentNode,Document);var Window=class extends EventTarget{constructor(){super();this.document=new Document();this.document.defaultView=this;this.self=this;const doc=this.document;this.Image=class{constructor(width2,height){const img=doc.createElement("img");if(width2!=null)
img.setAttribute("width",width2);if(height!=null)
img.setAttribute("height",height);return img;}};}
getComputedStyle(node2){return{getPropertyValue(attr){let value;let cur=node2;do{value=cur.style[attr]||cur.getAttribute(attr);}while(value==null&&(cur=cur.parentNode)&&cur.nodeType===1);return value||defaults_exports[camelCase(attr)]||null;}};}};var lastTime=0;var requestAnimationFrame2=(callback)=>{const now2=new globalThis.Date().getTime();const timeToCall=Math.max(0,16-(now2-lastTime));return globalThis.setTimeout(()=>{lastTime=now2+timeToCall;callback(lastTime);},timeToCall);};var nowOffset=globalThis.Date.now();var performance2={now:()=>Date.now()-nowOffset};var winProps={Window,Document,DocumentFragment,Node,EventTarget,Text:Text2,Attr,Element:Element3,CustomEvent,Event,HTMLElement:HTMLElement2,HTMLLinkElement,HTMLScriptElement,HTMLImageElement,SVGMatrix,SVGPoint,SVGElement,SVGSVGElement,SVGPathElement,SVGGraphicsElement,SVGTextContentElement,setTimeout:globalThis.setTimeout,clearTimeout:globalThis.clearTimeout,pageXOffset:0,pageYOffset:0,Date:globalThis.Date,requestAnimationFrame:requestAnimationFrame2,cancelAnimationFrame:globalThis.clearTimeout,performance:performance2};extend2(Window,winProps);var{createDocument,createHTMLDocument}=DOMImplementation;var createHTMLWindow=(title)=>{const window2=new Window();const document2=DOMImplementation.createHTMLDocument(title);window2.document=document2;document2.defaultView=window2;return window2;};var DEFAUT_BGS={light:"#FFFFFF",dark:"#282A36"};function renderPrepare(opts){const{code,backgroundColor,pintoraConfig}=opts;const window2=createHTMLWindow();const document2=window2.document;const container=document2.createElement("div");container.id="pintora-container";const global2=globalThis;global2.document=document2;return{container,pintorRender(renderOpts){let config2=pintoraStandalone.getConfig();if(pintoraConfig){config2=pintoraStandalone.configApi.gnernateNewConfig(pintoraConfig);}
const containerSize=opts.width?{width:opts.width}:void 0;if(opts.width){config2=pintoraStandalone.configApi.gnernateNewConfig({core:{useMaxWidth:true}});}
return new Promise((resolve,reject)=>{pintoraStandalone.renderTo(code,{container,renderer:renderOpts.renderer||"canvas",containerSize,enhanceGraphicIR(ir){if(!ir.bgColor){const themeVariables=config2.themeConfig.themeVariables||{};const newBgColor=backgroundColor||themeVariables.canvasBackground||(themeVariables.isDark?DEFAUT_BGS.dark:DEFAUT_BGS.light);ir.bgColor=newBgColor;}
return ir;},onRender(renderer){resolve(renderer);},onError(e){console.error("onError",e);reject(e);}});});}};}
function doRender(opts){const{pintorRender}=renderPrepare(opts);function renderToSvg(){return new Promise((resolve,reject)=>{pintorRender({renderer:"svg"}).then((renderer)=>{const rootElement=renderer.getRootElement();rootElement.setAttribute("xmlns","http://www.w3.org/2000/svg");resolve(rootElement.outerHTML);}).catch(reject);});}
return renderToSvg();}
var SourceCodePro_Medium_default=__toBinary("");var import_buffer=__toESM(require_buffer());var b=import_buffer.Buffer.from(SourceCodePro_Medium_default);var defaultFont=$d636bc798e7178db$export$185802fd694ee1f5(b);var fonts2={"sans-serif":defaultFont,"Source Code Pro":defaultFont};var FontkitCalculator=class{name="fontkit";getLineMetric(text,fontConfig){const fontSize2=fontConfig?.fontSize||14;const fontName=fontConfig?.fontFamily||"sans-serif";const font=fonts2[fontName]||defaultFont;const glyph=font.layout(text);const sizeUnit=fontSize2/font.unitsPerEm;const width2=glyph.bbox.width*sizeUnit;const glyphActualMaxHeight=glyph.glyphs.reduce((last4,curr)=>Math.max(last4,curr.cbox.height),0)*sizeUnit;const height=glyphActualMaxHeight;const actualBoundingBoxAscent=height;const actualBoundingBoxDescent=0;return{actualBoundingBoxAscent,actualBoundingBoxDescent,width:width2};}
calculateTextDimensions(text,font){const lines=text.split("\n");let width2=0;let height=0;const fontSize2=font?.fontSize||14;lines.forEach((line,i2)=>{const lineMetric=this.getLineMetric(line,font);const w=lineMetric.width;width2=Math.max(w,width2);let lineHeight=fontSize2;if("actualBoundingBoxDescent"in lineMetric){lineHeight=lineMetric.actualBoundingBoxAscent+lineMetric.actualBoundingBoxDescent;}
height+=lineHeight;});return{width:width2,height};}};textMetrics.setImpl(new FontkitCalculator());async function render2(opts){const svg2=await doRender({...opts,code:opts.code});const pintoraOutput={type:"svg",data:svg2};return pintoraOutput;}
var runtime_default=pintoraStandalone;/*! Bundled license information:

shallow-clone/index.js:
  (*!
   * shallow-clone <https://github.com/jonschlinkert/shallow-clone>
   *
   * Copyright (c) 2015-present, Jon Schlinkert.
   * Released under the MIT License.
   *)

isobject/index.js:
  (*!
   * isobject <https://github.com/jonschlinkert/isobject>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   *)

is-plain-object/index.js:
  (*!
   * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   *)

punycode/punycode.js:
  (*! https://mths.be/punycode v1.4.1 by @mathias *)

ieee754/index.js:
  (*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> *)

buffer/index.js:
  (*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   *)

safe-buffer/index.js:
  (*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> *)

sax/lib/sax.js:
  (*! http://mths.be/fromcodepoint v0.1.0 by @mathias *)
*/
var document=new Document()
var csrc=document.createElement("div")
csrc.dataset=[];var rslt=document.createElement("svg")
csrc.dataset['renderer']
function PintoraRender(InputString){console=new ConsoleStub()
csrc.innerText=InputString
pintoraStandalone.renderContentOf(csrc,{resultContainer:rslt})
if(rslt.innerHTML===""){errorString='\n '+String(console.warnHistory.slice(-1))
throw new Error(errorString);}
rslt.firstChild.setAttribute("xmlns","http://www.w3.org/2000/svg")
return rslt.innerHTML;}