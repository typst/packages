class ConsoleStub{constructor(){this.logHistory=[],this.errorHistory=[],this.warnHistory=[]}log(...e){const t=e.join(" ");this.logHistory.push(t)}error(...e){const t=e.join(" ");this.errorHistory.push(t)}warn(...e){const t=e.join(" ");this.warnHistory.push(t)}}var console=new ConsoleStub;!function(e){"use strict";"undefined"!=typeof module&&module.exports&&(module.exports=e),e["encoding-indexes"]={big5:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,17392,19506,17923,17830,17784,160359,19831,17843,162993,19682,163013,15253,18230,18244,19527,19520,148159,144919,160594,159371,159954,19543,172881,18255,17882,19589,162924,19719,19108,18081,158499,29221,154196,137827,146950,147297,26189,22267,null,32149,22813,166841,15860,38708,162799,23515,138590,23204,13861,171696,23249,23479,23804,26478,34195,170309,29793,29853,14453,138579,145054,155681,16108,153822,15093,31484,40855,147809,166157,143850,133770,143966,17162,33924,40854,37935,18736,34323,22678,38730,37400,31184,31282,26208,27177,34973,29772,31685,26498,31276,21071,36934,13542,29636,155065,29894,40903,22451,18735,21580,16689,145038,22552,31346,162661,35727,18094,159368,16769,155033,31662,140476,40904,140481,140489,140492,40905,34052,144827,16564,40906,17633,175615,25281,28782,40907,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,12736,12737,12738,12739,12740,131340,12741,131281,131277,12742,12743,131275,139240,12744,131274,12745,12746,12747,12748,131342,12749,12750,256,193,461,192,274,201,282,200,332,211,465,210,null,7870,null,7872,202,257,225,462,224,593,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,null,7871,null,7873,234,609,9178,9179,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,172969,135493,null,25866,null,null,20029,28381,40270,37343,null,null,161589,25745,20250,20264,20392,20822,20852,20892,20964,21153,21160,21307,21326,21457,21464,22242,22768,22788,22791,22834,22836,23398,23454,23455,23706,24198,24635,25993,26622,26628,26725,27982,28860,30005,32420,32428,32442,32455,32463,32479,32518,32567,33402,33487,33647,35270,35774,35810,36710,36711,36718,29713,31996,32205,26950,31433,21031,null,null,null,null,37260,30904,37214,32956,null,36107,33014,133607,null,null,32927,40647,19661,40393,40460,19518,171510,159758,40458,172339,13761,null,28314,33342,29977,null,18705,39532,39567,40857,31111,164972,138698,132560,142054,20004,20097,20096,20103,20159,20203,20279,13388,20413,15944,20483,20616,13437,13459,13477,20870,22789,20955,20988,20997,20105,21113,21136,21287,13767,21417,13649,21424,13651,21442,21539,13677,13682,13953,21651,21667,21684,21689,21712,21743,21784,21795,21800,13720,21823,13733,13759,21975,13765,163204,21797,null,134210,134421,151851,21904,142534,14828,131905,36422,150968,169189,16467,164030,30586,142392,14900,18389,164189,158194,151018,25821,134524,135092,134357,135412,25741,36478,134806,134155,135012,142505,164438,148691,null,134470,170573,164073,18420,151207,142530,39602,14951,169460,16365,13574,152263,169940,161992,142660,40302,38933,null,17369,155813,25780,21731,142668,142282,135287,14843,135279,157402,157462,162208,25834,151634,134211,36456,139681,166732,132913,null,18443,131497,16378,22643,142733,null,148936,132348,155799,134988,134550,21881,16571,17338,null,19124,141926,135325,33194,39157,134556,25465,14846,141173,36288,22177,25724,15939,null,173569,134665,142031,142537,null,135368,145858,14738,14854,164507,13688,155209,139463,22098,134961,142514,169760,13500,27709,151099,null,null,161140,142987,139784,173659,167117,134778,134196,157724,32659,135375,141315,141625,13819,152035,134796,135053,134826,16275,134960,134471,135503,134732,null,134827,134057,134472,135360,135485,16377,140950,25650,135085,144372,161337,142286,134526,134527,142417,142421,14872,134808,135367,134958,173618,158544,167122,167321,167114,38314,21708,33476,21945,null,171715,39974,39606,161630,142830,28992,33133,33004,23580,157042,33076,14231,21343,164029,37302,134906,134671,134775,134907,13789,151019,13833,134358,22191,141237,135369,134672,134776,135288,135496,164359,136277,134777,151120,142756,23124,135197,135198,135413,135414,22428,134673,161428,164557,135093,134779,151934,14083,135094,135552,152280,172733,149978,137274,147831,164476,22681,21096,13850,153405,31666,23400,18432,19244,40743,18919,39967,39821,154484,143677,22011,13810,22153,20008,22786,138177,194680,38737,131206,20059,20155,13630,23587,24401,24516,14586,25164,25909,27514,27701,27706,28780,29227,20012,29357,149737,32594,31035,31993,32595,156266,13505,null,156491,32770,32896,157202,158033,21341,34916,35265,161970,35744,36125,38021,38264,38271,38376,167439,38886,39029,39118,39134,39267,17e4,40060,40479,40644,27503,63751,20023,131207,38429,25143,38050,null,20539,28158,171123,40870,15817,34959,147790,28791,23797,19232,152013,13657,154928,24866,166450,36775,37366,29073,26393,29626,144001,172295,15499,137600,19216,30948,29698,20910,165647,16393,27235,172730,16931,34319,133743,31274,170311,166634,38741,28749,21284,139390,37876,30425,166371,40871,30685,20131,20464,20668,20015,20247,40872,21556,32139,22674,22736,138678,24210,24217,24514,141074,25995,144377,26905,27203,146531,27903,null,29184,148741,29580,16091,150035,23317,29881,35715,154788,153237,31379,31724,31939,32364,33528,34199,40873,34960,40874,36537,40875,36815,34143,39392,37409,40876,167353,136255,16497,17058,23066,null,null,null,39016,26475,17014,22333,null,34262,149883,33471,160013,19585,159092,23931,158485,159678,40877,40878,23446,40879,26343,32347,28247,31178,15752,17603,143958,141206,17306,17718,null,23765,146202,35577,23672,15634,144721,23928,40882,29015,17752,147692,138787,19575,14712,13386,131492,158785,35532,20404,131641,22975,33132,38998,170234,24379,134047,null,139713,166253,16642,18107,168057,16135,40883,172469,16632,14294,18167,158790,16764,165554,160767,17773,14548,152730,17761,17691,19849,19579,19830,17898,16328,150287,13921,17630,17597,16877,23870,23880,23894,15868,14351,23972,23993,14368,14392,24130,24253,24357,24451,14600,14612,14655,14669,24791,24893,23781,14729,25015,25017,25039,14776,25132,25232,25317,25368,14840,22193,14851,25570,25595,25607,25690,14923,25792,23829,22049,40863,14999,25990,15037,26111,26195,15090,26258,15138,26390,15170,26532,26624,15192,26698,26756,15218,15217,15227,26889,26947,29276,26980,27039,27013,15292,27094,15325,27237,27252,27249,27266,15340,27289,15346,27307,27317,27348,27382,27521,27585,27626,27765,27818,15563,27906,27910,27942,28033,15599,28068,28081,28181,28184,28201,28294,166336,28347,28386,28378,40831,28392,28393,28452,28468,15686,147265,28545,28606,15722,15733,29111,23705,15754,28716,15761,28752,28756,28783,28799,28809,131877,17345,13809,134872,147159,22462,159443,28990,153568,13902,27042,166889,23412,31305,153825,169177,31333,31357,154028,31419,31408,31426,31427,29137,156813,16842,31450,31453,31466,16879,21682,154625,31499,31573,31529,152334,154878,31650,31599,33692,154548,158847,31696,33825,31634,31672,154912,15789,154725,33938,31738,31750,31797,154817,31812,31875,149634,31910,26237,148856,31945,31943,31974,31860,31987,31989,31950,32359,17693,159300,32093,159446,29837,32137,32171,28981,32179,32210,147543,155689,32228,15635,32245,137209,32229,164717,32285,155937,155994,32366,32402,17195,37996,32295,32576,32577,32583,31030,156368,39393,32663,156497,32675,136801,131176,17756,145254,17667,164666,32762,156809,32773,32776,32797,32808,32815,172167,158915,32827,32828,32865,141076,18825,157222,146915,157416,26405,32935,166472,33031,33050,22704,141046,27775,156824,151480,25831,136330,33304,137310,27219,150117,150165,17530,33321,133901,158290,146814,20473,136445,34018,33634,158474,149927,144688,137075,146936,33450,26907,194964,16859,34123,33488,33562,134678,137140,14017,143741,144730,33403,33506,33560,147083,159139,158469,158615,144846,15807,33565,21996,33669,17675,159141,33708,33729,33747,13438,159444,27223,34138,13462,159298,143087,33880,154596,33905,15827,17636,27303,33866,146613,31064,33960,158614,159351,159299,34014,33807,33681,17568,33939,34020,154769,16960,154816,17731,34100,23282,159385,17703,34163,17686,26559,34326,165413,165435,34241,159880,34306,136578,159949,194994,17770,34344,13896,137378,21495,160666,34430,34673,172280,34798,142375,34737,34778,34831,22113,34412,26710,17935,34885,34886,161248,146873,161252,34910,34972,18011,34996,34997,25537,35013,30583,161551,35207,35210,35238,35241,35239,35260,166437,35303,162084,162493,35484,30611,37374,35472,162393,31465,162618,147343,18195,162616,29052,35596,35615,152624,152933,35647,35660,35661,35497,150138,35728,35739,35503,136927,17941,34895,35995,163156,163215,195028,14117,163155,36054,163224,163261,36114,36099,137488,36059,28764,36113,150729,16080,36215,36265,163842,135188,149898,15228,164284,160012,31463,36525,36534,36547,37588,36633,36653,164709,164882,36773,37635,172703,133712,36787,18730,166366,165181,146875,24312,143970,36857,172052,165564,165121,140069,14720,159447,36919,165180,162494,36961,165228,165387,37032,165651,37060,165606,37038,37117,37223,15088,37289,37316,31916,166195,138889,37390,27807,37441,37474,153017,37561,166598,146587,166668,153051,134449,37676,37739,166625,166891,28815,23235,166626,166629,18789,37444,166892,166969,166911,37747,37979,36540,38277,38310,37926,38304,28662,17081,140922,165592,135804,146990,18911,27676,38523,38550,16748,38563,159445,25050,38582,30965,166624,38589,21452,18849,158904,131700,156688,168111,168165,150225,137493,144138,38705,34370,38710,18959,17725,17797,150249,28789,23361,38683,38748,168405,38743,23370,168427,38751,37925,20688,143543,143548,38793,38815,38833,38846,38848,38866,38880,152684,38894,29724,169011,38911,38901,168989,162170,19153,38964,38963,38987,39014,15118,160117,15697,132656,147804,153350,39114,39095,39112,39111,19199,159015,136915,21936,39137,39142,39148,37752,39225,150057,19314,170071,170245,39413,39436,39483,39440,39512,153381,14020,168113,170965,39648,39650,170757,39668,19470,39700,39725,165376,20532,39732,158120,14531,143485,39760,39744,171326,23109,137315,39822,148043,39938,39935,39948,171624,40404,171959,172434,172459,172257,172323,172511,40318,40323,172340,40462,26760,40388,139611,172435,172576,137531,172595,40249,172217,172724,40592,40597,40606,40610,19764,40618,40623,148324,40641,15200,14821,15645,20274,14270,166955,40706,40712,19350,37924,159138,40727,40726,40761,22175,22154,40773,39352,168075,38898,33919,40802,40809,31452,40846,29206,19390,149877,149947,29047,150008,148296,150097,29598,166874,137466,31135,166270,167478,37737,37875,166468,37612,37761,37835,166252,148665,29207,16107,30578,31299,28880,148595,148472,29054,137199,28835,137406,144793,16071,137349,152623,137208,14114,136955,137273,14049,137076,137425,155467,14115,136896,22363,150053,136190,135848,136134,136374,34051,145062,34051,33877,149908,160101,146993,152924,147195,159826,17652,145134,170397,159526,26617,14131,15381,15847,22636,137506,26640,16471,145215,147681,147595,147727,158753,21707,22174,157361,22162,135135,134056,134669,37830,166675,37788,20216,20779,14361,148534,20156,132197,131967,20299,20362,153169,23144,131499,132043,14745,131850,132116,13365,20265,131776,167603,131701,35546,131596,20120,20685,20749,20386,20227,150030,147082,20290,20526,20588,20609,20428,20453,20568,20732,20825,20827,20829,20830,28278,144789,147001,147135,28018,137348,147081,20904,20931,132576,17629,132259,132242,132241,36218,166556,132878,21081,21156,133235,21217,37742,18042,29068,148364,134176,149932,135396,27089,134685,29817,16094,29849,29716,29782,29592,19342,150204,147597,21456,13700,29199,147657,21940,131909,21709,134086,22301,37469,38644,37734,22493,22413,22399,13886,22731,23193,166470,136954,137071,136976,23084,22968,37519,23166,23247,23058,153926,137715,137313,148117,14069,27909,29763,23073,155267,23169,166871,132115,37856,29836,135939,28933,18802,37896,166395,37821,14240,23582,23710,24158,24136,137622,137596,146158,24269,23375,137475,137476,14081,137376,14045,136958,14035,33066,166471,138682,144498,166312,24332,24334,137511,137131,23147,137019,23364,34324,161277,34912,24702,141408,140843,24539,16056,140719,140734,168072,159603,25024,131134,131142,140827,24985,24984,24693,142491,142599,149204,168269,25713,149093,142186,14889,142114,144464,170218,142968,25399,173147,25782,25393,25553,149987,142695,25252,142497,25659,25963,26994,15348,143502,144045,149897,144043,21773,144096,137433,169023,26318,144009,143795,15072,16784,152964,166690,152975,136956,152923,152613,30958,143619,137258,143924,13412,143887,143746,148169,26254,159012,26219,19347,26160,161904,138731,26211,144082,144097,26142,153714,14545,145466,145340,15257,145314,144382,29904,15254,26511,149034,26806,26654,15300,27326,14435,145365,148615,27187,27218,27337,27397,137490,25873,26776,27212,15319,27258,27479,147392,146586,37792,37618,166890,166603,37513,163870,166364,37991,28069,28427,149996,28007,147327,15759,28164,147516,23101,28170,22599,27940,30786,28987,148250,148086,28913,29264,29319,29332,149391,149285,20857,150180,132587,29818,147192,144991,150090,149783,155617,16134,16049,150239,166947,147253,24743,16115,29900,29756,37767,29751,17567,159210,17745,30083,16227,150745,150790,16216,30037,30323,173510,15129,29800,166604,149931,149902,15099,15821,150094,16127,149957,149747,37370,22322,37698,166627,137316,20703,152097,152039,30584,143922,30478,30479,30587,149143,145281,14942,149744,29752,29851,16063,150202,150215,16584,150166,156078,37639,152961,30750,30861,30856,30930,29648,31065,161601,153315,16654,31131,33942,31141,27181,147194,31290,31220,16750,136934,16690,37429,31217,134476,149900,131737,146874,137070,13719,21867,13680,13994,131540,134157,31458,23129,141045,154287,154268,23053,131675,30960,23082,154566,31486,16889,31837,31853,16913,154547,155324,155302,31949,150009,137136,31886,31868,31918,27314,32220,32263,32211,32590,156257,155996,162632,32151,155266,17002,158581,133398,26582,131150,144847,22468,156690,156664,149858,32733,31527,133164,154345,154947,31500,155150,39398,34373,39523,27164,144447,14818,150007,157101,39455,157088,33920,160039,158929,17642,33079,17410,32966,33033,33090,157620,39107,158274,33378,33381,158289,33875,159143,34320,160283,23174,16767,137280,23339,137377,23268,137432,34464,195004,146831,34861,160802,23042,34926,20293,34951,35007,35046,35173,35149,153219,35156,161669,161668,166901,166873,166812,166393,16045,33955,18165,18127,14322,35389,35356,169032,24397,37419,148100,26068,28969,28868,137285,40301,35999,36073,163292,22938,30659,23024,17262,14036,36394,36519,150537,36656,36682,17140,27736,28603,140065,18587,28537,28299,137178,39913,14005,149807,37051,37015,21873,18694,37307,37892,166475,16482,166652,37927,166941,166971,34021,35371,38297,38311,38295,38294,167220,29765,16066,149759,150082,148458,16103,143909,38543,167655,167526,167525,16076,149997,150136,147438,29714,29803,16124,38721,168112,26695,18973,168083,153567,38749,37736,166281,166950,166703,156606,37562,23313,35689,18748,29689,147995,38811,38769,39224,134950,24001,166853,150194,38943,169178,37622,169431,37349,17600,166736,150119,166756,39132,166469,16128,37418,18725,33812,39227,39245,162566,15869,39323,19311,39338,39516,166757,153800,27279,39457,23294,39471,170225,19344,170312,39356,19389,19351,37757,22642,135938,22562,149944,136424,30788,141087,146872,26821,15741,37976,14631,24912,141185,141675,24839,40015,40019,40059,39989,39952,39807,39887,171565,39839,172533,172286,40225,19630,147716,40472,19632,40204,172468,172269,172275,170287,40357,33981,159250,159711,158594,34300,17715,159140,159364,159216,33824,34286,159232,145367,155748,31202,144796,144960,18733,149982,15714,37851,37566,37704,131775,30905,37495,37965,20452,13376,36964,152925,30781,30804,30902,30795,137047,143817,149825,13978,20338,28634,28633,28702,28702,21524,147893,22459,22771,22410,40214,22487,28980,13487,147884,29163,158784,151447,23336,137141,166473,24844,23246,23051,17084,148616,14124,19323,166396,37819,37816,137430,134941,33906,158912,136211,148218,142374,148417,22932,146871,157505,32168,155995,155812,149945,149899,166394,37605,29666,16105,29876,166755,137375,16097,150195,27352,29683,29691,16086,150078,150164,137177,150118,132007,136228,149989,29768,149782,28837,149878,37508,29670,37727,132350,37681,166606,166422,37766,166887,153045,18741,166530,29035,149827,134399,22180,132634,134123,134328,21762,31172,137210,32254,136898,150096,137298,17710,37889,14090,166592,149933,22960,137407,137347,160900,23201,14050,146779,14e3,37471,23161,166529,137314,37748,15565,133812,19094,14730,20724,15721,15692,136092,29045,17147,164376,28175,168164,17643,27991,163407,28775,27823,15574,147437,146989,28162,28428,15727,132085,30033,14012,13512,18048,16090,18545,22980,37486,18750,36673,166940,158656,22546,22472,14038,136274,28926,148322,150129,143331,135856,140221,26809,26983,136088,144613,162804,145119,166531,145366,144378,150687,27162,145069,158903,33854,17631,17614,159014,159057,158850,159710,28439,160009,33597,137018,33773,158848,159827,137179,22921,23170,137139,23137,23153,137477,147964,14125,23023,137020,14023,29070,37776,26266,148133,23150,23083,148115,27179,147193,161590,148571,148170,28957,148057,166369,20400,159016,23746,148686,163405,148413,27148,148054,135940,28838,28979,148457,15781,27871,194597,150095,32357,23019,23855,15859,24412,150109,137183,32164,33830,21637,146170,144128,131604,22398,133333,132633,16357,139166,172726,28675,168283,23920,29583,31955,166489,168992,20424,32743,29389,29456,162548,29496,29497,153334,29505,29512,16041,162584,36972,29173,149746,29665,33270,16074,30476,16081,27810,22269,29721,29726,29727,16098,16112,16116,16122,29907,16142,16211,30018,30061,30066,30093,16252,30152,30172,16320,30285,16343,30324,16348,30330,151388,29064,22051,35200,22633,16413,30531,16441,26465,16453,13787,30616,16490,16495,23646,30654,30667,22770,30744,28857,30748,16552,30777,30791,30801,30822,33864,152885,31027,26627,31026,16643,16649,31121,31129,36795,31238,36796,16743,31377,16818,31420,33401,16836,31439,31451,16847,20001,31586,31596,31611,31762,31771,16992,17018,31867,31900,17036,31928,17044,31981,36755,28864,134351,32207,32212,32208,32253,32686,32692,29343,17303,32800,32805,31545,32814,32817,32852,15820,22452,28832,32951,33001,17389,33036,29482,33038,33042,30048,33044,17409,15161,33110,33113,33114,17427,22586,33148,33156,17445,33171,17453,33189,22511,33217,33252,33364,17551,33446,33398,33482,33496,33535,17584,33623,38505,27018,33797,28917,33892,24803,33928,17668,33982,34017,34040,34064,34104,34130,17723,34159,34160,34272,17783,34418,34450,34482,34543,38469,34699,17926,17943,34990,35071,35108,35143,35217,162151,35369,35384,35476,35508,35921,36052,36082,36124,18328,22623,36291,18413,20206,36410,21976,22356,36465,22005,36528,18487,36558,36578,36580,36589,36594,36791,36801,36810,36812,36915,39364,18605,39136,37395,18718,37416,37464,37483,37553,37550,37567,37603,37611,37619,37620,37629,37699,37764,37805,18757,18769,40639,37911,21249,37917,37933,37950,18794,37972,38009,38189,38306,18855,38388,38451,18917,26528,18980,38720,18997,38834,38850,22100,19172,24808,39097,19225,39153,22596,39182,39193,20916,39196,39223,39234,39261,39266,19312,39365,19357,39484,39695,31363,39785,39809,39901,39921,39924,19565,39968,14191,138178,40265,39994,40702,22096,40339,40381,40384,40444,38134,36790,40571,40620,40625,40637,40646,38108,40674,40689,40696,31432,40772,131220,131767,132e3,26906,38083,22956,132311,22592,38081,14265,132565,132629,132726,136890,22359,29043,133826,133837,134079,21610,194619,134091,21662,134139,134203,134227,134245,134268,24807,134285,22138,134325,134365,134381,134511,134578,134600,26965,39983,34725,134660,134670,134871,135056,134957,134771,23584,135100,24075,135260,135247,135286,26398,135291,135304,135318,13895,135359,135379,135471,135483,21348,33965,135907,136053,135990,35713,136567,136729,137155,137159,20088,28859,137261,137578,137773,137797,138282,138352,138412,138952,25283,138965,139029,29080,26709,139333,27113,14024,139900,140247,140282,141098,141425,141647,33533,141671,141715,142037,35237,142056,36768,142094,38840,142143,38983,39613,142412,null,142472,142519,154600,142600,142610,142775,142741,142914,143220,143308,143411,143462,144159,144350,24497,26184,26303,162425,144743,144883,29185,149946,30679,144922,145174,32391,131910,22709,26382,26904,146087,161367,155618,146961,147129,161278,139418,18640,19128,147737,166554,148206,148237,147515,148276,148374,150085,132554,20946,132625,22943,138920,15294,146687,148484,148694,22408,149108,14747,149295,165352,170441,14178,139715,35678,166734,39382,149522,149755,150037,29193,150208,134264,22885,151205,151430,132985,36570,151596,21135,22335,29041,152217,152601,147274,150183,21948,152646,152686,158546,37332,13427,152895,161330,152926,18200,152930,152934,153543,149823,153693,20582,13563,144332,24798,153859,18300,166216,154286,154505,154630,138640,22433,29009,28598,155906,162834,36950,156082,151450,35682,156674,156746,23899,158711,36662,156804,137500,35562,150006,156808,147439,156946,19392,157119,157365,141083,37989,153569,24981,23079,194765,20411,22201,148769,157436,20074,149812,38486,28047,158909,13848,35191,157593,157806,156689,157790,29151,157895,31554,168128,133649,157990,37124,158009,31301,40432,158202,39462,158253,13919,156777,131105,31107,158260,158555,23852,144665,33743,158621,18128,158884,30011,34917,159150,22710,14108,140685,159819,160205,15444,160384,160389,37505,139642,160395,37680,160486,149968,27705,38047,160848,134904,34855,35061,141606,164979,137137,28344,150058,137248,14756,14009,23568,31203,17727,26294,171181,170148,35139,161740,161880,22230,16607,136714,14753,145199,164072,136133,29101,33638,162269,168360,23143,19639,159919,166315,162301,162314,162571,163174,147834,31555,31102,163849,28597,172767,27139,164632,21410,159239,37823,26678,38749,164207,163875,158133,136173,143919,163912,23941,166960,163971,22293,38947,166217,23979,149896,26046,27093,21458,150181,147329,15377,26422,163984,164084,164142,139169,164175,164233,164271,164378,164614,164655,164746,13770,164968,165546,18682,25574,166230,30728,37461,166328,17394,166375,17375,166376,166726,166868,23032,166921,36619,167877,168172,31569,168208,168252,15863,168286,150218,36816,29327,22155,169191,169449,169392,169400,169778,170193,170313,170346,170435,170536,170766,171354,171419,32415,171768,171811,19620,38215,172691,29090,172799,19857,36882,173515,19868,134300,36798,21953,36794,140464,36793,150163,17673,32383,28502,27313,20202,13540,166700,161949,14138,36480,137205,163876,166764,166809,162366,157359,15851,161365,146615,153141,153942,20122,155265,156248,22207,134765,36366,23405,147080,150686,25566,25296,137206,137339,25904,22061,154698,21530,152337,15814,171416,19581,22050,22046,32585,155352,22901,146752,34672,19996,135146,134473,145082,33047,40286,36120,30267,40005,30286,30649,37701,21554,33096,33527,22053,33074,33816,32957,21994,31074,22083,21526,134813,13774,22021,22001,26353,164578,13869,30004,22e3,21946,21655,21874,134209,134294,24272,151880,134774,142434,134818,40619,32090,21982,135285,25245,38765,21652,36045,29174,37238,25596,25529,25598,21865,142147,40050,143027,20890,13535,134567,20903,21581,21790,21779,30310,36397,157834,30129,32950,34820,34694,35015,33206,33820,135361,17644,29444,149254,23440,33547,157843,22139,141044,163119,147875,163187,159440,160438,37232,135641,37384,146684,173737,134828,134905,29286,138402,18254,151490,163833,135147,16634,40029,25887,142752,18675,149472,171388,135148,134666,24674,161187,135149,null,155720,135559,29091,32398,40272,19994,19972,13687,23309,27826,21351,13996,14812,21373,13989,149016,22682,150382,33325,21579,22442,154261,133497,null,14930,140389,29556,171692,19721,39917,146686,171824,19547,151465,169374,171998,33884,146870,160434,157619,145184,25390,32037,147191,146988,14890,36872,21196,15988,13946,17897,132238,30272,23280,134838,30842,163630,22695,16575,22140,39819,23924,30292,173108,40581,19681,30201,14331,24857,143578,148466,null,22109,135849,22439,149859,171526,21044,159918,13741,27722,40316,31830,39737,22494,137068,23635,25811,169168,156469,160100,34477,134440,159010,150242,134513,null,20990,139023,23950,38659,138705,40577,36940,31519,39682,23761,31651,25192,25397,39679,31695,39722,31870,39726,31810,31878,39957,31740,39689,40727,39963,149822,40794,21875,23491,20477,40600,20466,21088,15878,21201,22375,20566,22967,24082,38856,40363,36700,21609,38836,39232,38842,21292,24880,26924,21466,39946,40194,19515,38465,27008,20646,30022,137069,39386,21107,null,37209,38529,37212,null,37201,167575,25471,159011,27338,22033,37262,30074,25221,132092,29519,31856,154657,146685,null,149785,30422,39837,20010,134356,33726,34882,null,23626,27072,20717,22394,21023,24053,20174,27697,131570,20281,21660,21722,21146,36226,13822,24332,13811,null,27474,37244,40869,39831,38958,39092,39610,40616,40580,29050,31508,null,27642,34840,32632,null,22048,173642,36471,40787,null,36308,36431,40476,36353,25218,164733,36392,36469,31443,150135,31294,30936,27882,35431,30215,166490,40742,27854,34774,30147,172722,30803,194624,36108,29410,29553,35629,29442,29937,36075,150203,34351,24506,34976,17591,null,137275,159237,null,35454,140571,null,24829,30311,39639,40260,37742,39823,34805,null,34831,36087,29484,38689,39856,13782,29362,19463,31825,39242,155993,24921,19460,40598,24957,null,22367,24943,25254,25145,25294,14940,25058,21418,144373,25444,26626,13778,23895,166850,36826,167481,null,20697,138566,30982,21298,38456,134971,16485,null,30718,null,31938,155418,31962,31277,32870,32867,32077,29957,29938,35220,33306,26380,32866,160902,32859,29936,33027,30500,35209,157644,30035,159441,34729,34766,33224,34700,35401,36013,35651,30507,29944,34010,13877,27058,36262,null,35241,29800,28089,34753,147473,29927,15835,29046,24740,24988,15569,29026,24695,null,32625,166701,29264,24809,19326,21024,15384,146631,155351,161366,152881,137540,135934,170243,159196,159917,23745,156077,166415,145015,131310,157766,151310,17762,23327,156492,40784,40614,156267,12288,65292,12289,12290,65294,8231,65307,65306,65311,65281,65072,8230,8229,65104,65105,65106,183,65108,65109,65110,65111,65372,8211,65073,8212,65075,9588,65076,65103,65288,65289,65077,65078,65371,65373,65079,65080,12308,12309,65081,65082,12304,12305,65083,65084,12298,12299,65085,65086,12296,12297,65087,65088,12300,12301,65089,65090,12302,12303,65091,65092,65113,65114,65115,65116,65117,65118,8216,8217,8220,8221,12317,12318,8245,8242,65283,65286,65290,8251,167,12291,9675,9679,9651,9650,9678,9734,9733,9671,9670,9633,9632,9661,9660,12963,8453,175,65507,65343,717,65097,65098,65101,65102,65099,65100,65119,65120,65121,65291,65293,215,247,177,8730,65308,65310,65309,8806,8807,8800,8734,8786,8801,65122,65123,65124,65125,65126,65374,8745,8746,8869,8736,8735,8895,13266,13265,8747,8750,8757,8756,9792,9794,8853,8857,8593,8595,8592,8594,8598,8599,8601,8600,8741,8739,65295,65340,8725,65128,65284,65509,12306,65504,65505,65285,65312,8451,8457,65129,65130,65131,13269,13212,13213,13214,13262,13217,13198,13199,13252,176,20825,20827,20830,20829,20833,20835,21991,29929,31950,9601,9602,9603,9604,9605,9606,9607,9608,9615,9614,9613,9612,9611,9610,9609,9532,9524,9516,9508,9500,9620,9472,9474,9621,9484,9488,9492,9496,9581,9582,9584,9583,9552,9566,9578,9569,9698,9699,9701,9700,9585,9586,9587,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,12321,12322,12323,12324,12325,12326,12327,12328,12329,21313,21316,21317,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,729,713,714,711,715,9216,9217,9218,9219,9220,9221,9222,9223,9224,9225,9226,9227,9228,9229,9230,9231,9232,9233,9234,9235,9236,9237,9238,9239,9240,9241,9242,9243,9244,9245,9246,9247,9249,8364,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19968,20057,19969,19971,20035,20061,20102,20108,20154,20799,20837,20843,20960,20992,20993,21147,21269,21313,21340,21448,19977,19979,19976,19978,20011,20024,20961,20037,20040,20063,20062,20110,20129,20800,20995,21242,21315,21449,21475,22303,22763,22805,22823,22899,23376,23377,23379,23544,23567,23586,23608,23665,24029,24037,24049,24050,24051,24062,24178,24318,24331,24339,25165,19985,19984,19981,20013,20016,20025,20043,23609,20104,20113,20117,20114,20116,20130,20161,20160,20163,20166,20167,20173,20170,20171,20164,20803,20801,20839,20845,20846,20844,20887,20982,20998,20999,21e3,21243,21246,21247,21270,21305,21320,21319,21317,21342,21380,21451,21450,21453,22764,22825,22827,22826,22829,23380,23569,23588,23610,23663,24052,24187,24319,24340,24341,24515,25096,25142,25163,25166,25903,25991,26007,26020,26041,26085,26352,26376,26408,27424,27490,27513,27595,27604,27611,27663,27700,28779,29226,29238,29243,29255,29273,29275,29356,29579,19993,19990,19989,19988,19992,20027,20045,20047,20046,20197,20184,20180,20181,20182,20183,20195,20196,20185,20190,20805,20804,20873,20874,20908,20985,20986,20984,21002,21152,21151,21253,21254,21271,21277,20191,21322,21321,21345,21344,21359,21358,21435,21487,21476,21491,21484,21486,21481,21480,21500,21496,21493,21483,21478,21482,21490,21489,21488,21477,21485,21499,22235,22234,22806,22830,22833,22900,22902,23381,23427,23612,24040,24039,24038,24066,24067,24179,24188,24321,24344,24343,24517,25098,25171,25172,25170,25169,26021,26086,26414,26412,26410,26411,26413,27491,27597,27665,27664,27704,27713,27712,27710,29359,29572,29577,29916,29926,29976,29983,29992,29993,3e4,30001,30002,30003,30091,30333,30382,30399,30446,30683,30690,30707,31034,31166,31348,31435,19998,19999,20050,20051,20073,20121,20132,20134,20133,20223,20233,20249,20234,20245,20237,20240,20241,20239,20210,20214,20219,20208,20211,20221,20225,20235,20809,20807,20806,20808,20840,20849,20877,20912,21015,21009,21010,21006,21014,21155,21256,21281,21280,21360,21361,21513,21519,21516,21514,21520,21505,21515,21508,21521,21517,21512,21507,21518,21510,21522,22240,22238,22237,22323,22320,22312,22317,22316,22319,22313,22809,22810,22839,22840,22916,22904,22915,22909,22905,22914,22913,23383,23384,23431,23432,23429,23433,23546,23574,23673,24030,24070,24182,24180,24335,24347,24537,24534,25102,25100,25101,25104,25187,25179,25176,25910,26089,26088,26092,26093,26354,26355,26377,26429,26420,26417,26421,27425,27492,27515,27670,27741,27735,27737,27743,27744,27728,27733,27745,27739,27725,27726,28784,29279,29277,30334,31481,31859,31992,32566,32650,32701,32769,32771,32780,32786,32819,32895,32905,32907,32908,33251,33258,33267,33276,33292,33307,33311,33390,33394,33406,34411,34880,34892,34915,35199,38433,20018,20136,20301,20303,20295,20311,20318,20276,20315,20309,20272,20304,20305,20285,20282,20280,20291,20308,20284,20294,20323,20316,20320,20271,20302,20278,20313,20317,20296,20314,20812,20811,20813,20853,20918,20919,21029,21028,21033,21034,21032,21163,21161,21162,21164,21283,21363,21365,21533,21549,21534,21566,21542,21582,21543,21574,21571,21555,21576,21570,21531,21545,21578,21561,21563,21560,21550,21557,21558,21536,21564,21568,21553,21547,21535,21548,22250,22256,22244,22251,22346,22353,22336,22349,22343,22350,22334,22352,22351,22331,22767,22846,22941,22930,22952,22942,22947,22937,22934,22925,22948,22931,22922,22949,23389,23388,23386,23387,23436,23435,23439,23596,23616,23617,23615,23614,23696,23697,23700,23692,24043,24076,24207,24199,24202,24311,24324,24351,24420,24418,24439,24441,24536,24524,24535,24525,24561,24555,24568,24554,25106,25105,25220,25239,25238,25216,25206,25225,25197,25226,25212,25214,25209,25203,25234,25199,25240,25198,25237,25235,25233,25222,25913,25915,25912,26097,26356,26463,26446,26447,26448,26449,26460,26454,26462,26441,26438,26464,26451,26455,27493,27599,27714,27742,27801,27777,27784,27785,27781,27803,27754,27770,27792,27760,27788,27752,27798,27794,27773,27779,27762,27774,27764,27782,27766,27789,27796,27800,27778,28790,28796,28797,28792,29282,29281,29280,29380,29378,29590,29996,29995,30007,30008,30338,30447,30691,31169,31168,31167,31350,31995,32597,32918,32915,32925,32920,32923,32922,32946,33391,33426,33419,33421,35211,35282,35328,35895,35910,35925,35997,36196,36208,36275,36523,36554,36763,36784,36802,36806,36805,36804,24033,37009,37026,37034,37030,37027,37193,37318,37324,38450,38446,38449,38442,38444,20006,20054,20083,20107,20123,20126,20139,20140,20335,20381,20365,20339,20351,20332,20379,20363,20358,20355,20336,20341,20360,20329,20347,20374,20350,20367,20369,20346,20820,20818,20821,20841,20855,20854,20856,20925,20989,21051,21048,21047,21050,21040,21038,21046,21057,21182,21179,21330,21332,21331,21329,21350,21367,21368,21369,21462,21460,21463,21619,21621,21654,21624,21653,21632,21627,21623,21636,21650,21638,21628,21648,21617,21622,21644,21658,21602,21608,21643,21629,21646,22266,22403,22391,22378,22377,22369,22374,22372,22396,22812,22857,22855,22856,22852,22868,22974,22971,22996,22969,22958,22993,22982,22992,22989,22987,22995,22986,22959,22963,22994,22981,23391,23396,23395,23447,23450,23448,23452,23449,23451,23578,23624,23621,23622,23735,23713,23736,23721,23723,23729,23731,24088,24090,24086,24085,24091,24081,24184,24218,24215,24220,24213,24214,24310,24358,24359,24361,24448,24449,24447,24444,24541,24544,24573,24565,24575,24591,24596,24623,24629,24598,24618,24597,24609,24615,24617,24619,24603,25110,25109,25151,25150,25152,25215,25289,25292,25284,25279,25282,25273,25298,25307,25259,25299,25300,25291,25288,25256,25277,25276,25296,25305,25287,25293,25269,25306,25265,25304,25302,25303,25286,25260,25294,25918,26023,26044,26106,26132,26131,26124,26118,26114,26126,26112,26127,26133,26122,26119,26381,26379,26477,26507,26517,26481,26524,26483,26487,26503,26525,26519,26479,26480,26495,26505,26494,26512,26485,26522,26515,26492,26474,26482,27427,27494,27495,27519,27667,27675,27875,27880,27891,27825,27852,27877,27827,27837,27838,27836,27874,27819,27861,27859,27832,27844,27833,27841,27822,27863,27845,27889,27839,27835,27873,27867,27850,27820,27887,27868,27862,27872,28821,28814,28818,28810,28825,29228,29229,29240,29256,29287,29289,29376,29390,29401,29399,29392,29609,29608,29599,29611,29605,30013,30109,30105,30106,30340,30402,30450,30452,30693,30717,31038,31040,31041,31177,31176,31354,31353,31482,31998,32596,32652,32651,32773,32954,32933,32930,32945,32929,32939,32937,32948,32938,32943,33253,33278,33293,33459,33437,33433,33453,33469,33439,33465,33457,33452,33445,33455,33464,33443,33456,33470,33463,34382,34417,21021,34920,36555,36814,36820,36817,37045,37048,37041,37046,37319,37329,38263,38272,38428,38464,38463,38459,38468,38466,38585,38632,38738,38750,20127,20141,20142,20449,20405,20399,20415,20448,20433,20431,20445,20419,20406,20440,20447,20426,20439,20398,20432,20420,20418,20442,20430,20446,20407,20823,20882,20881,20896,21070,21059,21066,21069,21068,21067,21063,21191,21193,21187,21185,21261,21335,21371,21402,21467,21676,21696,21672,21710,21705,21688,21670,21683,21703,21698,21693,21674,21697,21700,21704,21679,21675,21681,21691,21673,21671,21695,22271,22402,22411,22432,22435,22434,22478,22446,22419,22869,22865,22863,22862,22864,23004,23e3,23039,23011,23016,23043,23013,23018,23002,23014,23041,23035,23401,23459,23462,23460,23458,23461,23553,23630,23631,23629,23627,23769,23762,24055,24093,24101,24095,24189,24224,24230,24314,24328,24365,24421,24456,24453,24458,24459,24455,24460,24457,24594,24605,24608,24613,24590,24616,24653,24688,24680,24674,24646,24643,24684,24683,24682,24676,25153,25308,25366,25353,25340,25325,25345,25326,25341,25351,25329,25335,25327,25324,25342,25332,25361,25346,25919,25925,26027,26045,26082,26149,26157,26144,26151,26159,26143,26152,26161,26148,26359,26623,26579,26609,26580,26576,26604,26550,26543,26613,26601,26607,26564,26577,26548,26586,26597,26552,26575,26590,26611,26544,26585,26594,26589,26578,27498,27523,27526,27573,27602,27607,27679,27849,27915,27954,27946,27969,27941,27916,27953,27934,27927,27963,27965,27966,27958,27931,27893,27961,27943,27960,27945,27950,27957,27918,27947,28843,28858,28851,28844,28847,28845,28856,28846,28836,29232,29298,29295,29300,29417,29408,29409,29623,29642,29627,29618,29645,29632,29619,29978,29997,30031,30028,30030,30027,30123,30116,30117,30114,30115,30328,30342,30343,30344,30408,30406,30403,30405,30465,30457,30456,30473,30475,30462,30460,30471,30684,30722,30740,30732,30733,31046,31049,31048,31047,31161,31162,31185,31186,31179,31359,31361,31487,31485,31869,32002,32005,32e3,32009,32007,32004,32006,32568,32654,32703,32772,32784,32781,32785,32822,32982,32997,32986,32963,32964,32972,32993,32987,32974,32990,32996,32989,33268,33314,33511,33539,33541,33507,33499,33510,33540,33509,33538,33545,33490,33495,33521,33537,33500,33492,33489,33502,33491,33503,33519,33542,34384,34425,34427,34426,34893,34923,35201,35284,35336,35330,35331,35998,36e3,36212,36211,36276,36557,36556,36848,36838,36834,36842,36837,36845,36843,36836,36840,37066,37070,37057,37059,37195,37194,37325,38274,38480,38475,38476,38477,38754,38761,38859,38893,38899,38913,39080,39131,39135,39318,39321,20056,20147,20492,20493,20515,20463,20518,20517,20472,20521,20502,20486,20540,20511,20506,20498,20497,20474,20480,20500,20520,20465,20513,20491,20505,20504,20467,20462,20525,20522,20478,20523,20489,20860,20900,20901,20898,20941,20940,20934,20939,21078,21084,21076,21083,21085,21290,21375,21407,21405,21471,21736,21776,21761,21815,21756,21733,21746,21766,21754,21780,21737,21741,21729,21769,21742,21738,21734,21799,21767,21757,21775,22275,22276,22466,22484,22475,22467,22537,22799,22871,22872,22874,23057,23064,23068,23071,23067,23059,23020,23072,23075,23081,23077,23052,23049,23403,23640,23472,23475,23478,23476,23470,23477,23481,23480,23556,23633,23637,23632,23789,23805,23803,23786,23784,23792,23798,23809,23796,24046,24109,24107,24235,24237,24231,24369,24466,24465,24464,24665,24675,24677,24656,24661,24685,24681,24687,24708,24735,24730,24717,24724,24716,24709,24726,25159,25331,25352,25343,25422,25406,25391,25429,25410,25414,25423,25417,25402,25424,25405,25386,25387,25384,25421,25420,25928,25929,26009,26049,26053,26178,26185,26191,26179,26194,26188,26181,26177,26360,26388,26389,26391,26657,26680,26696,26694,26707,26681,26690,26708,26665,26803,26647,26700,26705,26685,26612,26704,26688,26684,26691,26666,26693,26643,26648,26689,27530,27529,27575,27683,27687,27688,27686,27684,27888,28010,28053,28040,28039,28006,28024,28023,27993,28051,28012,28041,28014,27994,28020,28009,28044,28042,28025,28037,28005,28052,28874,28888,28900,28889,28872,28879,29241,29305,29436,29433,29437,29432,29431,29574,29677,29705,29678,29664,29674,29662,30036,30045,30044,30042,30041,30142,30149,30151,30130,30131,30141,30140,30137,30146,30136,30347,30384,30410,30413,30414,30505,30495,30496,30504,30697,30768,30759,30776,30749,30772,30775,30757,30765,30752,30751,30770,31061,31056,31072,31071,31062,31070,31069,31063,31066,31204,31203,31207,31199,31206,31209,31192,31364,31368,31449,31494,31505,31881,32033,32023,32011,32010,32032,32034,32020,32016,32021,32026,32028,32013,32025,32027,32570,32607,32660,32709,32705,32774,32792,32789,32793,32791,32829,32831,33009,33026,33008,33029,33005,33012,33030,33016,33011,33032,33021,33034,33020,33007,33261,33260,33280,33296,33322,33323,33320,33324,33467,33579,33618,33620,33610,33592,33616,33609,33589,33588,33615,33586,33593,33590,33559,33600,33585,33576,33603,34388,34442,34474,34451,34468,34473,34444,34467,34460,34928,34935,34945,34946,34941,34937,35352,35344,35342,35340,35349,35338,35351,35347,35350,35343,35345,35912,35962,35961,36001,36002,36215,36524,36562,36564,36559,36785,36865,36870,36855,36864,36858,36852,36867,36861,36869,36856,37013,37089,37085,37090,37202,37197,37196,37336,37341,37335,37340,37337,38275,38498,38499,38497,38491,38493,38500,38488,38494,38587,39138,39340,39592,39640,39717,39730,39740,20094,20602,20605,20572,20551,20547,20556,20570,20553,20581,20598,20558,20565,20597,20596,20599,20559,20495,20591,20589,20828,20885,20976,21098,21103,21202,21209,21208,21205,21264,21263,21273,21311,21312,21310,21443,26364,21830,21866,21862,21828,21854,21857,21827,21834,21809,21846,21839,21845,21807,21860,21816,21806,21852,21804,21859,21811,21825,21847,22280,22283,22281,22495,22533,22538,22534,22496,22500,22522,22530,22581,22519,22521,22816,22882,23094,23105,23113,23142,23146,23104,23100,23138,23130,23110,23114,23408,23495,23493,23492,23490,23487,23494,23561,23560,23559,23648,23644,23645,23815,23814,23822,23835,23830,23842,23825,23849,23828,23833,23844,23847,23831,24034,24120,24118,24115,24119,24247,24248,24246,24245,24254,24373,24375,24407,24428,24425,24427,24471,24473,24478,24472,24481,24480,24476,24703,24739,24713,24736,24744,24779,24756,24806,24765,24773,24763,24757,24796,24764,24792,24789,24774,24799,24760,24794,24775,25114,25115,25160,25504,25511,25458,25494,25506,25509,25463,25447,25496,25514,25457,25513,25481,25475,25499,25451,25512,25476,25480,25497,25505,25516,25490,25487,25472,25467,25449,25448,25466,25949,25942,25937,25945,25943,21855,25935,25944,25941,25940,26012,26011,26028,26063,26059,26060,26062,26205,26202,26212,26216,26214,26206,26361,21207,26395,26753,26799,26786,26771,26805,26751,26742,26801,26791,26775,26800,26755,26820,26797,26758,26757,26772,26781,26792,26783,26785,26754,27442,27578,27627,27628,27691,28046,28092,28147,28121,28082,28129,28108,28132,28155,28154,28165,28103,28107,28079,28113,28078,28126,28153,28088,28151,28149,28101,28114,28186,28085,28122,28139,28120,28138,28145,28142,28136,28102,28100,28074,28140,28095,28134,28921,28937,28938,28925,28911,29245,29309,29313,29468,29467,29462,29459,29465,29575,29701,29706,29699,29702,29694,29709,29920,29942,29943,29980,29986,30053,30054,30050,30064,30095,30164,30165,30133,30154,30157,30350,30420,30418,30427,30519,30526,30524,30518,30520,30522,30827,30787,30798,31077,31080,31085,31227,31378,31381,31520,31528,31515,31532,31526,31513,31518,31534,31890,31895,31893,32070,32067,32113,32046,32057,32060,32064,32048,32051,32068,32047,32066,32050,32049,32573,32670,32666,32716,32718,32722,32796,32842,32838,33071,33046,33059,33067,33065,33072,33060,33282,33333,33335,33334,33337,33678,33694,33688,33656,33698,33686,33725,33707,33682,33674,33683,33673,33696,33655,33659,33660,33670,33703,34389,24426,34503,34496,34486,34500,34485,34502,34507,34481,34479,34505,34899,34974,34952,34987,34962,34966,34957,34955,35219,35215,35370,35357,35363,35365,35377,35373,35359,35355,35362,35913,35930,36009,36012,36011,36008,36010,36007,36199,36198,36286,36282,36571,36575,36889,36877,36890,36887,36899,36895,36893,36880,36885,36894,36896,36879,36898,36886,36891,36884,37096,37101,37117,37207,37326,37365,37350,37347,37351,37357,37353,38281,38506,38517,38515,38520,38512,38516,38518,38519,38508,38592,38634,38633,31456,31455,38914,38915,39770,40165,40565,40575,40613,40635,20642,20621,20613,20633,20625,20608,20630,20632,20634,26368,20977,21106,21108,21109,21097,21214,21213,21211,21338,21413,21883,21888,21927,21884,21898,21917,21912,21890,21916,21930,21908,21895,21899,21891,21939,21934,21919,21822,21938,21914,21947,21932,21937,21886,21897,21931,21913,22285,22575,22570,22580,22564,22576,22577,22561,22557,22560,22777,22778,22880,23159,23194,23167,23186,23195,23207,23411,23409,23506,23500,23507,23504,23562,23563,23601,23884,23888,23860,23879,24061,24133,24125,24128,24131,24190,24266,24257,24258,24260,24380,24429,24489,24490,24488,24785,24801,24754,24758,24800,24860,24867,24826,24853,24816,24827,24820,24936,24817,24846,24822,24841,24832,24850,25119,25161,25507,25484,25551,25536,25577,25545,25542,25549,25554,25571,25552,25569,25558,25581,25582,25462,25588,25578,25563,25682,25562,25593,25950,25958,25954,25955,26001,26e3,26031,26222,26224,26228,26230,26223,26257,26234,26238,26231,26366,26367,26399,26397,26874,26837,26848,26840,26839,26885,26847,26869,26862,26855,26873,26834,26866,26851,26827,26829,26893,26898,26894,26825,26842,26990,26875,27454,27450,27453,27544,27542,27580,27631,27694,27695,27692,28207,28216,28244,28193,28210,28263,28234,28192,28197,28195,28187,28251,28248,28196,28246,28270,28205,28198,28271,28212,28237,28218,28204,28227,28189,28222,28363,28297,28185,28238,28259,28228,28274,28265,28255,28953,28954,28966,28976,28961,28982,29038,28956,29260,29316,29312,29494,29477,29492,29481,29754,29738,29747,29730,29733,29749,29750,29748,29743,29723,29734,29736,29989,29990,30059,30058,30178,30171,30179,30169,30168,30174,30176,30331,30332,30358,30355,30388,30428,30543,30701,30813,30828,30831,31245,31240,31243,31237,31232,31384,31383,31382,31461,31459,31561,31574,31558,31568,31570,31572,31565,31563,31567,31569,31903,31909,32094,32080,32104,32085,32043,32110,32114,32097,32102,32098,32112,32115,21892,32724,32725,32779,32850,32901,33109,33108,33099,33105,33102,33081,33094,33086,33100,33107,33140,33298,33308,33769,33795,33784,33805,33760,33733,33803,33729,33775,33777,33780,33879,33802,33776,33804,33740,33789,33778,33738,33848,33806,33796,33756,33799,33748,33759,34395,34527,34521,34541,34516,34523,34532,34512,34526,34903,35009,35010,34993,35203,35222,35387,35424,35413,35422,35388,35393,35412,35419,35408,35398,35380,35386,35382,35414,35937,35970,36015,36028,36019,36029,36033,36027,36032,36020,36023,36022,36031,36024,36234,36229,36225,36302,36317,36299,36314,36305,36300,36315,36294,36603,36600,36604,36764,36910,36917,36913,36920,36914,36918,37122,37109,37129,37118,37219,37221,37327,37396,37397,37411,37385,37406,37389,37392,37383,37393,38292,38287,38283,38289,38291,38290,38286,38538,38542,38539,38525,38533,38534,38541,38514,38532,38593,38597,38596,38598,38599,38639,38642,38860,38917,38918,38920,39143,39146,39151,39145,39154,39149,39342,39341,40643,40653,40657,20098,20653,20661,20658,20659,20677,20670,20652,20663,20667,20655,20679,21119,21111,21117,21215,21222,21220,21218,21219,21295,21983,21992,21971,21990,21966,21980,21959,21969,21987,21988,21999,21978,21985,21957,21958,21989,21961,22290,22291,22622,22609,22616,22615,22618,22612,22635,22604,22637,22602,22626,22610,22603,22887,23233,23241,23244,23230,23229,23228,23219,23234,23218,23913,23919,24140,24185,24265,24264,24338,24409,24492,24494,24858,24847,24904,24863,24819,24859,24825,24833,24840,24910,24908,24900,24909,24894,24884,24871,24845,24838,24887,25121,25122,25619,25662,25630,25642,25645,25661,25644,25615,25628,25620,25613,25654,25622,25623,25606,25964,26015,26032,26263,26249,26247,26248,26262,26244,26264,26253,26371,27028,26989,26970,26999,26976,26964,26997,26928,27010,26954,26984,26987,26974,26963,27001,27014,26973,26979,26971,27463,27506,27584,27583,27603,27645,28322,28335,28371,28342,28354,28304,28317,28359,28357,28325,28312,28348,28346,28331,28369,28310,28316,28356,28372,28330,28327,28340,29006,29017,29033,29028,29001,29031,29020,29036,29030,29004,29029,29022,28998,29032,29014,29242,29266,29495,29509,29503,29502,29807,29786,29781,29791,29790,29761,29759,29785,29787,29788,30070,30072,30208,30192,30209,30194,30193,30202,30207,30196,30195,30430,30431,30555,30571,30566,30558,30563,30585,30570,30572,30556,30565,30568,30562,30702,30862,30896,30871,30872,30860,30857,30844,30865,30867,30847,31098,31103,31105,33836,31165,31260,31258,31264,31252,31263,31262,31391,31392,31607,31680,31584,31598,31591,31921,31923,31925,32147,32121,32145,32129,32143,32091,32622,32617,32618,32626,32681,32680,32676,32854,32856,32902,32900,33137,33136,33144,33125,33134,33139,33131,33145,33146,33126,33285,33351,33922,33911,33853,33841,33909,33894,33899,33865,33900,33883,33852,33845,33889,33891,33897,33901,33862,34398,34396,34399,34553,34579,34568,34567,34560,34558,34555,34562,34563,34566,34570,34905,35039,35028,35033,35036,35032,35037,35041,35018,35029,35026,35228,35299,35435,35442,35443,35430,35433,35440,35463,35452,35427,35488,35441,35461,35437,35426,35438,35436,35449,35451,35390,35432,35938,35978,35977,36042,36039,36040,36036,36018,36035,36034,36037,36321,36319,36328,36335,36339,36346,36330,36324,36326,36530,36611,36617,36606,36618,36767,36786,36939,36938,36947,36930,36948,36924,36949,36944,36935,36943,36942,36941,36945,36926,36929,37138,37143,37228,37226,37225,37321,37431,37463,37432,37437,37440,37438,37467,37451,37476,37457,37428,37449,37453,37445,37433,37439,37466,38296,38552,38548,38549,38605,38603,38601,38602,38647,38651,38649,38646,38742,38772,38774,38928,38929,38931,38922,38930,38924,39164,39156,39165,39166,39347,39345,39348,39649,40169,40578,40718,40723,40736,20711,20718,20709,20694,20717,20698,20693,20687,20689,20721,20686,20713,20834,20979,21123,21122,21297,21421,22014,22016,22043,22039,22013,22036,22022,22025,22029,22030,22007,22038,22047,22024,22032,22006,22296,22294,22645,22654,22659,22675,22666,22649,22661,22653,22781,22821,22818,22820,22890,22889,23265,23270,23273,23255,23254,23256,23267,23413,23518,23527,23521,23525,23526,23528,23522,23524,23519,23565,23650,23940,23943,24155,24163,24149,24151,24148,24275,24278,24330,24390,24432,24505,24903,24895,24907,24951,24930,24931,24927,24922,24920,24949,25130,25735,25688,25684,25764,25720,25695,25722,25681,25703,25652,25709,25723,25970,26017,26071,26070,26274,26280,26269,27036,27048,27029,27073,27054,27091,27083,27035,27063,27067,27051,27060,27088,27085,27053,27084,27046,27075,27043,27465,27468,27699,28467,28436,28414,28435,28404,28457,28478,28448,28460,28431,28418,28450,28415,28399,28422,28465,28472,28466,28451,28437,28459,28463,28552,28458,28396,28417,28402,28364,28407,29076,29081,29053,29066,29060,29074,29246,29330,29334,29508,29520,29796,29795,29802,29808,29805,29956,30097,30247,30221,30219,30217,30227,30433,30435,30596,30589,30591,30561,30913,30879,30887,30899,30889,30883,31118,31119,31117,31278,31281,31402,31401,31469,31471,31649,31637,31627,31605,31639,31645,31636,31631,31672,31623,31620,31929,31933,31934,32187,32176,32156,32189,32190,32160,32202,32180,32178,32177,32186,32162,32191,32181,32184,32173,32210,32199,32172,32624,32736,32737,32735,32862,32858,32903,33104,33152,33167,33160,33162,33151,33154,33255,33274,33287,33300,33310,33355,33993,33983,33990,33988,33945,33950,33970,33948,33995,33976,33984,34003,33936,33980,34001,33994,34623,34588,34619,34594,34597,34612,34584,34645,34615,34601,35059,35074,35060,35065,35064,35069,35048,35098,35055,35494,35468,35486,35491,35469,35489,35475,35492,35498,35493,35496,35480,35473,35482,35495,35946,35981,35980,36051,36049,36050,36203,36249,36245,36348,36628,36626,36629,36627,36771,36960,36952,36956,36963,36953,36958,36962,36957,36955,37145,37144,37150,37237,37240,37239,37236,37496,37504,37509,37528,37526,37499,37523,37532,37544,37500,37521,38305,38312,38313,38307,38309,38308,38553,38556,38555,38604,38610,38656,38780,38789,38902,38935,38936,39087,39089,39171,39173,39180,39177,39361,39599,39600,39654,39745,39746,40180,40182,40179,40636,40763,40778,20740,20736,20731,20725,20729,20738,20744,20745,20741,20956,21127,21128,21129,21133,21130,21232,21426,22062,22075,22073,22066,22079,22068,22057,22099,22094,22103,22132,22070,22063,22064,22656,22687,22686,22707,22684,22702,22697,22694,22893,23305,23291,23307,23285,23308,23304,23534,23532,23529,23531,23652,23653,23965,23956,24162,24159,24161,24290,24282,24287,24285,24291,24288,24392,24433,24503,24501,24950,24935,24942,24925,24917,24962,24956,24944,24939,24958,24999,24976,25003,24974,25004,24986,24996,24980,25006,25134,25705,25711,25721,25758,25778,25736,25744,25776,25765,25747,25749,25769,25746,25774,25773,25771,25754,25772,25753,25762,25779,25973,25975,25976,26286,26283,26292,26289,27171,27167,27112,27137,27166,27161,27133,27169,27155,27146,27123,27138,27141,27117,27153,27472,27470,27556,27589,27590,28479,28540,28548,28497,28518,28500,28550,28525,28507,28536,28526,28558,28538,28528,28516,28567,28504,28373,28527,28512,28511,29087,29100,29105,29096,29270,29339,29518,29527,29801,29835,29827,29822,29824,30079,30240,30249,30239,30244,30246,30241,30242,30362,30394,30436,30606,30599,30604,30609,30603,30923,30917,30906,30922,30910,30933,30908,30928,31295,31292,31296,31293,31287,31291,31407,31406,31661,31665,31684,31668,31686,31687,31681,31648,31692,31946,32224,32244,32239,32251,32216,32236,32221,32232,32227,32218,32222,32233,32158,32217,32242,32249,32629,32631,32687,32745,32806,33179,33180,33181,33184,33178,33176,34071,34109,34074,34030,34092,34093,34067,34065,34083,34081,34068,34028,34085,34047,34054,34690,34676,34678,34656,34662,34680,34664,34649,34647,34636,34643,34907,34909,35088,35079,35090,35091,35093,35082,35516,35538,35527,35524,35477,35531,35576,35506,35529,35522,35519,35504,35542,35533,35510,35513,35547,35916,35918,35948,36064,36062,36070,36068,36076,36077,36066,36067,36060,36074,36065,36205,36255,36259,36395,36368,36381,36386,36367,36393,36383,36385,36382,36538,36637,36635,36639,36649,36646,36650,36636,36638,36645,36969,36974,36968,36973,36983,37168,37165,37159,37169,37255,37257,37259,37251,37573,37563,37559,37610,37548,37604,37569,37555,37564,37586,37575,37616,37554,38317,38321,38660,38662,38663,38665,38752,38797,38795,38799,38945,38955,38940,39091,39178,39187,39186,39192,39389,39376,39391,39387,39377,39381,39378,39385,39607,39662,39663,39719,39749,39748,39799,39791,40198,40201,40195,40617,40638,40654,22696,40786,20754,20760,20756,20752,20757,20864,20906,20957,21137,21139,21235,22105,22123,22137,22121,22116,22136,22122,22120,22117,22129,22127,22124,22114,22134,22721,22718,22727,22725,22894,23325,23348,23416,23536,23566,24394,25010,24977,25001,24970,25037,25014,25022,25034,25032,25136,25797,25793,25803,25787,25788,25818,25796,25799,25794,25805,25791,25810,25812,25790,25972,26310,26313,26297,26308,26311,26296,27197,27192,27194,27225,27243,27224,27193,27204,27234,27233,27211,27207,27189,27231,27208,27481,27511,27653,28610,28593,28577,28611,28580,28609,28583,28595,28608,28601,28598,28582,28576,28596,29118,29129,29136,29138,29128,29141,29113,29134,29145,29148,29123,29124,29544,29852,29859,29848,29855,29854,29922,29964,29965,30260,30264,30266,30439,30437,30624,30622,30623,30629,30952,30938,30956,30951,31142,31309,31310,31302,31308,31307,31418,31705,31761,31689,31716,31707,31713,31721,31718,31957,31958,32266,32273,32264,32283,32291,32286,32285,32265,32272,32633,32690,32752,32753,32750,32808,33203,33193,33192,33275,33288,33368,33369,34122,34137,34120,34152,34153,34115,34121,34157,34154,34142,34691,34719,34718,34722,34701,34913,35114,35122,35109,35115,35105,35242,35238,35558,35578,35563,35569,35584,35548,35559,35566,35582,35585,35586,35575,35565,35571,35574,35580,35947,35949,35987,36084,36420,36401,36404,36418,36409,36405,36667,36655,36664,36659,36776,36774,36981,36980,36984,36978,36988,36986,37172,37266,37664,37686,37624,37683,37679,37666,37628,37675,37636,37658,37648,37670,37665,37653,37678,37657,38331,38567,38568,38570,38613,38670,38673,38678,38669,38675,38671,38747,38748,38758,38808,38960,38968,38971,38967,38957,38969,38948,39184,39208,39198,39195,39201,39194,39405,39394,39409,39608,39612,39675,39661,39720,39825,40213,40227,40230,40232,40210,40219,40664,40660,40845,40860,20778,20767,20769,20786,21237,22158,22144,22160,22149,22151,22159,22741,22739,22737,22734,23344,23338,23332,23418,23607,23656,23996,23994,23997,23992,24171,24396,24509,25033,25026,25031,25062,25035,25138,25140,25806,25802,25816,25824,25840,25830,25836,25841,25826,25837,25986,25987,26329,26326,27264,27284,27268,27298,27292,27355,27299,27262,27287,27280,27296,27484,27566,27610,27656,28632,28657,28639,28640,28635,28644,28651,28655,28544,28652,28641,28649,28629,28654,28656,29159,29151,29166,29158,29157,29165,29164,29172,29152,29237,29254,29552,29554,29865,29872,29862,29864,30278,30274,30284,30442,30643,30634,30640,30636,30631,30637,30703,30967,30970,30964,30959,30977,31143,31146,31319,31423,31751,31757,31742,31735,31756,31712,31968,31964,31966,31970,31967,31961,31965,32302,32318,32326,32311,32306,32323,32299,32317,32305,32325,32321,32308,32313,32328,32309,32319,32303,32580,32755,32764,32881,32882,32880,32879,32883,33222,33219,33210,33218,33216,33215,33213,33225,33214,33256,33289,33393,34218,34180,34174,34204,34193,34196,34223,34203,34183,34216,34186,34407,34752,34769,34739,34770,34758,34731,34747,34746,34760,34763,35131,35126,35140,35128,35133,35244,35598,35607,35609,35611,35594,35616,35613,35588,35600,35905,35903,35955,36090,36093,36092,36088,36091,36264,36425,36427,36424,36426,36676,36670,36674,36677,36671,36991,36989,36996,36993,36994,36992,37177,37283,37278,37276,37709,37762,37672,37749,37706,37733,37707,37656,37758,37740,37723,37744,37722,37716,38346,38347,38348,38344,38342,38577,38584,38614,38684,38686,38816,38867,38982,39094,39221,39425,39423,39854,39851,39850,39853,40251,40255,40587,40655,40670,40668,40669,40667,40766,40779,21474,22165,22190,22745,22744,23352,24413,25059,25139,25844,25842,25854,25862,25850,25851,25847,26039,26332,26406,27315,27308,27331,27323,27320,27330,27310,27311,27487,27512,27567,28681,28683,28670,28678,28666,28689,28687,29179,29180,29182,29176,29559,29557,29863,29887,29973,30294,30296,30290,30653,30655,30651,30652,30990,31150,31329,31330,31328,31428,31429,31787,31783,31786,31774,31779,31777,31975,32340,32341,32350,32346,32353,32338,32345,32584,32761,32763,32887,32886,33229,33231,33290,34255,34217,34253,34256,34249,34224,34234,34233,34214,34799,34796,34802,34784,35206,35250,35316,35624,35641,35628,35627,35920,36101,36441,36451,36454,36452,36447,36437,36544,36681,36685,36999,36995,37e3,37291,37292,37328,37780,37770,37782,37794,37811,37806,37804,37808,37784,37786,37783,38356,38358,38352,38357,38626,38620,38617,38619,38622,38692,38819,38822,38829,38905,38989,38991,38988,38990,38995,39098,39230,39231,39229,39214,39333,39438,39617,39683,39686,39759,39758,39757,39882,39881,39933,39880,39872,40273,40285,40288,40672,40725,40748,20787,22181,22750,22751,22754,23541,40848,24300,25074,25079,25078,25077,25856,25871,26336,26333,27365,27357,27354,27347,28699,28703,28712,28698,28701,28693,28696,29190,29197,29272,29346,29560,29562,29885,29898,29923,30087,30086,30303,30305,30663,31001,31153,31339,31337,31806,31807,31800,31805,31799,31808,32363,32365,32377,32361,32362,32645,32371,32694,32697,32696,33240,34281,34269,34282,34261,34276,34277,34295,34811,34821,34829,34809,34814,35168,35167,35158,35166,35649,35676,35672,35657,35674,35662,35663,35654,35673,36104,36106,36476,36466,36487,36470,36460,36474,36468,36692,36686,36781,37002,37003,37297,37294,37857,37841,37855,37827,37832,37852,37853,37846,37858,37837,37848,37860,37847,37864,38364,38580,38627,38698,38695,38753,38876,38907,39006,39e3,39003,39100,39237,39241,39446,39449,39693,39912,39911,39894,39899,40329,40289,40306,40298,40300,40594,40599,40595,40628,21240,22184,22199,22198,22196,22204,22756,23360,23363,23421,23542,24009,25080,25082,25880,25876,25881,26342,26407,27372,28734,28720,28722,29200,29563,29903,30306,30309,31014,31018,31020,31019,31431,31478,31820,31811,31821,31983,31984,36782,32381,32380,32386,32588,32768,33242,33382,34299,34297,34321,34298,34310,34315,34311,34314,34836,34837,35172,35258,35320,35696,35692,35686,35695,35679,35691,36111,36109,36489,36481,36485,36482,37300,37323,37912,37891,37885,38369,38704,39108,39250,39249,39336,39467,39472,39479,39477,39955,39949,40569,40629,40680,40751,40799,40803,40801,20791,20792,22209,22208,22210,22804,23660,24013,25084,25086,25885,25884,26005,26345,27387,27396,27386,27570,28748,29211,29351,29910,29908,30313,30675,31824,32399,32396,32700,34327,34349,34330,34851,34850,34849,34847,35178,35180,35261,35700,35703,35709,36115,36490,36493,36491,36703,36783,37306,37934,37939,37941,37946,37944,37938,37931,38370,38712,38713,38706,38911,39015,39013,39255,39493,39491,39488,39486,39631,39764,39761,39981,39973,40367,40372,40386,40376,40605,40687,40729,40796,40806,40807,20796,20795,22216,22218,22217,23423,24020,24018,24398,25087,25892,27402,27489,28753,28760,29568,29924,30090,30318,30316,31155,31840,31839,32894,32893,33247,35186,35183,35324,35712,36118,36119,36497,36499,36705,37192,37956,37969,37970,38717,38718,38851,38849,39019,39253,39509,39501,39634,39706,40009,39985,39998,39995,40403,40407,40756,40812,40810,40852,22220,24022,25088,25891,25899,25898,26348,27408,29914,31434,31844,31843,31845,32403,32406,32404,33250,34360,34367,34865,35722,37008,37007,37987,37984,37988,38760,39023,39260,39514,39515,39511,39635,39636,39633,40020,40023,40022,40421,40607,40692,22225,22761,25900,28766,30321,30322,30679,32592,32648,34870,34873,34914,35731,35730,35734,33399,36123,37312,37994,38722,38728,38724,38854,39024,39519,39714,39768,40031,40441,40442,40572,40573,40711,40823,40818,24307,27414,28771,31852,31854,34875,35264,36513,37313,38002,38e3,39025,39262,39638,39715,40652,28772,30682,35738,38007,38857,39522,39525,32412,35740,36522,37317,38013,38014,38012,40055,40056,40695,35924,38015,40474,29224,39530,39729,40475,40478,31858,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,20022,20031,20101,20128,20866,20886,20907,21241,21304,21353,21430,22794,23424,24027,12083,24191,24308,24400,24417,25908,26080,30098,30326,36789,38582,168,710,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,65339,65341,10045,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8679,8632,8633,12751,131276,20058,131210,20994,17553,40880,20872,40881,161287,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65506,65508,65287,65282,12849,8470,8481,12443,12444,11904,11908,11910,11911,11912,11914,11916,11917,11925,11932,11933,11941,11943,11946,11948,11950,11958,11964,11966,11974,11978,11980,11981,11983,11990,11991,11998,12003,null,null,null,643,592,603,596,629,339,248,331,650,618,20034,20060,20981,21274,21378,19975,19980,20039,20109,22231,64012,23662,24435,19983,20871,19982,20014,20115,20162,20169,20168,20888,21244,21356,21433,22304,22787,22828,23568,24063,26081,27571,27596,27668,29247,20017,20028,20200,20188,20201,20193,20189,20186,21004,21276,21324,22306,22307,22807,22831,23425,23428,23570,23611,23668,23667,24068,24192,24194,24521,25097,25168,27669,27702,27715,27711,27707,29358,29360,29578,31160,32906,38430,20238,20248,20268,20213,20244,20209,20224,20215,20232,20253,20226,20229,20258,20243,20228,20212,20242,20913,21011,21001,21008,21158,21282,21279,21325,21386,21511,22241,22239,22318,22314,22324,22844,22912,22908,22917,22907,22910,22903,22911,23382,23573,23589,23676,23674,23675,23678,24031,24181,24196,24322,24346,24436,24533,24532,24527,25180,25182,25188,25185,25190,25186,25177,25184,25178,25189,26095,26094,26430,26425,26424,26427,26426,26431,26428,26419,27672,27718,27730,27740,27727,27722,27732,27723,27724,28785,29278,29364,29365,29582,29994,30335,31349,32593,33400,33404,33408,33405,33407,34381,35198,37017,37015,37016,37019,37012,38434,38436,38432,38435,20310,20283,20322,20297,20307,20324,20286,20327,20306,20319,20289,20312,20269,20275,20287,20321,20879,20921,21020,21022,21025,21165,21166,21257,21347,21362,21390,21391,21552,21559,21546,21588,21573,21529,21532,21541,21528,21565,21583,21569,21544,21540,21575,22254,22247,22245,22337,22341,22348,22345,22347,22354,22790,22848,22950,22936,22944,22935,22926,22946,22928,22927,22951,22945,23438,23442,23592,23594,23693,23695,23688,23691,23689,23698,23690,23686,23699,23701,24032,24074,24078,24203,24201,24204,24200,24205,24325,24349,24440,24438,24530,24529,24528,24557,24552,24558,24563,24545,24548,24547,24570,24559,24567,24571,24576,24564,25146,25219,25228,25230,25231,25236,25223,25201,25211,25210,25200,25217,25224,25207,25213,25202,25204,25911,26096,26100,26099,26098,26101,26437,26439,26457,26453,26444,26440,26461,26445,26458,26443,27600,27673,27674,27768,27751,27755,27780,27787,27791,27761,27759,27753,27802,27757,27783,27797,27804,27750,27763,27749,27771,27790,28788,28794,29283,29375,29373,29379,29382,29377,29370,29381,29589,29591,29587,29588,29586,30010,30009,30100,30101,30337,31037,32820,32917,32921,32912,32914,32924,33424,33423,33413,33422,33425,33427,33418,33411,33412,35960,36809,36799,37023,37025,37029,37022,37031,37024,38448,38440,38447,38445,20019,20376,20348,20357,20349,20352,20359,20342,20340,20361,20356,20343,20300,20375,20330,20378,20345,20353,20344,20368,20380,20372,20382,20370,20354,20373,20331,20334,20894,20924,20926,21045,21042,21043,21062,21041,21180,21258,21259,21308,21394,21396,21639,21631,21633,21649,21634,21640,21611,21626,21630,21605,21612,21620,21606,21645,21615,21601,21600,21656,21603,21607,21604,22263,22265,22383,22386,22381,22379,22385,22384,22390,22400,22389,22395,22387,22388,22370,22376,22397,22796,22853,22965,22970,22991,22990,22962,22988,22977,22966,22972,22979,22998,22961,22973,22976,22984,22964,22983,23394,23397,23443,23445,23620,23623,23726,23716,23712,23733,23727,23720,23724,23711,23715,23725,23714,23722,23719,23709,23717,23734,23728,23718,24087,24084,24089,24360,24354,24355,24356,24404,24450,24446,24445,24542,24549,24621,24614,24601,24626,24587,24628,24586,24599,24627,24602,24606,24620,24610,24589,24592,24622,24595,24593,24588,24585,24604,25108,25149,25261,25268,25297,25278,25258,25270,25290,25262,25267,25263,25275,25257,25264,25272,25917,26024,26043,26121,26108,26116,26130,26120,26107,26115,26123,26125,26117,26109,26129,26128,26358,26378,26501,26476,26510,26514,26486,26491,26520,26502,26500,26484,26509,26508,26490,26527,26513,26521,26499,26493,26497,26488,26489,26516,27429,27520,27518,27614,27677,27795,27884,27883,27886,27865,27830,27860,27821,27879,27831,27856,27842,27834,27843,27846,27885,27890,27858,27869,27828,27786,27805,27776,27870,27840,27952,27853,27847,27824,27897,27855,27881,27857,28820,28824,28805,28819,28806,28804,28817,28822,28802,28826,28803,29290,29398,29387,29400,29385,29404,29394,29396,29402,29388,29393,29604,29601,29613,29606,29602,29600,29612,29597,29917,29928,30015,30016,30014,30092,30104,30383,30451,30449,30448,30453,30712,30716,30713,30715,30714,30711,31042,31039,31173,31352,31355,31483,31861,31997,32821,32911,32942,32931,32952,32949,32941,33312,33440,33472,33451,33434,33432,33435,33461,33447,33454,33468,33438,33466,33460,33448,33441,33449,33474,33444,33475,33462,33442,34416,34415,34413,34414,35926,36818,36811,36819,36813,36822,36821,36823,37042,37044,37039,37043,37040,38457,38461,38460,38458,38467,20429,20421,20435,20402,20425,20427,20417,20436,20444,20441,20411,20403,20443,20423,20438,20410,20416,20409,20460,21060,21065,21184,21186,21309,21372,21399,21398,21401,21400,21690,21665,21677,21669,21711,21699,33549,21687,21678,21718,21686,21701,21702,21664,21616,21692,21666,21694,21618,21726,21680,22453,22430,22431,22436,22412,22423,22429,22427,22420,22424,22415,22425,22437,22426,22421,22772,22797,22867,23009,23006,23022,23040,23025,23005,23034,23037,23036,23030,23012,23026,23031,23003,23017,23027,23029,23008,23038,23028,23021,23464,23628,23760,23768,23756,23767,23755,23771,23774,23770,23753,23751,23754,23766,23763,23764,23759,23752,23750,23758,23775,23800,24057,24097,24098,24099,24096,24100,24240,24228,24226,24219,24227,24229,24327,24366,24406,24454,24631,24633,24660,24690,24670,24645,24659,24647,24649,24667,24652,24640,24642,24671,24612,24644,24664,24678,24686,25154,25155,25295,25357,25355,25333,25358,25347,25323,25337,25359,25356,25336,25334,25344,25363,25364,25338,25365,25339,25328,25921,25923,26026,26047,26166,26145,26162,26165,26140,26150,26146,26163,26155,26170,26141,26164,26169,26158,26383,26384,26561,26610,26568,26554,26588,26555,26616,26584,26560,26551,26565,26603,26596,26591,26549,26573,26547,26615,26614,26606,26595,26562,26553,26574,26599,26608,26546,26620,26566,26605,26572,26542,26598,26587,26618,26569,26570,26563,26602,26571,27432,27522,27524,27574,27606,27608,27616,27680,27681,27944,27956,27949,27935,27964,27967,27922,27914,27866,27955,27908,27929,27962,27930,27921,27904,27933,27970,27905,27928,27959,27907,27919,27968,27911,27936,27948,27912,27938,27913,27920,28855,28831,28862,28849,28848,28833,28852,28853,28841,29249,29257,29258,29292,29296,29299,29294,29386,29412,29416,29419,29407,29418,29414,29411,29573,29644,29634,29640,29637,29625,29622,29621,29620,29675,29631,29639,29630,29635,29638,29624,29643,29932,29934,29998,30023,30024,30119,30122,30329,30404,30472,30467,30468,30469,30474,30455,30459,30458,30695,30696,30726,30737,30738,30725,30736,30735,30734,30729,30723,30739,31050,31052,31051,31045,31044,31189,31181,31183,31190,31182,31360,31358,31441,31488,31489,31866,31864,31865,31871,31872,31873,32003,32008,32001,32600,32657,32653,32702,32775,32782,32783,32788,32823,32984,32967,32992,32977,32968,32962,32976,32965,32995,32985,32988,32970,32981,32969,32975,32983,32998,32973,33279,33313,33428,33497,33534,33529,33543,33512,33536,33493,33594,33515,33494,33524,33516,33505,33522,33525,33548,33531,33526,33520,33514,33508,33504,33530,33523,33517,34423,34420,34428,34419,34881,34894,34919,34922,34921,35283,35332,35335,36210,36835,36833,36846,36832,37105,37053,37055,37077,37061,37054,37063,37067,37064,37332,37331,38484,38479,38481,38483,38474,38478,20510,20485,20487,20499,20514,20528,20507,20469,20468,20531,20535,20524,20470,20471,20503,20508,20512,20519,20533,20527,20529,20494,20826,20884,20883,20938,20932,20933,20936,20942,21089,21082,21074,21086,21087,21077,21090,21197,21262,21406,21798,21730,21783,21778,21735,21747,21732,21786,21759,21764,21768,21739,21777,21765,21745,21770,21755,21751,21752,21728,21774,21763,21771,22273,22274,22476,22578,22485,22482,22458,22470,22461,22460,22456,22454,22463,22471,22480,22457,22465,22798,22858,23065,23062,23085,23086,23061,23055,23063,23050,23070,23091,23404,23463,23469,23468,23555,23638,23636,23788,23807,23790,23793,23799,23808,23801,24105,24104,24232,24238,24234,24236,24371,24368,24423,24669,24666,24679,24641,24738,24712,24704,24722,24705,24733,24707,24725,24731,24727,24711,24732,24718,25113,25158,25330,25360,25430,25388,25412,25413,25398,25411,25572,25401,25419,25418,25404,25385,25409,25396,25432,25428,25433,25389,25415,25395,25434,25425,25400,25431,25408,25416,25930,25926,26054,26051,26052,26050,26186,26207,26183,26193,26386,26387,26655,26650,26697,26674,26675,26683,26699,26703,26646,26673,26652,26677,26667,26669,26671,26702,26692,26676,26653,26642,26644,26662,26664,26670,26701,26682,26661,26656,27436,27439,27437,27441,27444,27501,32898,27528,27622,27620,27624,27619,27618,27623,27685,28026,28003,28004,28022,27917,28001,28050,27992,28002,28013,28015,28049,28045,28143,28031,28038,27998,28007,28e3,28055,28016,28028,27999,28034,28056,27951,28008,28043,28030,28032,28036,27926,28035,28027,28029,28021,28048,28892,28883,28881,28893,28875,32569,28898,28887,28882,28894,28896,28884,28877,28869,28870,28871,28890,28878,28897,29250,29304,29303,29302,29440,29434,29428,29438,29430,29427,29435,29441,29651,29657,29669,29654,29628,29671,29667,29673,29660,29650,29659,29652,29661,29658,29655,29656,29672,29918,29919,29940,29941,29985,30043,30047,30128,30145,30139,30148,30144,30143,30134,30138,30346,30409,30493,30491,30480,30483,30482,30499,30481,30485,30489,30490,30498,30503,30755,30764,30754,30773,30767,30760,30766,30763,30753,30761,30771,30762,30769,31060,31067,31055,31068,31059,31058,31057,31211,31212,31200,31214,31213,31210,31196,31198,31197,31366,31369,31365,31371,31372,31370,31367,31448,31504,31492,31507,31493,31503,31496,31498,31502,31497,31506,31876,31889,31882,31884,31880,31885,31877,32030,32029,32017,32014,32024,32022,32019,32031,32018,32015,32012,32604,32609,32606,32608,32605,32603,32662,32658,32707,32706,32704,32790,32830,32825,33018,33010,33017,33013,33025,33019,33024,33281,33327,33317,33587,33581,33604,33561,33617,33573,33622,33599,33601,33574,33564,33570,33602,33614,33563,33578,33544,33596,33613,33558,33572,33568,33591,33583,33577,33607,33605,33612,33619,33566,33580,33611,33575,33608,34387,34386,34466,34472,34454,34445,34449,34462,34439,34455,34438,34443,34458,34437,34469,34457,34465,34471,34453,34456,34446,34461,34448,34452,34883,34884,34925,34933,34934,34930,34944,34929,34943,34927,34947,34942,34932,34940,35346,35911,35927,35963,36004,36003,36214,36216,36277,36279,36278,36561,36563,36862,36853,36866,36863,36859,36868,36860,36854,37078,37088,37081,37082,37091,37087,37093,37080,37083,37079,37084,37092,37200,37198,37199,37333,37346,37338,38492,38495,38588,39139,39647,39727,20095,20592,20586,20577,20574,20576,20563,20555,20573,20594,20552,20557,20545,20571,20554,20578,20501,20549,20575,20585,20587,20579,20580,20550,20544,20590,20595,20567,20561,20944,21099,21101,21100,21102,21206,21203,21293,21404,21877,21878,21820,21837,21840,21812,21802,21841,21858,21814,21813,21808,21842,21829,21772,21810,21861,21838,21817,21832,21805,21819,21824,21835,22282,22279,22523,22548,22498,22518,22492,22516,22528,22509,22525,22536,22520,22539,22515,22479,22535,22510,22499,22514,22501,22508,22497,22542,22524,22544,22503,22529,22540,22513,22505,22512,22541,22532,22876,23136,23128,23125,23143,23134,23096,23093,23149,23120,23135,23141,23148,23123,23140,23127,23107,23133,23122,23108,23131,23112,23182,23102,23117,23097,23116,23152,23145,23111,23121,23126,23106,23132,23410,23406,23489,23488,23641,23838,23819,23837,23834,23840,23820,23848,23821,23846,23845,23823,23856,23826,23843,23839,23854,24126,24116,24241,24244,24249,24242,24243,24374,24376,24475,24470,24479,24714,24720,24710,24766,24752,24762,24787,24788,24783,24804,24793,24797,24776,24753,24795,24759,24778,24767,24771,24781,24768,25394,25445,25482,25474,25469,25533,25502,25517,25501,25495,25515,25486,25455,25479,25488,25454,25519,25461,25500,25453,25518,25468,25508,25403,25503,25464,25477,25473,25489,25485,25456,25939,26061,26213,26209,26203,26201,26204,26210,26392,26745,26759,26768,26780,26733,26734,26798,26795,26966,26735,26787,26796,26793,26741,26740,26802,26767,26743,26770,26748,26731,26738,26794,26752,26737,26750,26779,26774,26763,26784,26761,26788,26744,26747,26769,26764,26762,26749,27446,27443,27447,27448,27537,27535,27533,27534,27532,27690,28096,28075,28084,28083,28276,28076,28137,28130,28087,28150,28116,28160,28104,28128,28127,28118,28094,28133,28124,28125,28123,28148,28106,28093,28141,28144,28090,28117,28098,28111,28105,28112,28146,28115,28157,28119,28109,28131,28091,28922,28941,28919,28951,28916,28940,28912,28932,28915,28944,28924,28927,28934,28947,28928,28920,28918,28939,28930,28942,29310,29307,29308,29311,29469,29463,29447,29457,29464,29450,29448,29439,29455,29470,29576,29686,29688,29685,29700,29697,29693,29703,29696,29690,29692,29695,29708,29707,29684,29704,30052,30051,30158,30162,30159,30155,30156,30161,30160,30351,30345,30419,30521,30511,30509,30513,30514,30516,30515,30525,30501,30523,30517,30792,30802,30793,30797,30794,30796,30758,30789,30800,31076,31079,31081,31082,31075,31083,31073,31163,31226,31224,31222,31223,31375,31380,31376,31541,31559,31540,31525,31536,31522,31524,31539,31512,31530,31517,31537,31531,31533,31535,31538,31544,31514,31523,31892,31896,31894,31907,32053,32061,32056,32054,32058,32069,32044,32041,32065,32071,32062,32063,32074,32059,32040,32611,32661,32668,32669,32667,32714,32715,32717,32720,32721,32711,32719,32713,32799,32798,32795,32839,32835,32840,33048,33061,33049,33051,33069,33055,33068,33054,33057,33045,33063,33053,33058,33297,33336,33331,33338,33332,33330,33396,33680,33699,33704,33677,33658,33651,33700,33652,33679,33665,33685,33689,33653,33684,33705,33661,33667,33676,33693,33691,33706,33675,33662,33701,33711,33672,33687,33712,33663,33702,33671,33710,33654,33690,34393,34390,34495,34487,34498,34497,34501,34490,34480,34504,34489,34483,34488,34508,34484,34491,34492,34499,34493,34494,34898,34953,34965,34984,34978,34986,34970,34961,34977,34975,34968,34983,34969,34971,34967,34980,34988,34956,34963,34958,35202,35286,35289,35285,35376,35367,35372,35358,35897,35899,35932,35933,35965,36005,36221,36219,36217,36284,36290,36281,36287,36289,36568,36574,36573,36572,36567,36576,36577,36900,36875,36881,36892,36876,36897,37103,37098,37104,37108,37106,37107,37076,37099,37100,37097,37206,37208,37210,37203,37205,37356,37364,37361,37363,37368,37348,37369,37354,37355,37367,37352,37358,38266,38278,38280,38524,38509,38507,38513,38511,38591,38762,38916,39141,39319,20635,20629,20628,20638,20619,20643,20611,20620,20622,20637,20584,20636,20626,20610,20615,20831,20948,21266,21265,21412,21415,21905,21928,21925,21933,21879,22085,21922,21907,21896,21903,21941,21889,21923,21906,21924,21885,21900,21926,21887,21909,21921,21902,22284,22569,22583,22553,22558,22567,22563,22568,22517,22600,22565,22556,22555,22579,22591,22582,22574,22585,22584,22573,22572,22587,22881,23215,23188,23199,23162,23202,23198,23160,23206,23164,23205,23212,23189,23214,23095,23172,23178,23191,23171,23179,23209,23163,23165,23180,23196,23183,23187,23197,23530,23501,23499,23508,23505,23498,23502,23564,23600,23863,23875,23915,23873,23883,23871,23861,23889,23886,23893,23859,23866,23890,23869,23857,23897,23874,23865,23881,23864,23868,23858,23862,23872,23877,24132,24129,24408,24486,24485,24491,24777,24761,24780,24802,24782,24772,24852,24818,24842,24854,24837,24821,24851,24824,24828,24830,24769,24835,24856,24861,24848,24831,24836,24843,25162,25492,25521,25520,25550,25573,25576,25583,25539,25757,25587,25546,25568,25590,25557,25586,25589,25697,25567,25534,25565,25564,25540,25560,25555,25538,25543,25548,25547,25544,25584,25559,25561,25906,25959,25962,25956,25948,25960,25957,25996,26013,26014,26030,26064,26066,26236,26220,26235,26240,26225,26233,26218,26226,26369,26892,26835,26884,26844,26922,26860,26858,26865,26895,26838,26871,26859,26852,26870,26899,26896,26867,26849,26887,26828,26888,26992,26804,26897,26863,26822,26900,26872,26832,26877,26876,26856,26891,26890,26903,26830,26824,26845,26846,26854,26868,26833,26886,26836,26857,26901,26917,26823,27449,27451,27455,27452,27540,27543,27545,27541,27581,27632,27634,27635,27696,28156,28230,28231,28191,28233,28296,28220,28221,28229,28258,28203,28223,28225,28253,28275,28188,28211,28235,28224,28241,28219,28163,28206,28254,28264,28252,28257,28209,28200,28256,28273,28267,28217,28194,28208,28243,28261,28199,28280,28260,28279,28245,28281,28242,28262,28213,28214,28250,28960,28958,28975,28923,28974,28977,28963,28965,28962,28978,28959,28968,28986,28955,29259,29274,29320,29321,29318,29317,29323,29458,29451,29488,29474,29489,29491,29479,29490,29485,29478,29475,29493,29452,29742,29740,29744,29739,29718,29722,29729,29741,29745,29732,29731,29725,29737,29728,29746,29947,29999,30063,30060,30183,30170,30177,30182,30173,30175,30180,30167,30357,30354,30426,30534,30535,30532,30541,30533,30538,30542,30539,30540,30686,30700,30816,30820,30821,30812,30829,30833,30826,30830,30832,30825,30824,30814,30818,31092,31091,31090,31088,31234,31242,31235,31244,31236,31385,31462,31460,31562,31547,31556,31560,31564,31566,31552,31576,31557,31906,31902,31912,31905,32088,32111,32099,32083,32086,32103,32106,32079,32109,32092,32107,32082,32084,32105,32081,32095,32078,32574,32575,32613,32614,32674,32672,32673,32727,32849,32847,32848,33022,32980,33091,33098,33106,33103,33095,33085,33101,33082,33254,33262,33271,33272,33273,33284,33340,33341,33343,33397,33595,33743,33785,33827,33728,33768,33810,33767,33764,33788,33782,33808,33734,33736,33771,33763,33727,33793,33757,33765,33752,33791,33761,33739,33742,33750,33781,33737,33801,33807,33758,33809,33798,33730,33779,33749,33786,33735,33745,33770,33811,33731,33772,33774,33732,33787,33751,33762,33819,33755,33790,34520,34530,34534,34515,34531,34522,34538,34525,34539,34524,34540,34537,34519,34536,34513,34888,34902,34901,35002,35031,35001,35e3,35008,35006,34998,35004,34999,35005,34994,35073,35017,35221,35224,35223,35293,35290,35291,35406,35405,35385,35417,35392,35415,35416,35396,35397,35410,35400,35409,35402,35404,35407,35935,35969,35968,36026,36030,36016,36025,36021,36228,36224,36233,36312,36307,36301,36295,36310,36316,36303,36309,36313,36296,36311,36293,36591,36599,36602,36601,36582,36590,36581,36597,36583,36584,36598,36587,36593,36588,36596,36585,36909,36916,36911,37126,37164,37124,37119,37116,37128,37113,37115,37121,37120,37127,37125,37123,37217,37220,37215,37218,37216,37377,37386,37413,37379,37402,37414,37391,37388,37376,37394,37375,37373,37382,37380,37415,37378,37404,37412,37401,37399,37381,37398,38267,38285,38284,38288,38535,38526,38536,38537,38531,38528,38594,38600,38595,38641,38640,38764,38768,38766,38919,39081,39147,40166,40697,20099,20100,20150,20669,20671,20678,20654,20676,20682,20660,20680,20674,20656,20673,20666,20657,20683,20681,20662,20664,20951,21114,21112,21115,21116,21955,21979,21964,21968,21963,21962,21981,21952,21972,21956,21993,21951,21970,21901,21967,21973,21986,21974,21960,22002,21965,21977,21954,22292,22611,22632,22628,22607,22605,22601,22639,22613,22606,22621,22617,22629,22619,22589,22627,22641,22780,23239,23236,23243,23226,23224,23217,23221,23216,23231,23240,23227,23238,23223,23232,23242,23220,23222,23245,23225,23184,23510,23512,23513,23583,23603,23921,23907,23882,23909,23922,23916,23902,23912,23911,23906,24048,24143,24142,24138,24141,24139,24261,24268,24262,24267,24263,24384,24495,24493,24823,24905,24906,24875,24901,24886,24882,24878,24902,24879,24911,24873,24896,25120,37224,25123,25125,25124,25541,25585,25579,25616,25618,25609,25632,25636,25651,25667,25631,25621,25624,25657,25655,25634,25635,25612,25638,25648,25640,25665,25653,25647,25610,25626,25664,25637,25639,25611,25575,25627,25646,25633,25614,25967,26002,26067,26246,26252,26261,26256,26251,26250,26265,26260,26232,26400,26982,26975,26936,26958,26978,26993,26943,26949,26986,26937,26946,26967,26969,27002,26952,26953,26933,26988,26931,26941,26981,26864,27e3,26932,26985,26944,26991,26948,26998,26968,26945,26996,26956,26939,26955,26935,26972,26959,26961,26930,26962,26927,27003,26940,27462,27461,27459,27458,27464,27457,27547,64013,27643,27644,27641,27639,27640,28315,28374,28360,28303,28352,28319,28307,28308,28320,28337,28345,28358,28370,28349,28353,28318,28361,28343,28336,28365,28326,28367,28338,28350,28355,28380,28376,28313,28306,28302,28301,28324,28321,28351,28339,28368,28362,28311,28334,28323,28999,29012,29010,29027,29024,28993,29021,29026,29042,29048,29034,29025,28994,29016,28995,29003,29040,29023,29008,29011,28996,29005,29018,29263,29325,29324,29329,29328,29326,29500,29506,29499,29498,29504,29514,29513,29764,29770,29771,29778,29777,29783,29760,29775,29776,29774,29762,29766,29773,29780,29921,29951,29950,29949,29981,30073,30071,27011,30191,30223,30211,30199,30206,30204,30201,30200,30224,30203,30198,30189,30197,30205,30361,30389,30429,30549,30559,30560,30546,30550,30554,30569,30567,30548,30553,30573,30688,30855,30874,30868,30863,30852,30869,30853,30854,30881,30851,30841,30873,30848,30870,30843,31100,31106,31101,31097,31249,31256,31257,31250,31255,31253,31266,31251,31259,31248,31395,31394,31390,31467,31590,31588,31597,31604,31593,31602,31589,31603,31601,31600,31585,31608,31606,31587,31922,31924,31919,32136,32134,32128,32141,32127,32133,32122,32142,32123,32131,32124,32140,32148,32132,32125,32146,32621,32619,32615,32616,32620,32678,32677,32679,32731,32732,32801,33124,33120,33143,33116,33129,33115,33122,33138,26401,33118,33142,33127,33135,33092,33121,33309,33353,33348,33344,33346,33349,34033,33855,33878,33910,33913,33935,33933,33893,33873,33856,33926,33895,33840,33869,33917,33882,33881,33908,33907,33885,34055,33886,33847,33850,33844,33914,33859,33912,33842,33861,33833,33753,33867,33839,33858,33837,33887,33904,33849,33870,33868,33874,33903,33989,33934,33851,33863,33846,33843,33896,33918,33860,33835,33888,33876,33902,33872,34571,34564,34551,34572,34554,34518,34549,34637,34552,34574,34569,34561,34550,34573,34565,35030,35019,35021,35022,35038,35035,35034,35020,35024,35205,35227,35295,35301,35300,35297,35296,35298,35292,35302,35446,35462,35455,35425,35391,35447,35458,35460,35445,35459,35457,35444,35450,35900,35915,35914,35941,35940,35942,35974,35972,35973,36044,36200,36201,36241,36236,36238,36239,36237,36243,36244,36240,36242,36336,36320,36332,36337,36334,36304,36329,36323,36322,36327,36338,36331,36340,36614,36607,36609,36608,36613,36615,36616,36610,36619,36946,36927,36932,36937,36925,37136,37133,37135,37137,37142,37140,37131,37134,37230,37231,37448,37458,37424,37434,37478,37427,37477,37470,37507,37422,37450,37446,37485,37484,37455,37472,37479,37487,37430,37473,37488,37425,37460,37475,37456,37490,37454,37459,37452,37462,37426,38303,38300,38302,38299,38546,38547,38545,38551,38606,38650,38653,38648,38645,38771,38775,38776,38770,38927,38925,38926,39084,39158,39161,39343,39346,39344,39349,39597,39595,39771,40170,40173,40167,40576,40701,20710,20692,20695,20712,20723,20699,20714,20701,20708,20691,20716,20720,20719,20707,20704,20952,21120,21121,21225,21227,21296,21420,22055,22037,22028,22034,22012,22031,22044,22017,22035,22018,22010,22045,22020,22015,22009,22665,22652,22672,22680,22662,22657,22655,22644,22667,22650,22663,22673,22670,22646,22658,22664,22651,22676,22671,22782,22891,23260,23278,23269,23253,23274,23258,23277,23275,23283,23266,23264,23259,23276,23262,23261,23257,23272,23263,23415,23520,23523,23651,23938,23936,23933,23942,23930,23937,23927,23946,23945,23944,23934,23932,23949,23929,23935,24152,24153,24147,24280,24273,24279,24270,24284,24277,24281,24274,24276,24388,24387,24431,24502,24876,24872,24897,24926,24945,24947,24914,24915,24946,24940,24960,24948,24916,24954,24923,24933,24891,24938,24929,24918,25129,25127,25131,25643,25677,25691,25693,25716,25718,25714,25715,25725,25717,25702,25766,25678,25730,25694,25692,25675,25683,25696,25680,25727,25663,25708,25707,25689,25701,25719,25971,26016,26273,26272,26271,26373,26372,26402,27057,27062,27081,27040,27086,27030,27056,27052,27068,27025,27033,27022,27047,27021,27049,27070,27055,27071,27076,27069,27044,27092,27065,27082,27034,27087,27059,27027,27050,27041,27038,27097,27031,27024,27074,27061,27045,27078,27466,27469,27467,27550,27551,27552,27587,27588,27646,28366,28405,28401,28419,28453,28408,28471,28411,28462,28425,28494,28441,28442,28455,28440,28475,28434,28397,28426,28470,28531,28409,28398,28461,28480,28464,28476,28469,28395,28423,28430,28483,28421,28413,28406,28473,28444,28412,28474,28447,28429,28446,28424,28449,29063,29072,29065,29056,29061,29058,29071,29051,29062,29057,29079,29252,29267,29335,29333,29331,29507,29517,29521,29516,29794,29811,29809,29813,29810,29799,29806,29952,29954,29955,30077,30096,30230,30216,30220,30229,30225,30218,30228,30392,30593,30588,30597,30594,30574,30592,30575,30590,30595,30898,30890,30900,30893,30888,30846,30891,30878,30885,30880,30892,30882,30884,31128,31114,31115,31126,31125,31124,31123,31127,31112,31122,31120,31275,31306,31280,31279,31272,31270,31400,31403,31404,31470,31624,31644,31626,31633,31632,31638,31629,31628,31643,31630,31621,31640,21124,31641,31652,31618,31931,31935,31932,31930,32167,32183,32194,32163,32170,32193,32192,32197,32157,32206,32196,32198,32203,32204,32175,32185,32150,32188,32159,32166,32174,32169,32161,32201,32627,32738,32739,32741,32734,32804,32861,32860,33161,33158,33155,33159,33165,33164,33163,33301,33943,33956,33953,33951,33978,33998,33986,33964,33966,33963,33977,33972,33985,33997,33962,33946,33969,34e3,33949,33959,33979,33954,33940,33991,33996,33947,33961,33967,33960,34006,33944,33974,33999,33952,34007,34004,34002,34011,33968,33937,34401,34611,34595,34600,34667,34624,34606,34590,34593,34585,34587,34627,34604,34625,34622,34630,34592,34610,34602,34605,34620,34578,34618,34609,34613,34626,34598,34599,34616,34596,34586,34608,34577,35063,35047,35057,35058,35066,35070,35054,35068,35062,35067,35056,35052,35051,35229,35233,35231,35230,35305,35307,35304,35499,35481,35467,35474,35471,35478,35901,35944,35945,36053,36047,36055,36246,36361,36354,36351,36365,36349,36362,36355,36359,36358,36357,36350,36352,36356,36624,36625,36622,36621,37155,37148,37152,37154,37151,37149,37146,37156,37153,37147,37242,37234,37241,37235,37541,37540,37494,37531,37498,37536,37524,37546,37517,37542,37530,37547,37497,37527,37503,37539,37614,37518,37506,37525,37538,37501,37512,37537,37514,37510,37516,37529,37543,37502,37511,37545,37533,37515,37421,38558,38561,38655,38744,38781,38778,38782,38787,38784,38786,38779,38788,38785,38783,38862,38861,38934,39085,39086,39170,39168,39175,39325,39324,39363,39353,39355,39354,39362,39357,39367,39601,39651,39655,39742,39743,39776,39777,39775,40177,40178,40181,40615,20735,20739,20784,20728,20742,20743,20726,20734,20747,20748,20733,20746,21131,21132,21233,21231,22088,22082,22092,22069,22081,22090,22089,22086,22104,22106,22080,22067,22077,22060,22078,22072,22058,22074,22298,22699,22685,22705,22688,22691,22703,22700,22693,22689,22783,23295,23284,23293,23287,23286,23299,23288,23298,23289,23297,23303,23301,23311,23655,23961,23959,23967,23954,23970,23955,23957,23968,23964,23969,23962,23966,24169,24157,24160,24156,32243,24283,24286,24289,24393,24498,24971,24963,24953,25009,25008,24994,24969,24987,24979,25007,25005,24991,24978,25002,24993,24973,24934,25011,25133,25710,25712,25750,25760,25733,25751,25756,25743,25739,25738,25740,25763,25759,25704,25777,25752,25974,25978,25977,25979,26034,26035,26293,26288,26281,26290,26295,26282,26287,27136,27142,27159,27109,27128,27157,27121,27108,27168,27135,27116,27106,27163,27165,27134,27175,27122,27118,27156,27127,27111,27200,27144,27110,27131,27149,27132,27115,27145,27140,27160,27173,27151,27126,27174,27143,27124,27158,27473,27557,27555,27554,27558,27649,27648,27647,27650,28481,28454,28542,28551,28614,28562,28557,28553,28556,28514,28495,28549,28506,28566,28534,28524,28546,28501,28530,28498,28496,28503,28564,28563,28509,28416,28513,28523,28541,28519,28560,28499,28555,28521,28543,28565,28515,28535,28522,28539,29106,29103,29083,29104,29088,29082,29097,29109,29085,29093,29086,29092,29089,29098,29084,29095,29107,29336,29338,29528,29522,29534,29535,29536,29533,29531,29537,29530,29529,29538,29831,29833,29834,29830,29825,29821,29829,29832,29820,29817,29960,29959,30078,30245,30238,30233,30237,30236,30243,30234,30248,30235,30364,30365,30366,30363,30605,30607,30601,30600,30925,30907,30927,30924,30929,30926,30932,30920,30915,30916,30921,31130,31137,31136,31132,31138,31131,27510,31289,31410,31412,31411,31671,31691,31678,31660,31694,31663,31673,31690,31669,31941,31944,31948,31947,32247,32219,32234,32231,32215,32225,32259,32250,32230,32246,32241,32240,32238,32223,32630,32684,32688,32685,32749,32747,32746,32748,32742,32744,32868,32871,33187,33183,33182,33173,33186,33177,33175,33302,33359,33363,33362,33360,33358,33361,34084,34107,34063,34048,34089,34062,34057,34061,34079,34058,34087,34076,34043,34091,34042,34056,34060,34036,34090,34034,34069,34039,34027,34035,34044,34066,34026,34025,34070,34046,34088,34077,34094,34050,34045,34078,34038,34097,34086,34023,34024,34032,34031,34041,34072,34080,34096,34059,34073,34095,34402,34646,34659,34660,34679,34785,34675,34648,34644,34651,34642,34657,34650,34641,34654,34669,34666,34640,34638,34655,34653,34671,34668,34682,34670,34652,34661,34639,34683,34677,34658,34663,34665,34906,35077,35084,35092,35083,35095,35096,35097,35078,35094,35089,35086,35081,35234,35236,35235,35309,35312,35308,35535,35526,35512,35539,35537,35540,35541,35515,35543,35518,35520,35525,35544,35523,35514,35517,35545,35902,35917,35983,36069,36063,36057,36072,36058,36061,36071,36256,36252,36257,36251,36384,36387,36389,36388,36398,36373,36379,36374,36369,36377,36390,36391,36372,36370,36376,36371,36380,36375,36378,36652,36644,36632,36634,36640,36643,36630,36631,36979,36976,36975,36967,36971,37167,37163,37161,37162,37170,37158,37166,37253,37254,37258,37249,37250,37252,37248,37584,37571,37572,37568,37593,37558,37583,37617,37599,37592,37609,37591,37597,37580,37615,37570,37608,37578,37576,37582,37606,37581,37589,37577,37600,37598,37607,37585,37587,37557,37601,37574,37556,38268,38316,38315,38318,38320,38564,38562,38611,38661,38664,38658,38746,38794,38798,38792,38864,38863,38942,38941,38950,38953,38952,38944,38939,38951,39090,39176,39162,39185,39188,39190,39191,39189,39388,39373,39375,39379,39380,39374,39369,39382,39384,39371,39383,39372,39603,39660,39659,39667,39666,39665,39750,39747,39783,39796,39793,39782,39798,39797,39792,39784,39780,39788,40188,40186,40189,40191,40183,40199,40192,40185,40187,40200,40197,40196,40579,40659,40719,40720,20764,20755,20759,20762,20753,20958,21300,21473,22128,22112,22126,22131,22118,22115,22125,22130,22110,22135,22300,22299,22728,22717,22729,22719,22714,22722,22716,22726,23319,23321,23323,23329,23316,23315,23312,23318,23336,23322,23328,23326,23535,23980,23985,23977,23975,23989,23984,23982,23978,23976,23986,23981,23983,23988,24167,24168,24166,24175,24297,24295,24294,24296,24293,24395,24508,24989,25e3,24982,25029,25012,25030,25025,25036,25018,25023,25016,24972,25815,25814,25808,25807,25801,25789,25737,25795,25819,25843,25817,25907,25983,25980,26018,26312,26302,26304,26314,26315,26319,26301,26299,26298,26316,26403,27188,27238,27209,27239,27186,27240,27198,27229,27245,27254,27227,27217,27176,27226,27195,27199,27201,27242,27236,27216,27215,27220,27247,27241,27232,27196,27230,27222,27221,27213,27214,27206,27477,27476,27478,27559,27562,27563,27592,27591,27652,27651,27654,28589,28619,28579,28615,28604,28622,28616,28510,28612,28605,28574,28618,28584,28676,28581,28590,28602,28588,28586,28623,28607,28600,28578,28617,28587,28621,28591,28594,28592,29125,29122,29119,29112,29142,29120,29121,29131,29140,29130,29127,29135,29117,29144,29116,29126,29146,29147,29341,29342,29545,29542,29543,29548,29541,29547,29546,29823,29850,29856,29844,29842,29845,29857,29963,30080,30255,30253,30257,30269,30259,30268,30261,30258,30256,30395,30438,30618,30621,30625,30620,30619,30626,30627,30613,30617,30615,30941,30953,30949,30954,30942,30947,30939,30945,30946,30957,30943,30944,31140,31300,31304,31303,31414,31416,31413,31409,31415,31710,31715,31719,31709,31701,31717,31706,31720,31737,31700,31722,31714,31708,31723,31704,31711,31954,31956,31959,31952,31953,32274,32289,32279,32268,32287,32288,32275,32270,32284,32277,32282,32290,32267,32271,32278,32269,32276,32293,32292,32579,32635,32636,32634,32689,32751,32810,32809,32876,33201,33190,33198,33209,33205,33195,33200,33196,33204,33202,33207,33191,33266,33365,33366,33367,34134,34117,34155,34125,34131,34145,34136,34112,34118,34148,34113,34146,34116,34129,34119,34147,34110,34139,34161,34126,34158,34165,34133,34151,34144,34188,34150,34141,34132,34149,34156,34403,34405,34404,34715,34703,34711,34707,34706,34696,34689,34710,34712,34681,34695,34723,34693,34704,34705,34717,34692,34708,34716,34714,34697,35102,35110,35120,35117,35118,35111,35121,35106,35113,35107,35119,35116,35103,35313,35552,35554,35570,35572,35573,35549,35604,35556,35551,35568,35528,35550,35553,35560,35583,35567,35579,35985,35986,35984,36085,36078,36081,36080,36083,36204,36206,36261,36263,36403,36414,36408,36416,36421,36406,36412,36413,36417,36400,36415,36541,36662,36654,36661,36658,36665,36663,36660,36982,36985,36987,36998,37114,37171,37173,37174,37267,37264,37265,37261,37263,37671,37662,37640,37663,37638,37647,37754,37688,37692,37659,37667,37650,37633,37702,37677,37646,37645,37579,37661,37626,37669,37651,37625,37623,37684,37634,37668,37631,37673,37689,37685,37674,37652,37644,37643,37630,37641,37632,37627,37654,38332,38349,38334,38329,38330,38326,38335,38325,38333,38569,38612,38667,38674,38672,38809,38807,38804,38896,38904,38965,38959,38962,39204,39199,39207,39209,39326,39406,39404,39397,39396,39408,39395,39402,39401,39399,39609,39615,39604,39611,39670,39674,39673,39671,39731,39808,39813,39815,39804,39806,39803,39810,39827,39826,39824,39802,39829,39805,39816,40229,40215,40224,40222,40212,40233,40221,40216,40226,40208,40217,40223,40584,40582,40583,40622,40621,40661,40662,40698,40722,40765,20774,20773,20770,20772,20768,20777,21236,22163,22156,22157,22150,22148,22147,22142,22146,22143,22145,22742,22740,22735,22738,23341,23333,23346,23331,23340,23335,23334,23343,23342,23419,23537,23538,23991,24172,24170,24510,24507,25027,25013,25020,25063,25056,25061,25060,25064,25054,25839,25833,25827,25835,25828,25832,25985,25984,26038,26074,26322,27277,27286,27265,27301,27273,27295,27291,27297,27294,27271,27283,27278,27285,27267,27304,27300,27281,27263,27302,27290,27269,27276,27282,27483,27565,27657,28620,28585,28660,28628,28643,28636,28653,28647,28646,28638,28658,28637,28642,28648,29153,29169,29160,29170,29156,29168,29154,29555,29550,29551,29847,29874,29867,29840,29866,29869,29873,29861,29871,29968,29969,29970,29967,30084,30275,30280,30281,30279,30372,30441,30645,30635,30642,30647,30646,30644,30641,30632,30704,30963,30973,30978,30971,30972,30962,30981,30969,30974,30980,31147,31144,31324,31323,31318,31320,31316,31322,31422,31424,31425,31749,31759,31730,31744,31743,31739,31758,31732,31755,31731,31746,31753,31747,31745,31736,31741,31750,31728,31729,31760,31754,31976,32301,32316,32322,32307,38984,32312,32298,32329,32320,32327,32297,32332,32304,32315,32310,32324,32314,32581,32639,32638,32637,32756,32754,32812,33211,33220,33228,33226,33221,33223,33212,33257,33371,33370,33372,34179,34176,34191,34215,34197,34208,34187,34211,34171,34212,34202,34206,34167,34172,34185,34209,34170,34168,34135,34190,34198,34182,34189,34201,34205,34177,34210,34178,34184,34181,34169,34166,34200,34192,34207,34408,34750,34730,34733,34757,34736,34732,34745,34741,34748,34734,34761,34755,34754,34764,34743,34735,34756,34762,34740,34742,34751,34744,34749,34782,34738,35125,35123,35132,35134,35137,35154,35127,35138,35245,35247,35246,35314,35315,35614,35608,35606,35601,35589,35595,35618,35599,35602,35605,35591,35597,35592,35590,35612,35603,35610,35919,35952,35954,35953,35951,35989,35988,36089,36207,36430,36429,36435,36432,36428,36423,36675,36672,36997,36990,37176,37274,37282,37275,37273,37279,37281,37277,37280,37793,37763,37807,37732,37718,37703,37756,37720,37724,37750,37705,37712,37713,37728,37741,37775,37708,37738,37753,37719,37717,37714,37711,37745,37751,37755,37729,37726,37731,37735,37760,37710,37721,38343,38336,38345,38339,38341,38327,38574,38576,38572,38688,38687,38680,38685,38681,38810,38817,38812,38814,38813,38869,38868,38897,38977,38980,38986,38985,38981,38979,39205,39211,39212,39210,39219,39218,39215,39213,39217,39216,39320,39331,39329,39426,39418,39412,39415,39417,39416,39414,39419,39421,39422,39420,39427,39614,39678,39677,39681,39676,39752,39834,39848,39838,39835,39846,39841,39845,39844,39814,39842,39840,39855,40243,40257,40295,40246,40238,40239,40241,40248,40240,40261,40258,40259,40254,40247,40256,40253,32757,40237,40586,40585,40589,40624,40648,40666,40699,40703,40740,40739,40738,40788,40864,20785,20781,20782,22168,22172,22167,22170,22173,22169,22896,23356,23657,23658,24e3,24173,24174,25048,25055,25069,25070,25073,25066,25072,25067,25046,25065,25855,25860,25853,25848,25857,25859,25852,26004,26075,26330,26331,26328,27333,27321,27325,27361,27334,27322,27318,27319,27335,27316,27309,27486,27593,27659,28679,28684,28685,28673,28677,28692,28686,28671,28672,28667,28710,28668,28663,28682,29185,29183,29177,29187,29181,29558,29880,29888,29877,29889,29886,29878,29883,29890,29972,29971,30300,30308,30297,30288,30291,30295,30298,30374,30397,30444,30658,30650,30975,30988,30995,30996,30985,30992,30994,30993,31149,31148,31327,31772,31785,31769,31776,31775,31789,31773,31782,31784,31778,31781,31792,32348,32336,32342,32355,32344,32354,32351,32337,32352,32343,32339,32693,32691,32759,32760,32885,33233,33234,33232,33375,33374,34228,34246,34240,34243,34242,34227,34229,34237,34247,34244,34239,34251,34254,34248,34245,34225,34230,34258,34340,34232,34231,34238,34409,34791,34790,34786,34779,34795,34794,34789,34783,34803,34788,34772,34780,34771,34797,34776,34787,34724,34775,34777,34817,34804,34792,34781,35155,35147,35151,35148,35142,35152,35153,35145,35626,35623,35619,35635,35632,35637,35655,35631,35644,35646,35633,35621,35639,35622,35638,35630,35620,35643,35645,35642,35906,35957,35993,35992,35991,36094,36100,36098,36096,36444,36450,36448,36439,36438,36446,36453,36455,36443,36442,36449,36445,36457,36436,36678,36679,36680,36683,37160,37178,37179,37182,37288,37285,37287,37295,37290,37813,37772,37778,37815,37787,37789,37769,37799,37774,37802,37790,37798,37781,37768,37785,37791,37773,37809,37777,37810,37796,37800,37812,37795,37797,38354,38355,38353,38579,38615,38618,24002,38623,38616,38621,38691,38690,38693,38828,38830,38824,38827,38820,38826,38818,38821,38871,38873,38870,38872,38906,38992,38993,38994,39096,39233,39228,39226,39439,39435,39433,39437,39428,39441,39434,39429,39431,39430,39616,39644,39688,39684,39685,39721,39733,39754,39756,39755,39879,39878,39875,39871,39873,39861,39864,39891,39862,39876,39865,39869,40284,40275,40271,40266,40283,40267,40281,40278,40268,40279,40274,40276,40287,40280,40282,40590,40588,40671,40705,40704,40726,40741,40747,40746,40745,40744,40780,40789,20788,20789,21142,21239,21428,22187,22189,22182,22183,22186,22188,22746,22749,22747,22802,23357,23358,23359,24003,24176,24511,25083,25863,25872,25869,25865,25868,25870,25988,26078,26077,26334,27367,27360,27340,27345,27353,27339,27359,27356,27344,27371,27343,27341,27358,27488,27568,27660,28697,28711,28704,28694,28715,28705,28706,28707,28713,28695,28708,28700,28714,29196,29194,29191,29186,29189,29349,29350,29348,29347,29345,29899,29893,29879,29891,29974,30304,30665,30666,30660,30705,31005,31003,31009,31004,30999,31006,31152,31335,31336,31795,31804,31801,31788,31803,31980,31978,32374,32373,32376,32368,32375,32367,32378,32370,32372,32360,32587,32586,32643,32646,32695,32765,32766,32888,33239,33237,33380,33377,33379,34283,34289,34285,34265,34273,34280,34266,34263,34284,34290,34296,34264,34271,34275,34268,34257,34288,34278,34287,34270,34274,34816,34810,34819,34806,34807,34825,34828,34827,34822,34812,34824,34815,34826,34818,35170,35162,35163,35159,35169,35164,35160,35165,35161,35208,35255,35254,35318,35664,35656,35658,35648,35667,35670,35668,35659,35669,35665,35650,35666,35671,35907,35959,35958,35994,36102,36103,36105,36268,36266,36269,36267,36461,36472,36467,36458,36463,36475,36546,36690,36689,36687,36688,36691,36788,37184,37183,37296,37293,37854,37831,37839,37826,37850,37840,37881,37868,37836,37849,37801,37862,37834,37844,37870,37859,37845,37828,37838,37824,37842,37863,38269,38362,38363,38625,38697,38699,38700,38696,38694,38835,38839,38838,38877,38878,38879,39004,39001,39005,38999,39103,39101,39099,39102,39240,39239,39235,39334,39335,39450,39445,39461,39453,39460,39451,39458,39456,39463,39459,39454,39452,39444,39618,39691,39690,39694,39692,39735,39914,39915,39904,39902,39908,39910,39906,39920,39892,39895,39916,39900,39897,39909,39893,39905,39898,40311,40321,40330,40324,40328,40305,40320,40312,40326,40331,40332,40317,40299,40308,40309,40304,40297,40325,40307,40315,40322,40303,40313,40319,40327,40296,40596,40593,40640,40700,40749,40768,40769,40781,40790,40791,40792,21303,22194,22197,22195,22755,23365,24006,24007,24302,24303,24512,24513,25081,25879,25878,25877,25875,26079,26344,26339,26340,27379,27376,27370,27368,27385,27377,27374,27375,28732,28725,28719,28727,28724,28721,28738,28728,28735,28730,28729,28736,28731,28723,28737,29203,29204,29352,29565,29564,29882,30379,30378,30398,30445,30668,30670,30671,30669,30706,31013,31011,31015,31016,31012,31017,31154,31342,31340,31341,31479,31817,31816,31818,31815,31813,31982,32379,32382,32385,32384,32698,32767,32889,33243,33241,33291,33384,33385,34338,34303,34305,34302,34331,34304,34294,34308,34313,34309,34316,34301,34841,34832,34833,34839,34835,34838,35171,35174,35257,35319,35680,35690,35677,35688,35683,35685,35687,35693,36270,36486,36488,36484,36697,36694,36695,36693,36696,36698,37005,37187,37185,37303,37301,37298,37299,37899,37907,37883,37920,37903,37908,37886,37909,37904,37928,37913,37901,37877,37888,37879,37895,37902,37910,37906,37882,37897,37880,37898,37887,37884,37900,37878,37905,37894,38366,38368,38367,38702,38703,38841,38843,38909,38910,39008,39010,39011,39007,39105,39106,39248,39246,39257,39244,39243,39251,39474,39476,39473,39468,39466,39478,39465,39470,39480,39469,39623,39626,39622,39696,39698,39697,39947,39944,39927,39941,39954,39928,4e4,39943,39950,39942,39959,39956,39945,40351,40345,40356,40349,40338,40344,40336,40347,40352,40340,40348,40362,40343,40353,40346,40354,40360,40350,40355,40383,40361,40342,40358,40359,40601,40603,40602,40677,40676,40679,40678,40752,40750,40795,40800,40798,40797,40793,40849,20794,20793,21144,21143,22211,22205,22206,23368,23367,24011,24015,24305,25085,25883,27394,27388,27395,27384,27392,28739,28740,28746,28744,28745,28741,28742,29213,29210,29209,29566,29975,30314,30672,31021,31025,31023,31828,31827,31986,32394,32391,32392,32395,32390,32397,32589,32699,32816,33245,34328,34346,34342,34335,34339,34332,34329,34343,34350,34337,34336,34345,34334,34341,34857,34845,34843,34848,34852,34844,34859,34890,35181,35177,35182,35179,35322,35705,35704,35653,35706,35707,36112,36116,36271,36494,36492,36702,36699,36701,37190,37188,37189,37305,37951,37947,37942,37929,37949,37948,37936,37945,37930,37943,37932,37952,37937,38373,38372,38371,38709,38714,38847,38881,39012,39113,39110,39104,39256,39254,39481,39485,39494,39492,39490,39489,39482,39487,39629,39701,39703,39704,39702,39738,39762,39979,39965,39964,39980,39971,39976,39977,39972,39969,40375,40374,40380,40385,40391,40394,40399,40382,40389,40387,40379,40373,40398,40377,40378,40364,40392,40369,40365,40396,40371,40397,40370,40570,40604,40683,40686,40685,40731,40728,40730,40753,40782,40805,40804,40850,20153,22214,22213,22219,22897,23371,23372,24021,24017,24306,25889,25888,25894,25890,27403,27400,27401,27661,28757,28758,28759,28754,29214,29215,29353,29567,29912,29909,29913,29911,30317,30381,31029,31156,31344,31345,31831,31836,31833,31835,31834,31988,31985,32401,32591,32647,33246,33387,34356,34357,34355,34348,34354,34358,34860,34856,34854,34858,34853,35185,35263,35262,35323,35710,35716,35714,35718,35717,35711,36117,36501,36500,36506,36498,36496,36502,36503,36704,36706,37191,37964,37968,37962,37963,37967,37959,37957,37960,37961,37958,38719,38883,39018,39017,39115,39252,39259,39502,39507,39508,39500,39503,39496,39498,39497,39506,39504,39632,39705,39723,39739,39766,39765,40006,40008,39999,40004,39993,39987,40001,39996,39991,39988,39986,39997,39990,40411,40402,40414,40410,40395,40400,40412,40401,40415,40425,40409,40408,40406,40437,40405,40413,40630,40688,40757,40755,40754,40770,40811,40853,40866,20797,21145,22760,22759,22898,23373,24024,34863,24399,25089,25091,25092,25897,25893,26006,26347,27409,27410,27407,27594,28763,28762,29218,29570,29569,29571,30320,30676,31847,31846,32405,33388,34362,34368,34361,34364,34353,34363,34366,34864,34866,34862,34867,35190,35188,35187,35326,35724,35726,35723,35720,35909,36121,36504,36708,36707,37308,37986,37973,37981,37975,37982,38852,38853,38912,39510,39513,39710,39711,39712,40018,40024,40016,40010,40013,40011,40021,40025,40012,40014,40443,40439,40431,40419,40427,40440,40420,40438,40417,40430,40422,40434,40432,40418,40428,40436,40435,40424,40429,40642,40656,40690,40691,40710,40732,40760,40759,40758,40771,40783,40817,40816,40814,40815,22227,22221,23374,23661,25901,26349,26350,27411,28767,28769,28765,28768,29219,29915,29925,30677,31032,31159,31158,31850,32407,32649,33389,34371,34872,34871,34869,34891,35732,35733,36510,36511,36512,36509,37310,37309,37314,37995,37992,37993,38629,38726,38723,38727,38855,38885,39518,39637,39769,40035,40039,40038,40034,40030,40032,40450,40446,40455,40451,40454,40453,40448,40449,40457,40447,40445,40452,40608,40734,40774,40820,40821,40822,22228,25902,26040,27416,27417,27415,27418,28770,29222,29354,30680,30681,31033,31849,31851,31990,32410,32408,32411,32409,33248,33249,34374,34375,34376,35193,35194,35196,35195,35327,35736,35737,36517,36516,36515,37998,37997,37999,38001,38003,38729,39026,39263,40040,40046,40045,40459,40461,40464,40463,40466,40465,40609,40693,40713,40775,40824,40827,40826,40825,22302,28774,31855,34876,36274,36518,37315,38004,38008,38006,38005,39520,40052,40051,40049,40053,40468,40467,40694,40714,40868,28776,28773,31991,34410,34878,34877,34879,35742,35996,36521,36553,38731,39027,39028,39116,39265,39339,39524,39526,39527,39716,40469,40471,40776,25095,27422,29223,34380,36520,38018,38016,38017,39529,39528,39726,40473,29225,34379,35743,38019,40057,40631,30325,39531,40058,40477,28777,28778,40612,40830,40777,40856,30849,37561,35023,22715,24658,31911,23290,9556,9574,9559,9568,9580,9571,9562,9577,9565,9554,9572,9557,9566,9578,9569,9560,9575,9563,9555,9573,9558,9567,9579,9570,9561,9576,9564,9553,9552,9581,9582,9584,9583,65517,132423,37595,132575,147397,34124,17077,29679,20917,13897,149826,166372,37700,137691,33518,146632,30780,26436,25311,149811,166314,131744,158643,135941,20395,140525,20488,159017,162436,144896,150193,140563,20521,131966,24484,131968,131911,28379,132127,20605,20737,13434,20750,39020,14147,33814,149924,132231,20832,144308,20842,134143,139516,131813,140592,132494,143923,137603,23426,34685,132531,146585,20914,20920,40244,20937,20943,20945,15580,20947,150182,20915,20962,21314,20973,33741,26942,145197,24443,21003,21030,21052,21173,21079,21140,21177,21189,31765,34114,21216,34317,158483,21253,166622,21833,28377,147328,133460,147436,21299,21316,134114,27851,136998,26651,29653,24650,16042,14540,136936,29149,17570,21357,21364,165547,21374,21375,136598,136723,30694,21395,166555,21408,21419,21422,29607,153458,16217,29596,21441,21445,27721,20041,22526,21465,15019,134031,21472,147435,142755,21494,134263,21523,28793,21803,26199,27995,21613,158547,134516,21853,21647,21668,18342,136973,134877,15796,134477,166332,140952,21831,19693,21551,29719,21894,21929,22021,137431,147514,17746,148533,26291,135348,22071,26317,144010,26276,26285,22093,22095,30961,22257,38791,21502,22272,22255,22253,166758,13859,135759,22342,147877,27758,28811,22338,14001,158846,22502,136214,22531,136276,148323,22566,150517,22620,22698,13665,22752,22748,135740,22779,23551,22339,172368,148088,37843,13729,22815,26790,14019,28249,136766,23076,21843,136850,34053,22985,134478,158849,159018,137180,23001,137211,137138,159142,28017,137256,136917,23033,159301,23211,23139,14054,149929,23159,14088,23190,29797,23251,159649,140628,15749,137489,14130,136888,24195,21200,23414,25992,23420,162318,16388,18525,131588,23509,24928,137780,154060,132517,23539,23453,19728,23557,138052,23571,29646,23572,138405,158504,23625,18653,23685,23785,23791,23947,138745,138807,23824,23832,23878,138916,23738,24023,33532,14381,149761,139337,139635,33415,14390,15298,24110,27274,24181,24186,148668,134355,21414,20151,24272,21416,137073,24073,24308,164994,24313,24315,14496,24316,26686,37915,24333,131521,194708,15070,18606,135994,24378,157832,140240,24408,140401,24419,38845,159342,24434,37696,166454,24487,23990,15711,152144,139114,159992,140904,37334,131742,166441,24625,26245,137335,14691,15815,13881,22416,141236,31089,15936,24734,24740,24755,149890,149903,162387,29860,20705,23200,24932,33828,24898,194726,159442,24961,20980,132694,24967,23466,147383,141407,25043,166813,170333,25040,14642,141696,141505,24611,24924,25886,25483,131352,25285,137072,25301,142861,25452,149983,14871,25656,25592,136078,137212,25744,28554,142902,38932,147596,153373,25825,25829,38011,14950,25658,14935,25933,28438,150056,150051,25989,25965,25951,143486,26037,149824,19255,26065,16600,137257,26080,26083,24543,144384,26136,143863,143864,26180,143780,143781,26187,134773,26215,152038,26227,26228,138813,143921,165364,143816,152339,30661,141559,39332,26370,148380,150049,15147,27130,145346,26462,26471,26466,147917,168173,26583,17641,26658,28240,37436,26625,144358,159136,26717,144495,27105,27147,166623,26995,26819,144845,26881,26880,15666,14849,144956,15232,26540,26977,166474,17148,26934,27032,15265,132041,33635,20624,27129,144985,139562,27205,145155,27293,15347,26545,27336,168348,15373,27421,133411,24798,27445,27508,141261,28341,146139,132021,137560,14144,21537,146266,27617,147196,27612,27703,140427,149745,158545,27738,33318,27769,146876,17605,146877,147876,149772,149760,146633,14053,15595,134450,39811,143865,140433,32655,26679,159013,159137,159211,28054,27996,28284,28420,149887,147589,159346,34099,159604,20935,27804,28189,33838,166689,28207,146991,29779,147330,31180,28239,23185,143435,28664,14093,28573,146992,28410,136343,147517,17749,37872,28484,28508,15694,28532,168304,15675,28575,147780,28627,147601,147797,147513,147440,147380,147775,20959,147798,147799,147776,156125,28747,28798,28839,28801,28876,28885,28886,28895,16644,15848,29108,29078,148087,28971,28997,23176,29002,29038,23708,148325,29007,37730,148161,28972,148570,150055,150050,29114,166888,28861,29198,37954,29205,22801,37955,29220,37697,153093,29230,29248,149876,26813,29269,29271,15957,143428,26637,28477,29314,29482,29483,149539,165931,18669,165892,29480,29486,29647,29610,134202,158254,29641,29769,147938,136935,150052,26147,14021,149943,149901,150011,29687,29717,26883,150054,29753,132547,16087,29788,141485,29792,167602,29767,29668,29814,33721,29804,14128,29812,37873,27180,29826,18771,150156,147807,150137,166799,23366,166915,137374,29896,137608,29966,29929,29982,167641,137803,23511,167596,37765,30029,30026,30055,30062,151426,16132,150803,30094,29789,30110,30132,30210,30252,30289,30287,30319,30326,156661,30352,33263,14328,157969,157966,30369,30373,30391,30412,159647,33890,151709,151933,138780,30494,30502,30528,25775,152096,30552,144044,30639,166244,166248,136897,30708,30729,136054,150034,26826,30895,30919,30931,38565,31022,153056,30935,31028,30897,161292,36792,34948,166699,155779,140828,31110,35072,26882,31104,153687,31133,162617,31036,31145,28202,160038,16040,31174,168205,31188],"euc-kr":[44034,44035,44037,44038,44043,44044,44045,44046,44047,44056,44062,44063,44065,44066,44067,44069,44070,44071,44072,44073,44074,44075,44078,44082,44083,44084,null,null,null,null,null,null,44085,44086,44087,44090,44091,44093,44094,44095,44097,44098,44099,44100,44101,44102,44103,44104,44105,44106,44108,44110,44111,44112,44113,44114,44115,44117,null,null,null,null,null,null,44118,44119,44121,44122,44123,44125,44126,44127,44128,44129,44130,44131,44132,44133,44134,44135,44136,44137,44138,44139,44140,44141,44142,44143,44146,44147,44149,44150,44153,44155,44156,44157,44158,44159,44162,44167,44168,44173,44174,44175,44177,44178,44179,44181,44182,44183,44184,44185,44186,44187,44190,44194,44195,44196,44197,44198,44199,44203,44205,44206,44209,44210,44211,44212,44213,44214,44215,44218,44222,44223,44224,44226,44227,44229,44230,44231,44233,44234,44235,44237,44238,44239,44240,44241,44242,44243,44244,44246,44248,44249,44250,44251,44252,44253,44254,44255,44258,44259,44261,44262,44265,44267,44269,44270,44274,44276,44279,44280,44281,44282,44283,44286,44287,44289,44290,44291,44293,44295,44296,44297,44298,44299,44302,44304,44306,44307,44308,44309,44310,44311,44313,44314,44315,44317,44318,44319,44321,44322,44323,44324,44325,44326,44327,44328,44330,44331,44334,44335,44336,44337,44338,44339,null,null,null,null,null,null,44342,44343,44345,44346,44347,44349,44350,44351,44352,44353,44354,44355,44358,44360,44362,44363,44364,44365,44366,44367,44369,44370,44371,44373,44374,44375,null,null,null,null,null,null,44377,44378,44379,44380,44381,44382,44383,44384,44386,44388,44389,44390,44391,44392,44393,44394,44395,44398,44399,44401,44402,44407,44408,44409,44410,44414,44416,44419,44420,44421,44422,44423,44426,44427,44429,44430,44431,44433,44434,44435,44436,44437,44438,44439,44440,44441,44442,44443,44446,44447,44448,44449,44450,44451,44453,44454,44455,44456,44457,44458,44459,44460,44461,44462,44463,44464,44465,44466,44467,44468,44469,44470,44472,44473,44474,44475,44476,44477,44478,44479,44482,44483,44485,44486,44487,44489,44490,44491,44492,44493,44494,44495,44498,44500,44501,44502,44503,44504,44505,44506,44507,44509,44510,44511,44513,44514,44515,44517,44518,44519,44520,44521,44522,44523,44524,44525,44526,44527,44528,44529,44530,44531,44532,44533,44534,44535,44538,44539,44541,44542,44546,44547,44548,44549,44550,44551,44554,44556,44558,44559,44560,44561,44562,44563,44565,44566,44567,44568,44569,44570,44571,44572,null,null,null,null,null,null,44573,44574,44575,44576,44577,44578,44579,44580,44581,44582,44583,44584,44585,44586,44587,44588,44589,44590,44591,44594,44595,44597,44598,44601,44603,44604,null,null,null,null,null,null,44605,44606,44607,44610,44612,44615,44616,44617,44619,44623,44625,44626,44627,44629,44631,44632,44633,44634,44635,44638,44642,44643,44644,44646,44647,44650,44651,44653,44654,44655,44657,44658,44659,44660,44661,44662,44663,44666,44670,44671,44672,44673,44674,44675,44678,44679,44680,44681,44682,44683,44685,44686,44687,44688,44689,44690,44691,44692,44693,44694,44695,44696,44697,44698,44699,44700,44701,44702,44703,44704,44705,44706,44707,44708,44709,44710,44711,44712,44713,44714,44715,44716,44717,44718,44719,44720,44721,44722,44723,44724,44725,44726,44727,44728,44729,44730,44731,44735,44737,44738,44739,44741,44742,44743,44744,44745,44746,44747,44750,44754,44755,44756,44757,44758,44759,44762,44763,44765,44766,44767,44768,44769,44770,44771,44772,44773,44774,44775,44777,44778,44780,44782,44783,44784,44785,44786,44787,44789,44790,44791,44793,44794,44795,44797,44798,44799,44800,44801,44802,44803,44804,44805,null,null,null,null,null,null,44806,44809,44810,44811,44812,44814,44815,44817,44818,44819,44820,44821,44822,44823,44824,44825,44826,44827,44828,44829,44830,44831,44832,44833,44834,44835,null,null,null,null,null,null,44836,44837,44838,44839,44840,44841,44842,44843,44846,44847,44849,44851,44853,44854,44855,44856,44857,44858,44859,44862,44864,44868,44869,44870,44871,44874,44875,44876,44877,44878,44879,44881,44882,44883,44884,44885,44886,44887,44888,44889,44890,44891,44894,44895,44896,44897,44898,44899,44902,44903,44904,44905,44906,44907,44908,44909,44910,44911,44912,44913,44914,44915,44916,44917,44918,44919,44920,44922,44923,44924,44925,44926,44927,44929,44930,44931,44933,44934,44935,44937,44938,44939,44940,44941,44942,44943,44946,44947,44948,44950,44951,44952,44953,44954,44955,44957,44958,44959,44960,44961,44962,44963,44964,44965,44966,44967,44968,44969,44970,44971,44972,44973,44974,44975,44976,44977,44978,44979,44980,44981,44982,44983,44986,44987,44989,44990,44991,44993,44994,44995,44996,44997,44998,45002,45004,45007,45008,45009,45010,45011,45013,45014,45015,45016,45017,45018,45019,45021,45022,45023,45024,45025,null,null,null,null,null,null,45026,45027,45028,45029,45030,45031,45034,45035,45036,45037,45038,45039,45042,45043,45045,45046,45047,45049,45050,45051,45052,45053,45054,45055,45058,45059,null,null,null,null,null,null,45061,45062,45063,45064,45065,45066,45067,45069,45070,45071,45073,45074,45075,45077,45078,45079,45080,45081,45082,45083,45086,45087,45088,45089,45090,45091,45092,45093,45094,45095,45097,45098,45099,45100,45101,45102,45103,45104,45105,45106,45107,45108,45109,45110,45111,45112,45113,45114,45115,45116,45117,45118,45119,45120,45121,45122,45123,45126,45127,45129,45131,45133,45135,45136,45137,45138,45142,45144,45146,45147,45148,45150,45151,45152,45153,45154,45155,45156,45157,45158,45159,45160,45161,45162,45163,45164,45165,45166,45167,45168,45169,45170,45171,45172,45173,45174,45175,45176,45177,45178,45179,45182,45183,45185,45186,45187,45189,45190,45191,45192,45193,45194,45195,45198,45200,45202,45203,45204,45205,45206,45207,45211,45213,45214,45219,45220,45221,45222,45223,45226,45232,45234,45238,45239,45241,45242,45243,45245,45246,45247,45248,45249,45250,45251,45254,45258,45259,45260,45261,45262,45263,45266,null,null,null,null,null,null,45267,45269,45270,45271,45273,45274,45275,45276,45277,45278,45279,45281,45282,45283,45284,45286,45287,45288,45289,45290,45291,45292,45293,45294,45295,45296,null,null,null,null,null,null,45297,45298,45299,45300,45301,45302,45303,45304,45305,45306,45307,45308,45309,45310,45311,45312,45313,45314,45315,45316,45317,45318,45319,45322,45325,45326,45327,45329,45332,45333,45334,45335,45338,45342,45343,45344,45345,45346,45350,45351,45353,45354,45355,45357,45358,45359,45360,45361,45362,45363,45366,45370,45371,45372,45373,45374,45375,45378,45379,45381,45382,45383,45385,45386,45387,45388,45389,45390,45391,45394,45395,45398,45399,45401,45402,45403,45405,45406,45407,45409,45410,45411,45412,45413,45414,45415,45416,45417,45418,45419,45420,45421,45422,45423,45424,45425,45426,45427,45428,45429,45430,45431,45434,45435,45437,45438,45439,45441,45443,45444,45445,45446,45447,45450,45452,45454,45455,45456,45457,45461,45462,45463,45465,45466,45467,45469,45470,45471,45472,45473,45474,45475,45476,45477,45478,45479,45481,45482,45483,45484,45485,45486,45487,45488,45489,45490,45491,45492,45493,45494,45495,45496,null,null,null,null,null,null,45497,45498,45499,45500,45501,45502,45503,45504,45505,45506,45507,45508,45509,45510,45511,45512,45513,45514,45515,45517,45518,45519,45521,45522,45523,45525,null,null,null,null,null,null,45526,45527,45528,45529,45530,45531,45534,45536,45537,45538,45539,45540,45541,45542,45543,45546,45547,45549,45550,45551,45553,45554,45555,45556,45557,45558,45559,45560,45562,45564,45566,45567,45568,45569,45570,45571,45574,45575,45577,45578,45581,45582,45583,45584,45585,45586,45587,45590,45592,45594,45595,45596,45597,45598,45599,45601,45602,45603,45604,45605,45606,45607,45608,45609,45610,45611,45612,45613,45614,45615,45616,45617,45618,45619,45621,45622,45623,45624,45625,45626,45627,45629,45630,45631,45632,45633,45634,45635,45636,45637,45638,45639,45640,45641,45642,45643,45644,45645,45646,45647,45648,45649,45650,45651,45652,45653,45654,45655,45657,45658,45659,45661,45662,45663,45665,45666,45667,45668,45669,45670,45671,45674,45675,45676,45677,45678,45679,45680,45681,45682,45683,45686,45687,45688,45689,45690,45691,45693,45694,45695,45696,45697,45698,45699,45702,45703,45704,45706,45707,45708,45709,45710,null,null,null,null,null,null,45711,45714,45715,45717,45718,45719,45723,45724,45725,45726,45727,45730,45732,45735,45736,45737,45739,45741,45742,45743,45745,45746,45747,45749,45750,45751,null,null,null,null,null,null,45752,45753,45754,45755,45756,45757,45758,45759,45760,45761,45762,45763,45764,45765,45766,45767,45770,45771,45773,45774,45775,45777,45779,45780,45781,45782,45783,45786,45788,45790,45791,45792,45793,45795,45799,45801,45802,45808,45809,45810,45814,45820,45821,45822,45826,45827,45829,45830,45831,45833,45834,45835,45836,45837,45838,45839,45842,45846,45847,45848,45849,45850,45851,45853,45854,45855,45856,45857,45858,45859,45860,45861,45862,45863,45864,45865,45866,45867,45868,45869,45870,45871,45872,45873,45874,45875,45876,45877,45878,45879,45880,45881,45882,45883,45884,45885,45886,45887,45888,45889,45890,45891,45892,45893,45894,45895,45896,45897,45898,45899,45900,45901,45902,45903,45904,45905,45906,45907,45911,45913,45914,45917,45920,45921,45922,45923,45926,45928,45930,45932,45933,45935,45938,45939,45941,45942,45943,45945,45946,45947,45948,45949,45950,45951,45954,45958,45959,45960,45961,45962,45963,45965,null,null,null,null,null,null,45966,45967,45969,45970,45971,45973,45974,45975,45976,45977,45978,45979,45980,45981,45982,45983,45986,45987,45988,45989,45990,45991,45993,45994,45995,45997,null,null,null,null,null,null,45998,45999,46e3,46001,46002,46003,46004,46005,46006,46007,46008,46009,46010,46011,46012,46013,46014,46015,46016,46017,46018,46019,46022,46023,46025,46026,46029,46031,46033,46034,46035,46038,46040,46042,46044,46046,46047,46049,46050,46051,46053,46054,46055,46057,46058,46059,46060,46061,46062,46063,46064,46065,46066,46067,46068,46069,46070,46071,46072,46073,46074,46075,46077,46078,46079,46080,46081,46082,46083,46084,46085,46086,46087,46088,46089,46090,46091,46092,46093,46094,46095,46097,46098,46099,46100,46101,46102,46103,46105,46106,46107,46109,46110,46111,46113,46114,46115,46116,46117,46118,46119,46122,46124,46125,46126,46127,46128,46129,46130,46131,46133,46134,46135,46136,46137,46138,46139,46140,46141,46142,46143,46144,46145,46146,46147,46148,46149,46150,46151,46152,46153,46154,46155,46156,46157,46158,46159,46162,46163,46165,46166,46167,46169,46170,46171,46172,46173,46174,46175,46178,46180,46182,null,null,null,null,null,null,46183,46184,46185,46186,46187,46189,46190,46191,46192,46193,46194,46195,46196,46197,46198,46199,46200,46201,46202,46203,46204,46205,46206,46207,46209,46210,null,null,null,null,null,null,46211,46212,46213,46214,46215,46217,46218,46219,46220,46221,46222,46223,46224,46225,46226,46227,46228,46229,46230,46231,46232,46233,46234,46235,46236,46238,46239,46240,46241,46242,46243,46245,46246,46247,46249,46250,46251,46253,46254,46255,46256,46257,46258,46259,46260,46262,46264,46266,46267,46268,46269,46270,46271,46273,46274,46275,46277,46278,46279,46281,46282,46283,46284,46285,46286,46287,46289,46290,46291,46292,46294,46295,46296,46297,46298,46299,46302,46303,46305,46306,46309,46311,46312,46313,46314,46315,46318,46320,46322,46323,46324,46325,46326,46327,46329,46330,46331,46332,46333,46334,46335,46336,46337,46338,46339,46340,46341,46342,46343,46344,46345,46346,46347,46348,46349,46350,46351,46352,46353,46354,46355,46358,46359,46361,46362,46365,46366,46367,46368,46369,46370,46371,46374,46379,46380,46381,46382,46383,46386,46387,46389,46390,46391,46393,46394,46395,46396,46397,46398,46399,46402,46406,null,null,null,null,null,null,46407,46408,46409,46410,46414,46415,46417,46418,46419,46421,46422,46423,46424,46425,46426,46427,46430,46434,46435,46436,46437,46438,46439,46440,46441,46442,null,null,null,null,null,null,46443,46444,46445,46446,46447,46448,46449,46450,46451,46452,46453,46454,46455,46456,46457,46458,46459,46460,46461,46462,46463,46464,46465,46466,46467,46468,46469,46470,46471,46472,46473,46474,46475,46476,46477,46478,46479,46480,46481,46482,46483,46484,46485,46486,46487,46488,46489,46490,46491,46492,46493,46494,46495,46498,46499,46501,46502,46503,46505,46508,46509,46510,46511,46514,46518,46519,46520,46521,46522,46526,46527,46529,46530,46531,46533,46534,46535,46536,46537,46538,46539,46542,46546,46547,46548,46549,46550,46551,46553,46554,46555,46556,46557,46558,46559,46560,46561,46562,46563,46564,46565,46566,46567,46568,46569,46570,46571,46573,46574,46575,46576,46577,46578,46579,46580,46581,46582,46583,46584,46585,46586,46587,46588,46589,46590,46591,46592,46593,46594,46595,46596,46597,46598,46599,46600,46601,46602,46603,46604,46605,46606,46607,46610,46611,46613,46614,46615,46617,46618,46619,46620,46621,null,null,null,null,null,null,46622,46623,46624,46625,46626,46627,46628,46630,46631,46632,46633,46634,46635,46637,46638,46639,46640,46641,46642,46643,46645,46646,46647,46648,46649,46650,null,null,null,null,null,null,46651,46652,46653,46654,46655,46656,46657,46658,46659,46660,46661,46662,46663,46665,46666,46667,46668,46669,46670,46671,46672,46673,46674,46675,46676,46677,46678,46679,46680,46681,46682,46683,46684,46685,46686,46687,46688,46689,46690,46691,46693,46694,46695,46697,46698,46699,46700,46701,46702,46703,46704,46705,46706,46707,46708,46709,46710,46711,46712,46713,46714,46715,46716,46717,46718,46719,46720,46721,46722,46723,46724,46725,46726,46727,46728,46729,46730,46731,46732,46733,46734,46735,46736,46737,46738,46739,46740,46741,46742,46743,46744,46745,46746,46747,46750,46751,46753,46754,46755,46757,46758,46759,46760,46761,46762,46765,46766,46767,46768,46770,46771,46772,46773,46774,46775,46776,46777,46778,46779,46780,46781,46782,46783,46784,46785,46786,46787,46788,46789,46790,46791,46792,46793,46794,46795,46796,46797,46798,46799,46800,46801,46802,46803,46805,46806,46807,46808,46809,46810,46811,46812,46813,null,null,null,null,null,null,46814,46815,46816,46817,46818,46819,46820,46821,46822,46823,46824,46825,46826,46827,46828,46829,46830,46831,46833,46834,46835,46837,46838,46839,46841,46842,null,null,null,null,null,null,46843,46844,46845,46846,46847,46850,46851,46852,46854,46855,46856,46857,46858,46859,46860,46861,46862,46863,46864,46865,46866,46867,46868,46869,46870,46871,46872,46873,46874,46875,46876,46877,46878,46879,46880,46881,46882,46883,46884,46885,46886,46887,46890,46891,46893,46894,46897,46898,46899,46900,46901,46902,46903,46906,46908,46909,46910,46911,46912,46913,46914,46915,46917,46918,46919,46921,46922,46923,46925,46926,46927,46928,46929,46930,46931,46934,46935,46936,46937,46938,46939,46940,46941,46942,46943,46945,46946,46947,46949,46950,46951,46953,46954,46955,46956,46957,46958,46959,46962,46964,46966,46967,46968,46969,46970,46971,46974,46975,46977,46978,46979,46981,46982,46983,46984,46985,46986,46987,46990,46995,46996,46997,47002,47003,47005,47006,47007,47009,47010,47011,47012,47013,47014,47015,47018,47022,47023,47024,47025,47026,47027,47030,47031,47033,47034,47035,47036,47037,47038,47039,47040,47041,null,null,null,null,null,null,47042,47043,47044,47045,47046,47048,47050,47051,47052,47053,47054,47055,47056,47057,47058,47059,47060,47061,47062,47063,47064,47065,47066,47067,47068,47069,null,null,null,null,null,null,47070,47071,47072,47073,47074,47075,47076,47077,47078,47079,47080,47081,47082,47083,47086,47087,47089,47090,47091,47093,47094,47095,47096,47097,47098,47099,47102,47106,47107,47108,47109,47110,47114,47115,47117,47118,47119,47121,47122,47123,47124,47125,47126,47127,47130,47132,47134,47135,47136,47137,47138,47139,47142,47143,47145,47146,47147,47149,47150,47151,47152,47153,47154,47155,47158,47162,47163,47164,47165,47166,47167,47169,47170,47171,47173,47174,47175,47176,47177,47178,47179,47180,47181,47182,47183,47184,47186,47188,47189,47190,47191,47192,47193,47194,47195,47198,47199,47201,47202,47203,47205,47206,47207,47208,47209,47210,47211,47214,47216,47218,47219,47220,47221,47222,47223,47225,47226,47227,47229,47230,47231,47232,47233,47234,47235,47236,47237,47238,47239,47240,47241,47242,47243,47244,47246,47247,47248,47249,47250,47251,47252,47253,47254,47255,47256,47257,47258,47259,47260,47261,47262,47263,null,null,null,null,null,null,47264,47265,47266,47267,47268,47269,47270,47271,47273,47274,47275,47276,47277,47278,47279,47281,47282,47283,47285,47286,47287,47289,47290,47291,47292,47293,null,null,null,null,null,null,47294,47295,47298,47300,47302,47303,47304,47305,47306,47307,47309,47310,47311,47313,47314,47315,47317,47318,47319,47320,47321,47322,47323,47324,47326,47328,47330,47331,47332,47333,47334,47335,47338,47339,47341,47342,47343,47345,47346,47347,47348,47349,47350,47351,47354,47356,47358,47359,47360,47361,47362,47363,47365,47366,47367,47368,47369,47370,47371,47372,47373,47374,47375,47376,47377,47378,47379,47380,47381,47382,47383,47385,47386,47387,47388,47389,47390,47391,47393,47394,47395,47396,47397,47398,47399,47400,47401,47402,47403,47404,47405,47406,47407,47408,47409,47410,47411,47412,47413,47414,47415,47416,47417,47418,47419,47422,47423,47425,47426,47427,47429,47430,47431,47432,47433,47434,47435,47437,47438,47440,47442,47443,47444,47445,47446,47447,47450,47451,47453,47454,47455,47457,47458,47459,47460,47461,47462,47463,47466,47468,47470,47471,47472,47473,47474,47475,47478,47479,47481,47482,47483,47485,null,null,null,null,null,null,47486,47487,47488,47489,47490,47491,47494,47496,47499,47500,47503,47504,47505,47506,47507,47508,47509,47510,47511,47512,47513,47514,47515,47516,47517,47518,null,null,null,null,null,null,47519,47520,47521,47522,47523,47524,47525,47526,47527,47528,47529,47530,47531,47534,47535,47537,47538,47539,47541,47542,47543,47544,47545,47546,47547,47550,47552,47554,47555,47556,47557,47558,47559,47562,47563,47565,47571,47572,47573,47574,47575,47578,47580,47583,47584,47586,47590,47591,47593,47594,47595,47597,47598,47599,47600,47601,47602,47603,47606,47611,47612,47613,47614,47615,47618,47619,47620,47621,47622,47623,47625,47626,47627,47628,47629,47630,47631,47632,47633,47634,47635,47636,47638,47639,47640,47641,47642,47643,47644,47645,47646,47647,47648,47649,47650,47651,47652,47653,47654,47655,47656,47657,47658,47659,47660,47661,47662,47663,47664,47665,47666,47667,47668,47669,47670,47671,47674,47675,47677,47678,47679,47681,47683,47684,47685,47686,47687,47690,47692,47695,47696,47697,47698,47702,47703,47705,47706,47707,47709,47710,47711,47712,47713,47714,47715,47718,47722,47723,47724,47725,47726,47727,null,null,null,null,null,null,47730,47731,47733,47734,47735,47737,47738,47739,47740,47741,47742,47743,47744,47745,47746,47750,47752,47753,47754,47755,47757,47758,47759,47760,47761,47762,null,null,null,null,null,null,47763,47764,47765,47766,47767,47768,47769,47770,47771,47772,47773,47774,47775,47776,47777,47778,47779,47780,47781,47782,47783,47786,47789,47790,47791,47793,47795,47796,47797,47798,47799,47802,47804,47806,47807,47808,47809,47810,47811,47813,47814,47815,47817,47818,47819,47820,47821,47822,47823,47824,47825,47826,47827,47828,47829,47830,47831,47834,47835,47836,47837,47838,47839,47840,47841,47842,47843,47844,47845,47846,47847,47848,47849,47850,47851,47852,47853,47854,47855,47856,47857,47858,47859,47860,47861,47862,47863,47864,47865,47866,47867,47869,47870,47871,47873,47874,47875,47877,47878,47879,47880,47881,47882,47883,47884,47886,47888,47890,47891,47892,47893,47894,47895,47897,47898,47899,47901,47902,47903,47905,47906,47907,47908,47909,47910,47911,47912,47914,47916,47917,47918,47919,47920,47921,47922,47923,47927,47929,47930,47935,47936,47937,47938,47939,47942,47944,47946,47947,47948,47950,47953,47954,null,null,null,null,null,null,47955,47957,47958,47959,47961,47962,47963,47964,47965,47966,47967,47968,47970,47972,47973,47974,47975,47976,47977,47978,47979,47981,47982,47983,47984,47985,null,null,null,null,null,null,47986,47987,47988,47989,47990,47991,47992,47993,47994,47995,47996,47997,47998,47999,48e3,48001,48002,48003,48004,48005,48006,48007,48009,48010,48011,48013,48014,48015,48017,48018,48019,48020,48021,48022,48023,48024,48025,48026,48027,48028,48029,48030,48031,48032,48033,48034,48035,48037,48038,48039,48041,48042,48043,48045,48046,48047,48048,48049,48050,48051,48053,48054,48056,48057,48058,48059,48060,48061,48062,48063,48065,48066,48067,48069,48070,48071,48073,48074,48075,48076,48077,48078,48079,48081,48082,48084,48085,48086,48087,48088,48089,48090,48091,48092,48093,48094,48095,48096,48097,48098,48099,48100,48101,48102,48103,48104,48105,48106,48107,48108,48109,48110,48111,48112,48113,48114,48115,48116,48117,48118,48119,48122,48123,48125,48126,48129,48131,48132,48133,48134,48135,48138,48142,48144,48146,48147,48153,48154,48160,48161,48162,48163,48166,48168,48170,48171,48172,48174,48175,48178,48179,48181,null,null,null,null,null,null,48182,48183,48185,48186,48187,48188,48189,48190,48191,48194,48198,48199,48200,48202,48203,48206,48207,48209,48210,48211,48212,48213,48214,48215,48216,48217,null,null,null,null,null,null,48218,48219,48220,48222,48223,48224,48225,48226,48227,48228,48229,48230,48231,48232,48233,48234,48235,48236,48237,48238,48239,48240,48241,48242,48243,48244,48245,48246,48247,48248,48249,48250,48251,48252,48253,48254,48255,48256,48257,48258,48259,48262,48263,48265,48266,48269,48271,48272,48273,48274,48275,48278,48280,48283,48284,48285,48286,48287,48290,48291,48293,48294,48297,48298,48299,48300,48301,48302,48303,48306,48310,48311,48312,48313,48314,48315,48318,48319,48321,48322,48323,48325,48326,48327,48328,48329,48330,48331,48332,48334,48338,48339,48340,48342,48343,48345,48346,48347,48349,48350,48351,48352,48353,48354,48355,48356,48357,48358,48359,48360,48361,48362,48363,48364,48365,48366,48367,48368,48369,48370,48371,48375,48377,48378,48379,48381,48382,48383,48384,48385,48386,48387,48390,48392,48394,48395,48396,48397,48398,48399,48401,48402,48403,48405,48406,48407,48408,48409,48410,48411,48412,48413,null,null,null,null,null,null,48414,48415,48416,48417,48418,48419,48421,48422,48423,48424,48425,48426,48427,48429,48430,48431,48432,48433,48434,48435,48436,48437,48438,48439,48440,48441,null,null,null,null,null,null,48442,48443,48444,48445,48446,48447,48449,48450,48451,48452,48453,48454,48455,48458,48459,48461,48462,48463,48465,48466,48467,48468,48469,48470,48471,48474,48475,48476,48477,48478,48479,48480,48481,48482,48483,48485,48486,48487,48489,48490,48491,48492,48493,48494,48495,48496,48497,48498,48499,48500,48501,48502,48503,48504,48505,48506,48507,48508,48509,48510,48511,48514,48515,48517,48518,48523,48524,48525,48526,48527,48530,48532,48534,48535,48536,48539,48541,48542,48543,48544,48545,48546,48547,48549,48550,48551,48552,48553,48554,48555,48556,48557,48558,48559,48561,48562,48563,48564,48565,48566,48567,48569,48570,48571,48572,48573,48574,48575,48576,48577,48578,48579,48580,48581,48582,48583,48584,48585,48586,48587,48588,48589,48590,48591,48592,48593,48594,48595,48598,48599,48601,48602,48603,48605,48606,48607,48608,48609,48610,48611,48612,48613,48614,48615,48616,48618,48619,48620,48621,48622,48623,48625,null,null,null,null,null,null,48626,48627,48629,48630,48631,48633,48634,48635,48636,48637,48638,48639,48641,48642,48644,48646,48647,48648,48649,48650,48651,48654,48655,48657,48658,48659,null,null,null,null,null,null,48661,48662,48663,48664,48665,48666,48667,48670,48672,48673,48674,48675,48676,48677,48678,48679,48680,48681,48682,48683,48684,48685,48686,48687,48688,48689,48690,48691,48692,48693,48694,48695,48696,48697,48698,48699,48700,48701,48702,48703,48704,48705,48706,48707,48710,48711,48713,48714,48715,48717,48719,48720,48721,48722,48723,48726,48728,48732,48733,48734,48735,48738,48739,48741,48742,48743,48745,48747,48748,48749,48750,48751,48754,48758,48759,48760,48761,48762,48766,48767,48769,48770,48771,48773,48774,48775,48776,48777,48778,48779,48782,48786,48787,48788,48789,48790,48791,48794,48795,48796,48797,48798,48799,48800,48801,48802,48803,48804,48805,48806,48807,48809,48810,48811,48812,48813,48814,48815,48816,48817,48818,48819,48820,48821,48822,48823,48824,48825,48826,48827,48828,48829,48830,48831,48832,48833,48834,48835,48836,48837,48838,48839,48840,48841,48842,48843,48844,48845,48846,48847,48850,48851,null,null,null,null,null,null,48853,48854,48857,48858,48859,48860,48861,48862,48863,48865,48866,48870,48871,48872,48873,48874,48875,48877,48878,48879,48880,48881,48882,48883,48884,48885,null,null,null,null,null,null,48886,48887,48888,48889,48890,48891,48892,48893,48894,48895,48896,48898,48899,48900,48901,48902,48903,48906,48907,48908,48909,48910,48911,48912,48913,48914,48915,48916,48917,48918,48919,48922,48926,48927,48928,48929,48930,48931,48932,48933,48934,48935,48936,48937,48938,48939,48940,48941,48942,48943,48944,48945,48946,48947,48948,48949,48950,48951,48952,48953,48954,48955,48956,48957,48958,48959,48962,48963,48965,48966,48967,48969,48970,48971,48972,48973,48974,48975,48978,48979,48980,48982,48983,48984,48985,48986,48987,48988,48989,48990,48991,48992,48993,48994,48995,48996,48997,48998,48999,49e3,49001,49002,49003,49004,49005,49006,49007,49008,49009,49010,49011,49012,49013,49014,49015,49016,49017,49018,49019,49020,49021,49022,49023,49024,49025,49026,49027,49028,49029,49030,49031,49032,49033,49034,49035,49036,49037,49038,49039,49040,49041,49042,49043,49045,49046,49047,49048,49049,49050,49051,49052,49053,null,null,null,null,null,null,49054,49055,49056,49057,49058,49059,49060,49061,49062,49063,49064,49065,49066,49067,49068,49069,49070,49071,49073,49074,49075,49076,49077,49078,49079,49080,null,null,null,null,null,null,49081,49082,49083,49084,49085,49086,49087,49088,49089,49090,49091,49092,49094,49095,49096,49097,49098,49099,49102,49103,49105,49106,49107,49109,49110,49111,49112,49113,49114,49115,49117,49118,49120,49122,49123,49124,49125,49126,49127,49128,49129,49130,49131,49132,49133,49134,49135,49136,49137,49138,49139,49140,49141,49142,49143,49144,49145,49146,49147,49148,49149,49150,49151,49152,49153,49154,49155,49156,49157,49158,49159,49160,49161,49162,49163,49164,49165,49166,49167,49168,49169,49170,49171,49172,49173,49174,49175,49176,49177,49178,49179,49180,49181,49182,49183,49184,49185,49186,49187,49188,49189,49190,49191,49192,49193,49194,49195,49196,49197,49198,49199,49200,49201,49202,49203,49204,49205,49206,49207,49208,49209,49210,49211,49213,49214,49215,49216,49217,49218,49219,49220,49221,49222,49223,49224,49225,49226,49227,49228,49229,49230,49231,49232,49234,49235,49236,49237,49238,49239,49241,49242,49243,null,null,null,null,null,null,49245,49246,49247,49249,49250,49251,49252,49253,49254,49255,49258,49259,49260,49261,49262,49263,49264,49265,49266,49267,49268,49269,49270,49271,49272,49273,null,null,null,null,null,null,49274,49275,49276,49277,49278,49279,49280,49281,49282,49283,49284,49285,49286,49287,49288,49289,49290,49291,49292,49293,49294,49295,49298,49299,49301,49302,49303,49305,49306,49307,49308,49309,49310,49311,49314,49316,49318,49319,49320,49321,49322,49323,49326,49329,49330,49335,49336,49337,49338,49339,49342,49346,49347,49348,49350,49351,49354,49355,49357,49358,49359,49361,49362,49363,49364,49365,49366,49367,49370,49374,49375,49376,49377,49378,49379,49382,49383,49385,49386,49387,49389,49390,49391,49392,49393,49394,49395,49398,49400,49402,49403,49404,49405,49406,49407,49409,49410,49411,49413,49414,49415,49417,49418,49419,49420,49421,49422,49423,49425,49426,49427,49428,49430,49431,49432,49433,49434,49435,49441,49442,49445,49448,49449,49450,49451,49454,49458,49459,49460,49461,49463,49466,49467,49469,49470,49471,49473,49474,49475,49476,49477,49478,49479,49482,49486,49487,49488,49489,49490,49491,49494,49495,null,null,null,null,null,null,49497,49498,49499,49501,49502,49503,49504,49505,49506,49507,49510,49514,49515,49516,49517,49518,49519,49521,49522,49523,49525,49526,49527,49529,49530,49531,null,null,null,null,null,null,49532,49533,49534,49535,49536,49537,49538,49539,49540,49542,49543,49544,49545,49546,49547,49551,49553,49554,49555,49557,49559,49560,49561,49562,49563,49566,49568,49570,49571,49572,49574,49575,49578,49579,49581,49582,49583,49585,49586,49587,49588,49589,49590,49591,49592,49593,49594,49595,49596,49598,49599,49600,49601,49602,49603,49605,49606,49607,49609,49610,49611,49613,49614,49615,49616,49617,49618,49619,49621,49622,49625,49626,49627,49628,49629,49630,49631,49633,49634,49635,49637,49638,49639,49641,49642,49643,49644,49645,49646,49647,49650,49652,49653,49654,49655,49656,49657,49658,49659,49662,49663,49665,49666,49667,49669,49670,49671,49672,49673,49674,49675,49678,49680,49682,49683,49684,49685,49686,49687,49690,49691,49693,49694,49697,49698,49699,49700,49701,49702,49703,49706,49708,49710,49712,49715,49717,49718,49719,49720,49721,49722,49723,49724,49725,49726,49727,49728,49729,49730,49731,49732,49733,null,null,null,null,null,null,49734,49735,49737,49738,49739,49740,49741,49742,49743,49746,49747,49749,49750,49751,49753,49754,49755,49756,49757,49758,49759,49761,49762,49763,49764,49766,null,null,null,null,null,null,49767,49768,49769,49770,49771,49774,49775,49777,49778,49779,49781,49782,49783,49784,49785,49786,49787,49790,49792,49794,49795,49796,49797,49798,49799,49802,49803,49804,49805,49806,49807,49809,49810,49811,49812,49813,49814,49815,49817,49818,49820,49822,49823,49824,49825,49826,49827,49830,49831,49833,49834,49835,49838,49839,49840,49841,49842,49843,49846,49848,49850,49851,49852,49853,49854,49855,49856,49857,49858,49859,49860,49861,49862,49863,49864,49865,49866,49867,49868,49869,49870,49871,49872,49873,49874,49875,49876,49877,49878,49879,49880,49881,49882,49883,49886,49887,49889,49890,49893,49894,49895,49896,49897,49898,49902,49904,49906,49907,49908,49909,49911,49914,49917,49918,49919,49921,49922,49923,49924,49925,49926,49927,49930,49931,49934,49935,49936,49937,49938,49942,49943,49945,49946,49947,49949,49950,49951,49952,49953,49954,49955,49958,49959,49962,49963,49964,49965,49966,49967,49968,49969,49970,null,null,null,null,null,null,49971,49972,49973,49974,49975,49976,49977,49978,49979,49980,49981,49982,49983,49984,49985,49986,49987,49988,49990,49991,49992,49993,49994,49995,49996,49997,null,null,null,null,null,null,49998,49999,5e4,50001,50002,50003,50004,50005,50006,50007,50008,50009,50010,50011,50012,50013,50014,50015,50016,50017,50018,50019,50020,50021,50022,50023,50026,50027,50029,50030,50031,50033,50035,50036,50037,50038,50039,50042,50043,50046,50047,50048,50049,50050,50051,50053,50054,50055,50057,50058,50059,50061,50062,50063,50064,50065,50066,50067,50068,50069,50070,50071,50072,50073,50074,50075,50076,50077,50078,50079,50080,50081,50082,50083,50084,50085,50086,50087,50088,50089,50090,50091,50092,50093,50094,50095,50096,50097,50098,50099,50100,50101,50102,50103,50104,50105,50106,50107,50108,50109,50110,50111,50113,50114,50115,50116,50117,50118,50119,50120,50121,50122,50123,50124,50125,50126,50127,50128,50129,50130,50131,50132,50133,50134,50135,50138,50139,50141,50142,50145,50147,50148,50149,50150,50151,50154,50155,50156,50158,50159,50160,50161,50162,50163,50166,50167,50169,50170,50171,50172,50173,50174,null,null,null,null,null,null,50175,50176,50177,50178,50179,50180,50181,50182,50183,50185,50186,50187,50188,50189,50190,50191,50193,50194,50195,50196,50197,50198,50199,50200,50201,50202,null,null,null,null,null,null,50203,50204,50205,50206,50207,50208,50209,50210,50211,50213,50214,50215,50216,50217,50218,50219,50221,50222,50223,50225,50226,50227,50229,50230,50231,50232,50233,50234,50235,50238,50239,50240,50241,50242,50243,50244,50245,50246,50247,50249,50250,50251,50252,50253,50254,50255,50256,50257,50258,50259,50260,50261,50262,50263,50264,50265,50266,50267,50268,50269,50270,50271,50272,50273,50274,50275,50278,50279,50281,50282,50283,50285,50286,50287,50288,50289,50290,50291,50294,50295,50296,50298,50299,50300,50301,50302,50303,50305,50306,50307,50308,50309,50310,50311,50312,50313,50314,50315,50316,50317,50318,50319,50320,50321,50322,50323,50325,50326,50327,50328,50329,50330,50331,50333,50334,50335,50336,50337,50338,50339,50340,50341,50342,50343,50344,50345,50346,50347,50348,50349,50350,50351,50352,50353,50354,50355,50356,50357,50358,50359,50361,50362,50363,50365,50366,50367,50368,50369,50370,50371,50372,50373,null,null,null,null,null,null,50374,50375,50376,50377,50378,50379,50380,50381,50382,50383,50384,50385,50386,50387,50388,50389,50390,50391,50392,50393,50394,50395,50396,50397,50398,50399,null,null,null,null,null,null,50400,50401,50402,50403,50404,50405,50406,50407,50408,50410,50411,50412,50413,50414,50415,50418,50419,50421,50422,50423,50425,50427,50428,50429,50430,50434,50435,50436,50437,50438,50439,50440,50441,50442,50443,50445,50446,50447,50449,50450,50451,50453,50454,50455,50456,50457,50458,50459,50461,50462,50463,50464,50465,50466,50467,50468,50469,50470,50471,50474,50475,50477,50478,50479,50481,50482,50483,50484,50485,50486,50487,50490,50492,50494,50495,50496,50497,50498,50499,50502,50503,50507,50511,50512,50513,50514,50518,50522,50523,50524,50527,50530,50531,50533,50534,50535,50537,50538,50539,50540,50541,50542,50543,50546,50550,50551,50552,50553,50554,50555,50558,50559,50561,50562,50563,50565,50566,50568,50569,50570,50571,50574,50576,50578,50579,50580,50582,50585,50586,50587,50589,50590,50591,50593,50594,50595,50596,50597,50598,50599,50600,50602,50603,50604,50605,50606,50607,50608,50609,50610,50611,50614,null,null,null,null,null,null,50615,50618,50623,50624,50625,50626,50627,50635,50637,50639,50642,50643,50645,50646,50647,50649,50650,50651,50652,50653,50654,50655,50658,50660,50662,50663,null,null,null,null,null,null,50664,50665,50666,50667,50671,50673,50674,50675,50677,50680,50681,50682,50683,50690,50691,50692,50697,50698,50699,50701,50702,50703,50705,50706,50707,50708,50709,50710,50711,50714,50717,50718,50719,50720,50721,50722,50723,50726,50727,50729,50730,50731,50735,50737,50738,50742,50744,50746,50748,50749,50750,50751,50754,50755,50757,50758,50759,50761,50762,50763,50764,50765,50766,50767,50770,50774,50775,50776,50777,50778,50779,50782,50783,50785,50786,50787,50788,50789,50790,50791,50792,50793,50794,50795,50797,50798,50800,50802,50803,50804,50805,50806,50807,50810,50811,50813,50814,50815,50817,50818,50819,50820,50821,50822,50823,50826,50828,50830,50831,50832,50833,50834,50835,50838,50839,50841,50842,50843,50845,50846,50847,50848,50849,50850,50851,50854,50856,50858,50859,50860,50861,50862,50863,50866,50867,50869,50870,50871,50875,50876,50877,50878,50879,50882,50884,50886,50887,50888,50889,50890,50891,50894,null,null,null,null,null,null,50895,50897,50898,50899,50901,50902,50903,50904,50905,50906,50907,50910,50911,50914,50915,50916,50917,50918,50919,50922,50923,50925,50926,50927,50929,50930,null,null,null,null,null,null,50931,50932,50933,50934,50935,50938,50939,50940,50942,50943,50944,50945,50946,50947,50950,50951,50953,50954,50955,50957,50958,50959,50960,50961,50962,50963,50966,50968,50970,50971,50972,50973,50974,50975,50978,50979,50981,50982,50983,50985,50986,50987,50988,50989,50990,50991,50994,50996,50998,51e3,51001,51002,51003,51006,51007,51009,51010,51011,51013,51014,51015,51016,51017,51019,51022,51024,51033,51034,51035,51037,51038,51039,51041,51042,51043,51044,51045,51046,51047,51049,51050,51052,51053,51054,51055,51056,51057,51058,51059,51062,51063,51065,51066,51067,51071,51072,51073,51074,51078,51083,51084,51085,51087,51090,51091,51093,51097,51099,51100,51101,51102,51103,51106,51111,51112,51113,51114,51115,51118,51119,51121,51122,51123,51125,51126,51127,51128,51129,51130,51131,51134,51138,51139,51140,51141,51142,51143,51146,51147,51149,51151,51153,51154,51155,51156,51157,51158,51159,51161,51162,51163,51164,null,null,null,null,null,null,51166,51167,51168,51169,51170,51171,51173,51174,51175,51177,51178,51179,51181,51182,51183,51184,51185,51186,51187,51188,51189,51190,51191,51192,51193,51194,null,null,null,null,null,null,51195,51196,51197,51198,51199,51202,51203,51205,51206,51207,51209,51211,51212,51213,51214,51215,51218,51220,51223,51224,51225,51226,51227,51230,51231,51233,51234,51235,51237,51238,51239,51240,51241,51242,51243,51246,51248,51250,51251,51252,51253,51254,51255,51257,51258,51259,51261,51262,51263,51265,51266,51267,51268,51269,51270,51271,51274,51275,51278,51279,51280,51281,51282,51283,51285,51286,51287,51288,51289,51290,51291,51292,51293,51294,51295,51296,51297,51298,51299,51300,51301,51302,51303,51304,51305,51306,51307,51308,51309,51310,51311,51314,51315,51317,51318,51319,51321,51323,51324,51325,51326,51327,51330,51332,51336,51337,51338,51342,51343,51344,51345,51346,51347,51349,51350,51351,51352,51353,51354,51355,51356,51358,51360,51362,51363,51364,51365,51366,51367,51369,51370,51371,51372,51373,51374,51375,51376,51377,51378,51379,51380,51381,51382,51383,51384,51385,51386,51387,51390,51391,51392,51393,null,null,null,null,null,null,51394,51395,51397,51398,51399,51401,51402,51403,51405,51406,51407,51408,51409,51410,51411,51414,51416,51418,51419,51420,51421,51422,51423,51426,51427,51429,null,null,null,null,null,null,51430,51431,51432,51433,51434,51435,51436,51437,51438,51439,51440,51441,51442,51443,51444,51446,51447,51448,51449,51450,51451,51454,51455,51457,51458,51459,51463,51464,51465,51466,51467,51470,12288,12289,12290,183,8229,8230,168,12291,173,8213,8741,65340,8764,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,177,215,247,8800,8804,8805,8734,8756,176,8242,8243,8451,8491,65504,65505,65509,9794,9792,8736,8869,8978,8706,8711,8801,8786,167,8251,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8594,8592,8593,8595,8596,12307,8810,8811,8730,8765,8733,8757,8747,8748,8712,8715,8838,8839,8834,8835,8746,8745,8743,8744,65506,51472,51474,51475,51476,51477,51478,51479,51481,51482,51483,51484,51485,51486,51487,51488,51489,51490,51491,51492,51493,51494,51495,51496,51497,51498,51499,null,null,null,null,null,null,51501,51502,51503,51504,51505,51506,51507,51509,51510,51511,51512,51513,51514,51515,51516,51517,51518,51519,51520,51521,51522,51523,51524,51525,51526,51527,null,null,null,null,null,null,51528,51529,51530,51531,51532,51533,51534,51535,51538,51539,51541,51542,51543,51545,51546,51547,51548,51549,51550,51551,51554,51556,51557,51558,51559,51560,51561,51562,51563,51565,51566,51567,8658,8660,8704,8707,180,65374,711,728,733,730,729,184,731,161,191,720,8750,8721,8719,164,8457,8240,9665,9664,9655,9654,9828,9824,9825,9829,9831,9827,8857,9672,9635,9680,9681,9618,9636,9637,9640,9639,9638,9641,9832,9743,9742,9756,9758,182,8224,8225,8597,8599,8601,8598,8600,9837,9833,9834,9836,12927,12828,8470,13255,8482,13250,13272,8481,8364,174,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51569,51570,51571,51573,51574,51575,51576,51577,51578,51579,51581,51582,51583,51584,51585,51586,51587,51588,51589,51590,51591,51594,51595,51597,51598,51599,null,null,null,null,null,null,51601,51602,51603,51604,51605,51606,51607,51610,51612,51614,51615,51616,51617,51618,51619,51620,51621,51622,51623,51624,51625,51626,51627,51628,51629,51630,null,null,null,null,null,null,51631,51632,51633,51634,51635,51636,51637,51638,51639,51640,51641,51642,51643,51644,51645,51646,51647,51650,51651,51653,51654,51657,51659,51660,51661,51662,51663,51666,51668,51671,51672,51675,65281,65282,65283,65284,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65510,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,51678,51679,51681,51683,51685,51686,51688,51689,51690,51691,51694,51698,51699,51700,51701,51702,51703,51706,51707,51709,51710,51711,51713,51714,51715,51716,null,null,null,null,null,null,51717,51718,51719,51722,51726,51727,51728,51729,51730,51731,51733,51734,51735,51737,51738,51739,51740,51741,51742,51743,51744,51745,51746,51747,51748,51749,null,null,null,null,null,null,51750,51751,51752,51754,51755,51756,51757,51758,51759,51760,51761,51762,51763,51764,51765,51766,51767,51768,51769,51770,51771,51772,51773,51774,51775,51776,51777,51778,51779,51780,51781,51782,12593,12594,12595,12596,12597,12598,12599,12600,12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616,12617,12618,12619,12620,12621,12622,12623,12624,12625,12626,12627,12628,12629,12630,12631,12632,12633,12634,12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646,12647,12648,12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663,12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676,12677,12678,12679,12680,12681,12682,12683,12684,12685,12686,51783,51784,51785,51786,51787,51790,51791,51793,51794,51795,51797,51798,51799,51800,51801,51802,51803,51806,51810,51811,51812,51813,51814,51815,51817,51818,null,null,null,null,null,null,51819,51820,51821,51822,51823,51824,51825,51826,51827,51828,51829,51830,51831,51832,51833,51834,51835,51836,51838,51839,51840,51841,51842,51843,51845,51846,null,null,null,null,null,null,51847,51848,51849,51850,51851,51852,51853,51854,51855,51856,51857,51858,51859,51860,51861,51862,51863,51865,51866,51867,51868,51869,51870,51871,51872,51873,51874,51875,51876,51877,51878,51879,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,null,null,null,null,null,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,51880,51881,51882,51883,51884,51885,51886,51887,51888,51889,51890,51891,51892,51893,51894,51895,51896,51897,51898,51899,51902,51903,51905,51906,51907,51909,null,null,null,null,null,null,51910,51911,51912,51913,51914,51915,51918,51920,51922,51924,51925,51926,51927,51930,51931,51932,51933,51934,51935,51937,51938,51939,51940,51941,51942,51943,null,null,null,null,null,null,51944,51945,51946,51947,51949,51950,51951,51952,51953,51954,51955,51957,51958,51959,51960,51961,51962,51963,51964,51965,51966,51967,51968,51969,51970,51971,51972,51973,51974,51975,51977,51978,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,9490,9489,9498,9497,9494,9493,9486,9485,9502,9503,9505,9506,9510,9511,9513,9514,9517,9518,9521,9522,9525,9526,9529,9530,9533,9534,9536,9537,9539,9540,9541,9542,9543,9544,9545,9546,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51979,51980,51981,51982,51983,51985,51986,51987,51989,51990,51991,51993,51994,51995,51996,51997,51998,51999,52002,52003,52004,52005,52006,52007,52008,52009,null,null,null,null,null,null,52010,52011,52012,52013,52014,52015,52016,52017,52018,52019,52020,52021,52022,52023,52024,52025,52026,52027,52028,52029,52030,52031,52032,52034,52035,52036,null,null,null,null,null,null,52037,52038,52039,52042,52043,52045,52046,52047,52049,52050,52051,52052,52053,52054,52055,52058,52059,52060,52062,52063,52064,52065,52066,52067,52069,52070,52071,52072,52073,52074,52075,52076,13205,13206,13207,8467,13208,13252,13219,13220,13221,13222,13209,13210,13211,13212,13213,13214,13215,13216,13217,13218,13258,13197,13198,13199,13263,13192,13193,13256,13223,13224,13232,13233,13234,13235,13236,13237,13238,13239,13240,13241,13184,13185,13186,13187,13188,13242,13243,13244,13245,13246,13247,13200,13201,13202,13203,13204,8486,13248,13249,13194,13195,13196,13270,13253,13229,13230,13231,13275,13225,13226,13227,13228,13277,13264,13267,13251,13257,13276,13254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52077,52078,52079,52080,52081,52082,52083,52084,52085,52086,52087,52090,52091,52092,52093,52094,52095,52096,52097,52098,52099,52100,52101,52102,52103,52104,null,null,null,null,null,null,52105,52106,52107,52108,52109,52110,52111,52112,52113,52114,52115,52116,52117,52118,52119,52120,52121,52122,52123,52125,52126,52127,52128,52129,52130,52131,null,null,null,null,null,null,52132,52133,52134,52135,52136,52137,52138,52139,52140,52141,52142,52143,52144,52145,52146,52147,52148,52149,52150,52151,52153,52154,52155,52156,52157,52158,52159,52160,52161,52162,52163,52164,198,208,170,294,null,306,null,319,321,216,338,186,222,358,330,null,12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911,12912,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12923,9424,9425,9426,9427,9428,9429,9430,9431,9432,9433,9434,9435,9436,9437,9438,9439,9440,9441,9442,9443,9444,9445,9446,9447,9448,9449,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,189,8531,8532,188,190,8539,8540,8541,8542,52165,52166,52167,52168,52169,52170,52171,52172,52173,52174,52175,52176,52177,52178,52179,52181,52182,52183,52184,52185,52186,52187,52188,52189,52190,52191,null,null,null,null,null,null,52192,52193,52194,52195,52197,52198,52200,52202,52203,52204,52205,52206,52207,52208,52209,52210,52211,52212,52213,52214,52215,52216,52217,52218,52219,52220,null,null,null,null,null,null,52221,52222,52223,52224,52225,52226,52227,52228,52229,52230,52231,52232,52233,52234,52235,52238,52239,52241,52242,52243,52245,52246,52247,52248,52249,52250,52251,52254,52255,52256,52259,52260,230,273,240,295,305,307,312,320,322,248,339,223,254,359,331,329,12800,12801,12802,12803,12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819,12820,12821,12822,12823,12824,12825,12826,12827,9372,9373,9374,9375,9376,9377,9378,9379,9380,9381,9382,9383,9384,9385,9386,9387,9388,9389,9390,9391,9392,9393,9394,9395,9396,9397,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,185,178,179,8308,8319,8321,8322,8323,8324,52261,52262,52266,52267,52269,52271,52273,52274,52275,52276,52277,52278,52279,52282,52287,52288,52289,52290,52291,52294,52295,52297,52298,52299,52301,52302,null,null,null,null,null,null,52303,52304,52305,52306,52307,52310,52314,52315,52316,52317,52318,52319,52321,52322,52323,52325,52327,52329,52330,52331,52332,52333,52334,52335,52337,52338,null,null,null,null,null,null,52339,52340,52342,52343,52344,52345,52346,52347,52348,52349,52350,52351,52352,52353,52354,52355,52356,52357,52358,52359,52360,52361,52362,52363,52364,52365,52366,52367,52368,52369,52370,52371,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,52372,52373,52374,52375,52378,52379,52381,52382,52383,52385,52386,52387,52388,52389,52390,52391,52394,52398,52399,52400,52401,52402,52403,52406,52407,52409,null,null,null,null,null,null,52410,52411,52413,52414,52415,52416,52417,52418,52419,52422,52424,52426,52427,52428,52429,52430,52431,52433,52434,52435,52437,52438,52439,52440,52441,52442,null,null,null,null,null,null,52443,52444,52445,52446,52447,52448,52449,52450,52451,52453,52454,52455,52456,52457,52458,52459,52461,52462,52463,52465,52466,52467,52468,52469,52470,52471,52472,52473,52474,52475,52476,52477,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,52478,52479,52480,52482,52483,52484,52485,52486,52487,52490,52491,52493,52494,52495,52497,52498,52499,52500,52501,52502,52503,52506,52508,52510,52511,52512,null,null,null,null,null,null,52513,52514,52515,52517,52518,52519,52521,52522,52523,52525,52526,52527,52528,52529,52530,52531,52532,52533,52534,52535,52536,52538,52539,52540,52541,52542,null,null,null,null,null,null,52543,52544,52545,52546,52547,52548,52549,52550,52551,52552,52553,52554,52555,52556,52557,52558,52559,52560,52561,52562,52563,52564,52565,52566,52567,52568,52569,52570,52571,52573,52574,52575,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,52577,52578,52579,52581,52582,52583,52584,52585,52586,52587,52590,52592,52594,52595,52596,52597,52598,52599,52601,52602,52603,52604,52605,52606,52607,52608,null,null,null,null,null,null,52609,52610,52611,52612,52613,52614,52615,52617,52618,52619,52620,52621,52622,52623,52624,52625,52626,52627,52630,52631,52633,52634,52635,52637,52638,52639,null,null,null,null,null,null,52640,52641,52642,52643,52646,52648,52650,52651,52652,52653,52654,52655,52657,52658,52659,52660,52661,52662,52663,52664,52665,52666,52667,52668,52669,52670,52671,52672,52673,52674,52675,52677,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52678,52679,52680,52681,52682,52683,52685,52686,52687,52689,52690,52691,52692,52693,52694,52695,52696,52697,52698,52699,52700,52701,52702,52703,52704,52705,null,null,null,null,null,null,52706,52707,52708,52709,52710,52711,52713,52714,52715,52717,52718,52719,52721,52722,52723,52724,52725,52726,52727,52730,52732,52734,52735,52736,52737,52738,null,null,null,null,null,null,52739,52741,52742,52743,52745,52746,52747,52749,52750,52751,52752,52753,52754,52755,52757,52758,52759,52760,52762,52763,52764,52765,52766,52767,52770,52771,52773,52774,52775,52777,52778,52779,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52780,52781,52782,52783,52786,52788,52790,52791,52792,52793,52794,52795,52796,52797,52798,52799,52800,52801,52802,52803,52804,52805,52806,52807,52808,52809,null,null,null,null,null,null,52810,52811,52812,52813,52814,52815,52816,52817,52818,52819,52820,52821,52822,52823,52826,52827,52829,52830,52834,52835,52836,52837,52838,52839,52842,52844,null,null,null,null,null,null,52846,52847,52848,52849,52850,52851,52854,52855,52857,52858,52859,52861,52862,52863,52864,52865,52866,52867,52870,52872,52874,52875,52876,52877,52878,52879,52882,52883,52885,52886,52887,52889,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52890,52891,52892,52893,52894,52895,52898,52902,52903,52904,52905,52906,52907,52910,52911,52912,52913,52914,52915,52916,52917,52918,52919,52920,52921,52922,null,null,null,null,null,null,52923,52924,52925,52926,52927,52928,52930,52931,52932,52933,52934,52935,52936,52937,52938,52939,52940,52941,52942,52943,52944,52945,52946,52947,52948,52949,null,null,null,null,null,null,52950,52951,52952,52953,52954,52955,52956,52957,52958,52959,52960,52961,52962,52963,52966,52967,52969,52970,52973,52974,52975,52976,52977,52978,52979,52982,52986,52987,52988,52989,52990,52991,44032,44033,44036,44039,44040,44041,44042,44048,44049,44050,44051,44052,44053,44054,44055,44057,44058,44059,44060,44061,44064,44068,44076,44077,44079,44080,44081,44088,44089,44092,44096,44107,44109,44116,44120,44124,44144,44145,44148,44151,44152,44154,44160,44161,44163,44164,44165,44166,44169,44170,44171,44172,44176,44180,44188,44189,44191,44192,44193,44200,44201,44202,44204,44207,44208,44216,44217,44219,44220,44221,44225,44228,44232,44236,44245,44247,44256,44257,44260,44263,44264,44266,44268,44271,44272,44273,44275,44277,44278,44284,44285,44288,44292,44294,52994,52995,52997,52998,52999,53001,53002,53003,53004,53005,53006,53007,53010,53012,53014,53015,53016,53017,53018,53019,53021,53022,53023,53025,53026,53027,null,null,null,null,null,null,53029,53030,53031,53032,53033,53034,53035,53038,53042,53043,53044,53045,53046,53047,53049,53050,53051,53052,53053,53054,53055,53056,53057,53058,53059,53060,null,null,null,null,null,null,53061,53062,53063,53064,53065,53066,53067,53068,53069,53070,53071,53072,53073,53074,53075,53078,53079,53081,53082,53083,53085,53086,53087,53088,53089,53090,53091,53094,53096,53098,53099,53100,44300,44301,44303,44305,44312,44316,44320,44329,44332,44333,44340,44341,44344,44348,44356,44357,44359,44361,44368,44372,44376,44385,44387,44396,44397,44400,44403,44404,44405,44406,44411,44412,44413,44415,44417,44418,44424,44425,44428,44432,44444,44445,44452,44471,44480,44481,44484,44488,44496,44497,44499,44508,44512,44516,44536,44537,44540,44543,44544,44545,44552,44553,44555,44557,44564,44592,44593,44596,44599,44600,44602,44608,44609,44611,44613,44614,44618,44620,44621,44622,44624,44628,44630,44636,44637,44639,44640,44641,44645,44648,44649,44652,44656,44664,53101,53102,53103,53106,53107,53109,53110,53111,53113,53114,53115,53116,53117,53118,53119,53121,53122,53123,53124,53126,53127,53128,53129,53130,53131,53133,null,null,null,null,null,null,53134,53135,53136,53137,53138,53139,53140,53141,53142,53143,53144,53145,53146,53147,53148,53149,53150,53151,53152,53154,53155,53156,53157,53158,53159,53161,null,null,null,null,null,null,53162,53163,53164,53165,53166,53167,53169,53170,53171,53172,53173,53174,53175,53176,53177,53178,53179,53180,53181,53182,53183,53184,53185,53186,53187,53189,53190,53191,53192,53193,53194,53195,44665,44667,44668,44669,44676,44677,44684,44732,44733,44734,44736,44740,44748,44749,44751,44752,44753,44760,44761,44764,44776,44779,44781,44788,44792,44796,44807,44808,44813,44816,44844,44845,44848,44850,44852,44860,44861,44863,44865,44866,44867,44872,44873,44880,44892,44893,44900,44901,44921,44928,44932,44936,44944,44945,44949,44956,44984,44985,44988,44992,44999,45e3,45001,45003,45005,45006,45012,45020,45032,45033,45040,45041,45044,45048,45056,45057,45060,45068,45072,45076,45084,45085,45096,45124,45125,45128,45130,45132,45134,45139,45140,45141,45143,45145,53196,53197,53198,53199,53200,53201,53202,53203,53204,53205,53206,53207,53208,53209,53210,53211,53212,53213,53214,53215,53218,53219,53221,53222,53223,53225,null,null,null,null,null,null,53226,53227,53228,53229,53230,53231,53234,53236,53238,53239,53240,53241,53242,53243,53245,53246,53247,53249,53250,53251,53253,53254,53255,53256,53257,53258,null,null,null,null,null,null,53259,53260,53261,53262,53263,53264,53266,53267,53268,53269,53270,53271,53273,53274,53275,53276,53277,53278,53279,53280,53281,53282,53283,53284,53285,53286,53287,53288,53289,53290,53291,53292,45149,45180,45181,45184,45188,45196,45197,45199,45201,45208,45209,45210,45212,45215,45216,45217,45218,45224,45225,45227,45228,45229,45230,45231,45233,45235,45236,45237,45240,45244,45252,45253,45255,45256,45257,45264,45265,45268,45272,45280,45285,45320,45321,45323,45324,45328,45330,45331,45336,45337,45339,45340,45341,45347,45348,45349,45352,45356,45364,45365,45367,45368,45369,45376,45377,45380,45384,45392,45393,45396,45397,45400,45404,45408,45432,45433,45436,45440,45442,45448,45449,45451,45453,45458,45459,45460,45464,45468,45480,45516,45520,45524,45532,45533,53294,53295,53296,53297,53298,53299,53302,53303,53305,53306,53307,53309,53310,53311,53312,53313,53314,53315,53318,53320,53322,53323,53324,53325,53326,53327,null,null,null,null,null,null,53329,53330,53331,53333,53334,53335,53337,53338,53339,53340,53341,53342,53343,53345,53346,53347,53348,53349,53350,53351,53352,53353,53354,53355,53358,53359,null,null,null,null,null,null,53361,53362,53363,53365,53366,53367,53368,53369,53370,53371,53374,53375,53376,53378,53379,53380,53381,53382,53383,53384,53385,53386,53387,53388,53389,53390,53391,53392,53393,53394,53395,53396,45535,45544,45545,45548,45552,45561,45563,45565,45572,45573,45576,45579,45580,45588,45589,45591,45593,45600,45620,45628,45656,45660,45664,45672,45673,45684,45685,45692,45700,45701,45705,45712,45713,45716,45720,45721,45722,45728,45729,45731,45733,45734,45738,45740,45744,45748,45768,45769,45772,45776,45778,45784,45785,45787,45789,45794,45796,45797,45798,45800,45803,45804,45805,45806,45807,45811,45812,45813,45815,45816,45817,45818,45819,45823,45824,45825,45828,45832,45840,45841,45843,45844,45845,45852,45908,45909,45910,45912,45915,45916,45918,45919,45924,45925,53397,53398,53399,53400,53401,53402,53403,53404,53405,53406,53407,53408,53409,53410,53411,53414,53415,53417,53418,53419,53421,53422,53423,53424,53425,53426,null,null,null,null,null,null,53427,53430,53432,53434,53435,53436,53437,53438,53439,53442,53443,53445,53446,53447,53450,53451,53452,53453,53454,53455,53458,53462,53463,53464,53465,53466,null,null,null,null,null,null,53467,53470,53471,53473,53474,53475,53477,53478,53479,53480,53481,53482,53483,53486,53490,53491,53492,53493,53494,53495,53497,53498,53499,53500,53501,53502,53503,53504,53505,53506,53507,53508,45927,45929,45931,45934,45936,45937,45940,45944,45952,45953,45955,45956,45957,45964,45968,45972,45984,45985,45992,45996,46020,46021,46024,46027,46028,46030,46032,46036,46037,46039,46041,46043,46045,46048,46052,46056,46076,46096,46104,46108,46112,46120,46121,46123,46132,46160,46161,46164,46168,46176,46177,46179,46181,46188,46208,46216,46237,46244,46248,46252,46261,46263,46265,46272,46276,46280,46288,46293,46300,46301,46304,46307,46308,46310,46316,46317,46319,46321,46328,46356,46357,46360,46363,46364,46372,46373,46375,46376,46377,46378,46384,46385,46388,46392,53509,53510,53511,53512,53513,53514,53515,53516,53518,53519,53520,53521,53522,53523,53524,53525,53526,53527,53528,53529,53530,53531,53532,53533,53534,53535,null,null,null,null,null,null,53536,53537,53538,53539,53540,53541,53542,53543,53544,53545,53546,53547,53548,53549,53550,53551,53554,53555,53557,53558,53559,53561,53563,53564,53565,53566,null,null,null,null,null,null,53567,53570,53574,53575,53576,53577,53578,53579,53582,53583,53585,53586,53587,53589,53590,53591,53592,53593,53594,53595,53598,53600,53602,53603,53604,53605,53606,53607,53609,53610,53611,53613,46400,46401,46403,46404,46405,46411,46412,46413,46416,46420,46428,46429,46431,46432,46433,46496,46497,46500,46504,46506,46507,46512,46513,46515,46516,46517,46523,46524,46525,46528,46532,46540,46541,46543,46544,46545,46552,46572,46608,46609,46612,46616,46629,46636,46644,46664,46692,46696,46748,46749,46752,46756,46763,46764,46769,46804,46832,46836,46840,46848,46849,46853,46888,46889,46892,46895,46896,46904,46905,46907,46916,46920,46924,46932,46933,46944,46948,46952,46960,46961,46963,46965,46972,46973,46976,46980,46988,46989,46991,46992,46993,46994,46998,46999,53614,53615,53616,53617,53618,53619,53620,53621,53622,53623,53624,53625,53626,53627,53629,53630,53631,53632,53633,53634,53635,53637,53638,53639,53641,53642,null,null,null,null,null,null,53643,53644,53645,53646,53647,53648,53649,53650,53651,53652,53653,53654,53655,53656,53657,53658,53659,53660,53661,53662,53663,53666,53667,53669,53670,53671,null,null,null,null,null,null,53673,53674,53675,53676,53677,53678,53679,53682,53684,53686,53687,53688,53689,53691,53693,53694,53695,53697,53698,53699,53700,53701,53702,53703,53704,53705,53706,53707,53708,53709,53710,53711,47e3,47001,47004,47008,47016,47017,47019,47020,47021,47028,47029,47032,47047,47049,47084,47085,47088,47092,47100,47101,47103,47104,47105,47111,47112,47113,47116,47120,47128,47129,47131,47133,47140,47141,47144,47148,47156,47157,47159,47160,47161,47168,47172,47185,47187,47196,47197,47200,47204,47212,47213,47215,47217,47224,47228,47245,47272,47280,47284,47288,47296,47297,47299,47301,47308,47312,47316,47325,47327,47329,47336,47337,47340,47344,47352,47353,47355,47357,47364,47384,47392,47420,47421,47424,47428,47436,47439,47441,47448,47449,47452,47456,47464,47465,53712,53713,53714,53715,53716,53717,53718,53719,53721,53722,53723,53724,53725,53726,53727,53728,53729,53730,53731,53732,53733,53734,53735,53736,53737,53738,null,null,null,null,null,null,53739,53740,53741,53742,53743,53744,53745,53746,53747,53749,53750,53751,53753,53754,53755,53756,53757,53758,53759,53760,53761,53762,53763,53764,53765,53766,null,null,null,null,null,null,53768,53770,53771,53772,53773,53774,53775,53777,53778,53779,53780,53781,53782,53783,53784,53785,53786,53787,53788,53789,53790,53791,53792,53793,53794,53795,53796,53797,53798,53799,53800,53801,47467,47469,47476,47477,47480,47484,47492,47493,47495,47497,47498,47501,47502,47532,47533,47536,47540,47548,47549,47551,47553,47560,47561,47564,47566,47567,47568,47569,47570,47576,47577,47579,47581,47582,47585,47587,47588,47589,47592,47596,47604,47605,47607,47608,47609,47610,47616,47617,47624,47637,47672,47673,47676,47680,47682,47688,47689,47691,47693,47694,47699,47700,47701,47704,47708,47716,47717,47719,47720,47721,47728,47729,47732,47736,47747,47748,47749,47751,47756,47784,47785,47787,47788,47792,47794,47800,47801,47803,47805,47812,47816,47832,47833,47868,53802,53803,53806,53807,53809,53810,53811,53813,53814,53815,53816,53817,53818,53819,53822,53824,53826,53827,53828,53829,53830,53831,53833,53834,53835,53836,null,null,null,null,null,null,53837,53838,53839,53840,53841,53842,53843,53844,53845,53846,53847,53848,53849,53850,53851,53853,53854,53855,53856,53857,53858,53859,53861,53862,53863,53864,null,null,null,null,null,null,53865,53866,53867,53868,53869,53870,53871,53872,53873,53874,53875,53876,53877,53878,53879,53880,53881,53882,53883,53884,53885,53886,53887,53890,53891,53893,53894,53895,53897,53898,53899,53900,47872,47876,47885,47887,47889,47896,47900,47904,47913,47915,47924,47925,47926,47928,47931,47932,47933,47934,47940,47941,47943,47945,47949,47951,47952,47956,47960,47969,47971,47980,48008,48012,48016,48036,48040,48044,48052,48055,48064,48068,48072,48080,48083,48120,48121,48124,48127,48128,48130,48136,48137,48139,48140,48141,48143,48145,48148,48149,48150,48151,48152,48155,48156,48157,48158,48159,48164,48165,48167,48169,48173,48176,48177,48180,48184,48192,48193,48195,48196,48197,48201,48204,48205,48208,48221,48260,48261,48264,48267,48268,48270,48276,48277,48279,53901,53902,53903,53906,53907,53908,53910,53911,53912,53913,53914,53915,53917,53918,53919,53921,53922,53923,53925,53926,53927,53928,53929,53930,53931,53933,null,null,null,null,null,null,53934,53935,53936,53938,53939,53940,53941,53942,53943,53946,53947,53949,53950,53953,53955,53956,53957,53958,53959,53962,53964,53965,53966,53967,53968,53969,null,null,null,null,null,null,53970,53971,53973,53974,53975,53977,53978,53979,53981,53982,53983,53984,53985,53986,53987,53990,53991,53992,53993,53994,53995,53996,53997,53998,53999,54002,54003,54005,54006,54007,54009,54010,48281,48282,48288,48289,48292,48295,48296,48304,48305,48307,48308,48309,48316,48317,48320,48324,48333,48335,48336,48337,48341,48344,48348,48372,48373,48374,48376,48380,48388,48389,48391,48393,48400,48404,48420,48428,48448,48456,48457,48460,48464,48472,48473,48484,48488,48512,48513,48516,48519,48520,48521,48522,48528,48529,48531,48533,48537,48538,48540,48548,48560,48568,48596,48597,48600,48604,48617,48624,48628,48632,48640,48643,48645,48652,48653,48656,48660,48668,48669,48671,48708,48709,48712,48716,48718,48724,48725,48727,48729,48730,48731,48736,48737,48740,54011,54012,54013,54014,54015,54018,54020,54022,54023,54024,54025,54026,54027,54031,54033,54034,54035,54037,54039,54040,54041,54042,54043,54046,54050,54051,null,null,null,null,null,null,54052,54054,54055,54058,54059,54061,54062,54063,54065,54066,54067,54068,54069,54070,54071,54074,54078,54079,54080,54081,54082,54083,54086,54087,54088,54089,null,null,null,null,null,null,54090,54091,54092,54093,54094,54095,54096,54097,54098,54099,54100,54101,54102,54103,54104,54105,54106,54107,54108,54109,54110,54111,54112,54113,54114,54115,54116,54117,54118,54119,54120,54121,48744,48746,48752,48753,48755,48756,48757,48763,48764,48765,48768,48772,48780,48781,48783,48784,48785,48792,48793,48808,48848,48849,48852,48855,48856,48864,48867,48868,48869,48876,48897,48904,48905,48920,48921,48923,48924,48925,48960,48961,48964,48968,48976,48977,48981,49044,49072,49093,49100,49101,49104,49108,49116,49119,49121,49212,49233,49240,49244,49248,49256,49257,49296,49297,49300,49304,49312,49313,49315,49317,49324,49325,49327,49328,49331,49332,49333,49334,49340,49341,49343,49344,49345,49349,49352,49353,49356,49360,49368,49369,49371,49372,49373,49380,54122,54123,54124,54125,54126,54127,54128,54129,54130,54131,54132,54133,54134,54135,54136,54137,54138,54139,54142,54143,54145,54146,54147,54149,54150,54151,null,null,null,null,null,null,54152,54153,54154,54155,54158,54162,54163,54164,54165,54166,54167,54170,54171,54173,54174,54175,54177,54178,54179,54180,54181,54182,54183,54186,54188,54190,null,null,null,null,null,null,54191,54192,54193,54194,54195,54197,54198,54199,54201,54202,54203,54205,54206,54207,54208,54209,54210,54211,54214,54215,54218,54219,54220,54221,54222,54223,54225,54226,54227,54228,54229,54230,49381,49384,49388,49396,49397,49399,49401,49408,49412,49416,49424,49429,49436,49437,49438,49439,49440,49443,49444,49446,49447,49452,49453,49455,49456,49457,49462,49464,49465,49468,49472,49480,49481,49483,49484,49485,49492,49493,49496,49500,49508,49509,49511,49512,49513,49520,49524,49528,49541,49548,49549,49550,49552,49556,49558,49564,49565,49567,49569,49573,49576,49577,49580,49584,49597,49604,49608,49612,49620,49623,49624,49632,49636,49640,49648,49649,49651,49660,49661,49664,49668,49676,49677,49679,49681,49688,49689,49692,49695,49696,49704,49705,49707,49709,54231,54233,54234,54235,54236,54237,54238,54239,54240,54242,54244,54245,54246,54247,54248,54249,54250,54251,54254,54255,54257,54258,54259,54261,54262,54263,null,null,null,null,null,null,54264,54265,54266,54267,54270,54272,54274,54275,54276,54277,54278,54279,54281,54282,54283,54284,54285,54286,54287,54288,54289,54290,54291,54292,54293,54294,null,null,null,null,null,null,54295,54296,54297,54298,54299,54300,54302,54303,54304,54305,54306,54307,54308,54309,54310,54311,54312,54313,54314,54315,54316,54317,54318,54319,54320,54321,54322,54323,54324,54325,54326,54327,49711,49713,49714,49716,49736,49744,49745,49748,49752,49760,49765,49772,49773,49776,49780,49788,49789,49791,49793,49800,49801,49808,49816,49819,49821,49828,49829,49832,49836,49837,49844,49845,49847,49849,49884,49885,49888,49891,49892,49899,49900,49901,49903,49905,49910,49912,49913,49915,49916,49920,49928,49929,49932,49933,49939,49940,49941,49944,49948,49956,49957,49960,49961,49989,50024,50025,50028,50032,50034,50040,50041,50044,50045,50052,50056,50060,50112,50136,50137,50140,50143,50144,50146,50152,50153,50157,50164,50165,50168,50184,50192,50212,50220,50224,54328,54329,54330,54331,54332,54333,54334,54335,54337,54338,54339,54341,54342,54343,54344,54345,54346,54347,54348,54349,54350,54351,54352,54353,54354,54355,null,null,null,null,null,null,54356,54357,54358,54359,54360,54361,54362,54363,54365,54366,54367,54369,54370,54371,54373,54374,54375,54376,54377,54378,54379,54380,54382,54384,54385,54386,null,null,null,null,null,null,54387,54388,54389,54390,54391,54394,54395,54397,54398,54401,54403,54404,54405,54406,54407,54410,54412,54414,54415,54416,54417,54418,54419,54421,54422,54423,54424,54425,54426,54427,54428,54429,50228,50236,50237,50248,50276,50277,50280,50284,50292,50293,50297,50304,50324,50332,50360,50364,50409,50416,50417,50420,50424,50426,50431,50432,50433,50444,50448,50452,50460,50472,50473,50476,50480,50488,50489,50491,50493,50500,50501,50504,50505,50506,50508,50509,50510,50515,50516,50517,50519,50520,50521,50525,50526,50528,50529,50532,50536,50544,50545,50547,50548,50549,50556,50557,50560,50564,50567,50572,50573,50575,50577,50581,50583,50584,50588,50592,50601,50612,50613,50616,50617,50619,50620,50621,50622,50628,50629,50630,50631,50632,50633,50634,50636,50638,54430,54431,54432,54433,54434,54435,54436,54437,54438,54439,54440,54442,54443,54444,54445,54446,54447,54448,54449,54450,54451,54452,54453,54454,54455,54456,null,null,null,null,null,null,54457,54458,54459,54460,54461,54462,54463,54464,54465,54466,54467,54468,54469,54470,54471,54472,54473,54474,54475,54477,54478,54479,54481,54482,54483,54485,null,null,null,null,null,null,54486,54487,54488,54489,54490,54491,54493,54494,54496,54497,54498,54499,54500,54501,54502,54503,54505,54506,54507,54509,54510,54511,54513,54514,54515,54516,54517,54518,54519,54521,54522,54524,50640,50641,50644,50648,50656,50657,50659,50661,50668,50669,50670,50672,50676,50678,50679,50684,50685,50686,50687,50688,50689,50693,50694,50695,50696,50700,50704,50712,50713,50715,50716,50724,50725,50728,50732,50733,50734,50736,50739,50740,50741,50743,50745,50747,50752,50753,50756,50760,50768,50769,50771,50772,50773,50780,50781,50784,50796,50799,50801,50808,50809,50812,50816,50824,50825,50827,50829,50836,50837,50840,50844,50852,50853,50855,50857,50864,50865,50868,50872,50873,50874,50880,50881,50883,50885,50892,50893,50896,50900,50908,50909,50912,50913,50920,54526,54527,54528,54529,54530,54531,54533,54534,54535,54537,54538,54539,54541,54542,54543,54544,54545,54546,54547,54550,54552,54553,54554,54555,54556,54557,null,null,null,null,null,null,54558,54559,54560,54561,54562,54563,54564,54565,54566,54567,54568,54569,54570,54571,54572,54573,54574,54575,54576,54577,54578,54579,54580,54581,54582,54583,null,null,null,null,null,null,54584,54585,54586,54587,54590,54591,54593,54594,54595,54597,54598,54599,54600,54601,54602,54603,54606,54608,54610,54611,54612,54613,54614,54615,54618,54619,54621,54622,54623,54625,54626,54627,50921,50924,50928,50936,50937,50941,50948,50949,50952,50956,50964,50965,50967,50969,50976,50977,50980,50984,50992,50993,50995,50997,50999,51004,51005,51008,51012,51018,51020,51021,51023,51025,51026,51027,51028,51029,51030,51031,51032,51036,51040,51048,51051,51060,51061,51064,51068,51069,51070,51075,51076,51077,51079,51080,51081,51082,51086,51088,51089,51092,51094,51095,51096,51098,51104,51105,51107,51108,51109,51110,51116,51117,51120,51124,51132,51133,51135,51136,51137,51144,51145,51148,51150,51152,51160,51165,51172,51176,51180,51200,51201,51204,51208,51210,54628,54630,54631,54634,54636,54638,54639,54640,54641,54642,54643,54646,54647,54649,54650,54651,54653,54654,54655,54656,54657,54658,54659,54662,54666,54667,null,null,null,null,null,null,54668,54669,54670,54671,54673,54674,54675,54676,54677,54678,54679,54680,54681,54682,54683,54684,54685,54686,54687,54688,54689,54690,54691,54692,54694,54695,null,null,null,null,null,null,54696,54697,54698,54699,54700,54701,54702,54703,54704,54705,54706,54707,54708,54709,54710,54711,54712,54713,54714,54715,54716,54717,54718,54719,54720,54721,54722,54723,54724,54725,54726,54727,51216,51217,51219,51221,51222,51228,51229,51232,51236,51244,51245,51247,51249,51256,51260,51264,51272,51273,51276,51277,51284,51312,51313,51316,51320,51322,51328,51329,51331,51333,51334,51335,51339,51340,51341,51348,51357,51359,51361,51368,51388,51389,51396,51400,51404,51412,51413,51415,51417,51424,51425,51428,51445,51452,51453,51456,51460,51461,51462,51468,51469,51471,51473,51480,51500,51508,51536,51537,51540,51544,51552,51553,51555,51564,51568,51572,51580,51592,51593,51596,51600,51608,51609,51611,51613,51648,51649,51652,51655,51656,51658,51664,51665,51667,54730,54731,54733,54734,54735,54737,54739,54740,54741,54742,54743,54746,54748,54750,54751,54752,54753,54754,54755,54758,54759,54761,54762,54763,54765,54766,null,null,null,null,null,null,54767,54768,54769,54770,54771,54774,54776,54778,54779,54780,54781,54782,54783,54786,54787,54789,54790,54791,54793,54794,54795,54796,54797,54798,54799,54802,null,null,null,null,null,null,54806,54807,54808,54809,54810,54811,54813,54814,54815,54817,54818,54819,54821,54822,54823,54824,54825,54826,54827,54828,54830,54831,54832,54833,54834,54835,54836,54837,54838,54839,54842,54843,51669,51670,51673,51674,51676,51677,51680,51682,51684,51687,51692,51693,51695,51696,51697,51704,51705,51708,51712,51720,51721,51723,51724,51725,51732,51736,51753,51788,51789,51792,51796,51804,51805,51807,51808,51809,51816,51837,51844,51864,51900,51901,51904,51908,51916,51917,51919,51921,51923,51928,51929,51936,51948,51956,51976,51984,51988,51992,52e3,52001,52033,52040,52041,52044,52048,52056,52057,52061,52068,52088,52089,52124,52152,52180,52196,52199,52201,52236,52237,52240,52244,52252,52253,52257,52258,52263,52264,52265,52268,52270,52272,52280,52281,52283,54845,54846,54847,54849,54850,54851,54852,54854,54855,54858,54860,54862,54863,54864,54866,54867,54870,54871,54873,54874,54875,54877,54878,54879,54880,54881,null,null,null,null,null,null,54882,54883,54884,54885,54886,54888,54890,54891,54892,54893,54894,54895,54898,54899,54901,54902,54903,54904,54905,54906,54907,54908,54909,54910,54911,54912,null,null,null,null,null,null,54913,54914,54916,54918,54919,54920,54921,54922,54923,54926,54927,54929,54930,54931,54933,54934,54935,54936,54937,54938,54939,54940,54942,54944,54946,54947,54948,54949,54950,54951,54953,54954,52284,52285,52286,52292,52293,52296,52300,52308,52309,52311,52312,52313,52320,52324,52326,52328,52336,52341,52376,52377,52380,52384,52392,52393,52395,52396,52397,52404,52405,52408,52412,52420,52421,52423,52425,52432,52436,52452,52460,52464,52481,52488,52489,52492,52496,52504,52505,52507,52509,52516,52520,52524,52537,52572,52576,52580,52588,52589,52591,52593,52600,52616,52628,52629,52632,52636,52644,52645,52647,52649,52656,52676,52684,52688,52712,52716,52720,52728,52729,52731,52733,52740,52744,52748,52756,52761,52768,52769,52772,52776,52784,52785,52787,52789,54955,54957,54958,54959,54961,54962,54963,54964,54965,54966,54967,54968,54970,54972,54973,54974,54975,54976,54977,54978,54979,54982,54983,54985,54986,54987,null,null,null,null,null,null,54989,54990,54991,54992,54994,54995,54997,54998,55e3,55002,55003,55004,55005,55006,55007,55009,55010,55011,55013,55014,55015,55017,55018,55019,55020,55021,null,null,null,null,null,null,55022,55023,55025,55026,55027,55028,55030,55031,55032,55033,55034,55035,55038,55039,55041,55042,55043,55045,55046,55047,55048,55049,55050,55051,55052,55053,55054,55055,55056,55058,55059,55060,52824,52825,52828,52831,52832,52833,52840,52841,52843,52845,52852,52853,52856,52860,52868,52869,52871,52873,52880,52881,52884,52888,52896,52897,52899,52900,52901,52908,52909,52929,52964,52965,52968,52971,52972,52980,52981,52983,52984,52985,52992,52993,52996,53e3,53008,53009,53011,53013,53020,53024,53028,53036,53037,53039,53040,53041,53048,53076,53077,53080,53084,53092,53093,53095,53097,53104,53105,53108,53112,53120,53125,53132,53153,53160,53168,53188,53216,53217,53220,53224,53232,53233,53235,53237,53244,53248,53252,53265,53272,53293,53300,53301,53304,53308,55061,55062,55063,55066,55067,55069,55070,55071,55073,55074,55075,55076,55077,55078,55079,55082,55084,55086,55087,55088,55089,55090,55091,55094,55095,55097,null,null,null,null,null,null,55098,55099,55101,55102,55103,55104,55105,55106,55107,55109,55110,55112,55114,55115,55116,55117,55118,55119,55122,55123,55125,55130,55131,55132,55133,55134,null,null,null,null,null,null,55135,55138,55140,55142,55143,55144,55146,55147,55149,55150,55151,55153,55154,55155,55157,55158,55159,55160,55161,55162,55163,55166,55167,55168,55170,55171,55172,55173,55174,55175,55178,55179,53316,53317,53319,53321,53328,53332,53336,53344,53356,53357,53360,53364,53372,53373,53377,53412,53413,53416,53420,53428,53429,53431,53433,53440,53441,53444,53448,53449,53456,53457,53459,53460,53461,53468,53469,53472,53476,53484,53485,53487,53488,53489,53496,53517,53552,53553,53556,53560,53562,53568,53569,53571,53572,53573,53580,53581,53584,53588,53596,53597,53599,53601,53608,53612,53628,53636,53640,53664,53665,53668,53672,53680,53681,53683,53685,53690,53692,53696,53720,53748,53752,53767,53769,53776,53804,53805,53808,53812,53820,53821,53823,53825,53832,53852,55181,55182,55183,55185,55186,55187,55188,55189,55190,55191,55194,55196,55198,55199,55200,55201,55202,55203,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,53860,53888,53889,53892,53896,53904,53905,53909,53916,53920,53924,53932,53937,53944,53945,53948,53951,53952,53954,53960,53961,53963,53972,53976,53980,53988,53989,54e3,54001,54004,54008,54016,54017,54019,54021,54028,54029,54030,54032,54036,54038,54044,54045,54047,54048,54049,54053,54056,54057,54060,54064,54072,54073,54075,54076,54077,54084,54085,54140,54141,54144,54148,54156,54157,54159,54160,54161,54168,54169,54172,54176,54184,54185,54187,54189,54196,54200,54204,54212,54213,54216,54217,54224,54232,54241,54243,54252,54253,54256,54260,54268,54269,54271,54273,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54280,54301,54336,54340,54364,54368,54372,54381,54383,54392,54393,54396,54399,54400,54402,54408,54409,54411,54413,54420,54441,54476,54480,54484,54492,54495,54504,54508,54512,54520,54523,54525,54532,54536,54540,54548,54549,54551,54588,54589,54592,54596,54604,54605,54607,54609,54616,54617,54620,54624,54629,54632,54633,54635,54637,54644,54645,54648,54652,54660,54661,54663,54664,54665,54672,54693,54728,54729,54732,54736,54738,54744,54745,54747,54749,54756,54757,54760,54764,54772,54773,54775,54777,54784,54785,54788,54792,54800,54801,54803,54804,54805,54812,54816,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54820,54829,54840,54841,54844,54848,54853,54856,54857,54859,54861,54865,54868,54869,54872,54876,54887,54889,54896,54897,54900,54915,54917,54924,54925,54928,54932,54941,54943,54945,54952,54956,54960,54969,54971,54980,54981,54984,54988,54993,54996,54999,55001,55008,55012,55016,55024,55029,55036,55037,55040,55044,55057,55064,55065,55068,55072,55080,55081,55083,55085,55092,55093,55096,55100,55108,55111,55113,55120,55121,55124,55126,55127,55128,55129,55136,55137,55139,55141,55145,55148,55152,55156,55164,55165,55169,55176,55177,55180,55184,55192,55193,55195,55197,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20285,20339,20551,20729,21152,21487,21621,21733,22025,23233,23478,26247,26550,26551,26607,27468,29634,30146,31292,33499,33540,34903,34952,35382,36040,36303,36603,36838,39381,21051,21364,21508,24682,24932,27580,29647,33050,35258,35282,38307,20355,21002,22718,22904,23014,24178,24185,25031,25536,26438,26604,26751,28567,30286,30475,30965,31240,31487,31777,32925,33390,33393,35563,38291,20075,21917,26359,28212,30883,31469,33883,35088,34638,38824,21208,22350,22570,23884,24863,25022,25121,25954,26577,27204,28187,29976,30131,30435,30640,32058,37039,37969,37970,40853,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21283,23724,30002,32987,37440,38296,21083,22536,23004,23713,23831,24247,24378,24394,24951,27743,30074,30086,31968,32115,32177,32652,33108,33313,34193,35137,35611,37628,38477,40007,20171,20215,20491,20977,22607,24887,24894,24936,25913,27114,28433,30117,30342,30422,31623,33445,33995,63744,37799,38283,21888,23458,22353,63745,31923,32697,37301,20520,21435,23621,24040,25298,25454,25818,25831,28192,28844,31067,36317,36382,63746,36989,37445,37624,20094,20214,20581,24062,24314,24838,26967,33137,34388,36423,37749,39467,20062,20625,26480,26688,20745,21133,21138,27298,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30652,37392,40660,21163,24623,36850,20552,25001,25581,25802,26684,27268,28608,33160,35233,38548,22533,29309,29356,29956,32121,32365,32937,35211,35700,36963,40273,25225,27770,28500,32080,32570,35363,20860,24906,31645,35609,37463,37772,20140,20435,20510,20670,20742,21185,21197,21375,22384,22659,24218,24465,24950,25004,25806,25964,26223,26299,26356,26775,28039,28805,28913,29855,29861,29898,30169,30828,30956,31455,31478,32069,32147,32789,32831,33051,33686,35686,36629,36885,37857,38915,38968,39514,39912,20418,21843,22586,22865,23395,23622,24760,25106,26690,26800,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26856,28330,30028,30328,30926,31293,31995,32363,32380,35336,35489,35903,38542,40388,21476,21481,21578,21617,22266,22993,23396,23611,24235,25335,25911,25925,25970,26272,26543,27073,27837,30204,30352,30590,31295,32660,32771,32929,33167,33510,33533,33776,34241,34865,34996,35493,63747,36764,37678,38599,39015,39640,40723,21741,26011,26354,26767,31296,35895,40288,22256,22372,23825,26118,26801,26829,28414,29736,34974,39908,27752,63748,39592,20379,20844,20849,21151,23380,24037,24656,24685,25329,25511,25915,29657,31354,34467,36002,38799,20018,23521,25096,26524,29916,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31185,33747,35463,35506,36328,36942,37707,38982,24275,27112,34303,37101,63749,20896,23448,23532,24931,26874,27454,28748,29743,29912,31649,32592,33733,35264,36011,38364,39208,21038,24669,25324,36866,20362,20809,21281,22745,24291,26336,27960,28826,29378,29654,31568,33009,37979,21350,25499,32619,20054,20608,22602,22750,24618,24871,25296,27088,39745,23439,32024,32945,36703,20132,20689,21676,21932,23308,23968,24039,25898,25934,26657,27211,29409,30350,30703,32094,32761,33184,34126,34527,36611,36686,37066,39171,39509,39851,19992,20037,20061,20167,20465,20855,21246,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21312,21475,21477,21646,22036,22389,22434,23495,23943,24272,25084,25304,25937,26552,26601,27083,27472,27590,27628,27714,28317,28792,29399,29590,29699,30655,30697,31350,32127,32777,33276,33285,33290,33503,34914,35635,36092,36544,36881,37041,37476,37558,39378,39493,40169,40407,40860,22283,23616,33738,38816,38827,40628,21531,31384,32676,35033,36557,37089,22528,23624,25496,31391,23470,24339,31353,31406,33422,36524,20518,21048,21240,21367,22280,25331,25458,27402,28099,30519,21413,29527,34152,36470,38357,26426,27331,28528,35437,36556,39243,63750,26231,27512,36020,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,39740,63751,21483,22317,22862,25542,27131,29674,30789,31418,31429,31998,33909,35215,36211,36917,38312,21243,22343,30023,31584,33740,37406,63752,27224,20811,21067,21127,25119,26840,26997,38553,20677,21156,21220,25027,26020,26681,27135,29822,31563,33465,33771,35250,35641,36817,39241,63753,20170,22935,25810,26129,27278,29748,31105,31165,33449,34942,34943,35167,63754,37670,20235,21450,24613,25201,27762,32026,32102,20120,20834,30684,32943,20225,20238,20854,20864,21980,22120,22331,22522,22524,22804,22855,22931,23492,23696,23822,24049,24190,24524,25216,26071,26083,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26398,26399,26462,26827,26820,27231,27450,27683,27773,27778,28103,29592,29734,29738,29826,29859,30072,30079,30849,30959,31041,31047,31048,31098,31637,32e3,32186,32648,32774,32813,32908,35352,35663,35912,36215,37665,37668,39138,39249,39438,39439,39525,40594,32202,20342,21513,25326,26708,37329,21931,20794,63755,63756,23068,25062,63757,25295,25343,63758,63759,63760,63761,63762,63763,37027,63764,63765,63766,63767,63768,35582,63769,63770,63771,63772,26262,63773,29014,63774,63775,38627,63776,25423,25466,21335,63777,26511,26976,28275,63778,30007,63779,63780,63781,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32013,63782,63783,34930,22218,23064,63784,63785,63786,63787,63788,20035,63789,20839,22856,26608,32784,63790,22899,24180,25754,31178,24565,24684,25288,25467,23527,23511,21162,63791,22900,24361,24594,63792,63793,63794,29785,63795,63796,63797,63798,63799,63800,39377,63801,63802,63803,63804,63805,63806,63807,63808,63809,63810,63811,28611,63812,63813,33215,36786,24817,63814,63815,33126,63816,63817,23615,63818,63819,63820,63821,63822,63823,63824,63825,23273,35365,26491,32016,63826,63827,63828,63829,63830,63831,33021,63832,63833,23612,27877,21311,28346,22810,33590,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20025,20150,20294,21934,22296,22727,24406,26039,26086,27264,27573,28237,30701,31471,31774,32222,34507,34962,37170,37723,25787,28606,29562,30136,36948,21846,22349,25018,25812,26311,28129,28251,28525,28601,30192,32835,33213,34113,35203,35527,35674,37663,27795,30035,31572,36367,36957,21776,22530,22616,24162,25095,25758,26848,30070,31958,34739,40680,20195,22408,22382,22823,23565,23729,24118,24453,25140,25825,29619,33274,34955,36024,38538,40667,23429,24503,24755,20498,20992,21040,22294,22581,22615,23566,23648,23798,23947,24230,24466,24764,25361,25481,25623,26691,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26873,27330,28120,28193,28372,28644,29182,30428,30585,31153,31291,33796,35241,36077,36339,36424,36867,36884,36947,37117,37709,38518,38876,27602,28678,29272,29346,29544,30563,31167,31716,32411,35712,22697,24775,25958,26109,26302,27788,28958,29129,35930,38931,20077,31361,20189,20908,20941,21205,21516,24999,26481,26704,26847,27934,28540,30140,30643,31461,33012,33891,37509,20828,26007,26460,26515,30168,31431,33651,63834,35910,36887,38957,23663,33216,33434,36929,36975,37389,24471,23965,27225,29128,30331,31561,34276,35588,37159,39472,21895,25078,63835,30313,32645,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34367,34746,35064,37007,63836,27931,28889,29662,32097,33853,63837,37226,39409,63838,20098,21365,27396,27410,28734,29211,34349,40478,21068,36771,23888,25829,25900,27414,28651,31811,32412,34253,35172,35261,25289,33240,34847,24266,26391,28010,29436,29701,29807,34690,37086,20358,23821,24480,33802,20919,25504,30053,20142,20486,20841,20937,26753,27153,31918,31921,31975,33391,35538,36635,37327,20406,20791,21237,21570,24300,24942,25150,26053,27354,28670,31018,34268,34851,38317,39522,39530,40599,40654,21147,26310,27511,28701,31019,36706,38722,24976,25088,25891,28451,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29001,29833,32244,32879,34030,36646,36899,37706,20925,21015,21155,27916,28872,35010,24265,25986,27566,28610,31806,29557,20196,20278,22265,63839,23738,23994,24604,29618,31533,32666,32718,32838,36894,37428,38646,38728,38936,40801,20363,28583,31150,37300,38583,21214,63840,25736,25796,27347,28510,28696,29200,30439,32769,34310,34396,36335,36613,38706,39791,40442,40565,30860,31103,32160,33737,37636,40575,40595,35542,22751,24324,26407,28711,29903,31840,32894,20769,28712,29282,30922,36034,36058,36084,38647,20102,20698,23534,24278,26009,29134,30274,30637,32842,34044,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36988,39719,40845,22744,23105,23650,27155,28122,28431,30267,32047,32311,34078,35128,37860,38475,21129,26066,26611,27060,27969,28316,28687,29705,29792,30041,30244,30827,35628,39006,20845,25134,38520,20374,20523,23833,28138,32184,36650,24459,24900,26647,63841,38534,21202,32907,20956,20940,26974,31260,32190,33777,38517,20442,21033,21400,21519,21774,23653,24743,26446,26792,28012,29313,29432,29702,29827,63842,30178,31852,32633,32696,33673,35023,35041,37324,37328,38626,39881,21533,28542,29136,29848,34298,36522,38563,40023,40607,26519,28107,29747,33256,38678,30764,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31435,31520,31890,25705,29802,30194,30908,30952,39340,39764,40635,23518,24149,28448,33180,33707,37e3,19975,21325,23081,24018,24398,24930,25405,26217,26364,28415,28459,28771,30622,33836,34067,34875,36627,39237,39995,21788,25273,26411,27819,33545,35178,38778,20129,22916,24536,24537,26395,32178,32596,33426,33579,33725,36638,37017,22475,22969,23186,23504,26151,26522,26757,27599,29028,32629,36023,36067,36993,39749,33032,35978,38476,39488,40613,23391,27667,29467,30450,30431,33804,20906,35219,20813,20885,21193,26825,27796,30468,30496,32191,32236,38754,40629,28357,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34065,20901,21517,21629,26126,26269,26919,28319,30399,30609,33559,33986,34719,37225,37528,40180,34946,20398,20882,21215,22982,24125,24917,25720,25721,26286,26576,27169,27597,27611,29279,29281,29761,30520,30683,32791,33468,33541,35584,35624,35980,26408,27792,29287,30446,30566,31302,40361,27519,27794,22818,26406,33945,21359,22675,22937,24287,25551,26164,26483,28218,29483,31447,33495,37672,21209,24043,25006,25035,25098,25287,25771,26080,26969,27494,27595,28961,29687,30045,32326,33310,33538,34154,35491,36031,38695,40289,22696,40664,20497,21006,21563,21839,25991,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27766,32010,32011,32862,34442,38272,38639,21247,27797,29289,21619,23194,23614,23883,24396,24494,26410,26806,26979,28220,28228,30473,31859,32654,34183,35598,36855,38753,40692,23735,24758,24845,25003,25935,26107,26108,27665,27887,29599,29641,32225,38292,23494,34588,35600,21085,21338,25293,25615,25778,26420,27192,27850,29632,29854,31636,31893,32283,33162,33334,34180,36843,38649,39361,20276,21322,21453,21467,25292,25644,25856,26001,27075,27886,28504,29677,30036,30242,30436,30460,30928,30971,31020,32070,33324,34784,36820,38930,39151,21187,25300,25765,28196,28497,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30332,36299,37297,37474,39662,39747,20515,20621,22346,22952,23592,24135,24439,25151,25918,26041,26049,26121,26507,27036,28354,30917,32033,32938,33152,33323,33459,33953,34444,35370,35607,37030,38450,40848,20493,20467,63843,22521,24472,25308,25490,26479,28227,28953,30403,32972,32986,35060,35061,35097,36064,36649,37197,38506,20271,20336,24091,26575,26658,30333,30334,39748,24161,27146,29033,29140,30058,63844,32321,34115,34281,39132,20240,31567,32624,38309,20961,24070,26805,27710,27726,27867,29359,31684,33539,27861,29754,20731,21128,22721,25816,27287,29863,30294,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30887,34327,38370,38713,63845,21342,24321,35722,36776,36783,37002,21029,30629,40009,40712,19993,20482,20853,23643,24183,26142,26170,26564,26821,28851,29953,30149,31177,31453,36647,39200,39432,20445,22561,22577,23542,26222,27493,27921,28282,28541,29668,29995,33769,35036,35091,35676,36628,20239,20693,21264,21340,23443,24489,26381,31119,33145,33583,34068,35079,35206,36665,36667,39333,39954,26412,20086,20472,22857,23553,23791,23792,25447,26834,28925,29090,29739,32299,34028,34562,36898,37586,40179,19981,20184,20463,20613,21078,21103,21542,21648,22496,22827,23142,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23386,23413,23500,24220,63846,25206,25975,26023,28014,28325,29238,31526,31807,32566,33104,33105,33178,33344,33433,33705,35331,36e3,36070,36091,36212,36282,37096,37340,38428,38468,39385,40167,21271,20998,21545,22132,22707,22868,22894,24575,24996,25198,26128,27774,28954,30406,31881,31966,32027,33452,36033,38640,63847,20315,24343,24447,25282,23849,26379,26842,30844,32323,40300,19989,20633,21269,21290,21329,22915,23138,24199,24754,24970,25161,25209,26e3,26503,27047,27604,27606,27607,27608,27832,63848,29749,30202,30738,30865,31189,31192,31875,32203,32737,32933,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,33086,33218,33778,34586,35048,35513,35692,36027,37145,38750,39131,40763,22188,23338,24428,25996,27315,27567,27996,28657,28693,29277,29613,36007,36051,38971,24977,27703,32856,39425,20045,20107,20123,20181,20282,20284,20351,20447,20735,21490,21496,21766,21987,22235,22763,22882,23057,23531,23546,23556,24051,24107,24473,24605,25448,26012,26031,26614,26619,26797,27515,27801,27863,28195,28681,29509,30722,31038,31040,31072,31169,31721,32023,32114,32902,33293,33678,34001,34503,35039,35408,35422,35613,36060,36198,36781,37034,39164,39391,40605,21066,63849,26388,63850,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20632,21034,23665,25955,27733,29642,29987,30109,31639,33948,37240,38704,20087,25746,27578,29022,34217,19977,63851,26441,26862,28183,33439,34072,34923,25591,28545,37394,39087,19978,20663,20687,20767,21830,21930,22039,23360,23577,23776,24120,24202,24224,24258,24819,26705,27233,28248,29245,29248,29376,30456,31077,31665,32724,35059,35316,35443,35937,36062,38684,22622,29885,36093,21959,63852,31329,32034,33394,29298,29983,29989,63853,31513,22661,22779,23996,24207,24246,24464,24661,25234,25471,25933,26257,26329,26360,26646,26866,29312,29790,31598,32110,32214,32626,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32997,33298,34223,35199,35475,36893,37604,40653,40736,22805,22893,24109,24796,26132,26227,26512,27728,28101,28511,30707,30889,33990,37323,37675,20185,20682,20808,21892,23307,23459,25159,25982,26059,28210,29053,29697,29764,29831,29887,30316,31146,32218,32341,32680,33146,33203,33337,34330,34796,35445,36323,36984,37521,37925,39245,39854,21352,23633,26964,27844,27945,28203,33292,34203,35131,35373,35498,38634,40807,21089,26297,27570,32406,34814,36109,38275,38493,25885,28041,29166,63854,22478,22995,23468,24615,24826,25104,26143,26207,29481,29689,30427,30465,31596,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32854,32882,33125,35488,37266,19990,21218,27506,27927,31237,31545,32048,63855,36016,21484,22063,22609,23477,23567,23569,24034,25152,25475,25620,26157,26803,27836,28040,28335,28703,28836,29138,29990,30095,30094,30233,31505,31712,31787,32032,32057,34092,34157,34311,35380,36877,36961,37045,37559,38902,39479,20439,23660,26463,28049,31903,32396,35606,36118,36895,23403,24061,25613,33984,36956,39137,29575,23435,24730,26494,28126,35359,35494,36865,38924,21047,63856,28753,30862,37782,34928,37335,20462,21463,22013,22234,22402,22781,23234,23432,23723,23744,24101,24833,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,25101,25163,25480,25628,25910,25976,27193,27530,27700,27929,28465,29159,29417,29560,29703,29874,30246,30561,31168,31319,31466,31929,32143,32172,32353,32670,33065,33585,33936,34010,34282,34966,35504,35728,36664,36930,36995,37228,37526,37561,38539,38567,38568,38614,38656,38920,39318,39635,39706,21460,22654,22809,23408,23487,28113,28506,29087,29729,29881,32901,33789,24033,24455,24490,24642,26092,26642,26991,27219,27529,27957,28147,29667,30462,30636,31565,32020,33059,33308,33600,34036,34147,35426,35524,37255,37662,38918,39348,25100,34899,36848,37477,23815,23847,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23913,29791,33181,34664,28629,25342,32722,35126,35186,19998,20056,20711,21213,21319,25215,26119,32361,34821,38494,20365,21273,22070,22987,23204,23608,23630,23629,24066,24337,24643,26045,26159,26178,26558,26612,29468,30690,31034,32709,33940,33997,35222,35430,35433,35553,35925,35962,22516,23508,24335,24687,25325,26893,27542,28252,29060,31698,34645,35672,36606,39135,39166,20280,20353,20449,21627,23072,23480,24892,26032,26216,29180,30003,31070,32051,33102,33251,33688,34218,34254,34563,35338,36523,36763,63857,36805,22833,23460,23526,24713,23529,23563,24515,27777,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63858,28145,28683,29978,33455,35574,20160,21313,63859,38617,27663,20126,20420,20818,21854,23077,23784,25105,29273,33469,33706,34558,34905,35357,38463,38597,39187,40201,40285,22538,23731,23997,24132,24801,24853,25569,27138,28197,37122,37716,38990,39952,40823,23433,23736,25353,26191,26696,30524,38593,38797,38996,39839,26017,35585,36555,38332,21813,23721,24022,24245,26263,30284,33780,38343,22739,25276,29390,40232,20208,22830,24591,26171,27523,31207,40230,21395,21696,22467,23830,24859,26326,28079,30861,33406,38552,38724,21380,25212,25494,28082,32266,33099,38989,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27387,32588,40367,40474,20063,20539,20918,22812,24825,25590,26928,29242,32822,63860,37326,24369,63861,63862,32004,33509,33903,33979,34277,36493,63863,20335,63864,63865,22756,23363,24665,25562,25880,25965,26264,63866,26954,27171,27915,28673,29036,30162,30221,31155,31344,63867,32650,63868,35140,63869,35731,37312,38525,63870,39178,22276,24481,26044,28417,30208,31142,35486,39341,39770,40812,20740,25014,25233,27277,33222,20547,22576,24422,28937,35328,35578,23420,34326,20474,20796,22196,22852,25513,28153,23978,26989,20870,20104,20313,63871,63872,63873,22914,63874,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63875,27487,27741,63876,29877,30998,63877,33287,33349,33593,36671,36701,63878,39192,63879,63880,63881,20134,63882,22495,24441,26131,63883,63884,30123,32377,35695,63885,36870,39515,22181,22567,23032,23071,23476,63886,24310,63887,63888,25424,25403,63889,26941,27783,27839,28046,28051,28149,28436,63890,28895,28982,29017,63891,29123,29141,63892,30799,30831,63893,31605,32227,63894,32303,63895,34893,36575,63896,63897,63898,37467,63899,40182,63900,63901,63902,24709,28037,63903,29105,63904,63905,38321,21421,63906,63907,63908,26579,63909,28814,28976,29744,33398,33490,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63910,38331,39653,40573,26308,63911,29121,33865,63912,63913,22603,63914,63915,23992,24433,63916,26144,26254,27001,27054,27704,27891,28214,28481,28634,28699,28719,29008,29151,29552,63917,29787,63918,29908,30408,31310,32403,63919,63920,33521,35424,36814,63921,37704,63922,38681,63923,63924,20034,20522,63925,21e3,21473,26355,27757,28618,29450,30591,31330,33454,34269,34306,63926,35028,35427,35709,35947,63927,37555,63928,38675,38928,20116,20237,20425,20658,21320,21566,21555,21978,22626,22714,22887,23067,23524,24735,63929,25034,25942,26111,26212,26791,27738,28595,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28879,29100,29522,31613,34568,35492,39986,40711,23627,27779,29508,29577,37434,28331,29797,30239,31337,32277,34314,20800,22725,25793,29934,29973,30320,32705,37013,38605,39252,28198,29926,31401,31402,33253,34521,34680,35355,23113,23436,23451,26785,26880,28003,29609,29715,29740,30871,32233,32747,33048,33109,33694,35916,38446,38929,26352,24448,26106,26505,27754,29579,20525,23043,27498,30702,22806,23916,24013,29477,30031,63930,63931,20709,20985,22575,22829,22934,23002,23525,63932,63933,23970,25303,25622,25747,25854,63934,26332,63935,27208,63936,29183,29796,63937,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31368,31407,32327,32350,32768,33136,63938,34799,35201,35616,36953,63939,36992,39250,24958,27442,28020,32287,35109,36785,20433,20653,20887,21191,22471,22665,23481,24248,24898,27029,28044,28263,28342,29076,29794,29992,29996,32883,33592,33993,36362,37780,37854,63940,20110,20305,20598,20778,21448,21451,21491,23431,23507,23588,24858,24962,26100,29275,29591,29760,30402,31056,31121,31161,32006,32701,33419,34261,34398,36802,36935,37109,37354,38533,38632,38633,21206,24423,26093,26161,26671,29020,31286,37057,38922,20113,63941,27218,27550,28560,29065,32792,33464,34131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36939,38549,38642,38907,34074,39729,20112,29066,38596,20803,21407,21729,22291,22290,22435,23195,23236,23491,24616,24895,25588,27781,27961,28274,28304,29232,29503,29783,33489,34945,36677,36960,63942,38498,39e3,40219,26376,36234,37470,20301,20553,20702,21361,22285,22996,23041,23561,24944,26256,28205,29234,29771,32239,32963,33806,33894,34111,34655,34907,35096,35586,36949,38859,39759,20083,20369,20754,20842,63943,21807,21929,23418,23461,24188,24189,24254,24736,24799,24840,24841,25540,25912,26377,63944,26580,26586,63945,26977,26978,27833,27943,63946,28216,63947,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28641,29494,29495,63948,29788,30001,63949,30290,63950,63951,32173,33278,33848,35029,35480,35547,35565,36400,36418,36938,36926,36986,37193,37321,37742,63952,63953,22537,63954,27603,32905,32946,63955,63956,20801,22891,23609,63957,63958,28516,29607,32996,36103,63959,37399,38287,63960,63961,63962,63963,32895,25102,28700,32104,34701,63964,22432,24681,24903,27575,35518,37504,38577,20057,21535,28139,34093,38512,38899,39150,25558,27875,37009,20957,25033,33210,40441,20381,20506,20736,23452,24847,25087,25836,26885,27589,30097,30691,32681,33380,34191,34811,34915,35516,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,35696,37291,20108,20197,20234,63965,63966,22839,23016,63967,24050,24347,24411,24609,63968,63969,63970,63971,29246,29669,63972,30064,30157,63973,31227,63974,32780,32819,32900,33505,33617,63975,63976,36029,36019,36999,63977,63978,39156,39180,63979,63980,28727,30410,32714,32716,32764,35610,20154,20161,20995,21360,63981,21693,22240,23035,23493,24341,24525,28270,63982,63983,32106,33589,63984,34451,35469,63985,38765,38775,63986,63987,19968,20314,20350,22777,26085,28322,36920,37808,39353,20219,22764,22922,23001,24641,63988,63989,31252,63990,33615,36035,20837,21316,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63991,63992,63993,20173,21097,23381,33471,20180,21050,21672,22985,23039,23376,23383,23388,24675,24904,28363,28825,29038,29574,29943,30133,30913,32043,32773,33258,33576,34071,34249,35566,36039,38604,20316,21242,22204,26027,26152,28796,28856,29237,32189,33421,37196,38592,40306,23409,26855,27544,28538,30430,23697,26283,28507,31668,31786,34870,38620,19976,20183,21280,22580,22715,22767,22892,23559,24115,24196,24373,25484,26290,26454,27167,27299,27404,28479,29254,63994,29520,29835,31456,31911,33144,33247,33255,33674,33900,34083,34196,34255,35037,36115,37292,38263,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38556,20877,21705,22312,23472,25165,26448,26685,26771,28221,28371,28797,32289,35009,36001,36617,40779,40782,29229,31631,35533,37658,20295,20302,20786,21632,22992,24213,25269,26485,26990,27159,27822,28186,29401,29482,30141,31672,32053,33511,33785,33879,34295,35419,36015,36487,36889,37048,38606,40799,21219,21514,23265,23490,25688,25973,28404,29380,63995,30340,31309,31515,31821,32318,32735,33659,35627,36042,36196,36321,36447,36842,36857,36969,37841,20291,20346,20659,20840,20856,21069,21098,22625,22652,22880,23560,23637,24283,24731,25136,26643,27583,27656,28593,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29006,29728,3e4,30008,30033,30322,31564,31627,31661,31686,32399,35438,36670,36681,37439,37523,37666,37931,38651,39002,39019,39198,20999,25130,25240,27993,30308,31434,31680,32118,21344,23742,24215,28472,28857,31896,38673,39822,40670,25509,25722,34678,19969,20117,20141,20572,20597,21576,22979,23450,24128,24237,24311,24449,24773,25402,25919,25972,26060,26230,26232,26622,26984,27273,27491,27712,28096,28136,28191,28254,28702,28833,29582,29693,30010,30555,30855,31118,31243,31357,31934,32142,33351,35330,35562,35998,37165,37194,37336,37478,37580,37664,38662,38742,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38748,38914,40718,21046,21137,21884,22564,24093,24351,24716,25552,26799,28639,31085,31532,33229,34234,35069,35576,36420,37261,38500,38555,38717,38988,40778,20430,20806,20939,21161,22066,24340,24427,25514,25805,26089,26177,26362,26361,26397,26781,26839,27133,28437,28526,29031,29157,29226,29866,30522,31062,31066,31199,31264,31381,31895,31967,32068,32368,32903,34299,34468,35412,35519,36249,36481,36896,36973,37347,38459,38613,40165,26063,31751,36275,37827,23384,23562,21330,25305,29469,20519,23447,24478,24752,24939,26837,28121,29742,31278,32066,32156,32305,33131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36394,36405,37758,37912,20304,22352,24038,24231,25387,32618,20027,20303,20367,20570,23005,32964,21610,21608,22014,22863,23449,24030,24282,26205,26417,26609,26666,27880,27954,28234,28557,28855,29664,30087,31820,32002,32044,32162,33311,34523,35387,35461,36208,36490,36659,36913,37198,37202,37956,39376,31481,31909,20426,20737,20934,22472,23535,23803,26201,27197,27994,28310,28652,28940,30063,31459,34850,36897,36981,38603,39423,33537,20013,20210,34886,37325,21373,27355,26987,27713,33914,22686,24974,26366,25327,28893,29969,30151,32338,33976,35657,36104,20043,21482,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21675,22320,22336,24535,25345,25351,25711,25903,26088,26234,26525,26547,27490,27744,27802,28460,30693,30757,31049,31063,32025,32930,33026,33267,33437,33463,34584,35468,63996,36100,36286,36978,30452,31257,31287,32340,32887,21767,21972,22645,25391,25634,26185,26187,26733,27035,27524,27941,28337,29645,29800,29857,30043,30137,30433,30494,30603,31206,32265,32285,33275,34095,34967,35386,36049,36587,36784,36914,37805,38499,38515,38663,20356,21489,23018,23241,24089,26702,29894,30142,31209,31378,33187,34541,36074,36300,36845,26015,26389,63997,22519,28503,32221,36655,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37878,38598,24501,25074,28548,19988,20376,20511,21449,21983,23919,24046,27425,27492,30923,31642,63998,36425,36554,36974,25417,25662,30528,31364,37679,38015,40810,25776,28591,29158,29864,29914,31428,31762,32386,31922,32408,35738,36106,38013,39184,39244,21049,23519,25830,26413,32046,20717,21443,22649,24920,24921,25082,26028,31449,35730,35734,20489,20513,21109,21809,23100,24288,24432,24884,25950,26124,26166,26274,27085,28356,28466,29462,30241,31379,33081,33369,33750,33980,20661,22512,23488,23528,24425,25505,30758,32181,33756,34081,37319,37365,20874,26613,31574,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36012,20932,22971,24765,34389,20508,63999,21076,23610,24957,25114,25299,25842,26021,28364,30240,33034,36448,38495,38587,20191,21315,21912,22825,24029,25797,27849,28154,29588,31359,33307,34214,36068,36368,36983,37351,38369,38433,38854,20984,21746,21894,24505,25764,28552,32180,36639,36685,37941,20681,23574,27838,28155,29979,30651,31805,31844,35449,35522,22558,22974,24086,25463,29266,30090,30571,35548,36028,36626,24307,26228,28152,32893,33729,35531,38737,39894,64e3,21059,26367,28053,28399,32224,35558,36910,36958,39636,21021,21119,21736,24980,25220,25307,26786,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26898,26970,27189,28818,28966,30813,30977,30990,31186,31245,32918,33400,33493,33609,34121,35970,36229,37218,37259,37294,20419,22225,29165,30679,34560,35320,23544,24534,26449,37032,21474,22618,23541,24740,24961,25696,32317,32880,34085,37507,25774,20652,23828,26368,22684,25277,25512,26894,27e3,27166,28267,30394,31179,33467,33833,35535,36264,36861,37138,37195,37276,37648,37656,37786,38619,39478,39949,19985,30044,31069,31482,31569,31689,32302,33988,36441,36468,36600,36880,26149,26943,29763,20986,26414,40668,20805,24544,27798,34802,34909,34935,24756,33205,33795,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36101,21462,21561,22068,23094,23601,28810,32736,32858,33030,33261,36259,37257,39519,40434,20596,20164,21408,24827,28204,23652,20360,20516,21988,23769,24159,24677,26772,27835,28100,29118,30164,30196,30305,31258,31305,32199,32251,32622,33268,34473,36636,38601,39347,40786,21063,21189,39149,35242,19971,26578,28422,20405,23522,26517,27784,28024,29723,30759,37341,37756,34756,31204,31281,24555,20182,21668,21822,22702,22949,24816,25171,25302,26422,26965,33333,38464,39345,39389,20524,21331,21828,22396,64001,25176,64002,25826,26219,26589,28609,28655,29730,29752,35351,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37944,21585,22022,22374,24392,24986,27470,28760,28845,32187,35477,22890,33067,25506,30472,32829,36010,22612,25645,27067,23445,24081,28271,64003,34153,20812,21488,22826,24608,24907,27526,27760,27888,31518,32974,33492,36294,37040,39089,64004,25799,28580,25745,25860,20814,21520,22303,35342,24927,26742,64005,30171,31570,32113,36890,22534,27084,33151,35114,36864,38969,20600,22871,22956,25237,36879,39722,24925,29305,38358,22369,23110,24052,25226,25773,25850,26487,27874,27966,29228,29750,30772,32631,33453,36315,38935,21028,22338,26495,29256,29923,36009,36774,37393,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38442,20843,21485,25420,20329,21764,24726,25943,27803,28031,29260,29437,31255,35207,35997,24429,28558,28921,33192,24846,20415,20559,25153,29255,31687,32232,32745,36941,38829,39449,36022,22378,24179,26544,33805,35413,21536,23318,24163,24290,24330,25987,32954,34109,38281,38491,20296,21253,21261,21263,21638,21754,22275,24067,24598,25243,25265,25429,64006,27873,28006,30129,30770,32990,33071,33502,33889,33970,34957,35090,36875,37610,39165,39825,24133,26292,26333,28689,29190,64007,20469,21117,24426,24915,26451,27161,28418,29922,31080,34920,35961,39111,39108,39491,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21697,31263,26963,35575,35914,39080,39342,24444,25259,30130,30382,34987,36991,38466,21305,24380,24517,27852,29644,30050,30091,31558,33534,39325,20047,36924,19979,20309,21414,22799,24264,26160,27827,29781,33655,34662,36032,36944,38686,39957,22737,23416,34384,35604,40372,23506,24680,24717,26097,27735,28450,28579,28698,32597,32752,38289,38290,38480,38867,21106,36676,20989,21547,21688,21859,21898,27323,28085,32216,33382,37532,38519,40569,21512,21704,30418,34532,38308,38356,38492,20130,20233,23022,23270,24055,24658,25239,26477,26689,27782,28207,32568,32923,33322,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,64008,64009,38917,20133,20565,21683,22419,22874,23401,23475,25032,26999,28023,28707,34809,35299,35442,35559,36994,39405,39608,21182,26680,20502,24184,26447,33607,34892,20139,21521,22190,29670,37141,38911,39177,39255,39321,22099,22687,34395,35377,25010,27382,29563,36562,27463,38570,39511,22869,29184,36203,38761,20436,23796,24358,25080,26203,27883,28843,29572,29625,29694,30505,30541,32067,32098,32291,33335,34898,64010,36066,37449,39023,23377,31348,34880,38913,23244,20448,21332,22846,23805,25406,28025,29433,33029,33031,33698,37583,38960,20136,20804,21009,22411,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24418,27842,28366,28677,28752,28847,29074,29673,29801,33610,34722,34913,36872,37026,37795,39336,20846,24407,24800,24935,26291,34137,36426,37295,38795,20046,20114,21628,22741,22778,22909,23733,24359,25142,25160,26122,26215,27627,28009,28111,28246,28408,28564,28640,28649,28765,29392,29733,29786,29920,30355,31068,31946,32286,32993,33446,33899,33983,34382,34399,34676,35703,35946,37804,38912,39013,24785,25110,37239,23130,26127,28151,28222,29759,39746,24573,24794,31503,21700,24344,27742,27859,27946,28888,32005,34425,35340,40251,21270,21644,23301,27194,28779,30069,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31117,31166,33457,33775,35441,35649,36008,38772,64011,25844,25899,30906,30907,31339,20024,21914,22864,23462,24187,24739,25563,27489,26213,26707,28185,29029,29872,32008,36996,39529,39973,27963,28369,29502,35905,38346,20976,24140,24488,24653,24822,24880,24908,26179,26180,27045,27841,28255,28361,28514,29004,29852,30343,31681,31783,33618,34647,36945,38541,40643,21295,22238,24315,24458,24674,24724,25079,26214,26371,27292,28142,28590,28784,29546,32362,33214,33588,34516,35496,36036,21123,29554,23446,27243,37892,21742,22150,23389,25928,25989,26313,26783,28045,28102,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29243,32948,37237,39501,20399,20505,21402,21518,21564,21897,21957,24127,24460,26429,29030,29661,36869,21211,21235,22628,22734,28932,29071,29179,34224,35347,26248,34216,21927,26244,29002,33841,21321,21913,27585,24409,24509,25582,26249,28999,35569,36637,40638,20241,25658,28875,30054,34407,24676,35662,40440,20807,20982,21256,27958,33016,40657,26133,27427,28824,30165,21507,23673,32007,35350,27424,27453,27462,21560,24688,27965,32725,33288,20694,20958,21916,22123,22221,23020,23305,24076,24985,24984,25137,26206,26342,29081,29113,29114,29351,31143,31232,32690,35440,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],gb18030:[19970,19972,19973,19974,19983,19986,19991,19999,2e4,20001,20003,20006,20009,20014,20015,20017,20019,20021,20023,20028,20032,20033,20034,20036,20038,20042,20049,20053,20055,20058,20059,20066,20067,20068,20069,20071,20072,20074,20075,20076,20077,20078,20079,20082,20084,20085,20086,20087,20088,20089,20090,20091,20092,20093,20095,20096,20097,20098,20099,20100,20101,20103,20106,20112,20118,20119,20121,20124,20125,20126,20131,20138,20143,20144,20145,20148,20150,20151,20152,20153,20156,20157,20158,20168,20172,20175,20176,20178,20186,20187,20188,20192,20194,20198,20199,20201,20205,20206,20207,20209,20212,20216,20217,20218,20220,20222,20224,20226,20227,20228,20229,20230,20231,20232,20235,20236,20242,20243,20244,20245,20246,20252,20253,20257,20259,20264,20265,20268,20269,20270,20273,20275,20277,20279,20281,20283,20286,20287,20288,20289,20290,20292,20293,20295,20296,20297,20298,20299,20300,20306,20308,20310,20321,20322,20326,20328,20330,20331,20333,20334,20337,20338,20341,20343,20344,20345,20346,20349,20352,20353,20354,20357,20358,20359,20362,20364,20366,20368,20370,20371,20373,20374,20376,20377,20378,20380,20382,20383,20385,20386,20388,20395,20397,20400,20401,20402,20403,20404,20406,20407,20408,20409,20410,20411,20412,20413,20414,20416,20417,20418,20422,20423,20424,20425,20427,20428,20429,20434,20435,20436,20437,20438,20441,20443,20448,20450,20452,20453,20455,20459,20460,20464,20466,20468,20469,20470,20471,20473,20475,20476,20477,20479,20480,20481,20482,20483,20484,20485,20486,20487,20488,20489,20490,20491,20494,20496,20497,20499,20501,20502,20503,20507,20509,20510,20512,20514,20515,20516,20519,20523,20527,20528,20529,20530,20531,20532,20533,20534,20535,20536,20537,20539,20541,20543,20544,20545,20546,20548,20549,20550,20553,20554,20555,20557,20560,20561,20562,20563,20564,20566,20567,20568,20569,20571,20573,20574,20575,20576,20577,20578,20579,20580,20582,20583,20584,20585,20586,20587,20589,20590,20591,20592,20593,20594,20595,20596,20597,20600,20601,20602,20604,20605,20609,20610,20611,20612,20614,20615,20617,20618,20619,20620,20622,20623,20624,20625,20626,20627,20628,20629,20630,20631,20632,20633,20634,20635,20636,20637,20638,20639,20640,20641,20642,20644,20646,20650,20651,20653,20654,20655,20656,20657,20659,20660,20661,20662,20663,20664,20665,20668,20669,20670,20671,20672,20673,20674,20675,20676,20677,20678,20679,20680,20681,20682,20683,20684,20685,20686,20688,20689,20690,20691,20692,20693,20695,20696,20697,20699,20700,20701,20702,20703,20704,20705,20706,20707,20708,20709,20712,20713,20714,20715,20719,20720,20721,20722,20724,20726,20727,20728,20729,20730,20732,20733,20734,20735,20736,20737,20738,20739,20740,20741,20744,20745,20746,20748,20749,20750,20751,20752,20753,20755,20756,20757,20758,20759,20760,20761,20762,20763,20764,20765,20766,20767,20768,20770,20771,20772,20773,20774,20775,20776,20777,20778,20779,20780,20781,20782,20783,20784,20785,20786,20787,20788,20789,20790,20791,20792,20793,20794,20795,20796,20797,20798,20802,20807,20810,20812,20814,20815,20816,20818,20819,20823,20824,20825,20827,20829,20830,20831,20832,20833,20835,20836,20838,20839,20841,20842,20847,20850,20858,20862,20863,20867,20868,20870,20871,20874,20875,20878,20879,20880,20881,20883,20884,20888,20890,20893,20894,20895,20897,20899,20902,20903,20904,20905,20906,20909,20910,20916,20920,20921,20922,20926,20927,20929,20930,20931,20933,20936,20938,20941,20942,20944,20946,20947,20948,20949,20950,20951,20952,20953,20954,20956,20958,20959,20962,20963,20965,20966,20967,20968,20969,20970,20972,20974,20977,20978,20980,20983,20990,20996,20997,21001,21003,21004,21007,21008,21011,21012,21013,21020,21022,21023,21025,21026,21027,21029,21030,21031,21034,21036,21039,21041,21042,21044,21045,21052,21054,21060,21061,21062,21063,21064,21065,21067,21070,21071,21074,21075,21077,21079,21080,21081,21082,21083,21085,21087,21088,21090,21091,21092,21094,21096,21099,21100,21101,21102,21104,21105,21107,21108,21109,21110,21111,21112,21113,21114,21115,21116,21118,21120,21123,21124,21125,21126,21127,21129,21130,21131,21132,21133,21134,21135,21137,21138,21140,21141,21142,21143,21144,21145,21146,21148,21156,21157,21158,21159,21166,21167,21168,21172,21173,21174,21175,21176,21177,21178,21179,21180,21181,21184,21185,21186,21188,21189,21190,21192,21194,21196,21197,21198,21199,21201,21203,21204,21205,21207,21209,21210,21211,21212,21213,21214,21216,21217,21218,21219,21221,21222,21223,21224,21225,21226,21227,21228,21229,21230,21231,21233,21234,21235,21236,21237,21238,21239,21240,21243,21244,21245,21249,21250,21251,21252,21255,21257,21258,21259,21260,21262,21265,21266,21267,21268,21272,21275,21276,21278,21279,21282,21284,21285,21287,21288,21289,21291,21292,21293,21295,21296,21297,21298,21299,21300,21301,21302,21303,21304,21308,21309,21312,21314,21316,21318,21323,21324,21325,21328,21332,21336,21337,21339,21341,21349,21352,21354,21356,21357,21362,21366,21369,21371,21372,21373,21374,21376,21377,21379,21383,21384,21386,21390,21391,21392,21393,21394,21395,21396,21398,21399,21401,21403,21404,21406,21408,21409,21412,21415,21418,21419,21420,21421,21423,21424,21425,21426,21427,21428,21429,21431,21432,21433,21434,21436,21437,21438,21440,21443,21444,21445,21446,21447,21454,21455,21456,21458,21459,21461,21466,21468,21469,21470,21473,21474,21479,21492,21498,21502,21503,21504,21506,21509,21511,21515,21524,21528,21529,21530,21532,21538,21540,21541,21546,21552,21555,21558,21559,21562,21565,21567,21569,21570,21572,21573,21575,21577,21580,21581,21582,21583,21585,21594,21597,21598,21599,21600,21601,21603,21605,21607,21609,21610,21611,21612,21613,21614,21615,21616,21620,21625,21626,21630,21631,21633,21635,21637,21639,21640,21641,21642,21645,21649,21651,21655,21656,21660,21662,21663,21664,21665,21666,21669,21678,21680,21682,21685,21686,21687,21689,21690,21692,21694,21699,21701,21706,21707,21718,21720,21723,21728,21729,21730,21731,21732,21739,21740,21743,21744,21745,21748,21749,21750,21751,21752,21753,21755,21758,21760,21762,21763,21764,21765,21768,21770,21771,21772,21773,21774,21778,21779,21781,21782,21783,21784,21785,21786,21788,21789,21790,21791,21793,21797,21798,21800,21801,21803,21805,21810,21812,21813,21814,21816,21817,21818,21819,21821,21824,21826,21829,21831,21832,21835,21836,21837,21838,21839,21841,21842,21843,21844,21847,21848,21849,21850,21851,21853,21854,21855,21856,21858,21859,21864,21865,21867,21871,21872,21873,21874,21875,21876,21881,21882,21885,21887,21893,21894,21900,21901,21902,21904,21906,21907,21909,21910,21911,21914,21915,21918,21920,21921,21922,21923,21924,21925,21926,21928,21929,21930,21931,21932,21933,21934,21935,21936,21938,21940,21942,21944,21946,21948,21951,21952,21953,21954,21955,21958,21959,21960,21962,21963,21966,21967,21968,21973,21975,21976,21977,21978,21979,21982,21984,21986,21991,21993,21997,21998,22e3,22001,22004,22006,22008,22009,22010,22011,22012,22015,22018,22019,22020,22021,22022,22023,22026,22027,22029,22032,22033,22034,22035,22036,22037,22038,22039,22041,22042,22044,22045,22048,22049,22050,22053,22054,22056,22057,22058,22059,22062,22063,22064,22067,22069,22071,22072,22074,22076,22077,22078,22080,22081,22082,22083,22084,22085,22086,22087,22088,22089,22090,22091,22095,22096,22097,22098,22099,22101,22102,22106,22107,22109,22110,22111,22112,22113,22115,22117,22118,22119,22125,22126,22127,22128,22130,22131,22132,22133,22135,22136,22137,22138,22141,22142,22143,22144,22145,22146,22147,22148,22151,22152,22153,22154,22155,22156,22157,22160,22161,22162,22164,22165,22166,22167,22168,22169,22170,22171,22172,22173,22174,22175,22176,22177,22178,22180,22181,22182,22183,22184,22185,22186,22187,22188,22189,22190,22192,22193,22194,22195,22196,22197,22198,22200,22201,22202,22203,22205,22206,22207,22208,22209,22210,22211,22212,22213,22214,22215,22216,22217,22219,22220,22221,22222,22223,22224,22225,22226,22227,22229,22230,22232,22233,22236,22243,22245,22246,22247,22248,22249,22250,22252,22254,22255,22258,22259,22262,22263,22264,22267,22268,22272,22273,22274,22277,22279,22283,22284,22285,22286,22287,22288,22289,22290,22291,22292,22293,22294,22295,22296,22297,22298,22299,22301,22302,22304,22305,22306,22308,22309,22310,22311,22315,22321,22322,22324,22325,22326,22327,22328,22332,22333,22335,22337,22339,22340,22341,22342,22344,22345,22347,22354,22355,22356,22357,22358,22360,22361,22370,22371,22373,22375,22380,22382,22384,22385,22386,22388,22389,22392,22393,22394,22397,22398,22399,22400,22401,22407,22408,22409,22410,22413,22414,22415,22416,22417,22420,22421,22422,22423,22424,22425,22426,22428,22429,22430,22431,22437,22440,22442,22444,22447,22448,22449,22451,22453,22454,22455,22457,22458,22459,22460,22461,22462,22463,22464,22465,22468,22469,22470,22471,22472,22473,22474,22476,22477,22480,22481,22483,22486,22487,22491,22492,22494,22497,22498,22499,22501,22502,22503,22504,22505,22506,22507,22508,22510,22512,22513,22514,22515,22517,22518,22519,22523,22524,22526,22527,22529,22531,22532,22533,22536,22537,22538,22540,22542,22543,22544,22546,22547,22548,22550,22551,22552,22554,22555,22556,22557,22559,22562,22563,22565,22566,22567,22568,22569,22571,22572,22573,22574,22575,22577,22578,22579,22580,22582,22583,22584,22585,22586,22587,22588,22589,22590,22591,22592,22593,22594,22595,22597,22598,22599,22600,22601,22602,22603,22606,22607,22608,22610,22611,22613,22614,22615,22617,22618,22619,22620,22621,22623,22624,22625,22626,22627,22628,22630,22631,22632,22633,22634,22637,22638,22639,22640,22641,22642,22643,22644,22645,22646,22647,22648,22649,22650,22651,22652,22653,22655,22658,22660,22662,22663,22664,22666,22667,22668,22669,22670,22671,22672,22673,22676,22677,22678,22679,22680,22683,22684,22685,22688,22689,22690,22691,22692,22693,22694,22695,22698,22699,22700,22701,22702,22703,22704,22705,22706,22707,22708,22709,22710,22711,22712,22713,22714,22715,22717,22718,22719,22720,22722,22723,22724,22726,22727,22728,22729,22730,22731,22732,22733,22734,22735,22736,22738,22739,22740,22742,22743,22744,22745,22746,22747,22748,22749,22750,22751,22752,22753,22754,22755,22757,22758,22759,22760,22761,22762,22765,22767,22769,22770,22772,22773,22775,22776,22778,22779,22780,22781,22782,22783,22784,22785,22787,22789,22790,22792,22793,22794,22795,22796,22798,22800,22801,22802,22803,22807,22808,22811,22813,22814,22816,22817,22818,22819,22822,22824,22828,22832,22834,22835,22837,22838,22843,22845,22846,22847,22848,22851,22853,22854,22858,22860,22861,22864,22866,22867,22873,22875,22876,22877,22878,22879,22881,22883,22884,22886,22887,22888,22889,22890,22891,22892,22893,22894,22895,22896,22897,22898,22901,22903,22906,22907,22908,22910,22911,22912,22917,22921,22923,22924,22926,22927,22928,22929,22932,22933,22936,22938,22939,22940,22941,22943,22944,22945,22946,22950,22951,22956,22957,22960,22961,22963,22964,22965,22966,22967,22968,22970,22972,22973,22975,22976,22977,22978,22979,22980,22981,22983,22984,22985,22988,22989,22990,22991,22997,22998,23001,23003,23006,23007,23008,23009,23010,23012,23014,23015,23017,23018,23019,23021,23022,23023,23024,23025,23026,23027,23028,23029,23030,23031,23032,23034,23036,23037,23038,23040,23042,23050,23051,23053,23054,23055,23056,23058,23060,23061,23062,23063,23065,23066,23067,23069,23070,23073,23074,23076,23078,23079,23080,23082,23083,23084,23085,23086,23087,23088,23091,23093,23095,23096,23097,23098,23099,23101,23102,23103,23105,23106,23107,23108,23109,23111,23112,23115,23116,23117,23118,23119,23120,23121,23122,23123,23124,23126,23127,23128,23129,23131,23132,23133,23134,23135,23136,23137,23139,23140,23141,23142,23144,23145,23147,23148,23149,23150,23151,23152,23153,23154,23155,23160,23161,23163,23164,23165,23166,23168,23169,23170,23171,23172,23173,23174,23175,23176,23177,23178,23179,23180,23181,23182,23183,23184,23185,23187,23188,23189,23190,23191,23192,23193,23196,23197,23198,23199,23200,23201,23202,23203,23204,23205,23206,23207,23208,23209,23211,23212,23213,23214,23215,23216,23217,23220,23222,23223,23225,23226,23227,23228,23229,23231,23232,23235,23236,23237,23238,23239,23240,23242,23243,23245,23246,23247,23248,23249,23251,23253,23255,23257,23258,23259,23261,23262,23263,23266,23268,23269,23271,23272,23274,23276,23277,23278,23279,23280,23282,23283,23284,23285,23286,23287,23288,23289,23290,23291,23292,23293,23294,23295,23296,23297,23298,23299,23300,23301,23302,23303,23304,23306,23307,23308,23309,23310,23311,23312,23313,23314,23315,23316,23317,23320,23321,23322,23323,23324,23325,23326,23327,23328,23329,23330,23331,23332,23333,23334,23335,23336,23337,23338,23339,23340,23341,23342,23343,23344,23345,23347,23349,23350,23352,23353,23354,23355,23356,23357,23358,23359,23361,23362,23363,23364,23365,23366,23367,23368,23369,23370,23371,23372,23373,23374,23375,23378,23382,23390,23392,23393,23399,23400,23403,23405,23406,23407,23410,23412,23414,23415,23416,23417,23419,23420,23422,23423,23426,23430,23434,23437,23438,23440,23441,23442,23444,23446,23455,23463,23464,23465,23468,23469,23470,23471,23473,23474,23479,23482,23483,23484,23488,23489,23491,23496,23497,23498,23499,23501,23502,23503,23505,23508,23509,23510,23511,23512,23513,23514,23515,23516,23520,23522,23523,23526,23527,23529,23530,23531,23532,23533,23535,23537,23538,23539,23540,23541,23542,23543,23549,23550,23552,23554,23555,23557,23559,23560,23563,23564,23565,23566,23568,23570,23571,23575,23577,23579,23582,23583,23584,23585,23587,23590,23592,23593,23594,23595,23597,23598,23599,23600,23602,23603,23605,23606,23607,23619,23620,23622,23623,23628,23629,23634,23635,23636,23638,23639,23640,23642,23643,23644,23645,23647,23650,23652,23655,23656,23657,23658,23659,23660,23661,23664,23666,23667,23668,23669,23670,23671,23672,23675,23676,23677,23678,23680,23683,23684,23685,23686,23687,23689,23690,23691,23694,23695,23698,23699,23701,23709,23710,23711,23712,23713,23716,23717,23718,23719,23720,23722,23726,23727,23728,23730,23732,23734,23737,23738,23739,23740,23742,23744,23746,23747,23749,23750,23751,23752,23753,23754,23756,23757,23758,23759,23760,23761,23763,23764,23765,23766,23767,23768,23770,23771,23772,23773,23774,23775,23776,23778,23779,23783,23785,23787,23788,23790,23791,23793,23794,23795,23796,23797,23798,23799,23800,23801,23802,23804,23805,23806,23807,23808,23809,23812,23813,23816,23817,23818,23819,23820,23821,23823,23824,23825,23826,23827,23829,23831,23832,23833,23834,23836,23837,23839,23840,23841,23842,23843,23845,23848,23850,23851,23852,23855,23856,23857,23858,23859,23861,23862,23863,23864,23865,23866,23867,23868,23871,23872,23873,23874,23875,23876,23877,23878,23880,23881,23885,23886,23887,23888,23889,23890,23891,23892,23893,23894,23895,23897,23898,23900,23902,23903,23904,23905,23906,23907,23908,23909,23910,23911,23912,23914,23917,23918,23920,23921,23922,23923,23925,23926,23927,23928,23929,23930,23931,23932,23933,23934,23935,23936,23937,23939,23940,23941,23942,23943,23944,23945,23946,23947,23948,23949,23950,23951,23952,23953,23954,23955,23956,23957,23958,23959,23960,23962,23963,23964,23966,23967,23968,23969,23970,23971,23972,23973,23974,23975,23976,23977,23978,23979,23980,23981,23982,23983,23984,23985,23986,23987,23988,23989,23990,23992,23993,23994,23995,23996,23997,23998,23999,24e3,24001,24002,24003,24004,24006,24007,24008,24009,24010,24011,24012,24014,24015,24016,24017,24018,24019,24020,24021,24022,24023,24024,24025,24026,24028,24031,24032,24035,24036,24042,24044,24045,24048,24053,24054,24056,24057,24058,24059,24060,24063,24064,24068,24071,24073,24074,24075,24077,24078,24082,24083,24087,24094,24095,24096,24097,24098,24099,24100,24101,24104,24105,24106,24107,24108,24111,24112,24114,24115,24116,24117,24118,24121,24122,24126,24127,24128,24129,24131,24134,24135,24136,24137,24138,24139,24141,24142,24143,24144,24145,24146,24147,24150,24151,24152,24153,24154,24156,24157,24159,24160,24163,24164,24165,24166,24167,24168,24169,24170,24171,24172,24173,24174,24175,24176,24177,24181,24183,24185,24190,24193,24194,24195,24197,24200,24201,24204,24205,24206,24210,24216,24219,24221,24225,24226,24227,24228,24232,24233,24234,24235,24236,24238,24239,24240,24241,24242,24244,24250,24251,24252,24253,24255,24256,24257,24258,24259,24260,24261,24262,24263,24264,24267,24268,24269,24270,24271,24272,24276,24277,24279,24280,24281,24282,24284,24285,24286,24287,24288,24289,24290,24291,24292,24293,24294,24295,24297,24299,24300,24301,24302,24303,24304,24305,24306,24307,24309,24312,24313,24315,24316,24317,24325,24326,24327,24329,24332,24333,24334,24336,24338,24340,24342,24345,24346,24348,24349,24350,24353,24354,24355,24356,24360,24363,24364,24366,24368,24370,24371,24372,24373,24374,24375,24376,24379,24381,24382,24383,24385,24386,24387,24388,24389,24390,24391,24392,24393,24394,24395,24396,24397,24398,24399,24401,24404,24409,24410,24411,24412,24414,24415,24416,24419,24421,24423,24424,24427,24430,24431,24434,24436,24437,24438,24440,24442,24445,24446,24447,24451,24454,24461,24462,24463,24465,24467,24468,24470,24474,24475,24477,24478,24479,24480,24482,24483,24484,24485,24486,24487,24489,24491,24492,24495,24496,24497,24498,24499,24500,24502,24504,24505,24506,24507,24510,24511,24512,24513,24514,24519,24520,24522,24523,24526,24531,24532,24533,24538,24539,24540,24542,24543,24546,24547,24549,24550,24552,24553,24556,24559,24560,24562,24563,24564,24566,24567,24569,24570,24572,24583,24584,24585,24587,24588,24592,24593,24595,24599,24600,24602,24606,24607,24610,24611,24612,24620,24621,24622,24624,24625,24626,24627,24628,24630,24631,24632,24633,24634,24637,24638,24640,24644,24645,24646,24647,24648,24649,24650,24652,24654,24655,24657,24659,24660,24662,24663,24664,24667,24668,24670,24671,24672,24673,24677,24678,24686,24689,24690,24692,24693,24695,24702,24704,24705,24706,24709,24710,24711,24712,24714,24715,24718,24719,24720,24721,24723,24725,24727,24728,24729,24732,24734,24737,24738,24740,24741,24743,24745,24746,24750,24752,24755,24757,24758,24759,24761,24762,24765,24766,24767,24768,24769,24770,24771,24772,24775,24776,24777,24780,24781,24782,24783,24784,24786,24787,24788,24790,24791,24793,24795,24798,24801,24802,24803,24804,24805,24810,24817,24818,24821,24823,24824,24827,24828,24829,24830,24831,24834,24835,24836,24837,24839,24842,24843,24844,24848,24849,24850,24851,24852,24854,24855,24856,24857,24859,24860,24861,24862,24865,24866,24869,24872,24873,24874,24876,24877,24878,24879,24880,24881,24882,24883,24884,24885,24886,24887,24888,24889,24890,24891,24892,24893,24894,24896,24897,24898,24899,24900,24901,24902,24903,24905,24907,24909,24911,24912,24914,24915,24916,24918,24919,24920,24921,24922,24923,24924,24926,24927,24928,24929,24931,24932,24933,24934,24937,24938,24939,24940,24941,24942,24943,24945,24946,24947,24948,24950,24952,24953,24954,24955,24956,24957,24958,24959,24960,24961,24962,24963,24964,24965,24966,24967,24968,24969,24970,24972,24973,24975,24976,24977,24978,24979,24981,24982,24983,24984,24985,24986,24987,24988,24990,24991,24992,24993,24994,24995,24996,24997,24998,25002,25003,25005,25006,25007,25008,25009,25010,25011,25012,25013,25014,25016,25017,25018,25019,25020,25021,25023,25024,25025,25027,25028,25029,25030,25031,25033,25036,25037,25038,25039,25040,25043,25045,25046,25047,25048,25049,25050,25051,25052,25053,25054,25055,25056,25057,25058,25059,25060,25061,25063,25064,25065,25066,25067,25068,25069,25070,25071,25072,25073,25074,25075,25076,25078,25079,25080,25081,25082,25083,25084,25085,25086,25088,25089,25090,25091,25092,25093,25095,25097,25107,25108,25113,25116,25117,25118,25120,25123,25126,25127,25128,25129,25131,25133,25135,25136,25137,25138,25141,25142,25144,25145,25146,25147,25148,25154,25156,25157,25158,25162,25167,25168,25173,25174,25175,25177,25178,25180,25181,25182,25183,25184,25185,25186,25188,25189,25192,25201,25202,25204,25205,25207,25208,25210,25211,25213,25217,25218,25219,25221,25222,25223,25224,25227,25228,25229,25230,25231,25232,25236,25241,25244,25245,25246,25251,25254,25255,25257,25258,25261,25262,25263,25264,25266,25267,25268,25270,25271,25272,25274,25278,25280,25281,25283,25291,25295,25297,25301,25309,25310,25312,25313,25316,25322,25323,25328,25330,25333,25336,25337,25338,25339,25344,25347,25348,25349,25350,25354,25355,25356,25357,25359,25360,25362,25363,25364,25365,25367,25368,25369,25372,25382,25383,25385,25388,25389,25390,25392,25393,25395,25396,25397,25398,25399,25400,25403,25404,25406,25407,25408,25409,25412,25415,25416,25418,25425,25426,25427,25428,25430,25431,25432,25433,25434,25435,25436,25437,25440,25444,25445,25446,25448,25450,25451,25452,25455,25456,25458,25459,25460,25461,25464,25465,25468,25469,25470,25471,25473,25475,25476,25477,25478,25483,25485,25489,25491,25492,25493,25495,25497,25498,25499,25500,25501,25502,25503,25505,25508,25510,25515,25519,25521,25522,25525,25526,25529,25531,25533,25535,25536,25537,25538,25539,25541,25543,25544,25546,25547,25548,25553,25555,25556,25557,25559,25560,25561,25562,25563,25564,25565,25567,25570,25572,25573,25574,25575,25576,25579,25580,25582,25583,25584,25585,25587,25589,25591,25593,25594,25595,25596,25598,25603,25604,25606,25607,25608,25609,25610,25613,25614,25617,25618,25621,25622,25623,25624,25625,25626,25629,25631,25634,25635,25636,25637,25639,25640,25641,25643,25646,25647,25648,25649,25650,25651,25653,25654,25655,25656,25657,25659,25660,25662,25664,25666,25667,25673,25675,25676,25677,25678,25679,25680,25681,25683,25685,25686,25687,25689,25690,25691,25692,25693,25695,25696,25697,25698,25699,25700,25701,25702,25704,25706,25707,25708,25710,25711,25712,25713,25714,25715,25716,25717,25718,25719,25723,25724,25725,25726,25727,25728,25729,25731,25734,25736,25737,25738,25739,25740,25741,25742,25743,25744,25747,25748,25751,25752,25754,25755,25756,25757,25759,25760,25761,25762,25763,25765,25766,25767,25768,25770,25771,25775,25777,25778,25779,25780,25782,25785,25787,25789,25790,25791,25793,25795,25796,25798,25799,25800,25801,25802,25803,25804,25807,25809,25811,25812,25813,25814,25817,25818,25819,25820,25821,25823,25824,25825,25827,25829,25831,25832,25833,25834,25835,25836,25837,25838,25839,25840,25841,25842,25843,25844,25845,25846,25847,25848,25849,25850,25851,25852,25853,25854,25855,25857,25858,25859,25860,25861,25862,25863,25864,25866,25867,25868,25869,25870,25871,25872,25873,25875,25876,25877,25878,25879,25881,25882,25883,25884,25885,25886,25887,25888,25889,25890,25891,25892,25894,25895,25896,25897,25898,25900,25901,25904,25905,25906,25907,25911,25914,25916,25917,25920,25921,25922,25923,25924,25926,25927,25930,25931,25933,25934,25936,25938,25939,25940,25943,25944,25946,25948,25951,25952,25953,25956,25957,25959,25960,25961,25962,25965,25966,25967,25969,25971,25973,25974,25976,25977,25978,25979,25980,25981,25982,25983,25984,25985,25986,25987,25988,25989,25990,25992,25993,25994,25997,25998,25999,26002,26004,26005,26006,26008,26010,26013,26014,26016,26018,26019,26022,26024,26026,26028,26030,26033,26034,26035,26036,26037,26038,26039,26040,26042,26043,26046,26047,26048,26050,26055,26056,26057,26058,26061,26064,26065,26067,26068,26069,26072,26073,26074,26075,26076,26077,26078,26079,26081,26083,26084,26090,26091,26098,26099,26100,26101,26104,26105,26107,26108,26109,26110,26111,26113,26116,26117,26119,26120,26121,26123,26125,26128,26129,26130,26134,26135,26136,26138,26139,26140,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26162,26163,26167,26168,26169,26170,26171,26173,26175,26176,26178,26180,26181,26182,26183,26184,26185,26186,26189,26190,26192,26193,26200,26201,26203,26204,26205,26206,26208,26210,26211,26213,26215,26217,26218,26219,26220,26221,26225,26226,26227,26229,26232,26233,26235,26236,26237,26239,26240,26241,26243,26245,26246,26248,26249,26250,26251,26253,26254,26255,26256,26258,26259,26260,26261,26264,26265,26266,26267,26268,26270,26271,26272,26273,26274,26275,26276,26277,26278,26281,26282,26283,26284,26285,26287,26288,26289,26290,26291,26293,26294,26295,26296,26298,26299,26300,26301,26303,26304,26305,26306,26307,26308,26309,26310,26311,26312,26313,26314,26315,26316,26317,26318,26319,26320,26321,26322,26323,26324,26325,26326,26327,26328,26330,26334,26335,26336,26337,26338,26339,26340,26341,26343,26344,26346,26347,26348,26349,26350,26351,26353,26357,26358,26360,26362,26363,26365,26369,26370,26371,26372,26373,26374,26375,26380,26382,26383,26385,26386,26387,26390,26392,26393,26394,26396,26398,26400,26401,26402,26403,26404,26405,26407,26409,26414,26416,26418,26419,26422,26423,26424,26425,26427,26428,26430,26431,26433,26436,26437,26439,26442,26443,26445,26450,26452,26453,26455,26456,26457,26458,26459,26461,26466,26467,26468,26470,26471,26475,26476,26478,26481,26484,26486,26488,26489,26490,26491,26493,26496,26498,26499,26501,26502,26504,26506,26508,26509,26510,26511,26513,26514,26515,26516,26518,26521,26523,26527,26528,26529,26532,26534,26537,26540,26542,26545,26546,26548,26553,26554,26555,26556,26557,26558,26559,26560,26562,26565,26566,26567,26568,26569,26570,26571,26572,26573,26574,26581,26582,26583,26587,26591,26593,26595,26596,26598,26599,26600,26602,26603,26605,26606,26610,26613,26614,26615,26616,26617,26618,26619,26620,26622,26625,26626,26627,26628,26630,26637,26640,26642,26644,26645,26648,26649,26650,26651,26652,26654,26655,26656,26658,26659,26660,26661,26662,26663,26664,26667,26668,26669,26670,26671,26672,26673,26676,26677,26678,26682,26683,26687,26695,26699,26701,26703,26706,26710,26711,26712,26713,26714,26715,26716,26717,26718,26719,26730,26732,26733,26734,26735,26736,26737,26738,26739,26741,26744,26745,26746,26747,26748,26749,26750,26751,26752,26754,26756,26759,26760,26761,26762,26763,26764,26765,26766,26768,26769,26770,26772,26773,26774,26776,26777,26778,26779,26780,26781,26782,26783,26784,26785,26787,26788,26789,26793,26794,26795,26796,26798,26801,26802,26804,26806,26807,26808,26809,26810,26811,26812,26813,26814,26815,26817,26819,26820,26821,26822,26823,26824,26826,26828,26830,26831,26832,26833,26835,26836,26838,26839,26841,26843,26844,26845,26846,26847,26849,26850,26852,26853,26854,26855,26856,26857,26858,26859,26860,26861,26863,26866,26867,26868,26870,26871,26872,26875,26877,26878,26879,26880,26882,26883,26884,26886,26887,26888,26889,26890,26892,26895,26897,26899,26900,26901,26902,26903,26904,26905,26906,26907,26908,26909,26910,26913,26914,26915,26917,26918,26919,26920,26921,26922,26923,26924,26926,26927,26929,26930,26931,26933,26934,26935,26936,26938,26939,26940,26942,26944,26945,26947,26948,26949,26950,26951,26952,26953,26954,26955,26956,26957,26958,26959,26960,26961,26962,26963,26965,26966,26968,26969,26971,26972,26975,26977,26978,26980,26981,26983,26984,26985,26986,26988,26989,26991,26992,26994,26995,26996,26997,26998,27002,27003,27005,27006,27007,27009,27011,27013,27018,27019,27020,27022,27023,27024,27025,27026,27027,27030,27031,27033,27034,27037,27038,27039,27040,27041,27042,27043,27044,27045,27046,27049,27050,27052,27054,27055,27056,27058,27059,27061,27062,27064,27065,27066,27068,27069,27070,27071,27072,27074,27075,27076,27077,27078,27079,27080,27081,27083,27085,27087,27089,27090,27091,27093,27094,27095,27096,27097,27098,27100,27101,27102,27105,27106,27107,27108,27109,27110,27111,27112,27113,27114,27115,27116,27118,27119,27120,27121,27123,27124,27125,27126,27127,27128,27129,27130,27131,27132,27134,27136,27137,27138,27139,27140,27141,27142,27143,27144,27145,27147,27148,27149,27150,27151,27152,27153,27154,27155,27156,27157,27158,27161,27162,27163,27164,27165,27166,27168,27170,27171,27172,27173,27174,27175,27177,27179,27180,27181,27182,27184,27186,27187,27188,27190,27191,27192,27193,27194,27195,27196,27199,27200,27201,27202,27203,27205,27206,27208,27209,27210,27211,27212,27213,27214,27215,27217,27218,27219,27220,27221,27222,27223,27226,27228,27229,27230,27231,27232,27234,27235,27236,27238,27239,27240,27241,27242,27243,27244,27245,27246,27247,27248,27250,27251,27252,27253,27254,27255,27256,27258,27259,27261,27262,27263,27265,27266,27267,27269,27270,27271,27272,27273,27274,27275,27276,27277,27279,27282,27283,27284,27285,27286,27288,27289,27290,27291,27292,27293,27294,27295,27297,27298,27299,27300,27301,27302,27303,27304,27306,27309,27310,27311,27312,27313,27314,27315,27316,27317,27318,27319,27320,27321,27322,27323,27324,27325,27326,27327,27328,27329,27330,27331,27332,27333,27334,27335,27336,27337,27338,27339,27340,27341,27342,27343,27344,27345,27346,27347,27348,27349,27350,27351,27352,27353,27354,27355,27356,27357,27358,27359,27360,27361,27362,27363,27364,27365,27366,27367,27368,27369,27370,27371,27372,27373,27374,27375,27376,27377,27378,27379,27380,27381,27382,27383,27384,27385,27386,27387,27388,27389,27390,27391,27392,27393,27394,27395,27396,27397,27398,27399,27400,27401,27402,27403,27404,27405,27406,27407,27408,27409,27410,27411,27412,27413,27414,27415,27416,27417,27418,27419,27420,27421,27422,27423,27429,27430,27432,27433,27434,27435,27436,27437,27438,27439,27440,27441,27443,27444,27445,27446,27448,27451,27452,27453,27455,27456,27457,27458,27460,27461,27464,27466,27467,27469,27470,27471,27472,27473,27474,27475,27476,27477,27478,27479,27480,27482,27483,27484,27485,27486,27487,27488,27489,27496,27497,27499,27500,27501,27502,27503,27504,27505,27506,27507,27508,27509,27510,27511,27512,27514,27517,27518,27519,27520,27525,27528,27532,27534,27535,27536,27537,27540,27541,27543,27544,27545,27548,27549,27550,27551,27552,27554,27555,27556,27557,27558,27559,27560,27561,27563,27564,27565,27566,27567,27568,27569,27570,27574,27576,27577,27578,27579,27580,27581,27582,27584,27587,27588,27590,27591,27592,27593,27594,27596,27598,27600,27601,27608,27610,27612,27613,27614,27615,27616,27618,27619,27620,27621,27622,27623,27624,27625,27628,27629,27630,27632,27633,27634,27636,27638,27639,27640,27642,27643,27644,27646,27647,27648,27649,27650,27651,27652,27656,27657,27658,27659,27660,27662,27666,27671,27676,27677,27678,27680,27683,27685,27691,27692,27693,27697,27699,27702,27703,27705,27706,27707,27708,27710,27711,27715,27716,27717,27720,27723,27724,27725,27726,27727,27729,27730,27731,27734,27736,27737,27738,27746,27747,27749,27750,27751,27755,27756,27757,27758,27759,27761,27763,27765,27767,27768,27770,27771,27772,27775,27776,27780,27783,27786,27787,27789,27790,27793,27794,27797,27798,27799,27800,27802,27804,27805,27806,27808,27810,27816,27820,27823,27824,27828,27829,27830,27831,27834,27840,27841,27842,27843,27846,27847,27848,27851,27853,27854,27855,27857,27858,27864,27865,27866,27868,27869,27871,27876,27878,27879,27881,27884,27885,27890,27892,27897,27903,27904,27906,27907,27909,27910,27912,27913,27914,27917,27919,27920,27921,27923,27924,27925,27926,27928,27932,27933,27935,27936,27937,27938,27939,27940,27942,27944,27945,27948,27949,27951,27952,27956,27958,27959,27960,27962,27967,27968,27970,27972,27977,27980,27984,27989,27990,27991,27992,27995,27997,27999,28001,28002,28004,28005,28007,28008,28011,28012,28013,28016,28017,28018,28019,28021,28022,28025,28026,28027,28029,28030,28031,28032,28033,28035,28036,28038,28039,28042,28043,28045,28047,28048,28050,28054,28055,28056,28057,28058,28060,28066,28069,28076,28077,28080,28081,28083,28084,28086,28087,28089,28090,28091,28092,28093,28094,28097,28098,28099,28104,28105,28106,28109,28110,28111,28112,28114,28115,28116,28117,28119,28122,28123,28124,28127,28130,28131,28133,28135,28136,28137,28138,28141,28143,28144,28146,28148,28149,28150,28152,28154,28157,28158,28159,28160,28161,28162,28163,28164,28166,28167,28168,28169,28171,28175,28178,28179,28181,28184,28185,28187,28188,28190,28191,28194,28198,28199,28200,28202,28204,28206,28208,28209,28211,28213,28214,28215,28217,28219,28220,28221,28222,28223,28224,28225,28226,28229,28230,28231,28232,28233,28234,28235,28236,28239,28240,28241,28242,28245,28247,28249,28250,28252,28253,28254,28256,28257,28258,28259,28260,28261,28262,28263,28264,28265,28266,28268,28269,28271,28272,28273,28274,28275,28276,28277,28278,28279,28280,28281,28282,28283,28284,28285,28288,28289,28290,28292,28295,28296,28298,28299,28300,28301,28302,28305,28306,28307,28308,28309,28310,28311,28313,28314,28315,28317,28318,28320,28321,28323,28324,28326,28328,28329,28331,28332,28333,28334,28336,28339,28341,28344,28345,28348,28350,28351,28352,28355,28356,28357,28358,28360,28361,28362,28364,28365,28366,28368,28370,28374,28376,28377,28379,28380,28381,28387,28391,28394,28395,28396,28397,28398,28399,28400,28401,28402,28403,28405,28406,28407,28408,28410,28411,28412,28413,28414,28415,28416,28417,28419,28420,28421,28423,28424,28426,28427,28428,28429,28430,28432,28433,28434,28438,28439,28440,28441,28442,28443,28444,28445,28446,28447,28449,28450,28451,28453,28454,28455,28456,28460,28462,28464,28466,28468,28469,28471,28472,28473,28474,28475,28476,28477,28479,28480,28481,28482,28483,28484,28485,28488,28489,28490,28492,28494,28495,28496,28497,28498,28499,28500,28501,28502,28503,28505,28506,28507,28509,28511,28512,28513,28515,28516,28517,28519,28520,28521,28522,28523,28524,28527,28528,28529,28531,28533,28534,28535,28537,28539,28541,28542,28543,28544,28545,28546,28547,28549,28550,28551,28554,28555,28559,28560,28561,28562,28563,28564,28565,28566,28567,28568,28569,28570,28571,28573,28574,28575,28576,28578,28579,28580,28581,28582,28584,28585,28586,28587,28588,28589,28590,28591,28592,28593,28594,28596,28597,28599,28600,28602,28603,28604,28605,28606,28607,28609,28611,28612,28613,28614,28615,28616,28618,28619,28620,28621,28622,28623,28624,28627,28628,28629,28630,28631,28632,28633,28634,28635,28636,28637,28639,28642,28643,28644,28645,28646,28647,28648,28649,28650,28651,28652,28653,28656,28657,28658,28659,28660,28661,28662,28663,28664,28665,28666,28667,28668,28669,28670,28671,28672,28673,28674,28675,28676,28677,28678,28679,28680,28681,28682,28683,28684,28685,28686,28687,28688,28690,28691,28692,28693,28694,28695,28696,28697,28700,28701,28702,28703,28704,28705,28706,28708,28709,28710,28711,28712,28713,28714,28715,28716,28717,28718,28719,28720,28721,28722,28723,28724,28726,28727,28728,28730,28731,28732,28733,28734,28735,28736,28737,28738,28739,28740,28741,28742,28743,28744,28745,28746,28747,28749,28750,28752,28753,28754,28755,28756,28757,28758,28759,28760,28761,28762,28763,28764,28765,28767,28768,28769,28770,28771,28772,28773,28774,28775,28776,28777,28778,28782,28785,28786,28787,28788,28791,28793,28794,28795,28797,28801,28802,28803,28804,28806,28807,28808,28811,28812,28813,28815,28816,28817,28819,28823,28824,28826,28827,28830,28831,28832,28833,28834,28835,28836,28837,28838,28839,28840,28841,28842,28848,28850,28852,28853,28854,28858,28862,28863,28868,28869,28870,28871,28873,28875,28876,28877,28878,28879,28880,28881,28882,28883,28884,28885,28886,28887,28890,28892,28893,28894,28896,28897,28898,28899,28901,28906,28910,28912,28913,28914,28915,28916,28917,28918,28920,28922,28923,28924,28926,28927,28928,28929,28930,28931,28932,28933,28934,28935,28936,28939,28940,28941,28942,28943,28945,28946,28948,28951,28955,28956,28957,28958,28959,28960,28961,28962,28963,28964,28965,28967,28968,28969,28970,28971,28972,28973,28974,28978,28979,28980,28981,28983,28984,28985,28986,28987,28988,28989,28990,28991,28992,28993,28994,28995,28996,28998,28999,29e3,29001,29003,29005,29007,29008,29009,29010,29011,29012,29013,29014,29015,29016,29017,29018,29019,29021,29023,29024,29025,29026,29027,29029,29033,29034,29035,29036,29037,29039,29040,29041,29044,29045,29046,29047,29049,29051,29052,29054,29055,29056,29057,29058,29059,29061,29062,29063,29064,29065,29067,29068,29069,29070,29072,29073,29074,29075,29077,29078,29079,29082,29083,29084,29085,29086,29089,29090,29091,29092,29093,29094,29095,29097,29098,29099,29101,29102,29103,29104,29105,29106,29108,29110,29111,29112,29114,29115,29116,29117,29118,29119,29120,29121,29122,29124,29125,29126,29127,29128,29129,29130,29131,29132,29133,29135,29136,29137,29138,29139,29142,29143,29144,29145,29146,29147,29148,29149,29150,29151,29153,29154,29155,29156,29158,29160,29161,29162,29163,29164,29165,29167,29168,29169,29170,29171,29172,29173,29174,29175,29176,29178,29179,29180,29181,29182,29183,29184,29185,29186,29187,29188,29189,29191,29192,29193,29194,29195,29196,29197,29198,29199,29200,29201,29202,29203,29204,29205,29206,29207,29208,29209,29210,29211,29212,29214,29215,29216,29217,29218,29219,29220,29221,29222,29223,29225,29227,29229,29230,29231,29234,29235,29236,29242,29244,29246,29248,29249,29250,29251,29252,29253,29254,29257,29258,29259,29262,29263,29264,29265,29267,29268,29269,29271,29272,29274,29276,29278,29280,29283,29284,29285,29288,29290,29291,29292,29293,29296,29297,29299,29300,29302,29303,29304,29307,29308,29309,29314,29315,29317,29318,29319,29320,29321,29324,29326,29328,29329,29331,29332,29333,29334,29335,29336,29337,29338,29339,29340,29341,29342,29344,29345,29346,29347,29348,29349,29350,29351,29352,29353,29354,29355,29358,29361,29362,29363,29365,29370,29371,29372,29373,29374,29375,29376,29381,29382,29383,29385,29386,29387,29388,29391,29393,29395,29396,29397,29398,29400,29402,29403,58566,58567,58568,58569,58570,58571,58572,58573,58574,58575,58576,58577,58578,58579,58580,58581,58582,58583,58584,58585,58586,58587,58588,58589,58590,58591,58592,58593,58594,58595,58596,58597,58598,58599,58600,58601,58602,58603,58604,58605,58606,58607,58608,58609,58610,58611,58612,58613,58614,58615,58616,58617,58618,58619,58620,58621,58622,58623,58624,58625,58626,58627,58628,58629,58630,58631,58632,58633,58634,58635,58636,58637,58638,58639,58640,58641,58642,58643,58644,58645,58646,58647,58648,58649,58650,58651,58652,58653,58654,58655,58656,58657,58658,58659,58660,58661,12288,12289,12290,183,713,711,168,12291,12293,8212,65374,8214,8230,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12310,12311,12304,12305,177,215,247,8758,8743,8744,8721,8719,8746,8745,8712,8759,8730,8869,8741,8736,8978,8857,8747,8750,8801,8780,8776,8765,8733,8800,8814,8815,8804,8805,8734,8757,8756,9794,9792,176,8242,8243,8451,65284,164,65504,65505,8240,167,8470,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,8251,8594,8592,8593,8595,12307,58662,58663,58664,58665,58666,58667,58668,58669,58670,58671,58672,58673,58674,58675,58676,58677,58678,58679,58680,58681,58682,58683,58684,58685,58686,58687,58688,58689,58690,58691,58692,58693,58694,58695,58696,58697,58698,58699,58700,58701,58702,58703,58704,58705,58706,58707,58708,58709,58710,58711,58712,58713,58714,58715,58716,58717,58718,58719,58720,58721,58722,58723,58724,58725,58726,58727,58728,58729,58730,58731,58732,58733,58734,58735,58736,58737,58738,58739,58740,58741,58742,58743,58744,58745,58746,58747,58748,58749,58750,58751,58752,58753,58754,58755,58756,58757,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,59238,59239,59240,59241,59242,59243,9352,9353,9354,9355,9356,9357,9358,9359,9360,9361,9362,9363,9364,9365,9366,9367,9368,9369,9370,9371,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,9347,9348,9349,9350,9351,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,8364,59245,12832,12833,12834,12835,12836,12837,12838,12839,12840,12841,59246,59247,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8555,59248,59249,58758,58759,58760,58761,58762,58763,58764,58765,58766,58767,58768,58769,58770,58771,58772,58773,58774,58775,58776,58777,58778,58779,58780,58781,58782,58783,58784,58785,58786,58787,58788,58789,58790,58791,58792,58793,58794,58795,58796,58797,58798,58799,58800,58801,58802,58803,58804,58805,58806,58807,58808,58809,58810,58811,58812,58813,58814,58815,58816,58817,58818,58819,58820,58821,58822,58823,58824,58825,58826,58827,58828,58829,58830,58831,58832,58833,58834,58835,58836,58837,58838,58839,58840,58841,58842,58843,58844,58845,58846,58847,58848,58849,58850,58851,58852,12288,65281,65282,65283,65509,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65340,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,58854,58855,58856,58857,58858,58859,58860,58861,58862,58863,58864,58865,58866,58867,58868,58869,58870,58871,58872,58873,58874,58875,58876,58877,58878,58879,58880,58881,58882,58883,58884,58885,58886,58887,58888,58889,58890,58891,58892,58893,58894,58895,58896,58897,58898,58899,58900,58901,58902,58903,58904,58905,58906,58907,58908,58909,58910,58911,58912,58913,58914,58915,58916,58917,58918,58919,58920,58921,58922,58923,58924,58925,58926,58927,58928,58929,58930,58931,58932,58933,58934,58935,58936,58937,58938,58939,58940,58941,58942,58943,58944,58945,58946,58947,58948,58949,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,59250,59251,59252,59253,59254,59255,59256,59257,59258,59259,59260,58950,58951,58952,58953,58954,58955,58956,58957,58958,58959,58960,58961,58962,58963,58964,58965,58966,58967,58968,58969,58970,58971,58972,58973,58974,58975,58976,58977,58978,58979,58980,58981,58982,58983,58984,58985,58986,58987,58988,58989,58990,58991,58992,58993,58994,58995,58996,58997,58998,58999,59e3,59001,59002,59003,59004,59005,59006,59007,59008,59009,59010,59011,59012,59013,59014,59015,59016,59017,59018,59019,59020,59021,59022,59023,59024,59025,59026,59027,59028,59029,59030,59031,59032,59033,59034,59035,59036,59037,59038,59039,59040,59041,59042,59043,59044,59045,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,59261,59262,59263,59264,59265,59266,59267,59268,59046,59047,59048,59049,59050,59051,59052,59053,59054,59055,59056,59057,59058,59059,59060,59061,59062,59063,59064,59065,59066,59067,59068,59069,59070,59071,59072,59073,59074,59075,59076,59077,59078,59079,59080,59081,59082,59083,59084,59085,59086,59087,59088,59089,59090,59091,59092,59093,59094,59095,59096,59097,59098,59099,59100,59101,59102,59103,59104,59105,59106,59107,59108,59109,59110,59111,59112,59113,59114,59115,59116,59117,59118,59119,59120,59121,59122,59123,59124,59125,59126,59127,59128,59129,59130,59131,59132,59133,59134,59135,59136,59137,59138,59139,59140,59141,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,59269,59270,59271,59272,59273,59274,59275,59276,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,59277,59278,59279,59280,59281,59282,59283,65077,65078,65081,65082,65087,65088,65085,65086,65089,65090,65091,65092,59284,59285,65083,65084,65079,65080,65073,59286,65075,65076,59287,59288,59289,59290,59291,59292,59293,59294,59295,59142,59143,59144,59145,59146,59147,59148,59149,59150,59151,59152,59153,59154,59155,59156,59157,59158,59159,59160,59161,59162,59163,59164,59165,59166,59167,59168,59169,59170,59171,59172,59173,59174,59175,59176,59177,59178,59179,59180,59181,59182,59183,59184,59185,59186,59187,59188,59189,59190,59191,59192,59193,59194,59195,59196,59197,59198,59199,59200,59201,59202,59203,59204,59205,59206,59207,59208,59209,59210,59211,59212,59213,59214,59215,59216,59217,59218,59219,59220,59221,59222,59223,59224,59225,59226,59227,59228,59229,59230,59231,59232,59233,59234,59235,59236,59237,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,59296,59297,59298,59299,59300,59301,59302,59303,59304,59305,59306,59307,59308,59309,59310,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,59311,59312,59313,59314,59315,59316,59317,59318,59319,59320,59321,59322,59323,714,715,729,8211,8213,8229,8245,8453,8457,8598,8599,8600,8601,8725,8735,8739,8786,8806,8807,8895,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9581,9582,9583,9584,9585,9586,9587,9601,9602,9603,9604,9605,9606,9607,9608,9609,9610,9611,9612,9613,9614,9615,9619,9620,9621,9660,9661,9698,9699,9700,9701,9737,8853,12306,12317,12318,59324,59325,59326,59327,59328,59329,59330,59331,59332,59333,59334,257,225,462,224,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,234,593,7743,324,328,505,609,59337,59338,59339,59340,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,59341,59342,59343,59344,59345,59346,59347,59348,59349,59350,59351,59352,59353,59354,59355,59356,59357,59358,59359,59360,59361,12321,12322,12323,12324,12325,12326,12327,12328,12329,12963,13198,13199,13212,13213,13214,13217,13252,13262,13265,13266,13269,65072,65506,65508,59362,8481,12849,59363,8208,59364,59365,59366,12540,12443,12444,12541,12542,12294,12445,12446,65097,65098,65099,65100,65101,65102,65103,65104,65105,65106,65108,65109,65110,65111,65113,65114,65115,65116,65117,65118,65119,65120,65121,65122,65123,65124,65125,65126,65128,65129,65130,65131,12350,12272,12273,12274,12275,12276,12277,12278,12279,12280,12281,12282,12283,12295,59380,59381,59382,59383,59384,59385,59386,59387,59388,59389,59390,59391,59392,9472,9473,9474,9475,9476,9477,9478,9479,9480,9481,9482,9483,9484,9485,9486,9487,9488,9489,9490,9491,9492,9493,9494,9495,9496,9497,9498,9499,9500,9501,9502,9503,9504,9505,9506,9507,9508,9509,9510,9511,9512,9513,9514,9515,9516,9517,9518,9519,9520,9521,9522,9523,9524,9525,9526,9527,9528,9529,9530,9531,9532,9533,9534,9535,9536,9537,9538,9539,9540,9541,9542,9543,9544,9545,9546,9547,59393,59394,59395,59396,59397,59398,59399,59400,59401,59402,59403,59404,59405,59406,59407,29404,29405,29407,29410,29411,29412,29413,29414,29415,29418,29419,29429,29430,29433,29437,29438,29439,29440,29442,29444,29445,29446,29447,29448,29449,29451,29452,29453,29455,29456,29457,29458,29460,29464,29465,29466,29471,29472,29475,29476,29478,29479,29480,29485,29487,29488,29490,29491,29493,29494,29498,29499,29500,29501,29504,29505,29506,29507,29508,29509,29510,29511,29512,29513,29514,29515,29516,29518,29519,29521,29523,29524,29525,29526,29528,29529,29530,29531,29532,29533,29534,29535,29537,29538,29539,29540,29541,29542,29543,29544,29545,29546,29547,29550,29552,29553,57344,57345,57346,57347,57348,57349,57350,57351,57352,57353,57354,57355,57356,57357,57358,57359,57360,57361,57362,57363,57364,57365,57366,57367,57368,57369,57370,57371,57372,57373,57374,57375,57376,57377,57378,57379,57380,57381,57382,57383,57384,57385,57386,57387,57388,57389,57390,57391,57392,57393,57394,57395,57396,57397,57398,57399,57400,57401,57402,57403,57404,57405,57406,57407,57408,57409,57410,57411,57412,57413,57414,57415,57416,57417,57418,57419,57420,57421,57422,57423,57424,57425,57426,57427,57428,57429,57430,57431,57432,57433,57434,57435,57436,57437,29554,29555,29556,29557,29558,29559,29560,29561,29562,29563,29564,29565,29567,29568,29569,29570,29571,29573,29574,29576,29578,29580,29581,29583,29584,29586,29587,29588,29589,29591,29592,29593,29594,29596,29597,29598,29600,29601,29603,29604,29605,29606,29607,29608,29610,29612,29613,29617,29620,29621,29622,29624,29625,29628,29629,29630,29631,29633,29635,29636,29637,29638,29639,29643,29644,29646,29650,29651,29652,29653,29654,29655,29656,29658,29659,29660,29661,29663,29665,29666,29667,29668,29670,29672,29674,29675,29676,29678,29679,29680,29681,29683,29684,29685,29686,29687,57438,57439,57440,57441,57442,57443,57444,57445,57446,57447,57448,57449,57450,57451,57452,57453,57454,57455,57456,57457,57458,57459,57460,57461,57462,57463,57464,57465,57466,57467,57468,57469,57470,57471,57472,57473,57474,57475,57476,57477,57478,57479,57480,57481,57482,57483,57484,57485,57486,57487,57488,57489,57490,57491,57492,57493,57494,57495,57496,57497,57498,57499,57500,57501,57502,57503,57504,57505,57506,57507,57508,57509,57510,57511,57512,57513,57514,57515,57516,57517,57518,57519,57520,57521,57522,57523,57524,57525,57526,57527,57528,57529,57530,57531,29688,29689,29690,29691,29692,29693,29694,29695,29696,29697,29698,29700,29703,29704,29707,29708,29709,29710,29713,29714,29715,29716,29717,29718,29719,29720,29721,29724,29725,29726,29727,29728,29729,29731,29732,29735,29737,29739,29741,29743,29745,29746,29751,29752,29753,29754,29755,29757,29758,29759,29760,29762,29763,29764,29765,29766,29767,29768,29769,29770,29771,29772,29773,29774,29775,29776,29777,29778,29779,29780,29782,29784,29789,29792,29793,29794,29795,29796,29797,29798,29799,29800,29801,29802,29803,29804,29806,29807,29809,29810,29811,29812,29813,29816,29817,29818,57532,57533,57534,57535,57536,57537,57538,57539,57540,57541,57542,57543,57544,57545,57546,57547,57548,57549,57550,57551,57552,57553,57554,57555,57556,57557,57558,57559,57560,57561,57562,57563,57564,57565,57566,57567,57568,57569,57570,57571,57572,57573,57574,57575,57576,57577,57578,57579,57580,57581,57582,57583,57584,57585,57586,57587,57588,57589,57590,57591,57592,57593,57594,57595,57596,57597,57598,57599,57600,57601,57602,57603,57604,57605,57606,57607,57608,57609,57610,57611,57612,57613,57614,57615,57616,57617,57618,57619,57620,57621,57622,57623,57624,57625,29819,29820,29821,29823,29826,29828,29829,29830,29832,29833,29834,29836,29837,29839,29841,29842,29843,29844,29845,29846,29847,29848,29849,29850,29851,29853,29855,29856,29857,29858,29859,29860,29861,29862,29866,29867,29868,29869,29870,29871,29872,29873,29874,29875,29876,29877,29878,29879,29880,29881,29883,29884,29885,29886,29887,29888,29889,29890,29891,29892,29893,29894,29895,29896,29897,29898,29899,29900,29901,29902,29903,29904,29905,29907,29908,29909,29910,29911,29912,29913,29914,29915,29917,29919,29921,29925,29927,29928,29929,29930,29931,29932,29933,29936,29937,29938,57626,57627,57628,57629,57630,57631,57632,57633,57634,57635,57636,57637,57638,57639,57640,57641,57642,57643,57644,57645,57646,57647,57648,57649,57650,57651,57652,57653,57654,57655,57656,57657,57658,57659,57660,57661,57662,57663,57664,57665,57666,57667,57668,57669,57670,57671,57672,57673,57674,57675,57676,57677,57678,57679,57680,57681,57682,57683,57684,57685,57686,57687,57688,57689,57690,57691,57692,57693,57694,57695,57696,57697,57698,57699,57700,57701,57702,57703,57704,57705,57706,57707,57708,57709,57710,57711,57712,57713,57714,57715,57716,57717,57718,57719,29939,29941,29944,29945,29946,29947,29948,29949,29950,29952,29953,29954,29955,29957,29958,29959,29960,29961,29962,29963,29964,29966,29968,29970,29972,29973,29974,29975,29979,29981,29982,29984,29985,29986,29987,29988,29990,29991,29994,29998,30004,30006,30009,30012,30013,30015,30017,30018,30019,30020,30022,30023,30025,30026,30029,30032,30033,30034,30035,30037,30038,30039,30040,30045,30046,30047,30048,30049,30050,30051,30052,30055,30056,30057,30059,30060,30061,30062,30063,30064,30065,30067,30069,30070,30071,30074,30075,30076,30077,30078,30080,30081,30082,30084,30085,30087,57720,57721,57722,57723,57724,57725,57726,57727,57728,57729,57730,57731,57732,57733,57734,57735,57736,57737,57738,57739,57740,57741,57742,57743,57744,57745,57746,57747,57748,57749,57750,57751,57752,57753,57754,57755,57756,57757,57758,57759,57760,57761,57762,57763,57764,57765,57766,57767,57768,57769,57770,57771,57772,57773,57774,57775,57776,57777,57778,57779,57780,57781,57782,57783,57784,57785,57786,57787,57788,57789,57790,57791,57792,57793,57794,57795,57796,57797,57798,57799,57800,57801,57802,57803,57804,57805,57806,57807,57808,57809,57810,57811,57812,57813,30088,30089,30090,30092,30093,30094,30096,30099,30101,30104,30107,30108,30110,30114,30118,30119,30120,30121,30122,30125,30134,30135,30138,30139,30143,30144,30145,30150,30155,30156,30158,30159,30160,30161,30163,30167,30169,30170,30172,30173,30175,30176,30177,30181,30185,30188,30189,30190,30191,30194,30195,30197,30198,30199,30200,30202,30203,30205,30206,30210,30212,30214,30215,30216,30217,30219,30221,30222,30223,30225,30226,30227,30228,30230,30234,30236,30237,30238,30241,30243,30247,30248,30252,30254,30255,30257,30258,30262,30263,30265,30266,30267,30269,30273,30274,30276,57814,57815,57816,57817,57818,57819,57820,57821,57822,57823,57824,57825,57826,57827,57828,57829,57830,57831,57832,57833,57834,57835,57836,57837,57838,57839,57840,57841,57842,57843,57844,57845,57846,57847,57848,57849,57850,57851,57852,57853,57854,57855,57856,57857,57858,57859,57860,57861,57862,57863,57864,57865,57866,57867,57868,57869,57870,57871,57872,57873,57874,57875,57876,57877,57878,57879,57880,57881,57882,57883,57884,57885,57886,57887,57888,57889,57890,57891,57892,57893,57894,57895,57896,57897,57898,57899,57900,57901,57902,57903,57904,57905,57906,57907,30277,30278,30279,30280,30281,30282,30283,30286,30287,30288,30289,30290,30291,30293,30295,30296,30297,30298,30299,30301,30303,30304,30305,30306,30308,30309,30310,30311,30312,30313,30314,30316,30317,30318,30320,30321,30322,30323,30324,30325,30326,30327,30329,30330,30332,30335,30336,30337,30339,30341,30345,30346,30348,30349,30351,30352,30354,30356,30357,30359,30360,30362,30363,30364,30365,30366,30367,30368,30369,30370,30371,30373,30374,30375,30376,30377,30378,30379,30380,30381,30383,30384,30387,30389,30390,30391,30392,30393,30394,30395,30396,30397,30398,30400,30401,30403,21834,38463,22467,25384,21710,21769,21696,30353,30284,34108,30702,33406,30861,29233,38552,38797,27688,23433,20474,25353,26263,23736,33018,26696,32942,26114,30414,20985,25942,29100,32753,34948,20658,22885,25034,28595,33453,25420,25170,21485,21543,31494,20843,30116,24052,25300,36299,38774,25226,32793,22365,38712,32610,29240,30333,26575,30334,25670,20336,36133,25308,31255,26001,29677,25644,25203,33324,39041,26495,29256,25198,25292,20276,29923,21322,21150,32458,37030,24110,26758,27036,33152,32465,26834,30917,34444,38225,20621,35876,33502,32990,21253,35090,21093,30404,30407,30409,30411,30412,30419,30421,30425,30426,30428,30429,30430,30432,30433,30434,30435,30436,30438,30439,30440,30441,30442,30443,30444,30445,30448,30451,30453,30454,30455,30458,30459,30461,30463,30464,30466,30467,30469,30470,30474,30476,30478,30479,30480,30481,30482,30483,30484,30485,30486,30487,30488,30491,30492,30493,30494,30497,30499,30500,30501,30503,30506,30507,30508,30510,30512,30513,30514,30515,30516,30521,30523,30525,30526,30527,30530,30532,30533,30534,30536,30537,30538,30539,30540,30541,30542,30543,30546,30547,30548,30549,30550,30551,30552,30553,30556,34180,38649,20445,22561,39281,23453,25265,25253,26292,35961,40077,29190,26479,30865,24754,21329,21271,36744,32972,36125,38049,20493,29384,22791,24811,28953,34987,22868,33519,26412,31528,23849,32503,29997,27893,36454,36856,36924,40763,27604,37145,31508,24444,30887,34006,34109,27605,27609,27606,24065,24199,30201,38381,25949,24330,24517,36767,22721,33218,36991,38491,38829,36793,32534,36140,25153,20415,21464,21342,36776,36777,36779,36941,26631,24426,33176,34920,40150,24971,21035,30250,24428,25996,28626,28392,23486,25672,20853,20912,26564,19993,31177,39292,28851,30557,30558,30559,30560,30564,30567,30569,30570,30573,30574,30575,30576,30577,30578,30579,30580,30581,30582,30583,30584,30586,30587,30588,30593,30594,30595,30598,30599,30600,30601,30602,30603,30607,30608,30611,30612,30613,30614,30615,30616,30617,30618,30619,30620,30621,30622,30625,30627,30628,30630,30632,30635,30637,30638,30639,30641,30642,30644,30646,30647,30648,30649,30650,30652,30654,30656,30657,30658,30659,30660,30661,30662,30663,30664,30665,30666,30667,30668,30670,30671,30672,30673,30674,30675,30676,30677,30678,30680,30681,30682,30685,30686,30687,30688,30689,30692,30149,24182,29627,33760,25773,25320,38069,27874,21338,21187,25615,38082,31636,20271,24091,33334,33046,33162,28196,27850,39539,25429,21340,21754,34917,22496,19981,24067,27493,31807,37096,24598,25830,29468,35009,26448,25165,36130,30572,36393,37319,24425,33756,34081,39184,21442,34453,27531,24813,24808,28799,33485,33329,20179,27815,34255,25805,31961,27133,26361,33609,21397,31574,20391,20876,27979,23618,36461,25554,21449,33580,33590,26597,30900,25661,23519,23700,24046,35815,25286,26612,35962,25600,25530,34633,39307,35863,32544,38130,20135,38416,39076,26124,29462,30694,30696,30698,30703,30704,30705,30706,30708,30709,30711,30713,30714,30715,30716,30723,30724,30725,30726,30727,30728,30730,30731,30734,30735,30736,30739,30741,30745,30747,30750,30752,30753,30754,30756,30760,30762,30763,30766,30767,30769,30770,30771,30773,30774,30781,30783,30785,30786,30787,30788,30790,30792,30793,30794,30795,30797,30799,30801,30803,30804,30808,30809,30810,30811,30812,30814,30815,30816,30817,30818,30819,30820,30821,30822,30823,30824,30825,30831,30832,30833,30834,30835,30836,30837,30838,30840,30841,30842,30843,30845,30846,30847,30848,30849,30850,30851,22330,23581,24120,38271,20607,32928,21378,25950,30021,21809,20513,36229,25220,38046,26397,22066,28526,24034,21557,28818,36710,25199,25764,25507,24443,28552,37108,33251,36784,23576,26216,24561,27785,38472,36225,34924,25745,31216,22478,27225,25104,21576,20056,31243,24809,28548,35802,25215,36894,39563,31204,21507,30196,25345,21273,27744,36831,24347,39536,32827,40831,20360,23610,36196,32709,26021,28861,20805,20914,34411,23815,23456,25277,37228,30068,36364,31264,24833,31609,20167,32504,30597,19985,33261,21021,20986,27249,21416,36487,38148,38607,28353,38500,26970,30852,30853,30854,30856,30858,30859,30863,30864,30866,30868,30869,30870,30873,30877,30878,30880,30882,30884,30886,30888,30889,30890,30891,30892,30893,30894,30895,30901,30902,30903,30904,30906,30907,30908,30909,30911,30912,30914,30915,30916,30918,30919,30920,30924,30925,30926,30927,30929,30930,30931,30934,30935,30936,30938,30939,30940,30941,30942,30943,30944,30945,30946,30947,30948,30949,30950,30951,30953,30954,30955,30957,30958,30959,30960,30961,30963,30965,30966,30968,30969,30971,30972,30973,30974,30975,30976,30978,30979,30980,30982,30983,30984,30985,30986,30987,30988,30784,20648,30679,25616,35302,22788,25571,24029,31359,26941,20256,33337,21912,20018,30126,31383,24162,24202,38383,21019,21561,28810,25462,38180,22402,26149,26943,37255,21767,28147,32431,34850,25139,32496,30133,33576,30913,38604,36766,24904,29943,35789,27492,21050,36176,27425,32874,33905,22257,21254,20174,19995,20945,31895,37259,31751,20419,36479,31713,31388,25703,23828,20652,33030,30209,31929,28140,32736,26449,23384,23544,30923,25774,25619,25514,25387,38169,25645,36798,31572,30249,25171,22823,21574,27513,20643,25140,24102,27526,20195,36151,34955,24453,36910,30989,30990,30991,30992,30993,30994,30996,30997,30998,30999,31e3,31001,31002,31003,31004,31005,31007,31008,31009,31010,31011,31013,31014,31015,31016,31017,31018,31019,31020,31021,31022,31023,31024,31025,31026,31027,31029,31030,31031,31032,31033,31037,31039,31042,31043,31044,31045,31047,31050,31051,31052,31053,31054,31055,31056,31057,31058,31060,31061,31064,31065,31073,31075,31076,31078,31081,31082,31083,31084,31086,31088,31089,31090,31091,31092,31093,31094,31097,31099,31100,31101,31102,31103,31106,31107,31110,31111,31112,31113,31115,31116,31117,31118,31120,31121,31122,24608,32829,25285,20025,21333,37112,25528,32966,26086,27694,20294,24814,28129,35806,24377,34507,24403,25377,20826,33633,26723,20992,25443,36424,20498,23707,31095,23548,21040,31291,24764,36947,30423,24503,24471,30340,36460,28783,30331,31561,30634,20979,37011,22564,20302,28404,36842,25932,31515,29380,28068,32735,23265,25269,24213,22320,33922,31532,24093,24351,36882,32532,39072,25474,28359,30872,28857,20856,38747,22443,30005,20291,30008,24215,24806,22880,28096,27583,30857,21500,38613,20939,20993,25481,21514,38035,35843,36300,29241,30879,34678,36845,35853,21472,31123,31124,31125,31126,31127,31128,31129,31131,31132,31133,31134,31135,31136,31137,31138,31139,31140,31141,31142,31144,31145,31146,31147,31148,31149,31150,31151,31152,31153,31154,31156,31157,31158,31159,31160,31164,31167,31170,31172,31173,31175,31176,31178,31180,31182,31183,31184,31187,31188,31190,31191,31193,31194,31195,31196,31197,31198,31200,31201,31202,31205,31208,31210,31212,31214,31217,31218,31219,31220,31221,31222,31223,31225,31226,31228,31230,31231,31233,31236,31237,31239,31240,31241,31242,31244,31247,31248,31249,31250,31251,31253,31254,31256,31257,31259,31260,19969,30447,21486,38025,39030,40718,38189,23450,35746,20002,19996,20908,33891,25026,21160,26635,20375,24683,20923,27934,20828,25238,26007,38497,35910,36887,30168,37117,30563,27602,29322,29420,35835,22581,30585,36172,26460,38208,32922,24230,28193,22930,31471,30701,38203,27573,26029,32526,22534,20817,38431,23545,22697,21544,36466,25958,39039,22244,38045,30462,36929,25479,21702,22810,22842,22427,36530,26421,36346,33333,21057,24816,22549,34558,23784,40517,20420,39069,35769,23077,24694,21380,25212,36943,37122,39295,24681,32780,20799,32819,23572,39285,27953,20108,31261,31263,31265,31266,31268,31269,31270,31271,31272,31273,31274,31275,31276,31277,31278,31279,31280,31281,31282,31284,31285,31286,31288,31290,31294,31296,31297,31298,31299,31300,31301,31303,31304,31305,31306,31307,31308,31309,31310,31311,31312,31314,31315,31316,31317,31318,31320,31321,31322,31323,31324,31325,31326,31327,31328,31329,31330,31331,31332,31333,31334,31335,31336,31337,31338,31339,31340,31341,31342,31343,31345,31346,31347,31349,31355,31356,31357,31358,31362,31365,31367,31369,31370,31371,31372,31374,31375,31376,31379,31380,31385,31386,31387,31390,31393,31394,36144,21457,32602,31567,20240,20047,38400,27861,29648,34281,24070,30058,32763,27146,30718,38034,32321,20961,28902,21453,36820,33539,36137,29359,39277,27867,22346,33459,26041,32938,25151,38450,22952,20223,35775,32442,25918,33778,38750,21857,39134,32933,21290,35837,21536,32954,24223,27832,36153,33452,37210,21545,27675,20998,32439,22367,28954,27774,31881,22859,20221,24575,24868,31914,20016,23553,26539,34562,23792,38155,39118,30127,28925,36898,20911,32541,35773,22857,20964,20315,21542,22827,25975,32932,23413,25206,25282,36752,24133,27679,31526,20239,20440,26381,31395,31396,31399,31401,31402,31403,31406,31407,31408,31409,31410,31412,31413,31414,31415,31416,31417,31418,31419,31420,31421,31422,31424,31425,31426,31427,31428,31429,31430,31431,31432,31433,31434,31436,31437,31438,31439,31440,31441,31442,31443,31444,31445,31447,31448,31450,31451,31452,31453,31457,31458,31460,31463,31464,31465,31466,31467,31468,31470,31472,31473,31474,31475,31476,31477,31478,31479,31480,31483,31484,31486,31488,31489,31490,31493,31495,31497,31500,31501,31502,31504,31506,31507,31510,31511,31512,31514,31516,31517,31519,31521,31522,31523,31527,31529,31533,28014,28074,31119,34993,24343,29995,25242,36741,20463,37340,26023,33071,33105,24220,33104,36212,21103,35206,36171,22797,20613,20184,38428,29238,33145,36127,23500,35747,38468,22919,32538,21648,22134,22030,35813,25913,27010,38041,30422,28297,24178,29976,26438,26577,31487,32925,36214,24863,31174,25954,36195,20872,21018,38050,32568,32923,32434,23703,28207,26464,31705,30347,39640,33167,32660,31957,25630,38224,31295,21578,21733,27468,25601,25096,40509,33011,30105,21106,38761,33883,26684,34532,38401,38548,38124,20010,21508,32473,26681,36319,32789,26356,24218,32697,31535,31536,31538,31540,31541,31542,31543,31545,31547,31549,31551,31552,31553,31554,31555,31556,31558,31560,31562,31565,31566,31571,31573,31575,31577,31580,31582,31583,31585,31587,31588,31589,31590,31591,31592,31593,31594,31595,31596,31597,31599,31600,31603,31604,31606,31608,31610,31612,31613,31615,31617,31618,31619,31620,31622,31623,31624,31625,31626,31627,31628,31630,31631,31633,31634,31635,31638,31640,31641,31642,31643,31646,31647,31648,31651,31652,31653,31662,31663,31664,31666,31667,31669,31670,31671,31673,31674,31675,31676,31677,31678,31679,31680,31682,31683,31684,22466,32831,26775,24037,25915,21151,24685,40858,20379,36524,20844,23467,24339,24041,27742,25329,36129,20849,38057,21246,27807,33503,29399,22434,26500,36141,22815,36764,33735,21653,31629,20272,27837,23396,22993,40723,21476,34506,39592,35895,32929,25925,39038,22266,38599,21038,29916,21072,23521,25346,35074,20054,25296,24618,26874,20851,23448,20896,35266,31649,39302,32592,24815,28748,36143,20809,24191,36891,29808,35268,22317,30789,24402,40863,38394,36712,39740,35809,30328,26690,26588,36330,36149,21053,36746,28378,26829,38149,37101,22269,26524,35065,36807,21704,31685,31688,31689,31690,31691,31693,31694,31695,31696,31698,31700,31701,31702,31703,31704,31707,31708,31710,31711,31712,31714,31715,31716,31719,31720,31721,31723,31724,31725,31727,31728,31730,31731,31732,31733,31734,31736,31737,31738,31739,31741,31743,31744,31745,31746,31747,31748,31749,31750,31752,31753,31754,31757,31758,31760,31761,31762,31763,31764,31765,31767,31768,31769,31770,31771,31772,31773,31774,31776,31777,31778,31779,31780,31781,31784,31785,31787,31788,31789,31790,31791,31792,31793,31794,31795,31796,31797,31798,31799,31801,31802,31803,31804,31805,31806,31810,39608,23401,28023,27686,20133,23475,39559,37219,25e3,37039,38889,21547,28085,23506,20989,21898,32597,32752,25788,25421,26097,25022,24717,28938,27735,27721,22831,26477,33322,22741,22158,35946,27627,37085,22909,32791,21495,28009,21621,21917,33655,33743,26680,31166,21644,20309,21512,30418,35977,38402,27827,28088,36203,35088,40548,36154,22079,40657,30165,24456,29408,24680,21756,20136,27178,34913,24658,36720,21700,28888,34425,40511,27946,23439,24344,32418,21897,20399,29492,21564,21402,20505,21518,21628,20046,24573,29786,22774,33899,32993,34676,29392,31946,28246,31811,31812,31813,31814,31815,31816,31817,31818,31819,31820,31822,31823,31824,31825,31826,31827,31828,31829,31830,31831,31832,31833,31834,31835,31836,31837,31838,31839,31840,31841,31842,31843,31844,31845,31846,31847,31848,31849,31850,31851,31852,31853,31854,31855,31856,31857,31858,31861,31862,31863,31864,31865,31866,31870,31871,31872,31873,31874,31875,31876,31877,31878,31879,31880,31882,31883,31884,31885,31886,31887,31888,31891,31892,31894,31897,31898,31899,31904,31905,31907,31910,31911,31912,31913,31915,31916,31917,31919,31920,31924,31925,31926,31927,31928,31930,31931,24359,34382,21804,25252,20114,27818,25143,33457,21719,21326,29502,28369,30011,21010,21270,35805,27088,24458,24576,28142,22351,27426,29615,26707,36824,32531,25442,24739,21796,30186,35938,28949,28067,23462,24187,33618,24908,40644,30970,34647,31783,30343,20976,24822,29004,26179,24140,24653,35854,28784,25381,36745,24509,24674,34516,22238,27585,24724,24935,21321,24800,26214,36159,31229,20250,28905,27719,35763,35826,32472,33636,26127,23130,39746,27985,28151,35905,27963,20249,28779,33719,25110,24785,38669,36135,31096,20987,22334,22522,26426,30072,31293,31215,31637,31935,31936,31938,31939,31940,31942,31945,31947,31950,31951,31952,31953,31954,31955,31956,31960,31962,31963,31965,31966,31969,31970,31971,31972,31973,31974,31975,31977,31978,31979,31980,31981,31982,31984,31985,31986,31987,31988,31989,31990,31991,31993,31994,31996,31997,31998,31999,32e3,32001,32002,32003,32004,32005,32006,32007,32008,32009,32011,32012,32013,32014,32015,32016,32017,32018,32019,32020,32021,32022,32023,32024,32025,32026,32027,32028,32029,32030,32031,32033,32035,32036,32037,32038,32040,32041,32042,32044,32045,32046,32048,32049,32050,32051,32052,32053,32054,32908,39269,36857,28608,35749,40481,23020,32489,32521,21513,26497,26840,36753,31821,38598,21450,24613,30142,27762,21363,23241,32423,25380,20960,33034,24049,34015,25216,20864,23395,20238,31085,21058,24760,27982,23492,23490,35745,35760,26082,24524,38469,22931,32487,32426,22025,26551,22841,20339,23478,21152,33626,39050,36158,30002,38078,20551,31292,20215,26550,39550,23233,27516,30417,22362,23574,31546,38388,29006,20860,32937,33392,22904,32516,33575,26816,26604,30897,30839,25315,25441,31616,20461,21098,20943,33616,27099,37492,36341,36145,35265,38190,31661,20214,32055,32056,32057,32058,32059,32060,32061,32062,32063,32064,32065,32066,32067,32068,32069,32070,32071,32072,32073,32074,32075,32076,32077,32078,32079,32080,32081,32082,32083,32084,32085,32086,32087,32088,32089,32090,32091,32092,32093,32094,32095,32096,32097,32098,32099,32100,32101,32102,32103,32104,32105,32106,32107,32108,32109,32111,32112,32113,32114,32115,32116,32117,32118,32120,32121,32122,32123,32124,32125,32126,32127,32128,32129,32130,32131,32132,32133,32134,32135,32136,32137,32138,32139,32140,32141,32142,32143,32144,32145,32146,32147,32148,32149,32150,32151,32152,20581,33328,21073,39279,28176,28293,28071,24314,20725,23004,23558,27974,27743,30086,33931,26728,22870,35762,21280,37233,38477,34121,26898,30977,28966,33014,20132,37066,27975,39556,23047,22204,25605,38128,30699,20389,33050,29409,35282,39290,32564,32478,21119,25945,37237,36735,36739,21483,31382,25581,25509,30342,31224,34903,38454,25130,21163,33410,26708,26480,25463,30571,31469,27905,32467,35299,22992,25106,34249,33445,30028,20511,20171,30117,35819,23626,24062,31563,26020,37329,20170,27941,35167,32039,38182,20165,35880,36827,38771,26187,31105,36817,28908,28024,32153,32154,32155,32156,32157,32158,32159,32160,32161,32162,32163,32164,32165,32167,32168,32169,32170,32171,32172,32173,32175,32176,32177,32178,32179,32180,32181,32182,32183,32184,32185,32186,32187,32188,32189,32190,32191,32192,32193,32194,32195,32196,32197,32198,32199,32200,32201,32202,32203,32204,32205,32206,32207,32208,32209,32210,32211,32212,32213,32214,32215,32216,32217,32218,32219,32220,32221,32222,32223,32224,32225,32226,32227,32228,32229,32230,32231,32232,32233,32234,32235,32236,32237,32238,32239,32240,32241,32242,32243,32244,32245,32246,32247,32248,32249,32250,23613,21170,33606,20834,33550,30555,26230,40120,20140,24778,31934,31923,32463,20117,35686,26223,39048,38745,22659,25964,38236,24452,30153,38742,31455,31454,20928,28847,31384,25578,31350,32416,29590,38893,20037,28792,20061,37202,21417,25937,26087,33276,33285,21646,23601,30106,38816,25304,29401,30141,23621,39545,33738,23616,21632,30697,20030,27822,32858,25298,25454,24040,20855,36317,36382,38191,20465,21477,24807,28844,21095,25424,40515,23071,20518,30519,21367,32482,25733,25899,25225,25496,20500,29237,35273,20915,35776,32477,22343,33740,38055,20891,21531,23803,32251,32252,32253,32254,32255,32256,32257,32258,32259,32260,32261,32262,32263,32264,32265,32266,32267,32268,32269,32270,32271,32272,32273,32274,32275,32276,32277,32278,32279,32280,32281,32282,32283,32284,32285,32286,32287,32288,32289,32290,32291,32292,32293,32294,32295,32296,32297,32298,32299,32300,32301,32302,32303,32304,32305,32306,32307,32308,32309,32310,32311,32312,32313,32314,32316,32317,32318,32319,32320,32322,32323,32324,32325,32326,32328,32329,32330,32331,32332,32333,32334,32335,32336,32337,32338,32339,32340,32341,32342,32343,32344,32345,32346,32347,32348,32349,20426,31459,27994,37089,39567,21888,21654,21345,21679,24320,25577,26999,20975,24936,21002,22570,21208,22350,30733,30475,24247,24951,31968,25179,25239,20130,28821,32771,25335,28900,38752,22391,33499,26607,26869,30933,39063,31185,22771,21683,21487,28212,20811,21051,23458,35838,32943,21827,22438,24691,22353,21549,31354,24656,23380,25511,25248,21475,25187,23495,26543,21741,31391,33510,37239,24211,35044,22840,22446,25358,36328,33007,22359,31607,20393,24555,23485,27454,21281,31568,29378,26694,30719,30518,26103,20917,20111,30420,23743,31397,33909,22862,39745,20608,32350,32351,32352,32353,32354,32355,32356,32357,32358,32359,32360,32361,32362,32363,32364,32365,32366,32367,32368,32369,32370,32371,32372,32373,32374,32375,32376,32377,32378,32379,32380,32381,32382,32383,32384,32385,32387,32388,32389,32390,32391,32392,32393,32394,32395,32396,32397,32398,32399,32400,32401,32402,32403,32404,32405,32406,32407,32408,32409,32410,32412,32413,32414,32430,32436,32443,32444,32470,32484,32492,32505,32522,32528,32542,32567,32569,32571,32572,32573,32574,32575,32576,32577,32579,32582,32583,32584,32585,32586,32587,32588,32589,32590,32591,32594,32595,39304,24871,28291,22372,26118,25414,22256,25324,25193,24275,38420,22403,25289,21895,34593,33098,36771,21862,33713,26469,36182,34013,23146,26639,25318,31726,38417,20848,28572,35888,25597,35272,25042,32518,28866,28389,29701,27028,29436,24266,37070,26391,28010,25438,21171,29282,32769,20332,23013,37226,28889,28061,21202,20048,38647,38253,34174,30922,32047,20769,22418,25794,32907,31867,27882,26865,26974,20919,21400,26792,29313,40654,31729,29432,31163,28435,29702,26446,37324,40100,31036,33673,33620,21519,26647,20029,21385,21169,30782,21382,21033,20616,20363,20432,32598,32601,32603,32604,32605,32606,32608,32611,32612,32613,32614,32615,32619,32620,32621,32623,32624,32627,32629,32630,32631,32632,32634,32635,32636,32637,32639,32640,32642,32643,32644,32645,32646,32647,32648,32649,32651,32653,32655,32656,32657,32658,32659,32661,32662,32663,32664,32665,32667,32668,32672,32674,32675,32677,32678,32680,32681,32682,32683,32684,32685,32686,32689,32691,32692,32693,32694,32695,32698,32699,32702,32704,32706,32707,32708,32710,32711,32712,32713,32715,32717,32719,32720,32721,32722,32723,32726,32727,32729,32730,32731,32732,32733,32734,32738,32739,30178,31435,31890,27813,38582,21147,29827,21737,20457,32852,33714,36830,38256,24265,24604,28063,24088,25947,33080,38142,24651,28860,32451,31918,20937,26753,31921,33391,20004,36742,37327,26238,20142,35845,25769,32842,20698,30103,29134,23525,36797,28518,20102,25730,38243,24278,26009,21015,35010,28872,21155,29454,29747,26519,30967,38678,20020,37051,40158,28107,20955,36161,21533,25294,29618,33777,38646,40836,38083,20278,32666,20940,28789,38517,23725,39046,21478,20196,28316,29705,27060,30827,39311,30041,21016,30244,27969,26611,20845,40857,32843,21657,31548,31423,32740,32743,32744,32746,32747,32748,32749,32751,32754,32756,32757,32758,32759,32760,32761,32762,32765,32766,32767,32770,32775,32776,32777,32778,32782,32783,32785,32787,32794,32795,32797,32798,32799,32801,32803,32804,32811,32812,32813,32814,32815,32816,32818,32820,32825,32826,32828,32830,32832,32833,32836,32837,32839,32840,32841,32846,32847,32848,32849,32851,32853,32854,32855,32857,32859,32860,32861,32862,32863,32864,32865,32866,32867,32868,32869,32870,32871,32872,32875,32876,32877,32878,32879,32880,32882,32883,32884,32885,32886,32887,32888,32889,32890,32891,32892,32893,38534,22404,25314,38471,27004,23044,25602,31699,28431,38475,33446,21346,39045,24208,28809,25523,21348,34383,40065,40595,30860,38706,36335,36162,40575,28510,31108,24405,38470,25134,39540,21525,38109,20387,26053,23653,23649,32533,34385,27695,24459,29575,28388,32511,23782,25371,23402,28390,21365,20081,25504,30053,25249,36718,20262,20177,27814,32438,35770,33821,34746,32599,36923,38179,31657,39585,35064,33853,27931,39558,32476,22920,40635,29595,30721,34434,39532,39554,22043,21527,22475,20080,40614,21334,36808,33033,30610,39314,34542,28385,34067,26364,24930,28459,32894,32897,32898,32901,32904,32906,32909,32910,32911,32912,32913,32914,32916,32917,32919,32921,32926,32931,32934,32935,32936,32940,32944,32947,32949,32950,32952,32953,32955,32965,32967,32968,32969,32970,32971,32975,32976,32977,32978,32979,32980,32981,32984,32991,32992,32994,32995,32998,33006,33013,33015,33017,33019,33022,33023,33024,33025,33027,33028,33029,33031,33032,33035,33036,33045,33047,33049,33051,33052,33053,33055,33056,33057,33058,33059,33060,33061,33062,33063,33064,33065,33066,33067,33069,33070,33072,33075,33076,33077,33079,33081,33082,33083,33084,33085,33087,35881,33426,33579,30450,27667,24537,33725,29483,33541,38170,27611,30683,38086,21359,33538,20882,24125,35980,36152,20040,29611,26522,26757,37238,38665,29028,27809,30473,23186,38209,27599,32654,26151,23504,22969,23194,38376,38391,20204,33804,33945,27308,30431,38192,29467,26790,23391,30511,37274,38753,31964,36855,35868,24357,31859,31192,35269,27852,34588,23494,24130,26825,30496,32501,20885,20813,21193,23081,32517,38754,33495,25551,30596,34256,31186,28218,24217,22937,34065,28781,27665,25279,30399,25935,24751,38397,26126,34719,40483,38125,21517,21629,35884,25720,33088,33089,33090,33091,33092,33093,33095,33097,33101,33102,33103,33106,33110,33111,33112,33115,33116,33117,33118,33119,33121,33122,33123,33124,33126,33128,33130,33131,33132,33135,33138,33139,33141,33142,33143,33144,33153,33155,33156,33157,33158,33159,33161,33163,33164,33165,33166,33168,33170,33171,33172,33173,33174,33175,33177,33178,33182,33183,33184,33185,33186,33188,33189,33191,33193,33195,33196,33197,33198,33199,33200,33201,33202,33204,33205,33206,33207,33208,33209,33212,33213,33214,33215,33220,33221,33223,33224,33225,33227,33229,33230,33231,33232,33233,33234,33235,25721,34321,27169,33180,30952,25705,39764,25273,26411,33707,22696,40664,27819,28448,23518,38476,35851,29279,26576,25287,29281,20137,22982,27597,22675,26286,24149,21215,24917,26408,30446,30566,29287,31302,25343,21738,21584,38048,37027,23068,32435,27670,20035,22902,32784,22856,21335,30007,38590,22218,25376,33041,24700,38393,28118,21602,39297,20869,23273,33021,22958,38675,20522,27877,23612,25311,20320,21311,33147,36870,28346,34091,25288,24180,30910,25781,25467,24565,23064,37247,40479,23615,25423,32834,23421,21870,38218,38221,28037,24744,26592,29406,20957,23425,33236,33237,33238,33239,33240,33241,33242,33243,33244,33245,33246,33247,33248,33249,33250,33252,33253,33254,33256,33257,33259,33262,33263,33264,33265,33266,33269,33270,33271,33272,33273,33274,33277,33279,33283,33287,33288,33289,33290,33291,33294,33295,33297,33299,33301,33302,33303,33304,33305,33306,33309,33312,33316,33317,33318,33319,33321,33326,33330,33338,33340,33341,33343,33344,33345,33346,33347,33349,33350,33352,33354,33356,33357,33358,33360,33361,33362,33363,33364,33365,33366,33367,33369,33371,33372,33373,33374,33376,33377,33378,33379,33380,33381,33382,33383,33385,25319,27870,29275,25197,38062,32445,33043,27987,20892,24324,22900,21162,24594,22899,26262,34384,30111,25386,25062,31983,35834,21734,27431,40485,27572,34261,21589,20598,27812,21866,36276,29228,24085,24597,29750,25293,25490,29260,24472,28227,27966,25856,28504,30424,30928,30460,30036,21028,21467,20051,24222,26049,32810,32982,25243,21638,21032,28846,34957,36305,27873,21624,32986,22521,35060,36180,38506,37197,20329,27803,21943,30406,30768,25256,28921,28558,24429,34028,26842,30844,31735,33192,26379,40527,25447,30896,22383,30738,38713,25209,25259,21128,29749,27607,33386,33387,33388,33389,33393,33397,33398,33399,33400,33403,33404,33408,33409,33411,33413,33414,33415,33417,33420,33424,33427,33428,33429,33430,33434,33435,33438,33440,33442,33443,33447,33458,33461,33462,33466,33467,33468,33471,33472,33474,33475,33477,33478,33481,33488,33494,33497,33498,33501,33506,33511,33512,33513,33514,33516,33517,33518,33520,33522,33523,33525,33526,33528,33530,33532,33533,33534,33535,33536,33546,33547,33549,33552,33554,33555,33558,33560,33561,33565,33566,33567,33568,33569,33570,33571,33572,33573,33574,33577,33578,33582,33584,33586,33591,33595,33597,21860,33086,30130,30382,21305,30174,20731,23617,35692,31687,20559,29255,39575,39128,28418,29922,31080,25735,30629,25340,39057,36139,21697,32856,20050,22378,33529,33805,24179,20973,29942,35780,23631,22369,27900,39047,23110,30772,39748,36843,31893,21078,25169,38138,20166,33670,33889,33769,33970,22484,26420,22275,26222,28006,35889,26333,28689,26399,27450,26646,25114,22971,19971,20932,28422,26578,27791,20854,26827,22855,27495,30054,23822,33040,40784,26071,31048,31041,39569,36215,23682,20062,20225,21551,22865,30732,22120,27668,36804,24323,27773,27875,35755,25488,33598,33599,33601,33602,33604,33605,33608,33610,33611,33612,33613,33614,33619,33621,33622,33623,33624,33625,33629,33634,33648,33649,33650,33651,33652,33653,33654,33657,33658,33662,33663,33664,33665,33666,33667,33668,33671,33672,33674,33675,33676,33677,33679,33680,33681,33684,33685,33686,33687,33689,33690,33693,33695,33697,33698,33699,33700,33701,33702,33703,33708,33709,33710,33711,33717,33723,33726,33727,33730,33731,33732,33734,33736,33737,33739,33741,33742,33744,33745,33746,33747,33749,33751,33753,33754,33755,33758,33762,33763,33764,33766,33767,33768,33771,33772,33773,24688,27965,29301,25190,38030,38085,21315,36801,31614,20191,35878,20094,40660,38065,38067,21069,28508,36963,27973,35892,22545,23884,27424,27465,26538,21595,33108,32652,22681,34103,24378,25250,27207,38201,25970,24708,26725,30631,20052,20392,24039,38808,25772,32728,23789,20431,31373,20999,33540,19988,24623,31363,38054,20405,20146,31206,29748,21220,33465,25810,31165,23517,27777,38738,36731,27682,20542,21375,28165,25806,26228,27696,24773,39031,35831,24198,29756,31351,31179,19992,37041,29699,27714,22234,37195,27845,36235,21306,34502,26354,36527,23624,39537,28192,33774,33775,33779,33780,33781,33782,33783,33786,33787,33788,33790,33791,33792,33794,33797,33799,33800,33801,33802,33808,33810,33811,33812,33813,33814,33815,33817,33818,33819,33822,33823,33824,33825,33826,33827,33833,33834,33835,33836,33837,33838,33839,33840,33842,33843,33844,33845,33846,33847,33849,33850,33851,33854,33855,33856,33857,33858,33859,33860,33861,33863,33864,33865,33866,33867,33868,33869,33870,33871,33872,33874,33875,33876,33877,33878,33880,33885,33886,33887,33888,33890,33892,33893,33894,33895,33896,33898,33902,33903,33904,33906,33908,33911,33913,33915,33916,21462,23094,40843,36259,21435,22280,39079,26435,37275,27849,20840,30154,25331,29356,21048,21149,32570,28820,30264,21364,40522,27063,30830,38592,35033,32676,28982,29123,20873,26579,29924,22756,25880,22199,35753,39286,25200,32469,24825,28909,22764,20161,20154,24525,38887,20219,35748,20995,22922,32427,25172,20173,26085,25102,33592,33993,33635,34701,29076,28342,23481,32466,20887,25545,26580,32905,33593,34837,20754,23418,22914,36785,20083,27741,20837,35109,36719,38446,34122,29790,38160,38384,28070,33509,24369,25746,27922,33832,33134,40131,22622,36187,19977,21441,33917,33918,33919,33920,33921,33923,33924,33925,33926,33930,33933,33935,33936,33937,33938,33939,33940,33941,33942,33944,33946,33947,33949,33950,33951,33952,33954,33955,33956,33957,33958,33959,33960,33961,33962,33963,33964,33965,33966,33968,33969,33971,33973,33974,33975,33979,33980,33982,33984,33986,33987,33989,33990,33991,33992,33995,33996,33998,33999,34002,34004,34005,34007,34008,34009,34010,34011,34012,34014,34017,34018,34020,34023,34024,34025,34026,34027,34029,34030,34031,34033,34034,34035,34036,34037,34038,34039,34040,34041,34042,34043,34045,34046,34048,34049,34050,20254,25955,26705,21971,20007,25620,39578,25195,23234,29791,33394,28073,26862,20711,33678,30722,26432,21049,27801,32433,20667,21861,29022,31579,26194,29642,33515,26441,23665,21024,29053,34923,38378,38485,25797,36193,33203,21892,27733,25159,32558,22674,20260,21830,36175,26188,19978,23578,35059,26786,25422,31245,28903,33421,21242,38902,23569,21736,37045,32461,22882,36170,34503,33292,33293,36198,25668,23556,24913,28041,31038,35774,30775,30003,21627,20280,36523,28145,23072,32453,31070,27784,23457,23158,29978,32958,24910,28183,22768,29983,29989,29298,21319,32499,34051,34052,34053,34054,34055,34056,34057,34058,34059,34061,34062,34063,34064,34066,34068,34069,34070,34072,34073,34075,34076,34077,34078,34080,34082,34083,34084,34085,34086,34087,34088,34089,34090,34093,34094,34095,34096,34097,34098,34099,34100,34101,34102,34110,34111,34112,34113,34114,34116,34117,34118,34119,34123,34124,34125,34126,34127,34128,34129,34130,34131,34132,34133,34135,34136,34138,34139,34140,34141,34143,34144,34145,34146,34147,34149,34150,34151,34153,34154,34155,34156,34157,34158,34159,34160,34161,34163,34165,34166,34167,34168,34172,34173,34175,34176,34177,30465,30427,21097,32988,22307,24072,22833,29422,26045,28287,35799,23608,34417,21313,30707,25342,26102,20160,39135,34432,23454,35782,21490,30690,20351,23630,39542,22987,24335,31034,22763,19990,26623,20107,25325,35475,36893,21183,26159,21980,22124,36866,20181,20365,37322,39280,27663,24066,24643,23460,35270,35797,25910,25163,39318,23432,23551,25480,21806,21463,30246,20861,34092,26530,26803,27530,25234,36755,21460,33298,28113,30095,20070,36174,23408,29087,34223,26257,26329,32626,34560,40653,40736,23646,26415,36848,26641,26463,25101,31446,22661,24246,25968,28465,34178,34179,34182,34184,34185,34186,34187,34188,34189,34190,34192,34193,34194,34195,34196,34197,34198,34199,34200,34201,34202,34205,34206,34207,34208,34209,34210,34211,34213,34214,34215,34217,34219,34220,34221,34225,34226,34227,34228,34229,34230,34232,34234,34235,34236,34237,34238,34239,34240,34242,34243,34244,34245,34246,34247,34248,34250,34251,34252,34253,34254,34257,34258,34260,34262,34263,34264,34265,34266,34267,34269,34270,34271,34272,34273,34274,34275,34277,34278,34279,34280,34282,34283,34284,34285,34286,34287,34288,34289,34290,34291,34292,34293,34294,34295,34296,24661,21047,32781,25684,34928,29993,24069,26643,25332,38684,21452,29245,35841,27700,30561,31246,21550,30636,39034,33308,35828,30805,26388,28865,26031,25749,22070,24605,31169,21496,19997,27515,32902,23546,21987,22235,20282,20284,39282,24051,26494,32824,24578,39042,36865,23435,35772,35829,25628,33368,25822,22013,33487,37221,20439,32032,36895,31903,20723,22609,28335,23487,35785,32899,37240,33948,31639,34429,38539,38543,32485,39635,30862,23681,31319,36930,38567,31071,23385,25439,31499,34001,26797,21766,32553,29712,32034,38145,25152,22604,20182,23427,22905,22612,34297,34298,34300,34301,34302,34304,34305,34306,34307,34308,34310,34311,34312,34313,34314,34315,34316,34317,34318,34319,34320,34322,34323,34324,34325,34327,34328,34329,34330,34331,34332,34333,34334,34335,34336,34337,34338,34339,34340,34341,34342,34344,34346,34347,34348,34349,34350,34351,34352,34353,34354,34355,34356,34357,34358,34359,34361,34362,34363,34365,34366,34367,34368,34369,34370,34371,34372,34373,34374,34375,34376,34377,34378,34379,34380,34386,34387,34389,34390,34391,34392,34393,34395,34396,34397,34399,34400,34401,34403,34404,34405,34406,34407,34408,34409,34410,29549,25374,36427,36367,32974,33492,25260,21488,27888,37214,22826,24577,27760,22349,25674,36138,30251,28393,22363,27264,30192,28525,35885,35848,22374,27631,34962,30899,25506,21497,28845,27748,22616,25642,22530,26848,33179,21776,31958,20504,36538,28108,36255,28907,25487,28059,28372,32486,33796,26691,36867,28120,38518,35752,22871,29305,34276,33150,30140,35466,26799,21076,36386,38161,25552,39064,36420,21884,20307,26367,22159,24789,28053,21059,23625,22825,28155,22635,3e4,29980,24684,33300,33094,25361,26465,36834,30522,36339,36148,38081,24086,21381,21548,28867,34413,34415,34416,34418,34419,34420,34421,34422,34423,34424,34435,34436,34437,34438,34439,34440,34441,34446,34447,34448,34449,34450,34452,34454,34455,34456,34457,34458,34459,34462,34463,34464,34465,34466,34469,34470,34475,34477,34478,34482,34483,34487,34488,34489,34491,34492,34493,34494,34495,34497,34498,34499,34501,34504,34508,34509,34514,34515,34517,34518,34519,34522,34524,34525,34528,34529,34530,34531,34533,34534,34535,34536,34538,34539,34540,34543,34549,34550,34551,34554,34555,34556,34557,34559,34561,34564,34565,34566,34571,34572,34574,34575,34576,34577,34580,34582,27712,24311,20572,20141,24237,25402,33351,36890,26704,37230,30643,21516,38108,24420,31461,26742,25413,31570,32479,30171,20599,25237,22836,36879,20984,31171,31361,22270,24466,36884,28034,23648,22303,21520,20820,28237,22242,25512,39059,33151,34581,35114,36864,21534,23663,33216,25302,25176,33073,40501,38464,39534,39548,26925,22949,25299,21822,25366,21703,34521,27964,23043,29926,34972,27498,22806,35916,24367,28286,29609,39037,20024,28919,23436,30871,25405,26202,30358,24779,23451,23113,19975,33109,27754,29579,20129,26505,32593,24448,26106,26395,24536,22916,23041,34585,34587,34589,34591,34592,34596,34598,34599,34600,34602,34603,34604,34605,34607,34608,34610,34611,34613,34614,34616,34617,34618,34620,34621,34624,34625,34626,34627,34628,34629,34630,34634,34635,34637,34639,34640,34641,34642,34644,34645,34646,34648,34650,34651,34652,34653,34654,34655,34657,34658,34662,34663,34664,34665,34666,34667,34668,34669,34671,34673,34674,34675,34677,34679,34680,34681,34682,34687,34688,34689,34692,34694,34695,34697,34698,34700,34702,34703,34704,34705,34706,34708,34709,34710,34712,34713,34714,34715,34716,34717,34718,34720,34721,34722,34723,34724,24013,24494,21361,38886,36829,26693,22260,21807,24799,20026,28493,32500,33479,33806,22996,20255,20266,23614,32428,26410,34074,21619,30031,32963,21890,39759,20301,28205,35859,23561,24944,21355,30239,28201,34442,25991,38395,32441,21563,31283,32010,38382,21985,32705,29934,25373,34583,28065,31389,25105,26017,21351,25569,27779,24043,21596,38056,20044,27745,35820,23627,26080,33436,26791,21566,21556,27595,27494,20116,25410,21320,33310,20237,20398,22366,25098,38654,26212,29289,21247,21153,24735,35823,26132,29081,26512,35199,30802,30717,26224,22075,21560,38177,29306,34725,34726,34727,34729,34730,34734,34736,34737,34738,34740,34742,34743,34744,34745,34747,34748,34750,34751,34753,34754,34755,34756,34757,34759,34760,34761,34764,34765,34766,34767,34768,34772,34773,34774,34775,34776,34777,34778,34780,34781,34782,34783,34785,34786,34787,34788,34790,34791,34792,34793,34795,34796,34797,34799,34800,34801,34802,34803,34804,34805,34806,34807,34808,34810,34811,34812,34813,34815,34816,34817,34818,34820,34821,34822,34823,34824,34825,34827,34828,34829,34830,34831,34832,34833,34834,34836,34839,34840,34841,34842,34844,34845,34846,34847,34848,34851,31232,24687,24076,24713,33181,22805,24796,29060,28911,28330,27728,29312,27268,34989,24109,20064,23219,21916,38115,27927,31995,38553,25103,32454,30606,34430,21283,38686,36758,26247,23777,20384,29421,19979,21414,22799,21523,25472,38184,20808,20185,40092,32420,21688,36132,34900,33335,38386,28046,24358,23244,26174,38505,29616,29486,21439,33146,39301,32673,23466,38519,38480,32447,30456,21410,38262,39321,31665,35140,28248,20065,32724,31077,35814,24819,21709,20139,39033,24055,27233,20687,21521,35937,33831,30813,38660,21066,21742,22179,38144,28040,23477,28102,26195,34852,34853,34854,34855,34856,34857,34858,34859,34860,34861,34862,34863,34864,34865,34867,34868,34869,34870,34871,34872,34874,34875,34877,34878,34879,34881,34882,34883,34886,34887,34888,34889,34890,34891,34894,34895,34896,34897,34898,34899,34901,34902,34904,34906,34907,34908,34909,34910,34911,34912,34918,34919,34922,34925,34927,34929,34931,34932,34933,34934,34936,34937,34938,34939,34940,34944,34947,34950,34951,34953,34954,34956,34958,34959,34960,34961,34963,34964,34965,34967,34968,34969,34970,34971,34973,34974,34975,34976,34977,34979,34981,34982,34983,34984,34985,34986,23567,23389,26657,32918,21880,31505,25928,26964,20123,27463,34638,38795,21327,25375,25658,37034,26012,32961,35856,20889,26800,21368,34809,25032,27844,27899,35874,23633,34218,33455,38156,27427,36763,26032,24571,24515,20449,34885,26143,33125,29481,24826,20852,21009,22411,24418,37026,34892,37266,24184,26447,24615,22995,20804,20982,33016,21256,27769,38596,29066,20241,20462,32670,26429,21957,38152,31168,34966,32483,22687,25100,38656,34394,22040,39035,24464,35768,33988,37207,21465,26093,24207,30044,24676,32110,23167,32490,32493,36713,21927,23459,24748,26059,29572,34988,34990,34991,34992,34994,34995,34996,34997,34998,35e3,35001,35002,35003,35005,35006,35007,35008,35011,35012,35015,35016,35018,35019,35020,35021,35023,35024,35025,35027,35030,35031,35034,35035,35036,35037,35038,35040,35041,35046,35047,35049,35050,35051,35052,35053,35054,35055,35058,35061,35062,35063,35066,35067,35069,35071,35072,35073,35075,35076,35077,35078,35079,35080,35081,35083,35084,35085,35086,35087,35089,35092,35093,35094,35095,35096,35100,35101,35102,35103,35104,35106,35107,35108,35110,35111,35112,35113,35116,35117,35118,35119,35121,35122,35123,35125,35127,36873,30307,30505,32474,38772,34203,23398,31348,38634,34880,21195,29071,24490,26092,35810,23547,39535,24033,27529,27739,35757,35759,36874,36805,21387,25276,40486,40493,21568,20011,33469,29273,34460,23830,34905,28079,38597,21713,20122,35766,28937,21693,38409,28895,28153,30416,20005,30740,34578,23721,24310,35328,39068,38414,28814,27839,22852,25513,30524,34893,28436,33395,22576,29141,21388,30746,38593,21761,24422,28976,23476,35866,39564,27523,22830,40495,31207,26472,25196,20335,30113,32650,27915,38451,27687,20208,30162,20859,26679,28478,36992,33136,22934,29814,35128,35129,35130,35131,35132,35133,35134,35135,35136,35138,35139,35141,35142,35143,35144,35145,35146,35147,35148,35149,35150,35151,35152,35153,35154,35155,35156,35157,35158,35159,35160,35161,35162,35163,35164,35165,35168,35169,35170,35171,35172,35173,35175,35176,35177,35178,35179,35180,35181,35182,35183,35184,35185,35186,35187,35188,35189,35190,35191,35192,35193,35194,35196,35197,35198,35200,35202,35204,35205,35207,35208,35209,35210,35211,35212,35213,35214,35215,35216,35217,35218,35219,35220,35221,35222,35223,35224,35225,35226,35227,35228,35229,35230,35231,35232,35233,25671,23591,36965,31377,35875,23002,21676,33280,33647,35201,32768,26928,22094,32822,29239,37326,20918,20063,39029,25494,19994,21494,26355,33099,22812,28082,19968,22777,21307,25558,38129,20381,20234,34915,39056,22839,36951,31227,20202,33008,30097,27778,23452,23016,24413,26885,34433,20506,24050,20057,30691,20197,33402,25233,26131,37009,23673,20159,24441,33222,36920,32900,30123,20134,35028,24847,27589,24518,20041,30410,28322,35811,35758,35850,35793,24322,32764,32716,32462,33589,33643,22240,27575,38899,38452,23035,21535,38134,28139,23493,39278,23609,24341,38544,35234,35235,35236,35237,35238,35239,35240,35241,35242,35243,35244,35245,35246,35247,35248,35249,35250,35251,35252,35253,35254,35255,35256,35257,35258,35259,35260,35261,35262,35263,35264,35267,35277,35283,35284,35285,35287,35288,35289,35291,35293,35295,35296,35297,35298,35300,35303,35304,35305,35306,35308,35309,35310,35312,35313,35314,35316,35317,35318,35319,35320,35321,35322,35323,35324,35325,35326,35327,35329,35330,35331,35332,35333,35334,35336,35337,35338,35339,35340,35341,35342,35343,35344,35345,35346,35347,35348,35349,35350,35351,35352,35353,35354,35355,35356,35357,21360,33521,27185,23156,40560,24212,32552,33721,33828,33829,33639,34631,36814,36194,30408,24433,39062,30828,26144,21727,25317,20323,33219,30152,24248,38605,36362,34553,21647,27891,28044,27704,24703,21191,29992,24189,20248,24736,24551,23588,30001,37038,38080,29369,27833,28216,37193,26377,21451,21491,20305,37321,35825,21448,24188,36802,28132,20110,30402,27014,34398,24858,33286,20313,20446,36926,40060,24841,28189,28180,38533,20104,23089,38632,19982,23679,31161,23431,35821,32701,29577,22495,33419,37057,21505,36935,21947,23786,24481,24840,27442,29425,32946,35465,35358,35359,35360,35361,35362,35363,35364,35365,35366,35367,35368,35369,35370,35371,35372,35373,35374,35375,35376,35377,35378,35379,35380,35381,35382,35383,35384,35385,35386,35387,35388,35389,35391,35392,35393,35394,35395,35396,35397,35398,35399,35401,35402,35403,35404,35405,35406,35407,35408,35409,35410,35411,35412,35413,35414,35415,35416,35417,35418,35419,35420,35421,35422,35423,35424,35425,35426,35427,35428,35429,35430,35431,35432,35433,35434,35435,35436,35437,35438,35439,35440,35441,35442,35443,35444,35445,35446,35447,35448,35450,35451,35452,35453,35454,35455,35456,28020,23507,35029,39044,35947,39533,40499,28170,20900,20803,22435,34945,21407,25588,36757,22253,21592,22278,29503,28304,32536,36828,33489,24895,24616,38498,26352,32422,36234,36291,38053,23731,31908,26376,24742,38405,32792,20113,37095,21248,38504,20801,36816,34164,37213,26197,38901,23381,21277,30776,26434,26685,21705,28798,23472,36733,20877,22312,21681,25874,26242,36190,36163,33039,33900,36973,31967,20991,34299,26531,26089,28577,34468,36481,22122,36896,30338,28790,29157,36131,25321,21017,27901,36156,24590,22686,24974,26366,36192,25166,21939,28195,26413,36711,35457,35458,35459,35460,35461,35462,35463,35464,35467,35468,35469,35470,35471,35472,35473,35474,35476,35477,35478,35479,35480,35481,35482,35483,35484,35485,35486,35487,35488,35489,35490,35491,35492,35493,35494,35495,35496,35497,35498,35499,35500,35501,35502,35503,35504,35505,35506,35507,35508,35509,35510,35511,35512,35513,35514,35515,35516,35517,35518,35519,35520,35521,35522,35523,35524,35525,35526,35527,35528,35529,35530,35531,35532,35533,35534,35535,35536,35537,35538,35539,35540,35541,35542,35543,35544,35545,35546,35547,35548,35549,35550,35551,35552,35553,35554,35555,38113,38392,30504,26629,27048,21643,20045,28856,35784,25688,25995,23429,31364,20538,23528,30651,27617,35449,31896,27838,30415,26025,36759,23853,23637,34360,26632,21344,25112,31449,28251,32509,27167,31456,24432,28467,24352,25484,28072,26454,19976,24080,36134,20183,32960,30260,38556,25307,26157,25214,27836,36213,29031,32617,20806,32903,21484,36974,25240,21746,34544,36761,32773,38167,34071,36825,27993,29645,26015,30495,29956,30759,33275,36126,38024,20390,26517,30137,35786,38663,25391,38215,38453,33976,25379,30529,24449,29424,20105,24596,25972,25327,27491,25919,35556,35557,35558,35559,35560,35561,35562,35563,35564,35565,35566,35567,35568,35569,35570,35571,35572,35573,35574,35575,35576,35577,35578,35579,35580,35581,35582,35583,35584,35585,35586,35587,35588,35589,35590,35592,35593,35594,35595,35596,35597,35598,35599,35600,35601,35602,35603,35604,35605,35606,35607,35608,35609,35610,35611,35612,35613,35614,35615,35616,35617,35618,35619,35620,35621,35623,35624,35625,35626,35627,35628,35629,35630,35631,35632,35633,35634,35635,35636,35637,35638,35639,35640,35641,35642,35643,35644,35645,35646,35647,35648,35649,35650,35651,35652,35653,24103,30151,37073,35777,33437,26525,25903,21553,34584,30693,32930,33026,27713,20043,32455,32844,30452,26893,27542,25191,20540,20356,22336,25351,27490,36286,21482,26088,32440,24535,25370,25527,33267,33268,32622,24092,23769,21046,26234,31209,31258,36136,28825,30164,28382,27835,31378,20013,30405,24544,38047,34935,32456,31181,32959,37325,20210,20247,33311,21608,24030,27954,35788,31909,36724,32920,24090,21650,30385,23449,26172,39588,29664,26666,34523,26417,29482,35832,35803,36880,31481,28891,29038,25284,30633,22065,20027,33879,26609,21161,34496,36142,38136,31569,35654,35655,35656,35657,35658,35659,35660,35661,35662,35663,35664,35665,35666,35667,35668,35669,35670,35671,35672,35673,35674,35675,35676,35677,35678,35679,35680,35681,35682,35683,35684,35685,35687,35688,35689,35690,35691,35693,35694,35695,35696,35697,35698,35699,35700,35701,35702,35703,35704,35705,35706,35707,35708,35709,35710,35711,35712,35713,35714,35715,35716,35717,35718,35719,35720,35721,35722,35723,35724,35725,35726,35727,35728,35729,35730,35731,35732,35733,35734,35735,35736,35737,35738,35739,35740,35741,35742,35743,35756,35761,35771,35783,35792,35818,35849,35870,20303,27880,31069,39547,25235,29226,25341,19987,30742,36716,25776,36186,31686,26729,24196,35013,22918,25758,22766,29366,26894,38181,36861,36184,22368,32512,35846,20934,25417,25305,21331,26700,29730,33537,37196,21828,30528,28796,27978,20857,21672,36164,23039,28363,28100,23388,32043,20180,31869,28371,23376,33258,28173,23383,39683,26837,36394,23447,32508,24635,32437,37049,36208,22863,25549,31199,36275,21330,26063,31062,35781,38459,32452,38075,32386,22068,37257,26368,32618,23562,36981,26152,24038,20304,26590,20570,20316,22352,24231,59408,59409,59410,59411,59412,35896,35897,35898,35899,35900,35901,35902,35903,35904,35906,35907,35908,35909,35912,35914,35915,35917,35918,35919,35920,35921,35922,35923,35924,35926,35927,35928,35929,35931,35932,35933,35934,35935,35936,35939,35940,35941,35942,35943,35944,35945,35948,35949,35950,35951,35952,35953,35954,35956,35957,35958,35959,35963,35964,35965,35966,35967,35968,35969,35971,35972,35974,35975,35976,35979,35981,35982,35983,35984,35985,35986,35987,35989,35990,35991,35993,35994,35995,35996,35997,35998,35999,36e3,36001,36002,36003,36004,36005,36006,36007,36008,36009,36010,36011,36012,36013,20109,19980,20800,19984,24319,21317,19989,20120,19998,39730,23404,22121,20008,31162,20031,21269,20039,22829,29243,21358,27664,22239,32996,39319,27603,30590,40727,20022,20127,40720,20060,20073,20115,33416,23387,21868,22031,20164,21389,21405,21411,21413,21422,38757,36189,21274,21493,21286,21294,21310,36188,21350,21347,20994,21e3,21006,21037,21043,21055,21056,21068,21086,21089,21084,33967,21117,21122,21121,21136,21139,20866,32596,20155,20163,20169,20162,20200,20193,20203,20190,20251,20211,20258,20324,20213,20261,20263,20233,20267,20318,20327,25912,20314,20317,36014,36015,36016,36017,36018,36019,36020,36021,36022,36023,36024,36025,36026,36027,36028,36029,36030,36031,36032,36033,36034,36035,36036,36037,36038,36039,36040,36041,36042,36043,36044,36045,36046,36047,36048,36049,36050,36051,36052,36053,36054,36055,36056,36057,36058,36059,36060,36061,36062,36063,36064,36065,36066,36067,36068,36069,36070,36071,36072,36073,36074,36075,36076,36077,36078,36079,36080,36081,36082,36083,36084,36085,36086,36087,36088,36089,36090,36091,36092,36093,36094,36095,36096,36097,36098,36099,36100,36101,36102,36103,36104,36105,36106,36107,36108,36109,20319,20311,20274,20285,20342,20340,20369,20361,20355,20367,20350,20347,20394,20348,20396,20372,20454,20456,20458,20421,20442,20451,20444,20433,20447,20472,20521,20556,20467,20524,20495,20526,20525,20478,20508,20492,20517,20520,20606,20547,20565,20552,20558,20588,20603,20645,20647,20649,20666,20694,20742,20717,20716,20710,20718,20743,20747,20189,27709,20312,20325,20430,40864,27718,31860,20846,24061,40649,39320,20865,22804,21241,21261,35335,21264,20971,22809,20821,20128,20822,20147,34926,34980,20149,33044,35026,31104,23348,34819,32696,20907,20913,20925,20924,36110,36111,36112,36113,36114,36115,36116,36117,36118,36119,36120,36121,36122,36123,36124,36128,36177,36178,36183,36191,36197,36200,36201,36202,36204,36206,36207,36209,36210,36216,36217,36218,36219,36220,36221,36222,36223,36224,36226,36227,36230,36231,36232,36233,36236,36237,36238,36239,36240,36242,36243,36245,36246,36247,36248,36249,36250,36251,36252,36253,36254,36256,36257,36258,36260,36261,36262,36263,36264,36265,36266,36267,36268,36269,36270,36271,36272,36274,36278,36279,36281,36283,36285,36288,36289,36290,36293,36295,36296,36297,36298,36301,36304,36306,36307,36308,20935,20886,20898,20901,35744,35750,35751,35754,35764,35765,35767,35778,35779,35787,35791,35790,35794,35795,35796,35798,35800,35801,35804,35807,35808,35812,35816,35817,35822,35824,35827,35830,35833,35836,35839,35840,35842,35844,35847,35852,35855,35857,35858,35860,35861,35862,35865,35867,35864,35869,35871,35872,35873,35877,35879,35882,35883,35886,35887,35890,35891,35893,35894,21353,21370,38429,38434,38433,38449,38442,38461,38460,38466,38473,38484,38495,38503,38508,38514,38516,38536,38541,38551,38576,37015,37019,37021,37017,37036,37025,37044,37043,37046,37050,36309,36312,36313,36316,36320,36321,36322,36325,36326,36327,36329,36333,36334,36336,36337,36338,36340,36342,36348,36350,36351,36352,36353,36354,36355,36356,36358,36359,36360,36363,36365,36366,36368,36369,36370,36371,36373,36374,36375,36376,36377,36378,36379,36380,36384,36385,36388,36389,36390,36391,36392,36395,36397,36400,36402,36403,36404,36406,36407,36408,36411,36412,36414,36415,36419,36421,36422,36428,36429,36430,36431,36432,36435,36436,36437,36438,36439,36440,36442,36443,36444,36445,36446,36447,36448,36449,36450,36451,36452,36453,36455,36456,36458,36459,36462,36465,37048,37040,37071,37061,37054,37072,37060,37063,37075,37094,37090,37084,37079,37083,37099,37103,37118,37124,37154,37150,37155,37169,37167,37177,37187,37190,21005,22850,21154,21164,21165,21182,21759,21200,21206,21232,21471,29166,30669,24308,20981,20988,39727,21430,24321,30042,24047,22348,22441,22433,22654,22716,22725,22737,22313,22316,22314,22323,22329,22318,22319,22364,22331,22338,22377,22405,22379,22406,22396,22395,22376,22381,22390,22387,22445,22436,22412,22450,22479,22439,22452,22419,22432,22485,22488,22490,22489,22482,22456,22516,22511,22520,22500,22493,36467,36469,36471,36472,36473,36474,36475,36477,36478,36480,36482,36483,36484,36486,36488,36489,36490,36491,36492,36493,36494,36497,36498,36499,36501,36502,36503,36504,36505,36506,36507,36509,36511,36512,36513,36514,36515,36516,36517,36518,36519,36520,36521,36522,36525,36526,36528,36529,36531,36532,36533,36534,36535,36536,36537,36539,36540,36541,36542,36543,36544,36545,36546,36547,36548,36549,36550,36551,36552,36553,36554,36555,36556,36557,36559,36560,36561,36562,36563,36564,36565,36566,36567,36568,36569,36570,36571,36572,36573,36574,36575,36576,36577,36578,36579,36580,22539,22541,22525,22509,22528,22558,22553,22596,22560,22629,22636,22657,22665,22682,22656,39336,40729,25087,33401,33405,33407,33423,33418,33448,33412,33422,33425,33431,33433,33451,33464,33470,33456,33480,33482,33507,33432,33463,33454,33483,33484,33473,33449,33460,33441,33450,33439,33476,33486,33444,33505,33545,33527,33508,33551,33543,33500,33524,33490,33496,33548,33531,33491,33553,33562,33542,33556,33557,33504,33493,33564,33617,33627,33628,33544,33682,33596,33588,33585,33691,33630,33583,33615,33607,33603,33631,33600,33559,33632,33581,33594,33587,33638,33637,36581,36582,36583,36584,36585,36586,36587,36588,36589,36590,36591,36592,36593,36594,36595,36596,36597,36598,36599,36600,36601,36602,36603,36604,36605,36606,36607,36608,36609,36610,36611,36612,36613,36614,36615,36616,36617,36618,36619,36620,36621,36622,36623,36624,36625,36626,36627,36628,36629,36630,36631,36632,36633,36634,36635,36636,36637,36638,36639,36640,36641,36642,36643,36644,36645,36646,36647,36648,36649,36650,36651,36652,36653,36654,36655,36656,36657,36658,36659,36660,36661,36662,36663,36664,36665,36666,36667,36668,36669,36670,36671,36672,36673,36674,36675,36676,33640,33563,33641,33644,33642,33645,33646,33712,33656,33715,33716,33696,33706,33683,33692,33669,33660,33718,33705,33661,33720,33659,33688,33694,33704,33722,33724,33729,33793,33765,33752,22535,33816,33803,33757,33789,33750,33820,33848,33809,33798,33748,33759,33807,33795,33784,33785,33770,33733,33728,33830,33776,33761,33884,33873,33882,33881,33907,33927,33928,33914,33929,33912,33852,33862,33897,33910,33932,33934,33841,33901,33985,33997,34e3,34022,33981,34003,33994,33983,33978,34016,33953,33977,33972,33943,34021,34019,34060,29965,34104,34032,34105,34079,34106,36677,36678,36679,36680,36681,36682,36683,36684,36685,36686,36687,36688,36689,36690,36691,36692,36693,36694,36695,36696,36697,36698,36699,36700,36701,36702,36703,36704,36705,36706,36707,36708,36709,36714,36736,36748,36754,36765,36768,36769,36770,36772,36773,36774,36775,36778,36780,36781,36782,36783,36786,36787,36788,36789,36791,36792,36794,36795,36796,36799,36800,36803,36806,36809,36810,36811,36812,36813,36815,36818,36822,36823,36826,36832,36833,36835,36839,36844,36847,36849,36850,36852,36853,36854,36858,36859,36860,36862,36863,36871,36872,36876,36878,36883,36885,36888,34134,34107,34047,34044,34137,34120,34152,34148,34142,34170,30626,34115,34162,34171,34212,34216,34183,34191,34169,34222,34204,34181,34233,34231,34224,34259,34241,34268,34303,34343,34309,34345,34326,34364,24318,24328,22844,22849,32823,22869,22874,22872,21263,23586,23589,23596,23604,25164,25194,25247,25275,25290,25306,25303,25326,25378,25334,25401,25419,25411,25517,25590,25457,25466,25486,25524,25453,25516,25482,25449,25518,25532,25586,25592,25568,25599,25540,25566,25550,25682,25542,25534,25669,25665,25611,25627,25632,25612,25638,25633,25694,25732,25709,25750,36889,36892,36899,36900,36901,36903,36904,36905,36906,36907,36908,36912,36913,36914,36915,36916,36919,36921,36922,36925,36927,36928,36931,36933,36934,36936,36937,36938,36939,36940,36942,36948,36949,36950,36953,36954,36956,36957,36958,36959,36960,36961,36964,36966,36967,36969,36970,36971,36972,36975,36976,36977,36978,36979,36982,36983,36984,36985,36986,36987,36988,36990,36993,36996,36997,36998,36999,37001,37002,37004,37005,37006,37007,37008,37010,37012,37014,37016,37018,37020,37022,37023,37024,37028,37029,37031,37032,37033,37035,37037,37042,37047,37052,37053,37055,37056,25722,25783,25784,25753,25786,25792,25808,25815,25828,25826,25865,25893,25902,24331,24530,29977,24337,21343,21489,21501,21481,21480,21499,21522,21526,21510,21579,21586,21587,21588,21590,21571,21537,21591,21593,21539,21554,21634,21652,21623,21617,21604,21658,21659,21636,21622,21606,21661,21712,21677,21698,21684,21714,21671,21670,21715,21716,21618,21667,21717,21691,21695,21708,21721,21722,21724,21673,21674,21668,21725,21711,21726,21787,21735,21792,21757,21780,21747,21794,21795,21775,21777,21799,21802,21863,21903,21941,21833,21869,21825,21845,21823,21840,21820,37058,37059,37062,37064,37065,37067,37068,37069,37074,37076,37077,37078,37080,37081,37082,37086,37087,37088,37091,37092,37093,37097,37098,37100,37102,37104,37105,37106,37107,37109,37110,37111,37113,37114,37115,37116,37119,37120,37121,37123,37125,37126,37127,37128,37129,37130,37131,37132,37133,37134,37135,37136,37137,37138,37139,37140,37141,37142,37143,37144,37146,37147,37148,37149,37151,37152,37153,37156,37157,37158,37159,37160,37161,37162,37163,37164,37165,37166,37168,37170,37171,37172,37173,37174,37175,37176,37178,37179,37180,37181,37182,37183,37184,37185,37186,37188,21815,21846,21877,21878,21879,21811,21808,21852,21899,21970,21891,21937,21945,21896,21889,21919,21886,21974,21905,21883,21983,21949,21950,21908,21913,21994,22007,21961,22047,21969,21995,21996,21972,21990,21981,21956,21999,21989,22002,22003,21964,21965,21992,22005,21988,36756,22046,22024,22028,22017,22052,22051,22014,22016,22055,22061,22104,22073,22103,22060,22093,22114,22105,22108,22092,22100,22150,22116,22129,22123,22139,22140,22149,22163,22191,22228,22231,22237,22241,22261,22251,22265,22271,22276,22282,22281,22300,24079,24089,24084,24081,24113,24123,24124,37189,37191,37192,37201,37203,37204,37205,37206,37208,37209,37211,37212,37215,37216,37222,37223,37224,37227,37229,37235,37242,37243,37244,37248,37249,37250,37251,37252,37254,37256,37258,37262,37263,37267,37268,37269,37270,37271,37272,37273,37276,37277,37278,37279,37280,37281,37284,37285,37286,37287,37288,37289,37291,37292,37296,37297,37298,37299,37302,37303,37304,37305,37307,37308,37309,37310,37311,37312,37313,37314,37315,37316,37317,37318,37320,37323,37328,37330,37331,37332,37333,37334,37335,37336,37337,37338,37339,37341,37342,37343,37344,37345,37346,37347,37348,37349,24119,24132,24148,24155,24158,24161,23692,23674,23693,23696,23702,23688,23704,23705,23697,23706,23708,23733,23714,23741,23724,23723,23729,23715,23745,23735,23748,23762,23780,23755,23781,23810,23811,23847,23846,23854,23844,23838,23814,23835,23896,23870,23860,23869,23916,23899,23919,23901,23915,23883,23882,23913,23924,23938,23961,23965,35955,23991,24005,24435,24439,24450,24455,24457,24460,24469,24473,24476,24488,24493,24501,24508,34914,24417,29357,29360,29364,29367,29368,29379,29377,29390,29389,29394,29416,29423,29417,29426,29428,29431,29441,29427,29443,29434,37350,37351,37352,37353,37354,37355,37356,37357,37358,37359,37360,37361,37362,37363,37364,37365,37366,37367,37368,37369,37370,37371,37372,37373,37374,37375,37376,37377,37378,37379,37380,37381,37382,37383,37384,37385,37386,37387,37388,37389,37390,37391,37392,37393,37394,37395,37396,37397,37398,37399,37400,37401,37402,37403,37404,37405,37406,37407,37408,37409,37410,37411,37412,37413,37414,37415,37416,37417,37418,37419,37420,37421,37422,37423,37424,37425,37426,37427,37428,37429,37430,37431,37432,37433,37434,37435,37436,37437,37438,37439,37440,37441,37442,37443,37444,37445,29435,29463,29459,29473,29450,29470,29469,29461,29474,29497,29477,29484,29496,29489,29520,29517,29527,29536,29548,29551,29566,33307,22821,39143,22820,22786,39267,39271,39272,39273,39274,39275,39276,39284,39287,39293,39296,39300,39303,39306,39309,39312,39313,39315,39316,39317,24192,24209,24203,24214,24229,24224,24249,24245,24254,24243,36179,24274,24273,24283,24296,24298,33210,24516,24521,24534,24527,24579,24558,24580,24545,24548,24574,24581,24582,24554,24557,24568,24601,24629,24614,24603,24591,24589,24617,24619,24586,24639,24609,24696,24697,24699,24698,24642,37446,37447,37448,37449,37450,37451,37452,37453,37454,37455,37456,37457,37458,37459,37460,37461,37462,37463,37464,37465,37466,37467,37468,37469,37470,37471,37472,37473,37474,37475,37476,37477,37478,37479,37480,37481,37482,37483,37484,37485,37486,37487,37488,37489,37490,37491,37493,37494,37495,37496,37497,37498,37499,37500,37501,37502,37503,37504,37505,37506,37507,37508,37509,37510,37511,37512,37513,37514,37515,37516,37517,37519,37520,37521,37522,37523,37524,37525,37526,37527,37528,37529,37530,37531,37532,37533,37534,37535,37536,37537,37538,37539,37540,37541,37542,37543,24682,24701,24726,24730,24749,24733,24707,24722,24716,24731,24812,24763,24753,24797,24792,24774,24794,24756,24864,24870,24853,24867,24820,24832,24846,24875,24906,24949,25004,24980,24999,25015,25044,25077,24541,38579,38377,38379,38385,38387,38389,38390,38396,38398,38403,38404,38406,38408,38410,38411,38412,38413,38415,38418,38421,38422,38423,38425,38426,20012,29247,25109,27701,27732,27740,27722,27811,27781,27792,27796,27788,27752,27753,27764,27766,27782,27817,27856,27860,27821,27895,27896,27889,27863,27826,27872,27862,27898,27883,27886,27825,27859,27887,27902,37544,37545,37546,37547,37548,37549,37551,37552,37553,37554,37555,37556,37557,37558,37559,37560,37561,37562,37563,37564,37565,37566,37567,37568,37569,37570,37571,37572,37573,37574,37575,37577,37578,37579,37580,37581,37582,37583,37584,37585,37586,37587,37588,37589,37590,37591,37592,37593,37594,37595,37596,37597,37598,37599,37600,37601,37602,37603,37604,37605,37606,37607,37608,37609,37610,37611,37612,37613,37614,37615,37616,37617,37618,37619,37620,37621,37622,37623,37624,37625,37626,37627,37628,37629,37630,37631,37632,37633,37634,37635,37636,37637,37638,37639,37640,37641,27961,27943,27916,27971,27976,27911,27908,27929,27918,27947,27981,27950,27957,27930,27983,27986,27988,27955,28049,28015,28062,28064,27998,28051,28052,27996,28e3,28028,28003,28186,28103,28101,28126,28174,28095,28128,28177,28134,28125,28121,28182,28075,28172,28078,28203,28270,28238,28267,28338,28255,28294,28243,28244,28210,28197,28228,28383,28337,28312,28384,28461,28386,28325,28327,28349,28347,28343,28375,28340,28367,28303,28354,28319,28514,28486,28487,28452,28437,28409,28463,28470,28491,28532,28458,28425,28457,28553,28557,28556,28536,28530,28540,28538,28625,37642,37643,37644,37645,37646,37647,37648,37649,37650,37651,37652,37653,37654,37655,37656,37657,37658,37659,37660,37661,37662,37663,37664,37665,37666,37667,37668,37669,37670,37671,37672,37673,37674,37675,37676,37677,37678,37679,37680,37681,37682,37683,37684,37685,37686,37687,37688,37689,37690,37691,37692,37693,37695,37696,37697,37698,37699,37700,37701,37702,37703,37704,37705,37706,37707,37708,37709,37710,37711,37712,37713,37714,37715,37716,37717,37718,37719,37720,37721,37722,37723,37724,37725,37726,37727,37728,37729,37730,37731,37732,37733,37734,37735,37736,37737,37739,28617,28583,28601,28598,28610,28641,28654,28638,28640,28655,28698,28707,28699,28729,28725,28751,28766,23424,23428,23445,23443,23461,23480,29999,39582,25652,23524,23534,35120,23536,36423,35591,36790,36819,36821,36837,36846,36836,36841,36838,36851,36840,36869,36868,36875,36902,36881,36877,36886,36897,36917,36918,36909,36911,36932,36945,36946,36944,36968,36952,36962,36955,26297,36980,36989,36994,37e3,36995,37003,24400,24407,24406,24408,23611,21675,23632,23641,23409,23651,23654,32700,24362,24361,24365,33396,24380,39739,23662,22913,22915,22925,22953,22954,22947,37740,37741,37742,37743,37744,37745,37746,37747,37748,37749,37750,37751,37752,37753,37754,37755,37756,37757,37758,37759,37760,37761,37762,37763,37764,37765,37766,37767,37768,37769,37770,37771,37772,37773,37774,37776,37777,37778,37779,37780,37781,37782,37783,37784,37785,37786,37787,37788,37789,37790,37791,37792,37793,37794,37795,37796,37797,37798,37799,37800,37801,37802,37803,37804,37805,37806,37807,37808,37809,37810,37811,37812,37813,37814,37815,37816,37817,37818,37819,37820,37821,37822,37823,37824,37825,37826,37827,37828,37829,37830,37831,37832,37833,37835,37836,37837,22935,22986,22955,22942,22948,22994,22962,22959,22999,22974,23045,23046,23005,23048,23011,23e3,23033,23052,23049,23090,23092,23057,23075,23059,23104,23143,23114,23125,23100,23138,23157,33004,23210,23195,23159,23162,23230,23275,23218,23250,23252,23224,23264,23267,23281,23254,23270,23256,23260,23305,23319,23318,23346,23351,23360,23573,23580,23386,23397,23411,23377,23379,23394,39541,39543,39544,39546,39551,39549,39552,39553,39557,39560,39562,39568,39570,39571,39574,39576,39579,39580,39581,39583,39584,39586,39587,39589,39591,32415,32417,32419,32421,32424,32425,37838,37839,37840,37841,37842,37843,37844,37845,37847,37848,37849,37850,37851,37852,37853,37854,37855,37856,37857,37858,37859,37860,37861,37862,37863,37864,37865,37866,37867,37868,37869,37870,37871,37872,37873,37874,37875,37876,37877,37878,37879,37880,37881,37882,37883,37884,37885,37886,37887,37888,37889,37890,37891,37892,37893,37894,37895,37896,37897,37898,37899,37900,37901,37902,37903,37904,37905,37906,37907,37908,37909,37910,37911,37912,37913,37914,37915,37916,37917,37918,37919,37920,37921,37922,37923,37924,37925,37926,37927,37928,37929,37930,37931,37932,37933,37934,32429,32432,32446,32448,32449,32450,32457,32459,32460,32464,32468,32471,32475,32480,32481,32488,32491,32494,32495,32497,32498,32525,32502,32506,32507,32510,32513,32514,32515,32519,32520,32523,32524,32527,32529,32530,32535,32537,32540,32539,32543,32545,32546,32547,32548,32549,32550,32551,32554,32555,32556,32557,32559,32560,32561,32562,32563,32565,24186,30079,24027,30014,37013,29582,29585,29614,29602,29599,29647,29634,29649,29623,29619,29632,29641,29640,29669,29657,39036,29706,29673,29671,29662,29626,29682,29711,29738,29787,29734,29733,29736,29744,29742,29740,37935,37936,37937,37938,37939,37940,37941,37942,37943,37944,37945,37946,37947,37948,37949,37951,37952,37953,37954,37955,37956,37957,37958,37959,37960,37961,37962,37963,37964,37965,37966,37967,37968,37969,37970,37971,37972,37973,37974,37975,37976,37977,37978,37979,37980,37981,37982,37983,37984,37985,37986,37987,37988,37989,37990,37991,37992,37993,37994,37996,37997,37998,37999,38e3,38001,38002,38003,38004,38005,38006,38007,38008,38009,38010,38011,38012,38013,38014,38015,38016,38017,38018,38019,38020,38033,38038,38040,38087,38095,38099,38100,38106,38118,38139,38172,38176,29723,29722,29761,29788,29783,29781,29785,29815,29805,29822,29852,29838,29824,29825,29831,29835,29854,29864,29865,29840,29863,29906,29882,38890,38891,38892,26444,26451,26462,26440,26473,26533,26503,26474,26483,26520,26535,26485,26536,26526,26541,26507,26487,26492,26608,26633,26584,26634,26601,26544,26636,26585,26549,26586,26547,26589,26624,26563,26552,26594,26638,26561,26621,26674,26675,26720,26721,26702,26722,26692,26724,26755,26653,26709,26726,26689,26727,26688,26686,26698,26697,26665,26805,26767,26740,26743,26771,26731,26818,26990,26876,26911,26912,26873,38183,38195,38205,38211,38216,38219,38229,38234,38240,38254,38260,38261,38263,38264,38265,38266,38267,38268,38269,38270,38272,38273,38274,38275,38276,38277,38278,38279,38280,38281,38282,38283,38284,38285,38286,38287,38288,38289,38290,38291,38292,38293,38294,38295,38296,38297,38298,38299,38300,38301,38302,38303,38304,38305,38306,38307,38308,38309,38310,38311,38312,38313,38314,38315,38316,38317,38318,38319,38320,38321,38322,38323,38324,38325,38326,38327,38328,38329,38330,38331,38332,38333,38334,38335,38336,38337,38338,38339,38340,38341,38342,38343,38344,38345,38346,38347,26916,26864,26891,26881,26967,26851,26896,26993,26937,26976,26946,26973,27012,26987,27008,27032,27e3,26932,27084,27015,27016,27086,27017,26982,26979,27001,27035,27047,27067,27051,27053,27092,27057,27073,27082,27103,27029,27104,27021,27135,27183,27117,27159,27160,27237,27122,27204,27198,27296,27216,27227,27189,27278,27257,27197,27176,27224,27260,27281,27280,27305,27287,27307,29495,29522,27521,27522,27527,27524,27538,27539,27533,27546,27547,27553,27562,36715,36717,36721,36722,36723,36725,36726,36728,36727,36729,36730,36732,36734,36737,36738,36740,36743,36747,38348,38349,38350,38351,38352,38353,38354,38355,38356,38357,38358,38359,38360,38361,38362,38363,38364,38365,38366,38367,38368,38369,38370,38371,38372,38373,38374,38375,38380,38399,38407,38419,38424,38427,38430,38432,38435,38436,38437,38438,38439,38440,38441,38443,38444,38445,38447,38448,38455,38456,38457,38458,38462,38465,38467,38474,38478,38479,38481,38482,38483,38486,38487,38488,38489,38490,38492,38493,38494,38496,38499,38501,38502,38507,38509,38510,38511,38512,38513,38515,38520,38521,38522,38523,38524,38525,38526,38527,38528,38529,38530,38531,38532,38535,38537,38538,36749,36750,36751,36760,36762,36558,25099,25111,25115,25119,25122,25121,25125,25124,25132,33255,29935,29940,29951,29967,29969,29971,25908,26094,26095,26096,26122,26137,26482,26115,26133,26112,28805,26359,26141,26164,26161,26166,26165,32774,26207,26196,26177,26191,26198,26209,26199,26231,26244,26252,26279,26269,26302,26331,26332,26342,26345,36146,36147,36150,36155,36157,36160,36165,36166,36168,36169,36167,36173,36181,36185,35271,35274,35275,35276,35278,35279,35280,35281,29294,29343,29277,29286,29295,29310,29311,29316,29323,29325,29327,29330,25352,25394,25520,38540,38542,38545,38546,38547,38549,38550,38554,38555,38557,38558,38559,38560,38561,38562,38563,38564,38565,38566,38568,38569,38570,38571,38572,38573,38574,38575,38577,38578,38580,38581,38583,38584,38586,38587,38591,38594,38595,38600,38602,38603,38608,38609,38611,38612,38614,38615,38616,38617,38618,38619,38620,38621,38622,38623,38625,38626,38627,38628,38629,38630,38631,38635,38636,38637,38638,38640,38641,38642,38644,38645,38648,38650,38651,38652,38653,38655,38658,38659,38661,38666,38667,38668,38672,38673,38674,38676,38677,38679,38680,38681,38682,38683,38685,38687,38688,25663,25816,32772,27626,27635,27645,27637,27641,27653,27655,27654,27661,27669,27672,27673,27674,27681,27689,27684,27690,27698,25909,25941,25963,29261,29266,29270,29232,34402,21014,32927,32924,32915,32956,26378,32957,32945,32939,32941,32948,32951,32999,33e3,33001,33002,32987,32962,32964,32985,32973,32983,26384,32989,33003,33009,33012,33005,33037,33038,33010,33020,26389,33042,35930,33078,33054,33068,33048,33074,33096,33100,33107,33140,33113,33114,33137,33120,33129,33148,33149,33133,33127,22605,23221,33160,33154,33169,28373,33187,33194,33228,26406,33226,33211,38689,38690,38691,38692,38693,38694,38695,38696,38697,38699,38700,38702,38703,38705,38707,38708,38709,38710,38711,38714,38715,38716,38717,38719,38720,38721,38722,38723,38724,38725,38726,38727,38728,38729,38730,38731,38732,38733,38734,38735,38736,38737,38740,38741,38743,38744,38746,38748,38749,38751,38755,38756,38758,38759,38760,38762,38763,38764,38765,38766,38767,38768,38769,38770,38773,38775,38776,38777,38778,38779,38781,38782,38783,38784,38785,38786,38787,38788,38790,38791,38792,38793,38794,38796,38798,38799,38800,38803,38805,38806,38807,38809,38810,38811,38812,38813,33217,33190,27428,27447,27449,27459,27462,27481,39121,39122,39123,39125,39129,39130,27571,24384,27586,35315,26e3,40785,26003,26044,26054,26052,26051,26060,26062,26066,26070,28800,28828,28822,28829,28859,28864,28855,28843,28849,28904,28874,28944,28947,28950,28975,28977,29043,29020,29032,28997,29042,29002,29048,29050,29080,29107,29109,29096,29088,29152,29140,29159,29177,29213,29224,28780,28952,29030,29113,25150,25149,25155,25160,25161,31035,31040,31046,31049,31067,31068,31059,31066,31074,31063,31072,31087,31079,31098,31109,31114,31130,31143,31155,24529,24528,38814,38815,38817,38818,38820,38821,38822,38823,38824,38825,38826,38828,38830,38832,38833,38835,38837,38838,38839,38840,38841,38842,38843,38844,38845,38846,38847,38848,38849,38850,38851,38852,38853,38854,38855,38856,38857,38858,38859,38860,38861,38862,38863,38864,38865,38866,38867,38868,38869,38870,38871,38872,38873,38874,38875,38876,38877,38878,38879,38880,38881,38882,38883,38884,38885,38888,38894,38895,38896,38897,38898,38900,38903,38904,38905,38906,38907,38908,38909,38910,38911,38912,38913,38914,38915,38916,38917,38918,38919,38920,38921,38922,38923,38924,38925,38926,24636,24669,24666,24679,24641,24665,24675,24747,24838,24845,24925,25001,24989,25035,25041,25094,32896,32895,27795,27894,28156,30710,30712,30720,30729,30743,30744,30737,26027,30765,30748,30749,30777,30778,30779,30751,30780,30757,30764,30755,30761,30798,30829,30806,30807,30758,30800,30791,30796,30826,30875,30867,30874,30855,30876,30881,30883,30898,30905,30885,30932,30937,30921,30956,30962,30981,30964,30995,31012,31006,31028,40859,40697,40699,40700,30449,30468,30477,30457,30471,30472,30490,30498,30489,30509,30502,30517,30520,30544,30545,30535,30531,30554,30568,38927,38928,38929,38930,38931,38932,38933,38934,38935,38936,38937,38938,38939,38940,38941,38942,38943,38944,38945,38946,38947,38948,38949,38950,38951,38952,38953,38954,38955,38956,38957,38958,38959,38960,38961,38962,38963,38964,38965,38966,38967,38968,38969,38970,38971,38972,38973,38974,38975,38976,38977,38978,38979,38980,38981,38982,38983,38984,38985,38986,38987,38988,38989,38990,38991,38992,38993,38994,38995,38996,38997,38998,38999,39e3,39001,39002,39003,39004,39005,39006,39007,39008,39009,39010,39011,39012,39013,39014,39015,39016,39017,39018,39019,39020,39021,39022,30562,30565,30591,30605,30589,30592,30604,30609,30623,30624,30640,30645,30653,30010,30016,30030,30027,30024,30043,30066,30073,30083,32600,32609,32607,35400,32616,32628,32625,32633,32641,32638,30413,30437,34866,38021,38022,38023,38027,38026,38028,38029,38031,38032,38036,38039,38037,38042,38043,38044,38051,38052,38059,38058,38061,38060,38063,38064,38066,38068,38070,38071,38072,38073,38074,38076,38077,38079,38084,38088,38089,38090,38091,38092,38093,38094,38096,38097,38098,38101,38102,38103,38105,38104,38107,38110,38111,38112,38114,38116,38117,38119,38120,38122,39023,39024,39025,39026,39027,39028,39051,39054,39058,39061,39065,39075,39080,39081,39082,39083,39084,39085,39086,39087,39088,39089,39090,39091,39092,39093,39094,39095,39096,39097,39098,39099,39100,39101,39102,39103,39104,39105,39106,39107,39108,39109,39110,39111,39112,39113,39114,39115,39116,39117,39119,39120,39124,39126,39127,39131,39132,39133,39136,39137,39138,39139,39140,39141,39142,39145,39146,39147,39148,39149,39150,39151,39152,39153,39154,39155,39156,39157,39158,39159,39160,39161,39162,39163,39164,39165,39166,39167,39168,39169,39170,39171,39172,39173,39174,39175,38121,38123,38126,38127,38131,38132,38133,38135,38137,38140,38141,38143,38147,38146,38150,38151,38153,38154,38157,38158,38159,38162,38163,38164,38165,38166,38168,38171,38173,38174,38175,38178,38186,38187,38185,38188,38193,38194,38196,38198,38199,38200,38204,38206,38207,38210,38197,38212,38213,38214,38217,38220,38222,38223,38226,38227,38228,38230,38231,38232,38233,38235,38238,38239,38237,38241,38242,38244,38245,38246,38247,38248,38249,38250,38251,38252,38255,38257,38258,38259,38202,30695,30700,38601,31189,31213,31203,31211,31238,23879,31235,31234,31262,31252,39176,39177,39178,39179,39180,39182,39183,39185,39186,39187,39188,39189,39190,39191,39192,39193,39194,39195,39196,39197,39198,39199,39200,39201,39202,39203,39204,39205,39206,39207,39208,39209,39210,39211,39212,39213,39215,39216,39217,39218,39219,39220,39221,39222,39223,39224,39225,39226,39227,39228,39229,39230,39231,39232,39233,39234,39235,39236,39237,39238,39239,39240,39241,39242,39243,39244,39245,39246,39247,39248,39249,39250,39251,39254,39255,39256,39257,39258,39259,39260,39261,39262,39263,39264,39265,39266,39268,39270,39283,39288,39289,39291,39294,39298,39299,39305,31289,31287,31313,40655,39333,31344,30344,30350,30355,30361,30372,29918,29920,29996,40480,40482,40488,40489,40490,40491,40492,40498,40497,40502,40504,40503,40505,40506,40510,40513,40514,40516,40518,40519,40520,40521,40523,40524,40526,40529,40533,40535,40538,40539,40540,40542,40547,40550,40551,40552,40553,40554,40555,40556,40561,40557,40563,30098,30100,30102,30112,30109,30124,30115,30131,30132,30136,30148,30129,30128,30147,30146,30166,30157,30179,30184,30182,30180,30187,30183,30211,30193,30204,30207,30224,30208,30213,30220,30231,30218,30245,30232,30229,30233,39308,39310,39322,39323,39324,39325,39326,39327,39328,39329,39330,39331,39332,39334,39335,39337,39338,39339,39340,39341,39342,39343,39344,39345,39346,39347,39348,39349,39350,39351,39352,39353,39354,39355,39356,39357,39358,39359,39360,39361,39362,39363,39364,39365,39366,39367,39368,39369,39370,39371,39372,39373,39374,39375,39376,39377,39378,39379,39380,39381,39382,39383,39384,39385,39386,39387,39388,39389,39390,39391,39392,39393,39394,39395,39396,39397,39398,39399,39400,39401,39402,39403,39404,39405,39406,39407,39408,39409,39410,39411,39412,39413,39414,39415,39416,39417,30235,30268,30242,30240,30272,30253,30256,30271,30261,30275,30270,30259,30285,30302,30292,30300,30294,30315,30319,32714,31462,31352,31353,31360,31366,31368,31381,31398,31392,31404,31400,31405,31411,34916,34921,34930,34941,34943,34946,34978,35014,34999,35004,35017,35042,35022,35043,35045,35057,35098,35068,35048,35070,35056,35105,35097,35091,35099,35082,35124,35115,35126,35137,35174,35195,30091,32997,30386,30388,30684,32786,32788,32790,32796,32800,32802,32805,32806,32807,32809,32808,32817,32779,32821,32835,32838,32845,32850,32873,32881,35203,39032,39040,39043,39418,39419,39420,39421,39422,39423,39424,39425,39426,39427,39428,39429,39430,39431,39432,39433,39434,39435,39436,39437,39438,39439,39440,39441,39442,39443,39444,39445,39446,39447,39448,39449,39450,39451,39452,39453,39454,39455,39456,39457,39458,39459,39460,39461,39462,39463,39464,39465,39466,39467,39468,39469,39470,39471,39472,39473,39474,39475,39476,39477,39478,39479,39480,39481,39482,39483,39484,39485,39486,39487,39488,39489,39490,39491,39492,39493,39494,39495,39496,39497,39498,39499,39500,39501,39502,39503,39504,39505,39506,39507,39508,39509,39510,39511,39512,39513,39049,39052,39053,39055,39060,39066,39067,39070,39071,39073,39074,39077,39078,34381,34388,34412,34414,34431,34426,34428,34427,34472,34445,34443,34476,34461,34471,34467,34474,34451,34473,34486,34500,34485,34510,34480,34490,34481,34479,34505,34511,34484,34537,34545,34546,34541,34547,34512,34579,34526,34548,34527,34520,34513,34563,34567,34552,34568,34570,34573,34569,34595,34619,34590,34597,34606,34586,34622,34632,34612,34609,34601,34615,34623,34690,34594,34685,34686,34683,34656,34672,34636,34670,34699,34643,34659,34684,34660,34649,34661,34707,34735,34728,34770,39514,39515,39516,39517,39518,39519,39520,39521,39522,39523,39524,39525,39526,39527,39528,39529,39530,39531,39538,39555,39561,39565,39566,39572,39573,39577,39590,39593,39594,39595,39596,39597,39598,39599,39602,39603,39604,39605,39609,39611,39613,39614,39615,39619,39620,39622,39623,39624,39625,39626,39629,39630,39631,39632,39634,39636,39637,39638,39639,39641,39642,39643,39644,39645,39646,39648,39650,39651,39652,39653,39655,39656,39657,39658,39660,39662,39664,39665,39666,39667,39668,39669,39670,39671,39672,39674,39676,39677,39678,39679,39680,39681,39682,39684,39685,39686,34758,34696,34693,34733,34711,34691,34731,34789,34732,34741,34739,34763,34771,34749,34769,34752,34762,34779,34794,34784,34798,34838,34835,34814,34826,34843,34849,34873,34876,32566,32578,32580,32581,33296,31482,31485,31496,31491,31492,31509,31498,31531,31503,31559,31544,31530,31513,31534,31537,31520,31525,31524,31539,31550,31518,31576,31578,31557,31605,31564,31581,31584,31598,31611,31586,31602,31601,31632,31654,31655,31672,31660,31645,31656,31621,31658,31644,31650,31659,31668,31697,31681,31692,31709,31706,31717,31718,31722,31756,31742,31740,31759,31766,31755,39687,39689,39690,39691,39692,39693,39694,39696,39697,39698,39700,39701,39702,39703,39704,39705,39706,39707,39708,39709,39710,39712,39713,39714,39716,39717,39718,39719,39720,39721,39722,39723,39724,39725,39726,39728,39729,39731,39732,39733,39734,39735,39736,39737,39738,39741,39742,39743,39744,39750,39754,39755,39756,39758,39760,39762,39763,39765,39766,39767,39768,39769,39770,39771,39772,39773,39774,39775,39776,39777,39778,39779,39780,39781,39782,39783,39784,39785,39786,39787,39788,39789,39790,39791,39792,39793,39794,39795,39796,39797,39798,39799,39800,39801,39802,39803,31775,31786,31782,31800,31809,31808,33278,33281,33282,33284,33260,34884,33313,33314,33315,33325,33327,33320,33323,33336,33339,33331,33332,33342,33348,33353,33355,33359,33370,33375,33384,34942,34949,34952,35032,35039,35166,32669,32671,32679,32687,32688,32690,31868,25929,31889,31901,31900,31902,31906,31922,31932,31933,31937,31943,31948,31949,31944,31941,31959,31976,33390,26280,32703,32718,32725,32741,32737,32742,32745,32750,32755,31992,32119,32166,32174,32327,32411,40632,40628,36211,36228,36244,36241,36273,36199,36205,35911,35913,37194,37200,37198,37199,37220,39804,39805,39806,39807,39808,39809,39810,39811,39812,39813,39814,39815,39816,39817,39818,39819,39820,39821,39822,39823,39824,39825,39826,39827,39828,39829,39830,39831,39832,39833,39834,39835,39836,39837,39838,39839,39840,39841,39842,39843,39844,39845,39846,39847,39848,39849,39850,39851,39852,39853,39854,39855,39856,39857,39858,39859,39860,39861,39862,39863,39864,39865,39866,39867,39868,39869,39870,39871,39872,39873,39874,39875,39876,39877,39878,39879,39880,39881,39882,39883,39884,39885,39886,39887,39888,39889,39890,39891,39892,39893,39894,39895,39896,39897,39898,39899,37218,37217,37232,37225,37231,37245,37246,37234,37236,37241,37260,37253,37264,37261,37265,37282,37283,37290,37293,37294,37295,37301,37300,37306,35925,40574,36280,36331,36357,36441,36457,36277,36287,36284,36282,36292,36310,36311,36314,36318,36302,36303,36315,36294,36332,36343,36344,36323,36345,36347,36324,36361,36349,36372,36381,36383,36396,36398,36387,36399,36410,36416,36409,36405,36413,36401,36425,36417,36418,36433,36434,36426,36464,36470,36476,36463,36468,36485,36495,36500,36496,36508,36510,35960,35970,35978,35973,35992,35988,26011,35286,35294,35290,35292,39900,39901,39902,39903,39904,39905,39906,39907,39908,39909,39910,39911,39912,39913,39914,39915,39916,39917,39918,39919,39920,39921,39922,39923,39924,39925,39926,39927,39928,39929,39930,39931,39932,39933,39934,39935,39936,39937,39938,39939,39940,39941,39942,39943,39944,39945,39946,39947,39948,39949,39950,39951,39952,39953,39954,39955,39956,39957,39958,39959,39960,39961,39962,39963,39964,39965,39966,39967,39968,39969,39970,39971,39972,39973,39974,39975,39976,39977,39978,39979,39980,39981,39982,39983,39984,39985,39986,39987,39988,39989,39990,39991,39992,39993,39994,39995,35301,35307,35311,35390,35622,38739,38633,38643,38639,38662,38657,38664,38671,38670,38698,38701,38704,38718,40832,40835,40837,40838,40839,40840,40841,40842,40844,40702,40715,40717,38585,38588,38589,38606,38610,30655,38624,37518,37550,37576,37694,37738,37834,37775,37950,37995,40063,40066,40069,40070,40071,40072,31267,40075,40078,40080,40081,40082,40084,40085,40090,40091,40094,40095,40096,40097,40098,40099,40101,40102,40103,40104,40105,40107,40109,40110,40112,40113,40114,40115,40116,40117,40118,40119,40122,40123,40124,40125,40132,40133,40134,40135,40138,40139,39996,39997,39998,39999,4e4,40001,40002,40003,40004,40005,40006,40007,40008,40009,40010,40011,40012,40013,40014,40015,40016,40017,40018,40019,40020,40021,40022,40023,40024,40025,40026,40027,40028,40029,40030,40031,40032,40033,40034,40035,40036,40037,40038,40039,40040,40041,40042,40043,40044,40045,40046,40047,40048,40049,40050,40051,40052,40053,40054,40055,40056,40057,40058,40059,40061,40062,40064,40067,40068,40073,40074,40076,40079,40083,40086,40087,40088,40089,40093,40106,40108,40111,40121,40126,40127,40128,40129,40130,40136,40137,40145,40146,40154,40155,40160,40161,40140,40141,40142,40143,40144,40147,40148,40149,40151,40152,40153,40156,40157,40159,40162,38780,38789,38801,38802,38804,38831,38827,38819,38834,38836,39601,39600,39607,40536,39606,39610,39612,39617,39616,39621,39618,39627,39628,39633,39749,39747,39751,39753,39752,39757,39761,39144,39181,39214,39253,39252,39647,39649,39654,39663,39659,39675,39661,39673,39688,39695,39699,39711,39715,40637,40638,32315,40578,40583,40584,40587,40594,37846,40605,40607,40667,40668,40669,40672,40671,40674,40681,40679,40677,40682,40687,40738,40748,40751,40761,40759,40765,40766,40772,40163,40164,40165,40166,40167,40168,40169,40170,40171,40172,40173,40174,40175,40176,40177,40178,40179,40180,40181,40182,40183,40184,40185,40186,40187,40188,40189,40190,40191,40192,40193,40194,40195,40196,40197,40198,40199,40200,40201,40202,40203,40204,40205,40206,40207,40208,40209,40210,40211,40212,40213,40214,40215,40216,40217,40218,40219,40220,40221,40222,40223,40224,40225,40226,40227,40228,40229,40230,40231,40232,40233,40234,40235,40236,40237,40238,40239,40240,40241,40242,40243,40244,40245,40246,40247,40248,40249,40250,40251,40252,40253,40254,40255,40256,40257,40258,57908,57909,57910,57911,57912,57913,57914,57915,57916,57917,57918,57919,57920,57921,57922,57923,57924,57925,57926,57927,57928,57929,57930,57931,57932,57933,57934,57935,57936,57937,57938,57939,57940,57941,57942,57943,57944,57945,57946,57947,57948,57949,57950,57951,57952,57953,57954,57955,57956,57957,57958,57959,57960,57961,57962,57963,57964,57965,57966,57967,57968,57969,57970,57971,57972,57973,57974,57975,57976,57977,57978,57979,57980,57981,57982,57983,57984,57985,57986,57987,57988,57989,57990,57991,57992,57993,57994,57995,57996,57997,57998,57999,58e3,58001,40259,40260,40261,40262,40263,40264,40265,40266,40267,40268,40269,40270,40271,40272,40273,40274,40275,40276,40277,40278,40279,40280,40281,40282,40283,40284,40285,40286,40287,40288,40289,40290,40291,40292,40293,40294,40295,40296,40297,40298,40299,40300,40301,40302,40303,40304,40305,40306,40307,40308,40309,40310,40311,40312,40313,40314,40315,40316,40317,40318,40319,40320,40321,40322,40323,40324,40325,40326,40327,40328,40329,40330,40331,40332,40333,40334,40335,40336,40337,40338,40339,40340,40341,40342,40343,40344,40345,40346,40347,40348,40349,40350,40351,40352,40353,40354,58002,58003,58004,58005,58006,58007,58008,58009,58010,58011,58012,58013,58014,58015,58016,58017,58018,58019,58020,58021,58022,58023,58024,58025,58026,58027,58028,58029,58030,58031,58032,58033,58034,58035,58036,58037,58038,58039,58040,58041,58042,58043,58044,58045,58046,58047,58048,58049,58050,58051,58052,58053,58054,58055,58056,58057,58058,58059,58060,58061,58062,58063,58064,58065,58066,58067,58068,58069,58070,58071,58072,58073,58074,58075,58076,58077,58078,58079,58080,58081,58082,58083,58084,58085,58086,58087,58088,58089,58090,58091,58092,58093,58094,58095,40355,40356,40357,40358,40359,40360,40361,40362,40363,40364,40365,40366,40367,40368,40369,40370,40371,40372,40373,40374,40375,40376,40377,40378,40379,40380,40381,40382,40383,40384,40385,40386,40387,40388,40389,40390,40391,40392,40393,40394,40395,40396,40397,40398,40399,40400,40401,40402,40403,40404,40405,40406,40407,40408,40409,40410,40411,40412,40413,40414,40415,40416,40417,40418,40419,40420,40421,40422,40423,40424,40425,40426,40427,40428,40429,40430,40431,40432,40433,40434,40435,40436,40437,40438,40439,40440,40441,40442,40443,40444,40445,40446,40447,40448,40449,40450,58096,58097,58098,58099,58100,58101,58102,58103,58104,58105,58106,58107,58108,58109,58110,58111,58112,58113,58114,58115,58116,58117,58118,58119,58120,58121,58122,58123,58124,58125,58126,58127,58128,58129,58130,58131,58132,58133,58134,58135,58136,58137,58138,58139,58140,58141,58142,58143,58144,58145,58146,58147,58148,58149,58150,58151,58152,58153,58154,58155,58156,58157,58158,58159,58160,58161,58162,58163,58164,58165,58166,58167,58168,58169,58170,58171,58172,58173,58174,58175,58176,58177,58178,58179,58180,58181,58182,58183,58184,58185,58186,58187,58188,58189,40451,40452,40453,40454,40455,40456,40457,40458,40459,40460,40461,40462,40463,40464,40465,40466,40467,40468,40469,40470,40471,40472,40473,40474,40475,40476,40477,40478,40484,40487,40494,40496,40500,40507,40508,40512,40525,40528,40530,40531,40532,40534,40537,40541,40543,40544,40545,40546,40549,40558,40559,40562,40564,40565,40566,40567,40568,40569,40570,40571,40572,40573,40576,40577,40579,40580,40581,40582,40585,40586,40588,40589,40590,40591,40592,40593,40596,40597,40598,40599,40600,40601,40602,40603,40604,40606,40608,40609,40610,40611,40612,40613,40615,40616,40617,40618,58190,58191,58192,58193,58194,58195,58196,58197,58198,58199,58200,58201,58202,58203,58204,58205,58206,58207,58208,58209,58210,58211,58212,58213,58214,58215,58216,58217,58218,58219,58220,58221,58222,58223,58224,58225,58226,58227,58228,58229,58230,58231,58232,58233,58234,58235,58236,58237,58238,58239,58240,58241,58242,58243,58244,58245,58246,58247,58248,58249,58250,58251,58252,58253,58254,58255,58256,58257,58258,58259,58260,58261,58262,58263,58264,58265,58266,58267,58268,58269,58270,58271,58272,58273,58274,58275,58276,58277,58278,58279,58280,58281,58282,58283,40619,40620,40621,40622,40623,40624,40625,40626,40627,40629,40630,40631,40633,40634,40636,40639,40640,40641,40642,40643,40645,40646,40647,40648,40650,40651,40652,40656,40658,40659,40661,40662,40663,40665,40666,40670,40673,40675,40676,40678,40680,40683,40684,40685,40686,40688,40689,40690,40691,40692,40693,40694,40695,40696,40698,40701,40703,40704,40705,40706,40707,40708,40709,40710,40711,40712,40713,40714,40716,40719,40721,40722,40724,40725,40726,40728,40730,40731,40732,40733,40734,40735,40737,40739,40740,40741,40742,40743,40744,40745,40746,40747,40749,40750,40752,40753,58284,58285,58286,58287,58288,58289,58290,58291,58292,58293,58294,58295,58296,58297,58298,58299,58300,58301,58302,58303,58304,58305,58306,58307,58308,58309,58310,58311,58312,58313,58314,58315,58316,58317,58318,58319,58320,58321,58322,58323,58324,58325,58326,58327,58328,58329,58330,58331,58332,58333,58334,58335,58336,58337,58338,58339,58340,58341,58342,58343,58344,58345,58346,58347,58348,58349,58350,58351,58352,58353,58354,58355,58356,58357,58358,58359,58360,58361,58362,58363,58364,58365,58366,58367,58368,58369,58370,58371,58372,58373,58374,58375,58376,58377,40754,40755,40756,40757,40758,40760,40762,40764,40767,40768,40769,40770,40771,40773,40774,40775,40776,40777,40778,40779,40780,40781,40782,40783,40786,40787,40788,40789,40790,40791,40792,40793,40794,40795,40796,40797,40798,40799,40800,40801,40802,40803,40804,40805,40806,40807,40808,40809,40810,40811,40812,40813,40814,40815,40816,40817,40818,40819,40820,40821,40822,40823,40824,40825,40826,40827,40828,40829,40830,40833,40834,40845,40846,40847,40848,40849,40850,40851,40852,40853,40854,40855,40856,40860,40861,40862,40865,40866,40867,40868,40869,63788,63865,63893,63975,63985,58378,58379,58380,58381,58382,58383,58384,58385,58386,58387,58388,58389,58390,58391,58392,58393,58394,58395,58396,58397,58398,58399,58400,58401,58402,58403,58404,58405,58406,58407,58408,58409,58410,58411,58412,58413,58414,58415,58416,58417,58418,58419,58420,58421,58422,58423,58424,58425,58426,58427,58428,58429,58430,58431,58432,58433,58434,58435,58436,58437,58438,58439,58440,58441,58442,58443,58444,58445,58446,58447,58448,58449,58450,58451,58452,58453,58454,58455,58456,58457,58458,58459,58460,58461,58462,58463,58464,58465,58466,58467,58468,58469,58470,58471,64012,64013,64014,64015,64017,64019,64020,64024,64031,64032,64033,64035,64036,64039,64040,64041,11905,59414,59415,59416,11908,13427,13383,11912,11915,59422,13726,13850,13838,11916,11927,14702,14616,59430,14799,14815,14963,14800,59435,59436,15182,15470,15584,11943,59441,59442,11946,16470,16735,11950,17207,11955,11958,11959,59451,17329,17324,11963,17373,17622,18017,17996,59459,18211,18217,18300,18317,11978,18759,18810,18813,18818,18819,18821,18822,18847,18843,18871,18870,59476,59477,19619,19615,19616,19617,19575,19618,19731,19732,19733,19734,19735,19736,19737,19886,59492,58472,58473,58474,58475,58476,58477,58478,58479,58480,58481,58482,58483,58484,58485,58486,58487,58488,58489,58490,58491,58492,58493,58494,58495,58496,58497,58498,58499,58500,58501,58502,58503,58504,58505,58506,58507,58508,58509,58510,58511,58512,58513,58514,58515,58516,58517,58518,58519,58520,58521,58522,58523,58524,58525,58526,58527,58528,58529,58530,58531,58532,58533,58534,58535,58536,58537,58538,58539,58540,58541,58542,58543,58544,58545,58546,58547,58548,58549,58550,58551,58552,58553,58554,58555,58556,58557,58558,58559,58560,58561,58562,58563,58564,58565],"gb18030-ranges":[[0,128],[36,165],[38,169],[45,178],[50,184],[81,216],[89,226],[95,235],[96,238],[100,244],[103,248],[104,251],[105,253],[109,258],[126,276],[133,284],[148,300],[172,325],[175,329],[179,334],[208,364],[306,463],[307,465],[308,467],[309,469],[310,471],[311,473],[312,475],[313,477],[341,506],[428,594],[443,610],[544,712],[545,716],[558,730],[741,930],[742,938],[749,962],[750,970],[805,1026],[819,1104],[820,1106],[7922,8209],[7924,8215],[7925,8218],[7927,8222],[7934,8231],[7943,8241],[7944,8244],[7945,8246],[7950,8252],[8062,8365],[8148,8452],[8149,8454],[8152,8458],[8164,8471],[8174,8482],[8236,8556],[8240,8570],[8262,8596],[8264,8602],[8374,8713],[8380,8720],[8381,8722],[8384,8726],[8388,8731],[8390,8737],[8392,8740],[8393,8742],[8394,8748],[8396,8751],[8401,8760],[8406,8766],[8416,8777],[8419,8781],[8424,8787],[8437,8802],[8439,8808],[8445,8816],[8482,8854],[8485,8858],[8496,8870],[8521,8896],[8603,8979],[8936,9322],[8946,9372],[9046,9548],[9050,9588],[9063,9616],[9066,9622],[9076,9634],[9092,9652],[9100,9662],[9108,9672],[9111,9676],[9113,9680],[9131,9702],[9162,9735],[9164,9738],[9218,9793],[9219,9795],[11329,11906],[11331,11909],[11334,11913],[11336,11917],[11346,11928],[11361,11944],[11363,11947],[11366,11951],[11370,11956],[11372,11960],[11375,11964],[11389,11979],[11682,12284],[11686,12292],[11687,12312],[11692,12319],[11694,12330],[11714,12351],[11716,12436],[11723,12447],[11725,12535],[11730,12543],[11736,12586],[11982,12842],[11989,12850],[12102,12964],[12336,13200],[12348,13215],[12350,13218],[12384,13253],[12393,13263],[12395,13267],[12397,13270],[12510,13384],[12553,13428],[12851,13727],[12962,13839],[12973,13851],[13738,14617],[13823,14703],[13919,14801],[13933,14816],[14080,14964],[14298,15183],[14585,15471],[14698,15585],[15583,16471],[15847,16736],[16318,17208],[16434,17325],[16438,17330],[16481,17374],[16729,17623],[17102,17997],[17122,18018],[17315,18212],[17320,18218],[17402,18301],[17418,18318],[17859,18760],[17909,18811],[17911,18814],[17915,18820],[17916,18823],[17936,18844],[17939,18848],[17961,18872],[18664,19576],[18703,19620],[18814,19738],[18962,19887],[19043,40870],[33469,59244],[33470,59336],[33471,59367],[33484,59413],[33485,59417],[33490,59423],[33497,59431],[33501,59437],[33505,59443],[33513,59452],[33520,59460],[33536,59478],[33550,59493],[37845,63789],[37921,63866],[37948,63894],[38029,63976],[38038,63986],[38064,64016],[38065,64018],[38066,64021],[38069,64025],[38075,64034],[38076,64037],[38078,64042],[39108,65074],[39109,65093],[39113,65107],[39114,65112],[39115,65127],[39116,65132],[39265,65375],[39394,65510],[189e3,65536]],jis0208:[12288,12289,12290,65292,65294,12539,65306,65307,65311,65281,12443,12444,180,65344,168,65342,65507,65343,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,8213,8208,65295,65340,65374,8741,65372,8230,8229,8216,8217,8220,8221,65288,65289,12308,12309,65339,65341,65371,65373,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,65291,65293,177,215,247,65309,8800,65308,65310,8806,8807,8734,8756,9794,9792,176,8242,8243,8451,65509,65284,65504,65505,65285,65283,65286,65290,65312,167,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8251,12306,8594,8592,8593,8595,12307,null,null,null,null,null,null,null,null,null,null,null,8712,8715,8838,8839,8834,8835,8746,8745,null,null,null,null,null,null,null,null,8743,8744,65506,8658,8660,8704,8707,null,null,null,null,null,null,null,null,null,null,null,8736,8869,8978,8706,8711,8801,8786,8810,8811,8730,8765,8733,8757,8747,8748,null,null,null,null,null,null,null,8491,8240,9839,9837,9834,8224,8225,182,null,null,null,null,9711,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,null,null,null,null,null,null,null,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,null,null,null,null,null,null,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,null,null,null,null,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,9327,9328,9329,9330,9331,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,13129,13076,13090,13133,13080,13095,13059,13110,13137,13143,13069,13094,13091,13099,13130,13115,13212,13213,13214,13198,13199,13252,13217,null,null,null,null,null,null,null,null,13179,12317,12319,8470,13261,8481,12964,12965,12966,12967,12968,12849,12850,12857,13182,13181,13180,8786,8801,8747,8750,8721,8730,8869,8736,8735,8895,8757,8745,8746,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20124,21782,23043,38463,21696,24859,25384,23030,36898,33909,33564,31312,24746,25569,28197,26093,33894,33446,39925,26771,22311,26017,25201,23451,22992,34427,39156,32098,32190,39822,25110,31903,34999,23433,24245,25353,26263,26696,38343,38797,26447,20197,20234,20301,20381,20553,22258,22839,22996,23041,23561,24799,24847,24944,26131,26885,28858,30031,30064,31227,32173,32239,32963,33806,34915,35586,36949,36986,21307,20117,20133,22495,32946,37057,30959,19968,22769,28322,36920,31282,33576,33419,39983,20801,21360,21693,21729,22240,23035,24341,39154,28139,32996,34093,38498,38512,38560,38907,21515,21491,23431,28879,32701,36802,38632,21359,40284,31418,19985,30867,33276,28198,22040,21764,27421,34074,39995,23013,21417,28006,29916,38287,22082,20113,36939,38642,33615,39180,21473,21942,23344,24433,26144,26355,26628,27704,27891,27945,29787,30408,31310,38964,33521,34907,35424,37613,28082,30123,30410,39365,24742,35585,36234,38322,27022,21421,20870,22290,22576,22852,23476,24310,24616,25513,25588,27839,28436,28814,28948,29017,29141,29503,32257,33398,33489,34199,36960,37467,40219,22633,26044,27738,29989,20985,22830,22885,24448,24540,25276,26106,27178,27431,27572,29579,32705,35158,40236,40206,40644,23713,27798,33659,20740,23627,25014,33222,26742,29281,20057,20474,21368,24681,28201,31311,38899,19979,21270,20206,20309,20285,20385,20339,21152,21487,22025,22799,23233,23478,23521,31185,26247,26524,26550,27468,27827,28779,29634,31117,31166,31292,31623,33457,33499,33540,33655,33775,33747,34662,35506,22057,36008,36838,36942,38686,34442,20420,23784,25105,29273,30011,33253,33469,34558,36032,38597,39187,39381,20171,20250,35299,22238,22602,22730,24315,24555,24618,24724,24674,25040,25106,25296,25913,39745,26214,26800,28023,28784,30028,30342,32117,33445,34809,38283,38542,35997,20977,21182,22806,21683,23475,23830,24936,27010,28079,30861,33995,34903,35442,37799,39608,28012,39336,34521,22435,26623,34510,37390,21123,22151,21508,24275,25313,25785,26684,26680,27579,29554,30906,31339,35226,35282,36203,36611,37101,38307,38548,38761,23398,23731,27005,38989,38990,25499,31520,27179,27263,26806,39949,28511,21106,21917,24688,25324,27963,28167,28369,33883,35088,36676,19988,39993,21494,26907,27194,38788,26666,20828,31427,33970,37340,37772,22107,40232,26658,33541,33841,31909,21e3,33477,29926,20094,20355,20896,23506,21002,21208,21223,24059,21914,22570,23014,23436,23448,23515,24178,24185,24739,24863,24931,25022,25563,25954,26577,26707,26874,27454,27475,27735,28450,28567,28485,29872,29976,30435,30475,31487,31649,31777,32233,32566,32752,32925,33382,33694,35251,35532,36011,36996,37969,38291,38289,38306,38501,38867,39208,33304,20024,21547,23736,24012,29609,30284,30524,23721,32747,36107,38593,38929,38996,39e3,20225,20238,21361,21916,22120,22522,22855,23305,23492,23696,24076,24190,24524,25582,26426,26071,26082,26399,26827,26820,27231,24112,27589,27671,27773,30079,31048,23395,31232,32e3,24509,35215,35352,36020,36215,36556,36637,39138,39438,39740,20096,20605,20736,22931,23452,25135,25216,25836,27450,29344,30097,31047,32681,34811,35516,35696,25516,33738,38816,21513,21507,21931,26708,27224,35440,30759,26485,40653,21364,23458,33050,34384,36870,19992,20037,20167,20241,21450,21560,23470,24339,24613,25937,26429,27714,27762,27875,28792,29699,31350,31406,31496,32026,31998,32102,26087,29275,21435,23621,24040,25298,25312,25369,28192,34394,35377,36317,37624,28417,31142,39770,20136,20139,20140,20379,20384,20689,20807,31478,20849,20982,21332,21281,21375,21483,21932,22659,23777,24375,24394,24623,24656,24685,25375,25945,27211,27841,29378,29421,30703,33016,33029,33288,34126,37111,37857,38911,39255,39514,20208,20957,23597,26241,26989,23616,26354,26997,29577,26704,31873,20677,21220,22343,24062,37670,26020,27427,27453,29748,31105,31165,31563,32202,33465,33740,34943,35167,35641,36817,37329,21535,37504,20061,20534,21477,21306,29399,29590,30697,33510,36527,39366,39368,39378,20855,24858,34398,21936,31354,20598,23507,36935,38533,20018,27355,37351,23633,23624,25496,31391,27795,38772,36705,31402,29066,38536,31874,26647,32368,26705,37740,21234,21531,34219,35347,32676,36557,37089,21350,34952,31041,20418,20670,21009,20804,21843,22317,29674,22411,22865,24418,24452,24693,24950,24935,25001,25522,25658,25964,26223,26690,28179,30054,31293,31995,32076,32153,32331,32619,33550,33610,34509,35336,35427,35686,36605,38938,40335,33464,36814,39912,21127,25119,25731,28608,38553,26689,20625,27424,27770,28500,31348,32080,34880,35363,26376,20214,20537,20518,20581,20860,21048,21091,21927,22287,22533,23244,24314,25010,25080,25331,25458,26908,27177,29309,29356,29486,30740,30831,32121,30476,32937,35211,35609,36066,36562,36963,37749,38522,38997,39443,40568,20803,21407,21427,24187,24358,28187,28304,29572,29694,32067,33335,35328,35578,38480,20046,20491,21476,21628,22266,22993,23396,24049,24235,24359,25144,25925,26543,28246,29392,31946,34996,32929,32993,33776,34382,35463,36328,37431,38599,39015,40723,20116,20114,20237,21320,21577,21566,23087,24460,24481,24735,26791,27278,29786,30849,35486,35492,35703,37264,20062,39881,20132,20348,20399,20505,20502,20809,20844,21151,21177,21246,21402,21475,21521,21518,21897,22353,22434,22909,23380,23389,23439,24037,24039,24055,24184,24195,24218,24247,24344,24658,24908,25239,25304,25511,25915,26114,26179,26356,26477,26657,26775,27083,27743,27946,28009,28207,28317,30002,30343,30828,31295,31968,32005,32024,32094,32177,32789,32771,32943,32945,33108,33167,33322,33618,34892,34913,35611,36002,36092,37066,37237,37489,30783,37628,38308,38477,38917,39321,39640,40251,21083,21163,21495,21512,22741,25335,28640,35946,36703,40633,20811,21051,21578,22269,31296,37239,40288,40658,29508,28425,33136,29969,24573,24794,39592,29403,36796,27492,38915,20170,22256,22372,22718,23130,24680,25031,26127,26118,26681,26801,28151,30165,32058,33390,39746,20123,20304,21449,21766,23919,24038,24046,26619,27801,29811,30722,35408,37782,35039,22352,24231,25387,20661,20652,20877,26368,21705,22622,22971,23472,24425,25165,25505,26685,27507,28168,28797,37319,29312,30741,30758,31085,25998,32048,33756,35009,36617,38555,21092,22312,26448,32618,36001,20916,22338,38442,22586,27018,32948,21682,23822,22524,30869,40442,20316,21066,21643,25662,26152,26388,26613,31364,31574,32034,37679,26716,39853,31545,21273,20874,21047,23519,25334,25774,25830,26413,27578,34217,38609,30352,39894,25420,37638,39851,30399,26194,19977,20632,21442,23665,24808,25746,25955,26719,29158,29642,29987,31639,32386,34453,35715,36059,37240,39184,26028,26283,27531,20181,20180,20282,20351,21050,21496,21490,21987,22235,22763,22987,22985,23039,23376,23629,24066,24107,24535,24605,25351,25903,23388,26031,26045,26088,26525,27490,27515,27663,29509,31049,31169,31992,32025,32043,32930,33026,33267,35222,35422,35433,35430,35468,35566,36039,36060,38604,39164,27503,20107,20284,20365,20816,23383,23546,24904,25345,26178,27425,28363,27835,29246,29885,30164,30913,31034,32780,32819,33258,33940,36766,27728,40575,24335,35672,40235,31482,36600,23437,38635,19971,21489,22519,22833,23241,23460,24713,28287,28422,30142,36074,23455,34048,31712,20594,26612,33437,23649,34122,32286,33294,20889,23556,25448,36198,26012,29038,31038,32023,32773,35613,36554,36974,34503,37034,20511,21242,23610,26451,28796,29237,37196,37320,37675,33509,23490,24369,24825,20027,21462,23432,25163,26417,27530,29417,29664,31278,33131,36259,37202,39318,20754,21463,21610,23551,25480,27193,32172,38656,22234,21454,21608,23447,23601,24030,20462,24833,25342,27954,31168,31179,32066,32333,32722,33261,33311,33936,34886,35186,35728,36468,36655,36913,37195,37228,38598,37276,20160,20303,20805,21313,24467,25102,26580,27713,28171,29539,32294,37325,37507,21460,22809,23487,28113,31069,32302,31899,22654,29087,20986,34899,36848,20426,23803,26149,30636,31459,33308,39423,20934,24490,26092,26991,27529,28147,28310,28516,30462,32020,24033,36981,37255,38918,20966,21021,25152,26257,26329,28186,24246,32210,32626,26360,34223,34295,35576,21161,21465,22899,24207,24464,24661,37604,38500,20663,20767,21213,21280,21319,21484,21736,21830,21809,22039,22888,22974,23100,23477,23558,23567,23569,23578,24196,24202,24288,24432,25215,25220,25307,25484,25463,26119,26124,26157,26230,26494,26786,27167,27189,27836,28040,28169,28248,28988,28966,29031,30151,30465,30813,30977,31077,31216,31456,31505,31911,32057,32918,33750,33931,34121,34909,35059,35359,35388,35412,35443,35937,36062,37284,37478,37758,37912,38556,38808,19978,19976,19998,20055,20887,21104,22478,22580,22732,23330,24120,24773,25854,26465,26454,27972,29366,30067,31331,33976,35698,37304,37664,22065,22516,39166,25325,26893,27542,29165,32340,32887,33394,35302,39135,34645,36785,23611,20280,20449,20405,21767,23072,23517,23529,24515,24910,25391,26032,26187,26862,27035,28024,28145,30003,30137,30495,31070,31206,32051,33251,33455,34218,35242,35386,36523,36763,36914,37341,38663,20154,20161,20995,22645,22764,23563,29978,23613,33102,35338,36805,38499,38765,31525,35535,38920,37218,22259,21416,36887,21561,22402,24101,25512,27700,28810,30561,31883,32736,34928,36930,37204,37648,37656,38543,29790,39620,23815,23913,25968,26530,36264,38619,25454,26441,26905,33733,38935,38592,35070,28548,25722,23544,19990,28716,30045,26159,20932,21046,21218,22995,24449,24615,25104,25919,25972,26143,26228,26866,26646,27491,28165,29298,29983,30427,31934,32854,22768,35069,35199,35488,35475,35531,36893,37266,38738,38745,25993,31246,33030,38587,24109,24796,25114,26021,26132,26512,30707,31309,31821,32318,33034,36012,36196,36321,36447,30889,20999,25305,25509,25666,25240,35373,31363,31680,35500,38634,32118,33292,34633,20185,20808,21315,21344,23459,23554,23574,24029,25126,25159,25776,26643,26676,27849,27973,27927,26579,28508,29006,29053,26059,31359,31661,32218,32330,32680,33146,33307,33337,34214,35438,36046,36341,36984,36983,37549,37521,38275,39854,21069,21892,28472,28982,20840,31109,32341,33203,31950,22092,22609,23720,25514,26366,26365,26970,29401,30095,30094,30990,31062,31199,31895,32032,32068,34311,35380,38459,36961,40736,20711,21109,21452,21474,20489,21930,22766,22863,29245,23435,23652,21277,24803,24819,25436,25475,25407,25531,25805,26089,26361,24035,27085,27133,28437,29157,20105,30185,30456,31379,31967,32207,32156,32865,33609,33624,33900,33980,34299,35013,36208,36865,36973,37783,38684,39442,20687,22679,24974,33235,34101,36104,36896,20419,20596,21063,21363,24687,25417,26463,28204,36275,36895,20439,23646,36042,26063,32154,21330,34966,20854,25539,23384,23403,23562,25613,26449,36956,20182,22810,22826,27760,35409,21822,22549,22949,24816,25171,26561,33333,26965,38464,39364,39464,20307,22534,23550,32784,23729,24111,24453,24608,24907,25140,26367,27888,28382,32974,33151,33492,34955,36024,36864,36910,38538,40667,39899,20195,21488,22823,31532,37261,38988,40441,28381,28711,21331,21828,23429,25176,25246,25299,27810,28655,29730,35351,37944,28609,35582,33592,20967,34552,21482,21481,20294,36948,36784,22890,33073,24061,31466,36799,26842,35895,29432,40008,27197,35504,20025,21336,22022,22374,25285,25506,26086,27470,28129,28251,28845,30701,31471,31658,32187,32829,32966,34507,35477,37723,22243,22727,24382,26029,26262,27264,27573,30007,35527,20516,30693,22320,24347,24677,26234,27744,30196,31258,32622,33268,34584,36933,39347,31689,30044,31481,31569,33988,36880,31209,31378,33590,23265,30528,20013,20210,23449,24544,25277,26172,26609,27880,34411,34935,35387,37198,37619,39376,27159,28710,29482,33511,33879,36015,19969,20806,20939,21899,23541,24086,24115,24193,24340,24373,24427,24500,25074,25361,26274,26397,28526,29266,30010,30522,32884,33081,33144,34678,35519,35548,36229,36339,37530,38263,38914,40165,21189,25431,30452,26389,27784,29645,36035,37806,38515,27941,22684,26894,27084,36861,37786,30171,36890,22618,26626,25524,27131,20291,28460,26584,36795,34086,32180,37716,26943,28528,22378,22775,23340,32044,29226,21514,37347,40372,20141,20302,20572,20597,21059,35998,21576,22564,23450,24093,24213,24237,24311,24351,24716,25269,25402,25552,26799,27712,30855,31118,31243,32224,33351,35330,35558,36420,36883,37048,37165,37336,40718,27877,25688,25826,25973,28404,30340,31515,36969,37841,28346,21746,24505,25764,36685,36845,37444,20856,22635,22825,23637,24215,28155,32399,29980,36028,36578,39003,28857,20253,27583,28593,3e4,38651,20814,21520,22581,22615,22956,23648,24466,26007,26460,28193,30331,33759,36077,36884,37117,37709,30757,30778,21162,24230,22303,22900,24594,20498,20826,20908,20941,20992,21776,22612,22616,22871,23445,23798,23947,24764,25237,25645,26481,26691,26812,26847,30423,28120,28271,28059,28783,29128,24403,30168,31095,31561,31572,31570,31958,32113,21040,33891,34153,34276,35342,35588,35910,36367,36867,36879,37913,38518,38957,39472,38360,20685,21205,21516,22530,23566,24999,25758,27934,30643,31461,33012,33796,36947,37509,23776,40199,21311,24471,24499,28060,29305,30563,31167,31716,27602,29420,35501,26627,27233,20984,31361,26932,23626,40182,33515,23493,37193,28702,22136,23663,24775,25958,27788,35930,36929,38931,21585,26311,37389,22856,37027,20869,20045,20970,34201,35598,28760,25466,37707,26978,39348,32260,30071,21335,26976,36575,38627,27741,20108,23612,24336,36841,21250,36049,32905,34425,24319,26085,20083,20837,22914,23615,38894,20219,22922,24525,35469,28641,31152,31074,23527,33905,29483,29105,24180,24565,25467,25754,29123,31896,20035,24316,20043,22492,22178,24745,28611,32013,33021,33075,33215,36786,35223,34468,24052,25226,25773,35207,26487,27874,27966,29750,30772,23110,32629,33453,39340,20467,24259,25309,25490,25943,26479,30403,29260,32972,32954,36649,37197,20493,22521,23186,26757,26995,29028,29437,36023,22770,36064,38506,36889,34687,31204,30695,33833,20271,21093,21338,25293,26575,27850,30333,31636,31893,33334,34180,36843,26333,28448,29190,32283,33707,39361,40614,20989,31665,30834,31672,32903,31560,27368,24161,32908,30033,30048,20843,37474,28300,30330,37271,39658,20240,32624,25244,31567,38309,40169,22138,22617,34532,38588,20276,21028,21322,21453,21467,24070,25644,26001,26495,27710,27726,29256,29359,29677,30036,32321,33324,34281,36009,31684,37318,29033,38930,39151,25405,26217,30058,30436,30928,34115,34542,21290,21329,21542,22915,24199,24444,24754,25161,25209,25259,26e3,27604,27852,30130,30382,30865,31192,32203,32631,32933,34987,35513,36027,36991,38750,39131,27147,31800,20633,23614,24494,26503,27608,29749,30473,32654,40763,26570,31255,21305,30091,39661,24422,33181,33777,32920,24380,24517,30050,31558,36924,26727,23019,23195,32016,30334,35628,20469,24426,27161,27703,28418,29922,31080,34920,35413,35961,24287,25551,30149,31186,33495,37672,37618,33948,34541,39981,21697,24428,25996,27996,28693,36007,36051,38971,25935,29942,19981,20184,22496,22827,23142,23500,20904,24067,24220,24598,25206,25975,26023,26222,28014,29238,31526,33104,33178,33433,35676,36e3,36070,36212,38428,38468,20398,25771,27494,33310,33889,34154,37096,23553,26963,39080,33914,34135,20239,21103,24489,24133,26381,31119,33145,35079,35206,28149,24343,25173,27832,20175,29289,39826,20998,21563,22132,22707,24996,25198,28954,22894,31881,31966,32027,38640,25991,32862,19993,20341,20853,22592,24163,24179,24330,26564,20006,34109,38281,38491,31859,38913,20731,22721,30294,30887,21029,30629,34065,31622,20559,22793,29255,31687,32232,36794,36820,36941,20415,21193,23081,24321,38829,20445,33303,37610,22275,25429,27497,29995,35036,36628,31298,21215,22675,24917,25098,26286,27597,31807,33769,20515,20472,21253,21574,22577,22857,23453,23792,23791,23849,24214,25265,25447,25918,26041,26379,27861,27873,28921,30770,32299,32990,33459,33804,34028,34562,35090,35370,35914,37030,37586,39165,40179,40300,20047,20129,20621,21078,22346,22952,24125,24536,24537,25151,26292,26395,26576,26834,20882,32033,32938,33192,35584,35980,36031,37502,38450,21536,38956,21271,20693,21340,22696,25778,26420,29287,30566,31302,37350,21187,27809,27526,22528,24140,22868,26412,32763,20961,30406,25705,30952,39764,40635,22475,22969,26151,26522,27598,21737,27097,24149,33180,26517,39850,26622,40018,26717,20134,20451,21448,25273,26411,27819,36804,20397,32365,40639,19975,24930,28288,28459,34067,21619,26410,39749,24051,31637,23724,23494,34588,28234,34001,31252,33032,22937,31885,27665,30496,21209,22818,28961,29279,30683,38695,40289,26891,23167,23064,20901,21517,21629,26126,30431,36855,37528,40180,23018,29277,28357,20813,26825,32191,32236,38754,40634,25720,27169,33538,22916,23391,27611,29467,30450,32178,32791,33945,20786,26408,40665,30446,26466,21247,39173,23588,25147,31870,36016,21839,24758,32011,38272,21249,20063,20918,22812,29242,32822,37326,24357,30690,21380,24441,32004,34220,35379,36493,38742,26611,34222,37971,24841,24840,27833,30290,35565,36664,21807,20305,20778,21191,21451,23461,24189,24736,24962,25558,26377,26586,28263,28044,29494,29495,30001,31056,35029,35480,36938,37009,37109,38596,34701,22805,20104,20313,19982,35465,36671,38928,20653,24188,22934,23481,24248,25562,25594,25793,26332,26954,27096,27915,28342,29076,29992,31407,32650,32768,33865,33993,35201,35617,36362,36965,38525,39178,24958,25233,27442,27779,28020,32716,32764,28096,32645,34746,35064,26469,33713,38972,38647,27931,32097,33853,37226,20081,21365,23888,27396,28651,34253,34349,35239,21033,21519,23653,26446,26792,29702,29827,30178,35023,35041,37324,38626,38520,24459,29575,31435,33870,25504,30053,21129,27969,28316,29705,30041,30827,31890,38534,31452,40845,20406,24942,26053,34396,20102,20142,20698,20001,20940,23534,26009,26753,28092,29471,30274,30637,31260,31975,33391,35538,36988,37327,38517,38936,21147,32209,20523,21400,26519,28107,29136,29747,33256,36650,38563,40023,40607,29792,22593,28057,32047,39006,20196,20278,20363,20919,21169,23994,24604,29618,31036,33491,37428,38583,38646,38666,40599,40802,26278,27508,21015,21155,28872,35010,24265,24651,24976,28451,29001,31806,32244,32879,34030,36899,37676,21570,39791,27347,28809,36034,36335,38706,21172,23105,24266,24324,26391,27004,27028,28010,28431,29282,29436,31725,32769,32894,34635,37070,20845,40595,31108,32907,37682,35542,20525,21644,35441,27498,36036,33031,24785,26528,40434,20121,20120,39952,35435,34241,34152,26880,28286,30871,33109,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24332,19984,19989,20010,20017,20022,20028,20031,20034,20054,20056,20098,20101,35947,20106,33298,24333,20110,20126,20127,20128,20130,20144,20147,20150,20174,20173,20164,20166,20162,20183,20190,20205,20191,20215,20233,20314,20272,20315,20317,20311,20295,20342,20360,20367,20376,20347,20329,20336,20369,20335,20358,20374,20760,20436,20447,20430,20440,20443,20433,20442,20432,20452,20453,20506,20520,20500,20522,20517,20485,20252,20470,20513,20521,20524,20478,20463,20497,20486,20547,20551,26371,20565,20560,20552,20570,20566,20588,20600,20608,20634,20613,20660,20658,20681,20682,20659,20674,20694,20702,20709,20717,20707,20718,20729,20725,20745,20737,20738,20758,20757,20756,20762,20769,20794,20791,20796,20795,20799,20800,20818,20812,20820,20834,31480,20841,20842,20846,20864,20866,22232,20876,20873,20879,20881,20883,20885,20886,20900,20902,20898,20905,20906,20907,20915,20913,20914,20912,20917,20925,20933,20937,20955,20960,34389,20969,20973,20976,20981,20990,20996,21003,21012,21006,21031,21034,21038,21043,21049,21071,21060,21067,21068,21086,21076,21098,21108,21097,21107,21119,21117,21133,21140,21138,21105,21128,21137,36776,36775,21164,21165,21180,21173,21185,21197,21207,21214,21219,21222,39149,21216,21235,21237,21240,21241,21254,21256,30008,21261,21264,21263,21269,21274,21283,21295,21297,21299,21304,21312,21318,21317,19991,21321,21325,20950,21342,21353,21358,22808,21371,21367,21378,21398,21408,21414,21413,21422,21424,21430,21443,31762,38617,21471,26364,29166,21486,21480,21485,21498,21505,21565,21568,21548,21549,21564,21550,21558,21545,21533,21582,21647,21621,21646,21599,21617,21623,21616,21650,21627,21632,21622,21636,21648,21638,21703,21666,21688,21669,21676,21700,21704,21672,21675,21698,21668,21694,21692,21720,21733,21734,21775,21780,21757,21742,21741,21754,21730,21817,21824,21859,21836,21806,21852,21829,21846,21847,21816,21811,21853,21913,21888,21679,21898,21919,21883,21886,21912,21918,21934,21884,21891,21929,21895,21928,21978,21957,21983,21956,21980,21988,21972,22036,22007,22038,22014,22013,22043,22009,22094,22096,29151,22068,22070,22066,22072,22123,22116,22063,22124,22122,22150,22144,22154,22176,22164,22159,22181,22190,22198,22196,22210,22204,22209,22211,22208,22216,22222,22225,22227,22231,22254,22265,22272,22271,22276,22281,22280,22283,22285,22291,22296,22294,21959,22300,22310,22327,22328,22350,22331,22336,22351,22377,22464,22408,22369,22399,22409,22419,22432,22451,22436,22442,22448,22467,22470,22484,22482,22483,22538,22486,22499,22539,22553,22557,22642,22561,22626,22603,22640,27584,22610,22589,22649,22661,22713,22687,22699,22714,22750,22715,22712,22702,22725,22739,22737,22743,22745,22744,22757,22748,22756,22751,22767,22778,22777,22779,22780,22781,22786,22794,22800,22811,26790,22821,22828,22829,22834,22840,22846,31442,22869,22864,22862,22874,22872,22882,22880,22887,22892,22889,22904,22913,22941,20318,20395,22947,22962,22982,23016,23004,22925,23001,23002,23077,23071,23057,23068,23049,23066,23104,23148,23113,23093,23094,23138,23146,23194,23228,23230,23243,23234,23229,23267,23255,23270,23273,23254,23290,23291,23308,23307,23318,23346,23248,23338,23350,23358,23363,23365,23360,23377,23381,23386,23387,23397,23401,23408,23411,23413,23416,25992,23418,23424,23427,23462,23480,23491,23495,23497,23508,23504,23524,23526,23522,23518,23525,23531,23536,23542,23539,23557,23559,23560,23565,23571,23584,23586,23592,23608,23609,23617,23622,23630,23635,23632,23631,23409,23660,23662,20066,23670,23673,23692,23697,23700,22939,23723,23739,23734,23740,23735,23749,23742,23751,23769,23785,23805,23802,23789,23948,23786,23819,23829,23831,23900,23839,23835,23825,23828,23842,23834,23833,23832,23884,23890,23886,23883,23916,23923,23926,23943,23940,23938,23970,23965,23980,23982,23997,23952,23991,23996,24009,24013,24019,24018,24022,24027,24043,24050,24053,24075,24090,24089,24081,24091,24118,24119,24132,24131,24128,24142,24151,24148,24159,24162,24164,24135,24181,24182,24186,40636,24191,24224,24257,24258,24264,24272,24271,24278,24291,24285,24282,24283,24290,24289,24296,24297,24300,24305,24307,24304,24308,24312,24318,24323,24329,24413,24412,24331,24337,24342,24361,24365,24376,24385,24392,24396,24398,24367,24401,24406,24407,24409,24417,24429,24435,24439,24451,24450,24447,24458,24456,24465,24455,24478,24473,24472,24480,24488,24493,24508,24534,24571,24548,24568,24561,24541,24755,24575,24609,24672,24601,24592,24617,24590,24625,24603,24597,24619,24614,24591,24634,24666,24641,24682,24695,24671,24650,24646,24653,24675,24643,24676,24642,24684,24683,24665,24705,24717,24807,24707,24730,24708,24731,24726,24727,24722,24743,24715,24801,24760,24800,24787,24756,24560,24765,24774,24757,24792,24909,24853,24838,24822,24823,24832,24820,24826,24835,24865,24827,24817,24845,24846,24903,24894,24872,24871,24906,24895,24892,24876,24884,24893,24898,24900,24947,24951,24920,24921,24922,24939,24948,24943,24933,24945,24927,24925,24915,24949,24985,24982,24967,25004,24980,24986,24970,24977,25003,25006,25036,25034,25033,25079,25032,25027,25030,25018,25035,32633,25037,25062,25059,25078,25082,25076,25087,25085,25084,25086,25088,25096,25097,25101,25100,25108,25115,25118,25121,25130,25134,25136,25138,25139,25153,25166,25182,25187,25179,25184,25192,25212,25218,25225,25214,25234,25235,25238,25300,25219,25236,25303,25297,25275,25295,25343,25286,25812,25288,25308,25292,25290,25282,25287,25243,25289,25356,25326,25329,25383,25346,25352,25327,25333,25424,25406,25421,25628,25423,25494,25486,25472,25515,25462,25507,25487,25481,25503,25525,25451,25449,25534,25577,25536,25542,25571,25545,25554,25590,25540,25622,25652,25606,25619,25638,25654,25885,25623,25640,25615,25703,25711,25718,25678,25898,25749,25747,25765,25769,25736,25788,25818,25810,25797,25799,25787,25816,25794,25841,25831,33289,25824,25825,25260,25827,25839,25900,25846,25844,25842,25850,25856,25853,25880,25884,25861,25892,25891,25899,25908,25909,25911,25910,25912,30027,25928,25942,25941,25933,25944,25950,25949,25970,25976,25986,25987,35722,26011,26015,26027,26039,26051,26054,26049,26052,26060,26066,26075,26073,26080,26081,26097,26482,26122,26115,26107,26483,26165,26166,26164,26140,26191,26180,26185,26177,26206,26205,26212,26215,26216,26207,26210,26224,26243,26248,26254,26249,26244,26264,26269,26305,26297,26313,26302,26300,26308,26296,26326,26330,26336,26175,26342,26345,26352,26357,26359,26383,26390,26398,26406,26407,38712,26414,26431,26422,26433,26424,26423,26438,26462,26464,26457,26467,26468,26505,26480,26537,26492,26474,26508,26507,26534,26529,26501,26551,26607,26548,26604,26547,26601,26552,26596,26590,26589,26594,26606,26553,26574,26566,26599,27292,26654,26694,26665,26688,26701,26674,26702,26803,26667,26713,26723,26743,26751,26783,26767,26797,26772,26781,26779,26755,27310,26809,26740,26805,26784,26810,26895,26765,26750,26881,26826,26888,26840,26914,26918,26849,26892,26829,26836,26855,26837,26934,26898,26884,26839,26851,26917,26873,26848,26863,26920,26922,26906,26915,26913,26822,27001,26999,26972,27e3,26987,26964,27006,26990,26937,26996,26941,26969,26928,26977,26974,26973,27009,26986,27058,27054,27088,27071,27073,27091,27070,27086,23528,27082,27101,27067,27075,27047,27182,27025,27040,27036,27029,27060,27102,27112,27138,27163,27135,27402,27129,27122,27111,27141,27057,27166,27117,27156,27115,27146,27154,27329,27171,27155,27204,27148,27250,27190,27256,27207,27234,27225,27238,27208,27192,27170,27280,27277,27296,27268,27298,27299,27287,34327,27323,27331,27330,27320,27315,27308,27358,27345,27359,27306,27354,27370,27387,27397,34326,27386,27410,27414,39729,27423,27448,27447,30428,27449,39150,27463,27459,27465,27472,27481,27476,27483,27487,27489,27512,27513,27519,27520,27524,27523,27533,27544,27541,27550,27556,27562,27563,27567,27570,27569,27571,27575,27580,27590,27595,27603,27615,27628,27627,27635,27631,40638,27656,27667,27668,27675,27684,27683,27742,27733,27746,27754,27778,27789,27802,27777,27803,27774,27752,27763,27794,27792,27844,27889,27859,27837,27863,27845,27869,27822,27825,27838,27834,27867,27887,27865,27882,27935,34893,27958,27947,27965,27960,27929,27957,27955,27922,27916,28003,28051,28004,27994,28025,27993,28046,28053,28644,28037,28153,28181,28170,28085,28103,28134,28088,28102,28140,28126,28108,28136,28114,28101,28154,28121,28132,28117,28138,28142,28205,28270,28206,28185,28274,28255,28222,28195,28267,28203,28278,28237,28191,28227,28218,28238,28196,28415,28189,28216,28290,28330,28312,28361,28343,28371,28349,28335,28356,28338,28372,28373,28303,28325,28354,28319,28481,28433,28748,28396,28408,28414,28479,28402,28465,28399,28466,28364,28478,28435,28407,28550,28538,28536,28545,28544,28527,28507,28659,28525,28546,28540,28504,28558,28561,28610,28518,28595,28579,28577,28580,28601,28614,28586,28639,28629,28652,28628,28632,28657,28654,28635,28681,28683,28666,28689,28673,28687,28670,28699,28698,28532,28701,28696,28703,28720,28734,28722,28753,28771,28825,28818,28847,28913,28844,28856,28851,28846,28895,28875,28893,28889,28937,28925,28956,28953,29029,29013,29064,29030,29026,29004,29014,29036,29071,29179,29060,29077,29096,29100,29143,29113,29118,29138,29129,29140,29134,29152,29164,29159,29173,29180,29177,29183,29197,29200,29211,29224,29229,29228,29232,29234,29243,29244,29247,29248,29254,29259,29272,29300,29310,29314,29313,29319,29330,29334,29346,29351,29369,29362,29379,29382,29380,29390,29394,29410,29408,29409,29433,29431,20495,29463,29450,29468,29462,29469,29492,29487,29481,29477,29502,29518,29519,40664,29527,29546,29544,29552,29560,29557,29563,29562,29640,29619,29646,29627,29632,29669,29678,29662,29858,29701,29807,29733,29688,29746,29754,29781,29759,29791,29785,29761,29788,29801,29808,29795,29802,29814,29822,29835,29854,29863,29898,29903,29908,29681,29920,29923,29927,29929,29934,29938,29936,29937,29944,29943,29956,29955,29957,29964,29966,29965,29973,29971,29982,29990,29996,30012,30020,30029,30026,30025,30043,30022,30042,30057,30052,30055,30059,30061,30072,30070,30086,30087,30068,30090,30089,30082,30100,30106,30109,30117,30115,30146,30131,30147,30133,30141,30136,30140,30129,30157,30154,30162,30169,30179,30174,30206,30207,30204,30209,30192,30202,30194,30195,30219,30221,30217,30239,30247,30240,30241,30242,30244,30260,30256,30267,30279,30280,30278,30300,30296,30305,30306,30312,30313,30314,30311,30316,30320,30322,30326,30328,30332,30336,30339,30344,30347,30350,30358,30355,30361,30362,30384,30388,30392,30393,30394,30402,30413,30422,30418,30430,30433,30437,30439,30442,34351,30459,30472,30471,30468,30505,30500,30494,30501,30502,30491,30519,30520,30535,30554,30568,30571,30555,30565,30591,30590,30585,30606,30603,30609,30624,30622,30640,30646,30649,30655,30652,30653,30651,30663,30669,30679,30682,30684,30691,30702,30716,30732,30738,31014,30752,31018,30789,30862,30836,30854,30844,30874,30860,30883,30901,30890,30895,30929,30918,30923,30932,30910,30908,30917,30922,30956,30951,30938,30973,30964,30983,30994,30993,31001,31020,31019,31040,31072,31063,31071,31066,31061,31059,31098,31103,31114,31133,31143,40779,31146,31150,31155,31161,31162,31177,31189,31207,31212,31201,31203,31240,31245,31256,31257,31264,31263,31104,31281,31291,31294,31287,31299,31319,31305,31329,31330,31337,40861,31344,31353,31357,31368,31383,31381,31384,31382,31401,31432,31408,31414,31429,31428,31423,36995,31431,31434,31437,31439,31445,31443,31449,31450,31453,31457,31458,31462,31469,31472,31490,31503,31498,31494,31539,31512,31513,31518,31541,31528,31542,31568,31610,31492,31565,31499,31564,31557,31605,31589,31604,31591,31600,31601,31596,31598,31645,31640,31647,31629,31644,31642,31627,31634,31631,31581,31641,31691,31681,31692,31695,31668,31686,31709,31721,31761,31764,31718,31717,31840,31744,31751,31763,31731,31735,31767,31757,31734,31779,31783,31786,31775,31799,31787,31805,31820,31811,31828,31823,31808,31824,31832,31839,31844,31830,31845,31852,31861,31875,31888,31908,31917,31906,31915,31905,31912,31923,31922,31921,31918,31929,31933,31936,31941,31938,31960,31954,31964,31970,39739,31983,31986,31988,31990,31994,32006,32002,32028,32021,32010,32069,32075,32046,32050,32063,32053,32070,32115,32086,32078,32114,32104,32110,32079,32099,32147,32137,32091,32143,32125,32155,32186,32174,32163,32181,32199,32189,32171,32317,32162,32175,32220,32184,32159,32176,32216,32221,32228,32222,32251,32242,32225,32261,32266,32291,32289,32274,32305,32287,32265,32267,32290,32326,32358,32315,32309,32313,32323,32311,32306,32314,32359,32349,32342,32350,32345,32346,32377,32362,32361,32380,32379,32387,32213,32381,36782,32383,32392,32393,32396,32402,32400,32403,32404,32406,32398,32411,32412,32568,32570,32581,32588,32589,32590,32592,32593,32597,32596,32600,32607,32608,32616,32617,32615,32632,32642,32646,32643,32648,32647,32652,32660,32670,32669,32666,32675,32687,32690,32697,32686,32694,32696,35697,32709,32710,32714,32725,32724,32737,32742,32745,32755,32761,39132,32774,32772,32779,32786,32792,32793,32796,32801,32808,32831,32827,32842,32838,32850,32856,32858,32863,32866,32872,32883,32882,32880,32886,32889,32893,32895,32900,32902,32901,32923,32915,32922,32941,20880,32940,32987,32997,32985,32989,32964,32986,32982,33033,33007,33009,33051,33065,33059,33071,33099,38539,33094,33086,33107,33105,33020,33137,33134,33125,33126,33140,33155,33160,33162,33152,33154,33184,33173,33188,33187,33119,33171,33193,33200,33205,33214,33208,33213,33216,33218,33210,33225,33229,33233,33241,33240,33224,33242,33247,33248,33255,33274,33275,33278,33281,33282,33285,33287,33290,33293,33296,33302,33321,33323,33336,33331,33344,33369,33368,33373,33370,33375,33380,33378,33384,33386,33387,33326,33393,33399,33400,33406,33421,33426,33451,33439,33467,33452,33505,33507,33503,33490,33524,33523,33530,33683,33539,33531,33529,33502,33542,33500,33545,33497,33589,33588,33558,33586,33585,33600,33593,33616,33605,33583,33579,33559,33560,33669,33690,33706,33695,33698,33686,33571,33678,33671,33674,33660,33717,33651,33653,33696,33673,33704,33780,33811,33771,33742,33789,33795,33752,33803,33729,33783,33799,33760,33778,33805,33826,33824,33725,33848,34054,33787,33901,33834,33852,34138,33924,33911,33899,33965,33902,33922,33897,33862,33836,33903,33913,33845,33994,33890,33977,33983,33951,34009,33997,33979,34010,34e3,33985,33990,34006,33953,34081,34047,34036,34071,34072,34092,34079,34069,34068,34044,34112,34147,34136,34120,34113,34306,34123,34133,34176,34212,34184,34193,34186,34216,34157,34196,34203,34282,34183,34204,34167,34174,34192,34249,34234,34255,34233,34256,34261,34269,34277,34268,34297,34314,34323,34315,34302,34298,34310,34338,34330,34352,34367,34381,20053,34388,34399,34407,34417,34451,34467,34473,34474,34443,34444,34486,34479,34500,34502,34480,34505,34851,34475,34516,34526,34537,34540,34527,34523,34543,34578,34566,34568,34560,34563,34555,34577,34569,34573,34553,34570,34612,34623,34615,34619,34597,34601,34586,34656,34655,34680,34636,34638,34676,34647,34664,34670,34649,34643,34659,34666,34821,34722,34719,34690,34735,34763,34749,34752,34768,38614,34731,34756,34739,34759,34758,34747,34799,34802,34784,34831,34829,34814,34806,34807,34830,34770,34833,34838,34837,34850,34849,34865,34870,34873,34855,34875,34884,34882,34898,34905,34910,34914,34923,34945,34942,34974,34933,34941,34997,34930,34946,34967,34962,34990,34969,34978,34957,34980,34992,35007,34993,35011,35012,35028,35032,35033,35037,35065,35074,35068,35060,35048,35058,35076,35084,35082,35091,35139,35102,35109,35114,35115,35137,35140,35131,35126,35128,35148,35101,35168,35166,35174,35172,35181,35178,35183,35188,35191,35198,35203,35208,35210,35219,35224,35233,35241,35238,35244,35247,35250,35258,35261,35263,35264,35290,35292,35293,35303,35316,35320,35331,35350,35344,35340,35355,35357,35365,35382,35393,35419,35410,35398,35400,35452,35437,35436,35426,35461,35458,35460,35496,35489,35473,35493,35494,35482,35491,35524,35533,35522,35546,35563,35571,35559,35556,35569,35604,35552,35554,35575,35550,35547,35596,35591,35610,35553,35606,35600,35607,35616,35635,38827,35622,35627,35646,35624,35649,35660,35663,35662,35657,35670,35675,35674,35691,35679,35692,35695,35700,35709,35712,35724,35726,35730,35731,35734,35737,35738,35898,35905,35903,35912,35916,35918,35920,35925,35938,35948,35960,35962,35970,35977,35973,35978,35981,35982,35988,35964,35992,25117,36013,36010,36029,36018,36019,36014,36022,36040,36033,36068,36067,36058,36093,36090,36091,36100,36101,36106,36103,36111,36109,36112,40782,36115,36045,36116,36118,36199,36205,36209,36211,36225,36249,36290,36286,36282,36303,36314,36310,36300,36315,36299,36330,36331,36319,36323,36348,36360,36361,36351,36381,36382,36368,36383,36418,36405,36400,36404,36426,36423,36425,36428,36432,36424,36441,36452,36448,36394,36451,36437,36470,36466,36476,36481,36487,36485,36484,36491,36490,36499,36497,36500,36505,36522,36513,36524,36528,36550,36529,36542,36549,36552,36555,36571,36579,36604,36603,36587,36606,36618,36613,36629,36626,36633,36627,36636,36639,36635,36620,36646,36659,36667,36665,36677,36674,36670,36684,36681,36678,36686,36695,36700,36706,36707,36708,36764,36767,36771,36781,36783,36791,36826,36837,36834,36842,36847,36999,36852,36869,36857,36858,36881,36885,36897,36877,36894,36886,36875,36903,36918,36917,36921,36856,36943,36944,36945,36946,36878,36937,36926,36950,36952,36958,36968,36975,36982,38568,36978,36994,36989,36993,36992,37002,37001,37007,37032,37039,37041,37045,37090,37092,25160,37083,37122,37138,37145,37170,37168,37194,37206,37208,37219,37221,37225,37235,37234,37259,37257,37250,37282,37291,37295,37290,37301,37300,37306,37312,37313,37321,37323,37328,37334,37343,37345,37339,37372,37365,37366,37406,37375,37396,37420,37397,37393,37470,37463,37445,37449,37476,37448,37525,37439,37451,37456,37532,37526,37523,37531,37466,37583,37561,37559,37609,37647,37626,37700,37678,37657,37666,37658,37667,37690,37685,37691,37724,37728,37756,37742,37718,37808,37804,37805,37780,37817,37846,37847,37864,37861,37848,37827,37853,37840,37832,37860,37914,37908,37907,37891,37895,37904,37942,37931,37941,37921,37946,37953,37970,37956,37979,37984,37986,37982,37994,37417,38e3,38005,38007,38013,37978,38012,38014,38017,38015,38274,38279,38282,38292,38294,38296,38297,38304,38312,38311,38317,38332,38331,38329,38334,38346,28662,38339,38349,38348,38357,38356,38358,38364,38369,38373,38370,38433,38440,38446,38447,38466,38476,38479,38475,38519,38492,38494,38493,38495,38502,38514,38508,38541,38552,38549,38551,38570,38567,38577,38578,38576,38580,38582,38584,38585,38606,38603,38601,38605,35149,38620,38669,38613,38649,38660,38662,38664,38675,38670,38673,38671,38678,38681,38692,38698,38704,38713,38717,38718,38724,38726,38728,38722,38729,38748,38752,38756,38758,38760,21202,38763,38769,38777,38789,38780,38785,38778,38790,38795,38799,38800,38812,38824,38822,38819,38835,38836,38851,38854,38856,38859,38876,38893,40783,38898,31455,38902,38901,38927,38924,38968,38948,38945,38967,38973,38982,38991,38987,39019,39023,39024,39025,39028,39027,39082,39087,39089,39094,39108,39107,39110,39145,39147,39171,39177,39186,39188,39192,39201,39197,39198,39204,39200,39212,39214,39229,39230,39234,39241,39237,39248,39243,39249,39250,39244,39253,39319,39320,39333,39341,39342,39356,39391,39387,39389,39384,39377,39405,39406,39409,39410,39419,39416,39425,39439,39429,39394,39449,39467,39479,39493,39490,39488,39491,39486,39509,39501,39515,39511,39519,39522,39525,39524,39529,39531,39530,39597,39600,39612,39616,39631,39633,39635,39636,39646,39647,39650,39651,39654,39663,39659,39662,39668,39665,39671,39675,39686,39704,39706,39711,39714,39715,39717,39719,39720,39721,39722,39726,39727,39730,39748,39747,39759,39757,39758,39761,39768,39796,39827,39811,39825,39830,39831,39839,39840,39848,39860,39872,39882,39865,39878,39887,39889,39890,39907,39906,39908,39892,39905,39994,39922,39921,39920,39957,39956,39945,39955,39948,39942,39944,39954,39946,39940,39982,39963,39973,39972,39969,39984,40007,39986,40006,39998,40026,40032,40039,40054,40056,40167,40172,40176,40201,40200,40171,40195,40198,40234,40230,40367,40227,40223,40260,40213,40210,40257,40255,40254,40262,40264,40285,40286,40292,40273,40272,40281,40306,40329,40327,40363,40303,40314,40346,40356,40361,40370,40388,40385,40379,40376,40378,40390,40399,40386,40409,40403,40440,40422,40429,40431,40445,40474,40475,40478,40565,40569,40573,40577,40584,40587,40588,40594,40597,40593,40605,40613,40617,40632,40618,40621,38753,40652,40654,40655,40656,40660,40668,40670,40669,40672,40677,40680,40687,40692,40694,40695,40697,40699,40700,40701,40711,40712,30391,40725,40737,40748,40766,40778,40786,40788,40803,40799,40800,40801,40806,40807,40812,40810,40823,40818,40822,40853,40860,40864,22575,27079,36953,29796,20956,29081,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,65506,65508,65287,65282,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,65506,65508,65287,65282,12849,8470,8481,8757,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],jis0212:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,728,711,184,729,733,175,731,730,65374,900,901,null,null,null,null,null,null,null,null,161,166,191,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,186,170,169,174,8482,164,8470,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,902,904,905,906,938,null,908,null,910,939,null,911,null,null,null,null,940,941,942,943,970,912,972,962,973,971,944,974,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1038,1039,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1118,1119,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,198,272,null,294,null,306,null,321,319,null,330,216,338,null,358,222,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,230,273,240,295,305,307,312,322,320,329,331,248,339,223,359,254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,193,192,196,194,258,461,256,260,197,195,262,264,268,199,266,270,201,200,203,202,282,278,274,280,null,284,286,290,288,292,205,204,207,206,463,304,298,302,296,308,310,313,317,315,323,327,325,209,211,210,214,212,465,336,332,213,340,344,342,346,348,352,350,356,354,218,217,220,219,364,467,368,362,370,366,360,471,475,473,469,372,221,376,374,377,381,379,null,null,null,null,null,null,null,225,224,228,226,259,462,257,261,229,227,263,265,269,231,267,271,233,232,235,234,283,279,275,281,501,285,287,null,289,293,237,236,239,238,464,null,299,303,297,309,311,314,318,316,324,328,326,241,243,242,246,244,466,337,333,245,341,345,343,347,349,353,351,357,355,250,249,252,251,365,468,369,363,371,367,361,472,476,474,470,373,253,255,375,378,382,380,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19970,19972,19973,19980,19986,19999,20003,20004,20008,20011,20014,20015,20016,20021,20032,20033,20036,20039,20049,20058,20060,20067,20072,20073,20084,20085,20089,20095,20109,20118,20119,20125,20143,20153,20163,20176,20186,20187,20192,20193,20194,20200,20207,20209,20211,20213,20221,20222,20223,20224,20226,20227,20232,20235,20236,20242,20245,20246,20247,20249,20270,20273,20320,20275,20277,20279,20281,20283,20286,20288,20290,20296,20297,20299,20300,20306,20308,20310,20312,20319,20323,20330,20332,20334,20337,20343,20344,20345,20346,20349,20350,20353,20354,20356,20357,20361,20362,20364,20366,20368,20370,20371,20372,20375,20377,20378,20382,20383,20402,20407,20409,20411,20412,20413,20414,20416,20417,20421,20422,20424,20425,20427,20428,20429,20431,20434,20444,20448,20450,20464,20466,20476,20477,20479,20480,20481,20484,20487,20490,20492,20494,20496,20499,20503,20504,20507,20508,20509,20510,20514,20519,20526,20528,20530,20531,20533,20544,20545,20546,20549,20550,20554,20556,20558,20561,20562,20563,20567,20569,20575,20576,20578,20579,20582,20583,20586,20589,20592,20593,20539,20609,20611,20612,20614,20618,20622,20623,20624,20626,20627,20628,20630,20635,20636,20638,20639,20640,20641,20642,20650,20655,20656,20665,20666,20669,20672,20675,20676,20679,20684,20686,20688,20691,20692,20696,20700,20701,20703,20706,20708,20710,20712,20713,20719,20721,20726,20730,20734,20739,20742,20743,20744,20747,20748,20749,20750,20722,20752,20759,20761,20763,20764,20765,20766,20771,20775,20776,20780,20781,20783,20785,20787,20788,20789,20792,20793,20802,20810,20815,20819,20821,20823,20824,20831,20836,20838,20862,20867,20868,20875,20878,20888,20893,20897,20899,20909,20920,20922,20924,20926,20927,20930,20936,20943,20945,20946,20947,20949,20952,20958,20962,20965,20974,20978,20979,20980,20983,20993,20994,20997,21010,21011,21013,21014,21016,21026,21032,21041,21042,21045,21052,21061,21065,21077,21079,21080,21082,21084,21087,21088,21089,21094,21102,21111,21112,21113,21120,21122,21125,21130,21132,21139,21141,21142,21143,21144,21146,21148,21156,21157,21158,21159,21167,21168,21174,21175,21176,21178,21179,21181,21184,21188,21190,21192,21196,21199,21201,21204,21206,21211,21212,21217,21221,21224,21225,21226,21228,21232,21233,21236,21238,21239,21248,21251,21258,21259,21260,21265,21267,21272,21275,21276,21278,21279,21285,21287,21288,21289,21291,21292,21293,21296,21298,21301,21308,21309,21310,21314,21324,21323,21337,21339,21345,21347,21349,21356,21357,21362,21369,21374,21379,21383,21384,21390,21395,21396,21401,21405,21409,21412,21418,21419,21423,21426,21428,21429,21431,21432,21434,21437,21440,21445,21455,21458,21459,21461,21466,21469,21470,21472,21478,21479,21493,21506,21523,21530,21537,21543,21544,21546,21551,21553,21556,21557,21571,21572,21575,21581,21583,21598,21602,21604,21606,21607,21609,21611,21613,21614,21620,21631,21633,21635,21637,21640,21641,21645,21649,21653,21654,21660,21663,21665,21670,21671,21673,21674,21677,21678,21681,21687,21689,21690,21691,21695,21702,21706,21709,21710,21728,21738,21740,21743,21750,21756,21758,21759,21760,21761,21765,21768,21769,21772,21773,21774,21781,21802,21803,21810,21813,21814,21819,21820,21821,21825,21831,21833,21834,21837,21840,21841,21848,21850,21851,21854,21856,21857,21860,21862,21887,21889,21890,21894,21896,21902,21903,21905,21906,21907,21908,21911,21923,21924,21933,21938,21951,21953,21955,21958,21961,21963,21964,21966,21969,21970,21971,21975,21976,21979,21982,21986,21993,22006,22015,22021,22024,22026,22029,22030,22031,22032,22033,22034,22041,22060,22064,22067,22069,22071,22073,22075,22076,22077,22079,22080,22081,22083,22084,22086,22089,22091,22093,22095,22100,22110,22112,22113,22114,22115,22118,22121,22125,22127,22129,22130,22133,22148,22149,22152,22155,22156,22165,22169,22170,22173,22174,22175,22182,22183,22184,22185,22187,22188,22189,22193,22195,22199,22206,22213,22217,22218,22219,22223,22224,22220,22221,22233,22236,22237,22239,22241,22244,22245,22246,22247,22248,22257,22251,22253,22262,22263,22273,22274,22279,22282,22284,22289,22293,22298,22299,22301,22304,22306,22307,22308,22309,22313,22314,22316,22318,22319,22323,22324,22333,22334,22335,22341,22342,22348,22349,22354,22370,22373,22375,22376,22379,22381,22382,22383,22384,22385,22387,22388,22389,22391,22393,22394,22395,22396,22398,22401,22403,22412,22420,22423,22425,22426,22428,22429,22430,22431,22433,22421,22439,22440,22441,22444,22456,22461,22471,22472,22476,22479,22485,22493,22494,22500,22502,22503,22505,22509,22512,22517,22518,22520,22525,22526,22527,22531,22532,22536,22537,22497,22540,22541,22555,22558,22559,22560,22566,22567,22573,22578,22585,22591,22601,22604,22605,22607,22608,22613,22623,22625,22628,22631,22632,22648,22652,22655,22656,22657,22663,22664,22665,22666,22668,22669,22671,22672,22676,22678,22685,22688,22689,22690,22694,22697,22705,22706,22724,22716,22722,22728,22733,22734,22736,22738,22740,22742,22746,22749,22753,22754,22761,22771,22789,22790,22795,22796,22802,22803,22804,34369,22813,22817,22819,22820,22824,22831,22832,22835,22837,22838,22847,22851,22854,22866,22867,22873,22875,22877,22878,22879,22881,22883,22891,22893,22895,22898,22901,22902,22905,22907,22908,22923,22924,22926,22930,22933,22935,22943,22948,22951,22957,22958,22959,22960,22963,22967,22970,22972,22977,22979,22980,22984,22986,22989,22994,23005,23006,23007,23011,23012,23015,23022,23023,23025,23026,23028,23031,23040,23044,23052,23053,23054,23058,23059,23070,23075,23076,23079,23080,23082,23085,23088,23108,23109,23111,23112,23116,23120,23125,23134,23139,23141,23143,23149,23159,23162,23163,23166,23179,23184,23187,23190,23193,23196,23198,23199,23200,23202,23207,23212,23217,23218,23219,23221,23224,23226,23227,23231,23236,23238,23240,23247,23258,23260,23264,23269,23274,23278,23285,23286,23293,23296,23297,23304,23319,23348,23321,23323,23325,23329,23333,23341,23352,23361,23371,23372,23378,23382,23390,23400,23406,23407,23420,23421,23422,23423,23425,23428,23430,23434,23438,23440,23441,23443,23444,23446,23464,23465,23468,23469,23471,23473,23474,23479,23482,23484,23488,23489,23501,23503,23510,23511,23512,23513,23514,23520,23535,23537,23540,23549,23564,23575,23582,23583,23587,23590,23593,23595,23596,23598,23600,23602,23605,23606,23641,23642,23644,23650,23651,23655,23656,23657,23661,23664,23668,23669,23674,23675,23676,23677,23687,23688,23690,23695,23698,23709,23711,23712,23714,23715,23718,23722,23730,23732,23733,23738,23753,23755,23762,23773,23767,23790,23793,23794,23796,23809,23814,23821,23826,23851,23843,23844,23846,23847,23857,23860,23865,23869,23871,23874,23875,23878,23880,23893,23889,23897,23882,23903,23904,23905,23906,23908,23914,23917,23920,23929,23930,23934,23935,23937,23939,23944,23946,23954,23955,23956,23957,23961,23963,23967,23968,23975,23979,23984,23988,23992,23993,24003,24007,24011,24016,24014,24024,24025,24032,24036,24041,24056,24057,24064,24071,24077,24082,24084,24085,24088,24095,24096,24110,24104,24114,24117,24126,24139,24144,24137,24145,24150,24152,24155,24156,24158,24168,24170,24171,24172,24173,24174,24176,24192,24203,24206,24226,24228,24229,24232,24234,24236,24241,24243,24253,24254,24255,24262,24268,24267,24270,24273,24274,24276,24277,24284,24286,24293,24299,24322,24326,24327,24328,24334,24345,24348,24349,24353,24354,24355,24356,24360,24363,24364,24366,24368,24372,24374,24379,24381,24383,24384,24388,24389,24391,24397,24400,24404,24408,24411,24416,24419,24420,24423,24431,24434,24436,24437,24440,24442,24445,24446,24457,24461,24463,24470,24476,24477,24482,24487,24491,24484,24492,24495,24496,24497,24504,24516,24519,24520,24521,24523,24528,24529,24530,24531,24532,24542,24545,24546,24552,24553,24554,24556,24557,24558,24559,24562,24563,24566,24570,24572,24583,24586,24589,24595,24596,24599,24600,24602,24607,24612,24621,24627,24629,24640,24647,24648,24649,24652,24657,24660,24662,24663,24669,24673,24679,24689,24702,24703,24706,24710,24712,24714,24718,24721,24723,24725,24728,24733,24734,24738,24740,24741,24744,24752,24753,24759,24763,24766,24770,24772,24776,24777,24778,24779,24782,24783,24788,24789,24793,24795,24797,24798,24802,24805,24818,24821,24824,24828,24829,24834,24839,24842,24844,24848,24849,24850,24851,24852,24854,24855,24857,24860,24862,24866,24874,24875,24880,24881,24885,24886,24887,24889,24897,24901,24902,24905,24926,24928,24940,24946,24952,24955,24956,24959,24960,24961,24963,24964,24971,24973,24978,24979,24983,24984,24988,24989,24991,24992,24997,25e3,25002,25005,25016,25017,25020,25024,25025,25026,25038,25039,25045,25052,25053,25054,25055,25057,25058,25063,25065,25061,25068,25069,25071,25089,25091,25092,25095,25107,25109,25116,25120,25122,25123,25127,25129,25131,25145,25149,25154,25155,25156,25158,25164,25168,25169,25170,25172,25174,25178,25180,25188,25197,25199,25203,25210,25213,25229,25230,25231,25232,25254,25256,25267,25270,25271,25274,25278,25279,25284,25294,25301,25302,25306,25322,25330,25332,25340,25341,25347,25348,25354,25355,25357,25360,25363,25366,25368,25385,25386,25389,25397,25398,25401,25404,25409,25410,25411,25412,25414,25418,25419,25422,25426,25427,25428,25432,25435,25445,25446,25452,25453,25457,25460,25461,25464,25468,25469,25471,25474,25476,25479,25482,25488,25492,25493,25497,25498,25502,25508,25510,25517,25518,25519,25533,25537,25541,25544,25550,25553,25555,25556,25557,25564,25568,25573,25578,25580,25586,25587,25589,25592,25593,25609,25610,25616,25618,25620,25624,25630,25632,25634,25636,25637,25641,25642,25647,25648,25653,25661,25663,25675,25679,25681,25682,25683,25684,25690,25691,25692,25693,25695,25696,25697,25699,25709,25715,25716,25723,25725,25733,25735,25743,25744,25745,25752,25753,25755,25757,25759,25761,25763,25766,25768,25772,25779,25789,25790,25791,25796,25801,25802,25803,25804,25806,25808,25809,25813,25815,25828,25829,25833,25834,25837,25840,25845,25847,25851,25855,25857,25860,25864,25865,25866,25871,25875,25876,25878,25881,25883,25886,25887,25890,25894,25897,25902,25905,25914,25916,25917,25923,25927,25929,25936,25938,25940,25951,25952,25959,25963,25978,25981,25985,25989,25994,26002,26005,26008,26013,26016,26019,26022,26030,26034,26035,26036,26047,26050,26056,26057,26062,26064,26068,26070,26072,26079,26096,26098,26100,26101,26105,26110,26111,26112,26116,26120,26121,26125,26129,26130,26133,26134,26141,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26161,26163,26169,26167,26176,26181,26182,26186,26188,26193,26190,26199,26200,26201,26203,26204,26208,26209,26363,26218,26219,26220,26238,26227,26229,26239,26231,26232,26233,26235,26240,26236,26251,26252,26253,26256,26258,26265,26266,26267,26268,26271,26272,26276,26285,26289,26290,26293,26299,26303,26304,26306,26307,26312,26316,26318,26319,26324,26331,26335,26344,26347,26348,26350,26362,26373,26375,26382,26387,26393,26396,26400,26402,26419,26430,26437,26439,26440,26444,26452,26453,26461,26470,26476,26478,26484,26486,26491,26497,26500,26510,26511,26513,26515,26518,26520,26521,26523,26544,26545,26546,26549,26555,26556,26557,26617,26560,26562,26563,26565,26568,26569,26578,26583,26585,26588,26593,26598,26608,26610,26614,26615,26706,26644,26649,26653,26655,26664,26663,26668,26669,26671,26672,26673,26675,26683,26687,26692,26693,26698,26700,26709,26711,26712,26715,26731,26734,26735,26736,26737,26738,26741,26745,26746,26747,26748,26754,26756,26758,26760,26774,26776,26778,26780,26785,26787,26789,26793,26794,26798,26802,26811,26821,26824,26828,26831,26832,26833,26835,26838,26841,26844,26845,26853,26856,26858,26859,26860,26861,26864,26865,26869,26870,26875,26876,26877,26886,26889,26890,26896,26897,26899,26902,26903,26929,26931,26933,26936,26939,26946,26949,26953,26958,26967,26971,26979,26980,26981,26982,26984,26985,26988,26992,26993,26994,27002,27003,27007,27008,27021,27026,27030,27032,27041,27045,27046,27048,27051,27053,27055,27063,27064,27066,27068,27077,27080,27089,27094,27095,27106,27109,27118,27119,27121,27123,27125,27134,27136,27137,27139,27151,27153,27157,27162,27165,27168,27172,27176,27184,27186,27188,27191,27195,27198,27199,27205,27206,27209,27210,27214,27216,27217,27218,27221,27222,27227,27236,27239,27242,27249,27251,27262,27265,27267,27270,27271,27273,27275,27281,27291,27293,27294,27295,27301,27307,27311,27312,27313,27316,27325,27326,27327,27334,27337,27336,27340,27344,27348,27349,27350,27356,27357,27364,27367,27372,27376,27377,27378,27388,27389,27394,27395,27398,27399,27401,27407,27408,27409,27415,27419,27422,27428,27432,27435,27436,27439,27445,27446,27451,27455,27462,27466,27469,27474,27478,27480,27485,27488,27495,27499,27502,27504,27509,27517,27518,27522,27525,27543,27547,27551,27552,27554,27555,27560,27561,27564,27565,27566,27568,27576,27577,27581,27582,27587,27588,27593,27596,27606,27610,27617,27619,27622,27623,27630,27633,27639,27641,27647,27650,27652,27653,27657,27661,27662,27664,27666,27673,27679,27686,27687,27688,27692,27694,27699,27701,27702,27706,27707,27711,27722,27723,27725,27727,27730,27732,27737,27739,27740,27755,27757,27759,27764,27766,27768,27769,27771,27781,27782,27783,27785,27796,27797,27799,27800,27804,27807,27824,27826,27828,27842,27846,27853,27855,27856,27857,27858,27860,27862,27866,27868,27872,27879,27881,27883,27884,27886,27890,27892,27908,27911,27914,27918,27919,27921,27923,27930,27942,27943,27944,27751,27950,27951,27953,27961,27964,27967,27991,27998,27999,28001,28005,28007,28015,28016,28028,28034,28039,28049,28050,28052,28054,28055,28056,28074,28076,28084,28087,28089,28093,28095,28100,28104,28106,28110,28111,28118,28123,28125,28127,28128,28130,28133,28137,28143,28144,28148,28150,28156,28160,28164,28190,28194,28199,28210,28214,28217,28219,28220,28228,28229,28232,28233,28235,28239,28241,28242,28243,28244,28247,28252,28253,28254,28258,28259,28264,28275,28283,28285,28301,28307,28313,28320,28327,28333,28334,28337,28339,28347,28351,28352,28353,28355,28359,28360,28362,28365,28366,28367,28395,28397,28398,28409,28411,28413,28420,28424,28426,28428,28429,28438,28440,28442,28443,28454,28457,28458,28463,28464,28467,28470,28475,28476,28461,28495,28497,28498,28499,28503,28505,28506,28509,28510,28513,28514,28520,28524,28541,28542,28547,28551,28552,28555,28556,28557,28560,28562,28563,28564,28566,28570,28575,28576,28581,28582,28583,28584,28590,28591,28592,28597,28598,28604,28613,28615,28616,28618,28634,28638,28648,28649,28656,28661,28665,28668,28669,28672,28677,28678,28679,28685,28695,28704,28707,28719,28724,28727,28729,28732,28739,28740,28744,28745,28746,28747,28756,28757,28765,28766,28750,28772,28773,28780,28782,28789,28790,28798,28801,28805,28806,28820,28821,28822,28823,28824,28827,28836,28843,28848,28849,28852,28855,28874,28881,28883,28884,28885,28886,28888,28892,28900,28922,28931,28932,28933,28934,28935,28939,28940,28943,28958,28960,28971,28973,28975,28976,28977,28984,28993,28997,28998,28999,29002,29003,29008,29010,29015,29018,29020,29022,29024,29032,29049,29056,29061,29063,29068,29074,29082,29083,29088,29090,29103,29104,29106,29107,29114,29119,29120,29121,29124,29131,29132,29139,29142,29145,29146,29148,29176,29182,29184,29191,29192,29193,29203,29207,29210,29213,29215,29220,29227,29231,29236,29240,29241,29249,29250,29251,29253,29262,29263,29264,29267,29269,29270,29274,29276,29278,29280,29283,29288,29291,29294,29295,29297,29303,29304,29307,29308,29311,29316,29321,29325,29326,29331,29339,29352,29357,29358,29361,29364,29374,29377,29383,29385,29388,29397,29398,29400,29407,29413,29427,29428,29434,29435,29438,29442,29444,29445,29447,29451,29453,29458,29459,29464,29465,29470,29474,29476,29479,29480,29484,29489,29490,29493,29498,29499,29501,29507,29517,29520,29522,29526,29528,29533,29534,29535,29536,29542,29543,29545,29547,29548,29550,29551,29553,29559,29561,29564,29568,29569,29571,29573,29574,29582,29584,29587,29589,29591,29592,29596,29598,29599,29600,29602,29605,29606,29610,29611,29613,29621,29623,29625,29628,29629,29631,29637,29638,29641,29643,29644,29647,29650,29651,29654,29657,29661,29665,29667,29670,29671,29673,29684,29685,29687,29689,29690,29691,29693,29695,29696,29697,29700,29703,29706,29713,29722,29723,29732,29734,29736,29737,29738,29739,29740,29741,29742,29743,29744,29745,29753,29760,29763,29764,29766,29767,29771,29773,29777,29778,29783,29789,29794,29798,29799,29800,29803,29805,29806,29809,29810,29824,29825,29829,29830,29831,29833,29839,29840,29841,29842,29848,29849,29850,29852,29855,29856,29857,29859,29862,29864,29865,29866,29867,29870,29871,29873,29874,29877,29881,29883,29887,29896,29897,29900,29904,29907,29912,29914,29915,29918,29919,29924,29928,29930,29931,29935,29940,29946,29947,29948,29951,29958,29970,29974,29975,29984,29985,29988,29991,29993,29994,29999,30006,30009,30013,30014,30015,30016,30019,30023,30024,30030,30032,30034,30039,30046,30047,30049,30063,30065,30073,30074,30075,30076,30077,30078,30081,30085,30096,30098,30099,30101,30105,30108,30114,30116,30132,30138,30143,30144,30145,30148,30150,30156,30158,30159,30167,30172,30175,30176,30177,30180,30183,30188,30190,30191,30193,30201,30208,30210,30211,30212,30215,30216,30218,30220,30223,30226,30227,30229,30230,30233,30235,30236,30237,30238,30243,30245,30246,30249,30253,30258,30259,30261,30264,30265,30266,30268,30282,30272,30273,30275,30276,30277,30281,30283,30293,30297,30303,30308,30309,30317,30318,30319,30321,30324,30337,30341,30348,30349,30357,30363,30364,30365,30367,30368,30370,30371,30372,30373,30374,30375,30376,30378,30381,30397,30401,30405,30409,30411,30412,30414,30420,30425,30432,30438,30440,30444,30448,30449,30454,30457,30460,30464,30470,30474,30478,30482,30484,30485,30487,30489,30490,30492,30498,30504,30509,30510,30511,30516,30517,30518,30521,30525,30526,30530,30533,30534,30538,30541,30542,30543,30546,30550,30551,30556,30558,30559,30560,30562,30564,30567,30570,30572,30576,30578,30579,30580,30586,30589,30592,30596,30604,30605,30612,30613,30614,30618,30623,30626,30631,30634,30638,30639,30641,30645,30654,30659,30665,30673,30674,30677,30681,30686,30687,30688,30692,30694,30698,30700,30704,30705,30708,30712,30715,30725,30726,30729,30733,30734,30737,30749,30753,30754,30755,30765,30766,30768,30773,30775,30787,30788,30791,30792,30796,30798,30802,30812,30814,30816,30817,30819,30820,30824,30826,30830,30842,30846,30858,30863,30868,30872,30881,30877,30878,30879,30884,30888,30892,30893,30896,30897,30898,30899,30907,30909,30911,30919,30920,30921,30924,30926,30930,30931,30933,30934,30948,30939,30943,30944,30945,30950,30954,30962,30963,30976,30966,30967,30970,30971,30975,30982,30988,30992,31002,31004,31006,31007,31008,31013,31015,31017,31021,31025,31028,31029,31035,31037,31039,31044,31045,31046,31050,31051,31055,31057,31060,31064,31067,31068,31079,31081,31083,31090,31097,31099,31100,31102,31115,31116,31121,31123,31124,31125,31126,31128,31131,31132,31137,31144,31145,31147,31151,31153,31156,31160,31163,31170,31172,31175,31176,31178,31183,31188,31190,31194,31197,31198,31200,31202,31205,31210,31211,31213,31217,31224,31228,31234,31235,31239,31241,31242,31244,31249,31253,31259,31262,31265,31271,31275,31277,31279,31280,31284,31285,31288,31289,31290,31300,31301,31303,31304,31308,31317,31318,31321,31324,31325,31327,31328,31333,31335,31338,31341,31349,31352,31358,31360,31362,31365,31366,31370,31371,31376,31377,31380,31390,31392,31395,31404,31411,31413,31417,31419,31420,31430,31433,31436,31438,31441,31451,31464,31465,31467,31468,31473,31476,31483,31485,31486,31495,31508,31519,31523,31527,31529,31530,31531,31533,31534,31535,31536,31537,31540,31549,31551,31552,31553,31559,31566,31573,31584,31588,31590,31593,31594,31597,31599,31602,31603,31607,31620,31625,31630,31632,31633,31638,31643,31646,31648,31653,31660,31663,31664,31666,31669,31670,31674,31675,31676,31677,31682,31685,31688,31690,31700,31702,31703,31705,31706,31707,31720,31722,31730,31732,31733,31736,31737,31738,31740,31742,31745,31746,31747,31748,31750,31753,31755,31756,31758,31759,31769,31771,31776,31781,31782,31784,31788,31793,31795,31796,31798,31801,31802,31814,31818,31829,31825,31826,31827,31833,31834,31835,31836,31837,31838,31841,31843,31847,31849,31853,31854,31856,31858,31865,31868,31869,31878,31879,31887,31892,31902,31904,31910,31920,31926,31927,31930,31931,31932,31935,31940,31943,31944,31945,31949,31951,31955,31956,31957,31959,31961,31962,31965,31974,31977,31979,31989,32003,32007,32008,32009,32015,32017,32018,32019,32022,32029,32030,32035,32038,32042,32045,32049,32060,32061,32062,32064,32065,32071,32072,32077,32081,32083,32087,32089,32090,32092,32093,32101,32103,32106,32112,32120,32122,32123,32127,32129,32130,32131,32133,32134,32136,32139,32140,32141,32145,32150,32151,32157,32158,32166,32167,32170,32179,32182,32183,32185,32194,32195,32196,32197,32198,32204,32205,32206,32215,32217,32256,32226,32229,32230,32234,32235,32237,32241,32245,32246,32249,32250,32264,32272,32273,32277,32279,32284,32285,32288,32295,32296,32300,32301,32303,32307,32310,32319,32324,32325,32327,32334,32336,32338,32344,32351,32353,32354,32357,32363,32366,32367,32371,32376,32382,32385,32390,32391,32394,32397,32401,32405,32408,32410,32413,32414,32572,32571,32573,32574,32575,32579,32580,32583,32591,32594,32595,32603,32604,32605,32609,32611,32612,32613,32614,32621,32625,32637,32638,32639,32640,32651,32653,32655,32656,32657,32662,32663,32668,32673,32674,32678,32682,32685,32692,32700,32703,32704,32707,32712,32718,32719,32731,32735,32739,32741,32744,32748,32750,32751,32754,32762,32765,32766,32767,32775,32776,32778,32781,32782,32783,32785,32787,32788,32790,32797,32798,32799,32800,32804,32806,32812,32814,32816,32820,32821,32823,32825,32826,32828,32830,32832,32836,32864,32868,32870,32877,32881,32885,32897,32904,32910,32924,32926,32934,32935,32939,32952,32953,32968,32973,32975,32978,32980,32981,32983,32984,32992,33005,33006,33008,33010,33011,33014,33017,33018,33022,33027,33035,33046,33047,33048,33052,33054,33056,33060,33063,33068,33072,33077,33082,33084,33093,33095,33098,33100,33106,33111,33120,33121,33127,33128,33129,33133,33135,33143,33153,33168,33156,33157,33158,33163,33166,33174,33176,33179,33182,33186,33198,33202,33204,33211,33227,33219,33221,33226,33230,33231,33237,33239,33243,33245,33246,33249,33252,33259,33260,33264,33265,33266,33269,33270,33272,33273,33277,33279,33280,33283,33295,33299,33300,33305,33306,33309,33313,33314,33320,33330,33332,33338,33347,33348,33349,33350,33355,33358,33359,33361,33366,33372,33376,33379,33383,33389,33396,33403,33405,33407,33408,33409,33411,33412,33415,33417,33418,33422,33425,33428,33430,33432,33434,33435,33440,33441,33443,33444,33447,33448,33449,33450,33454,33456,33458,33460,33463,33466,33468,33470,33471,33478,33488,33493,33498,33504,33506,33508,33512,33514,33517,33519,33526,33527,33533,33534,33536,33537,33543,33544,33546,33547,33620,33563,33565,33566,33567,33569,33570,33580,33581,33582,33584,33587,33591,33594,33596,33597,33602,33603,33604,33607,33613,33614,33617,33621,33622,33623,33648,33656,33661,33663,33664,33666,33668,33670,33677,33682,33684,33685,33688,33689,33691,33692,33693,33702,33703,33705,33708,33726,33727,33728,33735,33737,33743,33744,33745,33748,33757,33619,33768,33770,33782,33784,33785,33788,33793,33798,33802,33807,33809,33813,33817,33709,33839,33849,33861,33863,33864,33866,33869,33871,33873,33874,33878,33880,33881,33882,33884,33888,33892,33893,33895,33898,33904,33907,33908,33910,33912,33916,33917,33921,33925,33938,33939,33941,33950,33958,33960,33961,33962,33967,33969,33972,33978,33981,33982,33984,33986,33991,33992,33996,33999,34003,34012,34023,34026,34031,34032,34033,34034,34039,34098,34042,34043,34045,34050,34051,34055,34060,34062,34064,34076,34078,34082,34083,34084,34085,34087,34090,34091,34095,34099,34100,34102,34111,34118,34127,34128,34129,34130,34131,34134,34137,34140,34141,34142,34143,34144,34145,34146,34148,34155,34159,34169,34170,34171,34173,34175,34177,34181,34182,34185,34187,34188,34191,34195,34200,34205,34207,34208,34210,34213,34215,34228,34230,34231,34232,34236,34237,34238,34239,34242,34247,34250,34251,34254,34221,34264,34266,34271,34272,34278,34280,34285,34291,34294,34300,34303,34304,34308,34309,34317,34318,34320,34321,34322,34328,34329,34331,34334,34337,34343,34345,34358,34360,34362,34364,34365,34368,34370,34374,34386,34387,34390,34391,34392,34393,34397,34400,34401,34402,34403,34404,34409,34412,34415,34421,34422,34423,34426,34445,34449,34454,34456,34458,34460,34465,34470,34471,34472,34477,34481,34483,34484,34485,34487,34488,34489,34495,34496,34497,34499,34501,34513,34514,34517,34519,34522,34524,34528,34531,34533,34535,34440,34554,34556,34557,34564,34565,34567,34571,34574,34575,34576,34579,34580,34585,34590,34591,34593,34595,34600,34606,34607,34609,34610,34617,34618,34620,34621,34622,34624,34627,34629,34637,34648,34653,34657,34660,34661,34671,34673,34674,34683,34691,34692,34693,34694,34695,34696,34697,34699,34700,34704,34707,34709,34711,34712,34713,34718,34720,34723,34727,34732,34733,34734,34737,34741,34750,34751,34753,34760,34761,34762,34766,34773,34774,34777,34778,34780,34783,34786,34787,34788,34794,34795,34797,34801,34803,34808,34810,34815,34817,34819,34822,34825,34826,34827,34832,34841,34834,34835,34836,34840,34842,34843,34844,34846,34847,34856,34861,34862,34864,34866,34869,34874,34876,34881,34883,34885,34888,34889,34890,34891,34894,34897,34901,34902,34904,34906,34908,34911,34912,34916,34921,34929,34937,34939,34944,34968,34970,34971,34972,34975,34976,34984,34986,35002,35005,35006,35008,35018,35019,35020,35021,35022,35025,35026,35027,35035,35038,35047,35055,35056,35057,35061,35063,35073,35078,35085,35086,35087,35093,35094,35096,35097,35098,35100,35104,35110,35111,35112,35120,35121,35122,35125,35129,35130,35134,35136,35138,35141,35142,35145,35151,35154,35159,35162,35163,35164,35169,35170,35171,35179,35182,35184,35187,35189,35194,35195,35196,35197,35209,35213,35216,35220,35221,35227,35228,35231,35232,35237,35248,35252,35253,35254,35255,35260,35284,35285,35286,35287,35288,35301,35305,35307,35309,35313,35315,35318,35321,35325,35327,35332,35333,35335,35343,35345,35346,35348,35349,35358,35360,35362,35364,35366,35371,35372,35375,35381,35383,35389,35390,35392,35395,35397,35399,35401,35405,35406,35411,35414,35415,35416,35420,35421,35425,35429,35431,35445,35446,35447,35449,35450,35451,35454,35455,35456,35459,35462,35467,35471,35472,35474,35478,35479,35481,35487,35495,35497,35502,35503,35507,35510,35511,35515,35518,35523,35526,35528,35529,35530,35537,35539,35540,35541,35543,35549,35551,35564,35568,35572,35573,35574,35580,35583,35589,35590,35595,35601,35612,35614,35615,35594,35629,35632,35639,35644,35650,35651,35652,35653,35654,35656,35666,35667,35668,35673,35661,35678,35683,35693,35702,35704,35705,35708,35710,35713,35716,35717,35723,35725,35727,35732,35733,35740,35742,35743,35896,35897,35901,35902,35909,35911,35913,35915,35919,35921,35923,35924,35927,35928,35931,35933,35929,35939,35940,35942,35944,35945,35949,35955,35957,35958,35963,35966,35974,35975,35979,35984,35986,35987,35993,35995,35996,36004,36025,36026,36037,36038,36041,36043,36047,36054,36053,36057,36061,36065,36072,36076,36079,36080,36082,36085,36087,36088,36094,36095,36097,36099,36105,36114,36119,36123,36197,36201,36204,36206,36223,36226,36228,36232,36237,36240,36241,36245,36254,36255,36256,36262,36267,36268,36271,36274,36277,36279,36281,36283,36288,36293,36294,36295,36296,36298,36302,36305,36308,36309,36311,36313,36324,36325,36327,36332,36336,36284,36337,36338,36340,36349,36353,36356,36357,36358,36363,36369,36372,36374,36384,36385,36386,36387,36390,36391,36401,36403,36406,36407,36408,36409,36413,36416,36417,36427,36429,36430,36431,36436,36443,36444,36445,36446,36449,36450,36457,36460,36461,36463,36464,36465,36473,36474,36475,36482,36483,36489,36496,36498,36501,36506,36507,36509,36510,36514,36519,36521,36525,36526,36531,36533,36538,36539,36544,36545,36547,36548,36551,36559,36561,36564,36572,36584,36590,36592,36593,36599,36601,36602,36589,36608,36610,36615,36616,36623,36624,36630,36631,36632,36638,36640,36641,36643,36645,36647,36648,36652,36653,36654,36660,36661,36662,36663,36666,36672,36673,36675,36679,36687,36689,36690,36691,36692,36693,36696,36701,36702,36709,36765,36768,36769,36772,36773,36774,36789,36790,36792,36798,36800,36801,36806,36810,36811,36813,36816,36818,36819,36821,36832,36835,36836,36840,36846,36849,36853,36854,36859,36862,36866,36868,36872,36876,36888,36891,36904,36905,36911,36906,36908,36909,36915,36916,36919,36927,36931,36932,36940,36955,36957,36962,36966,36967,36972,36976,36980,36985,36997,37e3,37003,37004,37006,37008,37013,37015,37016,37017,37019,37024,37025,37026,37029,37040,37042,37043,37044,37046,37053,37068,37054,37059,37060,37061,37063,37064,37077,37079,37080,37081,37084,37085,37087,37093,37074,37110,37099,37103,37104,37108,37118,37119,37120,37124,37125,37126,37128,37133,37136,37140,37142,37143,37144,37146,37148,37150,37152,37157,37154,37155,37159,37161,37166,37167,37169,37172,37174,37175,37177,37178,37180,37181,37187,37191,37192,37199,37203,37207,37209,37210,37211,37217,37220,37223,37229,37236,37241,37242,37243,37249,37251,37253,37254,37258,37262,37265,37267,37268,37269,37272,37278,37281,37286,37288,37292,37293,37294,37296,37297,37298,37299,37302,37307,37308,37309,37311,37314,37315,37317,37331,37332,37335,37337,37338,37342,37348,37349,37353,37354,37356,37357,37358,37359,37360,37361,37367,37369,37371,37373,37376,37377,37380,37381,37382,37383,37385,37386,37388,37392,37394,37395,37398,37400,37404,37405,37411,37412,37413,37414,37416,37422,37423,37424,37427,37429,37430,37432,37433,37434,37436,37438,37440,37442,37443,37446,37447,37450,37453,37454,37455,37457,37464,37465,37468,37469,37472,37473,37477,37479,37480,37481,37486,37487,37488,37493,37494,37495,37496,37497,37499,37500,37501,37503,37512,37513,37514,37517,37518,37522,37527,37529,37535,37536,37540,37541,37543,37544,37547,37551,37554,37558,37560,37562,37563,37564,37565,37567,37568,37569,37570,37571,37573,37574,37575,37576,37579,37580,37581,37582,37584,37587,37589,37591,37592,37593,37596,37597,37599,37600,37601,37603,37605,37607,37608,37612,37614,37616,37625,37627,37631,37632,37634,37640,37645,37649,37652,37653,37660,37661,37662,37663,37665,37668,37669,37671,37673,37674,37683,37684,37686,37687,37703,37704,37705,37712,37713,37714,37717,37719,37720,37722,37726,37732,37733,37735,37737,37738,37741,37743,37744,37745,37747,37748,37750,37754,37757,37759,37760,37761,37762,37768,37770,37771,37773,37775,37778,37781,37784,37787,37790,37793,37795,37796,37798,37800,37803,37812,37813,37814,37818,37801,37825,37828,37829,37830,37831,37833,37834,37835,37836,37837,37843,37849,37852,37854,37855,37858,37862,37863,37881,37879,37880,37882,37883,37885,37889,37890,37892,37896,37897,37901,37902,37903,37909,37910,37911,37919,37934,37935,37937,37938,37939,37940,37947,37951,37949,37955,37957,37960,37962,37964,37973,37977,37980,37983,37985,37987,37992,37995,37997,37998,37999,38001,38002,38020,38019,38264,38265,38270,38276,38280,38284,38285,38286,38301,38302,38303,38305,38310,38313,38315,38316,38324,38326,38330,38333,38335,38342,38344,38345,38347,38352,38353,38354,38355,38361,38362,38365,38366,38367,38368,38372,38374,38429,38430,38434,38436,38437,38438,38444,38449,38451,38455,38456,38457,38458,38460,38461,38465,38482,38484,38486,38487,38488,38497,38510,38516,38523,38524,38526,38527,38529,38530,38531,38532,38537,38545,38550,38554,38557,38559,38564,38565,38566,38569,38574,38575,38579,38586,38602,38610,23986,38616,38618,38621,38622,38623,38633,38639,38641,38650,38658,38659,38661,38665,38682,38683,38685,38689,38690,38691,38696,38705,38707,38721,38723,38730,38734,38735,38741,38743,38744,38746,38747,38755,38759,38762,38766,38771,38774,38775,38776,38779,38781,38783,38784,38793,38805,38806,38807,38809,38810,38814,38815,38818,38828,38830,38833,38834,38837,38838,38840,38841,38842,38844,38846,38847,38849,38852,38853,38855,38857,38858,38860,38861,38862,38864,38865,38868,38871,38872,38873,38877,38878,38880,38875,38881,38884,38895,38897,38900,38903,38904,38906,38919,38922,38937,38925,38926,38932,38934,38940,38942,38944,38947,38950,38955,38958,38959,38960,38962,38963,38965,38949,38974,38980,38983,38986,38993,38994,38995,38998,38999,39001,39002,39010,39011,39013,39014,39018,39020,39083,39085,39086,39088,39092,39095,39096,39098,39099,39103,39106,39109,39112,39116,39137,39139,39141,39142,39143,39146,39155,39158,39170,39175,39176,39185,39189,39190,39191,39194,39195,39196,39199,39202,39206,39207,39211,39217,39218,39219,39220,39221,39225,39226,39227,39228,39232,39233,39238,39239,39240,39245,39246,39252,39256,39257,39259,39260,39262,39263,39264,39323,39325,39327,39334,39344,39345,39346,39349,39353,39354,39357,39359,39363,39369,39379,39380,39385,39386,39388,39390,39399,39402,39403,39404,39408,39412,39413,39417,39421,39422,39426,39427,39428,39435,39436,39440,39441,39446,39454,39456,39458,39459,39460,39463,39469,39470,39475,39477,39478,39480,39495,39489,39492,39498,39499,39500,39502,39505,39508,39510,39517,39594,39596,39598,39599,39602,39604,39605,39606,39609,39611,39614,39615,39617,39619,39622,39624,39630,39632,39634,39637,39638,39639,39643,39644,39648,39652,39653,39655,39657,39660,39666,39667,39669,39673,39674,39677,39679,39680,39681,39682,39683,39684,39685,39688,39689,39691,39692,39693,39694,39696,39698,39702,39705,39707,39708,39712,39718,39723,39725,39731,39732,39733,39735,39737,39738,39741,39752,39755,39756,39765,39766,39767,39771,39774,39777,39779,39781,39782,39784,39786,39787,39788,39789,39790,39795,39797,39799,39800,39801,39807,39808,39812,39813,39814,39815,39817,39818,39819,39821,39823,39824,39828,39834,39837,39838,39846,39847,39849,39852,39856,39857,39858,39863,39864,39867,39868,39870,39871,39873,39879,39880,39886,39888,39895,39896,39901,39903,39909,39911,39914,39915,39919,39923,39927,39928,39929,39930,39933,39935,39936,39938,39947,39951,39953,39958,39960,39961,39962,39964,39966,39970,39971,39974,39975,39976,39977,39978,39985,39989,39990,39991,39997,40001,40003,40004,40005,40009,40010,40014,40015,40016,40019,40020,40022,40024,40027,40029,40030,40031,40035,40041,40042,40028,40043,40040,40046,40048,40050,40053,40055,40059,40166,40178,40183,40185,40203,40194,40209,40215,40216,40220,40221,40222,40239,40240,40242,40243,40244,40250,40252,40261,40253,40258,40259,40263,40266,40275,40276,40287,40291,40290,40293,40297,40298,40299,40304,40310,40311,40315,40316,40318,40323,40324,40326,40330,40333,40334,40338,40339,40341,40342,40343,40344,40353,40362,40364,40366,40369,40373,40377,40380,40383,40387,40391,40393,40394,40404,40405,40406,40407,40410,40414,40415,40416,40421,40423,40425,40427,40430,40432,40435,40436,40446,40458,40450,40455,40462,40464,40465,40466,40469,40470,40473,40476,40477,40570,40571,40572,40576,40578,40579,40580,40581,40583,40590,40591,40598,40600,40603,40606,40612,40616,40620,40622,40623,40624,40627,40628,40629,40646,40648,40651,40661,40671,40676,40679,40684,40685,40686,40688,40689,40690,40693,40696,40703,40706,40707,40713,40719,40720,40721,40722,40724,40726,40727,40729,40730,40731,40735,40738,40742,40746,40747,40751,40753,40754,40756,40759,40761,40762,40764,40765,40767,40769,40771,40772,40773,40774,40775,40787,40789,40790,40791,40792,40794,40797,40798,40808,40809,40813,40814,40815,40816,40817,40819,40821,40826,40829,40847,40848,40849,40850,40852,40854,40855,40862,40865,40866,40867,40869,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],ibm866:[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,9617,9618,9619,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9561,9560,9554,9555,9579,9578,9496,9484,9608,9604,9612,9616,9600,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1025,1105,1028,1108,1031,1111,1038,1118,176,8729,183,8730,8470,164,9632,160],"iso-8859-2":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,728,321,164,317,346,167,168,352,350,356,377,173,381,379,176,261,731,322,180,318,347,711,184,353,351,357,378,733,382,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"iso-8859-3":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,294,728,163,164,null,292,167,168,304,350,286,308,173,null,379,176,295,178,179,180,181,293,183,184,305,351,287,309,189,null,380,192,193,194,null,196,266,264,199,200,201,202,203,204,205,206,207,null,209,210,211,212,288,214,215,284,217,218,219,220,364,348,223,224,225,226,null,228,267,265,231,232,233,234,235,236,237,238,239,null,241,242,243,244,289,246,247,285,249,250,251,252,365,349,729],"iso-8859-4":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,312,342,164,296,315,167,168,352,274,290,358,173,381,175,176,261,731,343,180,297,316,711,184,353,275,291,359,330,382,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,298,272,325,332,310,212,213,214,215,216,370,218,219,220,360,362,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,299,273,326,333,311,244,245,246,247,248,371,250,251,252,361,363,729],"iso-8859-5":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,173,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8470,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,167,1118,1119],"iso-8859-6":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,null,null,164,null,null,null,null,null,null,null,1548,173,null,null,null,null,null,null,null,null,null,null,null,null,null,1563,null,null,null,1567,null,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,null,null,null,null,null,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,null,null,null,null,null,null,null,null,null,null,null,null,null],"iso-8859-7":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8216,8217,163,8364,8367,166,167,168,169,890,171,172,173,null,8213,176,177,178,179,900,901,902,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"iso-8859-8":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,162,163,164,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8215,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"iso-8859-10":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,274,290,298,296,310,167,315,272,352,358,381,173,362,330,176,261,275,291,299,297,311,183,316,273,353,359,382,8213,363,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,207,208,325,332,211,212,213,214,360,216,370,218,219,220,221,222,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,239,240,326,333,243,244,245,246,361,248,371,250,251,252,253,254,312],"iso-8859-13":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8221,162,163,164,8222,166,167,216,169,342,171,172,173,174,198,176,177,178,179,8220,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,8217],"iso-8859-14":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,7682,7683,163,266,267,7690,167,7808,169,7810,7691,7922,173,174,376,7710,7711,288,289,7744,7745,182,7766,7809,7767,7811,7776,7923,7812,7813,7777,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,372,209,210,211,212,213,214,7786,216,217,218,219,220,221,374,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,373,241,242,243,244,245,246,7787,248,249,250,251,252,253,375,255],"iso-8859-15":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,8364,165,352,167,353,169,170,171,172,173,174,175,176,177,178,179,381,181,182,183,382,185,186,187,338,339,376,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"iso-8859-16":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,261,321,8364,8222,352,167,353,169,536,171,377,173,378,379,176,177,268,322,381,8221,182,183,382,269,537,187,338,339,376,380,192,193,194,258,196,262,198,199,200,201,202,203,204,205,206,207,272,323,210,211,212,336,214,346,368,217,218,219,220,280,538,223,224,225,226,259,228,263,230,231,232,233,234,235,236,237,238,239,273,324,242,243,244,337,246,347,369,249,250,251,252,281,539,255],"koi8-r":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,1025,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],"koi8-u":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,1108,9556,1110,1111,9559,9560,9561,9562,9563,1169,1118,9566,9567,9568,9569,1025,1028,9571,1030,1031,9574,9575,9576,9577,9578,1168,1038,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],macintosh:[196,197,199,201,209,214,220,225,224,226,228,227,229,231,233,232,234,235,237,236,238,239,241,243,242,244,246,245,250,249,251,252,8224,176,162,163,167,8226,182,223,174,169,8482,180,168,8800,198,216,8734,177,8804,8805,165,181,8706,8721,8719,960,8747,170,186,937,230,248,191,161,172,8730,402,8776,8710,171,187,8230,160,192,195,213,338,339,8211,8212,8220,8221,8216,8217,247,9674,255,376,8260,8364,8249,8250,64257,64258,8225,183,8218,8222,8240,194,202,193,203,200,205,206,207,204,211,212,63743,210,218,219,217,305,710,732,175,728,729,730,184,733,731,711],"windows-874":[8364,129,130,131,132,8230,134,135,136,137,138,139,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,153,154,155,156,157,158,159,160,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3631,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,null,null,null,null,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,null,null,null,null],"windows-1250":[8364,129,8218,131,8222,8230,8224,8225,136,8240,352,8249,346,356,381,377,144,8216,8217,8220,8221,8226,8211,8212,152,8482,353,8250,347,357,382,378,160,711,728,321,164,260,166,167,168,169,350,171,172,173,174,379,176,177,731,322,180,181,182,183,184,261,351,187,317,733,318,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"windows-1251":[1026,1027,8218,1107,8222,8230,8224,8225,8364,8240,1033,8249,1034,1036,1035,1039,1106,8216,8217,8220,8221,8226,8211,8212,152,8482,1113,8250,1114,1116,1115,1119,160,1038,1118,1032,164,1168,166,167,1025,169,1028,171,172,173,174,1031,176,177,1030,1110,1169,181,182,183,1105,8470,1108,187,1112,1029,1109,1111,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103],"windows-1252":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,381,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,382,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"windows-1253":[8364,129,8218,402,8222,8230,8224,8225,136,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,157,158,159,160,901,902,163,164,165,166,167,168,169,null,171,172,173,174,8213,176,177,178,179,900,181,182,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"windows-1254":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,286,209,210,211,212,213,214,215,216,217,218,219,220,304,350,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,287,241,242,243,244,245,246,247,248,249,250,251,252,305,351,255],"windows-1255":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,156,157,158,159,160,161,162,163,8362,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,191,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1520,1521,1522,1523,1524,null,null,null,null,null,null,null,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"windows-1256":[8364,1662,8218,402,8222,8230,8224,8225,710,8240,1657,8249,338,1670,1688,1672,1711,8216,8217,8220,8221,8226,8211,8212,1705,8482,1681,8250,339,8204,8205,1722,160,1548,162,163,164,165,166,167,168,169,1726,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,1563,187,188,189,190,1567,1729,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,215,1591,1592,1593,1594,1600,1601,1602,1603,224,1604,226,1605,1606,1607,1608,231,232,233,234,235,1609,1610,238,239,1611,1612,1613,1614,244,1615,1616,247,1617,249,1618,251,252,8206,8207,1746],"windows-1257":[8364,129,8218,131,8222,8230,8224,8225,136,8240,138,8249,140,168,711,184,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,175,731,159,160,null,162,163,164,null,166,167,216,169,342,171,172,173,174,198,176,177,178,179,180,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,729],"windows-1258":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,258,196,197,198,199,200,201,202,203,768,205,206,207,272,209,777,211,212,416,214,215,216,217,218,219,220,431,771,223,224,225,226,259,228,229,230,231,232,233,234,235,769,237,238,239,273,241,803,243,244,417,246,247,248,249,250,251,252,432,8363,255],"x-mac-cyrillic":[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,8224,176,1168,163,167,8226,182,1030,174,169,8482,1026,1106,8800,1027,1107,8734,177,8804,8805,1110,181,1169,1032,1028,1108,1031,1111,1033,1113,1034,1114,1112,1029,172,8730,402,8776,8710,171,187,8230,160,1035,1115,1036,1116,1109,8211,8212,8220,8221,8216,8217,247,8222,1038,1118,1039,1119,8470,1025,1105,1103,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,8364]}}(this||{}),function(e){"use strict";function t(e,t,A){return t<=e&&e<=A}"undefined"!=typeof module&&module.exports&&!e["encoding-indexes"]&&(e["encoding-indexes"]=require("./encoding-indexes.js")["encoding-indexes"]);var A=Math.floor;function n(e){if(void 0===e)return{};if(e===Object(e))return e;throw TypeError("Could not convert argument to dictionary")}function l(e){return 0<=e&&e<=127}var r=l,a=-1;function o(e){this.tokens=[].slice.call(e),this.tokens.reverse()}o.prototype={endOfStream:function(){return!this.tokens.length},read:function(){return this.tokens.length?this.tokens.pop():a},prepend:function(e){if(Array.isArray(e))for(var t=e;t.length;)this.tokens.push(t.pop());else this.tokens.push(e)},push:function(e){if(Array.isArray(e))for(var t=e;t.length;)this.tokens.unshift(t.shift());else this.tokens.unshift(e)}};var s=-1;function i(e,t){if(e)throw TypeError("Decoder error");return t||65533}function u(e){throw TypeError("The code point "+e+" could not be encoded.")}function c(e){return e=String(e).trim().toLowerCase(),Object.prototype.hasOwnProperty.call(f,e)?f[e]:null}var h=[{encodings:[{labels:["unicode-1-1-utf-8","utf-8","utf8"],name:"UTF-8"}],heading:"The Encoding"},{encodings:[{labels:["866","cp866","csibm866","ibm866"],name:"IBM866"},{labels:["csisolatin2","iso-8859-2","iso-ir-101","iso8859-2","iso88592","iso_8859-2","iso_8859-2:1987","l2","latin2"],name:"ISO-8859-2"},{labels:["csisolatin3","iso-8859-3","iso-ir-109","iso8859-3","iso88593","iso_8859-3","iso_8859-3:1988","l3","latin3"],name:"ISO-8859-3"},{labels:["csisolatin4","iso-8859-4","iso-ir-110","iso8859-4","iso88594","iso_8859-4","iso_8859-4:1988","l4","latin4"],name:"ISO-8859-4"},{labels:["csisolatincyrillic","cyrillic","iso-8859-5","iso-ir-144","iso8859-5","iso88595","iso_8859-5","iso_8859-5:1988"],name:"ISO-8859-5"},{labels:["arabic","asmo-708","csiso88596e","csiso88596i","csisolatinarabic","ecma-114","iso-8859-6","iso-8859-6-e","iso-8859-6-i","iso-ir-127","iso8859-6","iso88596","iso_8859-6","iso_8859-6:1987"],name:"ISO-8859-6"},{labels:["csisolatingreek","ecma-118","elot_928","greek","greek8","iso-8859-7","iso-ir-126","iso8859-7","iso88597","iso_8859-7","iso_8859-7:1987","sun_eu_greek"],name:"ISO-8859-7"},{labels:["csiso88598e","csisolatinhebrew","hebrew","iso-8859-8","iso-8859-8-e","iso-ir-138","iso8859-8","iso88598","iso_8859-8","iso_8859-8:1988","visual"],name:"ISO-8859-8"},{labels:["csiso88598i","iso-8859-8-i","logical"],name:"ISO-8859-8-I"},{labels:["csisolatin6","iso-8859-10","iso-ir-157","iso8859-10","iso885910","l6","latin6"],name:"ISO-8859-10"},{labels:["iso-8859-13","iso8859-13","iso885913"],name:"ISO-8859-13"},{labels:["iso-8859-14","iso8859-14","iso885914"],name:"ISO-8859-14"},{labels:["csisolatin9","iso-8859-15","iso8859-15","iso885915","iso_8859-15","l9"],name:"ISO-8859-15"},{labels:["iso-8859-16"],name:"ISO-8859-16"},{labels:["cskoi8r","koi","koi8","koi8-r","koi8_r"],name:"KOI8-R"},{labels:["koi8-ru","koi8-u"],name:"KOI8-U"},{labels:["csmacintosh","mac","macintosh","x-mac-roman"],name:"macintosh"},{labels:["dos-874","iso-8859-11","iso8859-11","iso885911","tis-620","windows-874"],name:"windows-874"},{labels:["cp1250","windows-1250","x-cp1250"],name:"windows-1250"},{labels:["cp1251","windows-1251","x-cp1251"],name:"windows-1251"},{labels:["ansi_x3.4-1968","ascii","cp1252","cp819","csisolatin1","ibm819","iso-8859-1","iso-ir-100","iso8859-1","iso88591","iso_8859-1","iso_8859-1:1987","l1","latin1","us-ascii","windows-1252","x-cp1252"],name:"windows-1252"},{labels:["cp1253","windows-1253","x-cp1253"],name:"windows-1253"},{labels:["cp1254","csisolatin5","iso-8859-9","iso-ir-148","iso8859-9","iso88599","iso_8859-9","iso_8859-9:1989","l5","latin5","windows-1254","x-cp1254"],name:"windows-1254"},{labels:["cp1255","windows-1255","x-cp1255"],name:"windows-1255"},{labels:["cp1256","windows-1256","x-cp1256"],name:"windows-1256"},{labels:["cp1257","windows-1257","x-cp1257"],name:"windows-1257"},{labels:["cp1258","windows-1258","x-cp1258"],name:"windows-1258"},{labels:["x-mac-cyrillic","x-mac-ukrainian"],name:"x-mac-cyrillic"}],heading:"Legacy single-byte encodings"},{encodings:[{labels:["chinese","csgb2312","csiso58gb231280","gb2312","gb_2312","gb_2312-80","gbk","iso-ir-58","x-gbk"],name:"GBK"},{labels:["gb18030"],name:"gb18030"}],heading:"Legacy multi-byte Chinese (simplified) encodings"},{encodings:[{labels:["big5","big5-hkscs","cn-big5","csbig5","x-x-big5"],name:"Big5"}],heading:"Legacy multi-byte Chinese (traditional) encodings"},{encodings:[{labels:["cseucpkdfmtjapanese","euc-jp","x-euc-jp"],name:"EUC-JP"},{labels:["csiso2022jp","iso-2022-jp"],name:"ISO-2022-JP"},{labels:["csshiftjis","ms932","ms_kanji","shift-jis","shift_jis","sjis","windows-31j","x-sjis"],name:"Shift_JIS"}],heading:"Legacy multi-byte Japanese encodings"},{encodings:[{labels:["cseuckr","csksc56011987","euc-kr","iso-ir-149","korean","ks_c_5601-1987","ks_c_5601-1989","ksc5601","ksc_5601","windows-949"],name:"EUC-KR"}],heading:"Legacy multi-byte Korean encodings"},{encodings:[{labels:["csiso2022kr","hz-gb-2312","iso-2022-cn","iso-2022-cn-ext","iso-2022-kr"],name:"replacement"},{labels:["utf-16be"],name:"UTF-16BE"},{labels:["utf-16","utf-16le"],name:"UTF-16LE"},{labels:["x-user-defined"],name:"x-user-defined"}],heading:"Legacy miscellaneous encodings"}],f={};h.forEach((function(e){e.encodings.forEach((function(e){e.labels.forEach((function(t){f[t]=e}))}))}));var g,d,p={},B={};function E(e,t){return t&&t[e]||null}function m(e,t){var A=t.indexOf(e);return-1===A?null:A}function b(t){if(!("encoding-indexes"in e))throw Error("Indexes missing. Did you forget to include encoding-indexes.js first?");return e["encoding-indexes"][t]}var y="utf-8";function w(e,t){if(!(this instanceof w))throw TypeError("Called as a function. Did you forget 'new'?");e=void 0!==e?String(e):y,t=n(t),this._encoding=null,this._decoder=null,this._ignoreBOM=!1,this._BOMseen=!1,this._error_mode="replacement",this._do_not_flush=!1;var A=c(e);if(null===A||"replacement"===A.name)throw RangeError("Unknown encoding: "+e);if(!B[A.name])throw Error("Decoder not present. Did you forget to include encoding-indexes.js first?");var l=this;return l._encoding=A,Boolean(t.fatal)&&(l._error_mode="fatal"),Boolean(t.ignoreBOM)&&(l._ignoreBOM=!0),Object.defineProperty||(this.encoding=l._encoding.name.toLowerCase(),this.fatal="fatal"===l._error_mode,this.ignoreBOM=l._ignoreBOM),l}function Q(t,A){if(!(this instanceof Q))throw TypeError("Called as a function. Did you forget 'new'?");A=n(A),this._encoding=null,this._encoder=null,this._do_not_flush=!1,this._fatal=Boolean(A.fatal)?"fatal":"replacement";var l=this;if(Boolean(A.NONSTANDARD_allowLegacyEncoding)){var r=c(t=void 0!==t?String(t):y);if(null===r||"replacement"===r.name)throw RangeError("Unknown encoding: "+t);if(!p[r.name])throw Error("Encoder not present. Did you forget to include encoding-indexes.js first?");l._encoding=r}else l._encoding=c("utf-8"),void 0!==t&&"console"in e&&console.warn("TextEncoder constructor called with encoding label, which is ignored.");return Object.defineProperty||(this.encoding=l._encoding.name.toLowerCase()),l}function C(e){var A=e.fatal,n=0,l=0,r=0,o=128,u=191;this.handler=function(e,c){if(c===a&&0!==r)return r=0,i(A);if(c===a)return s;if(0===r){if(t(c,0,127))return c;if(t(c,194,223))r=1,n=31&c;else if(t(c,224,239))224===c&&(o=160),237===c&&(u=159),r=2,n=15&c;else{if(!t(c,240,244))return i(A);240===c&&(o=144),244===c&&(u=143),r=3,n=7&c}return null}if(!t(c,o,u))return n=r=l=0,o=128,u=191,e.prepend(c),i(A);if(o=128,u=191,n=n<<6|63&c,(l+=1)!==r)return null;var h=n;return n=r=l=0,h}}function M(e){e.fatal;this.handler=function(e,A){if(A===a)return s;if(r(A))return A;var n,l;t(A,128,2047)?(n=1,l=192):t(A,2048,65535)?(n=2,l=224):t(A,65536,1114111)&&(n=3,l=240);for(var o=[(A>>6*n)+l];n>0;){var i=A>>6*(n-1);o.push(128|63&i),n-=1}return o}}function I(e,t){var A=t.fatal;this.handler=function(t,n){if(n===a)return s;if(l(n))return n;var r=e[n-128];return null===r?i(A):r}}function T(e,t){t.fatal;this.handler=function(t,A){if(A===a)return s;if(r(A))return A;var n=m(A,e);return null===n&&u(A),n+128}}function x(e){var A=e.fatal,n=0,r=0,o=0;this.handler=function(e,u){if(u===a&&0===n&&0===r&&0===o)return s;var c;if(u!==a||0===n&&0===r&&0===o||(n=0,r=0,o=0,i(A)),0!==o){c=null,t(u,48,57)&&(c=function(e){if(e>39419&&e<189e3||e>1237575)return null;if(7457===e)return 59335;var t,A=0,n=0,l=b("gb18030-ranges");for(t=0;t<l.length;++t){var r=l[t];if(!(r[0]<=e))break;A=r[0],n=r[1]}return n+e-A}(10*(126*(10*(n-129)+r-48)+o-129)+u-48));var h=[r,o,u];return n=0,r=0,o=0,null===c?(e.prepend(h),i(A)):c}if(0!==r)return t(u,129,254)?(o=u,null):(e.prepend([r,u]),n=0,r=0,i(A));if(0!==n){if(t(u,48,57))return r=u,null;var f=n,g=null;n=0;var d=u<127?64:65;return(t(u,64,126)||t(u,128,254))&&(g=190*(f-129)+(u-d)),null===(c=null===g?null:E(g,b("gb18030")))&&l(u)&&e.prepend(u),null===c?i(A):c}return l(u)?u:128===u?8364:t(u,129,254)?(n=u,null):i(A)}}function F(e,t){e.fatal;this.handler=function(e,n){if(n===a)return s;if(r(n))return n;if(58853===n)return u(n);if(t&&8364===n)return 128;var l=m(n,b("gb18030"));if(null!==l){var o=l%190;return[A(l/190)+129,o+(o<63?64:65)]}if(t)return u(n);l=function(e){if(59335===e)return 7457;var t,A=0,n=0,l=b("gb18030-ranges");for(t=0;t<l.length;++t){var r=l[t];if(!(r[1]<=e))break;A=r[1],n=r[0]}return n+e-A}(n);var i=A(l/10/126/10),c=A((l-=10*i*126*10)/10/126),h=A((l-=10*c*126)/10);return[i+129,c+48,h+129,l-10*h+48]}}function $(e){var A=e.fatal,n=0;this.handler=function(e,r){if(r===a&&0!==n)return n=0,i(A);if(r===a&&0===n)return s;if(0!==n){var o=n,u=null;n=0;var c=r<127?64:98;switch((t(r,64,126)||t(r,161,254))&&(u=157*(o-129)+(r-c)),u){case 1133:return[202,772];case 1135:return[202,780];case 1164:return[234,772];case 1166:return[234,780]}var h=null===u?null:E(u,b("big5"));return null===h&&l(r)&&e.prepend(r),null===h?i(A):h}return l(r)?r:t(r,129,254)?(n=r,null):i(A)}}function D(e){e.fatal;this.handler=function(e,t){if(t===a)return s;if(r(t))return t;var n=function(e){d=d||b("big5").map((function(e,t){return t<5024?null:e}));var t=d;return 9552===e||9566===e||9569===e||9578===e||21313===e||21317===e?t.lastIndexOf(e):m(e,t)}(t);if(null===n)return u(t);var l=A(n/157)+129;if(l<161)return u(t);var o=n%157;return[l,o+(o<63?64:98)]}}function v(e){var A=e.fatal,n=!1,r=0;this.handler=function(e,o){if(o===a&&0!==r)return r=0,i(A);if(o===a&&0===r)return s;if(142===r&&t(o,161,223))return r=0,65216+o;if(143===r&&t(o,161,254))return n=!0,r=o,null;if(0!==r){var u=r;r=0;var c=null;return t(u,161,254)&&t(o,161,254)&&(c=E(94*(u-161)+(o-161),b(n?"jis0212":"jis0208"))),n=!1,t(o,161,254)||e.prepend(o),null===c?i(A):c}return l(o)?o:142===o||143===o||t(o,161,254)?(r=o,null):i(A)}}function N(e){e.fatal;this.handler=function(e,n){if(n===a)return s;if(r(n))return n;if(165===n)return 92;if(8254===n)return 126;if(t(n,65377,65439))return[142,n-65377+161];8722===n&&(n=65293);var l=m(n,b("jis0208"));return null===l?u(n):[A(l/94)+161,l%94+161]}}function S(e){var A=e.fatal,n=0,l=1,r=2,o=3,u=4,c=5,h=6,f=n,g=n,d=0,p=!1;this.handler=function(e,B){switch(f){default:case n:return 27===B?(f=c,null):t(B,0,127)&&14!==B&&15!==B&&27!==B?(p=!1,B):B===a?s:(p=!1,i(A));case l:return 27===B?(f=c,null):92===B?(p=!1,165):126===B?(p=!1,8254):t(B,0,127)&&14!==B&&15!==B&&27!==B&&92!==B&&126!==B?(p=!1,B):B===a?s:(p=!1,i(A));case r:return 27===B?(f=c,null):t(B,33,95)?(p=!1,65344+B):B===a?s:(p=!1,i(A));case o:return 27===B?(f=c,null):t(B,33,126)?(p=!1,d=B,f=u,null):B===a?s:(p=!1,i(A));case u:if(27===B)return f=c,i(A);if(t(B,33,126)){f=o;var m=E(94*(d-33)+B-33,b("jis0208"));return null===m?i(A):m}return B===a?(f=o,e.prepend(B),i(A)):(f=o,i(A));case c:return 36===B||40===B?(d=B,f=h,null):(e.prepend(B),p=!1,f=g,i(A));case h:var y=d;d=0;var w=null;if(40===y&&66===B&&(w=n),40===y&&74===B&&(w=l),40===y&&73===B&&(w=r),36!==y||64!==B&&66!==B||(w=o),null!==w){f=f=w;var Q=p;return p=!0,Q?i(A):null}return e.prepend([y,B]),p=!1,f=g,i(A)}}}function U(e){e.fatal;var t=0,n=1,l=2,o=t;this.handler=function(e,i){if(i===a&&o!==t)return e.prepend(i),o=t,[27,40,66];if(i===a&&o===t)return s;if(!(o!==t&&o!==n||14!==i&&15!==i&&27!==i))return u(65533);if(o===t&&r(i))return i;if(o===n&&(r(i)&&92!==i&&126!==i||165==i||8254==i)){if(r(i))return i;if(165===i)return 92;if(8254===i)return 126}if(r(i)&&o!==t)return e.prepend(i),o=t,[27,40,66];if((165===i||8254===i)&&o!==n)return e.prepend(i),o=n,[27,40,74];8722===i&&(i=65293);var c=m(i,b("jis0208"));return null===c?u(i):o!==l?(e.prepend(i),o=l,[27,36,66]):[A(c/94)+33,c%94+33]}}function R(e){var A=e.fatal,n=0;this.handler=function(e,r){if(r===a&&0!==n)return n=0,i(A);if(r===a&&0===n)return s;if(0!==n){var o=n,u=null;n=0;var c=r<127?64:65,h=o<160?129:193;if((t(r,64,126)||t(r,128,252))&&(u=188*(o-h)+r-c),t(u,8836,10715))return 48508+u;var f=null===u?null:E(u,b("jis0208"));return null===f&&l(r)&&e.prepend(r),null===f?i(A):f}return l(r)||128===r?r:t(r,161,223)?65216+r:t(r,129,159)||t(r,224,252)?(n=r,null):i(A)}}function Y(e){e.fatal;this.handler=function(e,n){if(n===a)return s;if(r(n)||128===n)return n;if(165===n)return 92;if(8254===n)return 126;if(t(n,65377,65439))return n-65377+161;8722===n&&(n=65293);var l=function(e){return g=g||b("jis0208").map((function(e,A){return t(A,8272,8835)?null:e})),g.indexOf(e)}(n);if(null===l)return u(n);var o=A(l/188),i=l%188;return[o+(o<31?129:193),i+(i<63?64:65)]}}function k(e){var A=e.fatal,n=0;this.handler=function(e,r){if(r===a&&0!==n)return n=0,i(A);if(r===a&&0===n)return s;if(0!==n){var o=n,u=null;n=0,t(r,65,254)&&(u=190*(o-129)+(r-65));var c=null===u?null:E(u,b("euc-kr"));return null===u&&l(r)&&e.prepend(r),null===c?i(A):c}return l(r)?r:t(r,129,254)?(n=r,null):i(A)}}function _(e){e.fatal;this.handler=function(e,t){if(t===a)return s;if(r(t))return t;var n=m(t,b("euc-kr"));return null===n?u(t):[A(n/190)+129,n%190+65]}}function L(e,t){var A=e>>8,n=255&e;return t?[A,n]:[n,A]}function P(e,A){var n=A.fatal,l=null,r=null;this.handler=function(A,o){if(o===a&&(null!==l||null!==r))return i(n);if(o===a&&null===l&&null===r)return s;if(null===l)return l=o,null;var u;if(u=e?(l<<8)+o:(o<<8)+l,l=null,null!==r){var c=r;return r=null,t(u,56320,57343)?65536+1024*(c-55296)+(u-56320):(A.prepend(L(u,e)),i(n))}return t(u,55296,56319)?(r=u,null):t(u,56320,57343)?i(n):u}}function O(e,A){A.fatal;this.handler=function(A,n){if(n===a)return s;if(t(n,0,65535))return L(n,e);var l=L(55296+(n-65536>>10),e),r=L(56320+(n-65536&1023),e);return l.concat(r)}}function G(e){e.fatal;this.handler=function(e,t){return t===a?s:l(t)?t:63360+t-128}}function V(e){e.fatal;this.handler=function(e,A){return A===a?s:r(A)?A:t(A,63360,63487)?A-63360+128:u(A)}}Object.defineProperty&&(Object.defineProperty(w.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}}),Object.defineProperty(w.prototype,"fatal",{get:function(){return"fatal"===this._error_mode}}),Object.defineProperty(w.prototype,"ignoreBOM",{get:function(){return this._ignoreBOM}})),w.prototype.decode=function(e,t){var A;A="object"==typeof e&&e instanceof ArrayBuffer?new Uint8Array(e):"object"==typeof e&&"buffer"in e&&e.buffer instanceof ArrayBuffer?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):new Uint8Array(0),t=n(t),this._do_not_flush||(this._decoder=B[this._encoding.name]({fatal:"fatal"===this._error_mode}),this._BOMseen=!1),this._do_not_flush=Boolean(t.stream);for(var l,r=new o(A),i=[];;){var u=r.read();if(u===a)break;if((l=this._decoder.handler(r,u))===s)break;null!==l&&(Array.isArray(l)?i.push.apply(i,l):i.push(l))}if(!this._do_not_flush){do{if((l=this._decoder.handler(r,r.read()))===s)break;null!==l&&(Array.isArray(l)?i.push.apply(i,l):i.push(l))}while(!r.endOfStream());this._decoder=null}return function(e){var t,A;return t=["UTF-8","UTF-16LE","UTF-16BE"],A=this._encoding.name,-1===t.indexOf(A)||this._ignoreBOM||this._BOMseen||(e.length>0&&65279===e[0]?(this._BOMseen=!0,e.shift()):e.length>0&&(this._BOMseen=!0)),function(e){for(var t="",A=0;A<e.length;++A){var n=e[A];n<=65535?t+=String.fromCharCode(n):(n-=65536,t+=String.fromCharCode(55296+(n>>10),56320+(1023&n)))}return t}(e)}.call(this,i)},Object.defineProperty&&Object.defineProperty(Q.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}}),Q.prototype.encode=function(e,t){e=void 0===e?"":String(e),t=n(t),this._do_not_flush||(this._encoder=p[this._encoding.name]({fatal:"fatal"===this._fatal})),this._do_not_flush=Boolean(t.stream);for(var A,l=new o(function(e){for(var t=String(e),A=t.length,n=0,l=[];n<A;){var r=t.charCodeAt(n);if(r<55296||r>57343)l.push(r);else if(56320<=r&&r<=57343)l.push(65533);else if(55296<=r&&r<=56319)if(n===A-1)l.push(65533);else{var a=t.charCodeAt(n+1);if(56320<=a&&a<=57343){var o=1023&r,s=1023&a;l.push(65536+(o<<10)+s),n+=1}else l.push(65533)}n+=1}return l}(e)),r=[];;){var i=l.read();if(i===a)break;if((A=this._encoder.handler(l,i))===s)break;Array.isArray(A)?r.push.apply(r,A):r.push(A)}if(!this._do_not_flush){for(;(A=this._encoder.handler(l,l.read()))!==s;)Array.isArray(A)?r.push.apply(r,A):r.push(A);this._encoder=null}return new Uint8Array(r)},p["UTF-8"]=function(e){return new M(e)},B["UTF-8"]=function(e){return new C(e)},"encoding-indexes"in e&&h.forEach((function(e){"Legacy single-byte encodings"===e.heading&&e.encodings.forEach((function(e){var t=e.name,A=b(t.toLowerCase());B[t]=function(e){return new I(A,e)},p[t]=function(e){return new T(A,e)}}))})),B.GBK=function(e){return new x(e)},p.GBK=function(e){return new F(e,!0)},p.gb18030=function(e){return new F(e)},B.gb18030=function(e){return new x(e)},p.Big5=function(e){return new D(e)},B.Big5=function(e){return new $(e)},p["EUC-JP"]=function(e){return new N(e)},B["EUC-JP"]=function(e){return new v(e)},p["ISO-2022-JP"]=function(e){return new U(e)},B["ISO-2022-JP"]=function(e){return new S(e)},p.Shift_JIS=function(e){return new Y(e)},B.Shift_JIS=function(e){return new R(e)},p["EUC-KR"]=function(e){return new _(e)},B["EUC-KR"]=function(e){return new k(e)},p["UTF-16BE"]=function(e){return new O(!0,e)},B["UTF-16BE"]=function(e){return new P(!0,e)},p["UTF-16LE"]=function(e){return new O(!1,e)},B["UTF-16LE"]=function(e){return new P(!1,e)},p["x-user-defined"]=function(e){return new V(e)},B["x-user-defined"]=function(e){return new G(e)},e.TextEncoder||(e.TextEncoder=Q),e.TextDecoder||(e.TextDecoder=w),"undefined"!=typeof module&&module.exports&&(module.exports={TextEncoder:e.TextEncoder,TextDecoder:e.TextDecoder,EncodingIndexes:e["encoding-indexes"]})}(this||{});var __create=Object.create,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty,__esm=(e,t)=>function(){return e&&(t=(0,e[__getOwnPropNames(e)[0]])(e=0)),t},__commonJS=(e,t)=>function(){return t||(0,e[__getOwnPropNames(e)[0]])((t={exports:{}}).exports,t),t.exports},__export=(e,t)=>{for(var A in t)__defProp(e,A,{get:t[A],enumerable:!0})},__copyProps=(e,t,A,n)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let l of __getOwnPropNames(t))__hasOwnProp.call(e,l)||l===A||__defProp(e,l,{get:()=>t[l],enumerable:!(n=__getOwnPropDesc(t,l))||n.enumerable});return e},__toESM=(e,t,A)=>(A=null!=e?__create(__getProtoOf(e)):{},__copyProps(!t&&e&&e.__esModule?A:__defProp(A,"default",{value:e,enumerable:!0}),e)),__toCommonJS=e=>__copyProps(__defProp({},"__esModule",{value:!0}),e),__toBinary=(()=>{for(var e=new Uint8Array(128),t=0;t<64;t++)e[t<26?t+65:t<52?t+71:t<62?t-4:4*t-205]=t;return t=>{for(var A=t.length,n=new Uint8Array(3*(A-("="==t[A-1])-("="==t[A-2]))/4|0),l=0,r=0;l<A;){var a=e[t.charCodeAt(l++)],o=e[t.charCodeAt(l++)],s=e[t.charCodeAt(l++)],i=e[t.charCodeAt(l++)];n[r++]=a<<2|o>>4,n[r++]=o<<4|s>>2,n[r++]=s<<6|i}return n}})(),require_cjs=__commonJS({"../../node_modules/.pnpm/deepmerge@4.3.1/node_modules/deepmerge/dist/cjs.js"(e,t){"use strict";var A=function(e){return function(e){return!!e&&"object"==typeof e}(e)&&!function(e){var t=Object.prototype.toString.call(e);return"[object RegExp]"===t||"[object Date]"===t||function(e){return e.$$typeof===n}(e)}(e)};var n="function"==typeof Symbol&&Symbol.for?Symbol.for("react.element"):60103;function l(e,t){return!1!==t.clone&&t.isMergeableObject(e)?i((A=e,Array.isArray(A)?[]:{}),e,t):e;var A}function r(e,t,A){return e.concat(t).map((function(e){return l(e,A)}))}function a(e){return Object.keys(e).concat(function(e){return Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(e).filter((function(t){return Object.propertyIsEnumerable.call(e,t)})):[]}(e))}function o(e,t){try{return t in e}catch(e){return!1}}function s(e,t,A){var n={};return A.isMergeableObject(e)&&a(e).forEach((function(t){n[t]=l(e[t],A)})),a(t).forEach((function(r){(function(e,t){return o(e,t)&&!(Object.hasOwnProperty.call(e,t)&&Object.propertyIsEnumerable.call(e,t))})(e,r)||(o(e,r)&&A.isMergeableObject(t[r])?n[r]=function(e,t){if(!t.customMerge)return i;var A=t.customMerge(e);return"function"==typeof A?A:i}(r,A)(e[r],t[r],A):n[r]=l(t[r],A))})),n}function i(e,t,n){(n=n||{}).arrayMerge=n.arrayMerge||r,n.isMergeableObject=n.isMergeableObject||A,n.cloneUnlessOtherwiseSpecified=l;var a=Array.isArray(t);return a===Array.isArray(e)?a?n.arrayMerge(e,t,n):s(e,t,n):l(t,n)}i.all=function(e,t){if(!Array.isArray(e))throw new Error("first argument should be an array");return e.reduce((function(e,A){return i(e,A,t)}),{})};var u=i;t.exports=u}}),require_kind_of=__commonJS({"../../node_modules/.pnpm/kind-of@6.0.3/node_modules/kind-of/index.js"(e,t){var A=Object.prototype.toString;function n(e){return"function"==typeof e.constructor?e.constructor.name:null}t.exports=function(e){if(void 0===e)return"undefined";if(null===e)return"null";var t=typeof e;if("boolean"===t)return"boolean";if("string"===t)return"string";if("number"===t)return"number";if("symbol"===t)return"symbol";if("function"===t)return"GeneratorFunction"===n(e)?"generatorfunction":"function";if(function(e){return Array.isArray?Array.isArray(e):e instanceof Array}(e))return"array";if(function(e){if(e.constructor&&"function"==typeof e.constructor.isBuffer)return e.constructor.isBuffer(e);return!1}(e))return"buffer";if(function(e){try{if("number"==typeof e.length&&"function"==typeof e.callee)return!0}catch(e){if(-1!==e.message.indexOf("callee"))return!0}return!1}(e))return"arguments";if(function(e){return e instanceof Date||"function"==typeof e.toDateString&&"function"==typeof e.getDate&&"function"==typeof e.setDate}(e))return"date";if(function(e){return e instanceof Error||"string"==typeof e.message&&e.constructor&&"number"==typeof e.constructor.stackTraceLimit}(e))return"error";if(function(e){return e instanceof RegExp||"string"==typeof e.flags&&"boolean"==typeof e.ignoreCase&&"boolean"==typeof e.multiline&&"boolean"==typeof e.global}(e))return"regexp";switch(n(e)){case"Symbol":return"symbol";case"Promise":return"promise";case"WeakMap":return"weakmap";case"WeakSet":return"weakset";case"Map":return"map";case"Set":return"set";case"Int8Array":return"int8array";case"Uint8Array":return"uint8array";case"Uint8ClampedArray":return"uint8clampedarray";case"Int16Array":return"int16array";case"Uint16Array":return"uint16array";case"Int32Array":return"int32array";case"Uint32Array":return"uint32array";case"Float32Array":return"float32array";case"Float64Array":return"float64array"}if(function(e){return"function"==typeof e.throw&&"function"==typeof e.return&&"function"==typeof e.next}(e))return"generator";switch(t=A.call(e)){case"[object Object]":return"object";case"[object Map Iterator]":return"mapiterator";case"[object Set Iterator]":return"setiterator";case"[object String Iterator]":return"stringiterator";case"[object Array Iterator]":return"arrayiterator"}return t.slice(8,-1).toLowerCase().replace(/\s/g,"")}}}),require_shallow_clone=__commonJS({"../../node_modules/.pnpm/shallow-clone@3.0.1/node_modules/shallow-clone/index.js"(e,t){"use strict";var A=Symbol.prototype.valueOf,n=require_kind_of();t.exports=function(e,t){switch(n(e)){case"array":return e.slice();case"object":return Object.assign({},e);case"date":return new e.constructor(Number(e));case"map":return new Map(e);case"set":return new Set(e);case"buffer":return function(e){const t=e.length,A=Buffer.allocUnsafe?Buffer.allocUnsafe(t):Buffer.from(t);return e.copy(A),A}(e);case"symbol":return function(e){return A?Object(A.call(e)):{}}(e);case"arraybuffer":return function(e){const t=new e.constructor(e.byteLength);return new Uint8Array(t).set(new Uint8Array(e)),t}(e);case"float32array":case"float64array":case"int16array":case"int32array":case"int8array":case"uint16array":case"uint32array":case"uint8clampedarray":case"uint8array":return function(e){return new e.constructor(e.buffer,e.byteOffset,e.length)}(e);case"regexp":return function(e){const t=void 0!==e.flags?e.flags:/\w+$/.exec(e)||void 0,A=new e.constructor(e.source,t);return A.lastIndex=e.lastIndex,A}(e);case"error":return Object.create(e);default:return e}}}}),require_isobject=__commonJS({"../../node_modules/.pnpm/isobject@3.0.1/node_modules/isobject/index.js"(e,t){"use strict";t.exports=function(e){return null!=e&&"object"==typeof e&&!1===Array.isArray(e)}}}),require_is_plain_object=__commonJS({"../../node_modules/.pnpm/is-plain-object@2.0.4/node_modules/is-plain-object/index.js"(e,t){"use strict";var A=require_isobject();function n(e){return!0===A(e)&&"[object Object]"===Object.prototype.toString.call(e)}t.exports=function(e){var t,A;return!1!==n(e)&&("function"==typeof(t=e.constructor)&&(!1!==n(A=t.prototype)&&!1!==A.hasOwnProperty("isPrototypeOf")))}}}),require_clone_deep=__commonJS({"../../node_modules/.pnpm/clone-deep@4.0.1/node_modules/clone-deep/index.js"(e,t){"use strict";var A=require_shallow_clone(),n=require_kind_of(),l=require_is_plain_object();function r(e,t){switch(n(e)){case"object":return function(e,t){if("function"==typeof t)return t(e);if(t||l(e)){const A=new e.constructor;for(let n in e)A[n]=r(e[n],t);return A}return e}(e,t);case"array":return function(e,t){const A=new e.constructor(e.length);for(let n=0;n<e.length;n++)A[n]=r(e[n],t);return A}(e,t);default:return A(e)}}t.exports=r}}),require_tinycolor=__commonJS({"../../node_modules/.pnpm/tinycolor2@1.4.2/node_modules/tinycolor2/tinycolor.js"(e,t){!function(e){var A=/^\s+/,n=/\s+$/,l=0,r=e.round,a=e.min,o=e.max,s=e.random;function i(t,s){if(s=s||{},(t=t||"")instanceof i)return t;if(!(this instanceof i))return new i(t,s);var u=function(t){var l={r:0,g:0,b:0},r=1,s=null,i=null,u=null,c=!1,h=!1;"string"==typeof t&&(t=function(e){e=e.replace(A,"").replace(n,"").toLowerCase();var t,l=!1;if(T[e])e=T[e],l=!0;else if("transparent"==e)return{r:0,g:0,b:0,a:0,format:"name"};if(t=L.rgb.exec(e))return{r:t[1],g:t[2],b:t[3]};if(t=L.rgba.exec(e))return{r:t[1],g:t[2],b:t[3],a:t[4]};if(t=L.hsl.exec(e))return{h:t[1],s:t[2],l:t[3]};if(t=L.hsla.exec(e))return{h:t[1],s:t[2],l:t[3],a:t[4]};if(t=L.hsv.exec(e))return{h:t[1],s:t[2],v:t[3]};if(t=L.hsva.exec(e))return{h:t[1],s:t[2],v:t[3],a:t[4]};if(t=L.hex8.exec(e))return{r:v(t[1]),g:v(t[2]),b:v(t[3]),a:R(t[4]),format:l?"name":"hex8"};if(t=L.hex6.exec(e))return{r:v(t[1]),g:v(t[2]),b:v(t[3]),format:l?"name":"hex"};if(t=L.hex4.exec(e))return{r:v(t[1]+""+t[1]),g:v(t[2]+""+t[2]),b:v(t[3]+""+t[3]),a:R(t[4]+""+t[4]),format:l?"name":"hex8"};if(t=L.hex3.exec(e))return{r:v(t[1]+""+t[1]),g:v(t[2]+""+t[2]),b:v(t[3]+""+t[3]),format:l?"name":"hex"};return!1}(t));"object"==typeof t&&(P(t.r)&&P(t.g)&&P(t.b)?(f=t.r,g=t.g,d=t.b,l={r:255*$(f,255),g:255*$(g,255),b:255*$(d,255)},c=!0,h="%"===String(t.r).substr(-1)?"prgb":"rgb"):P(t.h)&&P(t.s)&&P(t.v)?(s=S(t.s),i=S(t.v),l=function(t,A,n){t=6*$(t,360),A=$(A,100),n=$(n,100);var l=e.floor(t),r=t-l,a=n*(1-A),o=n*(1-r*A),s=n*(1-(1-r)*A),i=l%6,u=[n,o,a,a,s,n][i],c=[s,n,n,o,a,a][i],h=[a,a,s,n,n,o][i];return{r:255*u,g:255*c,b:255*h}}(t.h,s,i),c=!0,h="hsv"):P(t.h)&&P(t.s)&&P(t.l)&&(s=S(t.s),u=S(t.l),l=function(e,t,A){var n,l,r;function a(e,t,A){return A<0&&(A+=1),A>1&&(A-=1),A<1/6?e+6*(t-e)*A:A<.5?t:A<2/3?e+(t-e)*(2/3-A)*6:e}if(e=$(e,360),t=$(t,100),A=$(A,100),0===t)n=l=r=A;else{var o=A<.5?A*(1+t):A+t-A*t,s=2*A-o;n=a(s,o,e+1/3),l=a(s,o,e),r=a(s,o,e-1/3)}return{r:255*n,g:255*l,b:255*r}}(t.h,s,u),c=!0,h="hsl"),t.hasOwnProperty("a")&&(r=t.a));var f,g,d;return r=F(r),{ok:c,format:t.format||h,r:a(255,o(l.r,0)),g:a(255,o(l.g,0)),b:a(255,o(l.b,0)),a:r}}(t);this._originalInput=t,this._r=u.r,this._g=u.g,this._b=u.b,this._a=u.a,this._roundA=r(100*this._a)/100,this._format=s.format||u.format,this._gradientType=s.gradientType,this._r<1&&(this._r=r(this._r)),this._g<1&&(this._g=r(this._g)),this._b<1&&(this._b=r(this._b)),this._ok=u.ok,this._tc_id=l++}function u(e,t,A){e=$(e,255),t=$(t,255),A=$(A,255);var n,l,r=o(e,t,A),s=a(e,t,A),i=(r+s)/2;if(r==s)n=l=0;else{var u=r-s;switch(l=i>.5?u/(2-r-s):u/(r+s),r){case e:n=(t-A)/u+(t<A?6:0);break;case t:n=(A-e)/u+2;break;case A:n=(e-t)/u+4}n/=6}return{h:n,s:l,l:i}}function c(e,t,A){e=$(e,255),t=$(t,255),A=$(A,255);var n,l,r=o(e,t,A),s=a(e,t,A),i=r,u=r-s;if(l=0===r?0:u/r,r==s)n=0;else{switch(r){case e:n=(t-A)/u+(t<A?6:0);break;case t:n=(A-e)/u+2;break;case A:n=(e-t)/u+4}n/=6}return{h:n,s:l,v:i}}function h(e,t,A,n){var l=[N(r(e).toString(16)),N(r(t).toString(16)),N(r(A).toString(16))];return n&&l[0].charAt(0)==l[0].charAt(1)&&l[1].charAt(0)==l[1].charAt(1)&&l[2].charAt(0)==l[2].charAt(1)?l[0].charAt(0)+l[1].charAt(0)+l[2].charAt(0):l.join("")}function f(e,t,A,n){return[N(U(n)),N(r(e).toString(16)),N(r(t).toString(16)),N(r(A).toString(16))].join("")}function g(e,t){t=0===t?0:t||10;var A=i(e).toHsl();return A.s-=t/100,A.s=D(A.s),i(A)}function d(e,t){t=0===t?0:t||10;var A=i(e).toHsl();return A.s+=t/100,A.s=D(A.s),i(A)}function p(e){return i(e).desaturate(100)}function B(e,t){t=0===t?0:t||10;var A=i(e).toHsl();return A.l+=t/100,A.l=D(A.l),i(A)}function E(e,t){t=0===t?0:t||10;var A=i(e).toRgb();return A.r=o(0,a(255,A.r-r(-t/100*255))),A.g=o(0,a(255,A.g-r(-t/100*255))),A.b=o(0,a(255,A.b-r(-t/100*255))),i(A)}function m(e,t){t=0===t?0:t||10;var A=i(e).toHsl();return A.l-=t/100,A.l=D(A.l),i(A)}function b(e,t){var A=i(e).toHsl(),n=(A.h+t)%360;return A.h=n<0?360+n:n,i(A)}function y(e){var t=i(e).toHsl();return t.h=(t.h+180)%360,i(t)}function w(e){var t=i(e).toHsl(),A=t.h;return[i(e),i({h:(A+120)%360,s:t.s,l:t.l}),i({h:(A+240)%360,s:t.s,l:t.l})]}function Q(e){var t=i(e).toHsl(),A=t.h;return[i(e),i({h:(A+90)%360,s:t.s,l:t.l}),i({h:(A+180)%360,s:t.s,l:t.l}),i({h:(A+270)%360,s:t.s,l:t.l})]}function C(e){var t=i(e).toHsl(),A=t.h;return[i(e),i({h:(A+72)%360,s:t.s,l:t.l}),i({h:(A+216)%360,s:t.s,l:t.l})]}function M(e,t,A){t=t||6,A=A||30;var n=i(e).toHsl(),l=360/A,r=[i(e)];for(n.h=(n.h-(l*t>>1)+720)%360;--t;)n.h=(n.h+l)%360,r.push(i(n));return r}function I(e,t){t=t||6;for(var A=i(e).toHsv(),n=A.h,l=A.s,r=A.v,a=[],o=1/t;t--;)a.push(i({h:n,s:l,v:r})),r=(r+o)%1;return a}i.prototype={isDark:function(){return this.getBrightness()<128},isLight:function(){return!this.isDark()},isValid:function(){return this._ok},getOriginalInput:function(){return this._originalInput},getFormat:function(){return this._format},getAlpha:function(){return this._a},getBrightness:function(){var e=this.toRgb();return(299*e.r+587*e.g+114*e.b)/1e3},getLuminance:function(){var t,A,n,l=this.toRgb();return t=l.r/255,A=l.g/255,n=l.b/255,.2126*(t<=.03928?t/12.92:e.pow((t+.055)/1.055,2.4))+.7152*(A<=.03928?A/12.92:e.pow((A+.055)/1.055,2.4))+.0722*(n<=.03928?n/12.92:e.pow((n+.055)/1.055,2.4))},setAlpha:function(e){return this._a=F(e),this._roundA=r(100*this._a)/100,this},toHsv:function(){var e=c(this._r,this._g,this._b);return{h:360*e.h,s:e.s,v:e.v,a:this._a}},toHsvString:function(){var e=c(this._r,this._g,this._b),t=r(360*e.h),A=r(100*e.s),n=r(100*e.v);return 1==this._a?"hsv("+t+", "+A+"%, "+n+"%)":"hsva("+t+", "+A+"%, "+n+"%, "+this._roundA+")"},toHsl:function(){var e=u(this._r,this._g,this._b);return{h:360*e.h,s:e.s,l:e.l,a:this._a}},toHslString:function(){var e=u(this._r,this._g,this._b),t=r(360*e.h),A=r(100*e.s),n=r(100*e.l);return 1==this._a?"hsl("+t+", "+A+"%, "+n+"%)":"hsla("+t+", "+A+"%, "+n+"%, "+this._roundA+")"},toHex:function(e){return h(this._r,this._g,this._b,e)},toHexString:function(e){return"#"+this.toHex(e)},toHex8:function(e){return function(e,t,A,n,l){var a=[N(r(e).toString(16)),N(r(t).toString(16)),N(r(A).toString(16)),N(U(n))];if(l&&a[0].charAt(0)==a[0].charAt(1)&&a[1].charAt(0)==a[1].charAt(1)&&a[2].charAt(0)==a[2].charAt(1)&&a[3].charAt(0)==a[3].charAt(1))return a[0].charAt(0)+a[1].charAt(0)+a[2].charAt(0)+a[3].charAt(0);return a.join("")}(this._r,this._g,this._b,this._a,e)},toHex8String:function(e){return"#"+this.toHex8(e)},toRgb:function(){return{r:r(this._r),g:r(this._g),b:r(this._b),a:this._a}},toRgbString:function(){return 1==this._a?"rgb("+r(this._r)+", "+r(this._g)+", "+r(this._b)+")":"rgba("+r(this._r)+", "+r(this._g)+", "+r(this._b)+", "+this._roundA+")"},toPercentageRgb:function(){return{r:r(100*$(this._r,255))+"%",g:r(100*$(this._g,255))+"%",b:r(100*$(this._b,255))+"%",a:this._a}},toPercentageRgbString:function(){return 1==this._a?"rgb("+r(100*$(this._r,255))+"%, "+r(100*$(this._g,255))+"%, "+r(100*$(this._b,255))+"%)":"rgba("+r(100*$(this._r,255))+"%, "+r(100*$(this._g,255))+"%, "+r(100*$(this._b,255))+"%, "+this._roundA+")"},toName:function(){return 0===this._a?"transparent":!(this._a<1)&&(x[h(this._r,this._g,this._b,!0)]||!1)},toFilter:function(e){var t="#"+f(this._r,this._g,this._b,this._a),A=t,n=this._gradientType?"GradientType = 1, ":"";if(e){var l=i(e);A="#"+f(l._r,l._g,l._b,l._a)}return"progid:DXImageTransform.Microsoft.gradient("+n+"startColorstr="+t+",endColorstr="+A+")"},toString:function(e){var t=!!e;e=e||this._format;var A=!1,n=this._a<1&&this._a>=0;return t||!n||"hex"!==e&&"hex6"!==e&&"hex3"!==e&&"hex4"!==e&&"hex8"!==e&&"name"!==e?("rgb"===e&&(A=this.toRgbString()),"prgb"===e&&(A=this.toPercentageRgbString()),"hex"!==e&&"hex6"!==e||(A=this.toHexString()),"hex3"===e&&(A=this.toHexString(!0)),"hex4"===e&&(A=this.toHex8String(!0)),"hex8"===e&&(A=this.toHex8String()),"name"===e&&(A=this.toName()),"hsl"===e&&(A=this.toHslString()),"hsv"===e&&(A=this.toHsvString()),A||this.toHexString()):"name"===e&&0===this._a?this.toName():this.toRgbString()},clone:function(){return i(this.toString())},_applyModification:function(e,t){var A=e.apply(null,[this].concat([].slice.call(t)));return this._r=A._r,this._g=A._g,this._b=A._b,this.setAlpha(A._a),this},lighten:function(){return this._applyModification(B,arguments)},brighten:function(){return this._applyModification(E,arguments)},darken:function(){return this._applyModification(m,arguments)},desaturate:function(){return this._applyModification(g,arguments)},saturate:function(){return this._applyModification(d,arguments)},greyscale:function(){return this._applyModification(p,arguments)},spin:function(){return this._applyModification(b,arguments)},_applyCombination:function(e,t){return e.apply(null,[this].concat([].slice.call(t)))},analogous:function(){return this._applyCombination(M,arguments)},complement:function(){return this._applyCombination(y,arguments)},monochromatic:function(){return this._applyCombination(I,arguments)},splitcomplement:function(){return this._applyCombination(C,arguments)},triad:function(){return this._applyCombination(w,arguments)},tetrad:function(){return this._applyCombination(Q,arguments)}},i.fromRatio=function(e,t){if("object"==typeof e){var A={};for(var n in e)e.hasOwnProperty(n)&&(A[n]="a"===n?e[n]:S(e[n]));e=A}return i(e,t)},i.equals=function(e,t){return!(!e||!t)&&i(e).toRgbString()==i(t).toRgbString()},i.random=function(){return i.fromRatio({r:s(),g:s(),b:s()})},i.mix=function(e,t,A){A=0===A?0:A||50;var n=i(e).toRgb(),l=i(t).toRgb(),r=A/100;return i({r:(l.r-n.r)*r+n.r,g:(l.g-n.g)*r+n.g,b:(l.b-n.b)*r+n.b,a:(l.a-n.a)*r+n.a})},i.readability=function(t,A){var n=i(t),l=i(A);return(e.max(n.getLuminance(),l.getLuminance())+.05)/(e.min(n.getLuminance(),l.getLuminance())+.05)},i.isReadable=function(e,t,A){var n,l,r=i.readability(e,t);switch(l=!1,(n=function(e){var t,A;t=((e=e||{level:"AA",size:"small"}).level||"AA").toUpperCase(),A=(e.size||"small").toLowerCase(),"AA"!==t&&"AAA"!==t&&(t="AA");"small"!==A&&"large"!==A&&(A="small");return{level:t,size:A}}(A)).level+n.size){case"AAsmall":case"AAAlarge":l=r>=4.5;break;case"AAlarge":l=r>=3;break;case"AAAsmall":l=r>=7}return l},i.mostReadable=function(e,t,A){var n,l,r,a,o=null,s=0;l=(A=A||{}).includeFallbackColors,r=A.level,a=A.size;for(var u=0;u<t.length;u++)(n=i.readability(e,t[u]))>s&&(s=n,o=i(t[u]));return i.isReadable(e,o,{level:r,size:a})||!l?o:(A.includeFallbackColors=!1,i.mostReadable(e,["#fff","#000"],A))};var T=i.names={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"663399",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"},x=i.hexNames=function(e){var t={};for(var A in e)e.hasOwnProperty(A)&&(t[e[A]]=A);return t}(T);function F(e){return e=parseFloat(e),(isNaN(e)||e<0||e>1)&&(e=1),e}function $(t,A){(function(e){return"string"==typeof e&&-1!=e.indexOf(".")&&1===parseFloat(e)})(t)&&(t="100%");var n=function(e){return"string"==typeof e&&-1!=e.indexOf("%")}(t);return t=a(A,o(0,parseFloat(t))),n&&(t=parseInt(t*A,10)/100),e.abs(t-A)<1e-6?1:t%A/parseFloat(A)}function D(e){return a(1,o(0,e))}function v(e){return parseInt(e,16)}function N(e){return 1==e.length?"0"+e:""+e}function S(e){return e<=1&&(e=100*e+"%"),e}function U(t){return e.round(255*parseFloat(t)).toString(16)}function R(e){return v(e)/255}var Y,k,_,L=(k="[\\s|\\(]+("+(Y="(?:[-\\+]?\\d*\\.\\d+%?)|(?:[-\\+]?\\d+%?)")+")[,|\\s]+("+Y+")[,|\\s]+("+Y+")\\s*\\)?",_="[\\s|\\(]+("+Y+")[,|\\s]+("+Y+")[,|\\s]+("+Y+")[,|\\s]+("+Y+")\\s*\\)?",{CSS_UNIT:new RegExp(Y),rgb:new RegExp("rgb"+k),rgba:new RegExp("rgba"+_),hsl:new RegExp("hsl"+k),hsla:new RegExp("hsla"+_),hsv:new RegExp("hsv"+k),hsva:new RegExp("hsva"+_),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/});function P(e){return!!L.CSS_UNIT.exec(e)}void 0!==t&&t.exports?t.exports=i:"function"==typeof define&&define.amd?define((function(){return i})):window.tinycolor=i}(Math)}}),require_moo=__commonJS({"../../node_modules/.pnpm/@hikerpig+moo@0.5.2-beta.2/node_modules/@hikerpig/moo/moo.js"(e,t){var A,n;A=e,n=function(){"use strict";var e=Object.prototype.hasOwnProperty,t=Object.prototype.toString,A="boolean"==typeof(new RegExp).sticky;function n(e){return e&&"[object RegExp]"===t.call(e)}function l(e){return e&&"object"==typeof e&&!n(e)&&!Array.isArray(e)}function r(e){return"("+e+")"}function a(e){return e.length?"(?:"+e.map((function(e){return"(?:"+e+")"})).join("|")+")":"(?!)"}function o(e){if("string"==typeof e)return"(?:"+e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")+")";if(n(e)){if(e.ignoreCase)throw new Error("RegExp /i flag not allowed");if(e.global)throw new Error("RegExp /g flag is implied");if(e.sticky)throw new Error("RegExp /y flag is implied");if(e.multiline)throw new Error("RegExp /m flag is implied");return e.source}throw new Error("Not a pattern: "+e)}function s(t,A){if(l(A)||(A={match:A}),A.include)throw new Error("Matching rules cannot also include states");var r={defaultType:t,lineBreaks:!!A.error||!!A.fallback,pop:!1,next:null,push:null,error:!1,fallback:!1,value:null,type:null,shouldThrow:!1};for(var a in A)e.call(A,a)&&(r[a]=A[a]);if("string"==typeof r.type&&t!==r.type)throw new Error("Type transform cannot be a string (type '"+r.type+"' for token '"+t+"')");var o=r.match;return r.match=Array.isArray(o)?o:o?[o]:[],r.match.sort((function(e,t){return n(e)&&n(t)?0:n(t)?-1:n(e)?1:t.length-e.length})),r}function i(e){return Array.isArray(e)?function(e){for(var t=[],A=0;A<e.length;A++){var n=e[A];if(n.include)for(var l=[].concat(n.include),r=0;r<l.length;r++)t.push({include:l[r]});else{if(!n.type)throw new Error("Rule has no type: "+JSON.stringify(n));t.push(s(n.type,n))}}return t}(e):function(e){for(var t=Object.getOwnPropertyNames(e),A=[],n=0;n<t.length;n++){var r=t[n],a=e[r],o=[].concat(a);if("include"!==r){var i=[];o.forEach((function(e){l(e)?(i.length&&A.push(s(r,i)),A.push(s(r,e)),i=[]):i.push(e)})),i.length&&A.push(s(r,i))}else for(var u=0;u<o.length;u++)A.push({include:o[u]})}return A}(e)}var u=s("error",{lineBreaks:!0,shouldThrow:!0});function c(e,t){for(var l=null,s=Object.create(null),i=!0,c=null,h=[],f=[],g=0;g<e.length;g++)e[g].fallback&&(i=!1);for(g=0;g<e.length;g++){var d=e[g];if(d.include)throw new Error("Inheritance is not allowed in stateless lexers");if(d.error||d.fallback){if(l)throw!d.fallback==!l.fallback?new Error("Multiple "+(d.fallback?"fallback":"error")+" rules not allowed (for token '"+d.defaultType+"')"):new Error("fallback and error are mutually exclusive (for token '"+d.defaultType+"')");l=d}var p=d.match.slice();if(i)for(;p.length&&"string"==typeof p[0]&&1===p[0].length;)s[p.shift().charCodeAt(0)]=d;if(d.pop||d.push||d.next){if(!t)throw new Error("State-switching options are not allowed in stateless lexers (for token '"+d.defaultType+"')");if(d.fallback)throw new Error("State-switching options are not allowed on fallback tokens (for token '"+d.defaultType+"')")}if(0!==p.length){i=!1,h.push(d);for(var B=0;B<p.length;B++){var E=p[B];if(n(E))if(null===c)c=E.unicode;else if(c!==E.unicode&&!1===d.fallback)throw new Error("If one rule is /u then all must be")}var m=a(p.map(o)),b=new RegExp(m);if(b.test(""))throw new Error("RegExp matches empty string: "+b);if(new RegExp("|"+m).exec("").length-1>0)throw new Error("RegExp has capture groups: "+b+"\nUse (?: … ) instead");if(!d.lineBreaks&&b.test("\n"))throw new Error("Rule should declare lineBreaks: "+b);f.push(r(m))}}var y=l&&l.fallback,w=A&&!y?"ym":"gm",Q=A||y?"":"|";return!0===c&&(w+="u"),{regexp:new RegExp(a(f)+Q,w),groups:h,fast:s,error:l||u}}function h(e,t,A){var n=e&&(e.push||e.next);if(n&&!A[n])throw new Error("Missing state '"+n+"' (in token '"+e.defaultType+"' of state '"+t+"')");if(e&&e.pop&&1!=+e.pop)throw new Error("pop must be 1 (in token '"+e.defaultType+"' of state '"+t+"')")}var f=function(e,t){this.startState=t,this.states=e,this.buffer="",this.stack=[],this.reset()};f.prototype.reset=function(e,t){return this.buffer=e||"",this.index=0,this.line=t?t.line:1,this.col=t?t.col:1,this.queuedToken=t?t.queuedToken:null,this.queuedText=t?t.queuedText:"",this.queuedThrow=t?t.queuedThrow:null,this.setState(t?t.state:this.startState),this.stack=t&&t.stack?t.stack.slice():[],this.queuedGroup=null,this},f.prototype.save=function(){return{line:this.line,col:this.col,state:this.state,stack:this.stack.slice(),queuedToken:this.queuedToken,queuedText:this.queuedText,queuedThrow:this.queuedThrow}},f.prototype.setState=function(e){if(e&&this.state!==e){this.state=e;var t=this.states[e];this.groups=t.groups,this.error=t.error,this.re=t.regexp,this.fast=t.fast}},f.prototype.popState=function(){this.setState(this.stack.pop())},f.prototype.pushState=function(e){this.stack.push(this.state),this.setState(e)};var g=A?function(e,t){return e.exec(t)}:function(e,t){var A=e.exec(t);return 0===A[0].length?null:A};function d(){return this.value}if(f.prototype._getGroup=function(e){for(var t=this.groups.length,A=0;A<t;A++)if(void 0!==e[A+1])return this.groups[A];throw new Error("Cannot find token type for matched text")},f.prototype.next=function(){var e=this.index;if(this.queuedGroup){var t=this._token(this.queuedGroup,this.queuedText,e);return this.queuedGroup=null,this.queuedText="",t}var A=this.buffer;if(e!==A.length){if(a=this.fast[A.charCodeAt(e)])return this._token(a,A.charAt(e),e);var n=this.re;n.lastIndex=e;var l=g(n,A),r=this.error;if(null==l)return this._token(r,A.slice(e,A.length),e);var a=this._getGroup(l),o=l[0];return r.fallback&&l.index!==e?(this.queuedGroup=a,this.queuedText=o,this._token(r,A.slice(e,l.index),e)):this._token(a,o,e)}},f.prototype._token=function(e,t,A){var n=0;if(e.lineBreaks){var l=/\n/g,r=1;if("\n"===t)n=1;else for(;l.exec(t);)n++,r=l.lastIndex}var a={type:"function"==typeof e.type&&e.type(t)||e.defaultType,value:"function"==typeof e.value?e.value(t):t,text:t,toString:d,offset:A,lineBreaks:n,line:this.line,col:this.col},o=t.length;if(this.index+=o,this.line+=n,0!==n?this.col=o-r+1:this.col+=o,e.shouldThrow)throw new Error(this.formatError(a,"invalid syntax"));return e.pop?this.popState():e.push?this.pushState(e.push):e.next&&this.setState(e.next),a},"undefined"!=typeof Symbol&&Symbol.iterator){var p=function(e){this.lexer=e};p.prototype.next=function(){var e=this.lexer.next();return{value:e,done:!e}},p.prototype[Symbol.iterator]=function(){return this},f.prototype[Symbol.iterator]=function(){return new p(this)}}return f.prototype.formatError=function(e,t){if(null==e){var A=this.buffer.slice(this.index);e={text:A,offset:this.index,lineBreaks:-1===A.indexOf("\n")?0:1,line:this.line,col:this.col}}var n=Math.max(0,e.offset-e.col+1),l=e.lineBreaks?e.text.indexOf("\n"):e.text.length,r=this.buffer.substring(n,e.offset+l);return t+=" at line "+e.line+" col "+e.col+":\n\n",t+="  "+r+"\n",t+="  "+Array(e.col).join(" ")+"^"},f.prototype.clone=function(){return new f(this.states,this.state)},f.prototype.has=function(e){return!0},{compile:function(e){var t=c(i(e));return new f({start:t},"start")},states:function(e,t){var A=e.$all?i(e.$all):[];delete e.$all;var n=Object.getOwnPropertyNames(e);t||(t=n[0]);for(var l=Object.create(null),r=0;r<n.length;r++)l[m=n[r]]=i(e[m]).concat(A);for(r=0;r<n.length;r++)for(var a=l[m=n[r]],o=Object.create(null),s=0;s<a.length;s++){var u=a[s];if(u.include){var g=[s,1];if(u.include!==m&&!o[u.include]){o[u.include]=!0;var d=l[u.include];if(!d)throw new Error("Cannot include nonexistent state '"+u.include+"' (in state '"+m+"')");for(var p=0;p<d.length;p++){var B=d[p];-1===a.indexOf(B)&&g.push(B)}}a.splice.apply(a,g),s--}}var E=Object.create(null);for(r=0;r<n.length;r++){var m;E[m=n[r]]=c(l[m],!0)}for(r=0;r<n.length;r++){var b=n[r],y=E[b],w=y.groups;for(s=0;s<w.length;s++)h(w[s],b,E);var Q=Object.getOwnPropertyNames(y.fast);for(s=0;s<Q.length;s++)h(y.fast[Q[s]],b,E)}return new f(E,t)},error:Object.freeze({error:!0}),fallback:Object.freeze({fallback:!0}),keywords:function(e){for(var t=Object.create(null),A=Object.create(null),n=Object.getOwnPropertyNames(e),l=0;l<n.length;l++){var r=n[l],a=e[r];(Array.isArray(a)?a:[a]).forEach((function(e){if((A[e.length]=A[e.length]||[]).push(e),"string"!=typeof e)throw new Error("keyword must be string (in keyword '"+r+"')");t[e]=r}))}function o(e){return JSON.stringify(e)}var s="";for(var i in s+="switch (value.length) {\n",A){var u=A[i];s+="case "+i+":\n",s+="switch (value) {\n",u.forEach((function(e){var A=t[e];s+="case "+o(e)+": return "+o(A)+"\n"})),s+="default: return\n",s+="}\n"}return s+="}\n",Function("value",s)}}},"function"==typeof define&&define.amd?define([],n):"object"==typeof t&&t.exports?t.exports=n():A.moo=n()}}),require_nearley=__commonJS({"../../node_modules/.pnpm/@hikerpig+nearley@2.21.0-beta.2/node_modules/@hikerpig/nearley/lib/nearley.js"(e,t){var A,n;A=e,n=function(){function e(t,A,n){return this.id=++e.highestId,this.name=t,this.symbols=A,this.postprocess=n,this}function t(e,t,A,n){this.rule=e,this.dot=t,this.reference=A,this.data=[],this.wantedBy=n,this.isComplete=this.dot===e.symbols.length}function A(e,t){this.grammar=e,this.index=t,this.states=[],this.wants={},this.scannable=[],this.completed={}}function n(e,t,A){this.rules=e,this.start=t||this.rules[0].name,this.options=A||{};var n=this.byName={};this.rules.forEach((function(e){n.hasOwnProperty(e.name)||(n[e.name]=[]),n[e.name].push(e)}))}function l(){this.reset("")}function r(e,t,r){if(e instanceof n){var a=e;r=t}else a=n.fromCompiled(e,t,{});for(var o in this.grammar=a,this.options={keepHistory:!1,lexer:a.lexer||new l},r||{})this.options[o]=r[o];this.lexer=this.options.lexer,this.lexerState=void 0;var s=new A(a,0);this.table=[s],s.wants[a.start]=[],s.predict(a.start),s.process(),this.current=0}function a(e){var t=typeof e;if("string"===t)return e;if("object"===t){if(e.literal)return JSON.stringify(e.literal);if(e instanceof RegExp)return e.toString();if(e.type)return"%"+e.type;if(e.test)return"<"+String(e.test)+">";throw new Error("Unknown symbol type: "+e)}}return e.highestId=0,e.prototype.toString=function(e){var t=void 0===e?this.symbols.map(a).join(" "):this.symbols.slice(0,e).map(a).join(" ")+" ● "+this.symbols.slice(e).map(a).join(" ");return this.name+" → "+t},t.prototype.toString=function(){return"{"+this.rule.toString(this.dot)+"}, from: "+(this.reference||0)},t.prototype.nextState=function(e){var A=new t(this.rule,this.dot+1,this.reference,this.wantedBy);return A.left=this,A.right=e,A.isComplete&&(A.data=A.build(),A.right=void 0),A},t.prototype.build=function(){var e=[],t=this;do{e.push(t.right.data),t=t.left}while(t.left);return e.reverse(),e},t.prototype.finish=function(){this.rule.postprocess&&(this.data=this.rule.postprocess(this.data,this.reference,r.fail))},A.prototype.process=function(e){for(var t=this.states,A=this.wants,n=this.completed,l=0;l<t.length;l++){var a=t[l];if(a.isComplete){if(a.finish(),a.data!==r.fail){for(var o=a.wantedBy,s=o.length;s--;){var i=o[s];this.complete(i,a)}if(a.reference===this.index){var u=a.rule.name;(this.completed[u]=this.completed[u]||[]).push(a)}}}else{if("string"!=typeof(u=a.rule.symbols[a.dot])){this.scannable.push(a);continue}if(A[u]){if(A[u].push(a),n.hasOwnProperty(u)){var c=n[u];for(s=0;s<c.length;s++){var h=c[s];this.complete(a,h)}}}else A[u]=[a],this.predict(u)}}},A.prototype.predict=function(e){for(var A=this.grammar.byName[e]||[],n=0;n<A.length;n++){var l=A[n],r=this.wants[e],a=new t(l,0,this.index,r);this.states.push(a)}},A.prototype.complete=function(e,t){var A=e.nextState(t);this.states.push(A)},n.fromCompiled=function(t,A){var l=t.Lexer,r=t.ParserOptions;t.ParserStart&&(A=t.ParserStart,t=t.ParserRules);var a=new n(t=t.map((function(t){return new e(t.name,t.symbols,t.postprocess)})),A,r);return a.lexer=l,a},l.prototype.reset=function(e,t){this.buffer=e,this.index=0,this.line=t?t.line:1,this.lastLineBreak=t?-t.col:0},l.prototype.next=function(){if(this.index<this.buffer.length){var e=this.buffer[this.index++];return"\n"===e&&(this.line+=1,this.lastLineBreak=this.index),{value:e}}},l.prototype.save=function(){return{line:this.line,col:this.index-this.lastLineBreak}},l.prototype.formatError=function(e,t){var A=this.buffer;if("string"==typeof A){var n=A.split("\n").slice(Math.max(0,this.line-5),this.line),l=A.indexOf("\n",this.index);-1===l&&(l=A.length);var r=this.index-this.lastLineBreak,a=String(this.line).length;return t+=" at line "+this.line+" col "+r+":\n\n",t+=n.map((function(e,t){return o(this.line-n.length+t+1,a)+" "+e}),this).join("\n"),t+="\n"+o("",a+r)+"^\n"}return t+" at index "+(this.index-1);function o(e,t){var A=String(e);return Array(t-A.length+1).join(" ")+A}},r.fail={},r.prototype.feed=function(e){var t,n=this.lexer;for(n.reset(e,this.lexerState);;){try{if(!(t=n.next()))break}catch(e){var r=new A(this.grammar,this.current+1);throw this.table.push(r),(d=new Error(this.reportLexerError(e))).offset=this.current,d.token=e.token,d}var a=this.table[this.current];this.options.keepHistory||delete this.table[this.current-1];var o=this.current+1;r=new A(this.grammar,o),this.table.push(r);for(var s=void 0!==t.text?t.text:t.value,i=n.constructor===l?t.value:t,u=a.scannable,c=u.length;c--;){var h=u[c],f=h.rule.symbols[h.dot];if(f.test?f.test(i):f.type?f.type===t.type:f.literal===s){var g=h.nextState({data:i,token:t,isToken:!0,reference:o-1});r.states.push(g)}}if(r.process(),0===r.states.length){if(r.grammar.options.skipUnmatchSymbols.length&&r.grammar.options.skipUnmatchSymbols.some((function(e){if(e.test?e.test(i):e.type?e.type===t.type:e.literal===s)return!0}))){this.table.pop();continue}var d;throw(d=new Error(this.reportError(t))).offset=this.current,d.token=t,d}this.options.keepHistory&&(a.lexerState=n.save()),this.current++}return a&&(this.lexerState=n.save()),this.results=this.finish(),this},r.prototype.reportLexerError=function(e){var t,A,n=e.token;return n?(t="input "+JSON.stringify(n.text[0])+" (lexer error)",A=this.lexer.formatError(n,"Syntax error")):(t="input (lexer error)",A=e.message),this.reportErrorCommon(A,t)},r.prototype.reportError=function(e){var t=(e.type?e.type+" token: ":"")+JSON.stringify(void 0!==e.value?e.value:e),A=this.lexer.formatError(e,"Syntax error");return this.reportErrorCommon(A,t)},r.prototype.reportErrorCommon=function(e,t){var A=[];A.push(e);var n=this.table.length-2,l=this.table[n],r=l.states.filter((function(e){var t=e.rule.symbols[e.dot];return t&&"string"!=typeof t}));return 0===r.length?(A.push("Unexpected "+t+". I did not expect any more input. Here is the state of my parse table:\n"),this.displayStateStack(l.states,A)):(A.push("Unexpected "+t+". Instead, I was expecting to see one of the following:\n"),r.map((function(e){return this.buildFirstStateStack(e,[])||[e]}),this).forEach((function(e){var t=e[0],n=t.rule.symbols[t.dot],l=this.getSymbolDisplay(n);A.push("A "+l+" based on:"),this.displayStateStack(e,A)}),this)),A.push(""),A.join("\n")},r.prototype.displayStateStack=function(e,t){for(var A,n=0,l=0;l<e.length;l++){var r=e[l],a=r.rule.toString(r.dot);a===A?n++:(n>0&&t.push("    ^ "+n+" more lines identical to this"),n=0,t.push("    "+a)),A=a}},r.prototype.getSymbolDisplay=function(e){return function(e){var t=typeof e;if("string"===t)return e;if("object"===t){if(e.literal)return JSON.stringify(e.literal);if(e instanceof RegExp)return"character matching "+e;if(e.type)return e.type+" token";if(e.test)return"token matching "+String(e.test);throw new Error("Unknown symbol type: "+e)}}(e)},r.prototype.buildFirstStateStack=function(e,t){if(-1!==t.indexOf(e))return null;if(0===e.wantedBy.length)return[e];var A=e.wantedBy[0],n=[e].concat(t),l=this.buildFirstStateStack(A,n);return null===l?null:[e].concat(l)},r.prototype.save=function(){var e=this.table[this.current];return e.lexerState=this.lexerState,e},r.prototype.restore=function(e){var t=e.index;this.current=t,this.table[t]=e,this.table.splice(t+1),this.lexerState=e.lexerState,this.results=this.finish()},r.prototype.rewind=function(e){if(!this.options.keepHistory)throw new Error("set option `keepHistory` to enable rewinding");this.restore(this.table[e])},r.prototype.finish=function(){var e=[],t=this.grammar.start;return this.table[this.table.length-1].states.forEach((function(A){A.rule.name===t&&A.dot===A.rule.symbols.length&&0===A.reference&&A.data!==r.fail&&e.push(A)})),e.map((function(e){return e.data}))},{Parser:r,Grammar:n,Rule:e}},"object"==typeof t&&t.exports?t.exports=n():A.nearley=n()}}),require_dayjs_min=__commonJS({"../../node_modules/.pnpm/dayjs@1.10.7/node_modules/dayjs/dayjs.min.js"(e,t){var A,n;A=e,n=function(){"use strict";var e=6e4,t=36e5,A="millisecond",n="second",l="minute",r="hour",a="day",o="week",s="month",i="quarter",u="year",c="date",h="Invalid Date",f=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,g=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,d={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_")},p=function(e,t,A){var n=String(e);return!n||n.length>=t?e:""+Array(t+1-n.length).join(A)+e},B={s:p,z:function(e){var t=-e.utcOffset(),A=Math.abs(t),n=Math.floor(A/60),l=A%60;return(t<=0?"+":"-")+p(n,2,"0")+":"+p(l,2,"0")},m:function e(t,A){if(t.date()<A.date())return-e(A,t);var n=12*(A.year()-t.year())+(A.month()-t.month()),l=t.clone().add(n,s),r=A-l<0,a=t.clone().add(n+(r?-1:1),s);return+(-(n+(A-l)/(r?l-a:a-l))||0)},a:function(e){return e<0?Math.ceil(e)||0:Math.floor(e)},p:function(e){return{M:s,y:u,w:o,d:a,D:c,h:r,m:l,s:n,ms:A,Q:i}[e]||String(e||"").toLowerCase().replace(/s$/,"")},u:function(e){return void 0===e}},E="en",m={};m[E]=d;var b=function(e){return e instanceof C},y=function(e,t,A){var n;if(!e)return E;if("string"==typeof e)m[e]&&(n=e),t&&(m[e]=t,n=e);else{var l=e.name;m[l]=e,n=l}return!A&&n&&(E=n),n||!A&&E},w=function(e,t){if(b(e))return e.clone();var A="object"==typeof t?t:{};return A.date=e,A.args=arguments,new C(A)},Q=B;Q.l=y,Q.i=b,Q.w=function(e,t){return w(e,{locale:t.$L,utc:t.$u,x:t.$x,$offset:t.$offset})};var C=function(){function d(e){this.$L=y(e.locale,null,!0),this.parse(e)}var p=d.prototype;return p.parse=function(e){this.$d=function(e){var t=e.date,A=e.utc;if(null===t)return new Date(NaN);if(Q.u(t))return new Date;if(t instanceof Date)return new Date(t);if("string"==typeof t&&!/Z$/i.test(t)){var n=t.match(f);if(n){var l=n[2]-1||0,r=(n[7]||"0").substring(0,3);return A?new Date(Date.UTC(n[1],l,n[3]||1,n[4]||0,n[5]||0,n[6]||0,r)):new Date(n[1],l,n[3]||1,n[4]||0,n[5]||0,n[6]||0,r)}}return new Date(t)}(e),this.$x=e.x||{},this.init()},p.init=function(){var e=this.$d;this.$y=e.getFullYear(),this.$M=e.getMonth(),this.$D=e.getDate(),this.$W=e.getDay(),this.$H=e.getHours(),this.$m=e.getMinutes(),this.$s=e.getSeconds(),this.$ms=e.getMilliseconds()},p.$utils=function(){return Q},p.isValid=function(){return!(this.$d.toString()===h)},p.isSame=function(e,t){var A=w(e);return this.startOf(t)<=A&&A<=this.endOf(t)},p.isAfter=function(e,t){return w(e)<this.startOf(t)},p.isBefore=function(e,t){return this.endOf(t)<w(e)},p.$g=function(e,t,A){return Q.u(e)?this[t]:this.set(A,e)},p.unix=function(){return Math.floor(this.valueOf()/1e3)},p.valueOf=function(){return this.$d.getTime()},p.startOf=function(e,t){var A=this,i=!!Q.u(t)||t,h=Q.p(e),f=function(e,t){var n=Q.w(A.$u?Date.UTC(A.$y,t,e):new Date(A.$y,t,e),A);return i?n:n.endOf(a)},g=function(e,t){return Q.w(A.toDate()[e].apply(A.toDate("s"),(i?[0,0,0,0]:[23,59,59,999]).slice(t)),A)},d=this.$W,p=this.$M,B=this.$D,E="set"+(this.$u?"UTC":"");switch(h){case u:return i?f(1,0):f(31,11);case s:return i?f(1,p):f(0,p+1);case o:var m=this.$locale().weekStart||0,b=(d<m?d+7:d)-m;return f(i?B-b:B+(6-b),p);case a:case c:return g(E+"Hours",0);case r:return g(E+"Minutes",1);case l:return g(E+"Seconds",2);case n:return g(E+"Milliseconds",3);default:return this.clone()}},p.endOf=function(e){return this.startOf(e,!1)},p.$set=function(e,t){var o,i=Q.p(e),h="set"+(this.$u?"UTC":""),f=(o={},o[a]=h+"Date",o[c]=h+"Date",o[s]=h+"Month",o[u]=h+"FullYear",o[r]=h+"Hours",o[l]=h+"Minutes",o[n]=h+"Seconds",o[A]=h+"Milliseconds",o)[i],g=i===a?this.$D+(t-this.$W):t;if(i===s||i===u){var d=this.clone().set(c,1);d.$d[f](g),d.init(),this.$d=d.set(c,Math.min(this.$D,d.daysInMonth())).$d}else f&&this.$d[f](g);return this.init(),this},p.set=function(e,t){return this.clone().$set(e,t)},p.get=function(e){return this[Q.p(e)]()},p.add=function(A,i){var c,h=this;A=Number(A);var f=Q.p(i),g=function(e){var t=w(h);return Q.w(t.date(t.date()+Math.round(e*A)),h)};if(f===s)return this.set(s,this.$M+A);if(f===u)return this.set(u,this.$y+A);if(f===a)return g(1);if(f===o)return g(7);var d=(c={},c[l]=e,c[r]=t,c[n]=1e3,c)[f]||1,p=this.$d.getTime()+A*d;return Q.w(p,this)},p.subtract=function(e,t){return this.add(-1*e,t)},p.format=function(e){var t=this,A=this.$locale();if(!this.isValid())return A.invalidDate||h;var n=e||"YYYY-MM-DDTHH:mm:ssZ",l=Q.z(this),r=this.$H,a=this.$m,o=this.$M,s=A.weekdays,i=A.months,u=function(e,A,l,r){return e&&(e[A]||e(t,n))||l[A].substr(0,r)},c=function(e){return Q.s(r%12||12,e,"0")},f=A.meridiem||function(e,t,A){var n=e<12?"AM":"PM";return A?n.toLowerCase():n},d={YY:String(this.$y).slice(-2),YYYY:this.$y,M:o+1,MM:Q.s(o+1,2,"0"),MMM:u(A.monthsShort,o,i,3),MMMM:u(i,o),D:this.$D,DD:Q.s(this.$D,2,"0"),d:String(this.$W),dd:u(A.weekdaysMin,this.$W,s,2),ddd:u(A.weekdaysShort,this.$W,s,3),dddd:s[this.$W],H:String(r),HH:Q.s(r,2,"0"),h:c(1),hh:c(2),a:f(r,a,!0),A:f(r,a,!1),m:String(a),mm:Q.s(a,2,"0"),s:String(this.$s),ss:Q.s(this.$s,2,"0"),SSS:Q.s(this.$ms,3,"0"),Z:l};return n.replace(g,(function(e,t){return t||d[e]||l.replace(":","")}))},p.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},p.diff=function(A,c,h){var f,g=Q.p(c),d=w(A),p=(d.utcOffset()-this.utcOffset())*e,B=this-d,E=Q.m(this,d);return E=(f={},f[u]=E/12,f[s]=E,f[i]=E/3,f[o]=(B-p)/6048e5,f[a]=(B-p)/864e5,f[r]=B/t,f[l]=B/e,f[n]=B/1e3,f)[g]||B,h?E:Q.a(E)},p.daysInMonth=function(){return this.endOf(s).$D},p.$locale=function(){return m[this.$L]},p.locale=function(e,t){if(!e)return this.$L;var A=this.clone(),n=y(e,t,!0);return n&&(A.$L=n),A},p.clone=function(){return Q.w(this.$d,this)},p.toDate=function(){return new Date(this.valueOf())},p.toJSON=function(){return this.isValid()?this.toISOString():null},p.toISOString=function(){return this.$d.toISOString()},p.toString=function(){return this.$d.toUTCString()},d}(),M=C.prototype;return w.prototype=M,[["$ms",A],["$s",n],["$m",l],["$H",r],["$W",a],["$M",s],["$y",u],["$D",c]].forEach((function(e){M[e[1]]=function(t){return this.$g(t,e[0],e[1])}})),w.extend=function(e,t){return e.$i||(e(t,C,w),e.$i=!0),w},w.locale=y,w.isDayjs=b,w.unix=function(e){return w(1e3*e)},w.en=m[E],w.Ls=m,w.p={},w},"object"==typeof e&&void 0!==t?t.exports=n():"function"==typeof define&&define.amd?define(n):(A="undefined"!=typeof globalThis?globalThis:A||self).dayjs=n()}}),require_canvas=__commonJS({"aliases/canvas.js"(e,t){t.exports={}}}),require_path_browserify=__commonJS({"node_modules/path-browserify/index.js"(e,t){"use strict";function A(e){if("string"!=typeof e)throw new TypeError("Path must be a string. Received "+JSON.stringify(e))}function n(e,t){for(var A,n="",l=0,r=-1,a=0,o=0;o<=e.length;++o){if(o<e.length)A=e.charCodeAt(o);else{if(47===A)break;A=47}if(47===A){if(r===o-1||1===a);else if(r!==o-1&&2===a){if(n.length<2||2!==l||46!==n.charCodeAt(n.length-1)||46!==n.charCodeAt(n.length-2))if(n.length>2){var s=n.lastIndexOf("/");if(s!==n.length-1){-1===s?(n="",l=0):l=(n=n.slice(0,s)).length-1-n.lastIndexOf("/"),r=o,a=0;continue}}else if(2===n.length||1===n.length){n="",l=0,r=o,a=0;continue}t&&(n.length>0?n+="/..":n="..",l=2)}else n.length>0?n+="/"+e.slice(r+1,o):n=e.slice(r+1,o),l=o-r-1;r=o,a=0}else 46===A&&-1!==a?++a:a=-1}return n}var l={resolve:function(){for(var e,t="",l=!1,r=arguments.length-1;r>=-1&&!l;r--){var a;r>=0?a=arguments[r]:(void 0===e&&(e=process.cwd()),a=e),A(a),0!==a.length&&(t=a+"/"+t,l=47===a.charCodeAt(0))}return t=n(t,!l),l?t.length>0?"/"+t:"/":t.length>0?t:"."},normalize:function(e){if(A(e),0===e.length)return".";var t=47===e.charCodeAt(0),l=47===e.charCodeAt(e.length-1);return 0!==(e=n(e,!t)).length||t||(e="."),e.length>0&&l&&(e+="/"),t?"/"+e:e},isAbsolute:function(e){return A(e),e.length>0&&47===e.charCodeAt(0)},join:function(){if(0===arguments.length)return".";for(var e,t=0;t<arguments.length;++t){var n=arguments[t];A(n),n.length>0&&(void 0===e?e=n:e+="/"+n)}return void 0===e?".":l.normalize(e)},relative:function(e,t){if(A(e),A(t),e===t)return"";if((e=l.resolve(e))===(t=l.resolve(t)))return"";for(var n=1;n<e.length&&47===e.charCodeAt(n);++n);for(var r=e.length,a=r-n,o=1;o<t.length&&47===t.charCodeAt(o);++o);for(var s=t.length-o,i=a<s?a:s,u=-1,c=0;c<=i;++c){if(c===i){if(s>i){if(47===t.charCodeAt(o+c))return t.slice(o+c+1);if(0===c)return t.slice(o+c)}else a>i&&(47===e.charCodeAt(n+c)?u=c:0===c&&(u=0));break}var h=e.charCodeAt(n+c);if(h!==t.charCodeAt(o+c))break;47===h&&(u=c)}var f="";for(c=n+u+1;c<=r;++c)c!==r&&47!==e.charCodeAt(c)||(0===f.length?f+="..":f+="/..");return f.length>0?f+t.slice(o+u):(o+=u,47===t.charCodeAt(o)&&++o,t.slice(o))},_makeLong:function(e){return e},dirname:function(e){if(A(e),0===e.length)return".";for(var t=e.charCodeAt(0),n=47===t,l=-1,r=!0,a=e.length-1;a>=1;--a)if(47===(t=e.charCodeAt(a))){if(!r){l=a;break}}else r=!1;return-1===l?n?"/":".":n&&1===l?"//":e.slice(0,l)},basename:function(e,t){if(void 0!==t&&"string"!=typeof t)throw new TypeError('"ext" argument must be a string');A(e);var n,l=0,r=-1,a=!0;if(void 0!==t&&t.length>0&&t.length<=e.length){if(t.length===e.length&&t===e)return"";var o=t.length-1,s=-1;for(n=e.length-1;n>=0;--n){var i=e.charCodeAt(n);if(47===i){if(!a){l=n+1;break}}else-1===s&&(a=!1,s=n+1),o>=0&&(i===t.charCodeAt(o)?-1==--o&&(r=n):(o=-1,r=s))}return l===r?r=s:-1===r&&(r=e.length),e.slice(l,r)}for(n=e.length-1;n>=0;--n)if(47===e.charCodeAt(n)){if(!a){l=n+1;break}}else-1===r&&(a=!1,r=n+1);return-1===r?"":e.slice(l,r)},extname:function(e){A(e);for(var t=-1,n=0,l=-1,r=!0,a=0,o=e.length-1;o>=0;--o){var s=e.charCodeAt(o);if(47!==s)-1===l&&(r=!1,l=o+1),46===s?-1===t?t=o:1!==a&&(a=1):-1!==t&&(a=-1);else if(!r){n=o+1;break}}return-1===t||-1===l||0===a||1===a&&t===l-1&&t===n+1?"":e.slice(t,l)},format:function(e){if(null===e||"object"!=typeof e)throw new TypeError('The "pathObject" argument must be of type Object. Received type '+typeof e);return function(e,t){var A=t.dir||t.root,n=t.base||(t.name||"")+(t.ext||"");return A?A===t.root?A+n:A+e+n:n}("/",e)},parse:function(e){A(e);var t={root:"",dir:"",base:"",ext:"",name:""};if(0===e.length)return t;var n,l=e.charCodeAt(0),r=47===l;r?(t.root="/",n=1):n=0;for(var a=-1,o=0,s=-1,i=!0,u=e.length-1,c=0;u>=n;--u)if(47!==(l=e.charCodeAt(u)))-1===s&&(i=!1,s=u+1),46===l?-1===a?a=u:1!==c&&(c=1):-1!==a&&(c=-1);else if(!i){o=u+1;break}return-1===a||-1===s||0===c||1===c&&a===s-1&&a===o+1?-1!==s&&(t.base=t.name=0===o&&r?e.slice(1,s):e.slice(o,s)):(0===o&&r?(t.name=e.slice(1,a),t.base=e.slice(1,s)):(t.name=e.slice(o,a),t.base=e.slice(o,s)),t.ext=e.slice(a,s)),o>0?t.dir=e.slice(0,o-1):r&&(t.dir="/"),t},sep:"/",delimiter:":",win32:null,posix:null};l.posix=l,t.exports=l}}),require_punycode=__commonJS({"../../node_modules/.pnpm/punycode@1.4.1/node_modules/punycode/punycode.js"(e,t){!function(A){var n="object"==typeof e&&e&&!e.nodeType&&e,l="object"==typeof t&&t&&!t.nodeType&&t,r="object"==typeof global&&global;r.global!==r&&r.window!==r&&r.self!==r||(A=r);var a,o,s=2147483647,i=36,u=/^xn--/,c=/[^\x20-\x7E]/,h=/[\x2E\u3002\uFF0E\uFF61]/g,f={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},g=Math.floor,d=String.fromCharCode;function p(e){throw new RangeError(f[e])}function B(e,t){for(var A=e.length,n=[];A--;)n[A]=t(e[A]);return n}function E(e,t){var A=e.split("@"),n="";return A.length>1&&(n=A[0]+"@",e=A[1]),n+B((e=e.replace(h,".")).split("."),t).join(".")}function m(e){for(var t,A,n=[],l=0,r=e.length;l<r;)(t=e.charCodeAt(l++))>=55296&&t<=56319&&l<r?56320==(64512&(A=e.charCodeAt(l++)))?n.push(((1023&t)<<10)+(1023&A)+65536):(n.push(t),l--):n.push(t);return n}function b(e){return B(e,(function(e){var t="";return e>65535&&(t+=d((e-=65536)>>>10&1023|55296),e=56320|1023&e),t+=d(e)})).join("")}function y(e,t){return e+22+75*(e<26)-((0!=t)<<5)}function w(e,t,A){var n=0;for(e=A?g(e/700):e>>1,e+=g(e/t);e>455;n+=i)e=g(e/35);return g(n+36*e/(e+38))}function Q(e){var t,A,n,l,r,a,o,u,c,h,f,d=[],B=e.length,E=0,m=128,y=72;for((A=e.lastIndexOf("-"))<0&&(A=0),n=0;n<A;++n)e.charCodeAt(n)>=128&&p("not-basic"),d.push(e.charCodeAt(n));for(l=A>0?A+1:0;l<B;){for(r=E,a=1,o=i;l>=B&&p("invalid-input"),((u=(f=e.charCodeAt(l++))-48<10?f-22:f-65<26?f-65:f-97<26?f-97:i)>=i||u>g((s-E)/a))&&p("overflow"),E+=u*a,!(u<(c=o<=y?1:o>=y+26?26:o-y));o+=i)a>g(s/(h=i-c))&&p("overflow"),a*=h;y=w(E-r,t=d.length+1,0==r),g(E/t)>s-m&&p("overflow"),m+=g(E/t),E%=t,d.splice(E++,0,m)}return b(d)}function C(e){var t,A,n,l,r,a,o,u,c,h,f,B,E,b,Q,C=[];for(B=(e=m(e)).length,t=128,A=0,r=72,a=0;a<B;++a)(f=e[a])<128&&C.push(d(f));for(n=l=C.length,l&&C.push("-");n<B;){for(o=s,a=0;a<B;++a)(f=e[a])>=t&&f<o&&(o=f);for(o-t>g((s-A)/(E=n+1))&&p("overflow"),A+=(o-t)*E,t=o,a=0;a<B;++a)if((f=e[a])<t&&++A>s&&p("overflow"),f==t){for(u=A,c=i;!(u<(h=c<=r?1:c>=r+26?26:c-r));c+=i)Q=u-h,b=i-h,C.push(d(y(h+Q%b,0))),u=g(Q/b);C.push(d(y(u,0))),r=w(A,E,n==l),A=0,++n}++A,++t}return C.join("")}if(a={version:"1.4.1",ucs2:{decode:m,encode:b},decode:Q,encode:C,toASCII:function(e){return E(e,(function(e){return c.test(e)?"xn--"+C(e):e}))},toUnicode:function(e){return E(e,(function(e){return u.test(e)?Q(e.slice(4).toLowerCase()):e}))}},"function"==typeof define&&"object"==typeof define.amd&&define.amd)define("punycode",(function(){return a}));else if(n&&l)if(t.exports==n)l.exports=a;else for(o in a)a.hasOwnProperty(o)&&(n[o]=a[o]);else A.punycode=a}(e)}}),require_shams=__commonJS({"../../node_modules/.pnpm/has-symbols@1.0.3/node_modules/has-symbols/shams.js"(e,t){"use strict";t.exports=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var e={},t=Symbol("test"),A=Object(t);if("string"==typeof t)return!1;if("[object Symbol]"!==Object.prototype.toString.call(t))return!1;if("[object Symbol]"!==Object.prototype.toString.call(A))return!1;for(t in e[t]=42,e)return!1;if("function"==typeof Object.keys&&0!==Object.keys(e).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(e).length)return!1;var n=Object.getOwnPropertySymbols(e);if(1!==n.length||n[0]!==t)return!1;if(!Object.prototype.propertyIsEnumerable.call(e,t))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var l=Object.getOwnPropertyDescriptor(e,t);if(42!==l.value||!0!==l.enumerable)return!1}return!0}}}),require_has_symbols=__commonJS({"../../node_modules/.pnpm/has-symbols@1.0.3/node_modules/has-symbols/index.js"(e,t){"use strict";var A="undefined"!=typeof Symbol&&Symbol,n=require_shams();t.exports=function(){return"function"==typeof A&&("function"==typeof Symbol&&("symbol"==typeof A("foo")&&("symbol"==typeof Symbol("bar")&&n())))}}}),require_has_proto=__commonJS({"../../node_modules/.pnpm/has-proto@1.0.1/node_modules/has-proto/index.js"(e,t){"use strict";var A={foo:{}},n=Object;t.exports=function(){return{__proto__:A}.foo===A.foo&&!({__proto__:null}instanceof n)}}}),require_implementation=__commonJS({"../../node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/implementation.js"(e,t){"use strict";var A=Object.prototype.toString,n=Math.max,l=function(e,t){for(var A=[],n=0;n<e.length;n+=1)A[n]=e[n];for(var l=0;l<t.length;l+=1)A[l+e.length]=t[l];return A};t.exports=function(e){var t=this;if("function"!=typeof t||"[object Function]"!==A.apply(t))throw new TypeError("Function.prototype.bind called on incompatible "+t);for(var r,a=function(e,t){for(var A=[],n=t||0,l=0;n<e.length;n+=1,l+=1)A[l]=e[n];return A}(arguments,1),o=n(0,t.length-a.length),s=[],i=0;i<o;i++)s[i]="$"+i;if(r=Function("binder","return function ("+function(e,t){for(var A="",n=0;n<e.length;n+=1)A+=e[n],n+1<e.length&&(A+=t);return A}(s,",")+"){ return binder.apply(this,arguments); }")((function(){if(this instanceof r){var A=t.apply(this,l(a,arguments));return Object(A)===A?A:this}return t.apply(e,l(a,arguments))})),t.prototype){var u=function(){};u.prototype=t.prototype,r.prototype=new u,u.prototype=null}return r}}}),require_function_bind=__commonJS({"../../node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/index.js"(e,t){"use strict";var A=require_implementation();t.exports=Function.prototype.bind||A}}),require_hasown=__commonJS({"../../node_modules/.pnpm/hasown@2.0.1/node_modules/hasown/index.js"(e,t){"use strict";var A=Function.prototype.call,n=Object.prototype.hasOwnProperty,l=require_function_bind();t.exports=l.call(A,n)}}),require_get_intrinsic=__commonJS({"../../node_modules/.pnpm/get-intrinsic@1.2.2/node_modules/get-intrinsic/index.js"(e,t){"use strict";var A,n=SyntaxError,l=Function,r=TypeError,a=function(e){try{return l('"use strict"; return ('+e+").constructor;")()}catch(e){}},o=Object.getOwnPropertyDescriptor;if(o)try{o({},"")}catch(e){o=null}var s,i=function(){throw new r},u=o?function(){try{return i}catch(e){try{return o(arguments,"callee").get}catch(e){return i}}}():i,c=require_has_symbols()(),h=require_has_proto()(),f=Object.getPrototypeOf||(h?function(e){return e.__proto__}:null),g={},d="undefined"!=typeof Uint8Array&&f?f(Uint8Array):A,p={"%AggregateError%":"undefined"==typeof AggregateError?A:AggregateError,"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?A:ArrayBuffer,"%ArrayIteratorPrototype%":c&&f?f([][Symbol.iterator]()):A,"%AsyncFromSyncIteratorPrototype%":A,"%AsyncFunction%":g,"%AsyncGenerator%":g,"%AsyncGeneratorFunction%":g,"%AsyncIteratorPrototype%":g,"%Atomics%":"undefined"==typeof Atomics?A:Atomics,"%BigInt%":"undefined"==typeof BigInt?A:BigInt,"%BigInt64Array%":"undefined"==typeof BigInt64Array?A:BigInt64Array,"%BigUint64Array%":"undefined"==typeof BigUint64Array?A:BigUint64Array,"%Boolean%":Boolean,"%DataView%":"undefined"==typeof DataView?A:DataView,"%Date%":Date,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Error,"%eval%":eval,"%EvalError%":EvalError,"%Float32Array%":"undefined"==typeof Float32Array?A:Float32Array,"%Float64Array%":"undefined"==typeof Float64Array?A:Float64Array,"%FinalizationRegistry%":"undefined"==typeof FinalizationRegistry?A:FinalizationRegistry,"%Function%":l,"%GeneratorFunction%":g,"%Int8Array%":"undefined"==typeof Int8Array?A:Int8Array,"%Int16Array%":"undefined"==typeof Int16Array?A:Int16Array,"%Int32Array%":"undefined"==typeof Int32Array?A:Int32Array,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":c&&f?f(f([][Symbol.iterator]())):A,"%JSON%":"object"==typeof JSON?JSON:A,"%Map%":"undefined"==typeof Map?A:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&c&&f?f((new Map)[Symbol.iterator]()):A,"%Math%":Math,"%Number%":Number,"%Object%":Object,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?A:Promise,"%Proxy%":"undefined"==typeof Proxy?A:Proxy,"%RangeError%":RangeError,"%ReferenceError%":ReferenceError,"%Reflect%":"undefined"==typeof Reflect?A:Reflect,"%RegExp%":RegExp,"%Set%":"undefined"==typeof Set?A:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&c&&f?f((new Set)[Symbol.iterator]()):A,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?A:SharedArrayBuffer,"%String%":String,"%StringIteratorPrototype%":c&&f?f(""[Symbol.iterator]()):A,"%Symbol%":c?Symbol:A,"%SyntaxError%":n,"%ThrowTypeError%":u,"%TypedArray%":d,"%TypeError%":r,"%Uint8Array%":"undefined"==typeof Uint8Array?A:Uint8Array,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?A:Uint8ClampedArray,"%Uint16Array%":"undefined"==typeof Uint16Array?A:Uint16Array,"%Uint32Array%":"undefined"==typeof Uint32Array?A:Uint32Array,"%URIError%":URIError,"%WeakMap%":"undefined"==typeof WeakMap?A:WeakMap,"%WeakRef%":"undefined"==typeof WeakRef?A:WeakRef,"%WeakSet%":"undefined"==typeof WeakSet?A:WeakSet};if(f)try{null.error}catch(e){s=f(f(e)),p["%Error.prototype%"]=s}var B=function e(t){var A;if("%AsyncFunction%"===t)A=a("async function () {}");else if("%GeneratorFunction%"===t)A=a("function* () {}");else if("%AsyncGeneratorFunction%"===t)A=a("async function* () {}");else if("%AsyncGenerator%"===t){var n=e("%AsyncGeneratorFunction%");n&&(A=n.prototype)}else if("%AsyncIteratorPrototype%"===t){var l=e("%AsyncGenerator%");l&&f&&(A=f(l.prototype))}return p[t]=A,A},E={"%ArrayBufferPrototype%":["ArrayBuffer","prototype"],"%ArrayPrototype%":["Array","prototype"],"%ArrayProto_entries%":["Array","prototype","entries"],"%ArrayProto_forEach%":["Array","prototype","forEach"],"%ArrayProto_keys%":["Array","prototype","keys"],"%ArrayProto_values%":["Array","prototype","values"],"%AsyncFunctionPrototype%":["AsyncFunction","prototype"],"%AsyncGenerator%":["AsyncGeneratorFunction","prototype"],"%AsyncGeneratorPrototype%":["AsyncGeneratorFunction","prototype","prototype"],"%BooleanPrototype%":["Boolean","prototype"],"%DataViewPrototype%":["DataView","prototype"],"%DatePrototype%":["Date","prototype"],"%ErrorPrototype%":["Error","prototype"],"%EvalErrorPrototype%":["EvalError","prototype"],"%Float32ArrayPrototype%":["Float32Array","prototype"],"%Float64ArrayPrototype%":["Float64Array","prototype"],"%FunctionPrototype%":["Function","prototype"],"%Generator%":["GeneratorFunction","prototype"],"%GeneratorPrototype%":["GeneratorFunction","prototype","prototype"],"%Int8ArrayPrototype%":["Int8Array","prototype"],"%Int16ArrayPrototype%":["Int16Array","prototype"],"%Int32ArrayPrototype%":["Int32Array","prototype"],"%JSONParse%":["JSON","parse"],"%JSONStringify%":["JSON","stringify"],"%MapPrototype%":["Map","prototype"],"%NumberPrototype%":["Number","prototype"],"%ObjectPrototype%":["Object","prototype"],"%ObjProto_toString%":["Object","prototype","toString"],"%ObjProto_valueOf%":["Object","prototype","valueOf"],"%PromisePrototype%":["Promise","prototype"],"%PromiseProto_then%":["Promise","prototype","then"],"%Promise_all%":["Promise","all"],"%Promise_reject%":["Promise","reject"],"%Promise_resolve%":["Promise","resolve"],"%RangeErrorPrototype%":["RangeError","prototype"],"%ReferenceErrorPrototype%":["ReferenceError","prototype"],"%RegExpPrototype%":["RegExp","prototype"],"%SetPrototype%":["Set","prototype"],"%SharedArrayBufferPrototype%":["SharedArrayBuffer","prototype"],"%StringPrototype%":["String","prototype"],"%SymbolPrototype%":["Symbol","prototype"],"%SyntaxErrorPrototype%":["SyntaxError","prototype"],"%TypedArrayPrototype%":["TypedArray","prototype"],"%TypeErrorPrototype%":["TypeError","prototype"],"%Uint8ArrayPrototype%":["Uint8Array","prototype"],"%Uint8ClampedArrayPrototype%":["Uint8ClampedArray","prototype"],"%Uint16ArrayPrototype%":["Uint16Array","prototype"],"%Uint32ArrayPrototype%":["Uint32Array","prototype"],"%URIErrorPrototype%":["URIError","prototype"],"%WeakMapPrototype%":["WeakMap","prototype"],"%WeakSetPrototype%":["WeakSet","prototype"]},m=require_function_bind(),b=require_hasown(),y=m.call(Function.call,Array.prototype.concat),w=m.call(Function.apply,Array.prototype.splice),Q=m.call(Function.call,String.prototype.replace),C=m.call(Function.call,String.prototype.slice),M=m.call(Function.call,RegExp.prototype.exec),I=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,T=/\\(\\)?/g,x=function(e,t){var A,l=e;if(b(E,l)&&(l="%"+(A=E[l])[0]+"%"),b(p,l)){var a=p[l];if(a===g&&(a=B(l)),void 0===a&&!t)throw new r("intrinsic "+e+" exists, but is not available. Please file an issue!");return{alias:A,name:l,value:a}}throw new n("intrinsic "+e+" does not exist!")};t.exports=function(e,t){if("string"!=typeof e||0===e.length)throw new r("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof t)throw new r('"allowMissing" argument must be a boolean');if(null===M(/^%?[^%]*%?$/,e))throw new n("`%` may not be present anywhere but at the beginning and end of the intrinsic name");var A=function(e){var t=C(e,0,1),A=C(e,-1);if("%"===t&&"%"!==A)throw new n("invalid intrinsic syntax, expected closing `%`");if("%"===A&&"%"!==t)throw new n("invalid intrinsic syntax, expected opening `%`");var l=[];return Q(e,I,(function(e,t,A,n){l[l.length]=A?Q(n,T,"$1"):t||e})),l}(e),l=A.length>0?A[0]:"",a=x("%"+l+"%",t),s=a.name,i=a.value,u=!1,c=a.alias;c&&(l=c[0],w(A,y([0,1],c)));for(var h=1,f=!0;h<A.length;h+=1){var g=A[h],d=C(g,0,1),B=C(g,-1);if(('"'===d||"'"===d||"`"===d||'"'===B||"'"===B||"`"===B)&&d!==B)throw new n("property names with quotes must have matching quotes");if("constructor"!==g&&f||(u=!0),b(p,s="%"+(l+="."+g)+"%"))i=p[s];else if(null!=i){if(!(g in i)){if(!t)throw new r("base intrinsic for "+e+" exists, but the property is not available.");return}if(o&&h+1>=A.length){var E=o(i,g);i=(f=!!E)&&"get"in E&&!("originalValue"in E.get)?E.get:i[g]}else f=b(i,g),i=i[g];f&&!u&&(p[s]=i)}}return i}}}),require_has_property_descriptors=__commonJS({"../../node_modules/.pnpm/has-property-descriptors@1.0.0/node_modules/has-property-descriptors/index.js"(e,t){"use strict";var A=require_get_intrinsic()("%Object.defineProperty%",!0),n=function(){if(A)try{return A({},"a",{value:1}),!0}catch(e){return!1}return!1};n.hasArrayLengthDefineBug=function(){if(!n())return null;try{return 1!==A([],"length",{value:1}).length}catch(e){return!0}},t.exports=n}}),require_gopd=__commonJS({"../../node_modules/.pnpm/gopd@1.0.1/node_modules/gopd/index.js"(e,t){"use strict";var A=require_get_intrinsic()("%Object.getOwnPropertyDescriptor%",!0);if(A)try{A([],"length")}catch(e){A=null}t.exports=A}}),require_define_data_property=__commonJS({"../../node_modules/.pnpm/define-data-property@1.1.1/node_modules/define-data-property/index.js"(e,t){"use strict";var A=require_has_property_descriptors()(),n=require_get_intrinsic(),l=A&&n("%Object.defineProperty%",!0);if(l)try{l({},"a",{value:1})}catch(e){l=!1}var r=n("%SyntaxError%"),a=n("%TypeError%"),o=require_gopd();t.exports=function(e,t,A){if(!e||"object"!=typeof e&&"function"!=typeof e)throw new a("`obj` must be an object or a function`");if("string"!=typeof t&&"symbol"!=typeof t)throw new a("`property` must be a string or a symbol`");if(arguments.length>3&&"boolean"!=typeof arguments[3]&&null!==arguments[3])throw new a("`nonEnumerable`, if provided, must be a boolean or null");if(arguments.length>4&&"boolean"!=typeof arguments[4]&&null!==arguments[4])throw new a("`nonWritable`, if provided, must be a boolean or null");if(arguments.length>5&&"boolean"!=typeof arguments[5]&&null!==arguments[5])throw new a("`nonConfigurable`, if provided, must be a boolean or null");if(arguments.length>6&&"boolean"!=typeof arguments[6])throw new a("`loose`, if provided, must be a boolean");var n=arguments.length>3?arguments[3]:null,s=arguments.length>4?arguments[4]:null,i=arguments.length>5?arguments[5]:null,u=arguments.length>6&&arguments[6],c=!!o&&o(e,t);if(l)l(e,t,{configurable:null===i&&c?c.configurable:!i,enumerable:null===n&&c?c.enumerable:!n,value:A,writable:null===s&&c?c.writable:!s});else{if(!u&&(n||s||i))throw new r("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");e[t]=A}}}}),require_set_function_length=__commonJS({"../../node_modules/.pnpm/set-function-length@1.1.1/node_modules/set-function-length/index.js"(e,t){"use strict";var A=require_get_intrinsic(),n=require_define_data_property(),l=require_has_property_descriptors()(),r=require_gopd(),a=A("%TypeError%"),o=A("%Math.floor%");t.exports=function(e,t){if("function"!=typeof e)throw new a("`fn` is not a function");if("number"!=typeof t||t<0||t>4294967295||o(t)!==t)throw new a("`length` must be a positive 32-bit integer");var A=arguments.length>2&&!!arguments[2],s=!0,i=!0;if("length"in e&&r){var u=r(e,"length");u&&!u.configurable&&(s=!1),u&&!u.writable&&(i=!1)}return(s||i||!A)&&(l?n(e,"length",t,!0,!0):n(e,"length",t)),e}}}),require_call_bind=__commonJS({"../../node_modules/.pnpm/call-bind@1.0.5/node_modules/call-bind/index.js"(e,t){"use strict";var A=require_function_bind(),n=require_get_intrinsic(),l=require_set_function_length(),r=n("%TypeError%"),a=n("%Function.prototype.apply%"),o=n("%Function.prototype.call%"),s=n("%Reflect.apply%",!0)||A.call(o,a),i=n("%Object.defineProperty%",!0),u=n("%Math.max%");if(i)try{i({},"a",{value:1})}catch(e){i=null}t.exports=function(e){if("function"!=typeof e)throw new r("a function is required");var t=s(A,o,arguments);return l(t,1+u(0,e.length-(arguments.length-1)),!0)};var c=function(){return s(A,a,arguments)};i?i(t.exports,"apply",{value:c}):t.exports.apply=c}}),require_callBound=__commonJS({"../../node_modules/.pnpm/call-bind@1.0.5/node_modules/call-bind/callBound.js"(e,t){"use strict";var A=require_get_intrinsic(),n=require_call_bind(),l=n(A("String.prototype.indexOf"));t.exports=function(e,t){var r=A(e,!!t);return"function"==typeof r&&l(e,".prototype.")>-1?n(r):r}}}),require_util=__commonJS({"(disabled):../../node_modules/.pnpm/object-inspect@1.12.2/node_modules/object-inspect/util.inspect"(){}}),require_object_inspect=__commonJS({"../../node_modules/.pnpm/object-inspect@1.12.2/node_modules/object-inspect/index.js"(e,t){var A="function"==typeof Map&&Map.prototype,n=Object.getOwnPropertyDescriptor&&A?Object.getOwnPropertyDescriptor(Map.prototype,"size"):null,l=A&&n&&"function"==typeof n.get?n.get:null,r=A&&Map.prototype.forEach,a="function"==typeof Set&&Set.prototype,o=Object.getOwnPropertyDescriptor&&a?Object.getOwnPropertyDescriptor(Set.prototype,"size"):null,s=a&&o&&"function"==typeof o.get?o.get:null,i=a&&Set.prototype.forEach,u="function"==typeof WeakMap&&WeakMap.prototype?WeakMap.prototype.has:null,c="function"==typeof WeakSet&&WeakSet.prototype?WeakSet.prototype.has:null,h="function"==typeof WeakRef&&WeakRef.prototype?WeakRef.prototype.deref:null,f=Boolean.prototype.valueOf,g=Object.prototype.toString,d=Function.prototype.toString,p=String.prototype.match,B=String.prototype.slice,E=String.prototype.replace,m=String.prototype.toUpperCase,b=String.prototype.toLowerCase,y=RegExp.prototype.test,w=Array.prototype.concat,Q=Array.prototype.join,C=Array.prototype.slice,M=Math.floor,I="function"==typeof BigInt?BigInt.prototype.valueOf:null,T=Object.getOwnPropertySymbols,x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?Symbol.prototype.toString:null,F="function"==typeof Symbol&&"object"==typeof Symbol.iterator,$="function"==typeof Symbol&&Symbol.toStringTag&&(typeof Symbol.toStringTag===F||"symbol")?Symbol.toStringTag:null,D=Object.prototype.propertyIsEnumerable,v=("function"==typeof Reflect?Reflect.getPrototypeOf:Object.getPrototypeOf)||([].__proto__===Array.prototype?function(e){return e.__proto__}:null);function N(e,t){if(e===1/0||e===-1/0||e!=e||e&&e>-1e3&&e<1e3||y.call(/e/,t))return t;var A=/[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;if("number"==typeof e){var n=e<0?-M(-e):M(e);if(n!==e){var l=String(n),r=B.call(t,l.length+1);return E.call(l,A,"$&_")+"."+E.call(E.call(r,/([0-9]{3})/g,"$&_"),/_$/,"")}}return E.call(t,A,"$&_")}var S=require_util(),U=S.custom,R=P(U)?U:null;function Y(e,t,A){var n="double"===(A.quoteStyle||t)?'"':"'";return n+e+n}function k(e){return E.call(String(e),/"/g,"&quot;")}function _(e){return!("[object Array]"!==V(e)||$&&"object"==typeof e&&$ in e)}function L(e){return!("[object RegExp]"!==V(e)||$&&"object"==typeof e&&$ in e)}function P(e){if(F)return e&&"object"==typeof e&&e instanceof Symbol;if("symbol"==typeof e)return!0;if(!e||"object"!=typeof e||!x)return!1;try{return x.call(e),!0}catch(e){}return!1}t.exports=function e(t,A,n,a){var o=A||{};if(G(o,"quoteStyle")&&"single"!==o.quoteStyle&&"double"!==o.quoteStyle)throw new TypeError('option "quoteStyle" must be "single" or "double"');if(G(o,"maxStringLength")&&("number"==typeof o.maxStringLength?o.maxStringLength<0&&o.maxStringLength!==1/0:null!==o.maxStringLength))throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');var g=!G(o,"customInspect")||o.customInspect;if("boolean"!=typeof g&&"symbol"!==g)throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");if(G(o,"indent")&&null!==o.indent&&"\t"!==o.indent&&!(parseInt(o.indent,10)===o.indent&&o.indent>0))throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');if(G(o,"numericSeparator")&&"boolean"!=typeof o.numericSeparator)throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');var m=o.numericSeparator;if(void 0===t)return"undefined";if(null===t)return"null";if("boolean"==typeof t)return t?"true":"false";if("string"==typeof t)return H(t,o);if("number"==typeof t){if(0===t)return 1/0/t>0?"0":"-0";var y=String(t);return m?N(t,y):y}if("bigint"==typeof t){var M=String(t)+"n";return m?N(t,M):M}var T=void 0===o.depth?5:o.depth;if(void 0===n&&(n=0),n>=T&&T>0&&"object"==typeof t)return _(t)?"[Array]":"[Object]";var U=function(e,t){var A;if("\t"===e.indent)A="\t";else{if(!("number"==typeof e.indent&&e.indent>0))return null;A=Q.call(Array(e.indent+1)," ")}return{base:A,prev:Q.call(Array(t+1),A)}}(o,n);if(void 0===a)a=[];else if(j(a,t)>=0)return"[Circular]";function O(t,A,l){if(A&&(a=C.call(a)).push(A),l){var r={depth:o.depth};return G(o,"quoteStyle")&&(r.quoteStyle=o.quoteStyle),e(t,r,n+1,a)}return e(t,o,n+1,a)}if("function"==typeof t&&!L(t)){var W=function(e){if(e.name)return e.name;var t=p.call(d.call(e),/^function\s*([\w$]+)/);if(t)return t[1];return null}(t),q=Z(t,O);return"[Function"+(W?": "+W:" (anonymous)")+"]"+(q.length>0?" { "+Q.call(q,", ")+" }":"")}if(P(t)){var ee=F?E.call(String(t),/^(Symbol\(.*\))_[^)]*$/,"$1"):x.call(t);return"object"!=typeof t||F?ee:J(ee)}if(function(e){if(!e||"object"!=typeof e)return!1;if("undefined"!=typeof HTMLElement&&e instanceof HTMLElement)return!0;return"string"==typeof e.nodeName&&"function"==typeof e.getAttribute}(t)){for(var te="<"+b.call(String(t.nodeName)),Ae=t.attributes||[],ne=0;ne<Ae.length;ne++)te+=" "+Ae[ne].name+"="+Y(k(Ae[ne].value),"double",o);return te+=">",t.childNodes&&t.childNodes.length&&(te+="..."),te+="</"+b.call(String(t.nodeName))+">"}if(_(t)){if(0===t.length)return"[]";var le=Z(t,O);return U&&!function(e){for(var t=0;t<e.length;t++)if(j(e[t],"\n")>=0)return!1;return!0}(le)?"["+X(le,U)+"]":"[ "+Q.call(le,", ")+" ]"}if(function(e){return!("[object Error]"!==V(e)||$&&"object"==typeof e&&$ in e)}(t)){var re=Z(t,O);return"cause"in Error.prototype||!("cause"in t)||D.call(t,"cause")?0===re.length?"["+String(t)+"]":"{ ["+String(t)+"] "+Q.call(re,", ")+" }":"{ ["+String(t)+"] "+Q.call(w.call("[cause]: "+O(t.cause),re),", ")+" }"}if("object"==typeof t&&g){if(R&&"function"==typeof t[R]&&S)return S(t,{depth:T-n});if("symbol"!==g&&"function"==typeof t.inspect)return t.inspect()}if(function(e){if(!l||!e||"object"!=typeof e)return!1;try{l.call(e);try{s.call(e)}catch(e){return!0}return e instanceof Map}catch(e){}return!1}(t)){var ae=[];return r.call(t,(function(e,A){ae.push(O(A,t,!0)+" => "+O(e,t))})),K("Map",l.call(t),ae,U)}if(function(e){if(!s||!e||"object"!=typeof e)return!1;try{s.call(e);try{l.call(e)}catch(e){return!0}return e instanceof Set}catch(e){}return!1}(t)){var oe=[];return i.call(t,(function(e){oe.push(O(e,t))})),K("Set",s.call(t),oe,U)}if(function(e){if(!u||!e||"object"!=typeof e)return!1;try{u.call(e,u);try{c.call(e,c)}catch(e){return!0}return e instanceof WeakMap}catch(e){}return!1}(t))return z("WeakMap");if(function(e){if(!c||!e||"object"!=typeof e)return!1;try{c.call(e,c);try{u.call(e,u)}catch(e){return!0}return e instanceof WeakSet}catch(e){}return!1}(t))return z("WeakSet");if(function(e){if(!h||!e||"object"!=typeof e)return!1;try{return h.call(e),!0}catch(e){}return!1}(t))return z("WeakRef");if(function(e){return!("[object Number]"!==V(e)||$&&"object"==typeof e&&$ in e)}(t))return J(O(Number(t)));if(function(e){if(!e||"object"!=typeof e||!I)return!1;try{return I.call(e),!0}catch(e){}return!1}(t))return J(O(I.call(t)));if(function(e){return!("[object Boolean]"!==V(e)||$&&"object"==typeof e&&$ in e)}(t))return J(f.call(t));if(function(e){return!("[object String]"!==V(e)||$&&"object"==typeof e&&$ in e)}(t))return J(O(String(t)));if(!function(e){return!("[object Date]"!==V(e)||$&&"object"==typeof e&&$ in e)}(t)&&!L(t)){var se=Z(t,O),ie=v?v(t)===Object.prototype:t instanceof Object||t.constructor===Object,ue=t instanceof Object?"":"null prototype",ce=!ie&&$&&Object(t)===t&&$ in t?B.call(V(t),8,-1):ue?"Object":"",he=(ie||"function"!=typeof t.constructor?"":t.constructor.name?t.constructor.name+" ":"")+(ce||ue?"["+Q.call(w.call([],ce||[],ue||[]),": ")+"] ":"");return 0===se.length?he+"{}":U?he+"{"+X(se,U)+"}":he+"{ "+Q.call(se,", ")+" }"}return String(t)};var O=Object.prototype.hasOwnProperty||function(e){return e in this};function G(e,t){return O.call(e,t)}function V(e){return g.call(e)}function j(e,t){if(e.indexOf)return e.indexOf(t);for(var A=0,n=e.length;A<n;A++)if(e[A]===t)return A;return-1}function H(e,t){if(e.length>t.maxStringLength){var A=e.length-t.maxStringLength,n="... "+A+" more character"+(A>1?"s":"");return H(B.call(e,0,t.maxStringLength),t)+n}return Y(E.call(E.call(e,/(['\\])/g,"\\$1"),/[\x00-\x1f]/g,W),"single",t)}function W(e){var t=e.charCodeAt(0),A={8:"b",9:"t",10:"n",12:"f",13:"r"}[t];return A?"\\"+A:"\\x"+(t<16?"0":"")+m.call(t.toString(16))}function J(e){return"Object("+e+")"}function z(e){return e+" { ? }"}function K(e,t,A,n){return e+" ("+t+") {"+(n?X(A,n):Q.call(A,", "))+"}"}function X(e,t){if(0===e.length)return"";var A="\n"+t.prev+t.base;return A+Q.call(e,","+A)+"\n"+t.prev}function Z(e,t){var A=_(e),n=[];if(A){n.length=e.length;for(var l=0;l<e.length;l++)n[l]=G(e,l)?t(e[l],e):""}var r,a="function"==typeof T?T(e):[];if(F){r={};for(var o=0;o<a.length;o++)r["$"+a[o]]=a[o]}for(var s in e)G(e,s)&&(A&&String(Number(s))===s&&s<e.length||F&&r["$"+s]instanceof Symbol||(y.call(/[^\w$]/,s)?n.push(t(s,e)+": "+t(e[s],e)):n.push(s+": "+t(e[s],e))));if("function"==typeof T)for(var i=0;i<a.length;i++)D.call(e,a[i])&&n.push("["+t(a[i])+"]: "+t(e[a[i]],e));return n}}}),require_side_channel=__commonJS({"../../node_modules/.pnpm/side-channel@1.0.4/node_modules/side-channel/index.js"(e,t){"use strict";var A=require_get_intrinsic(),n=require_callBound(),l=require_object_inspect(),r=A("%TypeError%"),a=A("%WeakMap%",!0),o=A("%Map%",!0),s=n("WeakMap.prototype.get",!0),i=n("WeakMap.prototype.set",!0),u=n("WeakMap.prototype.has",!0),c=n("Map.prototype.get",!0),h=n("Map.prototype.set",!0),f=n("Map.prototype.has",!0),g=function(e,t){for(var A,n=e;null!==(A=n.next);n=A)if(A.key===t)return n.next=A.next,A.next=e.next,e.next=A,A};t.exports=function(){var e,t,A,n={assert:function(e){if(!n.has(e))throw new r("Side channel does not contain "+l(e))},get:function(n){if(a&&n&&("object"==typeof n||"function"==typeof n)){if(e)return s(e,n)}else if(o){if(t)return c(t,n)}else if(A)return function(e,t){var A=g(e,t);return A&&A.value}(A,n)},has:function(n){if(a&&n&&("object"==typeof n||"function"==typeof n)){if(e)return u(e,n)}else if(o){if(t)return f(t,n)}else if(A)return function(e,t){return!!g(e,t)}(A,n);return!1},set:function(n,l){a&&n&&("object"==typeof n||"function"==typeof n)?(e||(e=new a),i(e,n,l)):o?(t||(t=new o),h(t,n,l)):(A||(A={key:{},next:null}),function(e,t,A){var n=g(e,t);n?n.value=A:e.next={key:t,next:e.next,value:A}}(A,n,l))}};return n}}}),require_formats=__commonJS({"../../node_modules/.pnpm/qs@6.11.2/node_modules/qs/lib/formats.js"(e,t){"use strict";var A=String.prototype.replace,n=/%20/g,l="RFC1738",r="RFC3986";t.exports={default:r,formatters:{RFC1738:function(e){return A.call(e,n,"+")},RFC3986:function(e){return String(e)}},RFC1738:l,RFC3986:r}}}),require_utils=__commonJS({"../../node_modules/.pnpm/qs@6.11.2/node_modules/qs/lib/utils.js"(e,t){"use strict";var A=require_formats(),n=Object.prototype.hasOwnProperty,l=Array.isArray,r=function(){for(var e=[],t=0;t<256;++t)e.push("%"+((t<16?"0":"")+t.toString(16)).toUpperCase());return e}(),a=function(e,t){for(var A=t&&t.plainObjects?Object.create(null):{},n=0;n<e.length;++n)void 0!==e[n]&&(A[n]=e[n]);return A};t.exports={arrayToObject:a,assign:function(e,t){return Object.keys(t).reduce((function(e,A){return e[A]=t[A],e}),e)},combine:function(e,t){return[].concat(e,t)},compact:function(e){for(var t=[{obj:{o:e},prop:"o"}],A=[],n=0;n<t.length;++n)for(var r=t[n],a=r.obj[r.prop],o=Object.keys(a),s=0;s<o.length;++s){var i=o[s],u=a[i];"object"==typeof u&&null!==u&&-1===A.indexOf(u)&&(t.push({obj:a,prop:i}),A.push(u))}return function(e){for(;e.length>1;){var t=e.pop(),A=t.obj[t.prop];if(l(A)){for(var n=[],r=0;r<A.length;++r)void 0!==A[r]&&n.push(A[r]);t.obj[t.prop]=n}}}(t),e},decode:function(e,t,A){var n=e.replace(/\+/g," ");if("iso-8859-1"===A)return n.replace(/%[0-9a-f]{2}/gi,unescape);try{return decodeURIComponent(n)}catch(e){return n}},encode:function(e,t,n,l,a){if(0===e.length)return e;var o=e;if("symbol"==typeof e?o=Symbol.prototype.toString.call(e):"string"!=typeof e&&(o=String(e)),"iso-8859-1"===n)return escape(o).replace(/%u[0-9a-f]{4}/gi,(function(e){return"%26%23"+parseInt(e.slice(2),16)+"%3B"}));for(var s="",i=0;i<o.length;++i){var u=o.charCodeAt(i);45===u||46===u||95===u||126===u||u>=48&&u<=57||u>=65&&u<=90||u>=97&&u<=122||a===A.RFC1738&&(40===u||41===u)?s+=o.charAt(i):u<128?s+=r[u]:u<2048?s+=r[192|u>>6]+r[128|63&u]:u<55296||u>=57344?s+=r[224|u>>12]+r[128|u>>6&63]+r[128|63&u]:(i+=1,u=65536+((1023&u)<<10|1023&o.charCodeAt(i)),s+=r[240|u>>18]+r[128|u>>12&63]+r[128|u>>6&63]+r[128|63&u])}return s},isBuffer:function(e){return!(!e||"object"!=typeof e)&&!!(e.constructor&&e.constructor.isBuffer&&e.constructor.isBuffer(e))},isRegExp:function(e){return"[object RegExp]"===Object.prototype.toString.call(e)},maybeMap:function(e,t){if(l(e)){for(var A=[],n=0;n<e.length;n+=1)A.push(t(e[n]));return A}return t(e)},merge:function e(t,A,r){if(!A)return t;if("object"!=typeof A){if(l(t))t.push(A);else{if(!t||"object"!=typeof t)return[t,A];(r&&(r.plainObjects||r.allowPrototypes)||!n.call(Object.prototype,A))&&(t[A]=!0)}return t}if(!t||"object"!=typeof t)return[t].concat(A);var o=t;return l(t)&&!l(A)&&(o=a(t,r)),l(t)&&l(A)?(A.forEach((function(A,l){if(n.call(t,l)){var a=t[l];a&&"object"==typeof a&&A&&"object"==typeof A?t[l]=e(a,A,r):t.push(A)}else t[l]=A})),t):Object.keys(A).reduce((function(t,l){var a=A[l];return n.call(t,l)?t[l]=e(t[l],a,r):t[l]=a,t}),o)}}}}),require_stringify=__commonJS({"../../node_modules/.pnpm/qs@6.11.2/node_modules/qs/lib/stringify.js"(e,t){"use strict";var A=require_side_channel(),n=require_utils(),l=require_formats(),r=Object.prototype.hasOwnProperty,a={brackets:function(e){return e+"[]"},comma:"comma",indices:function(e,t){return e+"["+t+"]"},repeat:function(e){return e}},o=Array.isArray,s=Array.prototype.push,i=function(e,t){s.apply(e,o(t)?t:[t])},u=Date.prototype.toISOString,c=l.default,h={addQueryPrefix:!1,allowDots:!1,charset:"utf-8",charsetSentinel:!1,delimiter:"&",encode:!0,encoder:n.encode,encodeValuesOnly:!1,format:c,formatter:l.formatters[c],indices:!1,serializeDate:function(e){return u.call(e)},skipNulls:!1,strictNullHandling:!1},f={},g=function e(t,l,r,a,s,u,c,g,d,p,B,E,m,b,y,w){for(var Q,C=t,M=w,I=0,T=!1;void 0!==(M=M.get(f))&&!T;){var x=M.get(t);if(I+=1,void 0!==x){if(x===I)throw new RangeError("Cyclic object value");T=!0}void 0===M.get(f)&&(I=0)}if("function"==typeof g?C=g(l,C):C instanceof Date?C=B(C):"comma"===r&&o(C)&&(C=n.maybeMap(C,(function(e){return e instanceof Date?B(e):e}))),null===C){if(s)return c&&!b?c(l,h.encoder,y,"key",E):l;C=""}if("string"==typeof(Q=C)||"number"==typeof Q||"boolean"==typeof Q||"symbol"==typeof Q||"bigint"==typeof Q||n.isBuffer(C))return c?[m(b?l:c(l,h.encoder,y,"key",E))+"="+m(c(C,h.encoder,y,"value",E))]:[m(l)+"="+m(String(C))];var F,$=[];if(void 0===C)return $;if("comma"===r&&o(C))b&&c&&(C=n.maybeMap(C,c)),F=[{value:C.length>0?C.join(",")||null:void 0}];else if(o(g))F=g;else{var D=Object.keys(C);F=d?D.sort(d):D}for(var v=a&&o(C)&&1===C.length?l+"[]":l,N=0;N<F.length;++N){var S=F[N],U="object"==typeof S&&void 0!==S.value?S.value:C[S];if(!u||null!==U){var R=o(C)?"function"==typeof r?r(v,S):v:v+(p?"."+S:"["+S+"]");w.set(t,I);var Y=A();Y.set(f,w),i($,e(U,R,r,a,s,u,"comma"===r&&b&&o(C)?null:c,g,d,p,B,E,m,b,y,Y))}}return $};t.exports=function(e,t){var n,s=e,u=function(e){if(!e)return h;if(null!==e.encoder&&void 0!==e.encoder&&"function"!=typeof e.encoder)throw new TypeError("Encoder has to be a function.");var t=e.charset||h.charset;if(void 0!==e.charset&&"utf-8"!==e.charset&&"iso-8859-1"!==e.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var A=l.default;if(void 0!==e.format){if(!r.call(l.formatters,e.format))throw new TypeError("Unknown format option provided.");A=e.format}var n=l.formatters[A],a=h.filter;return("function"==typeof e.filter||o(e.filter))&&(a=e.filter),{addQueryPrefix:"boolean"==typeof e.addQueryPrefix?e.addQueryPrefix:h.addQueryPrefix,allowDots:void 0===e.allowDots?h.allowDots:!!e.allowDots,charset:t,charsetSentinel:"boolean"==typeof e.charsetSentinel?e.charsetSentinel:h.charsetSentinel,delimiter:void 0===e.delimiter?h.delimiter:e.delimiter,encode:"boolean"==typeof e.encode?e.encode:h.encode,encoder:"function"==typeof e.encoder?e.encoder:h.encoder,encodeValuesOnly:"boolean"==typeof e.encodeValuesOnly?e.encodeValuesOnly:h.encodeValuesOnly,filter:a,format:A,formatter:n,serializeDate:"function"==typeof e.serializeDate?e.serializeDate:h.serializeDate,skipNulls:"boolean"==typeof e.skipNulls?e.skipNulls:h.skipNulls,sort:"function"==typeof e.sort?e.sort:null,strictNullHandling:"boolean"==typeof e.strictNullHandling?e.strictNullHandling:h.strictNullHandling}}(t);"function"==typeof u.filter?s=(0,u.filter)("",s):o(u.filter)&&(n=u.filter);var c,f=[];if("object"!=typeof s||null===s)return"";c=t&&t.arrayFormat in a?t.arrayFormat:t&&"indices"in t?t.indices?"indices":"repeat":"indices";var d=a[c];if(t&&"commaRoundTrip"in t&&"boolean"!=typeof t.commaRoundTrip)throw new TypeError("`commaRoundTrip` must be a boolean, or absent");var p="comma"===d&&t&&t.commaRoundTrip;n||(n=Object.keys(s)),u.sort&&n.sort(u.sort);for(var B=A(),E=0;E<n.length;++E){var m=n[E];u.skipNulls&&null===s[m]||i(f,g(s[m],m,d,p,u.strictNullHandling,u.skipNulls,u.encode?u.encoder:null,u.filter,u.sort,u.allowDots,u.serializeDate,u.format,u.formatter,u.encodeValuesOnly,u.charset,B))}var b=f.join(u.delimiter),y=!0===u.addQueryPrefix?"?":"";return u.charsetSentinel&&("iso-8859-1"===u.charset?y+="utf8=%26%2310003%3B&":y+="utf8=%E2%9C%93&"),b.length>0?y+b:""}}}),require_parse=__commonJS({"../../node_modules/.pnpm/qs@6.11.2/node_modules/qs/lib/parse.js"(e,t){"use strict";var A=require_utils(),n=Object.prototype.hasOwnProperty,l=Array.isArray,r={allowDots:!1,allowPrototypes:!1,allowSparse:!1,arrayLimit:20,charset:"utf-8",charsetSentinel:!1,comma:!1,decoder:A.decode,delimiter:"&",depth:5,ignoreQueryPrefix:!1,interpretNumericEntities:!1,parameterLimit:1e3,parseArrays:!0,plainObjects:!1,strictNullHandling:!1},a=function(e){return e.replace(/&#(\d+);/g,(function(e,t){return String.fromCharCode(parseInt(t,10))}))},o=function(e,t){return e&&"string"==typeof e&&t.comma&&e.indexOf(",")>-1?e.split(","):e},s=function(e,t,A,l){if(e){var r=A.allowDots?e.replace(/\.([^.[]+)/g,"[$1]"):e,a=/(\[[^[\]]*])/g,s=A.depth>0&&/(\[[^[\]]*])/.exec(r),i=s?r.slice(0,s.index):r,u=[];if(i){if(!A.plainObjects&&n.call(Object.prototype,i)&&!A.allowPrototypes)return;u.push(i)}for(var c=0;A.depth>0&&null!==(s=a.exec(r))&&c<A.depth;){if(c+=1,!A.plainObjects&&n.call(Object.prototype,s[1].slice(1,-1))&&!A.allowPrototypes)return;u.push(s[1])}return s&&u.push("["+r.slice(s.index)+"]"),function(e,t,A,n){for(var l=n?t:o(t,A),r=e.length-1;r>=0;--r){var a,s=e[r];if("[]"===s&&A.parseArrays)a=[].concat(l);else{a=A.plainObjects?Object.create(null):{};var i="["===s.charAt(0)&&"]"===s.charAt(s.length-1)?s.slice(1,-1):s,u=parseInt(i,10);A.parseArrays||""!==i?!isNaN(u)&&s!==i&&String(u)===i&&u>=0&&A.parseArrays&&u<=A.arrayLimit?(a=[])[u]=l:"__proto__"!==i&&(a[i]=l):a={0:l}}l=a}return l}(u,t,A,l)}};t.exports=function(e,t){var i=function(e){if(!e)return r;if(null!==e.decoder&&void 0!==e.decoder&&"function"!=typeof e.decoder)throw new TypeError("Decoder has to be a function.");if(void 0!==e.charset&&"utf-8"!==e.charset&&"iso-8859-1"!==e.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var t=void 0===e.charset?r.charset:e.charset;return{allowDots:void 0===e.allowDots?r.allowDots:!!e.allowDots,allowPrototypes:"boolean"==typeof e.allowPrototypes?e.allowPrototypes:r.allowPrototypes,allowSparse:"boolean"==typeof e.allowSparse?e.allowSparse:r.allowSparse,arrayLimit:"number"==typeof e.arrayLimit?e.arrayLimit:r.arrayLimit,charset:t,charsetSentinel:"boolean"==typeof e.charsetSentinel?e.charsetSentinel:r.charsetSentinel,comma:"boolean"==typeof e.comma?e.comma:r.comma,decoder:"function"==typeof e.decoder?e.decoder:r.decoder,delimiter:"string"==typeof e.delimiter||A.isRegExp(e.delimiter)?e.delimiter:r.delimiter,depth:"number"==typeof e.depth||!1===e.depth?+e.depth:r.depth,ignoreQueryPrefix:!0===e.ignoreQueryPrefix,interpretNumericEntities:"boolean"==typeof e.interpretNumericEntities?e.interpretNumericEntities:r.interpretNumericEntities,parameterLimit:"number"==typeof e.parameterLimit?e.parameterLimit:r.parameterLimit,parseArrays:!1!==e.parseArrays,plainObjects:"boolean"==typeof e.plainObjects?e.plainObjects:r.plainObjects,strictNullHandling:"boolean"==typeof e.strictNullHandling?e.strictNullHandling:r.strictNullHandling}}(t);if(""===e||null==e)return i.plainObjects?Object.create(null):{};for(var u="string"==typeof e?function(e,t){var s,i={__proto__:null},u=t.ignoreQueryPrefix?e.replace(/^\?/,""):e,c=t.parameterLimit===1/0?void 0:t.parameterLimit,h=u.split(t.delimiter,c),f=-1,g=t.charset;if(t.charsetSentinel)for(s=0;s<h.length;++s)0===h[s].indexOf("utf8=")&&("utf8=%E2%9C%93"===h[s]?g="utf-8":"utf8=%26%2310003%3B"===h[s]&&(g="iso-8859-1"),f=s,s=h.length);for(s=0;s<h.length;++s)if(s!==f){var d,p,B=h[s],E=B.indexOf("]="),m=-1===E?B.indexOf("="):E+1;-1===m?(d=t.decoder(B,r.decoder,g,"key"),p=t.strictNullHandling?null:""):(d=t.decoder(B.slice(0,m),r.decoder,g,"key"),p=A.maybeMap(o(B.slice(m+1),t),(function(e){return t.decoder(e,r.decoder,g,"value")}))),p&&t.interpretNumericEntities&&"iso-8859-1"===g&&(p=a(p)),B.indexOf("[]=")>-1&&(p=l(p)?[p]:p),n.call(i,d)?i[d]=A.combine(i[d],p):i[d]=p}return i}(e,i):e,c=i.plainObjects?Object.create(null):{},h=Object.keys(u),f=0;f<h.length;++f){var g=h[f],d=s(g,u[g],i,"string"==typeof e);c=A.merge(c,d,i)}return!0===i.allowSparse?c:A.compact(c)}}}),require_lib=__commonJS({"../../node_modules/.pnpm/qs@6.11.2/node_modules/qs/lib/index.js"(e,t){"use strict";var A=require_stringify(),n=require_parse(),l=require_formats();t.exports={formats:l,parse:n,stringify:A}}}),require_url=__commonJS({"../../node_modules/.pnpm/url@0.11.3/node_modules/url/url.js"(e){"use strict";var t=require_punycode();function A(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}var n=/^([a-z0-9.+-]+:)/i,l=/:[0-9]*$/,r=/^(\/\/?(?!\/)[^?\s]*)(\?[^\s]*)?$/,a=["{","}","|","\\","^","`"].concat(["<",">",'"',"`"," ","\r","\n","\t"]),o=["'"].concat(a),s=["%","/","?",";","#"].concat(o),i=["/","?","#"],u=/^[+a-z0-9A-Z_-]{0,63}$/,c=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,h={javascript:!0,"javascript:":!0},f={javascript:!0,"javascript:":!0},g={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0},d=require_lib();function p(e,t,n){if(e&&"object"==typeof e&&e instanceof A)return e;var l=new A;return l.parse(e,t,n),l}A.prototype.parse=function(e,A,l){if("string"!=typeof e)throw new TypeError("Parameter 'url' must be a string, not "+typeof e);var a=e.indexOf("?"),p=-1!==a&&a<e.indexOf("#")?"?":"#",B=e.split(p);B[0]=B[0].replace(/\\/g,"/");var E=e=B.join(p);if(E=E.trim(),!l&&1===e.split("#").length){var m=r.exec(E);if(m)return this.path=E,this.href=E,this.pathname=m[1],m[2]?(this.search=m[2],this.query=A?d.parse(this.search.substr(1)):this.search.substr(1)):A&&(this.search="",this.query={}),this}var b=n.exec(E);if(b){var y=(b=b[0]).toLowerCase();this.protocol=y,E=E.substr(b.length)}if(l||b||E.match(/^\/\/[^@/]+@[^@/]+/)){var w="//"===E.substr(0,2);!w||b&&f[b]||(E=E.substr(2),this.slashes=!0)}if(!f[b]&&(w||b&&!g[b])){for(var Q,C,M=-1,I=0;I<i.length;I++){-1!==(T=E.indexOf(i[I]))&&(-1===M||T<M)&&(M=T)}-1!==(C=-1===M?E.lastIndexOf("@"):E.lastIndexOf("@",M))&&(Q=E.slice(0,C),E=E.slice(C+1),this.auth=decodeURIComponent(Q)),M=-1;for(I=0;I<s.length;I++){var T;-1!==(T=E.indexOf(s[I]))&&(-1===M||T<M)&&(M=T)}-1===M&&(M=E.length),this.host=E.slice(0,M),E=E.slice(M),this.parseHost(),this.hostname=this.hostname||"";var x="["===this.hostname[0]&&"]"===this.hostname[this.hostname.length-1];if(!x)for(var F=this.hostname.split(/\./),$=(I=0,F.length);I<$;I++){var D=F[I];if(D&&!D.match(u)){for(var v="",N=0,S=D.length;N<S;N++)D.charCodeAt(N)>127?v+="x":v+=D[N];if(!v.match(u)){var U=F.slice(0,I),R=F.slice(I+1),Y=D.match(c);Y&&(U.push(Y[1]),R.unshift(Y[2])),R.length&&(E="/"+R.join(".")+E),this.hostname=U.join(".");break}}}this.hostname.length>255?this.hostname="":this.hostname=this.hostname.toLowerCase(),x||(this.hostname=t.toASCII(this.hostname));var k=this.port?":"+this.port:"",_=this.hostname||"";this.host=_+k,this.href+=this.host,x&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),"/"!==E[0]&&(E="/"+E))}if(!h[y])for(I=0,$=o.length;I<$;I++){var L=o[I];if(-1!==E.indexOf(L)){var P=encodeURIComponent(L);P===L&&(P=escape(L)),E=E.split(L).join(P)}}var O=E.indexOf("#");-1!==O&&(this.hash=E.substr(O),E=E.slice(0,O));var G=E.indexOf("?");if(-1!==G?(this.search=E.substr(G),this.query=E.substr(G+1),A&&(this.query=d.parse(this.query)),E=E.slice(0,G)):A&&(this.search="",this.query={}),E&&(this.pathname=E),g[y]&&this.hostname&&!this.pathname&&(this.pathname="/"),this.pathname||this.search){k=this.pathname||"";var V=this.search||"";this.path=k+V}return this.href=this.format(),this},A.prototype.format=function(){var e=this.auth||"";e&&(e=(e=encodeURIComponent(e)).replace(/%3A/i,":"),e+="@");var t=this.protocol||"",A=this.pathname||"",n=this.hash||"",l=!1,r="";this.host?l=e+this.host:this.hostname&&(l=e+(-1===this.hostname.indexOf(":")?this.hostname:"["+this.hostname+"]"),this.port&&(l+=":"+this.port)),this.query&&"object"==typeof this.query&&Object.keys(this.query).length&&(r=d.stringify(this.query,{arrayFormat:"repeat",addQueryPrefix:!1}));var a=this.search||r&&"?"+r||"";return t&&":"!==t.substr(-1)&&(t+=":"),this.slashes||(!t||g[t])&&!1!==l?(l="//"+(l||""),A&&"/"!==A.charAt(0)&&(A="/"+A)):l||(l=""),n&&"#"!==n.charAt(0)&&(n="#"+n),a&&"?"!==a.charAt(0)&&(a="?"+a),t+l+(A=A.replace(/[?#]/g,(function(e){return encodeURIComponent(e)})))+(a=a.replace("#","%23"))+n},A.prototype.resolve=function(e){return this.resolveObject(p(e,!1,!0)).format()},A.prototype.resolveObject=function(e){if("string"==typeof e){var t=new A;t.parse(e,!1,!0),e=t}for(var n=new A,l=Object.keys(this),r=0;r<l.length;r++){var a=l[r];n[a]=this[a]}if(n.hash=e.hash,""===e.href)return n.href=n.format(),n;if(e.slashes&&!e.protocol){for(var o=Object.keys(e),s=0;s<o.length;s++){var i=o[s];"protocol"!==i&&(n[i]=e[i])}return g[n.protocol]&&n.hostname&&!n.pathname&&(n.pathname="/",n.path=n.pathname),n.href=n.format(),n}if(e.protocol&&e.protocol!==n.protocol){if(!g[e.protocol]){for(var u=Object.keys(e),c=0;c<u.length;c++){var h=u[c];n[h]=e[h]}return n.href=n.format(),n}if(n.protocol=e.protocol,e.host||f[e.protocol])n.pathname=e.pathname;else{for(var d=(e.pathname||"").split("/");d.length&&!(e.host=d.shift()););e.host||(e.host=""),e.hostname||(e.hostname=""),""!==d[0]&&d.unshift(""),d.length<2&&d.unshift(""),n.pathname=d.join("/")}if(n.search=e.search,n.query=e.query,n.host=e.host||"",n.auth=e.auth,n.hostname=e.hostname||e.host,n.port=e.port,n.pathname||n.search){var p=n.pathname||"",B=n.search||"";n.path=p+B}return n.slashes=n.slashes||e.slashes,n.href=n.format(),n}var E=n.pathname&&"/"===n.pathname.charAt(0),m=e.host||e.pathname&&"/"===e.pathname.charAt(0),b=m||E||n.host&&e.pathname,y=b,w=n.pathname&&n.pathname.split("/")||[],Q=(d=e.pathname&&e.pathname.split("/")||[],n.protocol&&!g[n.protocol]);if(Q&&(n.hostname="",n.port=null,n.host&&(""===w[0]?w[0]=n.host:w.unshift(n.host)),n.host="",e.protocol&&(e.hostname=null,e.port=null,e.host&&(""===d[0]?d[0]=e.host:d.unshift(e.host)),e.host=null),b=b&&(""===d[0]||""===w[0])),m)n.host=e.host||""===e.host?e.host:n.host,n.hostname=e.hostname||""===e.hostname?e.hostname:n.hostname,n.search=e.search,n.query=e.query,w=d;else if(d.length)w||(w=[]),w.pop(),w=w.concat(d),n.search=e.search,n.query=e.query;else if(null!=e.search){if(Q)n.host=w.shift(),n.hostname=n.host,(x=!!(n.host&&n.host.indexOf("@")>0)&&n.host.split("@"))&&(n.auth=x.shift(),n.hostname=x.shift(),n.host=n.hostname);return n.search=e.search,n.query=e.query,null===n.pathname&&null===n.search||(n.path=(n.pathname?n.pathname:"")+(n.search?n.search:"")),n.href=n.format(),n}if(!w.length)return n.pathname=null,n.search?n.path="/"+n.search:n.path=null,n.href=n.format(),n;for(var C=w.slice(-1)[0],M=(n.host||e.host||w.length>1)&&("."===C||".."===C)||""===C,I=0,T=w.length;T>=0;T--)"."===(C=w[T])?w.splice(T,1):".."===C?(w.splice(T,1),I++):I&&(w.splice(T,1),I--);if(!b&&!y)for(;I--;I)w.unshift("..");!b||""===w[0]||w[0]&&"/"===w[0].charAt(0)||w.unshift(""),M&&"/"!==w.join("/").substr(-1)&&w.push("");var x,F=""===w[0]||w[0]&&"/"===w[0].charAt(0);Q&&(n.hostname=F?"":w.length?w.shift():"",n.host=n.hostname,(x=!!(n.host&&n.host.indexOf("@")>0)&&n.host.split("@"))&&(n.auth=x.shift(),n.hostname=x.shift(),n.host=n.hostname));return(b=b||n.host&&w.length)&&!F&&w.unshift(""),w.length>0?n.pathname=w.join("/"):(n.pathname=null,n.path=null),null===n.pathname&&null===n.search||(n.path=(n.pathname?n.pathname:"")+(n.search?n.search:"")),n.auth=e.auth||n.auth,n.slashes=n.slashes||e.slashes,n.href=n.format(),n},A.prototype.parseHost=function(){var e=this.host,t=l.exec(e);t&&(":"!==(t=t[0])&&(this.port=t.substr(1)),e=e.substr(0,e.length-t.length)),e&&(this.hostname=e)},e.parse=p,e.resolve=function(e,t){return p(e,!1,!0).resolve(t)},e.resolveObject=function(e,t){return e?p(e,!1,!0).resolveObject(t):t},e.format=function(e){return"string"==typeof e&&(e=p(e)),e instanceof A?e.format():A.prototype.format.call(e)},e.Url=A}}),require_url2=__commonJS({"aliases/url.js"(e,t){var A=require_url();t.exports={...A,fileURLToPath:e=>e||""}}}),require_emitter_component=__commonJS({"../../node_modules/.pnpm/emitter-component@1.1.2/node_modules/emitter-component/index.js"(e,t){function A(e){if(e)return function(e){for(var t in A.prototype)e[t]=A.prototype[t];return e}(e)}t.exports=A,A.prototype.on=A.prototype.addEventListener=function(e,t){return this._callbacks=this._callbacks||{},(this._callbacks[e]=this._callbacks[e]||[]).push(t),this},A.prototype.once=function(e,t){var A=this;function n(){A.off(e,n),t.apply(this,arguments)}return this._callbacks=this._callbacks||{},n.fn=t,this.on(e,n),this},A.prototype.off=A.prototype.removeListener=A.prototype.removeAllListeners=A.prototype.removeEventListener=function(e,t){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var A,n=this._callbacks[e];if(!n)return this;if(1==arguments.length)return delete this._callbacks[e],this;for(var l=0;l<n.length;l++)if((A=n[l])===t||A.fn===t){n.splice(l,1);break}return this},A.prototype.emit=function(e){this._callbacks=this._callbacks||{};var t=[].slice.call(arguments,1),A=this._callbacks[e];if(A)for(var n=0,l=(A=A.slice(0)).length;n<l;++n)A[n].apply(this,t);return this},A.prototype.listeners=function(e){return this._callbacks=this._callbacks||{},this._callbacks[e]||[]},A.prototype.hasListeners=function(e){return!!this.listeners(e).length}}}),require_stream=__commonJS({"../../node_modules/.pnpm/stream@0.0.2/node_modules/stream/index.js"(e,t){var A=require_emitter_component();function n(){A.call(this)}n.prototype=new A,t.exports=n,n.Stream=n,n.prototype.pipe=function(e,t){var A=this;function n(t){e.writable&&!1===e.write(t)&&A.pause&&A.pause()}function l(){A.readable&&A.resume&&A.resume()}A.on("data",n),e.on("drain",l),e._isStdio||t&&!1===t.end||(A.on("end",a),A.on("close",o));var r=!1;function a(){r||(r=!0,e.end())}function o(){r||(r=!0,"function"==typeof e.destroy&&e.destroy())}function s(e){if(i(),!this.hasListeners("error"))throw e}function i(){A.off("data",n),e.off("drain",l),A.off("end",a),A.off("close",o),A.off("error",s),e.off("error",s),A.off("end",i),A.off("close",i),e.off("end",i),e.off("close",i)}return A.on("error",s),e.on("error",s),A.on("end",i),A.on("close",i),e.on("end",i),e.on("close",i),e.emit("pipe",A),e}}}),require_base64_js=__commonJS({"../../node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js"(e){"use strict";e.byteLength=function(e){var t=a(e),A=t[0],n=t[1];return 3*(A+n)/4-n},e.toByteArray=function(e){var t,A,r=a(e),o=r[0],s=r[1],i=new l(function(e,t,A){return 3*(t+A)/4-A}(0,o,s)),u=0,c=s>0?o-4:o;for(A=0;A<c;A+=4)t=n[e.charCodeAt(A)]<<18|n[e.charCodeAt(A+1)]<<12|n[e.charCodeAt(A+2)]<<6|n[e.charCodeAt(A+3)],i[u++]=t>>16&255,i[u++]=t>>8&255,i[u++]=255&t;2===s&&(t=n[e.charCodeAt(A)]<<2|n[e.charCodeAt(A+1)]>>4,i[u++]=255&t);1===s&&(t=n[e.charCodeAt(A)]<<10|n[e.charCodeAt(A+1)]<<4|n[e.charCodeAt(A+2)]>>2,i[u++]=t>>8&255,i[u++]=255&t);return i},e.fromByteArray=function(e){for(var t,n=e.length,l=n%3,r=[],a=16383,s=0,i=n-l;s<i;s+=a)r.push(o(e,s,s+a>i?i:s+a));1===l?(t=e[n-1],r.push(A[t>>2]+A[t<<4&63]+"==")):2===l&&(t=(e[n-2]<<8)+e[n-1],r.push(A[t>>10]+A[t>>4&63]+A[t<<2&63]+"="));return r.join("")};var t,A=[],n=[],l="undefined"!=typeof Uint8Array?Uint8Array:Array,r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";for(t=0,64;t<64;++t)A[t]=r[t],n[r.charCodeAt(t)]=t;function a(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var A=e.indexOf("=");return-1===A&&(A=t),[A,A===t?0:4-A%4]}function o(e,t,n){for(var l,r,a=[],o=t;o<n;o+=3)l=(e[o]<<16&16711680)+(e[o+1]<<8&65280)+(255&e[o+2]),a.push(A[(r=l)>>18&63]+A[r>>12&63]+A[r>>6&63]+A[63&r]);return a.join("")}n["-".charCodeAt(0)]=62,n["_".charCodeAt(0)]=63}}),require_ieee754=__commonJS({"../../node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js"(e){e.read=function(e,t,A,n,l){var r,a,o=8*l-n-1,s=(1<<o)-1,i=s>>1,u=-7,c=A?l-1:0,h=A?-1:1,f=e[t+c];for(c+=h,r=f&(1<<-u)-1,f>>=-u,u+=o;u>0;r=256*r+e[t+c],c+=h,u-=8);for(a=r&(1<<-u)-1,r>>=-u,u+=n;u>0;a=256*a+e[t+c],c+=h,u-=8);if(0===r)r=1-i;else{if(r===s)return a?NaN:1/0*(f?-1:1);a+=Math.pow(2,n),r-=i}return(f?-1:1)*a*Math.pow(2,r-n)},e.write=function(e,t,A,n,l,r){var a,o,s,i=8*r-l-1,u=(1<<i)-1,c=u>>1,h=23===l?Math.pow(2,-24)-Math.pow(2,-77):0,f=n?0:r-1,g=n?1:-1,d=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(o=isNaN(t)?1:0,a=u):(a=Math.floor(Math.log(t)/Math.LN2),t*(s=Math.pow(2,-a))<1&&(a--,s*=2),(t+=a+c>=1?h/s:h*Math.pow(2,1-c))*s>=2&&(a++,s/=2),a+c>=u?(o=0,a=u):a+c>=1?(o=(t*s-1)*Math.pow(2,l),a+=c):(o=t*Math.pow(2,c-1)*Math.pow(2,l),a=0));l>=8;e[A+f]=255&o,f+=g,o/=256,l-=8);for(a=a<<l|o,i+=l;i>0;e[A+f]=255&a,f+=g,a/=256,i-=8);e[A+f-g]|=128*d}}}),require_buffer=__commonJS({"node_modules/buffer/index.js"(e){"use strict";var t=require_base64_js(),A=require_ieee754(),n="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;e.Buffer=a,e.SlowBuffer=function(e){+e!=e&&(e=0);return a.alloc(+e)},e.INSPECT_MAX_BYTES=50;var l=2147483647;function r(e){if(e>l)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,a.prototype),t}function a(e,t,A){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return i(e)}return o(e,t,A)}function o(e,t,A){if("string"==typeof e)return function(e,t){"string"==typeof t&&""!==t||(t="utf8");if(!a.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const A=0|f(e,t);let n=r(A);const l=n.write(e,t);l!==A&&(n=n.slice(0,l));return n}(e,t);if(ArrayBuffer.isView(e))return function(e){if(W(e,Uint8Array)){const t=new Uint8Array(e);return c(t.buffer,t.byteOffset,t.byteLength)}return u(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(W(e,ArrayBuffer)||e&&W(e.buffer,ArrayBuffer))return c(e,t,A);if("undefined"!=typeof SharedArrayBuffer&&(W(e,SharedArrayBuffer)||e&&W(e.buffer,SharedArrayBuffer)))return c(e,t,A);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const n=e.valueOf&&e.valueOf();if(null!=n&&n!==e)return a.from(n,t,A);const l=function(e){if(a.isBuffer(e)){const t=0|h(e.length),A=r(t);return 0===A.length||e.copy(A,0,0,t),A}if(void 0!==e.length)return"number"!=typeof e.length||J(e.length)?r(0):u(e);if("Buffer"===e.type&&Array.isArray(e.data))return u(e.data)}(e);if(l)return l;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return a.from(e[Symbol.toPrimitive]("string"),t,A);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function s(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function i(e){return s(e),r(e<0?0:0|h(e))}function u(e){const t=e.length<0?0:0|h(e.length),A=r(t);for(let n=0;n<t;n+=1)A[n]=255&e[n];return A}function c(e,t,A){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(A||0))throw new RangeError('"length" is outside of buffer bounds');let n;return n=void 0===t&&void 0===A?new Uint8Array(e):void 0===A?new Uint8Array(e,t):new Uint8Array(e,t,A),Object.setPrototypeOf(n,a.prototype),n}function h(e){if(e>=l)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+l.toString(16)+" bytes");return 0|e}function f(e,t){if(a.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||W(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const A=e.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===A)return 0;let l=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return A;case"utf8":case"utf-8":return V(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*A;case"hex":return A>>>1;case"base64":return j(e).length;default:if(l)return n?-1:V(e).length;t=(""+t).toLowerCase(),l=!0}}function g(e,t,A){let n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===A||A>this.length)&&(A=this.length),A<=0)return"";if((A>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return x(this,t,A);case"utf8":case"utf-8":return C(this,t,A);case"ascii":return I(this,t,A);case"latin1":case"binary":return T(this,t,A);case"base64":return Q(this,t,A);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return F(this,t,A);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}function d(e,t,A){const n=e[t];e[t]=e[A],e[A]=n}function p(e,t,A,n,l){if(0===e.length)return-1;if("string"==typeof A?(n=A,A=0):A>2147483647?A=2147483647:A<-2147483648&&(A=-2147483648),J(A=+A)&&(A=l?0:e.length-1),A<0&&(A=e.length+A),A>=e.length){if(l)return-1;A=e.length-1}else if(A<0){if(!l)return-1;A=0}if("string"==typeof t&&(t=a.from(t,n)),a.isBuffer(t))return 0===t.length?-1:B(e,t,A,n,l);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?l?Uint8Array.prototype.indexOf.call(e,t,A):Uint8Array.prototype.lastIndexOf.call(e,t,A):B(e,[t],A,n,l);throw new TypeError("val must be string, number or Buffer")}function B(e,t,A,n,l){let r,a=1,o=e.length,s=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return-1;a=2,o/=2,s/=2,A/=2}function i(e,t){return 1===a?e[t]:e.readUInt16BE(t*a)}if(l){let n=-1;for(r=A;r<o;r++)if(i(e,r)===i(t,-1===n?0:r-n)){if(-1===n&&(n=r),r-n+1===s)return n*a}else-1!==n&&(r-=r-n),n=-1}else for(A+s>o&&(A=o-s),r=A;r>=0;r--){let A=!0;for(let n=0;n<s;n++)if(i(e,r+n)!==i(t,n)){A=!1;break}if(A)return r}return-1}function E(e,t,A,n){A=Number(A)||0;const l=e.length-A;n?(n=Number(n))>l&&(n=l):n=l;const r=t.length;let a;for(n>r/2&&(n=r/2),a=0;a<n;++a){const n=parseInt(t.substr(2*a,2),16);if(J(n))return a;e[A+a]=n}return a}function m(e,t,A,n){return H(V(t,e.length-A),e,A,n)}function b(e,t,A,n){return H(function(e){const t=[];for(let A=0;A<e.length;++A)t.push(255&e.charCodeAt(A));return t}(t),e,A,n)}function y(e,t,A,n){return H(j(t),e,A,n)}function w(e,t,A,n){return H(function(e,t){let A,n,l;const r=[];for(let a=0;a<e.length&&!((t-=2)<0);++a)A=e.charCodeAt(a),n=A>>8,l=A%256,r.push(l),r.push(n);return r}(t,e.length-A),e,A,n)}function Q(e,A,n){return 0===A&&n===e.length?t.fromByteArray(e):t.fromByteArray(e.slice(A,n))}function C(e,t,A){A=Math.min(e.length,A);const n=[];let l=t;for(;l<A;){const t=e[l];let r=null,a=t>239?4:t>223?3:t>191?2:1;if(l+a<=A){let A,n,o,s;switch(a){case 1:t<128&&(r=t);break;case 2:A=e[l+1],128==(192&A)&&(s=(31&t)<<6|63&A,s>127&&(r=s));break;case 3:A=e[l+1],n=e[l+2],128==(192&A)&&128==(192&n)&&(s=(15&t)<<12|(63&A)<<6|63&n,s>2047&&(s<55296||s>57343)&&(r=s));break;case 4:A=e[l+1],n=e[l+2],o=e[l+3],128==(192&A)&&128==(192&n)&&128==(192&o)&&(s=(15&t)<<18|(63&A)<<12|(63&n)<<6|63&o,s>65535&&s<1114112&&(r=s))}}null===r?(r=65533,a=1):r>65535&&(r-=65536,n.push(r>>>10&1023|55296),r=56320|1023&r),n.push(r),l+=a}return function(e){const t=e.length;if(t<=M)return String.fromCharCode.apply(String,e);let A="",n=0;for(;n<t;)A+=String.fromCharCode.apply(String,e.slice(n,n+=M));return A}(n)}e.kMaxLength=l,a.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),a.TYPED_ARRAY_SUPPORT||void 0===console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(a.prototype,"parent",{enumerable:!0,get:function(){if(a.isBuffer(this))return this.buffer}}),Object.defineProperty(a.prototype,"offset",{enumerable:!0,get:function(){if(a.isBuffer(this))return this.byteOffset}}),a.poolSize=8192,a.from=function(e,t,A){return o(e,t,A)},Object.setPrototypeOf(a.prototype,Uint8Array.prototype),Object.setPrototypeOf(a,Uint8Array),a.alloc=function(e,t,A){return function(e,t,A){return s(e),e<=0?r(e):void 0!==t?"string"==typeof A?r(e).fill(t,A):r(e).fill(t):r(e)}(e,t,A)},a.allocUnsafe=function(e){return i(e)},a.allocUnsafeSlow=function(e){return i(e)},a.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==a.prototype},a.compare=function(e,t){if(W(e,Uint8Array)&&(e=a.from(e,e.offset,e.byteLength)),W(t,Uint8Array)&&(t=a.from(t,t.offset,t.byteLength)),!a.isBuffer(e)||!a.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let A=e.length,n=t.length;for(let l=0,r=Math.min(A,n);l<r;++l)if(e[l]!==t[l]){A=e[l],n=t[l];break}return A<n?-1:n<A?1:0},a.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},a.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return a.alloc(0);let A;if(void 0===t)for(t=0,A=0;A<e.length;++A)t+=e[A].length;const n=a.allocUnsafe(t);let l=0;for(A=0;A<e.length;++A){let t=e[A];if(W(t,Uint8Array))l+t.length>n.length?(a.isBuffer(t)||(t=a.from(t)),t.copy(n,l)):Uint8Array.prototype.set.call(n,t,l);else{if(!a.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(n,l)}l+=t.length}return n},a.byteLength=f,a.prototype._isBuffer=!0,a.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)d(this,t,t+1);return this},a.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)d(this,t,t+3),d(this,t+1,t+2);return this},a.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)d(this,t,t+7),d(this,t+1,t+6),d(this,t+2,t+5),d(this,t+3,t+4);return this},a.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?C(this,0,e):g.apply(this,arguments)},a.prototype.toLocaleString=a.prototype.toString,a.prototype.equals=function(e){if(!a.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===a.compare(this,e)},a.prototype.inspect=function(){let t="";const A=e.INSPECT_MAX_BYTES;return t=this.toString("hex",0,A).replace(/(.{2})/g,"$1 ").trim(),this.length>A&&(t+=" ... "),"<Buffer "+t+">"},n&&(a.prototype[n]=a.prototype.inspect),a.prototype.compare=function(e,t,A,n,l){if(W(e,Uint8Array)&&(e=a.from(e,e.offset,e.byteLength)),!a.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===A&&(A=e?e.length:0),void 0===n&&(n=0),void 0===l&&(l=this.length),t<0||A>e.length||n<0||l>this.length)throw new RangeError("out of range index");if(n>=l&&t>=A)return 0;if(n>=l)return-1;if(t>=A)return 1;if(this===e)return 0;let r=(l>>>=0)-(n>>>=0),o=(A>>>=0)-(t>>>=0);const s=Math.min(r,o),i=this.slice(n,l),u=e.slice(t,A);for(let e=0;e<s;++e)if(i[e]!==u[e]){r=i[e],o=u[e];break}return r<o?-1:o<r?1:0},a.prototype.includes=function(e,t,A){return-1!==this.indexOf(e,t,A)},a.prototype.indexOf=function(e,t,A){return p(this,e,t,A,!0)},a.prototype.lastIndexOf=function(e,t,A){return p(this,e,t,A,!1)},a.prototype.write=function(e,t,A,n){if(void 0===t)n="utf8",A=this.length,t=0;else if(void 0===A&&"string"==typeof t)n=t,A=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(A)?(A>>>=0,void 0===n&&(n="utf8")):(n=A,A=void 0)}const l=this.length-t;if((void 0===A||A>l)&&(A=l),e.length>0&&(A<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");let r=!1;for(;;)switch(n){case"hex":return E(this,e,t,A);case"utf8":case"utf-8":return m(this,e,t,A);case"ascii":case"latin1":case"binary":return b(this,e,t,A);case"base64":return y(this,e,t,A);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return w(this,e,t,A);default:if(r)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),r=!0}},a.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var M=4096;function I(e,t,A){let n="";A=Math.min(e.length,A);for(let l=t;l<A;++l)n+=String.fromCharCode(127&e[l]);return n}function T(e,t,A){let n="";A=Math.min(e.length,A);for(let l=t;l<A;++l)n+=String.fromCharCode(e[l]);return n}function x(e,t,A){const n=e.length;(!t||t<0)&&(t=0),(!A||A<0||A>n)&&(A=n);let l="";for(let n=t;n<A;++n)l+=z[e[n]];return l}function F(e,t,A){const n=e.slice(t,A);let l="";for(let e=0;e<n.length-1;e+=2)l+=String.fromCharCode(n[e]+256*n[e+1]);return l}function $(e,t,A){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>A)throw new RangeError("Trying to access beyond buffer length")}function D(e,t,A,n,l,r){if(!a.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>l||t<r)throw new RangeError('"value" argument is out of bounds');if(A+n>e.length)throw new RangeError("Index out of range")}function v(e,t,A,n,l){L(t,n,l,e,A,7);let r=Number(t&BigInt(4294967295));e[A++]=r,r>>=8,e[A++]=r,r>>=8,e[A++]=r,r>>=8,e[A++]=r;let a=Number(t>>BigInt(32)&BigInt(4294967295));return e[A++]=a,a>>=8,e[A++]=a,a>>=8,e[A++]=a,a>>=8,e[A++]=a,A}function N(e,t,A,n,l){L(t,n,l,e,A,7);let r=Number(t&BigInt(4294967295));e[A+7]=r,r>>=8,e[A+6]=r,r>>=8,e[A+5]=r,r>>=8,e[A+4]=r;let a=Number(t>>BigInt(32)&BigInt(4294967295));return e[A+3]=a,a>>=8,e[A+2]=a,a>>=8,e[A+1]=a,a>>=8,e[A]=a,A+8}function S(e,t,A,n,l,r){if(A+n>e.length)throw new RangeError("Index out of range");if(A<0)throw new RangeError("Index out of range")}function U(e,t,n,l,r){return t=+t,n>>>=0,r||S(e,0,n,4),A.write(e,t,n,l,23,4),n+4}function R(e,t,n,l,r){return t=+t,n>>>=0,r||S(e,0,n,8),A.write(e,t,n,l,52,8),n+8}a.prototype.slice=function(e,t){const A=this.length;(e=~~e)<0?(e+=A)<0&&(e=0):e>A&&(e=A),(t=void 0===t?A:~~t)<0?(t+=A)<0&&(t=0):t>A&&(t=A),t<e&&(t=e);const n=this.subarray(e,t);return Object.setPrototypeOf(n,a.prototype),n},a.prototype.readUintLE=a.prototype.readUIntLE=function(e,t,A){e>>>=0,t>>>=0,A||$(e,t,this.length);let n=this[e],l=1,r=0;for(;++r<t&&(l*=256);)n+=this[e+r]*l;return n},a.prototype.readUintBE=a.prototype.readUIntBE=function(e,t,A){e>>>=0,t>>>=0,A||$(e,t,this.length);let n=this[e+--t],l=1;for(;t>0&&(l*=256);)n+=this[e+--t]*l;return n},a.prototype.readUint8=a.prototype.readUInt8=function(e,t){return e>>>=0,t||$(e,1,this.length),this[e]},a.prototype.readUint16LE=a.prototype.readUInt16LE=function(e,t){return e>>>=0,t||$(e,2,this.length),this[e]|this[e+1]<<8},a.prototype.readUint16BE=a.prototype.readUInt16BE=function(e,t){return e>>>=0,t||$(e,2,this.length),this[e]<<8|this[e+1]},a.prototype.readUint32LE=a.prototype.readUInt32LE=function(e,t){return e>>>=0,t||$(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},a.prototype.readUint32BE=a.prototype.readUInt32BE=function(e,t){return e>>>=0,t||$(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},a.prototype.readBigUInt64LE=K((function(e){P(e>>>=0,"offset");const t=this[e],A=this[e+7];void 0!==t&&void 0!==A||O(e,this.length-8);const n=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,l=this[++e]+256*this[++e]+65536*this[++e]+A*2**24;return BigInt(n)+(BigInt(l)<<BigInt(32))})),a.prototype.readBigUInt64BE=K((function(e){P(e>>>=0,"offset");const t=this[e],A=this[e+7];void 0!==t&&void 0!==A||O(e,this.length-8);const n=t*2**24+65536*this[++e]+256*this[++e]+this[++e],l=this[++e]*2**24+65536*this[++e]+256*this[++e]+A;return(BigInt(n)<<BigInt(32))+BigInt(l)})),a.prototype.readIntLE=function(e,t,A){e>>>=0,t>>>=0,A||$(e,t,this.length);let n=this[e],l=1,r=0;for(;++r<t&&(l*=256);)n+=this[e+r]*l;return l*=128,n>=l&&(n-=Math.pow(2,8*t)),n},a.prototype.readIntBE=function(e,t,A){e>>>=0,t>>>=0,A||$(e,t,this.length);let n=t,l=1,r=this[e+--n];for(;n>0&&(l*=256);)r+=this[e+--n]*l;return l*=128,r>=l&&(r-=Math.pow(2,8*t)),r},a.prototype.readInt8=function(e,t){return e>>>=0,t||$(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},a.prototype.readInt16LE=function(e,t){e>>>=0,t||$(e,2,this.length);const A=this[e]|this[e+1]<<8;return 32768&A?4294901760|A:A},a.prototype.readInt16BE=function(e,t){e>>>=0,t||$(e,2,this.length);const A=this[e+1]|this[e]<<8;return 32768&A?4294901760|A:A},a.prototype.readInt32LE=function(e,t){return e>>>=0,t||$(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},a.prototype.readInt32BE=function(e,t){return e>>>=0,t||$(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},a.prototype.readBigInt64LE=K((function(e){P(e>>>=0,"offset");const t=this[e],A=this[e+7];void 0!==t&&void 0!==A||O(e,this.length-8);const n=this[e+4]+256*this[e+5]+65536*this[e+6]+(A<<24);return(BigInt(n)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),a.prototype.readBigInt64BE=K((function(e){P(e>>>=0,"offset");const t=this[e],A=this[e+7];void 0!==t&&void 0!==A||O(e,this.length-8);const n=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(n)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+A)})),a.prototype.readFloatLE=function(e,t){return e>>>=0,t||$(e,4,this.length),A.read(this,e,!0,23,4)},a.prototype.readFloatBE=function(e,t){return e>>>=0,t||$(e,4,this.length),A.read(this,e,!1,23,4)},a.prototype.readDoubleLE=function(e,t){return e>>>=0,t||$(e,8,this.length),A.read(this,e,!0,52,8)},a.prototype.readDoubleBE=function(e,t){return e>>>=0,t||$(e,8,this.length),A.read(this,e,!1,52,8)},a.prototype.writeUintLE=a.prototype.writeUIntLE=function(e,t,A,n){if(e=+e,t>>>=0,A>>>=0,!n){D(this,e,t,A,Math.pow(2,8*A)-1,0)}let l=1,r=0;for(this[t]=255&e;++r<A&&(l*=256);)this[t+r]=e/l&255;return t+A},a.prototype.writeUintBE=a.prototype.writeUIntBE=function(e,t,A,n){if(e=+e,t>>>=0,A>>>=0,!n){D(this,e,t,A,Math.pow(2,8*A)-1,0)}let l=A-1,r=1;for(this[t+l]=255&e;--l>=0&&(r*=256);)this[t+l]=e/r&255;return t+A},a.prototype.writeUint8=a.prototype.writeUInt8=function(e,t,A){return e=+e,t>>>=0,A||D(this,e,t,1,255,0),this[t]=255&e,t+1},a.prototype.writeUint16LE=a.prototype.writeUInt16LE=function(e,t,A){return e=+e,t>>>=0,A||D(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},a.prototype.writeUint16BE=a.prototype.writeUInt16BE=function(e,t,A){return e=+e,t>>>=0,A||D(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},a.prototype.writeUint32LE=a.prototype.writeUInt32LE=function(e,t,A){return e=+e,t>>>=0,A||D(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},a.prototype.writeUint32BE=a.prototype.writeUInt32BE=function(e,t,A){return e=+e,t>>>=0,A||D(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},a.prototype.writeBigUInt64LE=K((function(e,t=0){return v(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),a.prototype.writeBigUInt64BE=K((function(e,t=0){return N(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),a.prototype.writeIntLE=function(e,t,A,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*A-1);D(this,e,t,A,n-1,-n)}let l=0,r=1,a=0;for(this[t]=255&e;++l<A&&(r*=256);)e<0&&0===a&&0!==this[t+l-1]&&(a=1),this[t+l]=(e/r|0)-a&255;return t+A},a.prototype.writeIntBE=function(e,t,A,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*A-1);D(this,e,t,A,n-1,-n)}let l=A-1,r=1,a=0;for(this[t+l]=255&e;--l>=0&&(r*=256);)e<0&&0===a&&0!==this[t+l+1]&&(a=1),this[t+l]=(e/r|0)-a&255;return t+A},a.prototype.writeInt8=function(e,t,A){return e=+e,t>>>=0,A||D(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},a.prototype.writeInt16LE=function(e,t,A){return e=+e,t>>>=0,A||D(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},a.prototype.writeInt16BE=function(e,t,A){return e=+e,t>>>=0,A||D(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},a.prototype.writeInt32LE=function(e,t,A){return e=+e,t>>>=0,A||D(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},a.prototype.writeInt32BE=function(e,t,A){return e=+e,t>>>=0,A||D(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},a.prototype.writeBigInt64LE=K((function(e,t=0){return v(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),a.prototype.writeBigInt64BE=K((function(e,t=0){return N(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),a.prototype.writeFloatLE=function(e,t,A){return U(this,e,t,!0,A)},a.prototype.writeFloatBE=function(e,t,A){return U(this,e,t,!1,A)},a.prototype.writeDoubleLE=function(e,t,A){return R(this,e,t,!0,A)},a.prototype.writeDoubleBE=function(e,t,A){return R(this,e,t,!1,A)},a.prototype.copy=function(e,t,A,n){if(!a.isBuffer(e))throw new TypeError("argument should be a Buffer");if(A||(A=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<A&&(n=A),n===A)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(A<0||A>=this.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-A&&(n=e.length-t+A);const l=n-A;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,A,n):Uint8Array.prototype.set.call(e,this.subarray(A,n),t),l},a.prototype.fill=function(e,t,A,n){if("string"==typeof e){if("string"==typeof t?(n=t,t=0,A=this.length):"string"==typeof A&&(n=A,A=this.length),void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!a.isEncoding(n))throw new TypeError("Unknown encoding: "+n);if(1===e.length){const t=e.charCodeAt(0);("utf8"===n&&t<128||"latin1"===n)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<A)throw new RangeError("Out of range index");if(A<=t)return this;let l;if(t>>>=0,A=void 0===A?this.length:A>>>0,e||(e=0),"number"==typeof e)for(l=t;l<A;++l)this[l]=e;else{const r=a.isBuffer(e)?e:a.from(e,n),o=r.length;if(0===o)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(l=0;l<A-t;++l)this[l+t]=r[l%o]}return this};var Y={};function k(e,t,A){Y[e]=class extends A{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name}[${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name}[${e}]:${this.message}`}}}function _(e){let t="",A=e.length;const n="-"===e[0]?1:0;for(;A>=n+4;A-=3)t=`_${e.slice(A-3,A)}${t}`;return`${e.slice(0,A)}${t}`}function L(e,t,A,n,l,r){if(e>A||e<t){const n="bigint"==typeof t?"n":"";let l;throw l=r>3?0===t||t===BigInt(0)?`>=0${n}and<2${n}**${8*(r+1)}${n}`:`>=-(2${n}**${8*(r+1)-1}${n})and<2**${8*(r+1)-1}${n}`:`>=${t}${n}and<=${A}${n}`,new Y.ERR_OUT_OF_RANGE("value",l,e)}!function(e,t,A){P(t,"offset"),void 0!==e[t]&&void 0!==e[t+A]||O(t,e.length-(A+1))}(n,l,r)}function P(e,t){if("number"!=typeof e)throw new Y.ERR_INVALID_ARG_TYPE(t,"number",e)}function O(e,t,A){if(Math.floor(e)!==e)throw P(e,A),new Y.ERR_OUT_OF_RANGE(A||"offset","an integer",e);if(t<0)throw new Y.ERR_BUFFER_OUT_OF_BOUNDS;throw new Y.ERR_OUT_OF_RANGE(A||"offset",`>=${A?1:0}and<=${t}`,e)}k("ERR_BUFFER_OUT_OF_BOUNDS",(function(e){return e?`${e}is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),k("ERR_INVALID_ARG_TYPE",(function(e,t){return`The"${e}"argument must be of type number.Received type ${typeof t}`}),TypeError),k("ERR_OUT_OF_RANGE",(function(e,t,A){let n=`The value of"${e}"is out of range.`,l=A;return Number.isInteger(A)&&Math.abs(A)>2**32?l=_(String(A)):"bigint"==typeof A&&(l=String(A),(A>BigInt(2)**BigInt(32)||A<-(BigInt(2)**BigInt(32)))&&(l=_(l)),l+="n"),n+=`It must be ${t}.Received ${l}`,n}),RangeError);var G=/[^+/0-9A-Za-z-_]/g;function V(e,t){let A;t=t||1/0;const n=e.length;let l=null;const r=[];for(let a=0;a<n;++a){if(A=e.charCodeAt(a),A>55295&&A<57344){if(!l){if(A>56319){(t-=3)>-1&&r.push(239,191,189);continue}if(a+1===n){(t-=3)>-1&&r.push(239,191,189);continue}l=A;continue}if(A<56320){(t-=3)>-1&&r.push(239,191,189),l=A;continue}A=65536+(l-55296<<10|A-56320)}else l&&(t-=3)>-1&&r.push(239,191,189);if(l=null,A<128){if((t-=1)<0)break;r.push(A)}else if(A<2048){if((t-=2)<0)break;r.push(A>>6|192,63&A|128)}else if(A<65536){if((t-=3)<0)break;r.push(A>>12|224,A>>6&63|128,63&A|128)}else{if(!(A<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;r.push(A>>18|240,A>>12&63|128,A>>6&63|128,63&A|128)}}return r}function j(e){return t.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(G,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function H(e,t,A,n){let l;for(l=0;l<n&&!(l+A>=t.length||l>=e.length);++l)t[l+A]=e[l];return l}function W(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function J(e){return e!=e}var z=function(){const e="0123456789abcdef",t=new Array(256);for(let A=0;A<16;++A){const n=16*A;for(let l=0;l<16;++l)t[n+l]=e[A]+e[l]}return t}();function K(e){return"undefined"==typeof BigInt?X:e}function X(){throw new Error("BigInt not supported")}}}),require_safe_buffer=__commonJS({"../../node_modules/.pnpm/safe-buffer@5.2.1/node_modules/safe-buffer/index.js"(e,t){var A=require_buffer(),n=A.Buffer;function l(e,t){for(var A in e)t[A]=e[A]}function r(e,t,A){return n(e,t,A)}n.from&&n.alloc&&n.allocUnsafe&&n.allocUnsafeSlow?t.exports=A:(l(A,e),e.Buffer=r),r.prototype=Object.create(n.prototype),l(n,r),r.from=function(e,t,A){if("number"==typeof e)throw new TypeError("Argument must not be a number");return n(e,t,A)},r.alloc=function(e,t,A){if("number"!=typeof e)throw new TypeError("Argument must be a number");var l=n(e);return void 0!==t?"string"==typeof A?l.fill(t,A):l.fill(t):l.fill(0),l},r.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return n(e)},r.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return A.SlowBuffer(e)}}}),require_string_decoder=__commonJS({"../../node_modules/.pnpm/string_decoder@1.3.0/node_modules/string_decoder/lib/string_decoder.js"(e){"use strict";var t=require_safe_buffer().Buffer,A=t.isEncoding||function(e){switch((e=""+e)&&e.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function n(e){var n;switch(this.encoding=function(e){var n=function(e){if(!e)return"utf8";for(var t;;)switch(e){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return e;default:if(t)return;e=(""+e).toLowerCase(),t=!0}}(e);if("string"!=typeof n&&(t.isEncoding===A||!A(e)))throw new Error("Unknown encoding: "+e);return n||e}(e),this.encoding){case"utf16le":this.text=a,this.end=o,n=4;break;case"utf8":this.fillLast=r,n=4;break;case"base64":this.text=s,this.end=i,n=3;break;default:return this.write=u,void(this.end=c)}this.lastNeed=0,this.lastTotal=0,this.lastChar=t.allocUnsafe(n)}function l(e){return e<=127?0:e>>5==6?2:e>>4==14?3:e>>3==30?4:e>>6==2?-1:-2}function r(e){var t=this.lastTotal-this.lastNeed,A=function(e,t){if(128!=(192&t[0]))return e.lastNeed=0,"�";if(e.lastNeed>1&&t.length>1){if(128!=(192&t[1]))return e.lastNeed=1,"�";if(e.lastNeed>2&&t.length>2&&128!=(192&t[2]))return e.lastNeed=2,"�"}}(this,e);return void 0!==A?A:this.lastNeed<=e.length?(e.copy(this.lastChar,t,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(e.copy(this.lastChar,t,0,e.length),void(this.lastNeed-=e.length))}function a(e,t){if((e.length-t)%2==0){var A=e.toString("utf16le",t);if(A){var n=A.charCodeAt(A.length-1);if(n>=55296&&n<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1],A.slice(0,-1)}return A}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=e[e.length-1],e.toString("utf16le",t,e.length-1)}function o(e){var t=e&&e.length?this.write(e):"";if(this.lastNeed){var A=this.lastTotal-this.lastNeed;return t+this.lastChar.toString("utf16le",0,A)}return t}function s(e,t){var A=(e.length-t)%3;return 0===A?e.toString("base64",t):(this.lastNeed=3-A,this.lastTotal=3,1===A?this.lastChar[0]=e[e.length-1]:(this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1]),e.toString("base64",t,e.length-A))}function i(e){var t=e&&e.length?this.write(e):"";return this.lastNeed?t+this.lastChar.toString("base64",0,3-this.lastNeed):t}function u(e){return e.toString(this.encoding)}function c(e){return e&&e.length?this.write(e):""}e.StringDecoder=n,n.prototype.write=function(e){if(0===e.length)return"";var t,A;if(this.lastNeed){if(void 0===(t=this.fillLast(e)))return"";A=this.lastNeed,this.lastNeed=0}else A=0;return A<e.length?t?t+this.text(e,A):this.text(e,A):t||""},n.prototype.end=function(e){var t=e&&e.length?this.write(e):"";return this.lastNeed?t+"�":t},n.prototype.text=function(e,t){var A=function(e,t,A){var n=t.length-1;if(n<A)return 0;var r=l(t[n]);if(r>=0)return r>0&&(e.lastNeed=r-1),r;if(--n<A||-2===r)return 0;if(r=l(t[n]),r>=0)return r>0&&(e.lastNeed=r-2),r;if(--n<A||-2===r)return 0;if(r=l(t[n]),r>=0)return r>0&&(2===r?r=0:e.lastNeed=r-3),r;return 0}(this,e,t);if(!this.lastNeed)return e.toString("utf8",t);this.lastTotal=A;var n=e.length-(A-this.lastNeed);return e.copy(this.lastChar,0,n),e.toString("utf8",t,n)},n.prototype.fillLast=function(e){if(this.lastNeed<=e.length)return e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,e.length),this.lastNeed-=e.length}}}),require_sax=__commonJS({"../../node_modules/.pnpm/sax@1.2.4/node_modules/sax/lib/sax.js"(e){!function(e){e.parser=function(e,t){return new n(e,t)},e.SAXParser=n,e.SAXStream=r,e.createStream=function(e,t){return new r(e,t)},e.MAX_BUFFER_LENGTH=65536;var t,A=["comment","sgmlDecl","textNode","tagName","doctype","procInstName","procInstBody","entity","attribName","attribValue","cdata","script"];function n(t,l){if(!(this instanceof n))return new n(t,l);var r=this;!function(e){for(var t=0,n=A.length;t<n;t++)e[A[t]]=""}(r),r.q=r.c="",r.bufferCheckPosition=e.MAX_BUFFER_LENGTH,r.opt=l||{},r.opt.lowercase=r.opt.lowercase||r.opt.lowercasetags,r.looseCase=r.opt.lowercase?"toLowerCase":"toUpperCase",r.tags=[],r.closed=r.closedRoot=r.sawRoot=!1,r.tag=r.error=null,r.strict=!!t,r.noscript=!(!t&&!r.opt.noscript),r.state=Q.BEGIN,r.strictEntities=r.opt.strictEntities,r.ENTITIES=r.strictEntities?Object.create(e.XML_ENTITIES):Object.create(e.ENTITIES),r.attribList=[],r.opt.xmlns&&(r.ns=Object.create(u)),r.trackPosition=!1!==r.opt.position,r.trackPosition&&(r.position=r.line=r.column=0),M(r,"onready")}e.EVENTS=["text","processinginstruction","sgmldeclaration","doctype","comment","opentagstart","attribute","opentag","closetag","opencdata","cdata","closecdata","error","end","ready","script","opennamespace","closenamespace"],Object.create||(Object.create=function(e){function t(){}return t.prototype=e,new t}),Object.keys||(Object.keys=function(e){var t=[];for(var A in e)e.hasOwnProperty(A)&&t.push(A);return t}),n.prototype={end:function(){$(this)},write:function(t){var n=this;if(this.error)throw this.error;if(n.closed)return F(n,"Cannot write after close. Assign an onready handler.");if(null===t)return $(n);"object"==typeof t&&(t=t.toString());var l=0,r="";for(;r=_(t,l++),n.c=r,r;)switch(n.trackPosition&&(n.position++,"\n"===r?(n.line++,n.column=0):n.column++),n.state){case Q.BEGIN:if(n.state=Q.BEGIN_WHITESPACE,"\ufeff"===r)continue;k(n,r);continue;case Q.BEGIN_WHITESPACE:k(n,r);continue;case Q.TEXT:if(n.sawRoot&&!n.closedRoot){for(var s=l-1;r&&"<"!==r&&"&"!==r;)(r=_(t,l++))&&n.trackPosition&&(n.position++,"\n"===r?(n.line++,n.column=0):n.column++);n.textNode+=t.substring(s,l-1)}"<"!==r||n.sawRoot&&n.closedRoot&&!n.strict?(d(r)||n.sawRoot&&!n.closedRoot||D(n,"Text data outside of root node."),"&"===r?n.state=Q.TEXT_ENTITY:n.textNode+=r):(n.state=Q.OPEN_WAKA,n.startTagPosition=n.position);continue;case Q.SCRIPT:"<"===r?n.state=Q.SCRIPT_ENDING:n.script+=r;continue;case Q.SCRIPT_ENDING:"/"===r?n.state=Q.CLOSE_TAG:(n.script+="<"+r,n.state=Q.SCRIPT);continue;case Q.OPEN_WAKA:if("!"===r)n.state=Q.SGML_DECL,n.sgmlDecl="";else if(d(r));else if(E(c,r))n.state=Q.OPEN_TAG,n.tagName=r;else if("/"===r)n.state=Q.CLOSE_TAG,n.tagName="";else if("?"===r)n.state=Q.PROC_INST,n.procInstName=n.procInstBody="";else{if(D(n,"Unencoded <"),n.startTagPosition+1<n.position){var i=n.position-n.startTagPosition;r=new Array(i).join(" ")+r}n.textNode+="<"+r,n.state=Q.TEXT}continue;case Q.SGML_DECL:(n.sgmlDecl+r).toUpperCase()===a?(I(n,"onopencdata"),n.state=Q.CDATA,n.sgmlDecl="",n.cdata=""):n.sgmlDecl+r==="--"?(n.state=Q.COMMENT,n.comment="",n.sgmlDecl=""):(n.sgmlDecl+r).toUpperCase()===o?(n.state=Q.DOCTYPE,(n.doctype||n.sawRoot)&&D(n,"Inappropriately located doctype declaration"),n.doctype="",n.sgmlDecl=""):">"===r?(I(n,"onsgmldeclaration",n.sgmlDecl),n.sgmlDecl="",n.state=Q.TEXT):p(r)?(n.state=Q.SGML_DECL_QUOTED,n.sgmlDecl+=r):n.sgmlDecl+=r;continue;case Q.SGML_DECL_QUOTED:r===n.q&&(n.state=Q.SGML_DECL,n.q=""),n.sgmlDecl+=r;continue;case Q.DOCTYPE:">"===r?(n.state=Q.TEXT,I(n,"ondoctype",n.doctype),n.doctype=!0):(n.doctype+=r,"["===r?n.state=Q.DOCTYPE_DTD:p(r)&&(n.state=Q.DOCTYPE_QUOTED,n.q=r));continue;case Q.DOCTYPE_QUOTED:n.doctype+=r,r===n.q&&(n.q="",n.state=Q.DOCTYPE);continue;case Q.DOCTYPE_DTD:n.doctype+=r,"]"===r?n.state=Q.DOCTYPE:p(r)&&(n.state=Q.DOCTYPE_DTD_QUOTED,n.q=r);continue;case Q.DOCTYPE_DTD_QUOTED:n.doctype+=r,r===n.q&&(n.state=Q.DOCTYPE_DTD,n.q="");continue;case Q.COMMENT:"-"===r?n.state=Q.COMMENT_ENDING:n.comment+=r;continue;case Q.COMMENT_ENDING:"-"===r?(n.state=Q.COMMENT_ENDED,n.comment=x(n.opt,n.comment),n.comment&&I(n,"oncomment",n.comment),n.comment=""):(n.comment+="-"+r,n.state=Q.COMMENT);continue;case Q.COMMENT_ENDED:">"!==r?(D(n,"Malformed comment"),n.comment+="--"+r,n.state=Q.COMMENT):n.state=Q.TEXT;continue;case Q.CDATA:"]"===r?n.state=Q.CDATA_ENDING:n.cdata+=r;continue;case Q.CDATA_ENDING:"]"===r?n.state=Q.CDATA_ENDING_2:(n.cdata+="]"+r,n.state=Q.CDATA);continue;case Q.CDATA_ENDING_2:">"===r?(n.cdata&&I(n,"oncdata",n.cdata),I(n,"onclosecdata"),n.cdata="",n.state=Q.TEXT):"]"===r?n.cdata+="]":(n.cdata+="]]"+r,n.state=Q.CDATA);continue;case Q.PROC_INST:"?"===r?n.state=Q.PROC_INST_ENDING:d(r)?n.state=Q.PROC_INST_BODY:n.procInstName+=r;continue;case Q.PROC_INST_BODY:if(!n.procInstBody&&d(r))continue;"?"===r?n.state=Q.PROC_INST_ENDING:n.procInstBody+=r;continue;case Q.PROC_INST_ENDING:">"===r?(I(n,"onprocessinginstruction",{name:n.procInstName,body:n.procInstBody}),n.procInstName=n.procInstBody="",n.state=Q.TEXT):(n.procInstBody+="?"+r,n.state=Q.PROC_INST_BODY);continue;case Q.OPEN_TAG:E(h,r)?n.tagName+=r:(v(n),">"===r?U(n):"/"===r?n.state=Q.OPEN_TAG_SLASH:(d(r)||D(n,"Invalid character in tag name"),n.state=Q.ATTRIB));continue;case Q.OPEN_TAG_SLASH:">"===r?(U(n,!0),R(n)):(D(n,"Forward-slash in opening tag not followed by >"),n.state=Q.ATTRIB);continue;case Q.ATTRIB:if(d(r))continue;">"===r?U(n):"/"===r?n.state=Q.OPEN_TAG_SLASH:E(c,r)?(n.attribName=r,n.attribValue="",n.state=Q.ATTRIB_NAME):D(n,"Invalid attribute name");continue;case Q.ATTRIB_NAME:"="===r?n.state=Q.ATTRIB_VALUE:">"===r?(D(n,"Attribute without value"),n.attribValue=n.attribName,S(n),U(n)):d(r)?n.state=Q.ATTRIB_NAME_SAW_WHITE:E(h,r)?n.attribName+=r:D(n,"Invalid attribute name");continue;case Q.ATTRIB_NAME_SAW_WHITE:if("="===r)n.state=Q.ATTRIB_VALUE;else{if(d(r))continue;D(n,"Attribute without value"),n.tag.attributes[n.attribName]="",n.attribValue="",I(n,"onattribute",{name:n.attribName,value:""}),n.attribName="",">"===r?U(n):E(c,r)?(n.attribName=r,n.state=Q.ATTRIB_NAME):(D(n,"Invalid attribute name"),n.state=Q.ATTRIB)}continue;case Q.ATTRIB_VALUE:if(d(r))continue;p(r)?(n.q=r,n.state=Q.ATTRIB_VALUE_QUOTED):(D(n,"Unquoted attribute value"),n.state=Q.ATTRIB_VALUE_UNQUOTED,n.attribValue=r);continue;case Q.ATTRIB_VALUE_QUOTED:if(r!==n.q){"&"===r?n.state=Q.ATTRIB_VALUE_ENTITY_Q:n.attribValue+=r;continue}S(n),n.q="",n.state=Q.ATTRIB_VALUE_CLOSED;continue;case Q.ATTRIB_VALUE_CLOSED:d(r)?n.state=Q.ATTRIB:">"===r?U(n):"/"===r?n.state=Q.OPEN_TAG_SLASH:E(c,r)?(D(n,"No whitespace between attributes"),n.attribName=r,n.attribValue="",n.state=Q.ATTRIB_NAME):D(n,"Invalid attribute name");continue;case Q.ATTRIB_VALUE_UNQUOTED:if(!B(r)){"&"===r?n.state=Q.ATTRIB_VALUE_ENTITY_U:n.attribValue+=r;continue}S(n),">"===r?U(n):n.state=Q.ATTRIB;continue;case Q.CLOSE_TAG:if(n.tagName)">"===r?R(n):E(h,r)?n.tagName+=r:n.script?(n.script+="</"+n.tagName,n.tagName="",n.state=Q.SCRIPT):(d(r)||D(n,"Invalid tagname in closing tag"),n.state=Q.CLOSE_TAG_SAW_WHITE);else{if(d(r))continue;m(c,r)?n.script?(n.script+="</"+r,n.state=Q.SCRIPT):D(n,"Invalid tagname in closing tag."):n.tagName=r}continue;case Q.CLOSE_TAG_SAW_WHITE:if(d(r))continue;">"===r?R(n):D(n,"Invalid characters in closing tag");continue;case Q.TEXT_ENTITY:case Q.ATTRIB_VALUE_ENTITY_Q:case Q.ATTRIB_VALUE_ENTITY_U:var u,b;switch(n.state){case Q.TEXT_ENTITY:u=Q.TEXT,b="textNode";break;case Q.ATTRIB_VALUE_ENTITY_Q:u=Q.ATTRIB_VALUE_QUOTED,b="attribValue";break;case Q.ATTRIB_VALUE_ENTITY_U:u=Q.ATTRIB_VALUE_UNQUOTED,b="attribValue"}";"===r?(n[b]+=Y(n),n.entity="",n.state=u):E(n.entity.length?g:f,r)?n.entity+=r:(D(n,"Invalid character in entity name"),n[b]+="&"+n.entity+r,n.entity="",n.state=u);continue;default:throw new Error(n,"Unknown state: "+n.state)}n.position>=n.bufferCheckPosition&&function(t){for(var n=Math.max(e.MAX_BUFFER_LENGTH,10),l=0,r=0,a=A.length;r<a;r++){var o=t[A[r]].length;if(o>n)switch(A[r]){case"textNode":T(t);break;case"cdata":I(t,"oncdata",t.cdata),t.cdata="";break;case"script":I(t,"onscript",t.script),t.script="";break;default:F(t,"Max buffer length exceeded: "+A[r])}l=Math.max(l,o)}var s=e.MAX_BUFFER_LENGTH-l;t.bufferCheckPosition=s+t.position}(n);return n},resume:function(){return this.error=null,this},close:function(){return this.write(null)},flush:function(){var e;T(e=this),""!==e.cdata&&(I(e,"oncdata",e.cdata),e.cdata=""),""!==e.script&&(I(e,"onscript",e.script),e.script="")}};try{t=require_stream().Stream}catch(e){t=function(){}}var l=e.EVENTS.filter((function(e){return"error"!==e&&"end"!==e}));function r(e,A){if(!(this instanceof r))return new r(e,A);t.apply(this),this._parser=new n(e,A),this.writable=!0,this.readable=!0;var a=this;this._parser.onend=function(){a.emit("end")},this._parser.onerror=function(e){a.emit("error",e),a._parser.error=null},this._decoder=null,l.forEach((function(e){Object.defineProperty(a,"on"+e,{get:function(){return a._parser["on"+e]},set:function(t){if(!t)return a.removeAllListeners(e),a._parser["on"+e]=t,t;a.on(e,t)},enumerable:!0,configurable:!1})}))}r.prototype=Object.create(t.prototype,{constructor:{value:r}}),r.prototype.write=function(e){if("function"==typeof Buffer&&"function"==typeof Buffer.isBuffer&&Buffer.isBuffer(e)){if(!this._decoder){var t=require_string_decoder().StringDecoder;this._decoder=new t("utf8")}e=this._decoder.write(e)}return this._parser.write(e.toString()),this.emit("data",e),!0},r.prototype.end=function(e){return e&&e.length&&this.write(e),this._parser.end(),!0},r.prototype.on=function(e,A){var n=this;return n._parser["on"+e]||-1===l.indexOf(e)||(n._parser["on"+e]=function(){var t=1===arguments.length?[arguments[0]]:Array.apply(null,arguments);t.splice(0,0,e),n.emit.apply(n,t)}),t.prototype.on.call(n,e,A)};var a="[CDATA[",o="DOCTYPE",s="http://www.w3.org/XML/1998/namespace",i="http://www.w3.org/2000/xmlns/",u={xml:s,xmlns:i},c=/[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/,h=/[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040.\d-]/,f=/[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/,g=/[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040.\d-]/;function d(e){return" "===e||"\n"===e||"\r"===e||"\t"===e}function p(e){return'"'===e||"'"===e}function B(e){return">"===e||d(e)}function E(e,t){return e.test(t)}function m(e,t){return!E(e,t)}var b,y,w,Q=0;for(var C in e.STATE={BEGIN:Q++,BEGIN_WHITESPACE:Q++,TEXT:Q++,TEXT_ENTITY:Q++,OPEN_WAKA:Q++,SGML_DECL:Q++,SGML_DECL_QUOTED:Q++,DOCTYPE:Q++,DOCTYPE_QUOTED:Q++,DOCTYPE_DTD:Q++,DOCTYPE_DTD_QUOTED:Q++,COMMENT_STARTING:Q++,COMMENT:Q++,COMMENT_ENDING:Q++,COMMENT_ENDED:Q++,CDATA:Q++,CDATA_ENDING:Q++,CDATA_ENDING_2:Q++,PROC_INST:Q++,PROC_INST_BODY:Q++,PROC_INST_ENDING:Q++,OPEN_TAG:Q++,OPEN_TAG_SLASH:Q++,ATTRIB:Q++,ATTRIB_NAME:Q++,ATTRIB_NAME_SAW_WHITE:Q++,ATTRIB_VALUE:Q++,ATTRIB_VALUE_QUOTED:Q++,ATTRIB_VALUE_CLOSED:Q++,ATTRIB_VALUE_UNQUOTED:Q++,ATTRIB_VALUE_ENTITY_Q:Q++,ATTRIB_VALUE_ENTITY_U:Q++,CLOSE_TAG:Q++,CLOSE_TAG_SAW_WHITE:Q++,SCRIPT:Q++,SCRIPT_ENDING:Q++},e.XML_ENTITIES={amp:"&",gt:">",lt:"<",quot:'"',apos:"'"},e.ENTITIES={amp:"&",gt:">",lt:"<",quot:'"',apos:"'",AElig:198,Aacute:193,Acirc:194,Agrave:192,Aring:197,Atilde:195,Auml:196,Ccedil:199,ETH:208,Eacute:201,Ecirc:202,Egrave:200,Euml:203,Iacute:205,Icirc:206,Igrave:204,Iuml:207,Ntilde:209,Oacute:211,Ocirc:212,Ograve:210,Oslash:216,Otilde:213,Ouml:214,THORN:222,Uacute:218,Ucirc:219,Ugrave:217,Uuml:220,Yacute:221,aacute:225,acirc:226,aelig:230,agrave:224,aring:229,atilde:227,auml:228,ccedil:231,eacute:233,ecirc:234,egrave:232,eth:240,euml:235,iacute:237,icirc:238,igrave:236,iuml:239,ntilde:241,oacute:243,ocirc:244,ograve:242,oslash:248,otilde:245,ouml:246,szlig:223,thorn:254,uacute:250,ucirc:251,ugrave:249,uuml:252,yacute:253,yuml:255,copy:169,reg:174,nbsp:160,iexcl:161,cent:162,pound:163,curren:164,yen:165,brvbar:166,sect:167,uml:168,ordf:170,laquo:171,not:172,shy:173,macr:175,deg:176,plusmn:177,sup1:185,sup2:178,sup3:179,acute:180,micro:181,para:182,middot:183,cedil:184,ordm:186,raquo:187,frac14:188,frac12:189,frac34:190,iquest:191,times:215,divide:247,OElig:338,oelig:339,Scaron:352,scaron:353,Yuml:376,fnof:402,circ:710,tilde:732,Alpha:913,Beta:914,Gamma:915,Delta:916,Epsilon:917,Zeta:918,Eta:919,Theta:920,Iota:921,Kappa:922,Lambda:923,Mu:924,Nu:925,Xi:926,Omicron:927,Pi:928,Rho:929,Sigma:931,Tau:932,Upsilon:933,Phi:934,Chi:935,Psi:936,Omega:937,alpha:945,beta:946,gamma:947,delta:948,epsilon:949,zeta:950,eta:951,theta:952,iota:953,kappa:954,lambda:955,mu:956,nu:957,xi:958,omicron:959,pi:960,rho:961,sigmaf:962,sigma:963,tau:964,upsilon:965,phi:966,chi:967,psi:968,omega:969,thetasym:977,upsih:978,piv:982,ensp:8194,emsp:8195,thinsp:8201,zwnj:8204,zwj:8205,lrm:8206,rlm:8207,ndash:8211,mdash:8212,lsquo:8216,rsquo:8217,sbquo:8218,ldquo:8220,rdquo:8221,bdquo:8222,dagger:8224,Dagger:8225,bull:8226,hellip:8230,permil:8240,prime:8242,Prime:8243,lsaquo:8249,rsaquo:8250,oline:8254,frasl:8260,euro:8364,image:8465,weierp:8472,real:8476,trade:8482,alefsym:8501,larr:8592,uarr:8593,rarr:8594,darr:8595,harr:8596,crarr:8629,lArr:8656,uArr:8657,rArr:8658,dArr:8659,hArr:8660,forall:8704,part:8706,exist:8707,empty:8709,nabla:8711,isin:8712,notin:8713,ni:8715,prod:8719,sum:8721,minus:8722,lowast:8727,radic:8730,prop:8733,infin:8734,ang:8736,and:8743,or:8744,cap:8745,cup:8746,int:8747,there4:8756,sim:8764,cong:8773,asymp:8776,ne:8800,equiv:8801,le:8804,ge:8805,sub:8834,sup:8835,nsub:8836,sube:8838,supe:8839,oplus:8853,otimes:8855,perp:8869,sdot:8901,lceil:8968,rceil:8969,lfloor:8970,rfloor:8971,lang:9001,rang:9002,loz:9674,spades:9824,clubs:9827,hearts:9829,diams:9830},Object.keys(e.ENTITIES).forEach((function(t){var A=e.ENTITIES[t],n="number"==typeof A?String.fromCharCode(A):A;e.ENTITIES[t]=n})),e.STATE)e.STATE[e.STATE[C]]=C;function M(e,t,A){e[t]&&e[t](A)}function I(e,t,A){e.textNode&&T(e),M(e,t,A)}function T(e){e.textNode=x(e.opt,e.textNode),e.textNode&&M(e,"ontext",e.textNode),e.textNode=""}function x(e,t){return e.trim&&(t=t.trim()),e.normalize&&(t=t.replace(/\s+/g," ")),t}function F(e,t){return T(e),e.trackPosition&&(t+="\nLine: "+e.line+"\nColumn: "+e.column+"\nChar: "+e.c),t=new Error(t),e.error=t,M(e,"onerror",t),e}function $(e){return e.sawRoot&&!e.closedRoot&&D(e,"Unclosed root tag"),e.state!==Q.BEGIN&&e.state!==Q.BEGIN_WHITESPACE&&e.state!==Q.TEXT&&F(e,"Unexpected end"),T(e),e.c="",e.closed=!0,M(e,"onend"),n.call(e,e.strict,e.opt),e}function D(e,t){if("object"!=typeof e||!(e instanceof n))throw new Error("bad call to strictFail");e.strict&&F(e,t)}function v(e){e.strict||(e.tagName=e.tagName[e.looseCase]());var t=e.tags[e.tags.length-1]||e,A=e.tag={name:e.tagName,attributes:{}};e.opt.xmlns&&(A.ns=t.ns),e.attribList.length=0,I(e,"onopentagstart",A)}function N(e,t){var A=e.indexOf(":")<0?["",e]:e.split(":"),n=A[0],l=A[1];return t&&"xmlns"===e&&(n="xmlns",l=""),{prefix:n,local:l}}function S(e){if(e.strict||(e.attribName=e.attribName[e.looseCase]()),-1!==e.attribList.indexOf(e.attribName)||e.tag.attributes.hasOwnProperty(e.attribName))e.attribName=e.attribValue="";else{if(e.opt.xmlns){var t=N(e.attribName,!0),A=t.prefix,n=t.local;if("xmlns"===A)if("xml"===n&&e.attribValue!==s)D(e,"xml: prefix must be bound to "+s+"\nActual: "+e.attribValue);else if("xmlns"===n&&e.attribValue!==i)D(e,"xmlns: prefix must be bound to "+i+"\nActual: "+e.attribValue);else{var l=e.tag,r=e.tags[e.tags.length-1]||e;l.ns===r.ns&&(l.ns=Object.create(r.ns)),l.ns[n]=e.attribValue}e.attribList.push([e.attribName,e.attribValue])}else e.tag.attributes[e.attribName]=e.attribValue,I(e,"onattribute",{name:e.attribName,value:e.attribValue});e.attribName=e.attribValue=""}}function U(e,t){if(e.opt.xmlns){var A=e.tag,n=N(e.tagName);A.prefix=n.prefix,A.local=n.local,A.uri=A.ns[n.prefix]||"",A.prefix&&!A.uri&&(D(e,"Unbound namespace prefix: "+JSON.stringify(e.tagName)),A.uri=n.prefix);var l=e.tags[e.tags.length-1]||e;A.ns&&l.ns!==A.ns&&Object.keys(A.ns).forEach((function(t){I(e,"onopennamespace",{prefix:t,uri:A.ns[t]})}));for(var r=0,a=e.attribList.length;r<a;r++){var o=e.attribList[r],s=o[0],i=o[1],u=N(s,!0),c=u.prefix,h=u.local,f=""===c?"":A.ns[c]||"",g={name:s,value:i,prefix:c,local:h,uri:f};c&&"xmlns"!==c&&!f&&(D(e,"Unbound namespace prefix: "+JSON.stringify(c)),g.uri=c),e.tag.attributes[s]=g,I(e,"onattribute",g)}e.attribList.length=0}e.tag.isSelfClosing=!!t,e.sawRoot=!0,e.tags.push(e.tag),I(e,"onopentag",e.tag),t||(e.noscript||"script"!==e.tagName.toLowerCase()?e.state=Q.TEXT:e.state=Q.SCRIPT,e.tag=null,e.tagName=""),e.attribName=e.attribValue="",e.attribList.length=0}function R(e){if(!e.tagName)return D(e,"Weird empty close tag."),e.textNode+="</>",void(e.state=Q.TEXT);if(e.script){if("script"!==e.tagName)return e.script+="</"+e.tagName+">",e.tagName="",void(e.state=Q.SCRIPT);I(e,"onscript",e.script),e.script=""}var t=e.tags.length,A=e.tagName;e.strict||(A=A[e.looseCase]());for(var n=A;t--;){if(e.tags[t].name===n)break;D(e,"Unexpected close tag")}if(t<0)return D(e,"Unmatched closing tag: "+e.tagName),e.textNode+="</"+e.tagName+">",void(e.state=Q.TEXT);e.tagName=A;for(var l=e.tags.length;l-- >t;){var r=e.tag=e.tags.pop();e.tagName=e.tag.name,I(e,"onclosetag",e.tagName);var a={};for(var o in r.ns)a[o]=r.ns[o];var s=e.tags[e.tags.length-1]||e;e.opt.xmlns&&r.ns!==s.ns&&Object.keys(r.ns).forEach((function(t){var A=r.ns[t];I(e,"onclosenamespace",{prefix:t,uri:A})}))}0===t&&(e.closedRoot=!0),e.tagName=e.attribValue=e.attribName="",e.attribList.length=0,e.state=Q.TEXT}function Y(e){var t,A=e.entity,n=A.toLowerCase(),l="";return e.ENTITIES[A]?e.ENTITIES[A]:e.ENTITIES[n]?e.ENTITIES[n]:("#"===(A=n).charAt(0)&&("x"===A.charAt(1)?(A=A.slice(2),l=(t=parseInt(A,16)).toString(16)):(A=A.slice(1),l=(t=parseInt(A,10)).toString(10))),A=A.replace(/^0+/,""),isNaN(t)||l.toLowerCase()!==A?(D(e,"Invalid character entity"),"&"+e.entity+";"):String.fromCodePoint(t))}function k(e,t){"<"===t?(e.state=Q.OPEN_WAKA,e.startTagPosition=e.position):d(t)||(D(e,"Non-whitespace before first tag."),e.textNode=t,e.state=Q.TEXT)}function _(e,t){var A="";return t<e.length&&(A=e.charAt(t)),A}Q=e.STATE,String.fromCodePoint||(b=String.fromCharCode,y=Math.floor,w=function(){var e,t,A=[],n=-1,l=arguments.length;if(!l)return"";for(var r="";++n<l;){var a=Number(arguments[n]);if(!isFinite(a)||a<0||a>1114111||y(a)!==a)throw RangeError("Invalid code point: "+a);a<=65535?A.push(a):(e=55296+((a-=65536)>>10),t=a%1024+56320,A.push(e,t)),(n+1===l||A.length>16384)&&(r+=b.apply(null,A),A.length=0)}return r},Object.defineProperty?Object.defineProperty(String,"fromCodePoint",{value:w,configurable:!0,writable:!0}):String.fromCodePoint=w)}(void 0===e?e.sax={}:e)}}),fs_exports={},fs_default;__export(fs_exports,{default:()=>fs_default});var init_fs=__esm({"do-nothing:fs"(){fs_default=!1}}),require_inherits_browser=__commonJS({"../../node_modules/.pnpm/inherits@2.0.4/node_modules/inherits/inherits_browser.js"(e,t){"function"==typeof Object.create?t.exports=function(e,t){t&&(e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}:t.exports=function(e,t){if(t){e.super_=t;var A=function(){};A.prototype=t.prototype,e.prototype=new A,e.prototype.constructor=e}}}}),require_events=__commonJS({"node_modules/events/events.js"(e,t){"use strict";var A,n="object"==typeof Reflect?Reflect:null,l=n&&"function"==typeof n.apply?n.apply:function(e,t,A){return Function.prototype.apply.call(e,t,A)};A=n&&"function"==typeof n.ownKeys?n.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var r=Number.isNaN||function(e){return e!=e};function a(){a.init.call(this)}t.exports=a,t.exports.once=function(e,t){return new Promise((function(A,n){function l(A){e.removeListener(t,r),n(A)}function r(){"function"==typeof e.removeListener&&e.removeListener("error",l),A([].slice.call(arguments))}p(e,t,r,{once:!0}),"error"!==t&&function(e,t,A){"function"==typeof e.on&&p(e,"error",t,A)}(e,l,{once:!0})}))},a.EventEmitter=a,a.prototype._events=void 0,a.prototype._eventsCount=0,a.prototype._maxListeners=void 0;var o=10;function s(e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e)}function i(e){return void 0===e._maxListeners?a.defaultMaxListeners:e._maxListeners}function u(e,t,A,n){var l,r,a,o;if(s(A),void 0===(r=e._events)?(r=e._events=Object.create(null),e._eventsCount=0):(void 0!==r.newListener&&(e.emit("newListener",t,A.listener?A.listener:A),r=e._events),a=r[t]),void 0===a)a=r[t]=A,++e._eventsCount;else if("function"==typeof a?a=r[t]=n?[A,a]:[a,A]:n?a.unshift(A):a.push(A),(l=i(e))>0&&a.length>l&&!a.warned){a.warned=!0;var u=new Error("Possible EventEmitter memory leak detected. "+a.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");u.name="MaxListenersExceededWarning",u.emitter=e,u.type=t,u.count=a.length,o=u,console&&console.warn&&console.warn(o)}return e}function c(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function h(e,t,A){var n={fired:!1,wrapFn:void 0,target:e,type:t,listener:A},l=c.bind(n);return l.listener=A,n.wrapFn=l,l}function f(e,t,A){var n=e._events;if(void 0===n)return[];var l=n[t];return void 0===l?[]:"function"==typeof l?A?[l.listener||l]:[l]:A?function(e){for(var t=new Array(e.length),A=0;A<t.length;++A)t[A]=e[A].listener||e[A];return t}(l):d(l,l.length)}function g(e){var t=this._events;if(void 0!==t){var A=t[e];if("function"==typeof A)return 1;if(void 0!==A)return A.length}return 0}function d(e,t){for(var A=new Array(t),n=0;n<t;++n)A[n]=e[n];return A}function p(e,t,A,n){if("function"==typeof e.on)n.once?e.once(t,A):e.on(t,A);else{if("function"!=typeof e.addEventListener)throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof e);e.addEventListener(t,(function l(r){n.once&&e.removeEventListener(t,l),A(r)}))}}Object.defineProperty(a,"defaultMaxListeners",{enumerable:!0,get:function(){return o},set:function(e){if("number"!=typeof e||e<0||r(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");o=e}}),a.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},a.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||r(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this},a.prototype.getMaxListeners=function(){return i(this)},a.prototype.emit=function(e){for(var t=[],A=1;A<arguments.length;A++)t.push(arguments[A]);var n="error"===e,r=this._events;if(void 0!==r)n=n&&void 0===r.error;else if(!n)return!1;if(n){var a;if(t.length>0&&(a=t[0]),a instanceof Error)throw a;var o=new Error("Unhandled error."+(a?" ("+a.message+")":""));throw o.context=a,o}var s=r[e];if(void 0===s)return!1;if("function"==typeof s)l(s,this,t);else{var i=s.length,u=d(s,i);for(A=0;A<i;++A)l(u[A],this,t)}return!0},a.prototype.addListener=function(e,t){return u(this,e,t,!1)},a.prototype.on=a.prototype.addListener,a.prototype.prependListener=function(e,t){return u(this,e,t,!0)},a.prototype.once=function(e,t){return s(t),this.on(e,h(this,e,t)),this},a.prototype.prependOnceListener=function(e,t){return s(t),this.prependListener(e,h(this,e,t)),this},a.prototype.removeListener=function(e,t){var A,n,l,r,a;if(s(t),void 0===(n=this._events))return this;if(void 0===(A=n[e]))return this;if(A===t||A.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete n[e],n.removeListener&&this.emit("removeListener",e,A.listener||t));else if("function"!=typeof A){for(l=-1,r=A.length-1;r>=0;r--)if(A[r]===t||A[r].listener===t){a=A[r].listener,l=r;break}if(l<0)return this;0===l?A.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(A,l),1===A.length&&(n[e]=A[0]),void 0!==n.removeListener&&this.emit("removeListener",e,a||t)}return this},a.prototype.off=a.prototype.removeListener,a.prototype.removeAllListeners=function(e){var t,A,n;if(void 0===(A=this._events))return this;if(void 0===A.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==A[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete A[e]),this;if(0===arguments.length){var l,r=Object.keys(A);for(n=0;n<r.length;++n)"removeListener"!==(l=r[n])&&this.removeAllListeners(l);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(t=A[e]))this.removeListener(e,t);else if(void 0!==t)for(n=t.length-1;n>=0;n--)this.removeListener(e,t[n]);return this},a.prototype.listeners=function(e){return f(this,e,!0)},a.prototype.rawListeners=function(e){return f(this,e,!1)},a.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):g.call(e,t)},a.prototype.listenerCount=g,a.prototype.eventNames=function(){return this._eventsCount>0?A(this._events):[]}}}),require_queue=__commonJS({"../../node_modules/.pnpm/queue@6.0.2/node_modules/queue/index.js"(e,t){var A=require_inherits_browser(),n=require_events().EventEmitter;function l(e){if(!(this instanceof l))return new l(e);n.call(this),e=e||{},this.concurrency=e.concurrency||1/0,this.timeout=e.timeout||0,this.autostart=e.autostart||!1,this.results=e.results||null,this.pending=0,this.session=0,this.running=!1,this.jobs=[],this.timers={}}t.exports=l,t.exports.default=l,A(l,n);["pop","shift","indexOf","lastIndexOf"].forEach((function(e){l.prototype[e]=function(){return Array.prototype[e].apply(this.jobs,arguments)}})),l.prototype.slice=function(e,t){return this.jobs=this.jobs.slice(e,t),this},l.prototype.reverse=function(){return this.jobs.reverse(),this};function r(){for(var e in this.timers){var t=this.timers[e];delete this.timers[e],clearTimeout(t)}}function a(e){var t=this;function A(e){t.end(e)}this.on("error",A),this.on("end",(function n(l){t.removeListener("error",A),t.removeListener("end",n),e(l,this.results)}))}function o(e){this.session++,this.running=!1,this.emit("end",e)}["push","unshift","splice"].forEach((function(e){l.prototype[e]=function(){var t=Array.prototype[e].apply(this.jobs,arguments);return this.autostart&&this.start(),t}})),Object.defineProperty(l.prototype,"length",{get:function(){return this.pending+this.jobs.length}}),l.prototype.start=function(e){if(e&&a.call(this,e),this.running=!0,!(this.pending>=this.concurrency))if(0!==this.jobs.length){var t=this,A=this.jobs.shift(),n=!0,l=this.session,r=null,s=!1,i=null,u=A.hasOwnProperty("timeout")?A.timeout:this.timeout;u&&(r=setTimeout((function(){s=!0,t.listeners("timeout").length>0?t.emit("timeout",h,A):h()}),u),this.timers[r]=r),this.results&&(i=this.results.length,this.results[i]=null),this.pending++,t.emit("start",A);var c=A(h);c&&c.then&&"function"==typeof c.then&&c.then((function(e){return h(null,e)})).catch((function(e){return h(e||!0)})),this.running&&this.jobs.length>0&&this.start()}else 0===this.pending&&o.call(this);function h(e,a){n&&t.session===l&&(n=!1,t.pending--,null!==r&&(delete t.timers[r],clearTimeout(r)),e?t.emit("error",e,A):!1===s&&(null!==i&&(t.results[i]=Array.prototype.slice.call(arguments,1)),t.emit("success",a,A)),t.session===l&&(0===t.pending&&0===t.jobs.length?o.call(t):t.running&&t.start()))}},l.prototype.stop=function(){this.running=!1},l.prototype.end=function(e){r.call(this),this.jobs.length=0,this.pending=0,o.call(this,e)}}}),require_bmp=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/bmp.js"(e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.BMP=void 0,e.BMP={validate:e=>"BM"===e.toString("ascii",0,2),calculate:e=>({height:Math.abs(e.readInt32LE(22)),width:e.readUInt32LE(18)})}}}),require_ico=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/ico.js"(e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.ICO=void 0;function t(e,t){const A=e.readUInt8(t);return 0===A?256:A}function A(e,A){const n=6+16*A;return{height:t(e,n+1),width:t(e,n)}}e.ICO={validate(e){const t=e.readUInt16LE(0),A=e.readUInt16LE(4);if(0!==t||0===A)return!1;return 1===e.readUInt16LE(2)},calculate(e){const t=e.readUInt16LE(4),n=A(e,0);if(1===t)return n;const l=[n];for(let n=1;n<t;n+=1)l.push(A(e,n));return{height:n.height,images:l,width:n.width}}}}}),require_cur=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/cur.js"(e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.CUR=void 0;var t=require_ico();e.CUR={validate(e){const t=e.readUInt16LE(0),A=e.readUInt16LE(4);if(0!==t||0===A)return!1;return 2===e.readUInt16LE(2)},calculate:e=>t.ICO.calculate(e)}}}),require_dds=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/dds.js"(e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.DDS=void 0,e.DDS={validate:e=>542327876===e.readUInt32LE(0),calculate:e=>({height:e.readUInt32LE(12),width:e.readUInt32LE(16)})}}}),require_gif=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/gif.js"(e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.GIF=void 0;var t=/^GIF8[79]a/;e.GIF={validate(e){const A=e.toString("ascii",0,6);return t.test(A)},calculate:e=>({height:e.readUInt16LE(8),width:e.readUInt16LE(6)})}}}),require_icns=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/icns.js"(e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.ICNS=void 0;var t={ICON:32,"ICN#":32,"icm#":16,icm4:16,icm8:16,"ics#":16,ics4:16,ics8:16,is32:16,s8mk:16,icp4:16,icl4:32,icl8:32,il32:32,l8mk:32,icp5:32,ic11:32,ich4:48,ich8:48,ih32:48,h8mk:48,icp6:64,ic12:32,it32:128,t8mk:128,ic07:128,ic08:256,ic13:256,ic09:512,ic14:512,ic10:1024};function A(e,t){const A=t+4;return[e.toString("ascii",t,A),e.readUInt32BE(A)]}function n(e){const A=t[e];return{width:A,height:A,type:e}}e.ICNS={validate:e=>"icns"===e.toString("ascii",0,4),calculate(e){const t=e.length,l=e.readUInt32BE(4);let r=8,a=A(e,r),o=n(a[0]);if(r+=a[1],r===l)return o;const s={height:o.height,images:[o],width:o.width};for(;r<l&&r<t;)a=A(e,r),o=n(a[0]),r+=a[1],s.images.push(o);return s}}}}),require_j2c=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/j2c.js"(e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.J2C=void 0,e.J2C={validate:e=>"ff4fff51"===e.toString("hex",0,4),calculate:e=>({height:e.readUInt32BE(12),width:e.readUInt32BE(8)})}}}),require_jp2=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/jp2.js"(e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.JP2=void 0;var t="66747970",A="6a703268",n="6a502020",l="72726571",r=e=>({height:e.readUInt32BE(4),width:e.readUInt32BE(8)});e.JP2={validate(e){const A=e.toString("hex",4,8),l=e.readUInt32BE(0);if(A!==n||l<1)return!1;const r=l+4,a=e.readUInt32BE(l);return e.slice(r,r+a).toString("hex",0,4)===t},calculate(e){const t=e.readUInt32BE(0);let n=t+4+e.readUInt16BE(t+2);switch(e.toString("hex",n,n+4)){case l:return n=n+4+4+(e=>{const t=e.readUInt8(0);let A=1+2*t;return A=A+2+e.readUInt16BE(A)*(2+t),A+2+e.readUInt16BE(A)*(16+t)})(e.slice(n+4)),r(e.slice(n+8,n+24));case A:return r(e.slice(n+8,n+24));default:throw new TypeError("Unsupported header found: "+e.toString("ascii",n,n+4))}}}}}),require_readUInt=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/readUInt.js"(e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.readUInt=void 0,e.readUInt=function(e,t,A,n){return A=A||0,e["readUInt"+t+(n?"BE":"LE")].call(e,A)}}}),require_jpg=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/jpg.js"(e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.JPG=void 0;var t=require_readUInt();function A(e){return"45786966"===e.toString("hex",2,6)}function n(e,t){return{height:e.readUInt16BE(t),width:e.readUInt16BE(t+2)}}function l(e,A){const n=e.slice(2,A),l=n.toString("hex",6,8),r="4d4d"===l;if(r||"4949"===l)return function(e,A){const n=(0,t.readUInt)(e,16,14,A);for(let l=0;l<n;l++){const n=16+12*l,r=n+12;if(n>e.length)return;const a=e.slice(n,r);if(274===(0,t.readUInt)(a,16,0,A)){if(3!==(0,t.readUInt)(a,16,2,A))return;if(1!==(0,t.readUInt)(a,32,4,A))return;return(0,t.readUInt)(a,16,8,A)}}}(n,r)}function r(e,t){if(t>e.length)throw new TypeError("Corrupt JPG, exceeded buffer limits");if(255!==e[t])throw new TypeError("Invalid JPG, marker table corrupted")}e.JPG={validate:e=>"ffd8"===e.toString("hex",0,2),calculate(e){let t,a;for(e=e.slice(4);e.length;){const o=e.readUInt16BE(0);if(A(e)&&(t=l(e,o)),r(e,o),a=e[o+1],192===a||193===a||194===a){const A=n(e,o+5);return t?{height:A.height,orientation:t,width:A.width}:A}e=e.slice(o+2)}throw new TypeError("Invalid JPG, no size found")}}}}),require_ktx=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/ktx.js"(e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.KTX=void 0;e.KTX={validate:e=>"KTX 11"===e.toString("ascii",1,7),calculate:e=>({height:e.readUInt32LE(40),width:e.readUInt32LE(36)})}}}),require_png=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/png.js"(e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.PNG=void 0;var t="CgBI";e.PNG={validate(e){if("PNG\r\n\n"===e.toString("ascii",1,8)){let A=e.toString("ascii",12,16);if(A===t&&(A=e.toString("ascii",28,32)),"IHDR"!==A)throw new TypeError("Invalid PNG");return!0}return!1},calculate:e=>e.toString("ascii",12,16)===t?{height:e.readUInt32BE(36),width:e.readUInt32BE(32)}:{height:e.readUInt32BE(20),width:e.readUInt32BE(16)}}}}),require_pnm=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/pnm.js"(e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.PNM=void 0;var t={P1:"pbm/ascii",P2:"pgm/ascii",P3:"ppm/ascii",P4:"pbm",P5:"pgm",P6:"ppm",P7:"pam",PF:"pfm"},A=Object.keys(t),n={default:e=>{let t=[];for(;e.length>0;){const A=e.shift();if("#"!==A[0]){t=A.split(" ");break}}if(2===t.length)return{height:parseInt(t[1],10),width:parseInt(t[0],10)};throw new TypeError("Invalid PNM")},pam:e=>{const t={};for(;e.length>0;){const A=e.shift();if(A.length>16||A.charCodeAt(0)>128)continue;const[n,l]=A.split(" ");if(n&&l&&(t[n.toLowerCase()]=parseInt(l,10)),t.height&&t.width)break}if(t.height&&t.width)return{height:t.height,width:t.width};throw new TypeError("Invalid PAM")}};e.PNM={validate(e){const t=e.toString("ascii",0,2);return A.includes(t)},calculate(e){const A=e.toString("ascii",0,2),l=t[A],r=e.toString("ascii",3).split(/[\r\n]+/);return(n[l]||n.default)(r)}}}}),require_psd=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/psd.js"(e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.PSD=void 0,e.PSD={validate:e=>"8BPS"===e.toString("ascii",0,4),calculate:e=>({height:e.readUInt32BE(14),width:e.readUInt32BE(18)})}}}),require_svg=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/svg.js"(e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.SVG=void 0;var t=/<svg\s([^>"']|"[^"]*"|'[^']*')*>/,A={height:/\sheight=(['"])([^%]+?)\1/,root:t,viewbox:/\sviewBox=(['"])(.+?)\1/i,width:/\swidth=(['"])([^%]+?)\1/},n=2.54,l={in:96,cm:96/n,em:16,ex:8,m:96/n*100,mm:96/n/10,pc:96/72/12,pt:96/72,px:1},r=new RegExp(`^([0-9.]+(?:e\\d+)?)(${Object.keys(l).join("|")})?$`);function a(e){const t=r.exec(e);if(t)return Math.round(Number(t[1])*(l[t[2]]||1))}function o(e){const t=e.split(" ");return{height:a(t[3]),width:a(t[2])}}e.SVG={validate(e){const A=String(e);return t.test(A)},calculate(e){const t=e.toString("utf8").match(A.root);if(t){const e=function(e){const t=e.match(A.width),n=e.match(A.height),l=e.match(A.viewbox);return{height:n&&a(n[2]),viewbox:l&&o(l[2]),width:t&&a(t[2])}}(t[0]);if(e.width&&e.height)return function(e){return{height:e.height,width:e.width}}(e);if(e.viewbox)return function(e,t){const A=t.width/t.height;return e.width?{height:Math.floor(e.width/A),width:e.width}:e.height?{height:e.height,width:Math.floor(e.height*A)}:{height:t.height,width:t.width}}(e,e.viewbox)}throw new TypeError("Invalid SVG")}}}}),require_tga=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/tga.js"(e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.TGA=void 0,e.TGA={validate:e=>0===e.readUInt16LE(0)&&0===e.readUInt16LE(4),calculate:e=>({height:e.readUInt16LE(14),width:e.readUInt16LE(12)})}}}),require_tiff=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/tiff.js"(e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.TIFF=void 0;var t=(init_fs(),__toCommonJS(fs_exports)),A=require_readUInt();function n(e,t){const n=(0,A.readUInt)(e,16,8,t);return((0,A.readUInt)(e,16,10,t)<<16)+n}function l(e){if(e.length>24)return e.slice(12)}var r=["49492a00","4d4d002a"];e.TIFF={validate:e=>r.includes(e.toString("hex",0,4)),calculate(e,r){if(!r)throw new TypeError("Tiff doesn't support buffer");const a="BE"===function(e){const t=e.toString("ascii",0,2);return"II"===t?"LE":"MM"===t?"BE":void 0}(e),o=function(e,n,l){const r=(0,A.readUInt)(e,32,4,l);let a=1024;const o=t.statSync(n).size;r+a>o&&(a=o-r-10);const s=Buffer.alloc(a),i=t.openSync(n,"r");return t.readSync(i,s,0,a,r),t.closeSync(i),s.slice(2)}(e,r,a),s=function(e,t){const r={};let a=e;for(;a&&a.length;){const e=(0,A.readUInt)(a,16,0,t),o=(0,A.readUInt)(a,16,2,t),s=(0,A.readUInt)(a,32,4,t);if(0===e)break;1!==s||3!==o&&4!==o||(r[e]=n(a,t)),a=l(a)}return r}(o,a),i=s[256],u=s[257];if(!i||!u)throw new TypeError("Invalid Tiff. Missing tags");return{height:u,width:i}}}}}),require_webp=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types/webp.js"(e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.WEBP=void 0,e.WEBP={validate(e){const t="RIFF"===e.toString("ascii",0,4),A="WEBP"===e.toString("ascii",8,12),n="VP8"===e.toString("ascii",12,15);return t&&A&&n},calculate(e){const t=e.toString("ascii",12,16);if(e=e.slice(20,30),"VP8X"===t){const t=e[0];if(!(192&t)&&!(1&t))return function(e){return{height:1+e.readUIntLE(7,3),width:1+e.readUIntLE(4,3)}}(e);throw new TypeError("Invalid WebP")}if("VP8 "===t&&47!==e[0])return function(e){return{height:16383&e.readInt16LE(8),width:16383&e.readInt16LE(6)}}(e);const A=e.toString("hex",3,6);if("VP8L"===t&&"9d012a"!==A)return function(e){return{height:1+((15&e[4])<<10|e[3]<<2|(192&e[2])>>6),width:1+((63&e[2])<<8|e[1])}}(e);throw new TypeError("Invalid WebP")}}}}),require_types=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/types.js"(e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.typeHandlers=void 0;var t=require_bmp(),A=require_cur(),n=require_dds(),l=require_gif(),r=require_icns(),a=require_ico(),o=require_j2c(),s=require_jp2(),i=require_jpg(),u=require_ktx(),c=require_png(),h=require_pnm(),f=require_psd(),g=require_svg(),d=require_tga(),p=require_tiff(),B=require_webp();e.typeHandlers={bmp:t.BMP,cur:A.CUR,dds:n.DDS,gif:l.GIF,icns:r.ICNS,ico:a.ICO,j2c:o.J2C,jp2:s.JP2,jpg:i.JPG,ktx:u.KTX,png:c.PNG,pnm:h.PNM,psd:f.PSD,svg:g.SVG,tga:d.TGA,tiff:p.TIFF,webp:B.WEBP}}}),require_detector=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/detector.js"(e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.detector=void 0;var t=require_types(),A=Object.keys(t.typeHandlers),n={56:"psd",66:"bmp",68:"dds",71:"gif",73:"tiff",77:"tiff",82:"webp",105:"icns",137:"png",255:"jpg"};e.detector=function(e){const l=e[0];if(l in n){const A=n[l];if(A&&t.typeHandlers[A].validate(e))return A}return A.find((A=>t.typeHandlers[A].validate(e)))}}}),require_dist=__commonJS({"../../node_modules/.pnpm/image-size@1.0.2/node_modules/image-size/dist/index.js"(e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.types=e.setConcurrency=e.disableTypes=e.disableFS=e.imageSize=void 0;var A=(init_fs(),__toCommonJS(fs_exports)),n=require_path_browserify(),l=require_queue(),r=require_types(),a=require_detector(),o=524288,s=new l.default({concurrency:100,autostart:!0}),i={disabledFS:!1,disabledTypes:[]};function u(e,t){const A=(0,a.detector)(e);if(void 0!==A){if(i.disabledTypes.indexOf(A)>-1)throw new TypeError("disabled file type: "+A);if(A in r.typeHandlers){const n=r.typeHandlers[A].calculate(e,t);if(void 0!==n)return n.type=A,n}}throw new TypeError("unsupported file type: "+A+" (file: "+t+")")}function c(e,t){if(Buffer.isBuffer(e))return u(e);if("string"!=typeof e||i.disabledFS)throw new TypeError("invalid invocation. input should be a Buffer");const l=n.resolve(e);if("function"!=typeof t){const e=function(e){const t=A.openSync(e,"r");try{const{size:e}=A.fstatSync(t);if(e<=0)throw new Error("Empty file");const n=Math.min(e,o),l=Buffer.alloc(n);return A.readSync(t,l,0,n,0),l}finally{A.closeSync(t)}}(l);return u(e,l)}s.push((()=>async function(e){const t=await A.promises.open(e,"r");try{const{size:e}=await t.stat();if(e<=0)throw new Error("Empty file");const A=Math.min(e,o),n=Buffer.alloc(A);return await t.read(n,0,A,0),n}finally{await t.close()}}(l).then((e=>process.nextTick(t,null,u(e,l)))).catch(t)))}t.exports=e=c,e.default=c,e.imageSize=c;e.disableFS=e=>{i.disabledFS=e};e.disableTypes=e=>{i.disabledTypes=e};e.setConcurrency=e=>{s.concurrency=e},e.types=Object.keys(r.typeHandlers)}}),require_fast_deep_equal=__commonJS({"../../node_modules/.pnpm/fast-deep-equal@3.1.3/node_modules/fast-deep-equal/index.js"(e,t){"use strict";t.exports=function e(t,A){if(t===A)return!0;if(t&&A&&"object"==typeof t&&"object"==typeof A){if(t.constructor!==A.constructor)return!1;var n,l,r;if(Array.isArray(t)){if((n=t.length)!=A.length)return!1;for(l=n;0!=l--;)if(!e(t[l],A[l]))return!1;return!0}if(t.constructor===RegExp)return t.source===A.source&&t.flags===A.flags;if(t.valueOf!==Object.prototype.valueOf)return t.valueOf()===A.valueOf();if(t.toString!==Object.prototype.toString)return t.toString()===A.toString();if((n=(r=Object.keys(t)).length)!==Object.keys(A).length)return!1;for(l=n;0!=l--;)if(!Object.prototype.hasOwnProperty.call(A,r[l]))return!1;for(l=n;0!=l--;){var a=r[l];if(!e(t[a],A[a]))return!1}return!0}return t!=t&&A!=A}}}),require_tiny_inflate=__commonJS({"../../node_modules/.pnpm/tiny-inflate@1.0.3/node_modules/tiny-inflate/index.js"(e,t){function A(){this.table=new Uint16Array(16),this.trans=new Uint16Array(288)}function n(e,t){this.source=e,this.sourceIndex=0,this.tag=0,this.bitcount=0,this.dest=t,this.destLen=0,this.ltree=new A,this.dtree=new A}var l=new A,r=new A,a=new Uint8Array(30),o=new Uint16Array(30),s=new Uint8Array(30),i=new Uint16Array(30),u=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),c=new A,h=new Uint8Array(320);function f(e,t,A,n){var l,r;for(l=0;l<A;++l)e[l]=0;for(l=0;l<30-A;++l)e[l+A]=l/A|0;for(r=n,l=0;l<30;++l)t[l]=r,r+=1<<e[l]}var g=new Uint16Array(16);function d(e,t,A,n){var l,r;for(l=0;l<16;++l)e.table[l]=0;for(l=0;l<n;++l)e.table[t[A+l]]++;for(e.table[0]=0,r=0,l=0;l<16;++l)g[l]=r,r+=e.table[l];for(l=0;l<n;++l)t[A+l]&&(e.trans[g[t[A+l]]++]=l)}function p(e){e.bitcount--||(e.tag=e.source[e.sourceIndex++],e.bitcount=7);var t=1&e.tag;return e.tag>>>=1,t}function B(e,t,A){if(!t)return A;for(;e.bitcount<24;)e.tag|=e.source[e.sourceIndex++]<<e.bitcount,e.bitcount+=8;var n=e.tag&65535>>>16-t;return e.tag>>>=t,e.bitcount-=t,n+A}function E(e,t){for(;e.bitcount<24;)e.tag|=e.source[e.sourceIndex++]<<e.bitcount,e.bitcount+=8;var A=0,n=0,l=0,r=e.tag;do{n=2*n+(1&r),r>>>=1,++l,A+=t.table[l],n-=t.table[l]}while(n>=0);return e.tag=r,e.bitcount-=l,t.trans[A+n]}function m(e,t,A){var n,l,r,a,o,s;for(n=B(e,5,257),l=B(e,5,1),r=B(e,4,4),a=0;a<19;++a)h[a]=0;for(a=0;a<r;++a){var i=B(e,3,0);h[u[a]]=i}for(d(c,h,0,19),o=0;o<n+l;){var f=E(e,c);switch(f){case 16:var g=h[o-1];for(s=B(e,2,3);s;--s)h[o++]=g;break;case 17:for(s=B(e,3,3);s;--s)h[o++]=0;break;case 18:for(s=B(e,7,11);s;--s)h[o++]=0;break;default:h[o++]=f}}d(t,h,0,n),d(A,h,n,l)}function b(e,t,A){for(;;){var n,l,r,u,c=E(e,t);if(256===c)return 0;if(c<256)e.dest[e.destLen++]=c;else for(n=B(e,a[c-=257],o[c]),l=E(e,A),u=r=e.destLen-B(e,s[l],i[l]);u<r+n;++u)e.dest[e.destLen++]=e.dest[u]}}function y(e){for(var t,A;e.bitcount>8;)e.sourceIndex--,e.bitcount-=8;if((t=256*(t=e.source[e.sourceIndex+1])+e.source[e.sourceIndex])!==(65535&~(256*e.source[e.sourceIndex+3]+e.source[e.sourceIndex+2])))return-3;for(e.sourceIndex+=4,A=t;A;--A)e.dest[e.destLen++]=e.source[e.sourceIndex++];return e.bitcount=0,0}!function(e,t){var A;for(A=0;A<7;++A)e.table[A]=0;for(e.table[7]=24,e.table[8]=152,e.table[9]=112,A=0;A<24;++A)e.trans[A]=256+A;for(A=0;A<144;++A)e.trans[24+A]=A;for(A=0;A<8;++A)e.trans[168+A]=280+A;for(A=0;A<112;++A)e.trans[176+A]=144+A;for(A=0;A<5;++A)t.table[A]=0;for(t.table[5]=32,A=0;A<32;++A)t.trans[A]=A}(l,r),f(a,o,4,3),f(s,i,2,1),a[28]=0,o[28]=258,t.exports=function(e,t){var A,a,o=new n(e,t);do{switch(A=p(o),B(o,2,0)){case 0:a=y(o);break;case 1:a=b(o,l,r);break;case 2:m(o,o.ltree,o.dtree),a=b(o,o.ltree,o.dtree);break;default:a=-3}if(0!==a)throw new Error("Data error")}while(!A);return o.destLen<o.dest.length?"function"==typeof o.dest.slice?o.dest.slice(0,o.destLen):o.dest.subarray(0,o.destLen):o.dest}}}),require_swap=__commonJS({"../../node_modules/.pnpm/unicode-trie@2.0.0/node_modules/unicode-trie/swap.js"(e,t){var A=18===new Uint8Array(new Uint32Array([305419896]).buffer)[0],n=(e,t,A)=>{let n=e[t];e[t]=e[A],e[A]=n};t.exports={swap32LE:e=>{A&&(e=>{const t=e.length;for(let A=0;A<t;A+=4)n(e,A,A+3),n(e,A+1,A+2)})(e)}}}}),require_unicode_trie=__commonJS({"../../node_modules/.pnpm/unicode-trie@2.0.0/node_modules/unicode-trie/index.js"(e,t){var A=require_tiny_inflate(),{swap32LE:n}=require_swap();t.exports=class{constructor(e){const t="function"==typeof e.readUInt32BE&&"function"==typeof e.slice;if(t||e instanceof Uint8Array){let l;if(t)this.highStart=e.readUInt32LE(0),this.errorValue=e.readUInt32LE(4),l=e.readUInt32LE(8),e=e.slice(12);else{const t=new DataView(e.buffer);this.highStart=t.getUint32(0,!0),this.errorValue=t.getUint32(4,!0),l=t.getUint32(8,!0),e=e.subarray(12)}e=A(e,new Uint8Array(l)),e=A(e,new Uint8Array(l)),n(e),this.data=new Uint32Array(e.buffer)}else({data:this.data,highStart:this.highStart,errorValue:this.errorValue}=e)}get(e){let t;return e<0||e>1114111?this.errorValue:e<55296||e>56319&&e<=65535?(t=(this.data[e>>5]<<2)+(31&e),this.data[t]):e<=65535?(t=(this.data[2048+(e-55296>>5)]<<2)+(31&e),this.data[t]):e<this.highStart?(t=this.data[2080+(e>>11)],t=this.data[t+(e>>5&63)],t=(t<<2)+(31&e),this.data[t]):this.data[this.data.length-4]}}}}),require_dfa=__commonJS({"../../node_modules/.pnpm/dfa@1.2.0/node_modules/dfa/index.js"(e,t){"use strict";t.exports=class{constructor(e){this.stateTable=e.stateTable,this.accepting=e.accepting,this.tags=e.tags}match(e){var t=this;return{*[Symbol.iterator](){for(var A=1,n=null,l=null,r=null,a=0;a<e.length;a++){var o=e[a];r=A,0===(A=t.stateTable[A][o])&&(null!=n&&null!=l&&l>=n&&(yield[n,l,t.tags[r]]),A=t.stateTable[1][o],n=null),0!==A&&null==n&&(n=a),t.accepting[A]&&(l=a),0===A&&(A=1)}null!=n&&null!=l&&l>=n&&(yield[n,l,t.tags[A]])}}}apply(e,t){for(var[A,n,l]of this.match(e))for(var r of l)"function"==typeof t[r]&&t[r](A,n,e.slice(A,n+1))}}}}),require_clone=__commonJS({"../../node_modules/.pnpm/clone@2.1.2/node_modules/clone/clone.js"(e,t){var A=function(){"use strict";function e(e,t){return null!=t&&e instanceof t}var t,A,n;try{t=Map}catch(e){t=function(){}}try{A=Set}catch(e){A=function(){}}try{n=Promise}catch(e){n=function(){}}function l(r,o,s,i,u){"object"==typeof o&&(s=o.depth,i=o.prototype,u=o.includeNonEnumerable,o=o.circular);var c=[],h=[],f="undefined"!=typeof Buffer;return void 0===o&&(o=!0),void 0===s&&(s=1/0),function r(s,g){if(null===s)return null;if(0===g)return s;var d,p;if("object"!=typeof s)return s;if(e(s,t))d=new t;else if(e(s,A))d=new A;else if(e(s,n))d=new n((function(e,t){s.then((function(t){e(r(t,g-1))}),(function(e){t(r(e,g-1))}))}));else if(l.__isArray(s))d=[];else if(l.__isRegExp(s))d=new RegExp(s.source,a(s)),s.lastIndex&&(d.lastIndex=s.lastIndex);else if(l.__isDate(s))d=new Date(s.getTime());else{if(f&&Buffer.isBuffer(s))return d=Buffer.allocUnsafe?Buffer.allocUnsafe(s.length):new Buffer(s.length),s.copy(d),d;e(s,Error)?d=Object.create(s):void 0===i?(p=Object.getPrototypeOf(s),d=Object.create(p)):(d=Object.create(i),p=i)}if(o){var B=c.indexOf(s);if(-1!=B)return h[B];c.push(s),h.push(d)}for(var E in e(s,t)&&s.forEach((function(e,t){var A=r(t,g-1),n=r(e,g-1);d.set(A,n)})),e(s,A)&&s.forEach((function(e){var t=r(e,g-1);d.add(t)})),s){var m;p&&(m=Object.getOwnPropertyDescriptor(p,E)),m&&null==m.set||(d[E]=r(s[E],g-1))}if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(s);for(E=0;E<b.length;E++){var y=b[E];(!(Q=Object.getOwnPropertyDescriptor(s,y))||Q.enumerable||u)&&(d[y]=r(s[y],g-1),Q.enumerable||Object.defineProperty(d,y,{enumerable:!1}))}}if(u){var w=Object.getOwnPropertyNames(s);for(E=0;E<w.length;E++){var Q,C=w[E];(Q=Object.getOwnPropertyDescriptor(s,C))&&Q.enumerable||(d[C]=r(s[C],g-1),Object.defineProperty(d,C,{enumerable:!1}))}}return d}(r,s)}function r(e){return Object.prototype.toString.call(e)}function a(e){var t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),t}return l.clonePrototype=function(e){if(null===e)return null;var t=function(){};return t.prototype=e,new t},l.__objToStr=r,l.__isDate=function(e){return"object"==typeof e&&"[object Date]"===r(e)},l.__isArray=function(e){return"object"==typeof e&&"[object Array]"===r(e)},l.__isRegExp=function(e){return"object"==typeof e&&"[object RegExp]"===r(e)},l.__getRegExpFlags=a,l}();"object"==typeof t&&t.exports&&(t.exports=A)}}),require_streams=__commonJS({"../../node_modules/.pnpm/brotli@1.3.3/node_modules/brotli/dec/streams.js"(e){function t(e){this.buffer=e,this.pos=0}function A(e){this.buffer=e,this.pos=0}t.prototype.read=function(e,t,A){this.pos+A>this.buffer.length&&(A=this.buffer.length-this.pos);for(var n=0;n<A;n++)e[t+n]=this.buffer[this.pos+n];return this.pos+=A,A},e.BrotliInput=t,A.prototype.write=function(e,t){if(this.pos+t>this.buffer.length)throw new Error("Output buffer is not large enough");return this.buffer.set(e.subarray(0,t),this.pos),this.pos+=t,t},e.BrotliOutput=A}}),require_bit_reader=__commonJS({"../../node_modules/.pnpm/brotli@1.3.3/node_modules/brotli/dec/bit_reader.js"(e,t){var A=4096,n=new Uint32Array([0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535,131071,262143,524287,1048575,2097151,4194303,8388607,16777215]);function l(e){this.buf_=new Uint8Array(8224),this.input_=e,this.reset()}l.READ_SIZE=A,l.IBUF_MASK=8191,l.prototype.reset=function(){this.buf_ptr_=0,this.val_=0,this.pos_=0,this.bit_pos_=0,this.bit_end_pos_=0,this.eos_=0,this.readMoreInput();for(var e=0;e<4;e++)this.val_|=this.buf_[this.pos_]<<8*e,++this.pos_;return this.bit_end_pos_>0},l.prototype.readMoreInput=function(){if(!(this.bit_end_pos_>256))if(this.eos_){if(this.bit_pos_>this.bit_end_pos_)throw new Error("Unexpected end of input "+this.bit_pos_+" "+this.bit_end_pos_)}else{var e=this.buf_ptr_,t=this.input_.read(this.buf_,e,A);if(t<0)throw new Error("Unexpected end of input");if(t<A){this.eos_=1;for(var n=0;n<32;n++)this.buf_[e+t+n]=0}if(0===e){for(n=0;n<32;n++)this.buf_[8192+n]=this.buf_[n];this.buf_ptr_=A}else this.buf_ptr_=0;this.bit_end_pos_+=t<<3}},l.prototype.fillBitWindow=function(){for(;this.bit_pos_>=8;)this.val_>>>=8,this.val_|=this.buf_[8191&this.pos_]<<24,++this.pos_,this.bit_pos_=this.bit_pos_-8>>>0,this.bit_end_pos_=this.bit_end_pos_-8>>>0},l.prototype.readBits=function(e){32-this.bit_pos_<e&&this.fillBitWindow();var t=this.val_>>>this.bit_pos_&n[e];return this.bit_pos_+=e,t},t.exports=l}}),require_dictionary_bin=__commonJS({"../../node_modules/.pnpm/brotli@1.3.3/node_modules/brotli/dec/dictionary.bin.js"(e,t){t.exports=""}}),require_dictionary_browser=__commonJS({"../../node_modules/.pnpm/brotli@1.3.3/node_modules/brotli/dec/dictionary-browser.js"(e){var t=require_base64_js();e.init=function(){return(0,require_decode().BrotliDecompressBuffer)(t.toByteArray(require_dictionary_bin()))}}}),require_dictionary=__commonJS({"../../node_modules/.pnpm/brotli@1.3.3/node_modules/brotli/dec/dictionary.js"(e){var t=require_dictionary_browser();e.init=function(){e.dictionary=t.init()},e.offsetsByLength=new Uint32Array([0,0,0,0,0,4096,9216,21504,35840,44032,53248,63488,74752,87040,93696,100864,104704,106752,108928,113536,115968,118528,119872,121280,122016]),e.sizeBitsByLength=new Uint8Array([0,0,0,0,10,10,11,11,10,10,10,10,10,9,9,8,7,7,8,7,7,6,6,5,5]),e.minDictionaryWordLength=4,e.maxDictionaryWordLength=24}}),require_huffman=__commonJS({"../../node_modules/.pnpm/brotli@1.3.3/node_modules/brotli/dec/huffman.js"(e){function t(e,t){this.bits=e,this.value=t}e.HuffmanCode=t;var A=15;function n(e,t){for(var A=1<<t-1;e&A;)A>>=1;return(e&A-1)+A}function l(e,A,n,l,r){do{e[A+(l-=n)]=new t(r.bits,r.value)}while(l>0)}function r(e,t,n){for(var l=1<<t-n;t<A&&!((l-=e[t])<=0);)++t,l<<=1;return t-n}e.BrotliBuildHuffmanTable=function(e,a,o,s,i){var u,c,h,f,g,d,p,B,E,m,b=a,y=new Int32Array(16),w=new Int32Array(16);for(m=new Int32Array(i),c=0;c<i;c++)y[s[c]]++;for(w[1]=0,u=1;u<A;u++)w[u+1]=w[u]+y[u];for(c=0;c<i;c++)0!==s[c]&&(m[w[s[c]]++]=c);if(E=B=1<<(p=o),1===w[15]){for(h=0;h<E;++h)e[a+h]=new t(0,65535&m[0]);return E}for(h=0,c=0,u=1,f=2;u<=o;++u,f<<=1)for(;y[u]>0;--y[u])l(e,a+h,f,B,new t(255&u,65535&m[c++])),h=n(h,u);for(d=E-1,g=-1,u=o+1,f=2;u<=A;++u,f<<=1)for(;y[u]>0;--y[u])(h&d)!==g&&(a+=B,E+=B=1<<(p=r(y,u,o)),e[b+(g=h&d)]=new t(p+o&255,a-b-g&65535)),l(e,a+(h>>o),f,B,new t(u-o&255,65535&m[c++])),h=n(h,u);return E}}}),require_context=__commonJS({"../../node_modules/.pnpm/brotli@1.3.3/node_modules/brotli/dec/context.js"(e){e.lookup=new Uint8Array([0,0,0,0,0,0,0,0,0,4,4,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,12,16,12,12,20,12,16,24,28,12,12,32,12,36,12,44,44,44,44,44,44,44,44,44,44,32,32,24,40,28,12,12,48,52,52,52,48,52,52,52,48,52,52,52,52,52,48,52,52,52,52,52,48,52,52,52,52,52,24,12,28,12,12,12,56,60,60,60,56,60,60,60,56,60,60,60,60,60,56,60,60,60,60,60,56,60,60,60,60,60,24,12,28,12,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,56,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,22,22,22,22,23,23,23,23,24,24,24,24,25,25,25,25,26,26,26,26,27,27,27,27,28,28,28,28,29,29,29,29,30,30,30,30,31,31,31,31,32,32,32,32,33,33,33,33,34,34,34,34,35,35,35,35,36,36,36,36,37,37,37,37,38,38,38,38,39,39,39,39,40,40,40,40,41,41,41,41,42,42,42,42,43,43,43,43,44,44,44,44,45,45,45,45,46,46,46,46,47,47,47,47,48,48,48,48,49,49,49,49,50,50,50,50,51,51,51,51,52,52,52,52,53,53,53,53,54,54,54,54,55,55,55,55,56,56,56,56,57,57,57,57,58,58,58,58,59,59,59,59,60,60,60,60,61,61,61,61,62,62,62,62,63,63,63,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),e.lookupOffsets=new Uint16Array([1024,1536,1280,1536,0,256,768,512])}}),require_prefix=__commonJS({"../../node_modules/.pnpm/brotli@1.3.3/node_modules/brotli/dec/prefix.js"(e){function t(e,t){this.offset=e,this.nbits=t}e.kBlockLengthPrefixCode=[new t(1,2),new t(5,2),new t(9,2),new t(13,2),new t(17,3),new t(25,3),new t(33,3),new t(41,3),new t(49,4),new t(65,4),new t(81,4),new t(97,4),new t(113,5),new t(145,5),new t(177,5),new t(209,5),new t(241,6),new t(305,6),new t(369,7),new t(497,8),new t(753,9),new t(1265,10),new t(2289,11),new t(4337,12),new t(8433,13),new t(16625,24)],e.kInsertLengthPrefixCode=[new t(0,0),new t(1,0),new t(2,0),new t(3,0),new t(4,0),new t(5,0),new t(6,1),new t(8,1),new t(10,2),new t(14,2),new t(18,3),new t(26,3),new t(34,4),new t(50,4),new t(66,5),new t(98,5),new t(130,6),new t(194,7),new t(322,8),new t(578,9),new t(1090,10),new t(2114,12),new t(6210,14),new t(22594,24)],e.kCopyLengthPrefixCode=[new t(2,0),new t(3,0),new t(4,0),new t(5,0),new t(6,0),new t(7,0),new t(8,0),new t(9,0),new t(10,1),new t(12,1),new t(14,2),new t(18,2),new t(22,3),new t(30,3),new t(38,4),new t(54,4),new t(70,5),new t(102,5),new t(134,6),new t(198,7),new t(326,8),new t(582,9),new t(1094,10),new t(2118,24)],e.kInsertRangeLut=[0,0,8,8,0,16,8,16,16],e.kCopyRangeLut=[0,8,0,8,16,0,16,8,16]}}),require_transform=__commonJS({"../../node_modules/.pnpm/brotli@1.3.3/node_modules/brotli/dec/transform.js"(e){var t=require_dictionary(),A=10,n=11;function l(e,t,A){this.prefix=new Uint8Array(e.length),this.transform=t,this.suffix=new Uint8Array(A.length);for(var n=0;n<e.length;n++)this.prefix[n]=e.charCodeAt(n);for(n=0;n<A.length;n++)this.suffix[n]=A.charCodeAt(n)}var r=[new l("",0,""),new l("",0," "),new l(" ",0," "),new l("",12,""),new l("",A," "),new l("",0," the "),new l(" ",0,""),new l("s ",0," "),new l("",0," of "),new l("",A,""),new l("",0," and "),new l("",13,""),new l("",1,""),new l(", ",0," "),new l("",0,", "),new l(" ",A," "),new l("",0," in "),new l("",0," to "),new l("e ",0," "),new l("",0,'"'),new l("",0,"."),new l("",0,'">'),new l("",0,"\n"),new l("",3,""),new l("",0,"]"),new l("",0," for "),new l("",14,""),new l("",2,""),new l("",0," a "),new l("",0," that "),new l(" ",A,""),new l("",0,". "),new l(".",0,""),new l(" ",0,", "),new l("",15,""),new l("",0," with "),new l("",0,"'"),new l("",0," from "),new l("",0," by "),new l("",16,""),new l("",17,""),new l(" the ",0,""),new l("",4,""),new l("",0,". The "),new l("",n,""),new l("",0," on "),new l("",0," as "),new l("",0," is "),new l("",7,""),new l("",1,"ing "),new l("",0,"\n\t"),new l("",0,":"),new l(" ",0,". "),new l("",0,"ed "),new l("",20,""),new l("",18,""),new l("",6,""),new l("",0,"("),new l("",A,", "),new l("",8,""),new l("",0," at "),new l("",0,"ly "),new l(" the ",0," of "),new l("",5,""),new l("",9,""),new l(" ",A,", "),new l("",A,'"'),new l(".",0,"("),new l("",n," "),new l("",A,'">'),new l("",0,'="'),new l(" ",0,"."),new l(".com/",0,""),new l(" the ",0," of the "),new l("",A,"'"),new l("",0,". This "),new l("",0,","),new l(".",0," "),new l("",A,"("),new l("",A,"."),new l("",0," not "),new l(" ",0,'="'),new l("",0,"er "),new l(" ",n," "),new l("",0,"al "),new l(" ",n,""),new l("",0,"='"),new l("",n,'"'),new l("",A,". "),new l(" ",0,"("),new l("",0,"ful "),new l(" ",A,". "),new l("",0,"ive "),new l("",0,"less "),new l("",n,"'"),new l("",0,"est "),new l(" ",A,"."),new l("",n,'">'),new l(" ",0,"='"),new l("",A,","),new l("",0,"ize "),new l("",n,"."),new l("Â ",0,""),new l(" ",0,","),new l("",A,'="'),new l("",n,'="'),new l("",0,"ous "),new l("",n,", "),new l("",A,"='"),new l(" ",A,","),new l(" ",n,'="'),new l(" ",n,", "),new l("",n,","),new l("",n,"("),new l("",n,". "),new l(" ",n,"."),new l("",n,"='"),new l(" ",n,". "),new l(" ",A,'="'),new l(" ",n,"='"),new l(" ",A,"='")];function a(e,t){return e[t]<192?(e[t]>=97&&e[t]<=122&&(e[t]^=32),1):e[t]<224?(e[t+1]^=32,2):(e[t+2]^=5,3)}e.kTransforms=r,e.kNumTransforms=r.length,e.transformDictionaryWord=function(e,l,o,s,i){var u,c=r[i].prefix,h=r[i].suffix,f=r[i].transform,g=f<12?0:f-11,d=0,p=l;g>s&&(g=s);for(var B=0;B<c.length;)e[l++]=c[B++];for(o+=g,s-=g,f<=9&&(s-=f),d=0;d<s;d++)e[l++]=t.dictionary[o+d];if(u=l-s,f===A)a(e,u);else if(f===n)for(;s>0;){var E=a(e,u);u+=E,s-=E}for(var m=0;m<h.length;)e[l++]=h[m++];return l-p}}}),require_decode=__commonJS({"../../node_modules/.pnpm/brotli@1.3.3/node_modules/brotli/dec/decode.js"(e){var t=require_streams().BrotliInput,A=require_streams().BrotliOutput,n=require_bit_reader(),l=require_dictionary(),r=require_huffman().HuffmanCode,a=require_huffman().BrotliBuildHuffmanTable,o=require_context(),s=require_prefix(),i=require_transform(),u=1080,c=new Uint8Array([1,2,3,4,0,5,17,6,16,7,8,9,10,11,12,13,14,15]),h=new Uint8Array([3,2,1,0,3,3,3,3,3,3,2,2,2,2,2,2]),f=new Int8Array([0,0,0,0,-1,1,-2,2,-3,3,-1,1,-2,2,-3,3]),g=new Uint16Array([256,402,436,468,500,534,566,598,630,662,694,726,758,790,822,854,886,920,952,984,1016,1048,1080]);function d(e){var t;return 0===e.readBits(1)?16:(t=e.readBits(3))>0?17+t:(t=e.readBits(3))>0?8+t:17}function p(e){if(e.readBits(1)){var t=e.readBits(3);return 0===t?1:e.readBits(t)+(1<<t)}return 0}function B(){this.meta_block_length=0,this.input_end=0,this.is_uncompressed=0,this.is_metadata=!1}function E(e){var t,A,n,l=new B;if(l.input_end=e.readBits(1),l.input_end&&e.readBits(1))return l;if(7===(t=e.readBits(2)+4)){if(l.is_metadata=!0,0!==e.readBits(1))throw new Error("Invalid reserved bit");if(0===(A=e.readBits(2)))return l;for(n=0;n<A;n++){var r=e.readBits(8);if(n+1===A&&A>1&&0===r)throw new Error("Invalid size byte");l.meta_block_length|=r<<8*n}}else for(n=0;n<t;++n){var a=e.readBits(4);if(n+1===t&&t>4&&0===a)throw new Error("Invalid size nibble");l.meta_block_length|=a<<4*n}return++l.meta_block_length,l.input_end||l.is_metadata||(l.is_uncompressed=e.readBits(1)),l}function m(e,t,A){var n;return A.fillBitWindow(),(n=e[t+=A.val_>>>A.bit_pos_&255].bits-8)>0&&(A.bit_pos_+=8,t+=e[t].value,t+=A.val_>>>A.bit_pos_&(1<<n)-1),A.bit_pos_+=e[t].bits,e[t].value}function b(e,t,A,n){var l,o,s=new Uint8Array(e);if(n.readMoreInput(),1===(o=n.readBits(2))){for(var i=e-1,u=0,h=new Int32Array(4),f=n.readBits(2)+1;i;)i>>=1,++u;for(g=0;g<f;++g)h[g]=n.readBits(u)%e,s[h[g]]=2;switch(s[h[0]]=1,f){case 1:break;case 3:if(h[0]===h[1]||h[0]===h[2]||h[1]===h[2])throw new Error("[ReadHuffmanCode] invalid symbols");break;case 2:if(h[0]===h[1])throw new Error("[ReadHuffmanCode] invalid symbols");s[h[1]]=1;break;case 4:if(h[0]===h[1]||h[0]===h[2]||h[0]===h[3]||h[1]===h[2]||h[1]===h[3]||h[2]===h[3])throw new Error("[ReadHuffmanCode] invalid symbols");n.readBits(1)?(s[h[2]]=3,s[h[3]]=3):s[h[0]]=2}}else{var g,d=new Uint8Array(18),p=32,B=0,E=[new r(2,0),new r(2,4),new r(2,3),new r(3,2),new r(2,0),new r(2,4),new r(2,3),new r(4,1),new r(2,0),new r(2,4),new r(2,3),new r(3,2),new r(2,0),new r(2,4),new r(2,3),new r(4,5)];for(g=o;g<18&&p>0;++g){var m,b=c[g],y=0;n.fillBitWindow(),y+=n.val_>>>n.bit_pos_&15,n.bit_pos_+=E[y].bits,m=E[y].value,d[b]=m,0!==m&&(p-=32>>m,++B)}if(1!==B&&0!==p)throw new Error("[ReadHuffmanCode] invalid num_codes or space");!function(e,t,A,n){for(var l=0,o=8,s=0,i=0,u=32768,c=[],h=0;h<32;h++)c.push(new r(0,0));for(a(c,0,5,e,18);l<t&&u>0;){var f,g=0;if(n.readMoreInput(),n.fillBitWindow(),g+=n.val_>>>n.bit_pos_&31,n.bit_pos_+=c[g].bits,(f=255&c[g].value)<16)s=0,A[l++]=f,0!==f&&(o=f,u-=32768>>f);else{var d,p,B=f-14,E=0;if(16===f&&(E=o),i!==E&&(s=0,i=E),d=s,s>0&&(s-=2,s<<=B),l+(p=(s+=n.readBits(B)+3)-d)>t)throw new Error("[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols");for(var m=0;m<p;m++)A[l+m]=i;l+=p,0!==i&&(u-=p<<15-i)}}if(0!==u)throw new Error("[ReadHuffmanCodeLengths] space = "+u);for(;l<t;l++)A[l]=0}(d,e,s,n)}if(0===(l=a(t,A,8,s,e)))throw new Error("[ReadHuffmanCode] BuildHuffmanTable failed: ");return l}function y(e,t,A){var n,l;return n=m(e,t,A),l=s.kBlockLengthPrefixCode[n].nbits,s.kBlockLengthPrefixCode[n].offset+A.readBits(l)}function w(e,t,A){var n;return e<16?(A+=h[e],n=t[A&=3]+f[e]):n=e-16+1,n}function Q(e,t){for(var A=e[t],n=t;n;--n)e[n]=e[n-1];e[0]=A}function C(e,t){this.alphabet_size=e,this.num_htrees=t,this.codes=new Array(t+t*g[e+31>>>5]),this.htrees=new Uint32Array(t)}function M(e,t){var A,n,l={num_htrees:null,context_map:null},a=0;t.readMoreInput();var o=l.num_htrees=p(t)+1,s=l.context_map=new Uint8Array(e);if(o<=1)return l;for(t.readBits(1)&&(a=t.readBits(4)+1),A=[],n=0;n<u;n++)A[n]=new r(0,0);for(b(o+a,A,0,t),n=0;n<e;){var i;if(t.readMoreInput(),0===(i=m(A,0,t)))s[n]=0,++n;else if(i<=a)for(var c=1+(1<<i)+t.readBits(i);--c;){if(n>=e)throw new Error("[DecodeContextMap] i >= context_map_size");s[n]=0,++n}else s[n]=i-a,++n}return t.readBits(1)&&function(e,t){var A,n=new Uint8Array(256);for(A=0;A<256;++A)n[A]=A;for(A=0;A<t;++A){var l=e[A];e[A]=n[l],l&&Q(n,l)}}(s,e),l}function I(e,t,A,n,l,r,a){var o,s=2*A,i=A,c=m(t,A*u,a);(o=0===c?l[s+(1&r[i])]:1===c?l[s+(r[i]-1&1)]+1:c-2)>=e&&(o-=e),n[A]=o,l[s+(1&r[i])]=o,++r[i]}function T(e,t,A,l,r,a){var o,s=r+1,i=A&r,u=a.pos_&n.IBUF_MASK;if(t<8||a.bit_pos_+(t<<3)<a.bit_end_pos_)for(;t-- >0;)a.readMoreInput(),l[i++]=a.readBits(8),i===s&&(e.write(l,s),i=0);else{if(a.bit_end_pos_<32)throw new Error("[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32");for(;a.bit_pos_<32;)l[i]=a.val_>>>a.bit_pos_,a.bit_pos_+=8,++i,--t;if(u+(o=a.bit_end_pos_-a.bit_pos_>>3)>n.IBUF_MASK){for(var c=n.IBUF_MASK+1-u,h=0;h<c;h++)l[i+h]=a.buf_[u+h];o-=c,i+=c,t-=c,u=0}for(h=0;h<o;h++)l[i+h]=a.buf_[u+h];if(t-=o,(i+=o)>=s){e.write(l,s),i-=s;for(h=0;h<i;h++)l[h]=l[s+h]}for(;i+t>=s;){if(o=s-i,a.input_.read(l,i,o)<o)throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");e.write(l,s),t-=o,i=0}if(a.input_.read(l,i,t)<t)throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");a.reset()}}function x(e){var t=e.bit_pos_+7&-8;return 0==e.readBits(t-e.bit_pos_)}function F(e){var A=new t(e),l=new n(A);return d(l),E(l).meta_block_length}function $(e,t){var A,a,c,h,f,g,B,Q,F,$,D=0,v=0,N=0,S=[16,15,11,4],U=0,R=0,Y=0,k=[new C(0,0),new C(0,0),new C(0,0)],_=128+n.READ_SIZE;c=(1<<(a=d($=new n(e))))-16,f=(h=1<<a)-1,g=new Uint8Array(h+_+l.maxDictionaryWordLength),B=h,Q=[],F=[];for(var L=0;L<3240;L++)Q[L]=new r(0,0),F[L]=new r(0,0);for(;!v;){var P,O,G,V,j,H,W,J,z,K,X,Z=0,q=[1<<28,1<<28,1<<28],ee=[0],te=[1,1,1],Ae=[0,1,0,1,0,1],ne=[0],le=null,re=null,ae=0,oe=null,se=0,ie=0,ue=0;for(A=0;A<3;++A)k[A].codes=null,k[A].htrees=null;$.readMoreInput();var ce=E($);if(D+(Z=ce.meta_block_length)>t.buffer.length){var he=new Uint8Array(D+Z);he.set(t.buffer),t.buffer=he}if(v=ce.input_end,P=ce.is_uncompressed,ce.is_metadata)for(x($);Z>0;--Z)$.readMoreInput(),$.readBits(8);else if(0!==Z)if(P)$.bit_pos_=$.bit_pos_+7&-8,T(t,Z,D,g,f,$),D+=Z;else{for(A=0;A<3;++A)te[A]=p($)+1,te[A]>=2&&(b(te[A]+2,Q,A*u,$),b(26,F,A*u,$),q[A]=y(F,A*u,$),ne[A]=1);for($.readMoreInput(),V=(1<<(O=$.readBits(2)))-1,j=(G=16+($.readBits(4)<<O))+(48<<O),le=new Uint8Array(te[0]),A=0;A<te[0];++A)$.readMoreInput(),le[A]=$.readBits(2)<<1;var fe=M(te[0]<<6,$);W=fe.num_htrees,H=fe.context_map;var ge=M(te[2]<<2,$);for(z=ge.num_htrees,J=ge.context_map,k[0]=new C(256,W),k[1]=new C(704,te[1]),k[2]=new C(j,z),A=0;A<3;++A)k[A].decode($);for(re=0,oe=0,K=le[ee[0]],ie=o.lookupOffsets[K],ue=o.lookupOffsets[K+1],X=k[1].htrees[0];Z>0;){var de,pe,Be,Ee,me,be,ye,we,Qe,Ce,Me,Ie;for($.readMoreInput(),0===q[1]&&(I(te[1],Q,1,ee,Ae,ne,$),q[1]=y(F,u,$),X=k[1].htrees[ee[1]]),--q[1],(pe=(de=m(k[1].codes,X,$))>>6)>=2?(pe-=2,ye=-1):ye=0,Be=s.kInsertRangeLut[pe]+(de>>3&7),Ee=s.kCopyRangeLut[pe]+(7&de),me=s.kInsertLengthPrefixCode[Be].offset+$.readBits(s.kInsertLengthPrefixCode[Be].nbits),be=s.kCopyLengthPrefixCode[Ee].offset+$.readBits(s.kCopyLengthPrefixCode[Ee].nbits),R=g[D-1&f],Y=g[D-2&f],Qe=0;Qe<me;++Qe)$.readMoreInput(),0===q[0]&&(I(te[0],Q,0,ee,Ae,ne,$),q[0]=y(F,0,$),re=ee[0]<<6,K=le[ee[0]],ie=o.lookupOffsets[K],ue=o.lookupOffsets[K+1]),ae=H[re+(o.lookup[ie+R]|o.lookup[ue+Y])],--q[0],Y=R,R=m(k[0].codes,k[0].htrees[ae],$),g[D&f]=R,(D&f)===f&&t.write(g,h),++D;if((Z-=me)<=0)break;if(ye<0)if($.readMoreInput(),0===q[2]&&(I(te[2],Q,2,ee,Ae,ne,$),q[2]=y(F,2160,$),oe=ee[2]<<2),--q[2],se=J[oe+(255&(be>4?3:be-2))],(ye=m(k[2].codes,k[2].htrees[se],$))>=G)Ie=(ye-=G)&V,ye=G+((Te=(2+(1&(ye>>=O))<<(Me=1+(ye>>1)))-4)+$.readBits(Me)<<O)+Ie;if((we=w(ye,S,U))<0)throw new Error("[BrotliDecompress] invalid distance");if(Ce=D&f,we>(N=D<c&&N!==c?D:c)){if(!(be>=l.minDictionaryWordLength&&be<=l.maxDictionaryWordLength))throw new Error("Invalid backward reference. pos: "+D+" distance: "+we+" len: "+be+" bytes left: "+Z);var Te=l.offsetsByLength[be],xe=we-N-1,Fe=l.sizeBitsByLength[be],$e=xe>>Fe;if(Te+=(xe&(1<<Fe)-1)*be,!($e<i.kNumTransforms))throw new Error("Invalid backward reference. pos: "+D+" distance: "+we+" len: "+be+" bytes left: "+Z);var De=i.transformDictionaryWord(g,Ce,Te,be,$e);if(D+=De,Z-=De,(Ce+=De)>=B){t.write(g,h);for(var ve=0;ve<Ce-B;ve++)g[ve]=g[B+ve]}}else{if(ye>0&&(S[3&U]=we,++U),be>Z)throw new Error("Invalid backward reference. pos: "+D+" distance: "+we+" len: "+be+" bytes left: "+Z);for(Qe=0;Qe<be;++Qe)g[D&f]=g[D-we&f],(D&f)===f&&t.write(g,h),++D,--Z}R=g[D-1&f],Y=g[D-2&f]}D&=1073741823}}t.write(g,D&f)}C.prototype.decode=function(e){var t,A=0;for(t=0;t<this.num_htrees;++t)this.htrees[t]=A,A+=b(this.alphabet_size,this.codes,A,e)},e.BrotliDecompressedSize=F,e.BrotliDecompressBuffer=function(e,n){var l=new t(e);null==n&&(n=F(e));var r=new Uint8Array(n),a=new A(r);return $(l,a),a.pos<a.buffer.length&&(a.buffer=a.buffer.subarray(0,a.pos)),a.buffer},e.BrotliDecompress=$,l.init()}}),require_decompress=__commonJS({"../../node_modules/.pnpm/brotli@1.3.3/node_modules/brotli/decompress.js"(e,t){t.exports=require_decode().BrotliDecompressBuffer}}),logger={debug:(...e)=>{},info:(...e)=>{},warn:(...e)=>{},error:(...e)=>{},fatal:(...e)=>{}},WILDCARD="*",EventEmitter=function(){function e(){this._events={}}return e.prototype.on=function(e,t,A){return this._events[e]||(this._events[e]=[]),this._events[e].push({callback:t,once:!!A}),this},e.prototype.once=function(e,t){return this.on(e,t,!0)},e.prototype.emit=function(e){for(var t=this,A=[],n=1;n<arguments.length;n++)A[n-1]=arguments[n];var l=this._events[e]||[],r=this._events[WILDCARD]||[],a=function(n){for(var l=n.length,r=0;r<l;r++)if(n[r]){var a=n[r],o=a.callback;a.once&&(n.splice(r,1),0===n.length&&delete t._events[e],l--,r--),o.apply(t,A)}};a(l),a(r)},e.prototype.off=function(e,t){if(e)if(t){for(var A=this._events[e]||[],n=A.length,l=0;l<n;l++)A[l].callback===t&&(A.splice(l,1),n--,l--);0===A.length&&delete this._events[e]}else delete this._events[e];else this._events={};return this},e.prototype.getEvents=function(){return this._events},e}(),esm_default=EventEmitter,DiagramEventManager=class{constructor(){this.recognizers=[],this.emitter=new esm_default}addRecognizer(e){return this.recognizers.includes(e)||this.recognizers.push(e),()=>{const t=this.recognizers.indexOf(e);t>-1&&this.recognizers.splice(t,1)}}recognizeGraphicEvent(e,t){const A=[];for(const n of this.recognizers){const l=n.recognize(e,t);l&&A.push(l)}return A}feedGraphicEvent(e,t){const A=this.recognizeGraphicEvent(e,t);for(const e of A)this.emitter.emit(e.type,e);return A}wireCurrentEventsToRenderer(e,t){for(const[A,n]of Object.entries(this.emitter.getEvents()))for(const l of n){const n=l.callback;this.wireDiagramEventToRenderer(e,A,n,t)}}wireDiagramEventToRenderer(e,t,A,n){return e.on(t,(e=>{const t=diagramEventManager.feedGraphicEvent(e,n);for(const e of t)A(e)}))}on(e,t){const{emitter:A}=this;return A.on(e,t),function(){A.off(e,t)}}once(e,t){const{emitter:A}=this;return A.once(e,t),function(){A.off(e,t)}}removeListeners(e){this.emitter.off(e)}matchEventItem(e,t,A){return e.diagram===t&&e.type===A}},diagramEventManager=new DiagramEventManager,DiagramEvent=class{constructor(e,t,A){this.graphicEvent=e,this.mark=t,this.item=A}get type(){return this.graphicEvent.type}};function diagramEventMakerFactory(e){return(t,A,n,l,r)=>new DiagramEvent(t,A,{diagram:e,type:l,id:n,data:r})}var DiagramRegistry=class{constructor(){this.diagrams={}}registerDiagram(e,t){this.diagrams[e]?logger.warn(`[pintora]duplicate diagram:${e}`):t.eventRecognizer&&diagramEventManager.addRecognizer(t.eventRecognizer),this.diagrams[e]=t}detectDiagram(e){let t=this.diagrams.sequenceDiagram;for(const A of Object.values(this.diagrams))if(A.pattern.test(e)){t=A;break}return t}getDiagram(e){return this.diagrams[e]}},diagramRegistry=new DiagramRegistry,import_deepmerge=__toESM(require_cjs()),import_clone_deep=__toESM(require_clone_deep()),AYU_LIGHT={white:"#fff",lightDark:"#5E666D",normalDark:"#3b4044",neutralGray:"#f8f8f2",cyan:"#55b4d4",green:"#9c0",orange:"#fdb05e",pink:"#f07171",purple:"#af71d0",red:"#e45649",yellow:"#f5f1be"},DRACULA={white:"#f8f8f2",normalDark:"#282a36",cyan:"#8be9fd",green:"#50fa7b",orange:"#ffb86c",pink:"#ff79c6",purple:"#AD78F7",purpleDark:"#9a58f5",red:"#ff5555",yellow:"#f1fa8c"},BLUE_LARK={white:"#EDF4FF",normalDark:"#272827",cyan:"#A6D8F1",green:"#03B59C",blue:"#4492FD",darkBlue:"#143C9A",brightBlue:"#8BBBFD",orange:"#ffb86c",pink:"#F9DBD8",purple:"#AFBCF1",red:"#FD514D",yellow:"#FEF4D7"},NOTE_BACKGROUND="#F8EA75",ThemeDefault=class{constructor(){this.schemeOppsiteTheme="dark",this.primaryColor=AYU_LIGHT.orange,this.secondaryColor=AYU_LIGHT.yellow,this.teritaryColor=AYU_LIGHT.purple,this.primaryLineColor=AYU_LIGHT.normalDark,this.secondaryLineColor=AYU_LIGHT.normalDark,this.textColor=AYU_LIGHT.normalDark,this.primaryTextColor=AYU_LIGHT.normalDark,this.secondaryTextColor=AYU_LIGHT.normalDark,this.teritaryTextColor=AYU_LIGHT.normalDark,this.primaryBorderColor=AYU_LIGHT.normalDark,this.secondaryBorderColor=AYU_LIGHT.neutralGray,this.canvasBackground=AYU_LIGHT.white,this.groupBackground=AYU_LIGHT.white,this.background1=AYU_LIGHT.neutralGray,this.noteBackground=NOTE_BACKGROUND}},ThemeDark=class{constructor(){this.isDark=!0,this.schemeOppsiteTheme="default",this.primaryColor=DRACULA.purpleDark,this.secondaryColor=DRACULA.pink,this.teritaryColor=DRACULA.cyan,this.primaryLineColor=DRACULA.white,this.secondaryLineColor=DRACULA.white,this.textColor=DRACULA.white,this.primaryTextColor=DRACULA.normalDark,this.secondaryTextColor=DRACULA.white,this.teritaryTextColor=DRACULA.normalDark,this.primaryBorderColor=DRACULA.white,this.secondaryBorderColor=DRACULA.normalDark,this.canvasBackground=DRACULA.normalDark,this.groupBackground=DRACULA.normalDark,this.background1="#555",this.noteTextColor=DRACULA.normalDark,this.noteBackground=NOTE_BACKGROUND}},ThemeLarkLight=class{constructor(){this.schemeOppsiteTheme="larkDark",this.primaryColor=BLUE_LARK.brightBlue,this.secondaryColor=BLUE_LARK.cyan,this.teritaryColor=BLUE_LARK.cyan,this.primaryLineColor=BLUE_LARK.green,this.secondaryLineColor=BLUE_LARK.white,this.textColor=BLUE_LARK.normalDark,this.primaryTextColor=BLUE_LARK.normalDark,this.secondaryTextColor=BLUE_LARK.normalDark,this.teritaryTextColor=BLUE_LARK.normalDark,this.primaryBorderColor=BLUE_LARK.blue,this.secondaryBorderColor=BLUE_LARK.normalDark,this.canvasBackground=BLUE_LARK.white,this.groupBackground=BLUE_LARK.white,this.background1=BLUE_LARK.white,this.noteTextColor=BLUE_LARK.normalDark,this.noteBackground=NOTE_BACKGROUND}},ThemeLarkDark=class{constructor(){this.isDark=!0,this.schemeOppsiteTheme="larkLight",this.primaryColor=BLUE_LARK.blue,this.secondaryColor=BLUE_LARK.blue,this.teritaryColor=BLUE_LARK.darkBlue,this.primaryLineColor=BLUE_LARK.green,this.secondaryLineColor=BLUE_LARK.white,this.textColor=BLUE_LARK.white,this.primaryTextColor=BLUE_LARK.white,this.secondaryTextColor=BLUE_LARK.white,this.teritaryTextColor=BLUE_LARK.white,this.primaryBorderColor=BLUE_LARK.blue,this.secondaryBorderColor=BLUE_LARK.normalDark,this.canvasBackground=BLUE_LARK.normalDark,this.groupBackground=BLUE_LARK.normalDark,this.background1=BLUE_LARK.normalDark,this.noteTextColor=BLUE_LARK.normalDark,this.noteBackground=NOTE_BACKGROUND}},ThemeRegistry=class{constructor(){this.themes={default:new ThemeDefault,dark:new ThemeDark,larkLight:new ThemeLarkLight,larkDark:new ThemeLarkDark},this.palettes={AYU_LIGHT:AYU_LIGHT,DRACULA:DRACULA}}registerTheme(e,t){this.themes[e]&&console.warn(`[pintora]override theme ${e}`),this.themes[e]=t}},themeRegistry=new ThemeRegistry,DEFAULT_FONT_FAMILY="Source Code Pro, sans-serif",config={core:{defaultRenderer:"svg",defaultFontFamily:DEFAULT_FONT_FAMILY,useMaxWidth:!1},themeConfig:{theme:"default",darkTheme:"dark",themeVariables:themeRegistry.themes.default}},overwriteArrayMerge=(e,t)=>t,configApi={getConfig:()=>config,setConfig(e){const t=configApi.gnernateNewConfig(e);config=t},cloneConfig:()=>(0,import_clone_deep.default)(config),replaceConfig(e){config=e},gnernateNewConfig(e){var t;const A=(0,import_deepmerge.default)(config,e,{arrayMerge:overwriteArrayMerge});if(null===(t=e.themeConfig)||void 0===t?void 0:t.theme){const t=e.themeConfig.theme,n=themeRegistry.themes[t],l=e.themeConfig.themeVariables;n&&(A.themeConfig=A.themeConfig||{},A.themeConfig.themeVariables={...n}),l&&A.themeConfig.themeVariables&&Object.assign(A.themeConfig.themeVariables,l)}return A}},config_default=configApi;function safeAssign(e,...t){return Object.assign(e||{},...t)}function pick(e,t){const A={};return t.forEach((t=>A[t]=e[t])),A}function compact(e){return e.filter((e=>Boolean(e)))}function unique(e){const t=new Map,A=[];return e.forEach((e=>{t.has(e)||(t.set(e,e),A.push(e))})),A}var CHARACTERS="0123456789abcdef";function makeid(e){let t="";const A=CHARACTERS.length;for(let n=0;n<e;n++)t+=CHARACTERS.charAt(Math.floor(Math.random()*A));return t}function makeIdCounter(e=0){let t=e;return{reset(){t=e},next:()=>(t++,t.toString())}}function last(e){if(e&&e.length)return e[e.length-1]}function min(e,t){return Math.min(...e.map(t))}function max(e,t){return Math.max(...e.map(t))}function removeValues(e,t=[void 0,null]){for(const[A,n]of Object.entries(e))t.includes(n)&&delete e[A];return e}var EPSILON=1e-6,ARRAY_TYPE="undefined"!=typeof Float32Array?Float32Array:Array,RANDOM=Math.random,degree=Math.PI/180;Math.hypot||(Math.hypot=function(){for(var e=0,t=arguments.length;t--;)e+=arguments[t]*arguments[t];return Math.sqrt(e)});var mat3_exports={};function create(){var e=new ARRAY_TYPE(9);return ARRAY_TYPE!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[5]=0,e[6]=0,e[7]=0),e[0]=1,e[4]=1,e[8]=1,e}function fromMat4(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[4],e[4]=t[5],e[5]=t[6],e[6]=t[8],e[7]=t[9],e[8]=t[10],e}function clone(e){var t=new ARRAY_TYPE(9);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t}function copy(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e}function fromValues(e,t,A,n,l,r,a,o,s){var i=new ARRAY_TYPE(9);return i[0]=e,i[1]=t,i[2]=A,i[3]=n,i[4]=l,i[5]=r,i[6]=a,i[7]=o,i[8]=s,i}function set(e,t,A,n,l,r,a,o,s,i){return e[0]=t,e[1]=A,e[2]=n,e[3]=l,e[4]=r,e[5]=a,e[6]=o,e[7]=s,e[8]=i,e}function identity(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1,e}function transpose(e,t){if(e===t){var A=t[1],n=t[2],l=t[5];e[1]=t[3],e[2]=t[6],e[3]=A,e[5]=t[7],e[6]=n,e[7]=l}else e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8];return e}function invert(e,t){var A=t[0],n=t[1],l=t[2],r=t[3],a=t[4],o=t[5],s=t[6],i=t[7],u=t[8],c=u*a-o*i,h=-u*r+o*s,f=i*r-a*s,g=A*c+n*h+l*f;return g?(g=1/g,e[0]=c*g,e[1]=(-u*n+l*i)*g,e[2]=(o*n-l*a)*g,e[3]=h*g,e[4]=(u*A-l*s)*g,e[5]=(-o*A+l*r)*g,e[6]=f*g,e[7]=(-i*A+n*s)*g,e[8]=(a*A-n*r)*g,e):null}function adjoint(e,t){var A=t[0],n=t[1],l=t[2],r=t[3],a=t[4],o=t[5],s=t[6],i=t[7],u=t[8];return e[0]=a*u-o*i,e[1]=l*i-n*u,e[2]=n*o-l*a,e[3]=o*s-r*u,e[4]=A*u-l*s,e[5]=l*r-A*o,e[6]=r*i-a*s,e[7]=n*s-A*i,e[8]=A*a-n*r,e}function determinant(e){var t=e[0],A=e[1],n=e[2],l=e[3],r=e[4],a=e[5],o=e[6],s=e[7],i=e[8];return t*(i*r-a*s)+A*(-i*l+a*o)+n*(s*l-r*o)}function multiply(e,t,A){var n=t[0],l=t[1],r=t[2],a=t[3],o=t[4],s=t[5],i=t[6],u=t[7],c=t[8],h=A[0],f=A[1],g=A[2],d=A[3],p=A[4],B=A[5],E=A[6],m=A[7],b=A[8];return e[0]=h*n+f*a+g*i,e[1]=h*l+f*o+g*u,e[2]=h*r+f*s+g*c,e[3]=d*n+p*a+B*i,e[4]=d*l+p*o+B*u,e[5]=d*r+p*s+B*c,e[6]=E*n+m*a+b*i,e[7]=E*l+m*o+b*u,e[8]=E*r+m*s+b*c,e}function translate(e,t,A){var n=t[0],l=t[1],r=t[2],a=t[3],o=t[4],s=t[5],i=t[6],u=t[7],c=t[8],h=A[0],f=A[1];return e[0]=n,e[1]=l,e[2]=r,e[3]=a,e[4]=o,e[5]=s,e[6]=h*n+f*a+i,e[7]=h*l+f*o+u,e[8]=h*r+f*s+c,e}function rotate(e,t,A){var n=t[0],l=t[1],r=t[2],a=t[3],o=t[4],s=t[5],i=t[6],u=t[7],c=t[8],h=Math.sin(A),f=Math.cos(A);return e[0]=f*n+h*a,e[1]=f*l+h*o,e[2]=f*r+h*s,e[3]=f*a-h*n,e[4]=f*o-h*l,e[5]=f*s-h*r,e[6]=i,e[7]=u,e[8]=c,e}function scale(e,t,A){var n=A[0],l=A[1];return e[0]=n*t[0],e[1]=n*t[1],e[2]=n*t[2],e[3]=l*t[3],e[4]=l*t[4],e[5]=l*t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e}function fromTranslation(e,t){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=t[0],e[7]=t[1],e[8]=1,e}function fromRotation(e,t){var A=Math.sin(t),n=Math.cos(t);return e[0]=n,e[1]=A,e[2]=0,e[3]=-A,e[4]=n,e[5]=0,e[6]=0,e[7]=0,e[8]=1,e}function fromScaling(e,t){return e[0]=t[0],e[1]=0,e[2]=0,e[3]=0,e[4]=t[1],e[5]=0,e[6]=0,e[7]=0,e[8]=1,e}function fromMat2d(e,t){return e[0]=t[0],e[1]=t[1],e[2]=0,e[3]=t[2],e[4]=t[3],e[5]=0,e[6]=t[4],e[7]=t[5],e[8]=1,e}function fromQuat(e,t){var A=t[0],n=t[1],l=t[2],r=t[3],a=A+A,o=n+n,s=l+l,i=A*a,u=n*a,c=n*o,h=l*a,f=l*o,g=l*s,d=r*a,p=r*o,B=r*s;return e[0]=1-c-g,e[3]=u-B,e[6]=h+p,e[1]=u+B,e[4]=1-i-g,e[7]=f-d,e[2]=h-p,e[5]=f+d,e[8]=1-i-c,e}function normalFromMat4(e,t){var A=t[0],n=t[1],l=t[2],r=t[3],a=t[4],o=t[5],s=t[6],i=t[7],u=t[8],c=t[9],h=t[10],f=t[11],g=t[12],d=t[13],p=t[14],B=t[15],E=A*o-n*a,m=A*s-l*a,b=A*i-r*a,y=n*s-l*o,w=n*i-r*o,Q=l*i-r*s,C=u*d-c*g,M=u*p-h*g,I=u*B-f*g,T=c*p-h*d,x=c*B-f*d,F=h*B-f*p,$=E*F-m*x+b*T+y*I-w*M+Q*C;return $?($=1/$,e[0]=(o*F-s*x+i*T)*$,e[1]=(s*I-a*F-i*M)*$,e[2]=(a*x-o*I+i*C)*$,e[3]=(l*x-n*F-r*T)*$,e[4]=(A*F-l*I+r*M)*$,e[5]=(n*I-A*x-r*C)*$,e[6]=(d*Q-p*w+B*y)*$,e[7]=(p*b-g*Q-B*m)*$,e[8]=(g*w-d*b+B*E)*$,e):null}function projection(e,t,A){return e[0]=2/t,e[1]=0,e[2]=0,e[3]=0,e[4]=-2/A,e[5]=0,e[6]=-1,e[7]=1,e[8]=1,e}function str(e){return"mat3("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+", "+e[4]+", "+e[5]+", "+e[6]+", "+e[7]+", "+e[8]+")"}function frob(e){return Math.hypot(e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8])}function add(e,t,A){return e[0]=t[0]+A[0],e[1]=t[1]+A[1],e[2]=t[2]+A[2],e[3]=t[3]+A[3],e[4]=t[4]+A[4],e[5]=t[5]+A[5],e[6]=t[6]+A[6],e[7]=t[7]+A[7],e[8]=t[8]+A[8],e}function subtract(e,t,A){return e[0]=t[0]-A[0],e[1]=t[1]-A[1],e[2]=t[2]-A[2],e[3]=t[3]-A[3],e[4]=t[4]-A[4],e[5]=t[5]-A[5],e[6]=t[6]-A[6],e[7]=t[7]-A[7],e[8]=t[8]-A[8],e}function multiplyScalar(e,t,A){return e[0]=t[0]*A,e[1]=t[1]*A,e[2]=t[2]*A,e[3]=t[3]*A,e[4]=t[4]*A,e[5]=t[5]*A,e[6]=t[6]*A,e[7]=t[7]*A,e[8]=t[8]*A,e}function multiplyScalarAndAdd(e,t,A,n){return e[0]=t[0]+A[0]*n,e[1]=t[1]+A[1]*n,e[2]=t[2]+A[2]*n,e[3]=t[3]+A[3]*n,e[4]=t[4]+A[4]*n,e[5]=t[5]+A[5]*n,e[6]=t[6]+A[6]*n,e[7]=t[7]+A[7]*n,e[8]=t[8]+A[8]*n,e}function exactEquals(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]&&e[4]===t[4]&&e[5]===t[5]&&e[6]===t[6]&&e[7]===t[7]&&e[8]===t[8]}function equals(e,t){var A=e[0],n=e[1],l=e[2],r=e[3],a=e[4],o=e[5],s=e[6],i=e[7],u=e[8],c=t[0],h=t[1],f=t[2],g=t[3],d=t[4],p=t[5],B=t[6],E=t[7],m=t[8];return Math.abs(A-c)<=EPSILON*Math.max(1,Math.abs(A),Math.abs(c))&&Math.abs(n-h)<=EPSILON*Math.max(1,Math.abs(n),Math.abs(h))&&Math.abs(l-f)<=EPSILON*Math.max(1,Math.abs(l),Math.abs(f))&&Math.abs(r-g)<=EPSILON*Math.max(1,Math.abs(r),Math.abs(g))&&Math.abs(a-d)<=EPSILON*Math.max(1,Math.abs(a),Math.abs(d))&&Math.abs(o-p)<=EPSILON*Math.max(1,Math.abs(o),Math.abs(p))&&Math.abs(s-B)<=EPSILON*Math.max(1,Math.abs(s),Math.abs(B))&&Math.abs(i-E)<=EPSILON*Math.max(1,Math.abs(i),Math.abs(E))&&Math.abs(u-m)<=EPSILON*Math.max(1,Math.abs(u),Math.abs(m))}__export(mat3_exports,{add:()=>add,adjoint:()=>adjoint,clone:()=>clone,copy:()=>copy,create:()=>create,determinant:()=>determinant,equals:()=>equals,exactEquals:()=>exactEquals,frob:()=>frob,fromMat2d:()=>fromMat2d,fromMat4:()=>fromMat4,fromQuat:()=>fromQuat,fromRotation:()=>fromRotation,fromScaling:()=>fromScaling,fromTranslation:()=>fromTranslation,fromValues:()=>fromValues,identity:()=>identity,invert:()=>invert,mul:()=>mul,multiply:()=>multiply,multiplyScalar:()=>multiplyScalar,multiplyScalarAndAdd:()=>multiplyScalarAndAdd,normalFromMat4:()=>normalFromMat4,projection:()=>projection,rotate:()=>rotate,scale:()=>scale,set:()=>set,str:()=>str,sub:()=>sub,subtract:()=>subtract,translate:()=>translate,transpose:()=>transpose});var mul=multiply,sub=subtract,vec2_exports={};function create2(){var e=new ARRAY_TYPE(2);return ARRAY_TYPE!=Float32Array&&(e[0]=0,e[1]=0),e}function clone2(e){var t=new ARRAY_TYPE(2);return t[0]=e[0],t[1]=e[1],t}function fromValues2(e,t){var A=new ARRAY_TYPE(2);return A[0]=e,A[1]=t,A}function copy2(e,t){return e[0]=t[0],e[1]=t[1],e}function set2(e,t,A){return e[0]=t,e[1]=A,e}function add2(e,t,A){return e[0]=t[0]+A[0],e[1]=t[1]+A[1],e}function subtract2(e,t,A){return e[0]=t[0]-A[0],e[1]=t[1]-A[1],e}function multiply2(e,t,A){return e[0]=t[0]*A[0],e[1]=t[1]*A[1],e}function divide(e,t,A){return e[0]=t[0]/A[0],e[1]=t[1]/A[1],e}function ceil(e,t){return e[0]=Math.ceil(t[0]),e[1]=Math.ceil(t[1]),e}function floor(e,t){return e[0]=Math.floor(t[0]),e[1]=Math.floor(t[1]),e}function min2(e,t,A){return e[0]=Math.min(t[0],A[0]),e[1]=Math.min(t[1],A[1]),e}function max2(e,t,A){return e[0]=Math.max(t[0],A[0]),e[1]=Math.max(t[1],A[1]),e}function round(e,t){return e[0]=Math.round(t[0]),e[1]=Math.round(t[1]),e}function scale2(e,t,A){return e[0]=t[0]*A,e[1]=t[1]*A,e}function scaleAndAdd(e,t,A,n){return e[0]=t[0]+A[0]*n,e[1]=t[1]+A[1]*n,e}function distance(e,t){var A=t[0]-e[0],n=t[1]-e[1];return Math.hypot(A,n)}function squaredDistance(e,t){var A=t[0]-e[0],n=t[1]-e[1];return A*A+n*n}function length(e){var t=e[0],A=e[1];return Math.hypot(t,A)}function squaredLength(e){var t=e[0],A=e[1];return t*t+A*A}function negate(e,t){return e[0]=-t[0],e[1]=-t[1],e}function inverse(e,t){return e[0]=1/t[0],e[1]=1/t[1],e}function normalize(e,t){var A=t[0],n=t[1],l=A*A+n*n;return l>0&&(l=1/Math.sqrt(l)),e[0]=t[0]*l,e[1]=t[1]*l,e}function dot(e,t){return e[0]*t[0]+e[1]*t[1]}function cross(e,t,A){var n=t[0]*A[1]-t[1]*A[0];return e[0]=e[1]=0,e[2]=n,e}function lerp(e,t,A,n){var l=t[0],r=t[1];return e[0]=l+n*(A[0]-l),e[1]=r+n*(A[1]-r),e}function random(e,t){t=t||1;var A=2*RANDOM()*Math.PI;return e[0]=Math.cos(A)*t,e[1]=Math.sin(A)*t,e}function transformMat2(e,t,A){var n=t[0],l=t[1];return e[0]=A[0]*n+A[2]*l,e[1]=A[1]*n+A[3]*l,e}function transformMat2d(e,t,A){var n=t[0],l=t[1];return e[0]=A[0]*n+A[2]*l+A[4],e[1]=A[1]*n+A[3]*l+A[5],e}function transformMat3(e,t,A){var n=t[0],l=t[1];return e[0]=A[0]*n+A[3]*l+A[6],e[1]=A[1]*n+A[4]*l+A[7],e}function transformMat4(e,t,A){var n=t[0],l=t[1];return e[0]=A[0]*n+A[4]*l+A[12],e[1]=A[1]*n+A[5]*l+A[13],e}function rotate2(e,t,A,n){var l=t[0]-A[0],r=t[1]-A[1],a=Math.sin(n),o=Math.cos(n);return e[0]=l*o-r*a+A[0],e[1]=l*a+r*o+A[1],e}function angle(e,t){var A=e[0],n=e[1],l=t[0],r=t[1],a=Math.sqrt(A*A+n*n)*Math.sqrt(l*l+r*r),o=a&&(A*l+n*r)/a;return Math.acos(Math.min(Math.max(o,-1),1))}function zero(e){return e[0]=0,e[1]=0,e}function str2(e){return"vec2("+e[0]+", "+e[1]+")"}function exactEquals2(e,t){return e[0]===t[0]&&e[1]===t[1]}function equals2(e,t){var A=e[0],n=e[1],l=t[0],r=t[1];return Math.abs(A-l)<=EPSILON*Math.max(1,Math.abs(A),Math.abs(l))&&Math.abs(n-r)<=EPSILON*Math.max(1,Math.abs(n),Math.abs(r))}__export(vec2_exports,{add:()=>add2,angle:()=>angle,ceil:()=>ceil,clone:()=>clone2,copy:()=>copy2,create:()=>create2,cross:()=>cross,dist:()=>dist,distance:()=>distance,div:()=>div,divide:()=>divide,dot:()=>dot,equals:()=>equals2,exactEquals:()=>exactEquals2,floor:()=>floor,forEach:()=>forEach,fromValues:()=>fromValues2,inverse:()=>inverse,len:()=>len,length:()=>length,lerp:()=>lerp,max:()=>max2,min:()=>min2,mul:()=>mul2,multiply:()=>multiply2,negate:()=>negate,normalize:()=>normalize,random:()=>random,rotate:()=>rotate2,round:()=>round,scale:()=>scale2,scaleAndAdd:()=>scaleAndAdd,set:()=>set2,sqrDist:()=>sqrDist,sqrLen:()=>sqrLen,squaredDistance:()=>squaredDistance,squaredLength:()=>squaredLength,str:()=>str2,sub:()=>sub2,subtract:()=>subtract2,transformMat2:()=>transformMat2,transformMat2d:()=>transformMat2d,transformMat3:()=>transformMat3,transformMat4:()=>transformMat4,zero:()=>zero});var len=length,sub2=subtract2,mul2=multiply2,div=divide,dist=distance,sqrDist=squaredDistance,sqrLen=squaredLength,forEach=function(){var e=create2();return function(t,A,n,l,r,a){var o,s;for(A||(A=2),n||(n=0),s=l?Math.min(l*A+n,t.length):t.length,o=n;o<s;o+=A)e[0]=t[o],e[1]=t[o+1],r(e,e,a),t[o]=e[0],t[o+1]=e[1];return t}}(),ext_exports={};function leftTranslate(e,t,A){var n=[0,0,0,0,0,0,0,0,0];return mat3_exports.fromTranslation(n,A),mat3_exports.multiply(e,n,t)}function leftRotate(e,t,A){var n=[0,0,0,0,0,0,0,0,0];return mat3_exports.fromRotation(n,A),mat3_exports.multiply(e,n,t)}function leftScale(e,t,A){var n=[0,0,0,0,0,0,0,0,0];return mat3_exports.fromScaling(n,A),mat3_exports.multiply(e,n,t)}function leftMultiply(e,t,A){return mat3_exports.multiply(e,A,t)}function transform(e,t){for(var A=e?[].concat(e):[1,0,0,0,1,0,0,0,1],n=0,l=t.length;n<l;n++){var r=t[n];switch(r[0]){case"t":leftTranslate(A,A,[r[1],r[2]]);break;case"s":leftScale(A,A,[r[1],r[2]]);break;case"r":leftRotate(A,A,r[1]);break;case"m":leftMultiply(A,A,r[1])}}return A}function direction(e,t){return e[0]*t[1]-t[0]*e[1]}function angleTo(e,t,A){var n=vec2_exports.angle(e,t),l=direction(e,t)>=0;return A?l?2*Math.PI-n:n:l?n:2*Math.PI-n}function vertical(e,t,A){return A?(e[0]=t[1],e[1]=-1*t[0]):(e[0]=-1*t[1],e[1]=t[0]),e}function createTranslation(e,t=0){return mat3_exports.fromTranslation(mat3_exports.create(),[e,t])}__export(ext_exports,{angleTo:()=>angleTo,direction:()=>direction,leftRotate:()=>leftRotate,leftScale:()=>leftScale,leftTranslate:()=>leftTranslate,transform:()=>transform,vertical:()=>vertical});var transform2=ext_exports.transform,translate2=ext_exports.leftTranslate,leftRotate2=ext_exports.leftRotate,leftScale2=ext_exports.leftScale,PositionH,PositionV;function createRotateAtPoint(e,t,A){return transform2(void 0,[["t",-e,-t],["r",A],["t",e,t]])}function getDistance(e,t){return Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2))}function getDistanceSegs(e){return e.reduce(((e,t,A,n)=>{if(n[A+1]){const l=getDistance(t,n[A+1]);e.push(l)}return e}),[])}function interpolateAt(e,t,A){return{x:e.x+(t.x-e.x)*A,y:e.y+(t.y-e.y)*A}}function getPointAt(e,t,A=!1){if(t<=0)return;const n=getDistanceSegs(e),l=n.reduce(((e,t)=>e+t),0);let r=A?l*t:t;for(let t=0;t<n.length;t++){const A=n[t];if(A>=r){return interpolateAt(e[t],e[t+1],r/A)}r-=A}}function clamp(e,t,A){return Math.min(Math.max(e,t),A)}function getPositionOfRect(e,t){let A=e.x,n=e.y;return t&PositionH.CENTER?A+=e.width/2:t&PositionH.RIGHT&&(A+=e.width),t&PositionV.CENTER?n+=e.height/2:t&PositionV.BOTTOM&&(n+=e.height),{x:A,y:n}}function movePointPosition(e,t){return{x:e.x+t.x,y:e.y+t.y}}!function(e){e[e.LEFT=32]="LEFT",e[e.CENTER=16]="CENTER",e[e.RIGHT=8]="RIGHT"}(PositionH||(PositionH={})),function(e){e[e.TOP=4]="TOP",e[e.CENTER=2]="CENTER",e[e.BOTTOM=1]="BOTTOM"}(PositionV||(PositionV={}));var CanvasTextMetricCalculator=class{constructor(){this.name="CanvasTextMetricCalculator",this.ctx=void 0,this.getCanvasContext=()=>{if(!this.ctx){const e=document.createElement("canvas");this.ctx=e.getContext("2d")}return this.ctx}}calculateTextDimensions(e,t){const A=e.split("\n");let n=0,l=0;const r=(null==t?void 0:t.fontSize)||14;return A.forEach(((e,A)=>{const a=this.getLineMetric(e,t),o=a.width;n=Math.max(o,n);let s=r;0===A&&"actualBoundingBoxDescent"in a&&(s=a.actualBoundingBoxAscent+a.actualBoundingBoxDescent),l+=s})),{width:n,height:l}}getLineMetric(e,t){const A=(null==t?void 0:t.fontSize)||14,n=(null==t?void 0:t.fontFamily)||"sans-serif",l=this.getCanvasContext();return l.font=`${A}px ${n}`,l.measureText(e)}},canvasTextCalculator=new CanvasTextMetricCalculator,TextMetricBridge=class{constructor(){this.calculator=canvasTextCalculator}setImpl(e){this.calculator=e}calculateTextDimensions(e,t){return this.calculator.calculateTextDimensions(e,t)}},textMetrics=new TextMetricBridge;function calculateTextDimensions(e,t){return textMetrics.calculateTextDimensions(e,t)}function encodeForUrl(e){return encodeURIComponent(btoa(escape(e)))}function decodeCodeInUrl(e){return unescape(atob(decodeURIComponent(e)))}function makeMark(e,t,A){return{type:e,...A||{},attrs:t}}function cloneMark(e){const t={...e,attrs:{...e.attrs}};return"children"in e&&(t.children=e.children.map((e=>cloneMark(e)))),t}var import_tinycolor2=__toESM(require_tinycolor()),HEX_PATTERN=/^#(?:[0-9a-fA-F]{3}){1,2}$/;function parseColor(e){let t=!1,A=e;return HEX_PATTERN.test(e)?(A=e,t=!0):A=e.replace("#",""),{color:A,isValid:t}}function makeArtist(e){return e}var SymbolRegistry=class{constructor(){this.symbols={}}register(e,t){this.symbols[e]&&logger.warn(`[pintora]duplicate symbol:${e}`),this.symbols[e]=t}get(e){return this.symbols[e]}getSymbols(){return this.symbols}create(e,t){const{attrs:A,contentArea:n}=t,l=this.symbols[e];if(!l)return null;try{let e=null;if("factory"===l.type){const A=n||{x:0,y:0,width:100,height:100},r=t.mode||"icon";e=l.factory(A,{mode:r})}else"prototype"===l.type&&(e={...l.symbol,mark:cloneMark(l.symbol.mark)});return e&&l.styleMark&&l.styleMark(e.mark,l,A),e}catch(e){return console.error("[symbolRegistry] error in create",e),null}}},symbolRegistry=new SymbolRegistry,config_engine_exports={};__export(config_engine_exports,{interpreteConfigs:()=>interpreteConfigs});var sizeEvaluator=({value:e})=>{const t=parseInt(e);return isNaN(t)?{valid:!1}:{value:t,valid:!0}},configValueEvaluators={color:({value:e})=>({value:parseColor(e).color,valid:!0}),size:sizeEvaluator,fontSize:sizeEvaluator,string:({value:e})=>({value:e,valid:!0}),boolean:({value:e})=>({value:"true"===e,valid:!0}),layoutDirection:({value:e})=>({value:e,valid:!0})};function interpreteConfigs(e,t){const A={};return t.forEach((t=>{const n=e[t.key];if(!n)return;const l=Array.isArray(n.valueType)?n.valueType:[n.valueType];for(const e of l){const n=configValueEvaluators[e];if(!n)continue;const l=n(t);if(l.valid)return void(A[t.key]=l.value)}})),A}function parseAndDraw(e,t){const{onError:A,config:n}=t,l=diagramRegistry.detectDiagram(e);if(!l){const t=`[pintora]no diagram detected with input:${e.slice(0,30)}`;return logger.warn(t),void(A&&A(new Error(t)))}l.clear();const r=l.parser.parse(e);let a;n&&l.configKey&&n[l.configKey]&&(a=n[l.configKey]);return{diagramIR:r,graphicIR:l.artist.draw(r,a,t)}}var util={encodeForUrl:encodeForUrl,decodeCodeInUrl:decodeCodeInUrl,makeMark:makeMark,calculateTextDimensions:calculateTextDimensions,parseColor:parseColor,tinycolor:import_tinycolor2.default},BaseDb=class{constructor(){this.configParams=[],this.overrideConfig={},this.title=""}addOverrideConfig(e){"error"in e?console.error(e.error):this.overrideConfig=e.value}getBaseDiagramIR(){return{configParams:this.configParams,overrideConfig:this.overrideConfig,title:this.title}}clear(){this.configParams=[],this.overrideConfig={},this.title=""}};function ownKeys(e,t){var A=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),A.push.apply(A,n)}return A}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var A=null!=arguments[t]?arguments[t]:{};t%2?ownKeys(Object(A),!0).forEach((function(t){_defineProperty(e,t,A[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(A)):ownKeys(Object(A)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(A,t))}))}return e}function _defineProperty(e,t,A){return(t=_toPropertyKey(t))in e?Object.defineProperty(e,t,{value:A,enumerable:!0,configurable:!0,writable:!0}):e[t]=A,e}function _toPropertyKey(e){var t=_toPrimitive(e,"string");return"symbol"==typeof t?t:String(t)}function _toPrimitive(e,t){if("object"!=typeof e||null===e)return e;var A=e[Symbol.toPrimitive];if(void 0!==A){var n=A.call(e,t||"default");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}var dedent_default=createDedent({}),LINETYPE;function createDedent(e){return t.withOptions=t=>createDedent(_objectSpread(_objectSpread({},e),t)),t;function t(t,...A){const n="string"==typeof t?[t]:t.raw,{escapeSpecialCharacters:l=Array.isArray(t)}=e;let r="";for(let e=0;e<n.length;e++){let t=n[e];l&&(t=t.replace(/\\\n[ \t]*/g,"").replace(/\\`/g,"`").replace(/\\\$/g,"$").replace(/\\{/g,"{")),r+=t,e<A.length&&(r+=A[e])}const a=r.split("\n");let o=null;for(const e of a){const t=e.match(/^(\s+)\S+/);if(t){const e=t[1].length;o=o?Math.min(o,e):e}}if(null!==o){const e=o;r=a.map((t=>" "===t[0]||"\t"===t[0]?t.slice(e):t)).join("\n")}return r.trim().replace(/\\n/g,"\n")}}function toFixed(e,t=2){return parseFloat(e.toFixed(t))}function getTextDimensionsInPresicion(e,t,A=2){const{width:n,height:l}=calculateTextDimensions(e,t);return{width:toFixed(n,A),height:toFixed(l,A)}}!function(e){e[e.SOLID=0]="SOLID",e[e.DOTTED=1]="DOTTED",e[e.NOTE=2]="NOTE",e[e.SOLID_CROSS=3]="SOLID_CROSS",e[e.DOTTED_CROSS=4]="DOTTED_CROSS",e[e.SOLID_OPEN=5]="SOLID_OPEN",e[e.DOTTED_OPEN=6]="DOTTED_OPEN",e[e.LOOP_START=10]="LOOP_START",e[e.LOOP_END=11]="LOOP_END",e[e.ALT_START=12]="ALT_START",e[e.ALT_ELSE=13]="ALT_ELSE",e[e.ALT_END=14]="ALT_END",e[e.OPT_START=15]="OPT_START",e[e.OPT_END=16]="OPT_END",e[e.ACTIVE_START=17]="ACTIVE_START",e[e.ACTIVE_END=18]="ACTIVE_END",e[e.PAR_START=19]="PAR_START",e[e.PAR_AND=20]="PAR_AND",e[e.PAR_END=21]="PAR_END",e[e.RECT_START=22]="RECT_START",e[e.RECT_END=23]="RECT_END",e[e.SOLID_POINT=24]="SOLID_POINT",e[e.DOTTED_POINT=25]="DOTTED_POINT",e[e.DIVIDER=26]="DIVIDER"}(LINETYPE||(LINETYPE={}));var ARROWTYPE={FILLED:0,OPEN:1},PLACEMENT;!function(e){e[e.LEFTOF=0]="LEFTOF",e[e.RIGHTOF=1]="RIGHTOF",e[e.OVER=2]="OVER"}(PLACEMENT||(PLACEMENT={}));var GROUP_TYPE_CONFIGS={loop:{startSignalType:LINETYPE.LOOP_START,endSignalType:LINETYPE.LOOP_END},par:{startSignalType:LINETYPE.PAR_START,endSignalType:LINETYPE.PAR_END},opt:{startSignalType:LINETYPE.OPT_START,endSignalType:LINETYPE.OPT_END},alt:{startSignalType:LINETYPE.ALT_START,endSignalType:LINETYPE.ALT_END},else:{startSignalType:LINETYPE.ALT_ELSE,endSignalType:LINETYPE.ALT_END},and:{startSignalType:LINETYPE.PAR_AND,endSignalType:LINETYPE.PAR_END}},SequenceDB=class extends BaseDb{constructor(){super(...arguments),this.prevActorId=null,this.messages=[],this.notes=[],this.actors={},this.participantBoxes={},this.title="",this.titleWrapped=!1,this.wrapEnabled=!1,this.showSequenceNumbers=!1,this.actorOrder=new Set,this.idCounter=makeIdCounter()}addActor(e){const{actor:t,classifier:A}=e;let{description:n}=e;const l=t,r=this.actors[l];r&&t===r.name&&null==n||(this.actorOrder.add(l),null!=n&&null!=n.text||(n={text:t,wrap:!1}),this.actors[l]={name:t,description:n.text,wrap:void 0===n.wrap&&this.wrapEnabled||!!n.wrap,prevActorId:this.prevActorId,classifier:A,itemId:`actor-${l}`},this.prevActorId&&this.actors[this.prevActorId]&&(this.actors[this.prevActorId].nextActorId=l),this.prevActorId=l)}addSignal(e,t,A={text:"",wrap:!1},n){if("string"==typeof e&&(e={actor:e}),"string"==typeof t&&(t={actor:t}),n===LINETYPE.ACTIVE_END){if(activationCount(this,e.actor)<1){const t=new SError("Trying to inactivate an inactive participant ("+e.actor+")");throw t.hash={text:"->>-",token:"->>-",line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["'ACTIVE_PARTICIPANT'"]},t}}const l=this.messages.length;return this.messages.push({from:e.actor,to:t?t.actor:"",text:A.text||"",wrap:void 0===A.wrap&&this.wrapEnabled||!!A.wrap,type:n,itemId:`message-${l}-${n}`}),!0}addSignalWithoutActor(e={text:"",wrap:!1},t,A){const n=this.messages.length;this.messages.push({from:void 0,to:void 0,text:e.text||"",wrap:void 0===e.wrap&&this.wrapEnabled||!!e.wrap,type:t,attrs:A,itemId:`message-${n}-${t}`})}addGroupStart(e,t,A){const n=GROUP_TYPE_CONFIGS[e];n&&(A.background&&(A.background=parseColor(A.background).color),this.addSignalWithoutActor(t,n.startSignalType,A))}addGroupEnd(e){const t=GROUP_TYPE_CONFIGS[e];t&&this.addSignalWithoutActor(void 0,t.endSignalType)}addNote(e,t,A){const n=dedent_default(A.text),l={actor:e,placement:t,text:n,wrap:void 0===A.wrap&&this.wrapEnabled||!!A.wrap},r=Array.isArray(e)?e[0]:e,a=Array.isArray(e)?e[1]:e;this.notes.push(l);const o=this.messages.length;this.messages.push({from:r,to:a,text:n,wrap:void 0===A.wrap&&this.wrapEnabled||!!A.wrap,type:LINETYPE.NOTE,placement:t,itemId:`message-${o}-${LINETYPE.NOTE}`})}setTitle(e){this.title=e.text,this.titleWrapped=void 0===e.wrap&&this.wrapEnabled||!!e.wrap}parseMessage(e){const t={text:e.trim().replace(/\\n/,"\n"),wrap:!1};return logger.debug("parseMessage:",t),t}addParam(e){this.configParams.push(e)}addBox(e){this.apply(e.children);const t={actors:[],text:e.text,id:this.idCounter.next(),background:e.background};e.children.forEach((e=>{"addActor"===e.type&&t.actors.push(e.actor)})),t.actors.length&&(this.participantBoxes[t.id]=t)}getActor(e){return this.actors[e]}getActorKeys(){return Object.keys(this.actors)}clear(){super.clear(),this.prevActorId=null,this.messages=[],this.notes=[],this.actors={},this.actorOrder.clear(),this.participantBoxes={},this.title="",this.showSequenceNumbers=!1,this.idCounter.reset()}prepareBeforeGetIR(){for(const e of Object.values(this.participantBoxes))for(const t of e.actors){const A=this.getActor(t);A&&(A.boxId=e.id)}}getDiagramIR(){return this.prepareBeforeGetIR(),{messages:this.messages,notes:this.notes,actors:this.actors,actorOrder:Array.from(this.actorOrder),participantBoxes:this.participantBoxes,title:this.title,showSequenceNumbers:this.showSequenceNumbers,configParams:this.configParams,overrideConfig:this.overrideConfig}}apply(e){if(e)if(e instanceof Array)e.forEach((e=>{this.apply(e)}));else switch(logger.debug("apply",e),e.type){case"addActor":this.addActor(e);break;case"activeStart":case"activeEnd":this.addSignal(e.actor,void 0,void 0,e.signalType);break;case"addNote":this.addNote(e.actor,e.placement,e.text);break;case"addSignal":this.addSignal(e.from,e.to,e.msg,e.signalType);break;case"groupStart":this.addGroupStart(e.groupType,e.text,{background:e.background});break;case"groupEnd":this.addGroupEnd(e.groupType);break;case"addBox":this.addBox(e);break;case"setTitle":this.setTitle(e.text);break;case"addDivider":this.addSignalWithoutActor({text:e.text,wrap:!1},e.signalType);break;case"addParam":this.addParam({key:e.key,value:e.value});break;case"overrideConfig":this.addOverrideConfig(e)}}},db=new SequenceDB,SError=class extends Error{},activationCount=(e,t)=>{let A,n=0;for(A=0;A<e.messages.length;A++)e.messages[A].type===LINETYPE.ACTIVE_START&&e.messages[A].from===t&&n++,e.messages[A].type===LINETYPE.ACTIVE_END&&e.messages[A].from===t&&n--;return n};function enableSequenceNumbers(){db.showSequenceNumbers=!0}var db_default={addActor:db.addActor,addSignal:db.addSignal,enableSequenceNumbers:enableSequenceNumbers,parseMessage:db.parseMessage,LINETYPE:LINETYPE,ARROWTYPE:ARROWTYPE,PLACEMENT:PLACEMENT,addNote:db.addNote,setTitle:db.setTitle,apply:db.apply.bind(db)},PALETTE=themeRegistry.palettes.AYU_LIGHT;function baseGetConfigFromGlobalConfig(e,t,A){var n;const l=safeAssign({},e.core,null===(n=t.overrideConfig)||void 0===n?void 0:n.core);return safeAssign({fontFamily:l.defaultFontFamily,useMaxWidth:l.useMaxWidth},e[A]||{})}function makeConfigurator(e){const{configKey:t,defaultConfig:A}=e;return{getConfig:function(n,l){var r,a;const o=config_default.gnernateNewConfig(n.overrideConfig||{}),s=null===(r=o.themeConfig)||void 0===r?void 0:r.themeVariables,i={...A};return safeAssign(i,e.getConfigFromTheme(s,i)),safeAssign(i,(e.getConfigFromGlobalConfig||baseGetConfigFromGlobalConfig)(o,n,t)),l&&safeAssign(i,l),safeAssign(i,null===(a=n.overrideConfig)||void 0===a?void 0:a[t]),e.getConfigFromParamDirectives&&safeAssign(i,e.getConfigFromParamDirectives(n.configParams)),i}}}function getParamRulesFromConfig(e){const t={};for(const[A,n]of Object.entries(e)){const e=typeof n;let l;"number"===e?l="size":"boolean"===e?l="boolean":"string"===e&&(l=/color|background/.test(A.toLowerCase())?"color":"string"),l&&(t[A]={valueType:l})}return t}var defaultConfig={noteWidth:80,noteHeight:50,noteMargin:10,boxMargin:10,activationWidth:10,diagramMarginX:10,diagramMarginY:10,boxTextMargin:5,messageFontSize:16,messageFontFamily:DEFAULT_FONT_FAMILY,messageFontWeight:400,messageTextColor:PALETTE.normalDark,boxFontWeight:700,wrapPadding:10,labelBoxWidth:50,labelBoxHeight:20,loopLineColor:PALETTE.orange,mirrorActors:!0,actorWidth:80,actorHeight:50,actorMargin:10,actorBackground:PALETTE.orange,actorBorderColor:PALETTE.normalDark,actorTextColor:PALETTE.normalDark,actorLineColor:PALETTE.normalDark,participantBoxPadding:10,participantBackground:"transparent",noteTextColor:PALETTE.normalDark,activationBackground:PALETTE.neutralGray,dividerFontWeight:600,dividerTextColor:PALETTE.normalDark,dividerMargin:15,showSequenceNumbers:!1,useMaxWidth:!1},SEQUENCE_PARAM_DIRECTIVE_RULES={noteMargin:{valueType:"size"},boxMargin:{valueType:"size"},activationWidth:{valueType:"size"},diagramMarginX:{valueType:"size"},diagramMarginY:{valueType:"size"},boxTextMargin:{valueType:"size"},messageFontSize:{valueType:"fontSize"},messageFontFamily:{valueType:"string"},messageTextColor:{valueType:"color"},wrapPadding:{valueType:"size"},labelBoxWidth:{valueType:"size"},labelBoxHeight:{valueType:"size"},loopLineColor:{valueType:"color"},actorWidth:{valueType:"size"},actorHeight:{valueType:"size"},actorMargin:{valueType:"size"},actorBackground:{valueType:"color"},actorBorderColor:{valueType:"color"},actorTextColor:{valueType:"color"},actorLineColor:{valueType:"color"},noteTextColor:{valueType:"color"},activationBackground:{valueType:"color"},dividerTextColor:{valueType:"color"},useMaxWidth:{valueType:"boolean"}},configKey="sequence",configurator=makeConfigurator({defaultConfig:defaultConfig,configKey:configKey,getConfigFromGlobalConfig:(e,t,A)=>safeAssign({...baseGetConfigFromGlobalConfig(e,t,A),messageFontFamily:e.core.defaultFontFamily}),getConfigFromParamDirectives:e=>interpreteConfigs(SEQUENCE_PARAM_DIRECTIVE_RULES,e),getConfigFromTheme:e=>({actorBackground:e.primaryColor,actorBorderColor:e.primaryBorderColor,messageTextColor:e.textColor,loopLineColor:e.primaryColor,actorTextColor:e.textColor,actorLineColor:e.primaryLineColor,noteTextColor:e.noteTextColor||e.textColor,activationBackground:e.background1,dividerTextColor:e.secondaryTextColor})}),getConf=configurator.getConfig;function drawArrowTo(e,t,A,n){const{x:l,y:r}=e,a=t/2*Math.tan(Math.PI/3),{type:o="default",color:s="transparent",bgColor:i="transparent"}=n,u={x:l,y:r,baseLength:t,color:s,bgColor:i,type:o,xOffset:a,arrowTypeRegistry:arrowTypeRegistry},c=arrowTypeRegistry.draw(u),h=c.shapeStartPoint||{x:l-a,y:r};return{type:"path",matrix:createRotateAtPoint(l,r,A),attrs:{...h,...c.attrs||{},...n.attrs||{},path:c.path||[]}}}var defaultHeadDrawer=e=>{const{x:t,y:A,color:n,baseLength:l}=e,r=l/2*Math.tan(Math.PI/3);return{path:[["M",t-r,A-l/2],["L",t,A],["L",t-r,A+l/2]],attrs:{stroke:n,lineCap:"round"}}},ArrowTypeRegistry=class{constructor(){this.drawers={}}register(e,t){this.drawers[e]=t}draw(e){return((e.type?this.drawers[e.type]:null)||defaultHeadDrawer)(e)}},arrowTypeRegistry=new ArrowTypeRegistry;function makeStrokeDrawer(e){return t=>{const A=t.arrowTypeRegistry.draw({...t,type:e});return A.attrs={stroke:t.color,fill:t.bgColor},A}}function getBaseText(){return{x:0,y:0,text:"",fill:PALETTE.normalDark}}function drawCrossTo(e,t,A,n){const{x:l,y:r}=e,a=t/2,o=[["M",l-a,r-a],["L",l+a,r+a],["M",l+a,r-a],["L",l-a,r+a]];return{type:"path",matrix:createRotateAtPoint(l,r,A),attrs:{...n||{},path:o}}}function drawDiamondTo(e,t,A){const n=2*t;return makeMark("path",{...A,width:n,height:n,path:[["m",e.x-t,e.y],["l",t,t],["l",t,-t],["l",-t,-t],["Z"]]})}function calcDirection(e,t){const A=t.x-e.x,n=t.y-e.y;let l=Math.atan(n/A);return A<0&&(l+=Math.PI),l}function makeLabelBg(e,t,A={},n){let l="#fff";n&&(l=n.canvasBackground||n.background1||(n.isDark?"#000":"#fff"));return makeMark("rect",{x:t.x-e.width/2,y:t.y-e.height/2,width:e.width,height:e.height+2,fill:l,opacity:.85,...A},{class:"label-bg"})}function adjustRootMarkBounds({rootMark:e,gBounds:t,padX:A,padY:n,containerSize:l,useMaxWidth:r,titleSize:a,titleMark:o}){const s=null==l?void 0:l.width,i=2*A,u=(null==a?void 0:a.height)||0,c=(null==a?void 0:a.width)||0,h=r&&s?s/Math.max(t.width+i,c):1;e.matrix=mat3_exports.translate(mat3_exports.create(),mat3_exports.fromScaling(mat3_exports.create(),[h,h]),[-Math.min(0,t.left)+A/h,-Math.min(0,t.top)+n/h+u]);const f=Math.max(t.width+i,c)*h;return o&&(o.attrs.x=t.left+f/2-A),{width:f,height:t.height*h+2*n+((null==a?void 0:a.height)||0)}}function makeTitleMark(e,t,A){const n=calculateTextDimensions(e,t);return{mark:{type:"text",attrs:{text:e,x:0,y:-n.height,...t,...A,textAlign:"center",fontWeight:"bold"}},titleSize:n}}function makeEmptyGroup(){return makeMark("group",{x:0,y:0},{children:[]})}function makeCircle(e){return makeMark("circle",{x:0,y:0,r:0,...e})}arrowTypeRegistry.register("triangle",(e=>{const{x:t,y:A,xOffset:n,baseLength:l,color:r}=e;return{path:[["M",t-n,A-l/2],["L",t-n,A+l/2],["L",t,A],["Z"]],attrs:{fill:r}}})),arrowTypeRegistry.register("etriangle",makeStrokeDrawer("triangle")),arrowTypeRegistry.register("box",(e=>{const{x:t,y:A,baseLength:n,color:l}=e;return{path:[["M",t-n,A-n/2],["L",t-n,A+n/2],["L",t,A+n/2],["L",t,A-n/2],["Z"]],attrs:{fill:l}}})),arrowTypeRegistry.register("obox",makeStrokeDrawer("box")),arrowTypeRegistry.register("dot",(e=>{const{x:t,y:A,baseLength:n,color:l}=e,r=n/2,a=t-2*r;return{path:[["M",a,A],["A",r,r,0,0,0,t,A],["A",r,r,0,0,0,a,A]],attrs:{fill:l}}})),arrowTypeRegistry.register("odot",makeStrokeDrawer("dot")),arrowTypeRegistry.register("diamond",(e=>{const{x:t,y:A,baseLength:n,xOffset:l,color:r}=e,a=n/2;return{path:[["M",t-l-l,A],["l",l,a],["l",l,-a],["l",-l,-a],["Z"]],attrs:{fill:r}}})),arrowTypeRegistry.register("ediamond",makeStrokeDrawer("diamond"));var getBaseNote=function(e){return{x:0,y:0,fill:e.noteBackground||e.groupBackground,stroke:e.primaryBorderColor,width:50,anchor:"start",height:50,rx:0,ry:0}},LayerManager=class{constructor(){this.layers={}}addLayer(e,t){return this.layers[e]||(this.layers[e]={zIndex:0,marks:[]}),this.layers[e].zIndex=t,this.layers[e]}getLayer(e){return this.layers[e]}sortLayerMarks(){return Object.values(this.layers).sort(((e,t)=>e.zIndex-t.zIndex)).reduce(((e,t)=>(e.push(...t.marks),e)),[])}addMark(e,t){var A;null===(A=this.getLayer(e))||void 0===A||A.marks.push(t)}};function makeTriangle(e,t,A,n){const{x:l,y:r}=e,a=toFixed(t/2),o=t*Math.sign(Math.PI/3)/2;return{mark:makeMark("path",{...n||{},path:[["M",l,r-o],["L",l-a,r+o],["L",l+a,r+o],["Z"]]},{matrix:createRotateAtPoint(l,r,A)}),width:t,height:2*o}}function makeTextAtPoint(e,t,A={}){return makeMark("text",{x:t.x,y:t.y,text:e,fill:PALETTE.normalDark,textAlign:"center",textBaseline:"middle",...A})}function makeLoopLabelBox(e,t,A,n){const{x:l,y:r}=e;return makeMark("polygon",{points:[[l,r],[l+t,r],[l+t,r+A-n],[l+t-1.2*n,r+A],[l,r+A]]},{class:"loop__label-box"})}var MARK_TRANSFORMERS={rect({attrs:e},t){e.x=(e.x||0)+t.offsets.x,e.y=(e.y||0)+t.offsets.y},circle({attrs:e},t){e.x+=t.offsets.x,e.y+=t.offsets.y,t.scales.x&&(e.r*=t.scales.x)},ellipse({attrs:e,type:t},A){e.x+=A.offsets.x,e.y+=A.offsets.y,A.scales.x&&(e.rx*=A.scales.x),A.scales.y&&(e.ry*=A.scales.y)},line(e,t){e.matrix=createTranslation(t.offsets.x,t.offsets.y)},path(e,t){const A=createTranslation(t.offsets.x,t.offsets.y),n=mat3_exports.fromScaling(mat3_exports.create(),[t.scales.x||1,t.scales.y||1]),l=mat3_exports.multiply(mat3_exports.create(),A,n);e.matrix=l}};function positionGroupContents(e,t){const A=e.attrs.x||0,n=e.attrs.y||0,l=e.attrs.width||null,r=e.attrs.height||null,a={x:t.x-A,y:t.y-n},o={offsets:a,scales:{x:null===l?null:t.width/l,y:null===r?null:t.height/r},width:t.width,height:t.height};e.children.forEach((e=>{const{type:t}=e;if("group"===e.type)positionGroupContents(e,{...a,width:e.attrs.width,height:e.attrs.height});else{const A=MARK_TRANSFORMERS[t];if(A)A(e,o);else{const t=e.attrs;t.x=(t.x||0)+a.x,t.y=(t.y||0)+a.y}}})),safeAssign(e.attrs,t)}var TRANSFORM_GRAPH={graphNodeToRectStart(e){const{width:t,height:A,x:n,y:l}=e;return{width:t,height:A,x:n-e.width/2,y:l-e.height/2}}},conf,theme;function makeBounds(){return{left:1/0,right:-1/0,top:1/0,bottom:-1/0,width:0,height:0}}function tryExpandBounds(e,t){return e.left=Math.min(e.left,t.left),e.right=Math.max(e.right,t.right),e.top=Math.min(e.top,t.top),e.bottom=Math.max(e.bottom,t.bottom),e.width=e.right-e.left,e.height=e.bottom-e.top,e}function drawDivider(e,t){const{conf:A,model:n}=e,l=e.rootMark,r=A.dividerMargin;n.tryBumpType({[BumpType.Box]:!0}),n.bumpVerticalPos(r);const a={...messageFont(A),fontWeight:A.dividerFontWeight},o=n.getBounds(),s=n.verticalPos,i=o.startx,{width:u,height:c}=t,h=A.wrapPadding,f=u+2*A.wrapPadding,g=i+(o.stopx-f)/2,d=makeMark("rect",{x:g,y:s,width:f,height:c+2*A.wrapPadding,fill:A.activationBackground,stroke:A.actorBorderColor,lineWidth:2}),p=calculateTextDimensions(t.text),B=makeMark("text",{text:t.text,fill:A.dividerTextColor,x:g+u/2+h,y:s+c/2+h,textAlign:"center",textBaseline:"middle",...a}),E=s+d.attrs.height/2-1.5,m=E+3,b=makeMark("line",{x1:0,y1:E,x2:o.stopx,y2:E,stroke:A.actorLineColor}),y=makeMark("line",{...b.attrs,y1:m,y2:m}),w=makeMark("group",{},{children:[b,y,d,B],class:"divider"});l.children.push(w),n.bumpVerticalPos(r+p.height+h),n.onBoundsFinish((({bounds:e})=>{const t=Math.abs(e.stopx-e.startx),A=e.startx+t/2,n=A-d.attrs.width/2;safeAssign(d.attrs,{x:n}),safeAssign(B.attrs,{x:A}),safeAssign(b.attrs,{x1:e.startx}),safeAssign(y.attrs,{x1:e.startx})}))}function drawLoopTo(e,t,A){const{conf:n,rootMark:l,model:r}=e,a=n.loopLineColor,o=makeMark("group",{},{children:[],class:"loop"});const{startx:s,starty:i,stopx:u,stopy:c}=t,h=makeMark("rect",removeValues({x:s,y:i,width:u-s,height:c-i,fill:t.fill,stroke:a,lineWidth:2,lineDash:[2,2]}));r.groupBgs.push(h),t.sections&&t.sections.forEach((function(e){!function(e,t,A,n){const l=makeMark("line",{x1:e,x2:A,y1:t,y2:n,stroke:a,lineWidth:2,lineDash:[2,2]},{class:"loopline"});o.children.push(l)}(s,e.y,t.stopx,e.y),e.fill&&function(e){const t=makeMark("rect",{x:s,y:e.y,width:u-s,height:c-e.y,fill:e.fill,stroke:a,lineWidth:2,lineDash:[2,2]});r.groupBgs.push(t)}(e)}));const{boxMargin:f,boxTextMargin:g,labelBoxWidth:d,labelBoxHeight:p,messageFontFamily:B,messageFontSize:E,messageFontWeight:m,messageTextColor:b}=n,y=getBaseText();safeAssign(y,{text:A,x:s+g,y:i+g,textBaseline:"top",fontFamily:B,fontSize:E,fontWeight:m,fill:b});const w=makeMark("text",y,{class:"label-text"}),Q=calculateTextDimensions(A,messageFont(n)),C=Math.max(Q.width+2*g,d),M=Math.max(Q.height+2*g,p),I=makeLoopLabelBox({x:s,y:i},C,M,5);safeAssign(I.attrs,{fill:n.actorBackground,stroke:a});const T=u-s,x=makeMark("text",{text:t.title,x:s+T/2+d/2,y:i+g,textBaseline:"top",textAlign:"center",fontFamily:B,fontSize:E,fontWeight:m,fill:b},{class:"loop__title"});o.children.push(I,w,x),t.sections&&t.sections.forEach((function(e,A){const l=e.message.text;if(l){const e=makeMark("text",{...getBaseText(),text:l,x:s+T/2,y:t.sections[A].y+g,textAlign:"center",textBaseline:"top",fontFamily:B,fontSize:E,fontWeight:m,fill:n.messageTextColor},{class:"loop__title"}),{height:r}=calculateTextDimensions(l,boxFont(n));t.sections[A].height+=r-(f+g),o.children.push(e)}})),l.children.push(o)}var GROUP_LABEL_MAP={[LINETYPE.LOOP_END]:"loop",[LINETYPE.ALT_END]:"alt",[LINETYPE.OPT_END]:"opt",[LINETYPE.PAR_END]:"par",[LINETYPE.LOOP_START]:"loop",[LINETYPE.ALT_START]:"alt",[LINETYPE.OPT_START]:"opt",[LINETYPE.PAR_START]:"par"},SHOW_NUMBER_CIRCLE_RADIUS=8,sequenceArtist={draw(e,t,A){var n;conf=getConf(e,t),theme=config_default.getConfig().themeConfig.themeVariables,model.init();const{messages:l,title:r}=e,a=db.getActorKeys(),o=makeEmptyGroup(),s={ir:e,rootMark:o,conf:conf,model:model};a.forEach((e=>{model.actorAttrsMap.set(e,{fill:conf.actorBackground,stroke:conf.actorBorderColor})})),model.initBoxInfos(e);let i=0;if(model.hasParticipantBox()){const e=2*conf.participantBoxPadding+model.participantBoxStats.maxTitleHeight;i=model.bumpVerticalPos(e)}calcLoopMinWidths(e.messages);const u=getMaxMessageWidthPerActor(e);model.maxMessageWidthPerActor=u;const c=calculateActorMargins(s,u);model.actorHeight=c.actorHeight,drawActors(o,e,{verticalPos:i});const h=calculateLoopBounds(l),f=makeMark("group",{},{children:[],class:"activations"});o.children.push(f);let g=1;l.forEach((function(e){let t,A,n;switch(e.type){case LINETYPE.NOTE:A=model.noteModelMap.get(e.id),drawNoteTo(A,o);break;case LINETYPE.ACTIVE_START:model.newActivation(e);break;case LINETYPE.ACTIVE_END:!function(e,t){const A=model.endActivation(e);A.starty+18>t&&(A.starty=t-6,t+=12),drawActivationTo(f,A),model.insert(A.startx,t-10,A.stopx,t)}(e,model.verticalPos);break;case LINETYPE.LOOP_START:case LINETYPE.OPT_START:case LINETYPE.ALT_START:case LINETYPE.PAR_START:adjustLoopSizeForWrap(h,e,conf.boxMargin,conf.boxMargin+conf.boxTextMargin,(({message:t,width:A})=>{var n;const l=null===(n=e.attrs)||void 0===n?void 0:n.background;model.newLoop(t,A,l)}));break;case LINETYPE.ALT_ELSE:case LINETYPE.PAR_AND:adjustLoopSizeForWrap(h,e,conf.boxMargin,conf.boxMargin+conf.boxTextMargin,(({message:t,width:A})=>{var n;const l=null===(n=e.attrs)||void 0===n?void 0:n.background;model.addSectionToLoop(t,A,l)}));break;case LINETYPE.LOOP_END:case LINETYPE.ALT_END:case LINETYPE.OPT_END:case LINETYPE.PAR_END:t=model.endLoop();const l=GROUP_LABEL_MAP[e.type];drawLoopTo(s,t,l),model.bumpVerticalPos(t.stopy-model.verticalPos),model.loops.push(t);break;case LINETYPE.DIVIDER:n=model.dividerMap.get(e.id),drawDivider(s,n);break;default:try{if(n=model.msgModelMap.get(e.id),!n)return void console.warn("no msgModel for",e);n.starty=model.verticalPos,n.sequenceIndex=g,o.children.push(drawMessage(n).mark)}catch(e){logger.error("error while drawing message",e)}}[LINETYPE.SOLID_OPEN,LINETYPE.DOTTED_OPEN,LINETYPE.SOLID,LINETYPE.DOTTED,LINETYPE.SOLID_CROSS,LINETYPE.DOTTED_CROSS,LINETYPE.SOLID_POINT,LINETYPE.DOTTED_POINT].includes(e.type)&&g++})),conf.mirrorActors&&(model.bumpVerticalPos(2*conf.boxMargin),drawActors(o,e,{verticalPos:model.verticalPos,isMirror:!0})),model.hasParticipantBox()&&model.bumpVerticalPos(conf.participantBoxPadding);const d=model.groupBgs.slice().reverse();o.children=[...d,...o.children],drawParticipantBoxes(s);const p=model.getBounds();if(r){const e=actorFont(conf);o.children.push({type:"text",attrs:{text:r,x:p.startx+(p.stopx-p.startx)/2,y:-20,...e,fill:conf.actorTextColor,textAlign:"center",fontWeight:"bold"},class:"sequence__title"})}model.emitBoundsFinish();const B=2*conf.diagramMarginX,E=2*conf.diagramMarginY,m=r?40:0,b=p.stopx-p.startx;let y=p.stopy-p.starty+m;conf.mirrorActors&&(y+=conf.boxMargin);const w=null===(n=A.containerSize)||void 0===n?void 0:n.width,Q=conf.useMaxWidth&&w&&w/(b+B)||1,C=Math.round(Q*(b+B)),M=Math.round(Q*(y+E)),I=Math.abs(Math.min(0,p.startx));o.matrix=mat3_exports.translate(mat3_exports.create(),mat3_exports.fromScaling(mat3_exports.create(),[Q,Q]),[conf.diagramMarginX+I,conf.diagramMarginY+m]);return{mark:o,width:C,height:M}}},BumpType;!function(e){e[e.Box=1]="Box"}(BumpType||(BumpType={}));var Model=class{constructor(){this.activations=[],this.actorAttrsMap=new Map,this.msgModelMap=new Map,this.actorLineMarkMap=new Map,this.maxMessageWidthPerActor={},this.noteModelMap=new Map,this.dividerMap=new Map,this.posTempInfo={},this.boxInfos=new Map,this.participantBoxStats={maxTitleHeight:0}}init(){this.sequenceItems=[],this.clear(),this.data={startx:0,stopx:0,starty:0,stopy:0},this.activations=[],this.verticalPos=0,this.loops=[],this.loopMinWidths={},this.onBoundsFinishCbs=[],this.groupBgs=[],this.actorHeight=conf.actorHeight}clear(){this.activations=[],this.actorAttrsMap.clear(),this.actorLineMarkMap.clear(),this.msgModelMap.clear(),this.maxMessageWidthPerActor={},this.noteModelMap.clear(),this.dividerMap.clear(),this.onBoundsFinishCbs=[],this.groupBgs=[],this.loopMinWidths={},this.posTempInfo={},this.boxInfos.clear()}updateVal(e,t,A,n){void 0===e[t]?e[t]=A:e[t]=n(A,e[t])}updateBounds(e,t,A,n){const l=this;let r=0;function a(a){return function(o){r++;const s=l.sequenceItems.length-r+1;l.updateVal(o,"starty",t-s*conf.boxMargin,Math.min),l.updateVal(o,"stopy",n+s*conf.boxMargin,Math.max);const i=A+s*conf.boxMargin;l.updateVal(l.data,"startx",e-s*conf.boxMargin,Math.min),l.updateVal(l.data,"stopx",i,Math.max),"activation"!==a&&(l.updateVal(o,"startx",e-s*conf.boxMargin,Math.min),l.updateVal(o,"stopx",i,Math.max),l.updateVal(l.data,"starty",t-s*conf.boxMargin,Math.min),l.updateVal(l.data,"stopy",n+s*conf.boxMargin,Math.max))}}this.sequenceItems.forEach(a()),this.activations.forEach(a("activation"))}insert(e,t,A,n){const l=Math.min(e,A),r=Math.max(e,A),a=Math.min(t,n),o=Math.max(t,n);this.updateVal(this.data,"startx",l,Math.min),this.updateVal(this.data,"starty",a,Math.min),this.updateVal(this.data,"stopx",r,Math.max),this.updateVal(this.data,"stopy",o,Math.max),this.updateBounds(l,a,r,o)}newActivation(e){const t=this.actorAttrsMap.get(e.from),A=actorActivations(e.from).length||0,n=t.x+t.width/2+(A-1)*conf.activationWidth/2;this.activations.push({startx:n,starty:this.verticalPos+2,stopx:n+conf.activationWidth,stopy:void 0,actor:e.from})}endActivation(e){const t=this.activations.map((e=>e.actor)).lastIndexOf(e.from);return this.activations.splice(t,1)[0]}createLoop(e={text:void 0,wrap:!1},t,A){return{startx:void 0,starty:this.verticalPos,stopx:void 0,stopy:void 0,title:e.text,wrap:e.wrap,width:t,height:0,fill:A}}newLoop(e={text:void 0,wrap:!1},t,A){this.sequenceItems.push(this.createLoop(e,t,A))}endLoop(){return this.sequenceItems.pop()}addSectionToLoop(e,t,A){const n=this.sequenceItems[this.sequenceItems.length-1];n.sections=n.sections||[],n.sections.push({y:this.verticalPos,width:t,height:0,fill:A,message:e})}bumpVerticalPos(e,t){return this.verticalPos=this.verticalPos+e,this.data.stopy=this.verticalPos,this.posTempInfo=t||{},this.verticalPos}tryBumpType(e){const{posTempInfo:t}=this;let A=0;e[BumpType.Box]&&t.extraMarginForBox&&(A+=t.extraMarginForBox),this.bumpVerticalPos(A)}getBounds(){return this.data}getHeight(){return(0===this.actorAttrsMap.size?0:Array.from(this.actorAttrsMap.values()).reduce(((e,t)=>Math.max(e,t.height||0)),0))+(this.msgModelMap.size?Array.from(this.msgModelMap.values()).reduce(((e,t)=>e+t.height),0):0)+(this.noteModelMap.size?Array.from(this.noteModelMap.values()).reduce(((e,t)=>e+t.height),0):0)+this.loops.reduce(((e,t)=>e+t.height),0)}getBoxInfo(e){return this.boxInfos.get(e)}initBoxInfos(e){let t=0;for(const A of Object.values(e.participantBoxes)){const e=A.id;let n=this.boxInfos.get(e);if(e&&!n){const l=boxFont(conf);n={width:0,actorMarks:[],bounds:makeBounds(),textDims:getTextDimensionsInPresicion(A.text||"",l),participantBox:A},A.text&&(t=Math.max(t,n.textDims.height)),this.boxInfos.set(e,n)}}this.participantBoxStats={maxTitleHeight:t}}hasParticipantBox(){return this.boxInfos.size>0}onBoundsFinish(e){this.onBoundsFinishCbs.push(e)}emitBoundsFinish(){this.onBoundsFinishCbs.forEach((e=>{e({bounds:this.data})}))}},model=new Model,actorActivations=function(e){return model.activations.filter((function(t){return t.actor===e}))},activationBounds=function(e){const t=model.actorAttrsMap.get(e),A=actorActivations(e);return[A.reduce((function(e,t){return Math.min(e,t.startx)}),t.x+t.width/2),A.reduce((function(e,t){return Math.max(e,t.stopx)}),t.x+t.width/2)]};function adjustLoopSizeForWrap(e,t,A,n,l){model.tryBumpType({[BumpType.Box]:!0}),model.bumpVerticalPos(A);let r=n,a=0;if(t.id&&t.text&&e[t.id]){const A=model.loopMinWidths[t.id]||0;a=Math.max(e[t.id].width,A);const l=boxFont(conf);t.text=`[${t.text}]`,t.wrap=!0;const o=calculateTextDimensions(t.text,l),s=Math.max(o.height,conf.labelBoxHeight);r=n+s,logger.debug(`yOffset:${s}-${t.text}`)}l({message:t,width:a}),model.bumpVerticalPos(r)}var messageFont=e=>({fontFamily:e.messageFontFamily,fontSize:e.messageFontSize,fontWeight:e.messageFontWeight}),actorFont=messageFont,noteFont=messageFont,boxFont=e=>({fontFamily:e.messageFontFamily,fontSize:e.messageFontSize,fontWeight:e.boxFontWeight||e.messageFontWeight});function splitBreaks(e){return e.split("\n")}var drawMessage=function(e){model.bumpVerticalPos(conf.boxMargin);const{startx:t,stopx:A,starty:n,text:l,fromBound:r,type:a,sequenceIndex:o,itemId:s}=e,i=splitBreaks(l).length,u=calculateTextDimensions(l,messageFont(conf)),c=u.height/i;model.bumpVerticalPos(c);const h={text:"",textAlign:"center",textBaseline:"top",fill:conf.messageTextColor};h.x=r+e.width/2,h.y=n+conf.boxMargin,h.width=e.width,h.text=l,h.fontFamily=conf.messageFontFamily,h.fontSize=conf.messageFontSize,h.fontWeight=conf.messageFontWeight;let f,g=u.height;const d={stroke:conf.messageTextColor,lineWidth:2},{verticalPos:p}=model;let B;if(t===A){f=model.verticalPos+g,g+=conf.boxMargin,f=model.verticalPos+g;const e=f+20;safeAssign(d,{path:"M "+t+","+f+" C "+(t+60)+","+(f-10)+" "+(t+60)+","+(f+30)+" "+t+","+e,x1:t,x2:A,y2:e}),B=makeMark("path",d,{class:"message__line",itemId:s}),safeAssign(h,{x:t});const n=20;g+=n;const l=Math.max(u.width/2,conf.actorWidth/2);model.insert(t-l,p-10+g,A+l,p+n+g)}else f=p+g,safeAssign(d,{x1:t,x2:A,y1:f,y2:f}),B={type:"line",attrs:d,class:"message__line",itemId:s},model.insert(t,f-10,A,f);a!==LINETYPE.DOTTED&&a!==LINETYPE.DOTTED_CROSS&&a!==LINETYPE.DOTTED_POINT&&a!==LINETYPE.DOTTED_OPEN||safeAssign(d,{lineDash:[3,3]});const E=A>t,m=E?0:-Math.PI;let b,y=null,w=0;if(a===LINETYPE.SOLID||a===LINETYPE.DOTTED){const e=10;y=drawArrowTo({x:d.x2,y:d.y2},e,m,{type:"triangle",color:d.stroke}),w=e/2}if(a===LINETYPE.SOLID_CROSS||a===LINETYPE.DOTTED_CROSS){const e=5,t=10;y=drawCrossTo({x:d.x2+e*(E?-1:1),y:d.y2},t,m,{stroke:d.stroke,lineWidth:2}),d.x2+=E?-e:e,w=t/2}if(db.showSequenceNumbers||conf.showSequenceNumbers){const e=makeMark("text",{...getBaseText(),text:o.toString(),x:t,y:f,textAlign:"center",textBaseline:"middle",fill:conf.actorBackground,fontWeight:"bold"},{class:"sequence-number"}),A=conf.actorBorderColor,n=makeMark("marker",{symbol:"circle",x:t,y:f,r:SHOW_NUMBER_CIRCLE_RADIUS,fill:A,stroke:A});b=makeMark("group",{},{children:[n,e]})}return model.bumpVerticalPos(g,{extraMarginForBox:w}),e.height+=g,e.stopy=e.starty+e.height,model.insert(e.fromBound,e.starty,e.toBound,e.stopy),{mark:{type:"group",class:"message",itemId:s,children:compact([B,y,{type:"text",attrs:h,class:"message__text"},b])}}},drawNoteTo=function(e,t){model.bumpVerticalPos(conf.boxMargin);const A=calculateTextDimensions(e.text,noteFont(conf)).height;e.height=A+2*conf.noteMargin,e.starty=model.verticalPos;const n=getBaseNote(theme);safeAssign(n,{x:e.startx,y:e.starty,width:e.width||conf.noteWidth,height:e.height});const l={type:"rect",class:"note__bg",attrs:n},r={fill:conf.noteTextColor,text:e.text,...noteFont(conf)};safeAssign(r,{x:e.startx+e.width/2,y:e.starty+e.height/2,width:e.width,textAlign:"center",textBaseline:"middle"});const a={type:"text",attrs:r};model.bumpVerticalPos(A+2*conf.noteMargin),e.stopy=e.starty+A+2*conf.noteMargin,e.stopx=e.startx+n.width,model.insert(e.startx,e.starty,e.stopx,e.stopy);const o={type:"group",class:"note",children:[l,a]};t.children.push(o)},drawActors=function(e,t,A){const{verticalPos:n=0,isMirror:l}=A;let r=t.actorOrder;const a=Object.keys(t.participantBoxes);r=r.sort(((e,A)=>{let n=1e3,l=1e3;const r=t.actors[e],o=t.actors[A];return r.boxId&&(n=a.indexOf(r.boxId)),o.boxId&&(l=a.indexOf(o.boxId)),n-l}));let o=0;for(let A=0;A<r.length;A++){const a=r[A],s=t.actors[a],i=l?`${a}_mirror`:a,{boxId:u}=s,c=model.getBoxInfo(u),h=null==c?void 0:c.participantBox,f={type:"group",class:"actor",children:[],itemId:s.itemId};let g;g=l?{...model.actorAttrsMap.get(a)}:model.actorAttrsMap.get(a)||{fill:conf.actorBackground,stroke:conf.actorBorderColor};const d=g.width||conf.actorWidth,p=Math.max(g.height||0,model.actorHeight);let B=o;h&&h.actors[0]===a&&(B+=conf.participantBoxPadding),safeAssign(g,{width:d,height:p,margin:g.margin||conf.actorMargin,x:B,y:n,radius:4});const E={x:g.x+g.width/2,y:g.y+g.height/2},m=actorFont(conf),b={fill:conf.actorTextColor,text:s.description,x:E.x,y:E.y,textAlign:"center",textBaseline:"middle",...m},y=calculateTextDimensions(s.description,m);let w,Q,C=0;if(s.classifier&&symbolRegistry.get(s.classifier)){const e=p-y.height,t={x:g.x+d/2,y:g.y+(p-y.height)/2,width:clamp(1.4*e,d/2,d),height:e};C+=y.height/2,w=symbolRegistry.create(s.classifier,{mode:"icon",attrs:{stroke:g.stroke,fill:g.fill},contentArea:t}),w&&(b.y=E.y+(p-y.height)/2+4,f.children.push(w))}if(w||f.children.push({type:"rect",attrs:g}),f.children.push({type:"text",attrs:b}),l){const e=model.actorLineMarkMap.get(a);e&&(e.attrs.y2=g.y)}else Q={type:"line",class:"actor__line",attrs:{x1:E.x,x2:E.x,y1:g.y+p+C,y2:2e3,stroke:conf.actorLineColor}},model.actorLineMarkMap.set(a,Q);if(Q&&f.children.unshift(Q),model.insert(g.x,n,g.x+g.width,g.height),o=B+g.width+g.margin,h&&h.actors.indexOf(a)===h.actors.length-1&&(o+=conf.participantBoxPadding),e.children.push(f),model.actorAttrsMap.set(i,g),c){c.actorMarks.push(f);const e=makeBounds();e.left=g.x,e.right=g.x+g.width,e.top=0,tryExpandBounds(c.bounds,e)}}model.bumpVerticalPos(model.actorHeight)};function drawParticipantBoxes(e){const{model:t,rootMark:A,conf:n}=e;if(!t.hasParticipantBox())return;const l=makeEmptyGroup();l.class="sequence__participant-boxes";const r=n.participantBoxPadding;A.children.unshift(l);const a=t.getBounds();for(const e of t.boxInfos.values()){const{participantBox:A,bounds:o,textDims:s}=e,i=Math.max(s.width,o.width)+2*r;if(!isFinite(i))continue;const u=o.left-r,c=makeMark("rect",{x:u,y:0,width:i,height:a.stopy-a.starty,fill:A.background||n.participantBackground,stroke:n.actorTextColor});if(l.children.push(c),A.text){const e=boxFont(n),t=makeMark("text",{text:A.text,x:u+i/2,y:n.participantBoxPadding,textBaseline:"top",textAlign:"center",fill:n.actorTextColor,...e,fontWeight:"bold"});l.children.push(t)}t.insert(u,0,u+i,c.attrs.height)}}function drawActivationTo(e,t){const A=getBaseNote(theme);safeAssign(A,{x:t.startx,y:t.starty,width:t.stopx-t.startx,height:model.verticalPos-t.starty,fill:conf.activationBackground});const n={type:"rect",class:"activation",attrs:A};e.children.push(n)}var getMaxMessageWidthPerActor=function(e){const{actors:t,messages:A}=e,n={};return A.forEach((function(e){if(t[e.to]&&t[e.from]){const A=t[e.to],{prevActorId:l,nextActorId:r}=A;if(e.placement===PLACEMENT.LEFTOF&&!l)return;if(e.placement===PLACEMENT.RIGHTOF&&!A.nextActorId)return;const a=void 0!==e.placement,o=!a,s=a?noteFont(conf):messageFont(conf),i=calculateTextDimensions(e.text,s).width+2*conf.wrapPadding;o&&e.from===r?n[e.to]=Math.max(n[e.to]||0,i):o&&e.from===l?n[e.from]=Math.max(n[e.from]||0,i):o&&e.from===e.to?(n[e.from]=Math.max(n[e.from]||0,i/2),n[e.to]=Math.max(n[e.to]||0,i/2)):e.placement===PLACEMENT.RIGHTOF?n[e.from]=Math.max(n[e.from]||0,i):e.placement===PLACEMENT.LEFTOF?n[l]=Math.max(n[l]||0,i):e.placement===PLACEMENT.OVER&&(l&&(n[l]=Math.max(n[l]||0,i/2)),r&&(n[e.from]=Math.max(n[e.from]||0,i/2)))}})),n},calculateActorMargins=function(e,t){const{ir:A,model:n}=e,{actors:l}=A;let r=0;Object.keys(l).forEach((e=>{const t=n.actorAttrsMap.get(e)||{},A=l[e],a=calculateTextDimensions(A.description,actorFont(conf));t.width=A.wrap?conf.actorWidth:Math.max(conf.actorWidth,a.width+2*conf.wrapPadding),t.height=A.wrap?Math.max(a.height,conf.actorHeight):conf.actorHeight,r=Math.max(r,t.height)}));for(const e in t){const A=l[e],r=n.actorAttrsMap.get(e);if(!A)continue;const a=n.actorAttrsMap.get(A.nextActorId);if(!a)continue;const o=t[e]+conf.actorMargin-r.width/2-a.width/2;r.margin=Math.max(o,conf.actorMargin)}return{actorHeight:Math.max(r,conf.actorHeight)}},buildMessageModel=function(e){const t=calculateTextDimensions(e.text,messageFont(conf));let A=!1;if([LINETYPE.SOLID_OPEN,LINETYPE.DOTTED_OPEN,LINETYPE.SOLID,LINETYPE.DOTTED,LINETYPE.SOLID_CROSS,LINETYPE.DOTTED_CROSS,LINETYPE.SOLID_POINT,LINETYPE.DOTTED_POINT].includes(e.type)&&(A=!0),!A)return{width:t.width,height:t.height,startx:0,starty:0,text:e.text,type:e.type,stopx:t.width,stopy:t.height,itemId:e.itemId};const n=activationBounds(e.from),l=activationBounds(e.to),r=n[0]<=l[0]?1:0,a=n[0]<l[0]?0:1,o=n.concat(l),s=Math.abs(l[a]-n[r]);return{width:Math.max(e.wrap?0:t.width+2*conf.wrapPadding,s+2*conf.wrapPadding,conf.actorWidth),height:0,startx:n[r],stopx:l[a],starty:0,stopy:0,text:e.text,type:e.type,wrap:e.wrap,fromBound:Math.min.apply(null,o),toBound:Math.max.apply(null,o),attrs:e.attrs,itemId:e.itemId}},buildNoteModel=function(e){const t=model.actorAttrsMap.get(e.from),A=model.actorAttrsMap.get(e.to),n=t.x,l=A.x,r=e.wrap&&e.text;let a=calculateTextDimensions(e.text,noteFont(conf));const o={width:r?conf.noteWidth:Math.max(conf.noteWidth,a.width+2*conf.noteMargin),height:0,startx:t.x,stopx:0,starty:0,stopy:0,text:e.text};return e.placement===PLACEMENT.RIGHTOF?(o.width=r?Math.max(conf.noteWidth,a.width):Math.max(t.width/2+A.width/2,a.width+2*conf.noteMargin),o.startx=n+(t.width+conf.actorMargin)/2):e.placement===PLACEMENT.LEFTOF?(o.width=r?Math.max(conf.noteWidth,a.width+2*conf.noteMargin):Math.max(t.width/2+A.width/2,a.width+2*conf.noteMargin),o.startx=n-o.width+(t.width-conf.actorMargin)/2):e.to===e.from?(a=calculateTextDimensions(e.text,noteFont(conf)),o.width=r?Math.max(conf.noteWidth,t.width):Math.max(t.width,conf.noteWidth,a.width+2*conf.noteMargin),o.startx=n+(t.width-o.width)/2):(o.width=Math.abs(n+t.width/2-(l+A.width/2))+conf.actorMargin,o.startx=n<l?n+t.width/2-conf.actorMargin/2:l+A.width/2-conf.actorMargin/2),logger.debug(`NM:[${o.startx},${o.stopx},${o.starty},${o.stopy}:${o.width},${o.height}=${e.text}]`),o};function calcLoopMinWidths(e){const t={},A=messageFont(conf);e.forEach((e=>{switch(e.type){case LINETYPE.LOOP_START:case LINETYPE.ALT_START:case LINETYPE.OPT_START:case LINETYPE.PAR_START:e.id||(e.id=makeid(10));const n=GROUP_LABEL_MAP[e.type],l=n?calculateTextDimensions(n,A).width:conf.labelBoxWidth,r=calculateTextDimensions(e.text,A).width;t[e.id]=l+r+2*conf.boxTextMargin}})),model.loopMinWidths=t}var calculateLoopBounds=function(e){const t={},A=[];let n,l,r;return e.forEach((function(e){switch(e.id||(e.id=makeid(10)),e.type){case LINETYPE.LOOP_START:case LINETYPE.ALT_START:case LINETYPE.OPT_START:case LINETYPE.PAR_START:const l=model.loopMinWidths[e.id]||0;A.push({id:e.id,msg:e.text,from:Number.MAX_SAFE_INTEGER,to:Number.MIN_SAFE_INTEGER,width:l});break;case LINETYPE.ALT_ELSE:case LINETYPE.PAR_AND:e.text&&(n=A[A.length-1],t[n.id]=n,t[e.id]=n);break;case LINETYPE.LOOP_END:case LINETYPE.ALT_END:case LINETYPE.OPT_END:case LINETYPE.PAR_END:n=A.pop(),t[n.id]=n;break;case LINETYPE.ACTIVE_START:{const t=e.from||e.to,A=model.actorAttrsMap.get(t),n=actorActivations(e.from?e.from:e.to).length,l=A.x+A.width/2+(n-1)*conf.activationWidth/2,r={startx:l,stopx:l+conf.activationWidth,actor:e.from,starty:0,stopy:0,enabled:!0};model.activations.push(r)}break;case LINETYPE.ACTIVE_END:{const t=model.activations.map((e=>e.actor)).lastIndexOf(e.from);delete model.activations.splice(t,1)[0]}}if(void 0!==e.placement)l=buildNoteModel(e),model.noteModelMap.set(e.id,l),A.forEach((e=>{n=e,n.from=Math.min(n.from,l.startx),n.to=Math.max(n.to,l.startx+l.width),n.width=Math.max(n.width,Math.abs(n.from-n.to))-conf.labelBoxWidth}));else if(e.type===LINETYPE.DIVIDER){const t=buildMessageModel(e);model.dividerMap.set(e.id,t)}else if(r=buildMessageModel(e),model.msgModelMap.set(e.id,r),r.startx&&r.stopx&&A.length>0){const t=r.startx===r.stopx;A.forEach((A=>{if(n=A,t){const t=model.actorAttrsMap.get(e.from),A=model.actorAttrsMap.get(e.to);n.from=Math.min(t.x-r.width/2,t.x-t.width/2,n.from),n.to=Math.max(A.x+r.width/2,A.x+t.width/2,n.to),n.width=Math.max(n.width,Math.abs(n.to-n.from))-conf.labelBoxWidth}else n.from=Math.min(r.startx,n.from),n.width=Math.max(n.width,r.width),n.to=Math.max(r.stopx,n.to,n.from+n.width)}))}})),logger.debug("Loop type widths:",t),t},artist_default=sequenceArtist,moo=__toESM(require_moo()),LETTER_REGEXP=/[a-zA-Z]/,isCharLetter=e=>LETTER_REGEXP.test(e);function textToCaseInsensitiveRegex(e){const t=e.split("").map((e=>isCharLetter(e)?`[${e.toLowerCase()}${e.toUpperCase()}]`:e));return new RegExp(t.join(""))}function tv(e){return e&&"value"in e?e.value:e}var VALID_TEXT_REGEXP=/(?:[a-zA-Z0-9_]\p{Unified_Ideograph})+/,COLOR_REGEXP=/#[a-zA-Z0-9]+/,MOO_NEWLINE={match:/\n|\r\n/,lineBreaks:!0},COMMENT_LINE_REGEXP=/%%.*/,L_PAREN_REGEXP=/\(/,R_PAREN_REGEXP=/\)/,QUOTED_WORD_REGEXP=/"(?:\\["nr]|[^"])+"/,CONFIG_DIRECTIVE=/@config/,configLexerMainState={CONFIG_DIRECTIVE:{match:CONFIG_DIRECTIVE,push:"configStatement"}},configLexerconfigStatementState={QUOTED_WORD:QUOTED_WORD_REGEXP,L_PAREN:L_PAREN_REGEXP,R_PAREN:{match:R_PAREN_REGEXP,pop:1}};function getQuotedWord(e){const t=tv(e);return t.slice(1,t.length-1).replace(/\\"/g,'"')}function makeNth(e){return function(t){return t[e]}}function id(e){return e[0]}var COLOR=/#[a-zA-Z0-9]+/,PARAM_DIRECTIVE=/@param/,CONFIG_DIRECTIVE2=/@config/,L_PAREN=/\(/,R_PAREN=/\)/;function getTokenValue(e){return e&&"value"in e?e.value:e}function handleConfigOpenCloseStatement(e){const t=e[2].map((e=>e.type?getTokenValue(e):e)).join("");try{return{type:"overrideConfig",value:JSON.parse(t)}}catch(e){return{type:"overrideConfig",error:e}}}var COMMENT_LINE=/%%.*/,_PLACEMENT=[{match:/left\sof/,type:()=>"LEFT_OF"},{match:/right\sof/,type:()=>"RIGHT_OF"},{match:/over/,type:()=>"OVER"}],lexer=moo.states({main:{NL:MOO_NEWLINE,WS:{match:/ +/,lineBreaks:!1},...configLexerMainState,QUOTED_WORD:QUOTED_WORD_REGEXP,NOTE:textToCaseInsensitiveRegex("@note"),START_NOTE:{match:/@start_note\s/,push:"noteState"},BACKQUOTED_TEXT:/`[^`]*`/,SOLID_ARROW:/->>/,DOTTED_ARROW:/-->>/,SOLID_OPEN_ARROW:/->/,DOTTED_OPEN_ARROW:/-->/,SOLID_CROSS:/\-x/,DOTTED_CROSS:/\-\-x/,SOLID_POINT:/\-[\)]/,DOTTED_POINT:/\-\-[\)]/,PLUS:/\+/,MINUS:/-/,COMMA:/,/,COLON:{match:/:/,push:"line"},L_SQ_BRACKET:{match:/\[/},R_SQ_BRACKET:{match:/\]/},L_AN_BRACKET:{match:/\</},R_AN_BRACKET:{match:/\>/},L_PAREN:L_PAREN_REGEXP,R_PAREN:R_PAREN_REGEXP,_PLACEMENT:_PLACEMENT,COLOR:/#[a-zA-Z0-9]+/,COMMENT_LINE:COMMENT_LINE_REGEXP,WORD:{match:VALID_TEXT_REGEXP,fallback:!0}},line:{REST_OF_LINE:{match:/[^#\n;]+/,pop:1}},configStatement:{...configLexerconfigStatementState,WORD:{match:VALID_TEXT_REGEXP,fallback:!0}},noteState:{_PLACEMENT:_PLACEMENT,END_NOTE:{match:textToCaseInsensitiveRegex("@end_note"),pop:1},NL:MOO_NEWLINE,COMMA:/,/,WORD:{match:VALID_TEXT_REGEXP,fallback:!0}}}),yy;function setYY(e){yy=e}var grammar={Lexer:lexer,ParserRules:[{name:"_$ebnf$1",symbols:[]},{name:"_$ebnf$1",symbols:["_$ebnf$1","wschar"],postprocess:e=>e[0].concat([e[1]])},{name:"_",symbols:["_$ebnf$1"],postprocess:function(e){return null}},{name:"__$ebnf$1",symbols:["wschar"]},{name:"__$ebnf$1",symbols:["__$ebnf$1","wschar"],postprocess:e=>e[0].concat([e[1]])},{name:"__",symbols:["__$ebnf$1"],postprocess:function(e){return null}},{name:"wschar",symbols:[/[ \t\n\v\f\r]/],postprocess:id},{name:"color",symbols:[COLOR],postprocess:e=>tv(e[0])},{name:"paramStatement",symbols:[PARAM_DIRECTIVE,"__","paramPart"],postprocess:function(e){return e[2]}},{name:"paramStatement$ebnf$1",symbols:[]},{name:"paramStatement$ebnf$1$subexpression$1",symbols:[/[\n]/,"_","paramPart"]},{name:"paramStatement$ebnf$1",symbols:["paramStatement$ebnf$1","paramStatement$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"paramStatement",symbols:[PARAM_DIRECTIVE,"__",{literal:"{"},"_","paramStatement$ebnf$1",/[\n]/,"_",{literal:"}"}],postprocess:function(e){const t=[];return e[4].forEach((e=>{t.push(e[2])})),t}},{name:"paramPart$ebnf$1",symbols:[/[a-zA-Z0-9]/]},{name:"paramPart$ebnf$1",symbols:["paramPart$ebnf$1",/[a-zA-Z0-9]/],postprocess:e=>e[0].concat([e[1]])},{name:"paramPart$ebnf$2",symbols:[/[^ \n]/]},{name:"paramPart$ebnf$2",symbols:["paramPart$ebnf$2",/[^ \n]/],postprocess:e=>e[0].concat([e[1]])},{name:"paramPart",symbols:["paramPart$ebnf$1","__","paramPart$ebnf$2"],postprocess:function(e){const t=e[0].map((e=>tv(e))).join("");let A=e[2];return"string"!=typeof A&&(A=A.map((e=>tv(e))).join("")),{type:"addParam",key:t,value:A}}},{name:"configStatement$ebnf$1",symbols:[/[^\)]/]},{name:"configStatement$ebnf$1",symbols:["configStatement$ebnf$1",/[^\)]/],postprocess:e=>e[0].concat([e[1]])},{name:"configStatement",symbols:[CONFIG_DIRECTIVE2,{literal:"("},"configStatement$ebnf$1",{literal:")"}],postprocess:handleConfigOpenCloseStatement},{name:"configOpenCloseStatement$ebnf$1",symbols:[/[^\)]/]},{name:"configOpenCloseStatement$ebnf$1",symbols:["configOpenCloseStatement$ebnf$1",/[^\)]/],postprocess:e=>e[0].concat([e[1]])},{name:"configOpenCloseStatement",symbols:[CONFIG_DIRECTIVE2,L_PAREN,"configOpenCloseStatement$ebnf$1",R_PAREN],postprocess:handleConfigOpenCloseStatement},{name:"comment",symbols:[COMMENT_LINE],postprocess:e=>null},{name:"start",symbols:["__","start"],postprocess:e=>e[1]},{name:"start",symbols:[{literal:"sequenceDiagram"},"document"],postprocess:function(e){return e[1]}},{name:"document",symbols:[]},{name:"document",symbols:["document","line"],postprocess:e=>e[0].concat(e[1])},{name:"line$ebnf$1",symbols:[lexer.has("WS")?{type:"WS"}:WS],postprocess:id},{name:"line$ebnf$1",symbols:[],postprocess:()=>null},{name:"line",symbols:["line$ebnf$1","statement"],postprocess:e=>e[1]},{name:"line$ebnf$2",symbols:[lexer.has("WS")?{type:"WS"}:WS],postprocess:id},{name:"line$ebnf$2",symbols:[],postprocess:()=>null},{name:"line",symbols:["line$ebnf$2",lexer.has("NL")?{type:"NL"}:NL],postprocess:null},{name:"statement",symbols:["participantStatement"],postprocess:id},{name:"statement$ebnf$1",symbols:["color"],postprocess:id},{name:"statement$ebnf$1",symbols:[],postprocess:()=>null},{name:"statement$ebnf$2",symbols:[lexer.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD],postprocess:id},{name:"statement$ebnf$2",symbols:[],postprocess:()=>null},{name:"statement$ebnf$3",symbols:[]},{name:"statement$ebnf$3",symbols:["statement$ebnf$3","participantStatement"],postprocess:e=>e[0].concat([e[1]])},{name:"statement",symbols:[{literal:"box"},"statement$ebnf$1","statement$ebnf$2",lexer.has("NL")?{type:"NL"}:NL,"statement$ebnf$3",{literal:"endbox"},lexer.has("NL")?{type:"NL"}:NL],postprocess:function(e){const t=e[2]?getQuotedWord(e[2]):null,A=e[1]?e[1]:null;return{type:"addBox",text:t,children:e[4],background:A}}},{name:"statement",symbols:["signal",lexer.has("NL")?{type:"NL"}:NL],postprocess:id},{name:"statement$ebnf$4",symbols:[lexer.has("WS")?{type:"WS"}:WS],postprocess:id},{name:"statement$ebnf$4",symbols:[],postprocess:()=>null},{name:"statement",symbols:[{literal:"autonumber"},"statement$ebnf$4",lexer.has("NL")?{type:"NL"}:NL],postprocess:e=>yy.enableSequenceNumbers()},{name:"statement",symbols:[{literal:"activate"},lexer.has("WS")?{type:"WS"}:WS,"actor",lexer.has("NL")?{type:"NL"}:NL],postprocess:function(e){return{type:"activeStart",signalType:yy.LINETYPE.ACTIVE_START,actor:e[2]}}},{name:"statement",symbols:[{literal:"deactivate"},lexer.has("WS")?{type:"WS"}:WS,"actor",lexer.has("NL")?{type:"NL"}:NL],postprocess:function(e){return{type:"activeEnd",signalType:yy.LINETYPE.ACTIVE_END,actor:e[2]}}},{name:"statement",symbols:["noteStatement"],postprocess:e=>e[0]},{name:"statement",symbols:[{literal:"title"},"textWithColon",lexer.has("NL")?{type:"NL"}:NL],postprocess:e=>({type:"setTitle",text:e[1]})},{name:"statement$subexpression$1",symbols:[{literal:"loop"}]},{name:"statement$subexpression$1",symbols:[{literal:"opt"}]},{name:"statement$ebnf$5",symbols:["color"],postprocess:id},{name:"statement$ebnf$5",symbols:[],postprocess:()=>null},{name:"statement",symbols:["statement$subexpression$1",lexer.has("WS")?{type:"WS"}:WS,"statement$ebnf$5","words",lexer.has("NL")?{type:"NL"}:NL,"document","_",{literal:"end"},"_",lexer.has("NL")?{type:"NL"}:NL],postprocess:function(e){const t=tv(e[0][0]);return[{type:"groupStart",text:yy.parseMessage(e[3]),groupType:t,background:e[2]?e[2]:null},e[5],{type:"groupEnd",groupType:t}]}},{name:"statement$subexpression$2",symbols:[{literal:"par"}]},{name:"statement$ebnf$6",symbols:["color"],postprocess:id},{name:"statement$ebnf$6",symbols:[],postprocess:()=>null},{name:"statement",symbols:["statement$subexpression$2",lexer.has("WS")?{type:"WS"}:WS,"statement$ebnf$6","words",lexer.has("NL")?{type:"NL"}:NL,"par_sections","_",{literal:"end"},"_",lexer.has("NL")?{type:"NL"}:NL],postprocess:function(e){const t=tv(e[0][0]);return[{type:"groupStart",text:yy.parseMessage(e[3]),groupType:t,background:e[2]?e[2]:null},e[5],{type:"groupEnd",groupType:t}]}},{name:"statement$subexpression$3",symbols:[{literal:"alt"}]},{name:"statement$ebnf$7",symbols:["color"],postprocess:id},{name:"statement$ebnf$7",symbols:[],postprocess:()=>null},{name:"statement",symbols:["statement$subexpression$3",lexer.has("WS")?{type:"WS"}:WS,"statement$ebnf$7","words",lexer.has("NL")?{type:"NL"}:NL,"else_sections","_",{literal:"end"},"_",lexer.has("NL")?{type:"NL"}:NL],postprocess:function(e){const t=tv(e[0][0]);return[{type:"groupStart",text:yy.parseMessage(e[3]),groupType:t,background:e[2]?e[2]:null},e[5],{type:"groupEnd",groupType:t}]}},{name:"statement$ebnf$8$subexpression$1",symbols:[lexer.has("WORD")?{type:"WORD"}:WORD]},{name:"statement$ebnf$8$subexpression$1",symbols:[lexer.has("WS")?{type:"WS"}:WS]},{name:"statement$ebnf$8",symbols:["statement$ebnf$8$subexpression$1"]},{name:"statement$ebnf$8$subexpression$2",symbols:[lexer.has("WORD")?{type:"WORD"}:WORD]},{name:"statement$ebnf$8$subexpression$2",symbols:[lexer.has("WS")?{type:"WS"}:WS]},{name:"statement$ebnf$8",symbols:["statement$ebnf$8","statement$ebnf$8$subexpression$2"],postprocess:e=>e[0].concat([e[1]])},{name:"statement",symbols:[{literal:"=="},lexer.has("WS")?{type:"WS"}:WS,"statement$ebnf$8",lexer.has("WS")?{type:"WS"}:WS,{literal:"=="},"_",lexer.has("NL")?{type:"NL"}:NL],postprocess:function(e){return{type:"addDivider",text:e[2].map((e=>tv(e[0]))).join("").trim(),signalType:yy.LINETYPE.DIVIDER}}},{name:"statement",symbols:["paramStatement",lexer.has("NL")?{type:"NL"}:NL]},{name:"statement",symbols:["configOpenCloseStatement",lexer.has("NL")?{type:"NL"}:NL]},{name:"statement",symbols:["comment",lexer.has("NL")?{type:"NL"}:NL]},{name:"participantWord",symbols:[{literal:"participant"}]},{name:"classifiableActor",symbols:[lexer.has("L_SQ_BRACKET")?{type:"L_SQ_BRACKET"}:L_SQ_BRACKET,lexer.has("L_AN_BRACKET")?{type:"L_AN_BRACKET"}:L_AN_BRACKET,lexer.has("WORD")?{type:"WORD"}:WORD,lexer.has("R_AN_BRACKET")?{type:"R_AN_BRACKET"}:R_AN_BRACKET,"__","actor",{literal:"]"}],postprocess:function(e){const t=e[5];return t.classifier=tv(e[2]),t}},{name:"classifiableActor",symbols:["actor"],postprocess:id},{name:"participantStatement",symbols:["participantWord",lexer.has("WS")?{type:"WS"}:WS,"classifiableActor",lexer.has("WS")?{type:"WS"}:WS,{literal:"as"},lexer.has("WS")?{type:"WS"}:WS,lexer.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD,lexer.has("NL")?{type:"NL"}:NL],postprocess:function(e){return e[2].description=yy.parseMessage(getQuotedWord(e[6])),e[2]}},{name:"participantStatement",symbols:["participantWord",lexer.has("WS")?{type:"WS"}:WS,"classifiableActor",lexer.has("WS")?{type:"WS"}:WS,{literal:"as"},lexer.has("WS")?{type:"WS"}:WS,"words",lexer.has("NL")?{type:"NL"}:NL],postprocess:function(e){const t=e[6];return e[2].description=yy.parseMessage(t),e[2]}},{name:"participantStatement$ebnf$1",symbols:[lexer.has("WS")?{type:"WS"}:WS],postprocess:id},{name:"participantStatement$ebnf$1",symbols:[],postprocess:()=>null},{name:"participantStatement",symbols:["participantWord",lexer.has("WS")?{type:"WS"}:WS,"classifiableActor","participantStatement$ebnf$1",lexer.has("NL")?{type:"NL"}:NL],postprocess:function(e){return e[2]}},{name:"words$ebnf$1$subexpression$1",symbols:[lexer.has("WORD")?{type:"WORD"}:WORD]},{name:"words$ebnf$1$subexpression$1",symbols:[lexer.has("WS")?{type:"WS"}:WS]},{name:"words$ebnf$1",symbols:["words$ebnf$1$subexpression$1"]},{name:"words$ebnf$1$subexpression$2",symbols:[lexer.has("WORD")?{type:"WORD"}:WORD]},{name:"words$ebnf$1$subexpression$2",symbols:[lexer.has("WS")?{type:"WS"}:WS]},{name:"words$ebnf$1",symbols:["words$ebnf$1","words$ebnf$1$subexpression$2"],postprocess:e=>e[0].concat([e[1]])},{name:"words",symbols:["words$ebnf$1"],postprocess:function(e){return e[0].map((e=>e[0])).map((e=>tv(e))).join("")}},{name:"signaltype",symbols:[lexer.has("SOLID_OPEN_ARROW")?{type:"SOLID_OPEN_ARROW"}:SOLID_OPEN_ARROW],postprocess:e=>yy.LINETYPE.SOLID_OPEN},{name:"signaltype",symbols:[lexer.has("DOTTED_OPEN_ARROW")?{type:"DOTTED_OPEN_ARROW"}:DOTTED_OPEN_ARROW],postprocess:e=>yy.LINETYPE.DOTTED_OPEN},{name:"signaltype",symbols:[lexer.has("SOLID_ARROW")?{type:"SOLID_ARROW"}:SOLID_ARROW],postprocess:e=>yy.LINETYPE.SOLID},{name:"signaltype",symbols:[lexer.has("DOTTED_ARROW")?{type:"DOTTED_ARROW"}:DOTTED_ARROW],postprocess:e=>yy.LINETYPE.DOTTED},{name:"signaltype",symbols:[lexer.has("SOLID_CROSS")?{type:"SOLID_CROSS"}:SOLID_CROSS],postprocess:e=>yy.LINETYPE.SOLID_CROSS},{name:"signaltype",symbols:[lexer.has("DOTTED_CROSS")?{type:"DOTTED_CROSS"}:DOTTED_CROSS],postprocess:e=>yy.LINETYPE.DOTTED_CROSS},{name:"signaltype",symbols:[lexer.has("SOLID_POINT")?{type:"SOLID_POINT"}:SOLID_POINT],postprocess:e=>yy.LINETYPE.SOLID_POINT},{name:"signaltype",symbols:[lexer.has("DOTTED_POINT")?{type:"DOTTED_POINT"}:DOTTED_POINT],postprocess:e=>yy.LINETYPE.DOTTED_POINT},{name:"signal$subexpression$1",symbols:[lexer.has("PLUS")?{type:"PLUS"}:PLUS]},{name:"signal$subexpression$1",symbols:[lexer.has("MINUS")?{type:"MINUS"}:MINUS]},{name:"signal",symbols:["actor","signaltype","signal$subexpression$1","actor","textWithColon"],postprocess:function(e){const t=e[3],A=e[0];let n;return n="MINUS"===e[2][0].type?{type:"activeEnd",signalType:yy.LINETYPE.ACTIVE_END,actor:A}:{type:"activeStart",signalType:yy.LINETYPE.ACTIVE_START,actor:t},[A,t,{type:"addSignal",from:A.actor,to:t.actor,signalType:e[1],msg:e[4]},n]}},{name:"signal",symbols:["actor","signaltype","actor","textWithColon"],postprocess:function(e){const t=e[2];return[e[0],t,{type:"addSignal",from:e[0].actor,to:t.actor,signalType:e[1],msg:e[3]}]}},{name:"actor",symbols:[lexer.has("WORD")?{type:"WORD"}:WORD],postprocess:e=>({type:"addActor",actor:tv(e[0])})},{name:"textWithColon",symbols:[lexer.has("COLON")?{type:"COLON"}:COLON,"_",lexer.has("REST_OF_LINE")?{type:"REST_OF_LINE"}:REST_OF_LINE],postprocess:function(e){return yy.parseMessage(tv(e[2]).trim())}},{name:"multilineNoteText$ebnf$1",symbols:[]},{name:"multilineNoteText$ebnf$1$subexpression$1",symbols:[lexer.has("WORD")?{type:"WORD"}:WORD]},{name:"multilineNoteText$ebnf$1$subexpression$1",symbols:[lexer.has("COMMA")?{type:"COMMA"}:COMMA]},{name:"multilineNoteText$ebnf$1$subexpression$1",symbols:[lexer.has("NL")?{type:"NL"}:NL]},{name:"multilineNoteText$ebnf$1",symbols:["multilineNoteText$ebnf$1","multilineNoteText$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"multilineNoteText",symbols:["multilineNoteText$ebnf$1",lexer.has("END_NOTE")?{type:"END_NOTE"}:END_NOTE],postprocess:function(e){return e[0].map((e=>e.map((e=>tv(e))))).join("")}},{name:"placement",symbols:[lexer.has("LEFT_OF")?{type:"LEFT_OF"}:LEFT_OF],postprocess:e=>yy.PLACEMENT.LEFTOF},{name:"placement",symbols:[lexer.has("RIGHT_OF")?{type:"RIGHT_OF"}:RIGHT_OF],postprocess:e=>yy.PLACEMENT.RIGHTOF},{name:"noteStatement$subexpression$1",symbols:[{literal:"note"}]},{name:"noteStatement$subexpression$1",symbols:[lexer.has("NOTE")?{type:"NOTE"}:NOTE]},{name:"noteStatement",symbols:["noteStatement$subexpression$1","placement","actor","textWithColon",lexer.has("NL")?{type:"NL"}:NL],postprocess:function(e){const t=e[2].actor.trim();return[t,{type:"addNote",placement:e[1],actor:t,text:e[3]}]}},{name:"noteStatement$subexpression$2",symbols:[{literal:"note"}]},{name:"noteStatement$subexpression$2",symbols:[lexer.has("START_NOTE")?{type:"START_NOTE"}:START_NOTE]},{name:"noteStatement",symbols:["noteStatement$subexpression$2","placement","actor",lexer.has("NL")?{type:"NL"}:NL,"multilineNoteText",lexer.has("NL")?{type:"NL"}:NL],postprocess:function(e){const t=yy.parseMessage(e[4]),A=e[2].actor.trim();return[A,{type:"addNote",placement:e[1],actor:A,text:t}]}},{name:"noteStatement$subexpression$3",symbols:[{literal:"note"}]},{name:"noteStatement$subexpression$3",symbols:[lexer.has("NOTE")?{type:"NOTE"}:NOTE]},{name:"noteStatement",symbols:["noteStatement$subexpression$3",lexer.has("OVER")?{type:"OVER"}:OVER,"actor_pair","textWithColon",lexer.has("NL")?{type:"NL"}:NL],postprocess:function(e){const t=[e[2][0].actor.trim(),e[2][1].actor];return[e[2],{type:"addNote",placement:yy.PLACEMENT.OVER,actor:t,text:e[3]}]}},{name:"noteStatement$subexpression$4",symbols:[{literal:"note"}]},{name:"noteStatement$subexpression$4",symbols:[lexer.has("START_NOTE")?{type:"START_NOTE"}:START_NOTE]},{name:"noteStatement",symbols:["noteStatement$subexpression$4",lexer.has("OVER")?{type:"OVER"}:OVER,"actor_pair",lexer.has("NL")?{type:"NL"}:NL,"multilineNoteText",lexer.has("NL")?{type:"NL"}:NL],postprocess:function(e){const t=[e[2][0].actor.trim(),e[2][1].actor],A=yy.parseMessage(e[4]);return[e[2],{type:"addNote",placement:yy.PLACEMENT.OVER,actor:t,text:A}]}},{name:"actor_pair",symbols:["actor",lexer.has("COMMA")?{type:"COMMA"}:COMMA,"actor"],postprocess:e=>[e[0],e[2]]},{name:"actor_pair",symbols:["actor"],postprocess:id},{name:"else_sections",symbols:["document"]},{name:"else_sections$ebnf$1",symbols:["color"],postprocess:id},{name:"else_sections$ebnf$1",symbols:[],postprocess:()=>null},{name:"else_sections",symbols:["document","_",{literal:"else"},lexer.has("WS")?{type:"WS"}:WS,"else_sections$ebnf$1","words",lexer.has("NL")?{type:"NL"}:NL,"else_sections"],postprocess:function(e){const t=e[4]?e[4]:null,A=yy.parseMessage(e[5]);return e[0].concat([{type:"groupStart",groupType:"else",text:A,signalType:yy.LINETYPE.ALT_ELSE,background:t},e[7]])}},{name:"par_sections",symbols:["document"]},{name:"par_sections$ebnf$1",symbols:["color"],postprocess:id},{name:"par_sections$ebnf$1",symbols:[],postprocess:()=>null},{name:"par_sections",symbols:["document","_",{literal:"and"},lexer.has("WS")?{type:"WS"}:WS,"par_sections$ebnf$1","words",lexer.has("NL")?{type:"NL"}:NL,"par_sections"],postprocess:function(e){const t=e[4]?e[4]:null,A=yy.parseMessage(e[5]);return e[0].concat([{type:"groupStart",groupType:"and",text:A,signalType:yy.LINETYPE.PAR_AND,background:t},e[7]])}}],ParserStart:"start",ParserOptions:{skipUnmatchSymbols:[lexer.has("WS")?{type:"WS"}:WS]}},sequenceDiagram_default=grammar,import_nearley=__toESM(require_nearley());function genParserWithRules(e,t={}){return function(A){const n=new import_nearley.default.Parser(import_nearley.default.Grammar.fromCompiled(e));t.prepare&&t.prepare();let l=A;l=l.split("\n").filter((e=>e.length>0)).join("\n");const r="\n"!==l[l.length-1]?l+"\n":l;n.feed(r);let a=compact(n.results);return t.dedupeAmbigousResults&&Array.isArray(a[0])&&(a=a[0]),t.postProcess&&(a=t.postProcess(a)),a}}setYY(db_default);var parse=genParserWithRules(sequenceDiagram_default,{dedupeAmbigousResults:!0,postProcess:e=>(db_default.apply(e),e)}),BaseEventRecognizer=class{constructor(){this.rules=[]}recognize(e,t){let A;if(e.markPath)for(const n of e.markPath)if(n.itemId)for(const l of this.rules)if(l.match(n)&&(A=l.createDiagramEvent(e,n,t)),A)break;return A}addPatternRecognizerRule(e,t){const A={match:t=>e.test(t.itemId),createDiagramEvent:t};return this.rules.push(A),this}},ACTOR_ITEM_PATTERN=/^actor\-/,MESSAGE_ITEM_PATTERN=/^message\-/,createSequenceDiagramEvent=diagramEventMakerFactory("sequence"),eventRecognizer=(new BaseEventRecognizer).addPatternRecognizerRule(ACTOR_ITEM_PATTERN,((e,t,A)=>{const n=A.actors[t.itemId.replace(ACTOR_ITEM_PATTERN,"")];return createSequenceDiagramEvent(e,t,t.itemId,"actor",n)})).addPatternRecognizerRule(MESSAGE_ITEM_PATTERN,((e,t,A)=>{const n=A.messages.find((e=>e.itemId===t.itemId));return createSequenceDiagramEvent(e,t,t.itemId,"message",n)})),sequenceDiagram={pattern:/^\s*sequenceDiagram/,parser:{parse:e=>(parse(e),db.getDiagramIR())},artist:artist_default,configKey:"sequence",eventRecognizer:eventRecognizer,clear(){db.clear()}},Cardinality,Identification;!function(e){e.ZERO_OR_ONE="ZERO_OR_ONE",e.ZERO_OR_MORE="ZERO_OR_MORE",e.ONE_OR_MORE="ONE_OR_MORE",e.ONLY_ONE="ONLY_ONE",e.MORE="MORE"}(Cardinality||(Cardinality={})),function(e){e.NON_IDENTIFYING="NON_IDENTIFYING",e.IDENTIFYING="IDENTIFYING"}(Identification||(Identification={}));var ErDb=class extends BaseDb{constructor(){super(...arguments),this.Cardinality=Cardinality,this.Identification=Identification,this.entities={},this.relationships=[],this.inheritances=[]}addEntity(e){return this.entities[e]||(this.entities[e]={attributes:[],itemId:`entity-${e}`}),this.entities[e]}addRelationship(e,t,A,n){const l={entityA:e,roleA:t,entityB:A,relSpec:n,itemId:`relationship-${e}-${A}`};this.relationships.push(l)}addInheritance(e,t){this.inheritances.push({sup:e,sub:t})}getDiagramIR(){return{...super.getBaseDiagramIR(),entities:this.entities,relationships:this.relationships,inheritances:this.inheritances}}addTitle(e){this.title=e}addAttributes(e,t){this.addEntity(e).attributes.push(...t)}addParam(e){this.configParams.push(e)}clear(){super.clear(),this.entities={},this.relationships=[],this.inheritances=[],this.configParams=[],this.title=""}},db2=new ErDb,db_default2=db2,defaultConfig2={diagramPadding:15,layoutDirection:"TB",ranksep:100,edgesep:80,edgeType:"polyline",useMaxWidth:!1,minEntityWidth:80,minEntityHeight:50,entityPaddingX:15,entityPaddingY:15,borderRadius:2,stroke:PALETTE.normalDark,fill:PALETTE.orange,edgeColor:PALETTE.normalDark,attributeFill:"#fffbf9",textColor:PALETTE.normalDark,labelBackground:PALETTE.white,fontSize:14,fontFamily:DEFAULT_FONT_FAMILY},ER_PARAM_DIRECTIVE_RULES={...getParamRulesFromConfig(defaultConfig2),useMaxWidth:{valueType:"boolean"},layoutDirection:{valueType:"string"},borderRadius:{valueType:"size"},stroke:{valueType:"color"},fill:{valueType:"color"},edgeColor:{valueType:"color"},attributeFill:{valueType:"color"},textColor:{valueType:"color"},labelBackground:{valueType:"color"},fontSize:{valueType:"size"},fontFamily:{valueType:"string"}},configKey2="er",configurator2=makeConfigurator({defaultConfig:defaultConfig2,configKey:configKey2,getConfigFromParamDirectives:e=>interpreteConfigs(ER_PARAM_DIRECTIVE_RULES,e),getConfigFromTheme:(e,t)=>({stroke:e.primaryBorderColor,fill:e.primaryColor,edgeColor:e.primaryLineColor,textColor:e.textColor,labelBackground:e.canvasBackground||e.background1,attributeFill:e.lightestBackground||t.attributeFill})}),getConf2=configurator2.getConfig,objectProto$d=Object.prototype,hasOwnProperty$a=objectProto$d.hasOwnProperty;function baseHas(e,t){return null!=e&&hasOwnProperty$a.call(e,t)}var isArray=Array.isArray,freeGlobal="object"==typeof global&&global&&global.Object===Object&&global,freeSelf="object"==typeof self&&self&&self.Object===Object&&self,root=freeGlobal||freeSelf||Function("return this")(),Symbol2=root.Symbol,objectProto$c=Object.prototype,hasOwnProperty$9=objectProto$c.hasOwnProperty,nativeObjectToString$1=objectProto$c.toString,symToStringTag$1=Symbol2?Symbol2.toStringTag:void 0;function getRawTag(e){var t=hasOwnProperty$9.call(e,symToStringTag$1),A=e[symToStringTag$1];try{e[symToStringTag$1]=void 0;var n=!0}catch(e){}var l=nativeObjectToString$1.call(e);return n&&(t?e[symToStringTag$1]=A:delete e[symToStringTag$1]),l}var objectProto$b=Object.prototype,nativeObjectToString=objectProto$b.toString;function objectToString(e){return nativeObjectToString.call(e)}var nullTag="[object Null]",undefinedTag="[object Undefined]",symToStringTag=Symbol2?Symbol2.toStringTag:void 0;function baseGetTag(e){return null==e?void 0===e?undefinedTag:nullTag:symToStringTag&&symToStringTag in Object(e)?getRawTag(e):objectToString(e)}function isObjectLike(e){return null!=e&&"object"==typeof e}var symbolTag$1="[object Symbol]";function isSymbol(e){return"symbol"==typeof e||isObjectLike(e)&&baseGetTag(e)==symbolTag$1}var reIsDeepProp=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,reIsPlainProp=/^\w*$/;function isKey(e,t){if(isArray(e))return!1;var A=typeof e;return!("number"!=A&&"symbol"!=A&&"boolean"!=A&&null!=e&&!isSymbol(e))||(reIsPlainProp.test(e)||!reIsDeepProp.test(e)||null!=t&&e in Object(t))}function isObject(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}var asyncTag="[object AsyncFunction]",funcTag$1="[object Function]",genTag="[object GeneratorFunction]",proxyTag="[object Proxy]";function isFunction(e){if(!isObject(e))return!1;var t=baseGetTag(e);return t==funcTag$1||t==genTag||t==asyncTag||t==proxyTag}var coreJsData=root["__core-js_shared__"],maskSrcKey=function(){var e=/[^.]+$/.exec(coreJsData&&coreJsData.keys&&coreJsData.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}();function isMasked(e){return!!maskSrcKey&&maskSrcKey in e}var funcProto$1=Function.prototype,funcToString$1=funcProto$1.toString;function toSource(e){if(null!=e){try{return funcToString$1.call(e)}catch(e){}try{return e+""}catch(e){}}return""}var reRegExpChar=/[\\^$.*+?()[\]{}|]/g,reIsHostCtor=/^\[object .+?Constructor\]$/,funcProto=Function.prototype,objectProto$a=Object.prototype,funcToString=funcProto.toString,hasOwnProperty$8=objectProto$a.hasOwnProperty,reIsNative=RegExp("^"+funcToString.call(hasOwnProperty$8).replace(reRegExpChar,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function baseIsNative(e){return!(!isObject(e)||isMasked(e))&&(isFunction(e)?reIsNative:reIsHostCtor).test(toSource(e))}function getValue(e,t){return null==e?void 0:e[t]}function getNative(e,t){var A=getValue(e,t);return baseIsNative(A)?A:void 0}var nativeCreate=getNative(Object,"create");function hashClear(){this.__data__=nativeCreate?nativeCreate(null):{},this.size=0}function hashDelete(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}var HASH_UNDEFINED$2="__lodash_hash_undefined__",objectProto$9=Object.prototype,hasOwnProperty$7=objectProto$9.hasOwnProperty;function hashGet(e){var t=this.__data__;if(nativeCreate){var A=t[e];return A===HASH_UNDEFINED$2?void 0:A}return hasOwnProperty$7.call(t,e)?t[e]:void 0}var objectProto$8=Object.prototype,hasOwnProperty$6=objectProto$8.hasOwnProperty;function hashHas(e){var t=this.__data__;return nativeCreate?void 0!==t[e]:hasOwnProperty$6.call(t,e)}var HASH_UNDEFINED$1="__lodash_hash_undefined__";function hashSet(e,t){var A=this.__data__;return this.size+=this.has(e)?0:1,A[e]=nativeCreate&&void 0===t?HASH_UNDEFINED$1:t,this}function Hash(e){var t=-1,A=null==e?0:e.length;for(this.clear();++t<A;){var n=e[t];this.set(n[0],n[1])}}function listCacheClear(){this.__data__=[],this.size=0}function eq(e,t){return e===t||e!=e&&t!=t}function assocIndexOf(e,t){for(var A=e.length;A--;)if(eq(e[A][0],t))return A;return-1}Hash.prototype.clear=hashClear,Hash.prototype.delete=hashDelete,Hash.prototype.get=hashGet,Hash.prototype.has=hashHas,Hash.prototype.set=hashSet;var arrayProto=Array.prototype,splice=arrayProto.splice;function listCacheDelete(e){var t=this.__data__,A=assocIndexOf(t,e);return!(A<0)&&(A==t.length-1?t.pop():splice.call(t,A,1),--this.size,!0)}function listCacheGet(e){var t=this.__data__,A=assocIndexOf(t,e);return A<0?void 0:t[A][1]}function listCacheHas(e){return assocIndexOf(this.__data__,e)>-1}function listCacheSet(e,t){var A=this.__data__,n=assocIndexOf(A,e);return n<0?(++this.size,A.push([e,t])):A[n][1]=t,this}function ListCache(e){var t=-1,A=null==e?0:e.length;for(this.clear();++t<A;){var n=e[t];this.set(n[0],n[1])}}ListCache.prototype.clear=listCacheClear,ListCache.prototype.delete=listCacheDelete,ListCache.prototype.get=listCacheGet,ListCache.prototype.has=listCacheHas,ListCache.prototype.set=listCacheSet;var Map2=getNative(root,"Map");function mapCacheClear(){this.size=0,this.__data__={hash:new Hash,map:new(Map2||ListCache),string:new Hash}}function isKeyable(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}function getMapData(e,t){var A=e.__data__;return isKeyable(t)?A["string"==typeof t?"string":"hash"]:A.map}function mapCacheDelete(e){var t=getMapData(this,e).delete(e);return this.size-=t?1:0,t}function mapCacheGet(e){return getMapData(this,e).get(e)}function mapCacheHas(e){return getMapData(this,e).has(e)}function mapCacheSet(e,t){var A=getMapData(this,e),n=A.size;return A.set(e,t),this.size+=A.size==n?0:1,this}function MapCache(e){var t=-1,A=null==e?0:e.length;for(this.clear();++t<A;){var n=e[t];this.set(n[0],n[1])}}MapCache.prototype.clear=mapCacheClear,MapCache.prototype.delete=mapCacheDelete,MapCache.prototype.get=mapCacheGet,MapCache.prototype.has=mapCacheHas,MapCache.prototype.set=mapCacheSet;var FUNC_ERROR_TEXT="Expected a function";function memoize(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new TypeError(FUNC_ERROR_TEXT);var A=function(){var n=arguments,l=t?t.apply(this,n):n[0],r=A.cache;if(r.has(l))return r.get(l);var a=e.apply(this,n);return A.cache=r.set(l,a)||r,a};return A.cache=new(memoize.Cache||MapCache),A}memoize.Cache=MapCache;var MAX_MEMOIZE_SIZE=500;function memoizeCapped(e){var t=memoize(e,(function(e){return A.size===MAX_MEMOIZE_SIZE&&A.clear(),e})),A=t.cache;return t}var rePropName=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,reEscapeChar=/\\(\\)?/g,stringToPath=memoizeCapped((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(rePropName,(function(e,A,n,l){t.push(n?l.replace(reEscapeChar,"$1"):A||e)})),t}));function arrayMap(e,t){for(var A=-1,n=null==e?0:e.length,l=Array(n);++A<n;)l[A]=t(e[A],A,e);return l}var INFINITY$2=1/0,symbolProto$1=Symbol2?Symbol2.prototype:void 0,symbolToString=symbolProto$1?symbolProto$1.toString:void 0;function baseToString(e){if("string"==typeof e)return e;if(isArray(e))return arrayMap(e,baseToString)+"";if(isSymbol(e))return symbolToString?symbolToString.call(e):"";var t=e+"";return"0"==t&&1/e==-INFINITY$2?"-0":t}function toString(e){return null==e?"":baseToString(e)}function castPath(e,t){return isArray(e)?e:isKey(e,t)?[e]:stringToPath(toString(e))}var argsTag$2="[object Arguments]";function baseIsArguments(e){return isObjectLike(e)&&baseGetTag(e)==argsTag$2}var objectProto$7=Object.prototype,hasOwnProperty$5=objectProto$7.hasOwnProperty,propertyIsEnumerable$1=objectProto$7.propertyIsEnumerable,isArguments=baseIsArguments(function(){return arguments}())?baseIsArguments:function(e){return isObjectLike(e)&&hasOwnProperty$5.call(e,"callee")&&!propertyIsEnumerable$1.call(e,"callee")},MAX_SAFE_INTEGER$1=9007199254740991,reIsUint=/^(?:0|[1-9]\d*)$/;function isIndex(e,t){var A=typeof e;return!!(t=null==t?MAX_SAFE_INTEGER$1:t)&&("number"==A||"symbol"!=A&&reIsUint.test(e))&&e>-1&&e%1==0&&e<t}var MAX_SAFE_INTEGER=9007199254740991;function isLength(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=MAX_SAFE_INTEGER}var INFINITY$1=1/0;function toKey(e){if("string"==typeof e||isSymbol(e))return e;var t=e+"";return"0"==t&&1/e==-INFINITY$1?"-0":t}function hasPath(e,t,A){for(var n=-1,l=(t=castPath(t,e)).length,r=!1;++n<l;){var a=toKey(t[n]);if(!(r=null!=e&&A(e,a)))break;e=e[a]}return r||++n!=l?r:!!(l=null==e?0:e.length)&&isLength(l)&&isIndex(a,l)&&(isArray(e)||isArguments(e))}function has(e,t){return null!=e&&hasPath(e,t,baseHas)}function arrayEach(e,t){for(var A=-1,n=null==e?0:e.length;++A<n&&!1!==t(e[A],A,e););return e}function createBaseFor(e){return function(t,A,n){for(var l=-1,r=Object(t),a=n(t),o=a.length;o--;){var s=a[e?o:++l];if(!1===A(r[s],s,r))break}return t}}var baseFor=createBaseFor();function baseTimes(e,t){for(var A=-1,n=Array(e);++A<e;)n[A]=t(A);return n}function stubFalse(){return!1}var freeExports$1="object"==typeof exports&&exports&&!exports.nodeType&&exports,freeModule$1=freeExports$1&&"object"==typeof module&&module&&!module.nodeType&&module,moduleExports$1=freeModule$1&&freeModule$1.exports===freeExports$1,Buffer2=moduleExports$1?root.Buffer:void 0,nativeIsBuffer=Buffer2?Buffer2.isBuffer:void 0,isBuffer=nativeIsBuffer||stubFalse,argsTag$1="[object Arguments]",arrayTag$1="[object Array]",boolTag$1="[object Boolean]",dateTag$1="[object Date]",errorTag$1="[object Error]",funcTag="[object Function]",mapTag$4="[object Map]",numberTag$1="[object Number]",objectTag$2="[object Object]",regexpTag$1="[object RegExp]",setTag$4="[object Set]",stringTag$2="[object String]",weakMapTag$1="[object WeakMap]",arrayBufferTag$1="[object ArrayBuffer]",dataViewTag$2="[object DataView]",float32Tag="[object Float32Array]",float64Tag="[object Float64Array]",int8Tag="[object Int8Array]",int16Tag="[object Int16Array]",int32Tag="[object Int32Array]",uint8Tag="[object Uint8Array]",uint8ClampedTag="[object Uint8ClampedArray]",uint16Tag="[object Uint16Array]",uint32Tag="[object Uint32Array]",typedArrayTags={};function baseIsTypedArray(e){return isObjectLike(e)&&isLength(e.length)&&!!typedArrayTags[baseGetTag(e)]}function baseUnary(e){return function(t){return e(t)}}typedArrayTags[float32Tag]=typedArrayTags[float64Tag]=typedArrayTags[int8Tag]=typedArrayTags[int16Tag]=typedArrayTags[int32Tag]=typedArrayTags[uint8Tag]=typedArrayTags[uint8ClampedTag]=typedArrayTags[uint16Tag]=typedArrayTags[uint32Tag]=!0,typedArrayTags[argsTag$1]=typedArrayTags[arrayTag$1]=typedArrayTags[arrayBufferTag$1]=typedArrayTags[boolTag$1]=typedArrayTags[dataViewTag$2]=typedArrayTags[dateTag$1]=typedArrayTags[errorTag$1]=typedArrayTags[funcTag]=typedArrayTags[mapTag$4]=typedArrayTags[numberTag$1]=typedArrayTags[objectTag$2]=typedArrayTags[regexpTag$1]=typedArrayTags[setTag$4]=typedArrayTags[stringTag$2]=typedArrayTags[weakMapTag$1]=!1;var freeExports="object"==typeof exports&&exports&&!exports.nodeType&&exports,freeModule=freeExports&&"object"==typeof module&&module&&!module.nodeType&&module,moduleExports=freeModule&&freeModule.exports===freeExports,freeProcess=moduleExports&&freeGlobal.process,nodeUtil=function(){try{var e=freeModule&&freeModule.require&&freeModule.require("util").types;return e||freeProcess&&freeProcess.binding&&freeProcess.binding("util")}catch(e){}}(),nodeIsTypedArray=nodeUtil&&nodeUtil.isTypedArray,isTypedArray=nodeIsTypedArray?baseUnary(nodeIsTypedArray):baseIsTypedArray,objectProto$6=Object.prototype,hasOwnProperty$4=objectProto$6.hasOwnProperty;function arrayLikeKeys(e,t){var A=isArray(e),n=!A&&isArguments(e),l=!A&&!n&&isBuffer(e),r=!A&&!n&&!l&&isTypedArray(e),a=A||n||l||r,o=a?baseTimes(e.length,String):[],s=o.length;for(var i in e)!t&&!hasOwnProperty$4.call(e,i)||a&&("length"==i||l&&("offset"==i||"parent"==i)||r&&("buffer"==i||"byteLength"==i||"byteOffset"==i)||isIndex(i,s))||o.push(i);return o}var objectProto$5=Object.prototype;function isPrototype(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||objectProto$5)}function overArg(e,t){return function(A){return e(t(A))}}var nativeKeys=overArg(Object.keys,Object),objectProto$4=Object.prototype,hasOwnProperty$3=objectProto$4.hasOwnProperty;function baseKeys(e){if(!isPrototype(e))return nativeKeys(e);var t=[];for(var A in Object(e))hasOwnProperty$3.call(e,A)&&"constructor"!=A&&t.push(A);return t}function isArrayLike(e){return null!=e&&isLength(e.length)&&!isFunction(e)}function keys(e){return isArrayLike(e)?arrayLikeKeys(e):baseKeys(e)}function baseForOwn(e,t){return e&&baseFor(e,t,keys)}function createBaseEach(e,t){return function(A,n){if(null==A)return A;if(!isArrayLike(A))return e(A,n);for(var l=A.length,r=t?l:-1,a=Object(A);(t?r--:++r<l)&&!1!==n(a[r],r,a););return A}}var baseEach=createBaseEach(baseForOwn);function identity2(e){return e}function castFunction(e){return"function"==typeof e?e:identity2}function forEach2(e,t){return(isArray(e)?arrayEach:baseEach)(e,castFunction(t))}var DataView2=getNative(root,"DataView"),Promise$1=getNative(root,"Promise"),Set2=getNative(root,"Set"),WeakMap2=getNative(root,"WeakMap"),mapTag$3="[object Map]",objectTag$1="[object Object]",promiseTag="[object Promise]",setTag$3="[object Set]",weakMapTag="[object WeakMap]",dataViewTag$1="[object DataView]",dataViewCtorString=toSource(DataView2),mapCtorString=toSource(Map2),promiseCtorString=toSource(Promise$1),setCtorString=toSource(Set2),weakMapCtorString=toSource(WeakMap2),getTag=baseGetTag;(DataView2&&getTag(new DataView2(new ArrayBuffer(1)))!=dataViewTag$1||Map2&&getTag(new Map2)!=mapTag$3||Promise$1&&getTag(Promise$1.resolve())!=promiseTag||Set2&&getTag(new Set2)!=setTag$3||WeakMap2&&getTag(new WeakMap2)!=weakMapTag)&&(getTag=function(e){var t=baseGetTag(e),A=t==objectTag$1?e.constructor:void 0,n=A?toSource(A):"";if(n)switch(n){case dataViewCtorString:return dataViewTag$1;case mapCtorString:return mapTag$3;case promiseCtorString:return promiseTag;case setCtorString:return setTag$3;case weakMapCtorString:return weakMapTag}return t});var getTag$1=getTag,stringTag$1="[object String]";function isString(e){return"string"==typeof e||!isArray(e)&&isObjectLike(e)&&baseGetTag(e)==stringTag$1}function baseProperty(e){return function(t){return null==t?void 0:t[e]}}var asciiSize=baseProperty("length"),rsAstralRange$1="\\ud800-\\udfff",rsComboMarksRange$1="\\u0300-\\u036f",reComboHalfMarksRange$1="\\ufe20-\\ufe2f",rsComboSymbolsRange$1="\\u20d0-\\u20ff",rsComboRange$1=rsComboMarksRange$1+reComboHalfMarksRange$1+rsComboSymbolsRange$1,rsVarRange$1="\\ufe0e\\ufe0f",rsZWJ$1="\\u200d",reHasUnicode=RegExp("["+rsZWJ$1+rsAstralRange$1+rsComboRange$1+rsVarRange$1+"]");function hasUnicode(e){return reHasUnicode.test(e)}var rsAstralRange="\\ud800-\\udfff",rsComboMarksRange="\\u0300-\\u036f",reComboHalfMarksRange="\\ufe20-\\ufe2f",rsComboSymbolsRange="\\u20d0-\\u20ff",rsComboRange=rsComboMarksRange+reComboHalfMarksRange+rsComboSymbolsRange,rsVarRange="\\ufe0e\\ufe0f",rsAstral="["+rsAstralRange+"]",rsCombo="["+rsComboRange+"]",rsFitz="\\ud83c[\\udffb-\\udfff]",rsModifier="(?:"+rsCombo+"|"+rsFitz+")",rsNonAstral="[^"+rsAstralRange+"]",rsRegional="(?:\\ud83c[\\udde6-\\uddff]){2}",rsSurrPair="[\\ud800-\\udbff][\\udc00-\\udfff]",rsZWJ="\\u200d",reOptMod=rsModifier+"?",rsOptVar="["+rsVarRange+"]?",rsOptJoin="(?:"+rsZWJ+"(?:"+[rsNonAstral,rsRegional,rsSurrPair].join("|")+")"+rsOptVar+reOptMod+")*",rsSeq=rsOptVar+reOptMod+rsOptJoin,rsSymbol="(?:"+[rsNonAstral+rsCombo+"?",rsCombo,rsRegional,rsSurrPair,rsAstral].join("|")+")",reUnicode=RegExp(rsFitz+"(?="+rsFitz+")|"+rsSymbol+rsSeq,"g");function unicodeSize(e){for(var t=reUnicode.lastIndex=0;reUnicode.test(e);)++t;return t}function stringSize(e){return hasUnicode(e)?unicodeSize(e):asciiSize(e)}var mapTag$2="[object Map]",setTag$2="[object Set]";function size(e){if(null==e)return 0;if(isArrayLike(e))return isString(e)?stringSize(e):e.length;var t=getTag$1(e);return t==mapTag$2||t==setTag$2?e.size:baseKeys(e).length}function constant(e){return function(){return e}}function arrayFilter(e,t){for(var A=-1,n=null==e?0:e.length,l=0,r=[];++A<n;){var a=e[A];t(a,A,e)&&(r[l++]=a)}return r}function baseFilter(e,t){var A=[];return baseEach(e,(function(e,n,l){t(e,n,l)&&A.push(e)})),A}function stackClear(){this.__data__=new ListCache,this.size=0}function stackDelete(e){var t=this.__data__,A=t.delete(e);return this.size=t.size,A}function stackGet(e){return this.__data__.get(e)}function stackHas(e){return this.__data__.has(e)}var LARGE_ARRAY_SIZE$1=200;function stackSet(e,t){var A=this.__data__;if(A instanceof ListCache){var n=A.__data__;if(!Map2||n.length<LARGE_ARRAY_SIZE$1-1)return n.push([e,t]),this.size=++A.size,this;A=this.__data__=new MapCache(n)}return A.set(e,t),this.size=A.size,this}function Stack(e){var t=this.__data__=new ListCache(e);this.size=t.size}Stack.prototype.clear=stackClear,Stack.prototype.delete=stackDelete,Stack.prototype.get=stackGet,Stack.prototype.has=stackHas,Stack.prototype.set=stackSet;var HASH_UNDEFINED="__lodash_hash_undefined__";function setCacheAdd(e){return this.__data__.set(e,HASH_UNDEFINED),this}function setCacheHas(e){return this.__data__.has(e)}function SetCache(e){var t=-1,A=null==e?0:e.length;for(this.__data__=new MapCache;++t<A;)this.add(e[t])}function arraySome(e,t){for(var A=-1,n=null==e?0:e.length;++A<n;)if(t(e[A],A,e))return!0;return!1}function cacheHas(e,t){return e.has(t)}SetCache.prototype.add=SetCache.prototype.push=setCacheAdd,SetCache.prototype.has=setCacheHas;var COMPARE_PARTIAL_FLAG$5=1,COMPARE_UNORDERED_FLAG$3=2;function equalArrays(e,t,A,n,l,r){var a=A&COMPARE_PARTIAL_FLAG$5,o=e.length,s=t.length;if(o!=s&&!(a&&s>o))return!1;var i=r.get(e),u=r.get(t);if(i&&u)return i==t&&u==e;var c=-1,h=!0,f=A&COMPARE_UNORDERED_FLAG$3?new SetCache:void 0;for(r.set(e,t),r.set(t,e);++c<o;){var g=e[c],d=t[c];if(n)var p=a?n(d,g,c,t,e,r):n(g,d,c,e,t,r);if(void 0!==p){if(p)continue;h=!1;break}if(f){if(!arraySome(t,(function(e,t){if(!cacheHas(f,t)&&(g===e||l(g,e,A,n,r)))return f.push(t)}))){h=!1;break}}else if(g!==d&&!l(g,d,A,n,r)){h=!1;break}}return r.delete(e),r.delete(t),h}var Uint8Array2=root.Uint8Array;function mapToArray(e){var t=-1,A=Array(e.size);return e.forEach((function(e,n){A[++t]=[n,e]})),A}function setToArray(e){var t=-1,A=Array(e.size);return e.forEach((function(e){A[++t]=e})),A}var COMPARE_PARTIAL_FLAG$4=1,COMPARE_UNORDERED_FLAG$2=2,boolTag="[object Boolean]",dateTag="[object Date]",errorTag="[object Error]",mapTag$1="[object Map]",numberTag="[object Number]",regexpTag="[object RegExp]",setTag$1="[object Set]",stringTag="[object String]",symbolTag="[object Symbol]",arrayBufferTag="[object ArrayBuffer]",dataViewTag="[object DataView]",symbolProto=Symbol2?Symbol2.prototype:void 0,symbolValueOf=symbolProto?symbolProto.valueOf:void 0;function equalByTag(e,t,A,n,l,r,a){switch(A){case dataViewTag:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case arrayBufferTag:return!(e.byteLength!=t.byteLength||!r(new Uint8Array2(e),new Uint8Array2(t)));case boolTag:case dateTag:case numberTag:return eq(+e,+t);case errorTag:return e.name==t.name&&e.message==t.message;case regexpTag:case stringTag:return e==t+"";case mapTag$1:var o=mapToArray;case setTag$1:var s=n&COMPARE_PARTIAL_FLAG$4;if(o||(o=setToArray),e.size!=t.size&&!s)return!1;var i=a.get(e);if(i)return i==t;n|=COMPARE_UNORDERED_FLAG$2,a.set(e,t);var u=equalArrays(o(e),o(t),n,l,r,a);return a.delete(e),u;case symbolTag:if(symbolValueOf)return symbolValueOf.call(e)==symbolValueOf.call(t)}return!1}function arrayPush(e,t){for(var A=-1,n=t.length,l=e.length;++A<n;)e[l+A]=t[A];return e}function baseGetAllKeys(e,t,A){var n=t(e);return isArray(e)?n:arrayPush(n,A(e))}function stubArray(){return[]}var objectProto$3=Object.prototype,propertyIsEnumerable=objectProto$3.propertyIsEnumerable,nativeGetSymbols=Object.getOwnPropertySymbols,getSymbols=nativeGetSymbols?function(e){return null==e?[]:(e=Object(e),arrayFilter(nativeGetSymbols(e),(function(t){return propertyIsEnumerable.call(e,t)})))}:stubArray;function getAllKeys(e){return baseGetAllKeys(e,keys,getSymbols)}var COMPARE_PARTIAL_FLAG$3=1,objectProto$2=Object.prototype,hasOwnProperty$2=objectProto$2.hasOwnProperty;function equalObjects(e,t,A,n,l,r){var a=A&COMPARE_PARTIAL_FLAG$3,o=getAllKeys(e),s=o.length;if(s!=getAllKeys(t).length&&!a)return!1;for(var i=s;i--;){var u=o[i];if(!(a?u in t:hasOwnProperty$2.call(t,u)))return!1}var c=r.get(e),h=r.get(t);if(c&&h)return c==t&&h==e;var f=!0;r.set(e,t),r.set(t,e);for(var g=a;++i<s;){var d=e[u=o[i]],p=t[u];if(n)var B=a?n(p,d,u,t,e,r):n(d,p,u,e,t,r);if(!(void 0===B?d===p||l(d,p,A,n,r):B)){f=!1;break}g||(g="constructor"==u)}if(f&&!g){var E=e.constructor,m=t.constructor;E==m||!("constructor"in e)||!("constructor"in t)||"function"==typeof E&&E instanceof E&&"function"==typeof m&&m instanceof m||(f=!1)}return r.delete(e),r.delete(t),f}var COMPARE_PARTIAL_FLAG$2=1,argsTag="[object Arguments]",arrayTag="[object Array]",objectTag="[object Object]",objectProto$1=Object.prototype,hasOwnProperty$1=objectProto$1.hasOwnProperty;function baseIsEqualDeep(e,t,A,n,l,r){var a=isArray(e),o=isArray(t),s=a?arrayTag:getTag$1(e),i=o?arrayTag:getTag$1(t),u=(s=s==argsTag?objectTag:s)==objectTag,c=(i=i==argsTag?objectTag:i)==objectTag,h=s==i;if(h&&isBuffer(e)){if(!isBuffer(t))return!1;a=!0,u=!1}if(h&&!u)return r||(r=new Stack),a||isTypedArray(e)?equalArrays(e,t,A,n,l,r):equalByTag(e,t,s,A,n,l,r);if(!(A&COMPARE_PARTIAL_FLAG$2)){var f=u&&hasOwnProperty$1.call(e,"__wrapped__"),g=c&&hasOwnProperty$1.call(t,"__wrapped__");if(f||g){var d=f?e.value():e,p=g?t.value():t;return r||(r=new Stack),l(d,p,A,n,r)}}return!!h&&(r||(r=new Stack),equalObjects(e,t,A,n,l,r))}function baseIsEqual(e,t,A,n,l){return e===t||(null==e||null==t||!isObjectLike(e)&&!isObjectLike(t)?e!=e&&t!=t:baseIsEqualDeep(e,t,A,n,baseIsEqual,l))}var COMPARE_PARTIAL_FLAG$1=1,COMPARE_UNORDERED_FLAG$1=2;function baseIsMatch(e,t,A,n){var l=A.length,r=l,a=!n;if(null==e)return!r;for(e=Object(e);l--;){var o=A[l];if(a&&o[2]?o[1]!==e[o[0]]:!(o[0]in e))return!1}for(;++l<r;){var s=(o=A[l])[0],i=e[s],u=o[1];if(a&&o[2]){if(void 0===i&&!(s in e))return!1}else{var c=new Stack;if(n)var h=n(i,u,s,e,t,c);if(!(void 0===h?baseIsEqual(u,i,COMPARE_PARTIAL_FLAG$1|COMPARE_UNORDERED_FLAG$1,n,c):h))return!1}}return!0}function isStrictComparable(e){return e==e&&!isObject(e)}function getMatchData(e){for(var t=keys(e),A=t.length;A--;){var n=t[A],l=e[n];t[A]=[n,l,isStrictComparable(l)]}return t}function matchesStrictComparable(e,t){return function(A){return null!=A&&(A[e]===t&&(void 0!==t||e in Object(A)))}}function baseMatches(e){var t=getMatchData(e);return 1==t.length&&t[0][2]?matchesStrictComparable(t[0][0],t[0][1]):function(A){return A===e||baseIsMatch(A,e,t)}}function baseGet(e,t){for(var A=0,n=(t=castPath(t,e)).length;null!=e&&A<n;)e=e[toKey(t[A++])];return A&&A==n?e:void 0}function get(e,t,A){var n=null==e?void 0:baseGet(e,t);return void 0===n?A:n}function baseHasIn(e,t){return null!=e&&t in Object(e)}function hasIn(e,t){return null!=e&&hasPath(e,t,baseHasIn)}var COMPARE_PARTIAL_FLAG=1,COMPARE_UNORDERED_FLAG=2;function baseMatchesProperty(e,t){return isKey(e)&&isStrictComparable(t)?matchesStrictComparable(toKey(e),t):function(A){var n=get(A,e);return void 0===n&&n===t?hasIn(A,e):baseIsEqual(t,n,COMPARE_PARTIAL_FLAG|COMPARE_UNORDERED_FLAG)}}function basePropertyDeep(e){return function(t){return baseGet(t,e)}}function property(e){return isKey(e)?baseProperty(toKey(e)):basePropertyDeep(e)}function baseIteratee(e){return"function"==typeof e?e:null==e?identity2:"object"==typeof e?isArray(e)?baseMatchesProperty(e[0],e[1]):baseMatches(e):property(e)}function filter(e,t){return(isArray(e)?arrayFilter:baseFilter)(e,baseIteratee(t))}function isUndefined(e){return void 0===e}var spreadableSymbol=Symbol2?Symbol2.isConcatSpreadable:void 0;function isFlattenable(e){return isArray(e)||isArguments(e)||!!(spreadableSymbol&&e&&e[spreadableSymbol])}function baseFlatten(e,t,A,n,l){var r=-1,a=e.length;for(A||(A=isFlattenable),l||(l=[]);++r<a;){var o=e[r];t>0&&A(o)?t>1?baseFlatten(o,t-1,A,n,l):arrayPush(l,o):n||(l[l.length]=o)}return l}function apply(e,t,A){switch(A.length){case 0:return e.call(t);case 1:return e.call(t,A[0]);case 2:return e.call(t,A[0],A[1]);case 3:return e.call(t,A[0],A[1],A[2])}return e.apply(t,A)}var nativeMax=Math.max;function overRest(e,t,A){return t=nativeMax(void 0===t?e.length-1:t,0),function(){for(var n=arguments,l=-1,r=nativeMax(n.length-t,0),a=Array(r);++l<r;)a[l]=n[t+l];l=-1;for(var o=Array(t+1);++l<t;)o[l]=n[l];return o[t]=A(a),apply(e,this,o)}}var defineProperty=function(){try{var e=getNative(Object,"defineProperty");return e({},"",{}),e}catch(e){}}(),baseSetToString=defineProperty?function(e,t){return defineProperty(e,"toString",{configurable:!0,enumerable:!1,value:constant(t),writable:!0})}:identity2,HOT_COUNT=800,HOT_SPAN=16,nativeNow=Date.now;function shortOut(e){var t=0,A=0;return function(){var n=nativeNow(),l=HOT_SPAN-(n-A);if(A=n,l>0){if(++t>=HOT_COUNT)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}var setToString=shortOut(baseSetToString);function baseRest(e,t){return setToString(overRest(e,t,identity2),e+"")}function baseFindIndex(e,t,A,n){for(var l=e.length,r=A+(n?1:-1);n?r--:++r<l;)if(t(e[r],r,e))return r;return-1}function baseIsNaN(e){return e!=e}function strictIndexOf(e,t,A){for(var n=A-1,l=e.length;++n<l;)if(e[n]===t)return n;return-1}function baseIndexOf(e,t,A){return t==t?strictIndexOf(e,t,A):baseFindIndex(e,baseIsNaN,A)}function arrayIncludes(e,t){return!!(null==e?0:e.length)&&baseIndexOf(e,t,0)>-1}function arrayIncludesWith(e,t,A){for(var n=-1,l=null==e?0:e.length;++n<l;)if(A(t,e[n]))return!0;return!1}function noop(){}var INFINITY=1/0,createSet=Set2&&1/setToArray(new Set2([,-0]))[1]==INFINITY?function(e){return new Set2(e)}:noop,LARGE_ARRAY_SIZE=200;function baseUniq(e,t,A){var n=-1,l=arrayIncludes,r=e.length,a=!0,o=[],s=o;if(A)a=!1,l=arrayIncludesWith;else if(r>=LARGE_ARRAY_SIZE){var i=t?null:createSet(e);if(i)return setToArray(i);a=!1,l=cacheHas,s=new SetCache}else s=t?[]:o;e:for(;++n<r;){var u=e[n],c=t?t(u):u;if(u=A||0!==u?u:0,a&&c==c){for(var h=s.length;h--;)if(s[h]===c)continue e;t&&s.push(c),o.push(u)}else l(s,c,A)||(s!==o&&s.push(c),o.push(u))}return o}function isArrayLikeObject(e){return isObjectLike(e)&&isArrayLike(e)}var union=baseRest((function(e){return baseUniq(baseFlatten(e,1,isArrayLikeObject,!0))})),objectCreate=Object.create,baseCreate=function(){function e(){}return function(t){if(!isObject(t))return{};if(objectCreate)return objectCreate(t);e.prototype=t;var A=new e;return e.prototype=void 0,A}}(),getPrototype=overArg(Object.getPrototypeOf,Object);function transform3(e,t,A){var n=isArray(e),l=n||isBuffer(e)||isTypedArray(e);if(t=baseIteratee(t),null==A){var r=e&&e.constructor;A=l?n?new r:[]:isObject(e)&&isFunction(r)?baseCreate(getPrototype(e)):{}}return(l?arrayEach:baseForOwn)(e,(function(e,n,l){return t(A,e,n,l)})),A}function baseMap(e,t){var A=-1,n=isArrayLike(e)?Array(e.length):[];return baseEach(e,(function(e,l,r){n[++A]=t(e,l,r)})),n}function map(e,t){return(isArray(e)?arrayMap:baseMap)(e,baseIteratee(t))}function baseValues(e,t){return arrayMap(t,(function(t){return e[t]}))}function values(e){return null==e?[]:baseValues(e,keys(e))}var mapTag="[object Map]",setTag="[object Set]",objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty;function isEmpty(e){if(null==e)return!0;if(isArrayLike(e)&&(isArray(e)||"string"==typeof e||"function"==typeof e.splice||isBuffer(e)||isTypedArray(e)||isArguments(e)))return!e.length;var t=getTag$1(e);if(t==mapTag||t==setTag)return!e.size;if(isPrototype(e))return!baseKeys(e).length;for(var A in e)if(hasOwnProperty.call(e,A))return!1;return!0}function arrayReduce(e,t,A,n){var l=-1,r=null==e?0:e.length;for(n&&r&&(A=e[++l]);++l<r;)A=t(A,e[l],l,e);return A}function baseReduce(e,t,A,n,l){return l(e,(function(e,l,r){A=n?(n=!1,e):t(A,e,l,r)})),A}function reduce(e,t,A){var n=isArray(e)?arrayReduce:baseReduce,l=arguments.length<3;return n(e,baseIteratee(t),A,l,baseEach)}var _={has:has,constant:constant,each:forEach2,filter:filter,isUndefined:isUndefined,union:union,transform:transform3,size:size,isArray:isArray,map:map,keys:keys,values:values,isEmpty:isEmpty,isFunction:isFunction,reduce:reduce},DEFAULT_EDGE_NAME="\0",GRAPH_NODE="\0",EDGE_KEY_DELIM="";function Graph(e){this._isDirected=!_.has(e,"directed")||e.directed,this._isMultigraph=!!_.has(e,"multigraph")&&e.multigraph,this._isCompound=!!_.has(e,"compound")&&e.compound,this._label=void 0,this._defaultNodeLabelFn=_.constant(void 0),this._defaultEdgeLabelFn=_.constant(void 0),this._nodes={},this._isCompound&&(this._parent={},this._children={},this._children[GRAPH_NODE]={}),this._in={},this._preds={},this._out={},this._sucs={},this._edgeObjs={},this._edgeLabels={}}function incrementOrInitEntry(e,t){e[t]?e[t]++:e[t]=1}function decrementOrRemoveEntry(e,t){--e[t]||delete e[t]}function edgeArgsToId(e,t,A,n){let l=""+t,r=""+A;if(!e&&l>r){const e=l;l=r,r=e}return l+EDGE_KEY_DELIM+r+EDGE_KEY_DELIM+(_.isUndefined(n)?DEFAULT_EDGE_NAME:n)}function edgeArgsToObj(e,t,A,n){let l=""+t,r=""+A;if(!e&&l>r){const e=l;l=r,r=e}const a={v:l,w:r};return n&&(a.name=n),a}function edgeObjToId(e,t){return edgeArgsToId(e,t.v,t.w,t.name)}function PriorityQueue(){this._arr=[],this._keyIndices={}}Graph.prototype._nodeCount=0,Graph.prototype._edgeCount=0,Graph.prototype.isDirected=function(){return this._isDirected},Graph.prototype.isMultigraph=function(){return this._isMultigraph},Graph.prototype.isCompound=function(){return this._isCompound},Graph.prototype.setGraph=function(e){return this._label=e,this},Graph.prototype.graph=function(){return this._label},Graph.prototype.setDefaultNodeLabel=function(e){return _.isFunction(e)||(e=_.constant(e)),this._defaultNodeLabelFn=e,this},Graph.prototype.nodeCount=function(){return this._nodeCount},Graph.prototype.nodes=function(){return _.keys(this._nodes)},Graph.prototype.sources=function(){const e=this;return _.filter(this.nodes(),(function(t){return _.isEmpty(e._in[t])}))},Graph.prototype.sinks=function(){const e=this;return _.filter(this.nodes(),(function(t){return _.isEmpty(e._out[t])}))},Graph.prototype.setNodes=function(e,t){const A=arguments,n=this;return _.each(e,(function(e){A.length>1?n.setNode(e,t):n.setNode(e)})),this},Graph.prototype.setNode=function(e,t){return _.has(this._nodes,e)?(arguments.length>1&&(this._nodes[e]=t),this):(this._nodes[e]=arguments.length>1?t:this._defaultNodeLabelFn(e),this._isCompound&&(this._parent[e]=GRAPH_NODE,this._children[e]={},this._children[GRAPH_NODE][e]=!0),this._in[e]={},this._preds[e]={},this._out[e]={},this._sucs[e]={},++this._nodeCount,this)},Graph.prototype.node=function(e){return this._nodes[e]},Graph.prototype.hasNode=function(e){return _.has(this._nodes,e)},Graph.prototype.removeNode=function(e){const t=this;if(_.has(this._nodes,e)){const A=function(e){t.removeEdge(t._edgeObjs[e])};delete this._nodes[e],this._isCompound&&(this._removeFromParentsChildList(e),delete this._parent[e],_.each(this.children(e),(function(e){t.setParent(e)})),delete this._children[e]),_.each(_.keys(this._in[e]),A),delete this._in[e],delete this._preds[e],_.each(_.keys(this._out[e]),A),delete this._out[e],delete this._sucs[e],--this._nodeCount}return this},Graph.prototype.setParent=function(e,t){if(!this._isCompound)throw new Error("Cannot set parent in a non-compound graph");if(_.isUndefined(t))t=GRAPH_NODE;else{for(let A=t+="";!_.isUndefined(A);A=this.parent(A))if(A===e)throw new Error("Setting "+t+" as parent of "+e+" would create a cycle");this.setNode(t)}return this.setNode(e),this._removeFromParentsChildList(e),this._parent[e]=t,this._children[t][e]=!0,this},Graph.prototype._removeFromParentsChildList=function(e){delete this._children[this._parent[e]][e]},Graph.prototype.parent=function(e){if(this._isCompound){const t=this._parent[e];if(t!==GRAPH_NODE)return t}},Graph.prototype.children=function(e){if(_.isUndefined(e)&&(e=GRAPH_NODE),this._isCompound){const t=this._children[e];if(t)return _.keys(t)}else{if(e===GRAPH_NODE)return this.nodes();if(this.hasNode(e))return[]}},Graph.prototype.predecessors=function(e){const t=this._preds[e];if(t)return _.keys(t)},Graph.prototype.successors=function(e){const t=this._sucs[e];if(t)return _.keys(t)},Graph.prototype.neighbors=function(e){const t=this.predecessors(e);if(t)return _.union(t,this.successors(e))},Graph.prototype.isLeaf=function(e){let t;return t=this.isDirected()?this.successors(e):this.neighbors(e),0===t.length},Graph.prototype.filterNodes=function(e){const t=new this.constructor({directed:this._isDirected,multigraph:this._isMultigraph,compound:this._isCompound});t.setGraph(this.graph());const A=this;_.each(this._nodes,(function(A,n){e(n)&&t.setNode(n,A)})),_.each(this._edgeObjs,(function(e){t.hasNode(e.v)&&t.hasNode(e.w)&&t.setEdge(e,A.edge(e))}));const n={};function l(e){const r=A.parent(e);return void 0===r||t.hasNode(r)?(n[e]=r,r):r in n?n[r]:l(r)}return this._isCompound&&_.each(t.nodes(),(function(e){t.setParent(e,l(e))})),t},Graph.prototype.setDefaultEdgeLabel=function(e){return _.isFunction(e)||(e=_.constant(e)),this._defaultEdgeLabelFn=e,this},Graph.prototype.edgeCount=function(){return this._edgeCount},Graph.prototype.edges=function(){return _.values(this._edgeObjs)},Graph.prototype.setPath=function(e,t){const A=this,n=arguments;return _.reduce(e,(function(e,l){return n.length>1?A.setEdge(e,l,t):A.setEdge(e,l),l})),this},Graph.prototype.setEdge=function(){let e,t,A,n,l=!1;const r=arguments[0];"object"==typeof r&&null!==r&&"v"in r?(e=r.v,t=r.w,A=r.name,2===arguments.length&&(n=arguments[1],l=!0)):(e=r,t=arguments[1],A=arguments[3],arguments.length>2&&(n=arguments[2],l=!0)),e=""+e,t=""+t,_.isUndefined(A)||(A=""+A);const a=edgeArgsToId(this._isDirected,e,t,A);if(_.has(this._edgeLabels,a))return l&&(this._edgeLabels[a]=n),this;if(!_.isUndefined(A)&&!this._isMultigraph)throw new Error("Cannot set a named edge when isMultigraph = false");this.setNode(e),this.setNode(t),this._edgeLabels[a]=l?n:this._defaultEdgeLabelFn(e,t,A);const o=edgeArgsToObj(this._isDirected,e,t,A);return e=o.v,t=o.w,Object.freeze(o),this._edgeObjs[a]=o,incrementOrInitEntry(this._preds[t],e),incrementOrInitEntry(this._sucs[e],t),this._in[t][a]=o,this._out[e][a]=o,this._edgeCount++,this},Graph.prototype.edge=function(e,t,A){const n=1===arguments.length?edgeObjToId(this._isDirected,arguments[0]):edgeArgsToId(this._isDirected,e,t,A);return this._edgeLabels[n]},Graph.prototype.hasEdge=function(e,t,A){const n=1===arguments.length?edgeObjToId(this._isDirected,arguments[0]):edgeArgsToId(this._isDirected,e,t,A);return _.has(this._edgeLabels,n)},Graph.prototype.removeEdge=function(e,t,A){const n=1===arguments.length?edgeObjToId(this._isDirected,arguments[0]):edgeArgsToId(this._isDirected,e,t,A),l=this._edgeObjs[n];return l&&(e=l.v,t=l.w,delete this._edgeLabels[n],delete this._edgeObjs[n],decrementOrRemoveEntry(this._preds[t],e),decrementOrRemoveEntry(this._sucs[e],t),delete this._in[t][n],delete this._out[e][n],this._edgeCount--),this},Graph.prototype.inEdges=function(e,t){const A=this._in[e];if(A){const e=_.values(A);return t?_.filter(e,(function(e){return e.v===t})):e}},Graph.prototype.outEdges=function(e,t){const A=this._out[e];if(A){const e=_.values(A);return t?_.filter(e,(function(e){return e.w===t})):e}},Graph.prototype.nodeEdges=function(e,t){const A=this.inEdges(e,t);if(A)return A.concat(this.outEdges(e,t))},PriorityQueue.prototype.size=function(){return this._arr.length},PriorityQueue.prototype.keys=function(){return this._arr.map((function(e){return e.key}))},PriorityQueue.prototype.has=function(e){return _.has(this._keyIndices,e)},PriorityQueue.prototype.priority=function(e){const t=this._keyIndices[e];if(void 0!==t)return this._arr[t].priority},PriorityQueue.prototype.min=function(){if(0===this.size())throw new Error("Queue underflow");return this._arr[0].key},PriorityQueue.prototype.add=function(e,t){const A=this._keyIndices;if(e=String(e),!_.has(A,e)){const n=this._arr,l=n.length;return A[e]=l,n.push({key:e,priority:t}),this._decrease(l),!0}return!1},PriorityQueue.prototype.removeMin=function(){this._swap(0,this._arr.length-1);const e=this._arr.pop();return delete this._keyIndices[e.key],this._heapify(0),e.key},PriorityQueue.prototype.decrease=function(e,t){const A=this._keyIndices[e];if(t>this._arr[A].priority)throw new Error("New priority is greater than current priority. Key: "+e+" Old: "+this._arr[A].priority+" New: "+t);this._arr[A].priority=t,this._decrease(A)},PriorityQueue.prototype._heapify=function(e){const t=this._arr,A=2*e,n=A+1;let l=e;A<t.length&&(l=t[A].priority<t[l].priority?A:l,n<t.length&&(l=t[n].priority<t[l].priority?n:l),l!==e&&(this._swap(e,l),this._heapify(l)))},PriorityQueue.prototype._decrease=function(e){const t=this._arr,A=t[e].priority;let n;for(;0!==e&&(n=e>>1,!(t[n].priority<A));)this._swap(e,n),e=n},PriorityQueue.prototype._swap=function(e,t){const A=this._arr,n=this._keyIndices,l=A[e],r=A[t];A[e]=r,A[t]=l,n[r.key]=e,n[l.key]=t};var DEFAULT_WEIGHT_FUNC$1=_.constant(1),DEFAULT_WEIGHT_FUNC=_.constant(1);function topsort(e){const t={},A={},n=[];if(_.each(e.sinks(),(function l(r){if(_.has(A,r))throw new CycleException;_.has(t,r)||(A[r]=!0,t[r]=!0,_.each(e.predecessors(r),l),delete A[r],n.push(r))})),_.size(t)!==e.nodeCount())throw new CycleException;return n}function CycleException(){}function createLayoutGraph(e){return new Graph(e)}function getGraphBounds(e,t={}){let A=t.startLeft||0,n=0,l=t.startTop||0,r=0;e.nodes().forEach((a=>{const o=e.node(a);if(!o)return;if(t.filterNode&&!t.filterNode(o))return;A=Math.min(o.outerLeft||o.x,A);const s=o.outerWidth||o.width||0;n=Math.max(o.outerRight||o.x+s/2,n),l=Math.min(o.outerTop||o.y,l);const i=o.outerHeight||o.height||0;r=Math.max(o.outerBottom||o.y+i/2,r)}));const a=e.graph(),o=a.marginx||0,s=a.marginy||0;return{left:A,right:n,top:l,bottom:r,width:n-A+o,height:r-l+s}}function isGraphVertical(e){return"TB"===e.graph().rankdir}function getGraphSplinesOption(e){return["polyline","ortho"].includes(e)?e:"polyline"}topsort.CycleException=CycleException,CycleException.prototype=new Error;var MARKER_GENERATORS={[Cardinality.ONLY_ONE]:()=>makeMark("path",{path:"M9,-9 L9,9 M15,-9 L15,9"},{class:"er-marker--only-one"}),[Cardinality.ZERO_OR_ONE]:e=>({type:"group",class:"er-marker--zero-or-one",children:[makeMark("circle",{...e,fill:"#fff",x:28,y:0,r:6}),makeMark("path",{...e,path:"M14,-9 L14,9"})]}),[Cardinality.ONE_OR_MORE]:()=>makeMark("path",{path:"M-18,0 Q 0,18 18,0 Q 0,-18 -18,0 M24,-9 L24,9"},{class:"er-marker--one-or-more"}),[Cardinality.ZERO_OR_MORE]:e=>({type:"group",class:"er-marker--zero-or-more",children:[makeMark("circle",{...e,fill:"#fff",x:28,y:0,r:6}),makeMark("path",{...e,path:"M-18,0 Q 0,18 18,0 Q 0,-18 -18,0"})]})};function drawMarkerTo(e,t,A,n){const l=MARKER_GENERATORS[t];if(!l)return;const r=l(n||{});safeAssign(r.attrs,n||{});const a=mat3_exports.create();return mat3_exports.translate(a,mat3_exports.create(),[e.x,e.y]),mat3_exports.rotate(a,a,A),r.matrix=a,r.class&&(r.class=`er-marker ${r.class}`),r}var TableCell=class e{constructor(){this.width=0,this.height=0,this.order=0}static fromMark(t,A,n={}){const l=new e;return l.mark=t,l.name=A,l.width=t.attrs.width,l.height=t.attrs.height,Object.assign(l,n),"order"in n||A in CELL_ORDER&&(l.order=CELL_ORDER[A]),l}},TableRow=class{constructor(){this.cellMap=new Map}addCells(e){e.filter((e=>Boolean(e))).forEach((e=>{this.cellMap.set(e.name,e)}))}getCell(e){return this.cellMap.get(e)}map(e){return Array.from(this.cellMap.values()).map(e)}},TableBuilder=class{constructor(){this.rows=[]}addRow(e){this.rows.push(e)}},CELL_ORDER={key:1,type:2,name:3,comment:4},pi=Math.PI,tau=2*pi,epsilon=1e-6,tauEpsilon=tau-epsilon;function Path(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function path(){return new Path}Path.prototype=path.prototype={constructor:Path,moveTo:function(e,t){this._+="M"+(this._x0=this._x1=+e)+","+(this._y0=this._y1=+t)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(e,t){this._+="L"+(this._x1=+e)+","+(this._y1=+t)},quadraticCurveTo:function(e,t,A,n){this._+="Q"+ +e+","+ +t+","+(this._x1=+A)+","+(this._y1=+n)},bezierCurveTo:function(e,t,A,n,l,r){this._+="C"+ +e+","+ +t+","+ +A+","+ +n+","+(this._x1=+l)+","+(this._y1=+r)},arcTo:function(e,t,A,n,l){e=+e,t=+t,A=+A,n=+n,l=+l;var r=this._x1,a=this._y1,o=A-e,s=n-t,i=r-e,u=a-t,c=i*i+u*u;if(l<0)throw new Error("negative radius: "+l);if(null===this._x1)this._+="M"+(this._x1=e)+","+(this._y1=t);else if(c>epsilon)if(Math.abs(u*o-s*i)>epsilon&&l){var h=A-r,f=n-a,g=o*o+s*s,d=h*h+f*f,p=Math.sqrt(g),B=Math.sqrt(c),E=l*Math.tan((pi-Math.acos((g+c-d)/(2*p*B)))/2),m=E/B,b=E/p;Math.abs(m-1)>epsilon&&(this._+="L"+(e+m*i)+","+(t+m*u)),this._+="A"+l+","+l+",0,0,"+ +(u*h>i*f)+","+(this._x1=e+b*o)+","+(this._y1=t+b*s)}else this._+="L"+(this._x1=e)+","+(this._y1=t);else;},arc:function(e,t,A,n,l,r){e=+e,t=+t,r=!!r;var a=(A=+A)*Math.cos(n),o=A*Math.sin(n),s=e+a,i=t+o,u=1^r,c=r?n-l:l-n;if(A<0)throw new Error("negative radius: "+A);null===this._x1?this._+="M"+s+","+i:(Math.abs(this._x1-s)>epsilon||Math.abs(this._y1-i)>epsilon)&&(this._+="L"+s+","+i),A&&(c<0&&(c=c%tau+tau),c>tauEpsilon?this._+="A"+A+","+A+",0,1,"+u+","+(e-a)+","+(t-o)+"A"+A+","+A+",0,1,"+u+","+(this._x1=s)+","+(this._y1=i):c>epsilon&&(this._+="A"+A+","+A+",0,"+ +(c>=pi)+","+u+","+(this._x1=e+A*Math.cos(l))+","+(this._y1=t+A*Math.sin(l))))},rect:function(e,t,A,n){this._+="M"+(this._x0=this._x1=+e)+","+(this._y0=this._y1=+t)+"h"+ +A+"v"+ +n+"h"+-A+"Z"},toString:function(){return this._}};var path_default=path;function constant_default(e){return function(){return e}}var slice=Array.prototype.slice;function array_default(e){return"object"==typeof e&&"length"in e?e:Array.from(e)}function Linear(e){this._context=e}function linear_default(e){return new Linear(e)}function x(e){return e[0]}function y(e){return e[1]}function line_default(e,t){var A=constant_default(!0),n=null,l=linear_default,r=null;function a(a){var o,s,i,u=(a=array_default(a)).length,c=!1;for(null==n&&(r=l(i=path_default())),o=0;o<=u;++o)!(o<u&&A(s=a[o],o,a))===c&&((c=!c)?r.lineStart():r.lineEnd()),c&&r.point(+e(s,o,a),+t(s,o,a));if(i)return r=null,i+""||null}return e="function"==typeof e?e:void 0===e?x:constant_default(e),t="function"==typeof t?t:void 0===t?y:constant_default(t),a.x=function(t){return arguments.length?(e="function"==typeof t?t:constant_default(+t),a):e},a.y=function(e){return arguments.length?(t="function"==typeof e?e:constant_default(+e),a):t},a.defined=function(e){return arguments.length?(A="function"==typeof e?e:constant_default(!!e),a):A},a.curve=function(e){return arguments.length?(l=e,null!=n&&(r=l(n)),a):l},a.context=function(e){return arguments.length?(null==e?n=r=null:r=l(n=e),a):n},a}function point(e,t,A){e._context.bezierCurveTo((2*e._x0+e._x1)/3,(2*e._y0+e._y1)/3,(e._x0+2*e._x1)/3,(e._y0+2*e._y1)/3,(e._x0+4*e._x1+t)/6,(e._y0+4*e._y1+A)/6)}function Basis(e){this._context=e}function basis_default(e){return new Basis(e)}function getPointsCurvePath(e,t=basis_default){return line_default().curve(t)(e.map((e=>[e.x,e.y])))}function getPointsLinearPath(e){const[t,...A]=e;return[["M",t.x,t.y],...A.map((e=>["L",e.x,e.y]))]}function getMedianPoint(e){const t=e.length,A=Math.floor(t/2);return{index:A,point:e[A]}}Linear.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,t){switch(e=+e,t=+t,this._point){case 0:this._point=1,this._line?this._context.lineTo(e,t):this._context.moveTo(e,t);break;case 1:this._point=2;default:this._context.lineTo(e,t)}}},Basis.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:point(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,t){switch(e=+e,t=+t,this._point){case 0:this._point=1,this._line?this._context.lineTo(e,t):this._context.moveTo(e,t);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:point(this,e,t)}this._x0=this._x1,this._x1=e,this._y0=this._y1,this._y1=t}};var MARK_BOUND_CALCULATORS={rect:({attrs:e})=>({left:e.x,right:e.x+e.width,top:e.y,bottom:e.y+e.height}),circle:({attrs:e})=>({left:e.x-e.r,right:e.x+e.r,top:e.y-e.r,bottom:e.y+e.r}),ellipse:({attrs:e})=>({left:e.cx-e.rx,right:e.cx+e.rx,bottom:e.cy-e.ry,top:e.cy+e.ry}),line:({attrs:e})=>({left:Math.min(e.x1,e.x2),right:Math.max(e.x1,e.x2),top:Math.min(e.y1,e.y2),bottom:Math.max(e.y1,e.y2)}),path:()=>makeBounds()};function calcBound(e,t={}){let A=0,n=0,l=0,r=0;const a=new Set;if(t.recursive){let t=function(e){a.has(e)||(a.add(e),"children"in e&&e.children.forEach((e=>t(e))))};e.forEach((e=>t(e)))}else e.forEach((e=>a.add(e)));for(const e of a.values()){const{type:t}=e,a=MARK_BOUND_CALCULATORS[t];let o={left:null,top:null,right:null,bottom:null};a?o=a(e):console.warn("[calcBound] missing calculator",t),null!==o.left&&(A=Math.min(o.left,A)),null!==o.top&&(n=Math.min(o.top,n)),null!==o.right&&(l=Math.max(o.right,l)),null!==o.bottom&&(r=Math.max(o.bottom,r))}return{left:A,top:n,right:l,bottom:r,width:l-A,height:r-n}}function updateBoundsByPoints(e,t){return t.forEach((t=>{e.left=Math.min(e.left,t.x),e.right=Math.max(e.right,t.x),e.top=Math.min(e.top,t.y),e.bottom=Math.max(e.bottom,t.y),e.width=e.right-e.left,e.height=e.bottom-e.top})),e}function floorValues(e){for(const t of Object.keys(e))e[t]&&(e[t]=Math.floor(e[t]));return e}function arrayEach$1(e,t){for(var A=-1,n=null==e?0:e.length;++A<n&&!1!==t(e[A],A,e););return e}function createBaseFor$1(e){return function(t,A,n){for(var l=-1,r=Object(t),a=n(t),o=a.length;o--;){var s=a[e?o:++l];if(!1===A(r[s],s,r))break}return t}}var baseFor$1=createBaseFor$1(),baseFor$2=baseFor$1;function baseTimes$1(e,t){for(var A=-1,n=Array(e);++A<e;)n[A]=t(A);return n}var freeGlobal$1="object"==typeof global&&global&&global.Object===Object&&global,freeGlobal$2=freeGlobal$1,freeSelf$1="object"==typeof self&&self&&self.Object===Object&&self,root$1=freeGlobal$2||freeSelf$1||Function("return this")(),root$2=root$1,Symbol$1=root$2.Symbol,Symbol$2=Symbol$1,objectProto$t=Object.prototype,hasOwnProperty$n=objectProto$t.hasOwnProperty,nativeObjectToString$3=objectProto$t.toString,symToStringTag$3=Symbol$2?Symbol$2.toStringTag:void 0;function getRawTag$1(e){var t=hasOwnProperty$n.call(e,symToStringTag$3),A=e[symToStringTag$3];try{e[symToStringTag$3]=void 0;var n=!0}catch(e){}var l=nativeObjectToString$3.call(e);return n&&(t?e[symToStringTag$3]=A:delete e[symToStringTag$3]),l}var objectProto$s=Object.prototype,nativeObjectToString$2=objectProto$s.toString;function objectToString$1(e){return nativeObjectToString$2.call(e)}var nullTag$1="[object Null]",undefinedTag$1="[object Undefined]",symToStringTag$2=Symbol$2?Symbol$2.toStringTag:void 0;function baseGetTag$1(e){return null==e?void 0===e?undefinedTag$1:nullTag$1:symToStringTag$2&&symToStringTag$2 in Object(e)?getRawTag$1(e):objectToString$1(e)}function isObjectLike$1(e){return null!=e&&"object"==typeof e}var argsTag$6="[object Arguments]";function baseIsArguments$1(e){return isObjectLike$1(e)&&baseGetTag$1(e)==argsTag$6}var objectProto$r=Object.prototype,hasOwnProperty$m=objectProto$r.hasOwnProperty,propertyIsEnumerable$3=objectProto$r.propertyIsEnumerable,isArguments$1=baseIsArguments$1(function(){return arguments}())?baseIsArguments$1:function(e){return isObjectLike$1(e)&&hasOwnProperty$m.call(e,"callee")&&!propertyIsEnumerable$3.call(e,"callee")},isArguments$2=isArguments$1,isArray$1=Array.isArray,isArray$2=isArray$1;function stubFalse$1(){return!1}var freeExports$4="object"==typeof exports&&exports&&!exports.nodeType&&exports,freeModule$4=freeExports$4&&"object"==typeof module&&module&&!module.nodeType&&module,moduleExports$4=freeModule$4&&freeModule$4.exports===freeExports$4,Buffer$2=moduleExports$4?root$2.Buffer:void 0,nativeIsBuffer$1=Buffer$2?Buffer$2.isBuffer:void 0,isBuffer$1=nativeIsBuffer$1||stubFalse$1,isBuffer$2=isBuffer$1,MAX_SAFE_INTEGER$3=9007199254740991,reIsUint$1=/^(?:0|[1-9]\d*)$/;function isIndex$1(e,t){var A=typeof e;return!!(t=null==t?MAX_SAFE_INTEGER$3:t)&&("number"==A||"symbol"!=A&&reIsUint$1.test(e))&&e>-1&&e%1==0&&e<t}var MAX_SAFE_INTEGER$2=9007199254740991;function isLength$1(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=MAX_SAFE_INTEGER$2}var argsTag$5="[object Arguments]",arrayTag$4="[object Array]",boolTag$5="[object Boolean]",dateTag$5="[object Date]",errorTag$4="[object Error]",funcTag$4="[object Function]",mapTag$b="[object Map]",numberTag$5="[object Number]",objectTag$6="[object Object]",regexpTag$5="[object RegExp]",setTag$b="[object Set]",stringTag$6="[object String]",weakMapTag$4="[object WeakMap]",arrayBufferTag$5="[object ArrayBuffer]",dataViewTag$7="[object DataView]",float32Tag$3="[object Float32Array]",float64Tag$3="[object Float64Array]",int8Tag$3="[object Int8Array]",int16Tag$3="[object Int16Array]",int32Tag$3="[object Int32Array]",uint8Tag$3="[object Uint8Array]",uint8ClampedTag$3="[object Uint8ClampedArray]",uint16Tag$3="[object Uint16Array]",uint32Tag$3="[object Uint32Array]",typedArrayTags$1={};function baseIsTypedArray$1(e){return isObjectLike$1(e)&&isLength$1(e.length)&&!!typedArrayTags$1[baseGetTag$1(e)]}function baseUnary$1(e){return function(t){return e(t)}}typedArrayTags$1[float32Tag$3]=typedArrayTags$1[float64Tag$3]=typedArrayTags$1[int8Tag$3]=typedArrayTags$1[int16Tag$3]=typedArrayTags$1[int32Tag$3]=typedArrayTags$1[uint8Tag$3]=typedArrayTags$1[uint8ClampedTag$3]=typedArrayTags$1[uint16Tag$3]=typedArrayTags$1[uint32Tag$3]=!0,typedArrayTags$1[argsTag$5]=typedArrayTags$1[arrayTag$4]=typedArrayTags$1[arrayBufferTag$5]=typedArrayTags$1[boolTag$5]=typedArrayTags$1[dataViewTag$7]=typedArrayTags$1[dateTag$5]=typedArrayTags$1[errorTag$4]=typedArrayTags$1[funcTag$4]=typedArrayTags$1[mapTag$b]=typedArrayTags$1[numberTag$5]=typedArrayTags$1[objectTag$6]=typedArrayTags$1[regexpTag$5]=typedArrayTags$1[setTag$b]=typedArrayTags$1[stringTag$6]=typedArrayTags$1[weakMapTag$4]=!1;var freeExports$3="object"==typeof exports&&exports&&!exports.nodeType&&exports,freeModule$3=freeExports$3&&"object"==typeof module&&module&&!module.nodeType&&module,moduleExports$3=freeModule$3&&freeModule$3.exports===freeExports$3,freeProcess$1=moduleExports$3&&freeGlobal$2.process,nodeUtil$1=function(){try{var e=freeModule$3&&freeModule$3.require&&freeModule$3.require("util").types;return e||freeProcess$1&&freeProcess$1.binding&&freeProcess$1.binding("util")}catch(e){}}(),nodeUtil$2=nodeUtil$1,nodeIsTypedArray$1=nodeUtil$2&&nodeUtil$2.isTypedArray,isTypedArray$1=nodeIsTypedArray$1?baseUnary$1(nodeIsTypedArray$1):baseIsTypedArray$1,isTypedArray$2=isTypedArray$1,objectProto$q=Object.prototype,hasOwnProperty$l=objectProto$q.hasOwnProperty;function arrayLikeKeys$1(e,t){var A=isArray$2(e),n=!A&&isArguments$2(e),l=!A&&!n&&isBuffer$2(e),r=!A&&!n&&!l&&isTypedArray$2(e),a=A||n||l||r,o=a?baseTimes$1(e.length,String):[],s=o.length;for(var i in e)!t&&!hasOwnProperty$l.call(e,i)||a&&("length"==i||l&&("offset"==i||"parent"==i)||r&&("buffer"==i||"byteLength"==i||"byteOffset"==i)||isIndex$1(i,s))||o.push(i);return o}var objectProto$p=Object.prototype;function isPrototype$1(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||objectProto$p)}function overArg$1(e,t){return function(A){return e(t(A))}}var nativeKeys$1=overArg$1(Object.keys,Object),nativeKeys$2=nativeKeys$1,objectProto$o=Object.prototype,hasOwnProperty$k=objectProto$o.hasOwnProperty;function baseKeys$1(e){if(!isPrototype$1(e))return nativeKeys$2(e);var t=[];for(var A in Object(e))hasOwnProperty$k.call(e,A)&&"constructor"!=A&&t.push(A);return t}function isObject$1(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}var asyncTag$1="[object AsyncFunction]",funcTag$3="[object Function]",genTag$2="[object GeneratorFunction]",proxyTag$1="[object Proxy]";function isFunction$1(e){if(!isObject$1(e))return!1;var t=baseGetTag$1(e);return t==funcTag$3||t==genTag$2||t==asyncTag$1||t==proxyTag$1}function isArrayLike$1(e){return null!=e&&isLength$1(e.length)&&!isFunction$1(e)}function keys$1(e){return isArrayLike$1(e)?arrayLikeKeys$1(e):baseKeys$1(e)}function baseForOwn$1(e,t){return e&&baseFor$2(e,t,keys$1)}function createBaseEach$1(e,t){return function(A,n){if(null==A)return A;if(!isArrayLike$1(A))return e(A,n);for(var l=A.length,r=t?l:-1,a=Object(A);(t?r--:++r<l)&&!1!==n(a[r],r,a););return A}}var baseEach$1=createBaseEach$1(baseForOwn$1),baseEach$2=baseEach$1;function identity$1(e){return e}function castFunction$1(e){return"function"==typeof e?e:identity$1}function forEach$1(e,t){return(isArray$2(e)?arrayEach$1:baseEach$2)(e,castFunction$1(t))}var symbolTag$5="[object Symbol]";function isSymbol$1(e){return"symbol"==typeof e||isObjectLike$1(e)&&baseGetTag$1(e)==symbolTag$5}var reIsDeepProp$1=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,reIsPlainProp$1=/^\w*$/;function isKey$1(e,t){if(isArray$2(e))return!1;var A=typeof e;return!("number"!=A&&"symbol"!=A&&"boolean"!=A&&null!=e&&!isSymbol$1(e))||(reIsPlainProp$1.test(e)||!reIsDeepProp$1.test(e)||null!=t&&e in Object(t))}var coreJsData$1=root$2["__core-js_shared__"],coreJsData$2=coreJsData$1,maskSrcKey$1=function(){var e=/[^.]+$/.exec(coreJsData$2&&coreJsData$2.keys&&coreJsData$2.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}();function isMasked$1(e){return!!maskSrcKey$1&&maskSrcKey$1 in e}var funcProto$3=Function.prototype,funcToString$3=funcProto$3.toString;function toSource$1(e){if(null!=e){try{return funcToString$3.call(e)}catch(e){}try{return e+""}catch(e){}}return""}var reRegExpChar$1=/[\\^$.*+?()[\]{}|]/g,reIsHostCtor$1=/^\[object .+?Constructor\]$/,funcProto$2=Function.prototype,objectProto$n=Object.prototype,funcToString$2=funcProto$2.toString,hasOwnProperty$j=objectProto$n.hasOwnProperty,reIsNative$1=RegExp("^"+funcToString$2.call(hasOwnProperty$j).replace(reRegExpChar$1,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function baseIsNative$1(e){return!(!isObject$1(e)||isMasked$1(e))&&(isFunction$1(e)?reIsNative$1:reIsHostCtor$1).test(toSource$1(e))}function getValue$1(e,t){return null==e?void 0:e[t]}function getNative$1(e,t){var A=getValue$1(e,t);return baseIsNative$1(A)?A:void 0}var nativeCreate$1=getNative$1(Object,"create"),nativeCreate$2=nativeCreate$1;function hashClear$1(){this.__data__=nativeCreate$2?nativeCreate$2(null):{},this.size=0}function hashDelete$1(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}var HASH_UNDEFINED$5="__lodash_hash_undefined__",objectProto$m=Object.prototype,hasOwnProperty$i=objectProto$m.hasOwnProperty;function hashGet$1(e){var t=this.__data__;if(nativeCreate$2){var A=t[e];return A===HASH_UNDEFINED$5?void 0:A}return hasOwnProperty$i.call(t,e)?t[e]:void 0}var objectProto$l=Object.prototype,hasOwnProperty$h=objectProto$l.hasOwnProperty;function hashHas$1(e){var t=this.__data__;return nativeCreate$2?void 0!==t[e]:hasOwnProperty$h.call(t,e)}var HASH_UNDEFINED$4="__lodash_hash_undefined__";function hashSet$1(e,t){var A=this.__data__;return this.size+=this.has(e)?0:1,A[e]=nativeCreate$2&&void 0===t?HASH_UNDEFINED$4:t,this}function Hash$1(e){var t=-1,A=null==e?0:e.length;for(this.clear();++t<A;){var n=e[t];this.set(n[0],n[1])}}function listCacheClear$1(){this.__data__=[],this.size=0}function eq$1(e,t){return e===t||e!=e&&t!=t}function assocIndexOf$1(e,t){for(var A=e.length;A--;)if(eq$1(e[A][0],t))return A;return-1}Hash$1.prototype.clear=hashClear$1,Hash$1.prototype.delete=hashDelete$1,Hash$1.prototype.get=hashGet$1,Hash$1.prototype.has=hashHas$1,Hash$1.prototype.set=hashSet$1;var arrayProto$1=Array.prototype,splice$1=arrayProto$1.splice;function listCacheDelete$1(e){var t=this.__data__,A=assocIndexOf$1(t,e);return!(A<0)&&(A==t.length-1?t.pop():splice$1.call(t,A,1),--this.size,!0)}function listCacheGet$1(e){var t=this.__data__,A=assocIndexOf$1(t,e);return A<0?void 0:t[A][1]}function listCacheHas$1(e){return assocIndexOf$1(this.__data__,e)>-1}function listCacheSet$1(e,t){var A=this.__data__,n=assocIndexOf$1(A,e);return n<0?(++this.size,A.push([e,t])):A[n][1]=t,this}function ListCache$1(e){var t=-1,A=null==e?0:e.length;for(this.clear();++t<A;){var n=e[t];this.set(n[0],n[1])}}ListCache$1.prototype.clear=listCacheClear$1,ListCache$1.prototype.delete=listCacheDelete$1,ListCache$1.prototype.get=listCacheGet$1,ListCache$1.prototype.has=listCacheHas$1,ListCache$1.prototype.set=listCacheSet$1;var Map$1=getNative$1(root$2,"Map"),Map$2=Map$1;function mapCacheClear$1(){this.size=0,this.__data__={hash:new Hash$1,map:new(Map$2||ListCache$1),string:new Hash$1}}function isKeyable$1(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}function getMapData$1(e,t){var A=e.__data__;return isKeyable$1(t)?A["string"==typeof t?"string":"hash"]:A.map}function mapCacheDelete$1(e){var t=getMapData$1(this,e).delete(e);return this.size-=t?1:0,t}function mapCacheGet$1(e){return getMapData$1(this,e).get(e)}function mapCacheHas$1(e){return getMapData$1(this,e).has(e)}function mapCacheSet$1(e,t){var A=getMapData$1(this,e),n=A.size;return A.set(e,t),this.size+=A.size==n?0:1,this}function MapCache$1(e){var t=-1,A=null==e?0:e.length;for(this.clear();++t<A;){var n=e[t];this.set(n[0],n[1])}}MapCache$1.prototype.clear=mapCacheClear$1,MapCache$1.prototype.delete=mapCacheDelete$1,MapCache$1.prototype.get=mapCacheGet$1,MapCache$1.prototype.has=mapCacheHas$1,MapCache$1.prototype.set=mapCacheSet$1;var FUNC_ERROR_TEXT$1="Expected a function";function memoize$1(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new TypeError(FUNC_ERROR_TEXT$1);var A=function(){var n=arguments,l=t?t.apply(this,n):n[0],r=A.cache;if(r.has(l))return r.get(l);var a=e.apply(this,n);return A.cache=r.set(l,a)||r,a};return A.cache=new(memoize$1.Cache||MapCache$1),A}memoize$1.Cache=MapCache$1;var MAX_MEMOIZE_SIZE$1=500;function memoizeCapped$1(e){var t=memoize$1(e,(function(e){return A.size===MAX_MEMOIZE_SIZE$1&&A.clear(),e})),A=t.cache;return t}var rePropName$1=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,reEscapeChar$1=/\\(\\)?/g,stringToPath$1=memoizeCapped$1((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(rePropName$1,(function(e,A,n,l){t.push(n?l.replace(reEscapeChar$1,"$1"):A||e)})),t})),stringToPath$2=stringToPath$1;function arrayMap$1(e,t){for(var A=-1,n=null==e?0:e.length,l=Array(n);++A<n;)l[A]=t(e[A],A,e);return l}var INFINITY$5=1/0,symbolProto$4=Symbol$2?Symbol$2.prototype:void 0,symbolToString$1=symbolProto$4?symbolProto$4.toString:void 0;function baseToString$1(e){if("string"==typeof e)return e;if(isArray$2(e))return arrayMap$1(e,baseToString$1)+"";if(isSymbol$1(e))return symbolToString$1?symbolToString$1.call(e):"";var t=e+"";return"0"==t&&1/e==-INFINITY$5?"-0":t}function toString$1(e){return null==e?"":baseToString$1(e)}function castPath$1(e,t){return isArray$2(e)?e:isKey$1(e,t)?[e]:stringToPath$2(toString$1(e))}var INFINITY$4=1/0;function toKey$1(e){if("string"==typeof e||isSymbol$1(e))return e;var t=e+"";return"0"==t&&1/e==-INFINITY$4?"-0":t}function baseGet$1(e,t){for(var A=0,n=(t=castPath$1(t,e)).length;null!=e&&A<n;)e=e[toKey$1(t[A++])];return A&&A==n?e:void 0}var defineProperty$1=function(){try{var e=getNative$1(Object,"defineProperty");return e({},"",{}),e}catch(e){}}(),defineProperty$2=defineProperty$1;function baseAssignValue(e,t,A){"__proto__"==t&&defineProperty$2?defineProperty$2(e,t,{configurable:!0,enumerable:!0,value:A,writable:!0}):e[t]=A}var objectProto$k=Object.prototype,hasOwnProperty$g=objectProto$k.hasOwnProperty;function assignValue(e,t,A){var n=e[t];hasOwnProperty$g.call(e,t)&&eq$1(n,A)&&(void 0!==A||t in e)||baseAssignValue(e,t,A)}function baseSet(e,t,A,n){if(!isObject$1(e))return e;for(var l=-1,r=(t=castPath$1(t,e)).length,a=r-1,o=e;null!=o&&++l<r;){var s=toKey$1(t[l]),i=A;if("__proto__"===s||"constructor"===s||"prototype"===s)return e;if(l!=a){var u=o[s];void 0===(i=n?n(u,s,o):void 0)&&(i=isObject$1(u)?u:isIndex$1(t[l+1])?[]:{})}assignValue(o,s,i),o=o[s]}return e}function basePickBy(e,t,A){for(var n=-1,l=t.length,r={};++n<l;){var a=t[n],o=baseGet$1(e,a);A(o,a)&&baseSet(r,castPath$1(a,e),o)}return r}function baseHasIn$1(e,t){return null!=e&&t in Object(e)}function hasPath$1(e,t,A){for(var n=-1,l=(t=castPath$1(t,e)).length,r=!1;++n<l;){var a=toKey$1(t[n]);if(!(r=null!=e&&A(e,a)))break;e=e[a]}return r||++n!=l?r:!!(l=null==e?0:e.length)&&isLength$1(l)&&isIndex$1(a,l)&&(isArray$2(e)||isArguments$2(e))}function hasIn$1(e,t){return null!=e&&hasPath$1(e,t,baseHasIn$1)}function basePick(e,t){return basePickBy(e,t,(function(t,A){return hasIn$1(e,A)}))}function arrayPush$1(e,t){for(var A=-1,n=t.length,l=e.length;++A<n;)e[l+A]=t[A];return e}var spreadableSymbol$1=Symbol$2?Symbol$2.isConcatSpreadable:void 0;function isFlattenable$1(e){return isArray$2(e)||isArguments$2(e)||!!(spreadableSymbol$1&&e&&e[spreadableSymbol$1])}function baseFlatten$1(e,t,A,n,l){var r=-1,a=e.length;for(A||(A=isFlattenable$1),l||(l=[]);++r<a;){var o=e[r];t>0&&A(o)?t>1?baseFlatten$1(o,t-1,A,n,l):arrayPush$1(l,o):n||(l[l.length]=o)}return l}function flatten(e){return(null==e?0:e.length)?baseFlatten$1(e,1):[]}function apply$1(e,t,A){switch(A.length){case 0:return e.call(t);case 1:return e.call(t,A[0]);case 2:return e.call(t,A[0],A[1]);case 3:return e.call(t,A[0],A[1],A[2])}return e.apply(t,A)}var nativeMax$3=Math.max;function overRest$1(e,t,A){return t=nativeMax$3(void 0===t?e.length-1:t,0),function(){for(var n=arguments,l=-1,r=nativeMax$3(n.length-t,0),a=Array(r);++l<r;)a[l]=n[t+l];l=-1;for(var o=Array(t+1);++l<t;)o[l]=n[l];return o[t]=A(a),apply$1(e,this,o)}}function constant$1(e){return function(){return e}}var baseSetToString$1=defineProperty$2?function(e,t){return defineProperty$2(e,"toString",{configurable:!0,enumerable:!1,value:constant$1(t),writable:!0})}:identity$1,baseSetToString$2=baseSetToString$1,HOT_COUNT$1=800,HOT_SPAN$1=16,nativeNow$1=Date.now;function shortOut$1(e){var t=0,A=0;return function(){var n=nativeNow$1(),l=HOT_SPAN$1-(n-A);if(A=n,l>0){if(++t>=HOT_COUNT$1)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}var setToString$1=shortOut$1(baseSetToString$2),setToString$2=setToString$1;function flatRest(e){return setToString$2(overRest$1(e,void 0,flatten),e+"")}var pick2=flatRest((function(e,t){return null==e?{}:basePick(e,t)})),pick$1=pick2;function baseRest$1(e,t){return setToString$2(overRest$1(e,t,identity$1),e+"")}function isIterateeCall(e,t,A){if(!isObject$1(A))return!1;var n=typeof t;return!!("number"==n?isArrayLike$1(A)&&isIndex$1(t,A.length):"string"==n&&t in A)&&eq$1(A[t],e)}function nativeKeysIn(e){var t=[];if(null!=e)for(var A in Object(e))t.push(A);return t}var objectProto$j=Object.prototype,hasOwnProperty$f=objectProto$j.hasOwnProperty;function baseKeysIn(e){if(!isObject$1(e))return nativeKeysIn(e);var t=isPrototype$1(e),A=[];for(var n in e)("constructor"!=n||!t&&hasOwnProperty$f.call(e,n))&&A.push(n);return A}function keysIn(e){return isArrayLike$1(e)?arrayLikeKeys$1(e,!0):baseKeysIn(e)}var objectProto$i=Object.prototype,hasOwnProperty$e=objectProto$i.hasOwnProperty,defaults=baseRest$1((function(e,t){e=Object(e);var A=-1,n=t.length,l=n>2?t[2]:void 0;for(l&&isIterateeCall(t[0],t[1],l)&&(n=1);++A<n;)for(var r=t[A],a=keysIn(r),o=-1,s=a.length;++o<s;){var i=a[o],u=e[i];(void 0===u||eq$1(u,objectProto$i[i])&&!hasOwnProperty$e.call(e,i))&&(e[i]=r[i])}return e})),defaults$1=defaults;function stackClear$1(){this.__data__=new ListCache$1,this.size=0}function stackDelete$1(e){var t=this.__data__,A=t.delete(e);return this.size=t.size,A}function stackGet$1(e){return this.__data__.get(e)}function stackHas$1(e){return this.__data__.has(e)}var LARGE_ARRAY_SIZE$2=200;function stackSet$1(e,t){var A=this.__data__;if(A instanceof ListCache$1){var n=A.__data__;if(!Map$2||n.length<LARGE_ARRAY_SIZE$2-1)return n.push([e,t]),this.size=++A.size,this;A=this.__data__=new MapCache$1(n)}return A.set(e,t),this.size=A.size,this}function Stack$1(e){var t=this.__data__=new ListCache$1(e);this.size=t.size}Stack$1.prototype.clear=stackClear$1,Stack$1.prototype.delete=stackDelete$1,Stack$1.prototype.get=stackGet$1,Stack$1.prototype.has=stackHas$1,Stack$1.prototype.set=stackSet$1;var HASH_UNDEFINED$3="__lodash_hash_undefined__";function setCacheAdd$1(e){return this.__data__.set(e,HASH_UNDEFINED$3),this}function setCacheHas$1(e){return this.__data__.has(e)}function SetCache$1(e){var t=-1,A=null==e?0:e.length;for(this.__data__=new MapCache$1;++t<A;)this.add(e[t])}function arraySome$1(e,t){for(var A=-1,n=null==e?0:e.length;++A<n;)if(t(e[A],A,e))return!0;return!1}function cacheHas$1(e,t){return e.has(t)}SetCache$1.prototype.add=SetCache$1.prototype.push=setCacheAdd$1,SetCache$1.prototype.has=setCacheHas$1;var COMPARE_PARTIAL_FLAG$b=1,COMPARE_UNORDERED_FLAG$7=2;function equalArrays$1(e,t,A,n,l,r){var a=A&COMPARE_PARTIAL_FLAG$b,o=e.length,s=t.length;if(o!=s&&!(a&&s>o))return!1;var i=r.get(e),u=r.get(t);if(i&&u)return i==t&&u==e;var c=-1,h=!0,f=A&COMPARE_UNORDERED_FLAG$7?new SetCache$1:void 0;for(r.set(e,t),r.set(t,e);++c<o;){var g=e[c],d=t[c];if(n)var p=a?n(d,g,c,t,e,r):n(g,d,c,e,t,r);if(void 0!==p){if(p)continue;h=!1;break}if(f){if(!arraySome$1(t,(function(e,t){if(!cacheHas$1(f,t)&&(g===e||l(g,e,A,n,r)))return f.push(t)}))){h=!1;break}}else if(g!==d&&!l(g,d,A,n,r)){h=!1;break}}return r.delete(e),r.delete(t),h}var Uint8Array$1=root$2.Uint8Array,Uint8Array$2=Uint8Array$1;function mapToArray$1(e){var t=-1,A=Array(e.size);return e.forEach((function(e,n){A[++t]=[n,e]})),A}function setToArray$1(e){var t=-1,A=Array(e.size);return e.forEach((function(e){A[++t]=e})),A}var COMPARE_PARTIAL_FLAG$a=1,COMPARE_UNORDERED_FLAG$6=2,boolTag$4="[object Boolean]",dateTag$4="[object Date]",errorTag$3="[object Error]",mapTag$a="[object Map]",numberTag$4="[object Number]",regexpTag$4="[object RegExp]",setTag$a="[object Set]",stringTag$5="[object String]",symbolTag$4="[object Symbol]",arrayBufferTag$4="[object ArrayBuffer]",dataViewTag$6="[object DataView]",symbolProto$3=Symbol$2?Symbol$2.prototype:void 0,symbolValueOf$2=symbolProto$3?symbolProto$3.valueOf:void 0;function equalByTag$1(e,t,A,n,l,r,a){switch(A){case dataViewTag$6:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case arrayBufferTag$4:return!(e.byteLength!=t.byteLength||!r(new Uint8Array$2(e),new Uint8Array$2(t)));case boolTag$4:case dateTag$4:case numberTag$4:return eq$1(+e,+t);case errorTag$3:return e.name==t.name&&e.message==t.message;case regexpTag$4:case stringTag$5:return e==t+"";case mapTag$a:var o=mapToArray$1;case setTag$a:var s=n&COMPARE_PARTIAL_FLAG$a;if(o||(o=setToArray$1),e.size!=t.size&&!s)return!1;var i=a.get(e);if(i)return i==t;n|=COMPARE_UNORDERED_FLAG$6,a.set(e,t);var u=equalArrays$1(o(e),o(t),n,l,r,a);return a.delete(e),u;case symbolTag$4:if(symbolValueOf$2)return symbolValueOf$2.call(e)==symbolValueOf$2.call(t)}return!1}function baseGetAllKeys$1(e,t,A){var n=t(e);return isArray$2(e)?n:arrayPush$1(n,A(e))}function arrayFilter$1(e,t){for(var A=-1,n=null==e?0:e.length,l=0,r=[];++A<n;){var a=e[A];t(a,A,e)&&(r[l++]=a)}return r}function stubArray$1(){return[]}var objectProto$h=Object.prototype,propertyIsEnumerable$2=objectProto$h.propertyIsEnumerable,nativeGetSymbols$2=Object.getOwnPropertySymbols,getSymbols$1=nativeGetSymbols$2?function(e){return null==e?[]:(e=Object(e),arrayFilter$1(nativeGetSymbols$2(e),(function(t){return propertyIsEnumerable$2.call(e,t)})))}:stubArray$1,getSymbols$2=getSymbols$1;function getAllKeys$1(e){return baseGetAllKeys$1(e,keys$1,getSymbols$2)}var COMPARE_PARTIAL_FLAG$9=1,objectProto$g=Object.prototype,hasOwnProperty$d=objectProto$g.hasOwnProperty;function equalObjects$1(e,t,A,n,l,r){var a=A&COMPARE_PARTIAL_FLAG$9,o=getAllKeys$1(e),s=o.length;if(s!=getAllKeys$1(t).length&&!a)return!1;for(var i=s;i--;){var u=o[i];if(!(a?u in t:hasOwnProperty$d.call(t,u)))return!1}var c=r.get(e),h=r.get(t);if(c&&h)return c==t&&h==e;var f=!0;r.set(e,t),r.set(t,e);for(var g=a;++i<s;){var d=e[u=o[i]],p=t[u];if(n)var B=a?n(p,d,u,t,e,r):n(d,p,u,e,t,r);if(!(void 0===B?d===p||l(d,p,A,n,r):B)){f=!1;break}g||(g="constructor"==u)}if(f&&!g){var E=e.constructor,m=t.constructor;E==m||!("constructor"in e)||!("constructor"in t)||"function"==typeof E&&E instanceof E&&"function"==typeof m&&m instanceof m||(f=!1)}return r.delete(e),r.delete(t),f}var DataView$1=getNative$1(root$2,"DataView"),DataView$2=DataView$1,Promise$2=getNative$1(root$2,"Promise"),Promise$3=Promise$2,Set$2=getNative$1(root$2,"Set"),Set$3=Set$2,WeakMap$1=getNative$1(root$2,"WeakMap"),WeakMap$2=WeakMap$1,mapTag$9="[object Map]",objectTag$5="[object Object]",promiseTag$1="[object Promise]",setTag$9="[object Set]",weakMapTag$3="[object WeakMap]",dataViewTag$5="[object DataView]",dataViewCtorString$1=toSource$1(DataView$2),mapCtorString$1=toSource$1(Map$2),promiseCtorString$1=toSource$1(Promise$3),setCtorString$1=toSource$1(Set$3),weakMapCtorString$1=toSource$1(WeakMap$2),getTag$2=baseGetTag$1;(DataView$2&&getTag$2(new DataView$2(new ArrayBuffer(1)))!=dataViewTag$5||Map$2&&getTag$2(new Map$2)!=mapTag$9||Promise$3&&getTag$2(Promise$3.resolve())!=promiseTag$1||Set$3&&getTag$2(new Set$3)!=setTag$9||WeakMap$2&&getTag$2(new WeakMap$2)!=weakMapTag$3)&&(getTag$2=function(e){var t=baseGetTag$1(e),A=t==objectTag$5?e.constructor:void 0,n=A?toSource$1(A):"";if(n)switch(n){case dataViewCtorString$1:return dataViewTag$5;case mapCtorString$1:return mapTag$9;case promiseCtorString$1:return promiseTag$1;case setCtorString$1:return setTag$9;case weakMapCtorString$1:return weakMapTag$3}return t});var getTag$3=getTag$2,COMPARE_PARTIAL_FLAG$8=1,argsTag$4="[object Arguments]",arrayTag$3="[object Array]",objectTag$4="[object Object]",objectProto$f=Object.prototype,hasOwnProperty$c=objectProto$f.hasOwnProperty;function baseIsEqualDeep$1(e,t,A,n,l,r){var a=isArray$2(e),o=isArray$2(t),s=a?arrayTag$3:getTag$3(e),i=o?arrayTag$3:getTag$3(t),u=(s=s==argsTag$4?objectTag$4:s)==objectTag$4,c=(i=i==argsTag$4?objectTag$4:i)==objectTag$4,h=s==i;if(h&&isBuffer$2(e)){if(!isBuffer$2(t))return!1;a=!0,u=!1}if(h&&!u)return r||(r=new Stack$1),a||isTypedArray$2(e)?equalArrays$1(e,t,A,n,l,r):equalByTag$1(e,t,s,A,n,l,r);if(!(A&COMPARE_PARTIAL_FLAG$8)){var f=u&&hasOwnProperty$c.call(e,"__wrapped__"),g=c&&hasOwnProperty$c.call(t,"__wrapped__");if(f||g){var d=f?e.value():e,p=g?t.value():t;return r||(r=new Stack$1),l(d,p,A,n,r)}}return!!h&&(r||(r=new Stack$1),equalObjects$1(e,t,A,n,l,r))}function baseIsEqual$1(e,t,A,n,l){return e===t||(null==e||null==t||!isObjectLike$1(e)&&!isObjectLike$1(t)?e!=e&&t!=t:baseIsEqualDeep$1(e,t,A,n,baseIsEqual$1,l))}var COMPARE_PARTIAL_FLAG$7=1,COMPARE_UNORDERED_FLAG$5=2;function baseIsMatch$1(e,t,A,n){var l=A.length,r=l,a=!n;if(null==e)return!r;for(e=Object(e);l--;){var o=A[l];if(a&&o[2]?o[1]!==e[o[0]]:!(o[0]in e))return!1}for(;++l<r;){var s=(o=A[l])[0],i=e[s],u=o[1];if(a&&o[2]){if(void 0===i&&!(s in e))return!1}else{var c=new Stack$1;if(n)var h=n(i,u,s,e,t,c);if(!(void 0===h?baseIsEqual$1(u,i,COMPARE_PARTIAL_FLAG$7|COMPARE_UNORDERED_FLAG$5,n,c):h))return!1}}return!0}function isStrictComparable$1(e){return e==e&&!isObject$1(e)}function getMatchData$1(e){for(var t=keys$1(e),A=t.length;A--;){var n=t[A],l=e[n];t[A]=[n,l,isStrictComparable$1(l)]}return t}function matchesStrictComparable$1(e,t){return function(A){return null!=A&&(A[e]===t&&(void 0!==t||e in Object(A)))}}function baseMatches$1(e){var t=getMatchData$1(e);return 1==t.length&&t[0][2]?matchesStrictComparable$1(t[0][0],t[0][1]):function(A){return A===e||baseIsMatch$1(A,e,t)}}function get$1(e,t,A){var n=null==e?void 0:baseGet$1(e,t);return void 0===n?A:n}var COMPARE_PARTIAL_FLAG$6=1,COMPARE_UNORDERED_FLAG$4=2;function baseMatchesProperty$1(e,t){return isKey$1(e)&&isStrictComparable$1(t)?matchesStrictComparable$1(toKey$1(e),t):function(A){var n=get$1(A,e);return void 0===n&&n===t?hasIn$1(A,e):baseIsEqual$1(t,n,COMPARE_PARTIAL_FLAG$6|COMPARE_UNORDERED_FLAG$4)}}function baseProperty$1(e){return function(t){return null==t?void 0:t[e]}}function basePropertyDeep$1(e){return function(t){return baseGet$1(t,e)}}function property$1(e){return isKey$1(e)?baseProperty$1(toKey$1(e)):basePropertyDeep$1(e)}function baseIteratee$1(e){return"function"==typeof e?e:null==e?identity$1:"object"==typeof e?isArray$2(e)?baseMatchesProperty$1(e[0],e[1]):baseMatches$1(e):property$1(e)}function mapValues(e,t){var A={};return t=baseIteratee$1(t),baseForOwn$1(e,(function(e,n,l){baseAssignValue(A,n,t(e,n,l))})),A}function baseMap$1(e,t){var A=-1,n=isArrayLike$1(e)?Array(e.length):[];return baseEach$2(e,(function(e,l,r){n[++A]=t(e,l,r)})),n}function map$1(e,t){return(isArray$2(e)?arrayMap$1:baseMap$1)(e,baseIteratee$1(t))}var nativeCeil=Math.ceil,nativeMax$2=Math.max;function baseRange(e,t,A,n){for(var l=-1,r=nativeMax$2(nativeCeil((t-e)/(A||1)),0),a=Array(r);r--;)a[n?r:++l]=e,e+=A;return a}var reWhitespace=/\s/;function trimmedEndIndex(e){for(var t=e.length;t--&&reWhitespace.test(e.charAt(t)););return t}var reTrimStart=/^\s+/;function baseTrim(e){return e?e.slice(0,trimmedEndIndex(e)+1).replace(reTrimStart,""):e}var NAN=NaN,reIsBadHex=/^[-+]0x[0-9a-f]+$/i,reIsBinary=/^0b[01]+$/i,reIsOctal=/^0o[0-7]+$/i,freeParseInt=parseInt;function toNumber(e){if("number"==typeof e)return e;if(isSymbol$1(e))return NAN;if(isObject$1(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=isObject$1(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=baseTrim(e);var A=reIsBinary.test(e);return A||reIsOctal.test(e)?freeParseInt(e.slice(2),A?2:8):reIsBadHex.test(e)?NAN:+e}var INFINITY$3=1/0,MAX_INTEGER=17976931348623157e292;function toFinite(e){return e?(e=toNumber(e))===INFINITY$3||e===-INFINITY$3?(e<0?-1:1)*MAX_INTEGER:e==e?e:0:0===e?e:0}function createRange(e){return function(t,A,n){return n&&"number"!=typeof n&&isIterateeCall(t,A,n)&&(A=n=void 0),t=toFinite(t),void 0===A?(A=t,t=0):A=toFinite(A),baseRange(t,A,n=void 0===n?t<A?1:-1:toFinite(n),e)}}var range=createRange(),range$1=range;function baseValues$1(e,t){return arrayMap$1(t,(function(t){return e[t]}))}function values$1(e){return null==e?[]:baseValues$1(e,keys$1(e))}function arrayReduce$1(e,t,A,n){var l=-1,r=null==e?0:e.length;for(n&&r&&(A=e[++l]);++l<r;)A=t(A,e[l],l,e);return A}function baseReduce$1(e,t,A,n,l){return l(e,(function(e,l,r){A=n?(n=!1,e):t(A,e,l,r)})),A}function reduce$1(e,t,A){var n=isArray$2(e)?arrayReduce$1:baseReduce$1,l=arguments.length<3;return n(e,baseIteratee$1(t),A,l,baseEach$2)}function baseExtremum(e,t,A){for(var n=-1,l=e.length;++n<l;){var r=e[n],a=t(r);if(null!=a&&(void 0===o?a==a&&!isSymbol$1(a):A(a,o)))var o=a,s=r}return s}function baseLt(e,t){return e<t}function minBy(e,t){return e&&e.length?baseExtremum(e,baseIteratee$1(t),baseLt):void 0}function baseGt(e,t){return e>t}function maxBy(e,t){return e&&e.length?baseExtremum(e,baseIteratee$1(t),baseGt):void 0}function min3(e){return e&&e.length?baseExtremum(e,identity$1,baseLt):void 0}function max3(e){return e&&e.length?baseExtremum(e,identity$1,baseGt):void 0}function baseFilter$1(e,t){var A=[];return baseEach$2(e,(function(e,n,l){t(e,n,l)&&A.push(e)})),A}function filter$1(e,t){return(isArray$2(e)?arrayFilter$1:baseFilter$1)(e,baseIteratee$1(t))}var idCounter=0;function uniqueId(e){var t=++idCounter;return toString$1(e)+t}function baseZipObject(e,t,A){for(var n=-1,l=e.length,r=t.length,a={};++n<l;){var o=n<r?t[n]:void 0;A(a,e[n],o)}return a}function zipObject(e,t){return baseZipObject(e||[],t||[],assignValue)}function baseSortBy(e,t){var A=e.length;for(e.sort(t);A--;)e[A]=e[A].value;return e}function compareAscending(e,t){if(e!==t){var A=void 0!==e,n=null===e,l=e==e,r=isSymbol$1(e),a=void 0!==t,o=null===t,s=t==t,i=isSymbol$1(t);if(!o&&!i&&!r&&e>t||r&&a&&s&&!o&&!i||n&&a&&s||!A&&s||!l)return 1;if(!n&&!r&&!i&&e<t||i&&A&&l&&!n&&!r||o&&A&&l||!a&&l||!s)return-1}return 0}function compareMultiple(e,t,A){for(var n=-1,l=e.criteria,r=t.criteria,a=l.length,o=A.length;++n<a;){var s=compareAscending(l[n],r[n]);if(s)return n>=o?s:s*("desc"==A[n]?-1:1)}return e.index-t.index}function baseOrderBy(e,t,A){t=t.length?arrayMap$1(t,(function(e){return isArray$2(e)?function(t){return baseGet$1(t,1===e.length?e[0]:e)}:e})):[identity$1];var n=-1;return t=arrayMap$1(t,baseUnary$1(baseIteratee$1)),baseSortBy(baseMap$1(e,(function(e,A,l){return{criteria:arrayMap$1(t,(function(t){return t(e)})),index:++n,value:e}})),(function(e,t){return compareMultiple(e,t,A)}))}var sortBy=baseRest$1((function(e,t){if(null==e)return[];var A=t.length;return A>1&&isIterateeCall(e,t[0],t[1])?t=[]:A>2&&isIterateeCall(t[0],t[1],t[2])&&(t=[t[0]]),baseOrderBy(e,baseFlatten$1(t,1),[])})),sortBy$1=sortBy;function createFind(e){return function(t,A,n){var l=Object(t);if(!isArrayLike$1(t)){var r=baseIteratee$1(A);t=keys$1(t),A=function(e){return r(l[e],e,l)}}var a=e(t,A,n);return a>-1?l[r?t[a]:a]:void 0}}function baseFindIndex$1(e,t,A,n){for(var l=e.length,r=A+(n?1:-1);n?r--:++r<l;)if(t(e[r],r,e))return r;return-1}function toInteger(e){var t=toFinite(e),A=t%1;return t==t?A?t-A:t:0}var nativeMax$1=Math.max;function findIndex(e,t,A){var n=null==e?0:e.length;if(!n)return-1;var l=null==A?0:toInteger(A);return l<0&&(l=nativeMax$1(n+l,0)),baseFindIndex$1(e,baseIteratee$1(t),l)}var find=createFind(findIndex),find$1=find;function baseToPairs(e,t){return arrayMap$1(t,(function(t){return[t,e[t]]}))}function setToPairs(e){var t=-1,A=Array(e.size);return e.forEach((function(e){A[++t]=[e,e]})),A}var mapTag$8="[object Map]",setTag$8="[object Set]";function createToPairs(e){return function(t){var A=getTag$3(t);return A==mapTag$8?mapToArray$1(t):A==setTag$8?setToPairs(t):baseToPairs(t,e(t))}}var toPairs=createToPairs(keys$1),toPairs$1=toPairs;function copyObject(e,t,A,n){var l=!A;A||(A={});for(var r=-1,a=t.length;++r<a;){var o=t[r],s=n?n(A[o],e[o],o,A,e):void 0;void 0===s&&(s=e[o]),l?baseAssignValue(A,o,s):assignValue(A,o,s)}return A}function baseAssign(e,t){return e&&copyObject(t,keys$1(t),e)}function baseAssignIn(e,t){return e&&copyObject(t,keysIn(t),e)}var freeExports$2="object"==typeof exports&&exports&&!exports.nodeType&&exports,freeModule$2=freeExports$2&&"object"==typeof module&&module&&!module.nodeType&&module,moduleExports$2=freeModule$2&&freeModule$2.exports===freeExports$2,Buffer$1=moduleExports$2?root$2.Buffer:void 0,allocUnsafe=Buffer$1?Buffer$1.allocUnsafe:void 0;function cloneBuffer(e,t){if(t)return e.slice();var A=e.length,n=allocUnsafe?allocUnsafe(A):new e.constructor(A);return e.copy(n),n}function copyArray(e,t){var A=-1,n=e.length;for(t||(t=Array(n));++A<n;)t[A]=e[A];return t}function copySymbols(e,t){return copyObject(e,getSymbols$2(e),t)}var getPrototype$1=overArg$1(Object.getPrototypeOf,Object),getPrototype$2=getPrototype$1,nativeGetSymbols$1=Object.getOwnPropertySymbols,getSymbolsIn=nativeGetSymbols$1?function(e){for(var t=[];e;)arrayPush$1(t,getSymbols$2(e)),e=getPrototype$2(e);return t}:stubArray$1,getSymbolsIn$1=getSymbolsIn;function copySymbolsIn(e,t){return copyObject(e,getSymbolsIn$1(e),t)}function getAllKeysIn(e){return baseGetAllKeys$1(e,keysIn,getSymbolsIn$1)}var objectProto$e=Object.prototype,hasOwnProperty$b=objectProto$e.hasOwnProperty;function initCloneArray(e){var t=e.length,A=new e.constructor(t);return t&&"string"==typeof e[0]&&hasOwnProperty$b.call(e,"index")&&(A.index=e.index,A.input=e.input),A}function cloneArrayBuffer(e){var t=new e.constructor(e.byteLength);return new Uint8Array$2(t).set(new Uint8Array$2(e)),t}function cloneDataView(e,t){var A=t?cloneArrayBuffer(e.buffer):e.buffer;return new e.constructor(A,e.byteOffset,e.byteLength)}var reFlags=/\w*$/;function cloneRegExp(e){var t=new e.constructor(e.source,reFlags.exec(e));return t.lastIndex=e.lastIndex,t}var symbolProto$2=Symbol$2?Symbol$2.prototype:void 0,symbolValueOf$1=symbolProto$2?symbolProto$2.valueOf:void 0;function cloneSymbol(e){return symbolValueOf$1?Object(symbolValueOf$1.call(e)):{}}function cloneTypedArray(e,t){var A=t?cloneArrayBuffer(e.buffer):e.buffer;return new e.constructor(A,e.byteOffset,e.length)}var boolTag$3="[object Boolean]",dateTag$3="[object Date]",mapTag$7="[object Map]",numberTag$3="[object Number]",regexpTag$3="[object RegExp]",setTag$7="[object Set]",stringTag$4="[object String]",symbolTag$3="[object Symbol]",arrayBufferTag$3="[object ArrayBuffer]",dataViewTag$4="[object DataView]",float32Tag$2="[object Float32Array]",float64Tag$2="[object Float64Array]",int8Tag$2="[object Int8Array]",int16Tag$2="[object Int16Array]",int32Tag$2="[object Int32Array]",uint8Tag$2="[object Uint8Array]",uint8ClampedTag$2="[object Uint8ClampedArray]",uint16Tag$2="[object Uint16Array]",uint32Tag$2="[object Uint32Array]";function initCloneByTag(e,t,A){var n=e.constructor;switch(t){case arrayBufferTag$3:return cloneArrayBuffer(e);case boolTag$3:case dateTag$3:return new n(+e);case dataViewTag$4:return cloneDataView(e,A);case float32Tag$2:case float64Tag$2:case int8Tag$2:case int16Tag$2:case int32Tag$2:case uint8Tag$2:case uint8ClampedTag$2:case uint16Tag$2:case uint32Tag$2:return cloneTypedArray(e,A);case mapTag$7:return new n;case numberTag$3:case stringTag$4:return new n(e);case regexpTag$3:return cloneRegExp(e);case setTag$7:return new n;case symbolTag$3:return cloneSymbol(e)}}var objectCreate$1=Object.create,baseCreate$1=function(){function e(){}return function(t){if(!isObject$1(t))return{};if(objectCreate$1)return objectCreate$1(t);e.prototype=t;var A=new e;return e.prototype=void 0,A}}(),baseCreate$2=baseCreate$1;function initCloneObject(e){return"function"!=typeof e.constructor||isPrototype$1(e)?{}:baseCreate$2(getPrototype$2(e))}var mapTag$6="[object Map]";function baseIsMap(e){return isObjectLike$1(e)&&getTag$3(e)==mapTag$6}var nodeIsMap=nodeUtil$2&&nodeUtil$2.isMap,isMap=nodeIsMap?baseUnary$1(nodeIsMap):baseIsMap,isMap$1=isMap,setTag$6="[object Set]";function baseIsSet(e){return isObjectLike$1(e)&&getTag$3(e)==setTag$6}var nodeIsSet=nodeUtil$2&&nodeUtil$2.isSet,isSet=nodeIsSet?baseUnary$1(nodeIsSet):baseIsSet,isSet$1=isSet,CLONE_DEEP_FLAG$1=1,CLONE_FLAT_FLAG=2,CLONE_SYMBOLS_FLAG$1=4,argsTag$3="[object Arguments]",arrayTag$2="[object Array]",boolTag$2="[object Boolean]",dateTag$2="[object Date]",errorTag$2="[object Error]",funcTag$2="[object Function]",genTag$1="[object GeneratorFunction]",mapTag$5="[object Map]",numberTag$2="[object Number]",objectTag$3="[object Object]",regexpTag$2="[object RegExp]",setTag$5="[object Set]",stringTag$3="[object String]",symbolTag$2="[object Symbol]",weakMapTag$2="[object WeakMap]",arrayBufferTag$2="[object ArrayBuffer]",dataViewTag$3="[object DataView]",float32Tag$1="[object Float32Array]",float64Tag$1="[object Float64Array]",int8Tag$1="[object Int8Array]",int16Tag$1="[object Int16Array]",int32Tag$1="[object Int32Array]",uint8Tag$1="[object Uint8Array]",uint8ClampedTag$1="[object Uint8ClampedArray]",uint16Tag$1="[object Uint16Array]",uint32Tag$1="[object Uint32Array]",cloneableTags={};function baseClone(e,t,A,n,l,r){var a,o=t&CLONE_DEEP_FLAG$1,s=t&CLONE_FLAT_FLAG,i=t&CLONE_SYMBOLS_FLAG$1;if(A&&(a=l?A(e,n,l,r):A(e)),void 0!==a)return a;if(!isObject$1(e))return e;var u=isArray$2(e);if(u){if(a=initCloneArray(e),!o)return copyArray(e,a)}else{var c=getTag$3(e),h=c==funcTag$2||c==genTag$1;if(isBuffer$2(e))return cloneBuffer(e,o);if(c==objectTag$3||c==argsTag$3||h&&!l){if(a=s||h?{}:initCloneObject(e),!o)return s?copySymbolsIn(e,baseAssignIn(a,e)):copySymbols(e,baseAssign(a,e))}else{if(!cloneableTags[c])return l?e:{};a=initCloneByTag(e,c,o)}}r||(r=new Stack$1);var f=r.get(e);if(f)return f;r.set(e,a),isSet$1(e)?e.forEach((function(n){a.add(baseClone(n,t,A,n,e,r))})):isMap$1(e)&&e.forEach((function(n,l){a.set(l,baseClone(n,t,A,l,e,r))}));var g=u?void 0:(i?s?getAllKeysIn:getAllKeys$1:s?keysIn:keys$1)(e);return arrayEach$1(g||e,(function(n,l){g&&(n=e[l=n]),assignValue(a,l,baseClone(n,t,A,l,e,r))})),a}cloneableTags[argsTag$3]=cloneableTags[arrayTag$2]=cloneableTags[arrayBufferTag$2]=cloneableTags[dataViewTag$3]=cloneableTags[boolTag$2]=cloneableTags[dateTag$2]=cloneableTags[float32Tag$1]=cloneableTags[float64Tag$1]=cloneableTags[int8Tag$1]=cloneableTags[int16Tag$1]=cloneableTags[int32Tag$1]=cloneableTags[mapTag$5]=cloneableTags[numberTag$2]=cloneableTags[objectTag$3]=cloneableTags[regexpTag$2]=cloneableTags[setTag$5]=cloneableTags[stringTag$3]=cloneableTags[symbolTag$2]=cloneableTags[uint8Tag$1]=cloneableTags[uint8ClampedTag$1]=cloneableTags[uint16Tag$1]=cloneableTags[uint32Tag$1]=!0,cloneableTags[errorTag$2]=cloneableTags[funcTag$2]=cloneableTags[weakMapTag$2]=!1;var CLONE_DEEP_FLAG=1,CLONE_SYMBOLS_FLAG=4;function cloneDeep2(e){return baseClone(e,CLONE_DEEP_FLAG|CLONE_SYMBOLS_FLAG)}function has$1(e,t){return Boolean(e&&t&&t in e)}function last2(e){if(e&&e.length)return e[e.length-1]}function isUndefined$1(e){return void 0===e}var objectProto$d2=Object.prototype,hasOwnProperty$a2=objectProto$d2.hasOwnProperty;function baseHas2(e,t){return null!=e&&hasOwnProperty$a2.call(e,t)}var isArray2=Array.isArray,freeGlobal2="object"==typeof global&&global&&global.Object===Object&&global,freeSelf2="object"==typeof self&&self&&self.Object===Object&&self,root2=freeGlobal2||freeSelf2||Function("return this")(),Symbol3=root2.Symbol,objectProto$c2=Object.prototype,hasOwnProperty$92=objectProto$c2.hasOwnProperty,nativeObjectToString$12=objectProto$c2.toString,symToStringTag$12=Symbol3?Symbol3.toStringTag:void 0;function getRawTag2(e){var t=hasOwnProperty$92.call(e,symToStringTag$12),A=e[symToStringTag$12];try{e[symToStringTag$12]=void 0;var n=!0}catch(e){}var l=nativeObjectToString$12.call(e);return n&&(t?e[symToStringTag$12]=A:delete e[symToStringTag$12]),l}var objectProto$b2=Object.prototype,nativeObjectToString2=objectProto$b2.toString;function objectToString2(e){return nativeObjectToString2.call(e)}var nullTag2="[object Null]",undefinedTag2="[object Undefined]",symToStringTag2=Symbol3?Symbol3.toStringTag:void 0;function baseGetTag2(e){return null==e?void 0===e?undefinedTag2:nullTag2:symToStringTag2&&symToStringTag2 in Object(e)?getRawTag2(e):objectToString2(e)}function isObjectLike2(e){return null!=e&&"object"==typeof e}var symbolTag$12="[object Symbol]";function isSymbol2(e){return"symbol"==typeof e||isObjectLike2(e)&&baseGetTag2(e)==symbolTag$12}var reIsDeepProp2=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,reIsPlainProp2=/^\w*$/;function isKey2(e,t){if(isArray2(e))return!1;var A=typeof e;return!("number"!=A&&"symbol"!=A&&"boolean"!=A&&null!=e&&!isSymbol2(e))||(reIsPlainProp2.test(e)||!reIsDeepProp2.test(e)||null!=t&&e in Object(t))}function isObject2(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}var asyncTag2="[object AsyncFunction]",funcTag$12="[object Function]",genTag2="[object GeneratorFunction]",proxyTag2="[object Proxy]";function isFunction2(e){if(!isObject2(e))return!1;var t=baseGetTag2(e);return t==funcTag$12||t==genTag2||t==asyncTag2||t==proxyTag2}var coreJsData2=root2["__core-js_shared__"],maskSrcKey2=function(){var e=/[^.]+$/.exec(coreJsData2&&coreJsData2.keys&&coreJsData2.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}();function isMasked2(e){return!!maskSrcKey2&&maskSrcKey2 in e}var funcProto$12=Function.prototype,funcToString$12=funcProto$12.toString;function toSource2(e){if(null!=e){try{return funcToString$12.call(e)}catch(e){}try{return e+""}catch(e){}}return""}var reRegExpChar2=/[\\^$.*+?()[\]{}|]/g,reIsHostCtor2=/^\[object .+?Constructor\]$/,funcProto2=Function.prototype,objectProto$a2=Object.prototype,funcToString2=funcProto2.toString,hasOwnProperty$82=objectProto$a2.hasOwnProperty,reIsNative2=RegExp("^"+funcToString2.call(hasOwnProperty$82).replace(reRegExpChar2,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function baseIsNative2(e){return!(!isObject2(e)||isMasked2(e))&&(isFunction2(e)?reIsNative2:reIsHostCtor2).test(toSource2(e))}function getValue2(e,t){return null==e?void 0:e[t]}function getNative2(e,t){var A=getValue2(e,t);return baseIsNative2(A)?A:void 0}var nativeCreate2=getNative2(Object,"create");function hashClear2(){this.__data__=nativeCreate2?nativeCreate2(null):{},this.size=0}function hashDelete2(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}var HASH_UNDEFINED$22="__lodash_hash_undefined__",objectProto$92=Object.prototype,hasOwnProperty$72=objectProto$92.hasOwnProperty;function hashGet2(e){var t=this.__data__;if(nativeCreate2){var A=t[e];return A===HASH_UNDEFINED$22?void 0:A}return hasOwnProperty$72.call(t,e)?t[e]:void 0}var objectProto$82=Object.prototype,hasOwnProperty$62=objectProto$82.hasOwnProperty;function hashHas2(e){var t=this.__data__;return nativeCreate2?void 0!==t[e]:hasOwnProperty$62.call(t,e)}var HASH_UNDEFINED$12="__lodash_hash_undefined__";function hashSet2(e,t){var A=this.__data__;return this.size+=this.has(e)?0:1,A[e]=nativeCreate2&&void 0===t?HASH_UNDEFINED$12:t,this}function Hash2(e){var t=-1,A=null==e?0:e.length;for(this.clear();++t<A;){var n=e[t];this.set(n[0],n[1])}}function listCacheClear2(){this.__data__=[],this.size=0}function eq2(e,t){return e===t||e!=e&&t!=t}function assocIndexOf2(e,t){for(var A=e.length;A--;)if(eq2(e[A][0],t))return A;return-1}Hash2.prototype.clear=hashClear2,Hash2.prototype.delete=hashDelete2,Hash2.prototype.get=hashGet2,Hash2.prototype.has=hashHas2,Hash2.prototype.set=hashSet2;var arrayProto2=Array.prototype,splice2=arrayProto2.splice;function listCacheDelete2(e){var t=this.__data__,A=assocIndexOf2(t,e);return!(A<0)&&(A==t.length-1?t.pop():splice2.call(t,A,1),--this.size,!0)}function listCacheGet2(e){var t=this.__data__,A=assocIndexOf2(t,e);return A<0?void 0:t[A][1]}function listCacheHas2(e){return assocIndexOf2(this.__data__,e)>-1}function listCacheSet2(e,t){var A=this.__data__,n=assocIndexOf2(A,e);return n<0?(++this.size,A.push([e,t])):A[n][1]=t,this}function ListCache2(e){var t=-1,A=null==e?0:e.length;for(this.clear();++t<A;){var n=e[t];this.set(n[0],n[1])}}ListCache2.prototype.clear=listCacheClear2,ListCache2.prototype.delete=listCacheDelete2,ListCache2.prototype.get=listCacheGet2,ListCache2.prototype.has=listCacheHas2,ListCache2.prototype.set=listCacheSet2;var Map3=getNative2(root2,"Map");function mapCacheClear2(){this.size=0,this.__data__={hash:new Hash2,map:new(Map3||ListCache2),string:new Hash2}}function isKeyable2(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}function getMapData2(e,t){var A=e.__data__;return isKeyable2(t)?A["string"==typeof t?"string":"hash"]:A.map}function mapCacheDelete2(e){var t=getMapData2(this,e).delete(e);return this.size-=t?1:0,t}function mapCacheGet2(e){return getMapData2(this,e).get(e)}function mapCacheHas2(e){return getMapData2(this,e).has(e)}function mapCacheSet2(e,t){var A=getMapData2(this,e),n=A.size;return A.set(e,t),this.size+=A.size==n?0:1,this}function MapCache2(e){var t=-1,A=null==e?0:e.length;for(this.clear();++t<A;){var n=e[t];this.set(n[0],n[1])}}MapCache2.prototype.clear=mapCacheClear2,MapCache2.prototype.delete=mapCacheDelete2,MapCache2.prototype.get=mapCacheGet2,MapCache2.prototype.has=mapCacheHas2,MapCache2.prototype.set=mapCacheSet2;var FUNC_ERROR_TEXT2="Expected a function";function memoize2(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new TypeError(FUNC_ERROR_TEXT2);var A=function(){var n=arguments,l=t?t.apply(this,n):n[0],r=A.cache;if(r.has(l))return r.get(l);var a=e.apply(this,n);return A.cache=r.set(l,a)||r,a};return A.cache=new(memoize2.Cache||MapCache2),A}memoize2.Cache=MapCache2;var MAX_MEMOIZE_SIZE2=500;function memoizeCapped2(e){var t=memoize2(e,(function(e){return A.size===MAX_MEMOIZE_SIZE2&&A.clear(),e})),A=t.cache;return t}var rePropName2=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,reEscapeChar2=/\\(\\)?/g,stringToPath2=memoizeCapped2((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(rePropName2,(function(e,A,n,l){t.push(n?l.replace(reEscapeChar2,"$1"):A||e)})),t}));function arrayMap2(e,t){for(var A=-1,n=null==e?0:e.length,l=Array(n);++A<n;)l[A]=t(e[A],A,e);return l}var INFINITY$22=1/0,symbolProto$12=Symbol3?Symbol3.prototype:void 0,symbolToString2=symbolProto$12?symbolProto$12.toString:void 0;function baseToString2(e){if("string"==typeof e)return e;if(isArray2(e))return arrayMap2(e,baseToString2)+"";if(isSymbol2(e))return symbolToString2?symbolToString2.call(e):"";var t=e+"";return"0"==t&&1/e==-INFINITY$22?"-0":t}function toString2(e){return null==e?"":baseToString2(e)}function castPath2(e,t){return isArray2(e)?e:isKey2(e,t)?[e]:stringToPath2(toString2(e))}var argsTag$22="[object Arguments]";function baseIsArguments2(e){return isObjectLike2(e)&&baseGetTag2(e)==argsTag$22}var objectProto$72=Object.prototype,hasOwnProperty$52=objectProto$72.hasOwnProperty,propertyIsEnumerable$12=objectProto$72.propertyIsEnumerable,isArguments2=baseIsArguments2(function(){return arguments}())?baseIsArguments2:function(e){return isObjectLike2(e)&&hasOwnProperty$52.call(e,"callee")&&!propertyIsEnumerable$12.call(e,"callee")},MAX_SAFE_INTEGER$12=9007199254740991,reIsUint2=/^(?:0|[1-9]\d*)$/;function isIndex2(e,t){var A=typeof e;return!!(t=null==t?MAX_SAFE_INTEGER$12:t)&&("number"==A||"symbol"!=A&&reIsUint2.test(e))&&e>-1&&e%1==0&&e<t}var MAX_SAFE_INTEGER2=9007199254740991;function isLength2(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=MAX_SAFE_INTEGER2}var INFINITY$12=1/0;function toKey2(e){if("string"==typeof e||isSymbol2(e))return e;var t=e+"";return"0"==t&&1/e==-INFINITY$12?"-0":t}function hasPath2(e,t,A){for(var n=-1,l=(t=castPath2(t,e)).length,r=!1;++n<l;){var a=toKey2(t[n]);if(!(r=null!=e&&A(e,a)))break;e=e[a]}return r||++n!=l?r:!!(l=null==e?0:e.length)&&isLength2(l)&&isIndex2(a,l)&&(isArray2(e)||isArguments2(e))}function has2(e,t){return null!=e&&hasPath2(e,t,baseHas2)}function arrayEach2(e,t){for(var A=-1,n=null==e?0:e.length;++A<n&&!1!==t(e[A],A,e););return e}function createBaseFor2(e){return function(t,A,n){for(var l=-1,r=Object(t),a=n(t),o=a.length;o--;){var s=a[e?o:++l];if(!1===A(r[s],s,r))break}return t}}var baseFor2=createBaseFor2();function baseTimes2(e,t){for(var A=-1,n=Array(e);++A<e;)n[A]=t(A);return n}function stubFalse2(){return!1}var freeExports$12="object"==typeof exports&&exports&&!exports.nodeType&&exports,freeModule$12=freeExports$12&&"object"==typeof module&&module&&!module.nodeType&&module,moduleExports$12=freeModule$12&&freeModule$12.exports===freeExports$12,Buffer3=moduleExports$12?root2.Buffer:void 0,nativeIsBuffer2=Buffer3?Buffer3.isBuffer:void 0,isBuffer2=nativeIsBuffer2||stubFalse2,argsTag$12="[object Arguments]",arrayTag$12="[object Array]",boolTag$12="[object Boolean]",dateTag$12="[object Date]",errorTag$12="[object Error]",funcTag2="[object Function]",mapTag$42="[object Map]",numberTag$12="[object Number]",objectTag$22="[object Object]",regexpTag$12="[object RegExp]",setTag$42="[object Set]",stringTag$22="[object String]",weakMapTag$12="[object WeakMap]",arrayBufferTag$12="[object ArrayBuffer]",dataViewTag$22="[object DataView]",float32Tag2="[object Float32Array]",float64Tag2="[object Float64Array]",int8Tag2="[object Int8Array]",int16Tag2="[object Int16Array]",int32Tag2="[object Int32Array]",uint8Tag2="[object Uint8Array]",uint8ClampedTag2="[object Uint8ClampedArray]",uint16Tag2="[object Uint16Array]",uint32Tag2="[object Uint32Array]",typedArrayTags2={};function baseIsTypedArray2(e){return isObjectLike2(e)&&isLength2(e.length)&&!!typedArrayTags2[baseGetTag2(e)]}function baseUnary2(e){return function(t){return e(t)}}typedArrayTags2[float32Tag2]=typedArrayTags2[float64Tag2]=typedArrayTags2[int8Tag2]=typedArrayTags2[int16Tag2]=typedArrayTags2[int32Tag2]=typedArrayTags2[uint8Tag2]=typedArrayTags2[uint8ClampedTag2]=typedArrayTags2[uint16Tag2]=typedArrayTags2[uint32Tag2]=!0,typedArrayTags2[argsTag$12]=typedArrayTags2[arrayTag$12]=typedArrayTags2[arrayBufferTag$12]=typedArrayTags2[boolTag$12]=typedArrayTags2[dataViewTag$22]=typedArrayTags2[dateTag$12]=typedArrayTags2[errorTag$12]=typedArrayTags2[funcTag2]=typedArrayTags2[mapTag$42]=typedArrayTags2[numberTag$12]=typedArrayTags2[objectTag$22]=typedArrayTags2[regexpTag$12]=typedArrayTags2[setTag$42]=typedArrayTags2[stringTag$22]=typedArrayTags2[weakMapTag$12]=!1;var freeExports2="object"==typeof exports&&exports&&!exports.nodeType&&exports,freeModule2=freeExports2&&"object"==typeof module&&module&&!module.nodeType&&module,moduleExports2=freeModule2&&freeModule2.exports===freeExports2,freeProcess2=moduleExports2&&freeGlobal2.process,nodeUtil2=function(){try{var e=freeModule2&&freeModule2.require&&freeModule2.require("util").types;return e||freeProcess2&&freeProcess2.binding&&freeProcess2.binding("util")}catch(e){}}(),nodeIsTypedArray2=nodeUtil2&&nodeUtil2.isTypedArray,isTypedArray2=nodeIsTypedArray2?baseUnary2(nodeIsTypedArray2):baseIsTypedArray2,objectProto$62=Object.prototype,hasOwnProperty$42=objectProto$62.hasOwnProperty;function arrayLikeKeys2(e,t){var A=isArray2(e),n=!A&&isArguments2(e),l=!A&&!n&&isBuffer2(e),r=!A&&!n&&!l&&isTypedArray2(e),a=A||n||l||r,o=a?baseTimes2(e.length,String):[],s=o.length;for(var i in e)!t&&!hasOwnProperty$42.call(e,i)||a&&("length"==i||l&&("offset"==i||"parent"==i)||r&&("buffer"==i||"byteLength"==i||"byteOffset"==i)||isIndex2(i,s))||o.push(i);return o}var objectProto$52=Object.prototype;function isPrototype2(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||objectProto$52)}function overArg2(e,t){return function(A){return e(t(A))}}var nativeKeys2=overArg2(Object.keys,Object),objectProto$42=Object.prototype,hasOwnProperty$32=objectProto$42.hasOwnProperty;function baseKeys2(e){if(!isPrototype2(e))return nativeKeys2(e);var t=[];for(var A in Object(e))hasOwnProperty$32.call(e,A)&&"constructor"!=A&&t.push(A);return t}function isArrayLike2(e){return null!=e&&isLength2(e.length)&&!isFunction2(e)}function keys2(e){return isArrayLike2(e)?arrayLikeKeys2(e):baseKeys2(e)}function baseForOwn2(e,t){return e&&baseFor2(e,t,keys2)}function createBaseEach2(e,t){return function(A,n){if(null==A)return A;if(!isArrayLike2(A))return e(A,n);for(var l=A.length,r=t?l:-1,a=Object(A);(t?r--:++r<l)&&!1!==n(a[r],r,a););return A}}var baseEach2=createBaseEach2(baseForOwn2);function identity3(e){return e}function castFunction2(e){return"function"==typeof e?e:identity3}function forEach3(e,t){return(isArray2(e)?arrayEach2:baseEach2)(e,castFunction2(t))}var DataView3=getNative2(root2,"DataView"),Promise$12=getNative2(root2,"Promise"),Set$1=getNative2(root2,"Set"),WeakMap3=getNative2(root2,"WeakMap"),mapTag$32="[object Map]",objectTag$12="[object Object]",promiseTag2="[object Promise]",setTag$32="[object Set]",weakMapTag2="[object WeakMap]",dataViewTag$12="[object DataView]",dataViewCtorString2=toSource2(DataView3),mapCtorString2=toSource2(Map3),promiseCtorString2=toSource2(Promise$12),setCtorString2=toSource2(Set$1),weakMapCtorString2=toSource2(WeakMap3),getTag2=baseGetTag2;(DataView3&&getTag2(new DataView3(new ArrayBuffer(1)))!=dataViewTag$12||Map3&&getTag2(new Map3)!=mapTag$32||Promise$12&&getTag2(Promise$12.resolve())!=promiseTag2||Set$1&&getTag2(new Set$1)!=setTag$32||WeakMap3&&getTag2(new WeakMap3)!=weakMapTag2)&&(getTag2=function(e){var t=baseGetTag2(e),A=t==objectTag$12?e.constructor:void 0,n=A?toSource2(A):"";if(n)switch(n){case dataViewCtorString2:return dataViewTag$12;case mapCtorString2:return mapTag$32;case promiseCtorString2:return promiseTag2;case setCtorString2:return setTag$32;case weakMapCtorString2:return weakMapTag2}return t});var getTag$12=getTag2,stringTag$12="[object String]";function isString2(e){return"string"==typeof e||!isArray2(e)&&isObjectLike2(e)&&baseGetTag2(e)==stringTag$12}function baseProperty2(e){return function(t){return null==t?void 0:t[e]}}var asciiSize2=baseProperty2("length"),rsAstralRange$12="\\ud800-\\udfff",rsComboMarksRange$12="\\u0300-\\u036f",reComboHalfMarksRange$12="\\ufe20-\\ufe2f",rsComboSymbolsRange$12="\\u20d0-\\u20ff",rsComboRange$12=rsComboMarksRange$12+reComboHalfMarksRange$12+rsComboSymbolsRange$12,rsVarRange$12="\\ufe0e\\ufe0f",rsZWJ$12="\\u200d",reHasUnicode2=RegExp("["+rsZWJ$12+rsAstralRange$12+rsComboRange$12+rsVarRange$12+"]");function hasUnicode2(e){return reHasUnicode2.test(e)}var rsAstralRange2="\\ud800-\\udfff",rsComboMarksRange2="\\u0300-\\u036f",reComboHalfMarksRange2="\\ufe20-\\ufe2f",rsComboSymbolsRange2="\\u20d0-\\u20ff",rsComboRange2=rsComboMarksRange2+reComboHalfMarksRange2+rsComboSymbolsRange2,rsVarRange2="\\ufe0e\\ufe0f",rsAstral2="["+rsAstralRange2+"]",rsCombo2="["+rsComboRange2+"]",rsFitz2="\\ud83c[\\udffb-\\udfff]",rsModifier2="(?:"+rsCombo2+"|"+rsFitz2+")",rsNonAstral2="[^"+rsAstralRange2+"]",rsRegional2="(?:\\ud83c[\\udde6-\\uddff]){2}",rsSurrPair2="[\\ud800-\\udbff][\\udc00-\\udfff]",rsZWJ2="\\u200d",reOptMod2=rsModifier2+"?",rsOptVar2="["+rsVarRange2+"]?",rsOptJoin2="(?:"+rsZWJ2+"(?:"+[rsNonAstral2,rsRegional2,rsSurrPair2].join("|")+")"+rsOptVar2+reOptMod2+")*",rsSeq2=rsOptVar2+reOptMod2+rsOptJoin2,rsSymbol2="(?:"+[rsNonAstral2+rsCombo2+"?",rsCombo2,rsRegional2,rsSurrPair2,rsAstral2].join("|")+")",reUnicode2=RegExp(rsFitz2+"(?="+rsFitz2+")|"+rsSymbol2+rsSeq2,"g");function unicodeSize2(e){for(var t=reUnicode2.lastIndex=0;reUnicode2.test(e);)++t;return t}function stringSize2(e){return hasUnicode2(e)?unicodeSize2(e):asciiSize2(e)}var mapTag$22="[object Map]",setTag$22="[object Set]";function size2(e){if(null==e)return 0;if(isArrayLike2(e))return isString2(e)?stringSize2(e):e.length;var t=getTag$12(e);return t==mapTag$22||t==setTag$22?e.size:baseKeys2(e).length}function constant2(e){return function(){return e}}function arrayFilter2(e,t){for(var A=-1,n=null==e?0:e.length,l=0,r=[];++A<n;){var a=e[A];t(a,A,e)&&(r[l++]=a)}return r}function baseFilter2(e,t){var A=[];return baseEach2(e,(function(e,n,l){t(e,n,l)&&A.push(e)})),A}function stackClear2(){this.__data__=new ListCache2,this.size=0}function stackDelete2(e){var t=this.__data__,A=t.delete(e);return this.size=t.size,A}function stackGet2(e){return this.__data__.get(e)}function stackHas2(e){return this.__data__.has(e)}var LARGE_ARRAY_SIZE$12=200;function stackSet2(e,t){var A=this.__data__;if(A instanceof ListCache2){var n=A.__data__;if(!Map3||n.length<LARGE_ARRAY_SIZE$12-1)return n.push([e,t]),this.size=++A.size,this;A=this.__data__=new MapCache2(n)}return A.set(e,t),this.size=A.size,this}function Stack2(e){var t=this.__data__=new ListCache2(e);this.size=t.size}Stack2.prototype.clear=stackClear2,Stack2.prototype.delete=stackDelete2,Stack2.prototype.get=stackGet2,Stack2.prototype.has=stackHas2,Stack2.prototype.set=stackSet2;var HASH_UNDEFINED2="__lodash_hash_undefined__";function setCacheAdd2(e){return this.__data__.set(e,HASH_UNDEFINED2),this}function setCacheHas2(e){return this.__data__.has(e)}function SetCache2(e){var t=-1,A=null==e?0:e.length;for(this.__data__=new MapCache2;++t<A;)this.add(e[t])}function arraySome2(e,t){for(var A=-1,n=null==e?0:e.length;++A<n;)if(t(e[A],A,e))return!0;return!1}function cacheHas2(e,t){return e.has(t)}SetCache2.prototype.add=SetCache2.prototype.push=setCacheAdd2,SetCache2.prototype.has=setCacheHas2;var COMPARE_PARTIAL_FLAG$52=1,COMPARE_UNORDERED_FLAG$32=2;function equalArrays2(e,t,A,n,l,r){var a=A&COMPARE_PARTIAL_FLAG$52,o=e.length,s=t.length;if(o!=s&&!(a&&s>o))return!1;var i=r.get(e),u=r.get(t);if(i&&u)return i==t&&u==e;var c=-1,h=!0,f=A&COMPARE_UNORDERED_FLAG$32?new SetCache2:void 0;for(r.set(e,t),r.set(t,e);++c<o;){var g=e[c],d=t[c];if(n)var p=a?n(d,g,c,t,e,r):n(g,d,c,e,t,r);if(void 0!==p){if(p)continue;h=!1;break}if(f){if(!arraySome2(t,(function(e,t){if(!cacheHas2(f,t)&&(g===e||l(g,e,A,n,r)))return f.push(t)}))){h=!1;break}}else if(g!==d&&!l(g,d,A,n,r)){h=!1;break}}return r.delete(e),r.delete(t),h}var Uint8Array3=root2.Uint8Array;function mapToArray2(e){var t=-1,A=Array(e.size);return e.forEach((function(e,n){A[++t]=[n,e]})),A}function setToArray2(e){var t=-1,A=Array(e.size);return e.forEach((function(e){A[++t]=e})),A}var COMPARE_PARTIAL_FLAG$42=1,COMPARE_UNORDERED_FLAG$22=2,boolTag2="[object Boolean]",dateTag2="[object Date]",errorTag2="[object Error]",mapTag$12="[object Map]",numberTag2="[object Number]",regexpTag2="[object RegExp]",setTag$12="[object Set]",stringTag2="[object String]",symbolTag2="[object Symbol]",arrayBufferTag2="[object ArrayBuffer]",dataViewTag2="[object DataView]",symbolProto2=Symbol3?Symbol3.prototype:void 0,symbolValueOf2=symbolProto2?symbolProto2.valueOf:void 0;function equalByTag2(e,t,A,n,l,r,a){switch(A){case dataViewTag2:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case arrayBufferTag2:return!(e.byteLength!=t.byteLength||!r(new Uint8Array3(e),new Uint8Array3(t)));case boolTag2:case dateTag2:case numberTag2:return eq2(+e,+t);case errorTag2:return e.name==t.name&&e.message==t.message;case regexpTag2:case stringTag2:return e==t+"";case mapTag$12:var o=mapToArray2;case setTag$12:var s=n&COMPARE_PARTIAL_FLAG$42;if(o||(o=setToArray2),e.size!=t.size&&!s)return!1;var i=a.get(e);if(i)return i==t;n|=COMPARE_UNORDERED_FLAG$22,a.set(e,t);var u=equalArrays2(o(e),o(t),n,l,r,a);return a.delete(e),u;case symbolTag2:if(symbolValueOf2)return symbolValueOf2.call(e)==symbolValueOf2.call(t)}return!1}function arrayPush2(e,t){for(var A=-1,n=t.length,l=e.length;++A<n;)e[l+A]=t[A];return e}function baseGetAllKeys2(e,t,A){var n=t(e);return isArray2(e)?n:arrayPush2(n,A(e))}function stubArray2(){return[]}var objectProto$32=Object.prototype,propertyIsEnumerable2=objectProto$32.propertyIsEnumerable,nativeGetSymbols2=Object.getOwnPropertySymbols,getSymbols2=nativeGetSymbols2?function(e){return null==e?[]:(e=Object(e),arrayFilter2(nativeGetSymbols2(e),(function(t){return propertyIsEnumerable2.call(e,t)})))}:stubArray2;function getAllKeys2(e){return baseGetAllKeys2(e,keys2,getSymbols2)}var COMPARE_PARTIAL_FLAG$32=1,objectProto$22=Object.prototype,hasOwnProperty$22=objectProto$22.hasOwnProperty;function equalObjects2(e,t,A,n,l,r){var a=A&COMPARE_PARTIAL_FLAG$32,o=getAllKeys2(e),s=o.length;if(s!=getAllKeys2(t).length&&!a)return!1;for(var i=s;i--;){var u=o[i];if(!(a?u in t:hasOwnProperty$22.call(t,u)))return!1}var c=r.get(e),h=r.get(t);if(c&&h)return c==t&&h==e;var f=!0;r.set(e,t),r.set(t,e);for(var g=a;++i<s;){var d=e[u=o[i]],p=t[u];if(n)var B=a?n(p,d,u,t,e,r):n(d,p,u,e,t,r);if(!(void 0===B?d===p||l(d,p,A,n,r):B)){f=!1;break}g||(g="constructor"==u)}if(f&&!g){var E=e.constructor,m=t.constructor;E==m||!("constructor"in e)||!("constructor"in t)||"function"==typeof E&&E instanceof E&&"function"==typeof m&&m instanceof m||(f=!1)}return r.delete(e),r.delete(t),f}var COMPARE_PARTIAL_FLAG$22=1,argsTag2="[object Arguments]",arrayTag2="[object Array]",objectTag2="[object Object]",objectProto$12=Object.prototype,hasOwnProperty$12=objectProto$12.hasOwnProperty;function baseIsEqualDeep2(e,t,A,n,l,r){var a=isArray2(e),o=isArray2(t),s=a?arrayTag2:getTag$12(e),i=o?arrayTag2:getTag$12(t),u=(s=s==argsTag2?objectTag2:s)==objectTag2,c=(i=i==argsTag2?objectTag2:i)==objectTag2,h=s==i;if(h&&isBuffer2(e)){if(!isBuffer2(t))return!1;a=!0,u=!1}if(h&&!u)return r||(r=new Stack2),a||isTypedArray2(e)?equalArrays2(e,t,A,n,l,r):equalByTag2(e,t,s,A,n,l,r);if(!(A&COMPARE_PARTIAL_FLAG$22)){var f=u&&hasOwnProperty$12.call(e,"__wrapped__"),g=c&&hasOwnProperty$12.call(t,"__wrapped__");if(f||g){var d=f?e.value():e,p=g?t.value():t;return r||(r=new Stack2),l(d,p,A,n,r)}}return!!h&&(r||(r=new Stack2),equalObjects2(e,t,A,n,l,r))}function baseIsEqual2(e,t,A,n,l){return e===t||(null==e||null==t||!isObjectLike2(e)&&!isObjectLike2(t)?e!=e&&t!=t:baseIsEqualDeep2(e,t,A,n,baseIsEqual2,l))}var COMPARE_PARTIAL_FLAG$12=1,COMPARE_UNORDERED_FLAG$12=2;function baseIsMatch2(e,t,A,n){var l=A.length,r=l,a=!n;if(null==e)return!r;for(e=Object(e);l--;){var o=A[l];if(a&&o[2]?o[1]!==e[o[0]]:!(o[0]in e))return!1}for(;++l<r;){var s=(o=A[l])[0],i=e[s],u=o[1];if(a&&o[2]){if(void 0===i&&!(s in e))return!1}else{var c=new Stack2;if(n)var h=n(i,u,s,e,t,c);if(!(void 0===h?baseIsEqual2(u,i,COMPARE_PARTIAL_FLAG$12|COMPARE_UNORDERED_FLAG$12,n,c):h))return!1}}return!0}function isStrictComparable2(e){return e==e&&!isObject2(e)}function getMatchData2(e){for(var t=keys2(e),A=t.length;A--;){var n=t[A],l=e[n];t[A]=[n,l,isStrictComparable2(l)]}return t}function matchesStrictComparable2(e,t){return function(A){return null!=A&&(A[e]===t&&(void 0!==t||e in Object(A)))}}function baseMatches2(e){var t=getMatchData2(e);return 1==t.length&&t[0][2]?matchesStrictComparable2(t[0][0],t[0][1]):function(A){return A===e||baseIsMatch2(A,e,t)}}function baseGet2(e,t){for(var A=0,n=(t=castPath2(t,e)).length;null!=e&&A<n;)e=e[toKey2(t[A++])];return A&&A==n?e:void 0}function get2(e,t,A){var n=null==e?void 0:baseGet2(e,t);return void 0===n?A:n}function baseHasIn2(e,t){return null!=e&&t in Object(e)}function hasIn2(e,t){return null!=e&&hasPath2(e,t,baseHasIn2)}var COMPARE_PARTIAL_FLAG2=1,COMPARE_UNORDERED_FLAG2=2;function baseMatchesProperty2(e,t){return isKey2(e)&&isStrictComparable2(t)?matchesStrictComparable2(toKey2(e),t):function(A){var n=get2(A,e);return void 0===n&&n===t?hasIn2(A,e):baseIsEqual2(t,n,COMPARE_PARTIAL_FLAG2|COMPARE_UNORDERED_FLAG2)}}function basePropertyDeep2(e){return function(t){return baseGet2(t,e)}}function property2(e){return isKey2(e)?baseProperty2(toKey2(e)):basePropertyDeep2(e)}function baseIteratee2(e){return"function"==typeof e?e:null==e?identity3:"object"==typeof e?isArray2(e)?baseMatchesProperty2(e[0],e[1]):baseMatches2(e):property2(e)}function filter2(e,t){return(isArray2(e)?arrayFilter2:baseFilter2)(e,baseIteratee2(t))}function isUndefined2(e){return void 0===e}var spreadableSymbol2=Symbol3?Symbol3.isConcatSpreadable:void 0;function isFlattenable2(e){return isArray2(e)||isArguments2(e)||!!(spreadableSymbol2&&e&&e[spreadableSymbol2])}function baseFlatten2(e,t,A,n,l){var r=-1,a=e.length;for(A||(A=isFlattenable2),l||(l=[]);++r<a;){var o=e[r];t>0&&A(o)?t>1?baseFlatten2(o,t-1,A,n,l):arrayPush2(l,o):n||(l[l.length]=o)}return l}function apply2(e,t,A){switch(A.length){case 0:return e.call(t);case 1:return e.call(t,A[0]);case 2:return e.call(t,A[0],A[1]);case 3:return e.call(t,A[0],A[1],A[2])}return e.apply(t,A)}var nativeMax2=Math.max;function overRest2(e,t,A){return t=nativeMax2(void 0===t?e.length-1:t,0),function(){for(var n=arguments,l=-1,r=nativeMax2(n.length-t,0),a=Array(r);++l<r;)a[l]=n[t+l];l=-1;for(var o=Array(t+1);++l<t;)o[l]=n[l];return o[t]=A(a),apply2(e,this,o)}}var defineProperty2=function(){try{var e=getNative2(Object,"defineProperty");return e({},"",{}),e}catch(e){}}(),baseSetToString2=defineProperty2?function(e,t){return defineProperty2(e,"toString",{configurable:!0,enumerable:!1,value:constant2(t),writable:!0})}:identity3,HOT_COUNT2=800,HOT_SPAN2=16,nativeNow2=Date.now;function shortOut2(e){var t=0,A=0;return function(){var n=nativeNow2(),l=HOT_SPAN2-(n-A);if(A=n,l>0){if(++t>=HOT_COUNT2)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}var setToString2=shortOut2(baseSetToString2);function baseRest2(e,t){return setToString2(overRest2(e,t,identity3),e+"")}function baseFindIndex2(e,t,A,n){for(var l=e.length,r=A+(n?1:-1);n?r--:++r<l;)if(t(e[r],r,e))return r;return-1}function baseIsNaN2(e){return e!=e}function strictIndexOf2(e,t,A){for(var n=A-1,l=e.length;++n<l;)if(e[n]===t)return n;return-1}function baseIndexOf2(e,t,A){return t==t?strictIndexOf2(e,t,A):baseFindIndex2(e,baseIsNaN2,A)}function arrayIncludes2(e,t){return!!(null==e?0:e.length)&&baseIndexOf2(e,t,0)>-1}function arrayIncludesWith2(e,t,A){for(var n=-1,l=null==e?0:e.length;++n<l;)if(A(t,e[n]))return!0;return!1}function noop2(){}var INFINITY2=1/0,createSet2=Set$1&&1/setToArray2(new Set$1([,-0]))[1]==INFINITY2?function(e){return new Set$1(e)}:noop2,LARGE_ARRAY_SIZE2=200;function baseUniq2(e,t,A){var n=-1,l=arrayIncludes2,r=e.length,a=!0,o=[],s=o;if(A)a=!1,l=arrayIncludesWith2;else if(r>=LARGE_ARRAY_SIZE2){var i=t?null:createSet2(e);if(i)return setToArray2(i);a=!1,l=cacheHas2,s=new SetCache2}else s=t?[]:o;e:for(;++n<r;){var u=e[n],c=t?t(u):u;if(u=A||0!==u?u:0,a&&c==c){for(var h=s.length;h--;)if(s[h]===c)continue e;t&&s.push(c),o.push(u)}else l(s,c,A)||(s!==o&&s.push(c),o.push(u))}return o}function isArrayLikeObject2(e){return isObjectLike2(e)&&isArrayLike2(e)}var union2=baseRest2((function(e){return baseUniq2(baseFlatten2(e,1,isArrayLikeObject2,!0))})),objectCreate2=Object.create,baseCreate2=function(){function e(){}return function(t){if(!isObject2(t))return{};if(objectCreate2)return objectCreate2(t);e.prototype=t;var A=new e;return e.prototype=void 0,A}}(),getPrototype2=overArg2(Object.getPrototypeOf,Object);function transform4(e,t,A){var n=isArray2(e),l=n||isBuffer2(e)||isTypedArray2(e);if(t=baseIteratee2(t),null==A){var r=e&&e.constructor;A=l?n?new r:[]:isObject2(e)&&isFunction2(r)?baseCreate2(getPrototype2(e)):{}}return(l?arrayEach2:baseForOwn2)(e,(function(e,n,l){return t(A,e,n,l)})),A}function baseMap2(e,t){var A=-1,n=isArrayLike2(e)?Array(e.length):[];return baseEach2(e,(function(e,l,r){n[++A]=t(e,l,r)})),n}function map2(e,t){return(isArray2(e)?arrayMap2:baseMap2)(e,baseIteratee2(t))}function baseValues2(e,t){return arrayMap2(t,(function(t){return e[t]}))}function values2(e){return null==e?[]:baseValues2(e,keys2(e))}var mapTag2="[object Map]",setTag2="[object Set]",objectProto2=Object.prototype,hasOwnProperty2=objectProto2.hasOwnProperty;function isEmpty2(e){if(null==e)return!0;if(isArrayLike2(e)&&(isArray2(e)||"string"==typeof e||"function"==typeof e.splice||isBuffer2(e)||isTypedArray2(e)||isArguments2(e)))return!e.length;var t=getTag$12(e);if(t==mapTag2||t==setTag2)return!e.size;if(isPrototype2(e))return!baseKeys2(e).length;for(var A in e)if(hasOwnProperty2.call(e,A))return!1;return!0}function arrayReduce2(e,t,A,n){var l=-1,r=null==e?0:e.length;for(n&&r&&(A=e[++l]);++l<r;)A=t(A,e[l],l,e);return A}function baseReduce2(e,t,A,n,l){return l(e,(function(e,l,r){A=n?(n=!1,e):t(A,e,l,r)})),A}function reduce2(e,t,A){var n=isArray2(e)?arrayReduce2:baseReduce2,l=arguments.length<3;return n(e,baseIteratee2(t),A,l,baseEach2)}var _2={has:has2,constant:constant2,each:forEach3,filter:filter2,isUndefined:isUndefined2,union:union2,transform:transform4,size:size2,isArray:isArray2,map:map2,keys:keys2,values:values2,isEmpty:isEmpty2,isFunction:isFunction2,reduce:reduce2},DEFAULT_EDGE_NAME2="\0",GRAPH_NODE2="\0",EDGE_KEY_DELIM2="";function Graph2(e){this._isDirected=!_2.has(e,"directed")||e.directed,this._isMultigraph=!!_2.has(e,"multigraph")&&e.multigraph,this._isCompound=!!_2.has(e,"compound")&&e.compound,this._label=void 0,this._defaultNodeLabelFn=_2.constant(void 0),this._defaultEdgeLabelFn=_2.constant(void 0),this._nodes={},this._isCompound&&(this._parent={},this._children={},this._children[GRAPH_NODE2]={}),this._in={},this._preds={},this._out={},this._sucs={},this._edgeObjs={},this._edgeLabels={}}function incrementOrInitEntry2(e,t){e[t]?e[t]++:e[t]=1}function decrementOrRemoveEntry2(e,t){--e[t]||delete e[t]}function edgeArgsToId2(e,t,A,n){let l=""+t,r=""+A;if(!e&&l>r){const e=l;l=r,r=e}return l+EDGE_KEY_DELIM2+r+EDGE_KEY_DELIM2+(_2.isUndefined(n)?DEFAULT_EDGE_NAME2:n)}function edgeArgsToObj2(e,t,A,n){let l=""+t,r=""+A;if(!e&&l>r){const e=l;l=r,r=e}const a={v:l,w:r};return n&&(a.name=n),a}function edgeObjToId2(e,t){return edgeArgsToId2(e,t.v,t.w,t.name)}function components(e){const t={},A=[];let n;function l(A){_2.has(t,A)||(t[A]=!0,n.push(A),_2.each(e.successors(A),l),_2.each(e.predecessors(A),l))}return _2.each(e.nodes(),(function(e){n=[],l(e),n.length&&A.push(n)})),A}function PriorityQueue2(){this._arr=[],this._keyIndices={}}Graph2.prototype._nodeCount=0,Graph2.prototype._edgeCount=0,Graph2.prototype.isDirected=function(){return this._isDirected},Graph2.prototype.isMultigraph=function(){return this._isMultigraph},Graph2.prototype.isCompound=function(){return this._isCompound},Graph2.prototype.setGraph=function(e){return this._label=e,this},Graph2.prototype.graph=function(){return this._label},Graph2.prototype.setDefaultNodeLabel=function(e){return _2.isFunction(e)||(e=_2.constant(e)),this._defaultNodeLabelFn=e,this},Graph2.prototype.nodeCount=function(){return this._nodeCount},Graph2.prototype.nodes=function(){return _2.keys(this._nodes)},Graph2.prototype.sources=function(){const e=this;return _2.filter(this.nodes(),(function(t){return _2.isEmpty(e._in[t])}))},Graph2.prototype.sinks=function(){const e=this;return _2.filter(this.nodes(),(function(t){return _2.isEmpty(e._out[t])}))},Graph2.prototype.setNodes=function(e,t){const A=arguments,n=this;return _2.each(e,(function(e){A.length>1?n.setNode(e,t):n.setNode(e)})),this},Graph2.prototype.setNode=function(e,t){return _2.has(this._nodes,e)?(arguments.length>1&&(this._nodes[e]=t),this):(this._nodes[e]=arguments.length>1?t:this._defaultNodeLabelFn(e),this._isCompound&&(this._parent[e]=GRAPH_NODE2,this._children[e]={},this._children[GRAPH_NODE2][e]=!0),this._in[e]={},this._preds[e]={},this._out[e]={},this._sucs[e]={},++this._nodeCount,this)},Graph2.prototype.node=function(e){return this._nodes[e]},Graph2.prototype.hasNode=function(e){return _2.has(this._nodes,e)},Graph2.prototype.removeNode=function(e){const t=this;if(_2.has(this._nodes,e)){const A=function(e){t.removeEdge(t._edgeObjs[e])};delete this._nodes[e],this._isCompound&&(this._removeFromParentsChildList(e),delete this._parent[e],_2.each(this.children(e),(function(e){t.setParent(e)})),delete this._children[e]),_2.each(_2.keys(this._in[e]),A),delete this._in[e],delete this._preds[e],_2.each(_2.keys(this._out[e]),A),delete this._out[e],delete this._sucs[e],--this._nodeCount}return this},Graph2.prototype.setParent=function(e,t){if(!this._isCompound)throw new Error("Cannot set parent in a non-compound graph");if(_2.isUndefined(t))t=GRAPH_NODE2;else{for(let A=t+="";!_2.isUndefined(A);A=this.parent(A))if(A===e)throw new Error("Setting "+t+" as parent of "+e+" would create a cycle");this.setNode(t)}return this.setNode(e),this._removeFromParentsChildList(e),this._parent[e]=t,this._children[t][e]=!0,this},Graph2.prototype._removeFromParentsChildList=function(e){delete this._children[this._parent[e]][e]},Graph2.prototype.parent=function(e){if(this._isCompound){const t=this._parent[e];if(t!==GRAPH_NODE2)return t}},Graph2.prototype.children=function(e){if(_2.isUndefined(e)&&(e=GRAPH_NODE2),this._isCompound){const t=this._children[e];if(t)return _2.keys(t)}else{if(e===GRAPH_NODE2)return this.nodes();if(this.hasNode(e))return[]}},Graph2.prototype.predecessors=function(e){const t=this._preds[e];if(t)return _2.keys(t)},Graph2.prototype.successors=function(e){const t=this._sucs[e];if(t)return _2.keys(t)},Graph2.prototype.neighbors=function(e){const t=this.predecessors(e);if(t)return _2.union(t,this.successors(e))},Graph2.prototype.isLeaf=function(e){let t;return t=this.isDirected()?this.successors(e):this.neighbors(e),0===t.length},Graph2.prototype.filterNodes=function(e){const t=new this.constructor({directed:this._isDirected,multigraph:this._isMultigraph,compound:this._isCompound});t.setGraph(this.graph());const A=this;_2.each(this._nodes,(function(A,n){e(n)&&t.setNode(n,A)})),_2.each(this._edgeObjs,(function(e){t.hasNode(e.v)&&t.hasNode(e.w)&&t.setEdge(e,A.edge(e))}));const n={};function l(e){const r=A.parent(e);return void 0===r||t.hasNode(r)?(n[e]=r,r):r in n?n[r]:l(r)}return this._isCompound&&_2.each(t.nodes(),(function(e){t.setParent(e,l(e))})),t},Graph2.prototype.setDefaultEdgeLabel=function(e){return _2.isFunction(e)||(e=_2.constant(e)),this._defaultEdgeLabelFn=e,this},Graph2.prototype.edgeCount=function(){return this._edgeCount},Graph2.prototype.edges=function(){return _2.values(this._edgeObjs)},Graph2.prototype.setPath=function(e,t){const A=this,n=arguments;return _2.reduce(e,(function(e,l){return n.length>1?A.setEdge(e,l,t):A.setEdge(e,l),l})),this},Graph2.prototype.setEdge=function(){let e,t,A,n,l=!1;const r=arguments[0];"object"==typeof r&&null!==r&&"v"in r?(e=r.v,t=r.w,A=r.name,2===arguments.length&&(n=arguments[1],l=!0)):(e=r,t=arguments[1],A=arguments[3],arguments.length>2&&(n=arguments[2],l=!0)),e=""+e,t=""+t,_2.isUndefined(A)||(A=""+A);const a=edgeArgsToId2(this._isDirected,e,t,A);if(_2.has(this._edgeLabels,a))return l&&(this._edgeLabels[a]=n),this;if(!_2.isUndefined(A)&&!this._isMultigraph)throw new Error("Cannot set a named edge when isMultigraph = false");this.setNode(e),this.setNode(t),this._edgeLabels[a]=l?n:this._defaultEdgeLabelFn(e,t,A);const o=edgeArgsToObj2(this._isDirected,e,t,A);return e=o.v,t=o.w,Object.freeze(o),this._edgeObjs[a]=o,incrementOrInitEntry2(this._preds[t],e),incrementOrInitEntry2(this._sucs[e],t),this._in[t][a]=o,this._out[e][a]=o,this._edgeCount++,this},Graph2.prototype.edge=function(e,t,A){const n=1===arguments.length?edgeObjToId2(this._isDirected,arguments[0]):edgeArgsToId2(this._isDirected,e,t,A);return this._edgeLabels[n]},Graph2.prototype.hasEdge=function(e,t,A){const n=1===arguments.length?edgeObjToId2(this._isDirected,arguments[0]):edgeArgsToId2(this._isDirected,e,t,A);return _2.has(this._edgeLabels,n)},Graph2.prototype.removeEdge=function(e,t,A){const n=1===arguments.length?edgeObjToId2(this._isDirected,arguments[0]):edgeArgsToId2(this._isDirected,e,t,A),l=this._edgeObjs[n];return l&&(e=l.v,t=l.w,delete this._edgeLabels[n],delete this._edgeObjs[n],decrementOrRemoveEntry2(this._preds[t],e),decrementOrRemoveEntry2(this._sucs[e],t),delete this._in[t][n],delete this._out[e][n],this._edgeCount--),this},Graph2.prototype.inEdges=function(e,t){const A=this._in[e];if(A){const e=_2.values(A);return t?_2.filter(e,(function(e){return e.v===t})):e}},Graph2.prototype.outEdges=function(e,t){const A=this._out[e];if(A){const e=_2.values(A);return t?_2.filter(e,(function(e){return e.w===t})):e}},Graph2.prototype.nodeEdges=function(e,t){const A=this.inEdges(e,t);if(A)return A.concat(this.outEdges(e,t))},PriorityQueue2.prototype.size=function(){return this._arr.length},PriorityQueue2.prototype.keys=function(){return this._arr.map((function(e){return e.key}))},PriorityQueue2.prototype.has=function(e){return _2.has(this._keyIndices,e)},PriorityQueue2.prototype.priority=function(e){const t=this._keyIndices[e];if(void 0!==t)return this._arr[t].priority},PriorityQueue2.prototype.min=function(){if(0===this.size())throw new Error("Queue underflow");return this._arr[0].key},PriorityQueue2.prototype.add=function(e,t){const A=this._keyIndices;if(e=String(e),!_2.has(A,e)){const n=this._arr,l=n.length;return A[e]=l,n.push({key:e,priority:t}),this._decrease(l),!0}return!1},PriorityQueue2.prototype.removeMin=function(){this._swap(0,this._arr.length-1);const e=this._arr.pop();return delete this._keyIndices[e.key],this._heapify(0),e.key},PriorityQueue2.prototype.decrease=function(e,t){const A=this._keyIndices[e];if(t>this._arr[A].priority)throw new Error("New priority is greater than current priority. Key: "+e+" Old: "+this._arr[A].priority+" New: "+t);this._arr[A].priority=t,this._decrease(A)},PriorityQueue2.prototype._heapify=function(e){const t=this._arr,A=2*e,n=A+1;let l=e;A<t.length&&(l=t[A].priority<t[l].priority?A:l,n<t.length&&(l=t[n].priority<t[l].priority?n:l),l!==e&&(this._swap(e,l),this._heapify(l)))},PriorityQueue2.prototype._decrease=function(e){const t=this._arr,A=t[e].priority;let n;for(;0!==e&&(n=e>>1,!(t[n].priority<A));)this._swap(e,n),e=n},PriorityQueue2.prototype._swap=function(e,t){const A=this._arr,n=this._keyIndices,l=A[e],r=A[t];A[e]=r,A[t]=l,n[r.key]=e,n[l.key]=t};var DEFAULT_WEIGHT_FUNC$12=_2.constant(1);function dijkstra(e,t,A,n){return runDijkstra(e,String(t),A||DEFAULT_WEIGHT_FUNC$12,n||function(t){return e.outEdges(t)})}function runDijkstra(e,t,A,n){const l={},r=new PriorityQueue2;let a,o;const s=function(e){const t=e.v!==a?e.v:e.w,n=l[t],s=A(e),i=o.distance+s;if(s<0)throw new Error("dijkstra does not allow negative edge weights. Bad edge: "+e+" Weight: "+s);i<n.distance&&(n.distance=i,n.predecessor=a,r.decrease(t,i))};for(e.nodes().forEach((function(e){const A=e===t?0:Number.POSITIVE_INFINITY;l[e]={distance:A},r.add(e,A)}));r.size()>0&&(a=r.removeMin(),o=l[a],o.distance!==Number.POSITIVE_INFINITY);)n(a).forEach(s);return l}function dijkstraAll(e,t,A){return _2.transform(e.nodes(),(function(n,l){n[l]=dijkstra(e,l,t,A)}),{})}function tarjan(e){let t=0;const A=[],n={},l=[];function r(a){const o=n[a]={onStack:!0,lowlink:t,index:t++};if(A.push(a),e.successors(a).forEach((function(e){_2.has(n,e)?n[e].onStack&&(o.lowlink=Math.min(o.lowlink,n[e].index)):(r(e),o.lowlink=Math.min(o.lowlink,n[e].lowlink))})),o.lowlink===o.index){const e=[];let t;do{t=A.pop(),n[t].onStack=!1,e.push(t)}while(a!==t);l.push(e)}}return e.nodes().forEach((function(e){_2.has(n,e)||r(e)})),l}function findCycles(e){return _2.filter(tarjan(e),(function(t){return t.length>1||1===t.length&&e.hasEdge(t[0],t[0])}))}var DEFAULT_WEIGHT_FUNC2=_2.constant(1);function floydWarshall(e,t,A){return runFloydWarshall(e,t||DEFAULT_WEIGHT_FUNC2,A||function(t){return e.outEdges(t)})}function runFloydWarshall(e,t,A){const n={},l=e.nodes();return l.forEach((function(e){n[e]={},n[e][e]={distance:0},l.forEach((function(t){e!==t&&(n[e][t]={distance:Number.POSITIVE_INFINITY})})),A(e).forEach((function(A){const l=A.v===e?A.w:A.v,r=t(A);n[e][l]={distance:r,predecessor:e}}))})),l.forEach((function(e){const t=n[e];l.forEach((function(A){const r=n[A];l.forEach((function(A){const n=r[e],l=t[A],a=r[A],o=n.distance+l.distance;o<a.distance&&(a.distance=o,a.predecessor=l.predecessor)}))}))})),n}function topsort2(e){const t={},A={},n=[];if(_2.each(e.sinks(),(function l(r){if(_2.has(A,r))throw new CycleException2;_2.has(t,r)||(A[r]=!0,t[r]=!0,_2.each(e.predecessors(r),l),delete A[r],n.push(r))})),_2.size(t)!==e.nodeCount())throw new CycleException2;return n}function CycleException2(){}function isAcyclic(e){try{topsort2(e)}catch(e){if(e instanceof topsort2.CycleException)return!1;throw e}return!0}function dfs$1(e,t,A){_2.isArray(t)||(t=[t]);const n=(e.isDirected()?e.successors:e.neighbors).bind(e),l=[],r={};return _2.each(t,(function(t){if(!e.hasNode(t))throw new Error("Graph does not have node: "+t);doDfs(e,t,"post"===A,r,n,l)})),l}function doDfs(e,t,A,n,l,r){_2.has(n,t)||(n[t]=!0,A||r.push(t),_2.each(l(t),(function(t){doDfs(e,t,A,n,l,r)})),A&&r.push(t))}function postorder$2(e,t){return dfs$1(e,t,"post")}function preorder$1(e,t){return dfs$1(e,t,"pre")}function prim(e,t){const A=new Graph2,n={},l=new PriorityQueue2;let r;function a(e){const A=e.v===r?e.w:e.v,a=l.priority(A);if(void 0!==a){const o=t(e);o<a&&(n[A]=r,l.decrease(A,o))}}if(0===e.nodeCount())return A;_2.each(e.nodes(),(function(e){l.add(e,Number.POSITIVE_INFINITY),A.setNode(e)})),l.decrease(e.nodes()[0],0);let o=!1;for(;l.size()>0;){if(r=l.removeMin(),_2.has(n,r))A.setEdge(r,n[r]);else{if(o)throw new Error("Input graph is not connected: "+e);o=!0}e.nodeEdges(r).forEach(a)}return A}topsort2.CycleException=CycleException2,CycleException2.prototype=new Error;var alg={components:components,dijkstra:dijkstra,dijkstraAll:dijkstraAll,findCycles:findCycles,floydWarshall:floydWarshall,isAcyclic:isAcyclic,postorder:postorder$2,preorder:preorder$1,prim:prim,tarjan:tarjan,topsort:topsort2};function List(){const e={};e._next=e._prev=e,this._sentinel=e}function unlink(e){e._prev._next=e._next,e._next._prev=e._prev,delete e._next,delete e._prev}function filterOutLinks(e,t){if("_next"!==e&&"_prev"!==e)return t}List.prototype.dequeue=function(){const e=this._sentinel,t=e._prev;if(t!==e)return unlink(t),t},List.prototype.enqueue=function(e){const t=this._sentinel;e._prev&&e._next&&unlink(e),e._next=t._next,t._next._prev=e,t._next=e,e._prev=t},List.prototype.toString=function(){const e=[],t=this._sentinel;let A=t._prev;for(;A!==t;)e.push(JSON.stringify(A,filterOutLinks)),A=A._prev;return"["+e.join(", ")+"]"};var DEFAULT_WEIGHT_FN=e=>1;function greedyFAS(e,t){if(e.nodeCount()<=1)return[];const A=buildState(e,t||DEFAULT_WEIGHT_FN);return flatten(map$1(doGreedyFAS(A.graph,A.buckets,A.zeroIdx),(function(t){return e.outEdges(t.v,t.w)})))}function doGreedyFAS(e,t,A){let n=[];const l=t[t.length-1],r=t[0];let a;for(;e.nodeCount();){for(;a=r.dequeue();)removeNode(e,t,A,a);for(;a=l.dequeue();)removeNode(e,t,A,a);if(e.nodeCount())for(let l=t.length-2;l>0;--l)if(a=t[l].dequeue(),a){n=n.concat(removeNode(e,t,A,a,!0));break}}return n}function removeNode(e,t,A,n,l=!1){const r=l?[]:void 0;return forEach$1(e.inEdges(n.v),(function(n){const a=e.edge(n),o=e.node(n.v);l&&r.push({v:n.v,w:n.w}),o.out-=a,assignBucket(t,A,o)})),forEach$1(e.outEdges(n.v),(function(n){const l=e.edge(n),r=n.w,a=e.node(r);a.in-=l,assignBucket(t,A,a)})),e.removeNode(n.v),r}function buildState(e,t){const A=new Graph2;let n=0,l=0;forEach$1(e.nodes(),(function(e){A.setNode(e,{v:e,in:0,out:0})})),forEach$1(e.edges(),(function(e){const r=A.edge(e.v,e.w)||0,a=t(e),o=r+a;A.setEdge(e.v,e.w,o),l=Math.max(l,A.node(e.v).out+=a),n=Math.max(n,A.node(e.w).in+=a)}));const r=range$1(l+n+3).map((function(){return new List})),a=n+1;return forEach$1(A.nodes(),(function(e){assignBucket(r,a,A.node(e))})),{graph:A,buckets:r,zeroIdx:a}}function assignBucket(e,t,A){A.out?A.in?e[A.out-A.in+t].enqueue(A):e[e.length-1].enqueue(A):e[0].enqueue(A)}function run$2(e){var t;forEach$1("greedy"===e.graph().acyclicer?greedyFAS(e,(t=e,function(e){return t.edge(e).weight})):dfsFAS(e),(function(t){const A=e.edge(t);e.removeEdge(t),A.forwardName=t.name,A.reversed=!0,e.setEdge(t.w,t.v,A,uniqueId("rev"))}))}function dfsFAS(e){const t=[],A={},n={};return forEach$1(e.nodes(),(function l(r){has$1(n,r)||(n[r]=!0,A[r]=!0,forEach$1(e.outEdges(r),(function(e){has$1(A,e.w)?t.push(e):l(e.w)})),delete A[r])})),t}function undo$2(e){forEach$1(e.edges(),(function(t){const A=e.edge(t);if(A.reversed){e.removeEdge(t);const n=A.forwardName;delete A.reversed,delete A.forwardName,e.setEdge(t.w,t.v,A,n)}}))}var acyclic={run:run$2,undo:undo$2};function addDummyNode(e,t,A,n){let l;do{l=uniqueId(n)}while(e.hasNode(l));return A.dummy=t,e.setNode(l,A),l}function simplify(e){const t=(new Graph2).setGraph(e.graph());return forEach$1(e.nodes(),(function(A){t.setNode(A,e.node(A))})),forEach$1(e.edges(),(function(A){const n=t.edge(A.v,A.w)||{weight:0,minlen:1},l=e.edge(A);t.setEdge(A.v,A.w,{weight:n.weight+l.weight,minlen:Math.max(n.minlen,l.minlen)})})),t}function asNonCompoundGraph(e){const t=new Graph2({multigraph:e.isMultigraph()}).setGraph(e.graph());return forEach$1(e.nodes(),(function(A){e.children(A).length||t.setNode(A,e.node(A))})),forEach$1(e.edges(),(function(A){t.setEdge(A,e.edge(A))})),t}function successorWeights(e){const t=map$1(e.nodes(),(function(t){const A={};return forEach$1(e.outEdges(t),(function(t){A[t.w]=(A[t.w]||0)+e.edge(t).weight})),A}));return zipObject(e.nodes(),t)}function predecessorWeights(e){const t=map$1(e.nodes(),(function(t){const A={};return forEach$1(e.inEdges(t),(function(t){A[t.v]=(A[t.v]||0)+e.edge(t).weight})),A}));return zipObject(e.nodes(),t)}function intersectRect(e,t){const A=e.x,n=e.y,l=t.x-A,r=t.y-n;let a,o,s=e.width/2,i=e.height/2;if(!l&&!r)throw new Error("Not possible to find intersection inside of the rectangle");return Math.abs(r)*s>Math.abs(l)*i?(r<0&&(i=-i),a=i*l/r,o=i):(l<0&&(s=-s),a=s,o=s*r/l),{x:A+a,y:n+o}}function buildLayerMatrix(e){const t=map$1(range$1(maxRank(e)+1),(function(){return[]}));return forEach$1(e.nodes(),(function(A){const n=e.node(A),l=n.rank;isUndefined$1(l)||"number"!=typeof n.order||(t[l][n.order]=A)})),t}function normalizeRanks(e){const t=min3(map$1(e.nodes(),(function(t){return e.node(t).rank})));forEach$1(e.nodes(),(function(A){const n=e.node(A);has$1(n,"rank")&&(n.rank-=t)}))}function removeEmptyRanks(e){const t=min3(map$1(e.nodes(),(function(t){return e.node(t).rank}))),A=[];forEach$1(e.nodes(),(function(n){const l=e.node(n).rank-t;A[l]||(A[l]=[]),A[l].push(n)}));let n=0;const l=e.graph().nodeRankFactor;forEach$1(A,(function(t,A){isUndefined$1(t)&&A%l!=0?--n:n&&forEach$1(t,(function(t){e.node(t).rank+=n}))}))}function addBorderNode$1(e,t,A,n){const l={width:0,height:0};return arguments.length>=4&&(l.rank=A,l.order=n),addDummyNode(e,"border",l,t)}function maxRank(e){return max3(map$1(e.nodes(),(function(t){const A=e.node(t).rank;if(!isUndefined$1(A))return A})))}function partition(e,t){const A={lhs:[],rhs:[]};return forEach$1(e,(function(e){t(e)?A.lhs.push(e):A.rhs.push(e)})),A}function time(e,t){const A=Date.now();try{return t()}finally{console.log(e+" time: "+(Date.now()-A)+"ms")}}function notime(e,t){return t()}function comparePositions(e,t){const A=e.x===t.x,n=e.y===t.y,l=t.x<e.x?t:e,r=t.y<e.y?t:e,a=e===l?t:e,o=e===r?t:e;return{isXEqual:A,isYEqual:n,leftOne:l,rightOne:a,topOne:r,bottomOne:o,dx:a.x-l.x,dy:o.y-r.y}}function isInsideRange(e,t){const[A,n]=t;return e>=A&&e<=n}function getNum(e,t=0){return e||t}function isNumber(e){return"number"==typeof e&&!isNaN(e)}var util2={addDummyNode:addDummyNode,simplify:simplify,asNonCompoundGraph:asNonCompoundGraph,successorWeights:successorWeights,predecessorWeights:predecessorWeights,intersectRect:intersectRect,buildLayerMatrix:buildLayerMatrix,normalizeRanks:normalizeRanks,removeEmptyRanks:removeEmptyRanks,addBorderNode:addBorderNode$1,maxRank:maxRank,partition:partition,time:time,notime:notime};function run$1(e){e.graph().dummyChains=[],forEach$1(e.edges(),(function(t){normalizeEdge(e,t)}))}function normalizeEdge(e,t){let A=t.v,n=e.node(A).rank;const l=t.w,r=e.node(l).rank,a=t.name,o=e.edge(t),s=o.labelRank;if(r===n+1)return;let i,u,c;for(e.removeEdge(t),c=0,++n;n<r;++c,++n)o.points=[],u={width:0,height:0,edgeLabel:o,edgeObj:t,rank:n},i=util2.addDummyNode(e,"edge",u,"_d"),n===s&&(u.width=o.width,u.height=o.height,u.dummy="edge-label",u.labelpos=o.labelpos),e.setEdge(A,i,{weight:o.weight},a),0===c&&e.graph().dummyChains.push(i),A=i;e.setEdge(A,l,{weight:o.weight},a)}function undo$1(e){forEach$1(e.graph().dummyChains,(function(t){let A=e.node(t);const n=A.edgeLabel;let l=null;for(e.setEdge(A.edgeObj,n);A.dummy;)l=e.successors(t)[0],e.removeNode(t),n.points.push({x:A.x,y:A.y}),"edge-label"===A.dummy&&(n.x=A.x,n.y=A.y,n.width=A.width,n.height=A.height),t=l,A=e.node(t)}))}var normalize2={run:run$1,undo:undo$1};function longestPath(e){const t={};forEach$1(e.sources(),(function A(n){const l=e.node(n);if(has$1(t,n))return l.rank;t[n]=!0;const r=min3(map$1(e.outEdges(n),(function(t){return A(t.w)-e.edge(t).minlen})))||0;return l.rank=r,r}))}function slack(e,t){return e.node(t.w).rank-e.node(t.v).rank-e.edge(t).minlen}function feasibleTree(e){const t=new Graph2({directed:!1}),A=e.nodes()[0],n=e.nodeCount();let l,r;for(t.setNode(A,{});tightTree(t,e)<n&&(l=findMinSlackEdge(t,e),l);)r=t.hasNode(l.v)?slack(e,l):-slack(e,l),shiftRanks(t,e,r);return t}function tightTree(e,t){return forEach$1(e.nodes(),(function A(n){forEach$1(t.nodeEdges(n),(function(l){const r=l.v,a=n===r?l.w:r;e.hasNode(a)||slack(t,l)||(e.setNode(a,{}),e.setEdge(n,a,{}),A(a))}))})),e.nodeCount()}function findMinSlackEdge(e,t){return minBy(t.edges(),(function(A){if(e.hasNode(A.v)!==e.hasNode(A.w))return slack(t,A)}))}function shiftRanks(e,t,A){forEach$1(e.nodes(),(function(e){t.node(e).rank+=A}))}var{preorder:preorder,postorder:postorder$1}=alg;function networkSimplex(e){longestPath(e=simplify(e));const t=feasibleTree(e);let A,n;for(initLowLimValues(t),initCutValues(t,e);A=leaveEdge(t);)n=enterEdge(t,e,A),exchangeEdges(t,e,A,n)}function initCutValues(e,t){let A=postorder$1(e,e.nodes());A=A.slice(0,A.length-1),forEach$1(A,(function(A){assignCutValue(e,t,A)}))}function assignCutValue(e,t,A){const n=e.node(A).parent;e.edge(A,n).cutvalue=calcCutValue(e,t,A)}function calcCutValue(e,t,A){const n=e.node(A).parent;let l=!0,r=t.edge(A,n),a=0;return r||(l=!1,r=t.edge(n,A)),a=r.weight,forEach$1(t.nodeEdges(A),(function(r){const o=r.v===A,s=o?r.w:r.v;if(s!==n){const n=o===l,i=t.edge(r).weight;if(a+=n?i:-i,isTreeEdge(e,A,s)){const t=e.edge(A,s).cutvalue;a+=n?-t:t}}})),a}function initLowLimValues(e,t){arguments.length<2&&(t=e.nodes()[0]),dfsAssignLowLim(e,{},1,t)}function dfsAssignLowLim(e,t,A,n,l){const r=A,a=e.node(n);return t[n]=!0,forEach$1(e.neighbors(n),(function(l){has$1(t,l)||(A=dfsAssignLowLim(e,t,A,l,n))})),a.low=r,a.lim=A++,l?a.parent=l:delete a.parent,A}function leaveEdge(e){return find$1(e.edges(),(function(t){return e.edge(t).cutvalue<0}))}function enterEdge(e,t,A){let n=A.v,l=A.w;t.hasEdge(n,l)||(n=A.w,l=A.v);const r=e.node(n),a=e.node(l);let o=r,s=!1;r.lim>a.lim&&(o=a,s=!0);return minBy(filter$1(t.edges(),(function(t){return s===isDescendant(e,e.node(t.v),o)&&s!==isDescendant(e,e.node(t.w),o)})),(function(e){return slack(t,e)}))}function exchangeEdges(e,t,A,n){const l=A.v,r=A.w;e.removeEdge(l,r),e.setEdge(n.v,n.w,{}),initLowLimValues(e),initCutValues(e,t),updateRanks(e,t)}function updateRanks(e,t){const A=find$1(e.nodes(),(function(e){return!t.node(e).parent}));let n=preorder(e,A);n=n.slice(1),forEach$1(n,(function(A){const n=e.node(A).parent;let l=t.edge(A,n),r=!1;l||(l=t.edge(n,A),r=!0),t.node(A).rank=t.node(n).rank+(r?l.minlen:-l.minlen)}))}function isTreeEdge(e,t,A){return e.hasEdge(t,A)}function isDescendant(e,t,A){return A.low<=t.lim&&t.lim<=A.lim}function rank(e){switch(e.graph().ranker){case"network-simplex":default:networkSimplexRanker(e);break;case"tight-tree":tightTreeRanker(e);break;case"longest-path":longestPathRanker(e)}}networkSimplex.initLowLimValues=initLowLimValues,networkSimplex.initCutValues=initCutValues,networkSimplex.calcCutValue=calcCutValue,networkSimplex.leaveEdge=leaveEdge,networkSimplex.enterEdge=enterEdge,networkSimplex.exchangeEdges=exchangeEdges;var longestPathRanker=longestPath;function tightTreeRanker(e){longestPath(e),feasibleTree(e)}function networkSimplexRanker(e){networkSimplex(e)}function parentDummyChains(e){const t=postorder(e);forEach$1(e.graph().dummyChains,(function(A){let n=e.node(A);const l=n.edgeObj,r=findPath(e,t,l.v,l.w),a=r.path,o=r.lca;let s=0,i=a[s],u=!0;for(;A!==l.w;){if(n=e.node(A),u){for(;(i=a[s])!==o&&e.node(i).maxRank<n.rank;)s++;i===o&&(u=!1)}if(!u){for(;s<a.length-1&&e.node(i=a[s+1]).minRank<=n.rank;)s++;i=a[s]}e.setParent(A,i),A=e.successors(A)[0]}}))}function findPath(e,t,A,n){const l=[],r=[],a=Math.min(t[A].low,t[n].low),o=Math.max(t[A].lim,t[n].lim);let s,i;s=A;do{s=e.parent(s),l.push(s)}while(s&&(t[s].low>a||o>t[s].lim));for(i=s,s=n;(s=e.parent(s))!==i;)r.push(s);return{path:l.concat(r.reverse()),lca:i}}function postorder(e){const t={};let A=0;return forEach$1(e.children(),(function n(l){const r=A;forEach$1(e.children(l),n),t[l]={low:r,lim:A++}})),t}function run(e){const t=util2.addDummyNode(e,"root",{},"_root"),A=treeDepths(e),n=Math.max.apply(null,values$1(A))-1,l=2*n+1;e.graph().nestingRoot=t,forEach$1(e.edges(),(function(t){e.edge(t).minlen*=l}));const r=sumWeights(e)+1;forEach$1(e.children(),(function(a){dfs(e,t,l,r,n,A,a)})),e.graph().nodeRankFactor=l}function dfs(e,t,A,n,l,r,a){const o=e.children(a);if(!o.length)return void(a!==t&&e.setEdge(t,a,{weight:0,minlen:A}));const s=util2.addBorderNode(e,"_bt"),i=util2.addBorderNode(e,"_bb"),u=e.node(a);e.setParent(s,a),u.borderTop=s,e.setParent(i,a),u.borderBottom=i,forEach$1(o,(function(o){dfs(e,t,A,n,l,r,o);const u=e.node(o),c=u.borderTop?u.borderTop:o,h=u.borderBottom?u.borderBottom:o,f=u.borderTop?n:2*n,g=c!==h?1:l-r[a]+1;e.setEdge(s,c,{weight:f,minlen:g,nestingEdge:!0}),e.setEdge(h,i,{weight:f,minlen:g,nestingEdge:!0})})),e.parent(a)||e.setEdge(t,s,{weight:0,minlen:l+r[a]})}function treeDepths(e){const t={};function A(n,l){const r=e.children(n);r&&r.length&&forEach$1(r,(function(e){A(e,l+1)})),t[n]=l}return forEach$1(e.children(),(function(e){A(e,1)})),t}function sumWeights(e){return reduce$1(e.edges(),(function(t,A){return t+e.edge(A).weight}),0)}function cleanup(e){const t=e.graph();e.removeNode(t.nestingRoot),delete t.nestingRoot,forEach$1(e.edges(),(function(t){e.edge(t).nestingEdge&&e.removeEdge(t)}))}var nestingGraph={run:run,cleanup:cleanup};function addBorderSegments(e){forEach$1(e.children(),(function t(A){const n=e.children(A),l=e.node(A);if(n.length&&forEach$1(n,t),has$1(l,"minRank")){l.borderLeft=[],l.borderRight=[];for(let t=l.minRank,n=l.maxRank+1;t<n;++t)addBorderNode(e,"borderLeft","_bl",A,l,t),addBorderNode(e,"borderRight","_br",A,l,t)}}))}function addBorderNode(e,t,A,n,l,r){const a={width:0,height:0,rank:r,borderType:t},o=l[t][r-1],s=util2.addDummyNode(e,"border",a,A);l[t][r]=s,e.setParent(s,n),o&&e.setEdge(o,s,{weight:1})}function adjust(e){const t=e.graph().rankdir.toLowerCase();"lr"!==t&&"rl"!==t||swapWidthHeight(e)}function undo(e){const t=e.graph().rankdir.toLowerCase();"bt"!==t&&"rl"!==t||reverseY(e),"lr"!==t&&"rl"!==t||(swapXY(e),swapWidthHeight(e))}function swapWidthHeight(e){forEach$1(e.nodes(),(function(t){swapWidthHeightOne(e.node(t))})),forEach$1(e.edges(),(function(t){swapWidthHeightOne(e.edge(t))}))}function swapWidthHeightOne(e){const t=e.width;e.width=e.height,e.height=t}function reverseY(e){forEach$1(e.nodes(),(function(t){reverseYOne(e.node(t))})),forEach$1(e.edges(),(function(t){const A=e.edge(t);forEach$1(A.points,reverseYOne),has$1(A,"y")&&reverseYOne(A)}))}function reverseYOne(e){e.y=-e.y}function swapXY(e){forEach$1(e.nodes(),(function(t){swapXYOne(e.node(t))})),forEach$1(e.edges(),(function(t){const A=e.edge(t);forEach$1(A.points,swapXYOne),has$1(A,"x")&&swapXYOne(A)}))}function swapXYOne(e){const t=e.x;e.x=e.y,e.y=t}var coordinateSystem={adjust:adjust,undo:undo};function initOrder(e){const t={},A=filter$1(e.nodes(),(function(t){return!e.children(t).length})),n=max3(map$1(A,(function(t){return e.node(t).rank}))),l=map$1(range$1(n+1),(function(){return[]}));return forEach$1(sortBy$1(A,(function(t){return e.node(t).rank})),(function A(n){if(has$1(t,n))return;t[n]=!0;const r=e.node(n);l[r.rank].push(n),forEach$1(e.successors(n).filter((t=>!e.children(t).length)),A)})),l}function crossCount(e,t){let A=0;for(let n=1;n<t.length;++n)A+=twoLayerCrossCount(e,t[n-1],t[n]);return A}function twoLayerCrossCount(e,t,A){const n=zipObject(A,A.map((function(e,t){return t}))),l=flatten(map$1(t,(function(t){const A=(e.outEdges(t)||[]).map((function(t){return{pos:n[t.w],weight:e.edge(t).weight}}));return sortBy$1(A,"pos")})));let r=1;for(;r<A.length;)r<<=1;const a=2*r-1;r-=1;const o=map$1(new Array(a),(function(){return 0}));let s=0;return l.forEach((function(e){let t=e.pos+r;o[t]+=e.weight;let A=0;for(;t>0;)t%2&&(A+=o[t+1]),t=t-1>>1,o[t]+=e.weight;s+=e.weight*A})),s}function barycenter(e,t){return map$1(t,(function(t){const A=e.inEdges(t);if(A.length){const n=reduce$1(A,(function(t,A){const n=e.edge(A),l=e.node(A.v);return{sum:t.sum+n.weight*l.order,weight:t.weight+n.weight}}),{sum:0,weight:0});return{v:t,barycenter:n.sum/n.weight,weight:n.weight}}return{v:t}}))}function resolveConflicts(e,t){const A={};forEach$1(e,(function(e,t){const n=A[e.v]={indegree:0,in:[],out:[],vs:[e.v],i:t};isUndefined$1(e.barycenter)||(n.barycenter=e.barycenter,n.weight=e.weight)})),forEach$1(t.edges(),(function(e){const t=A[e.v],n=A[e.w];isUndefined$1(t)||isUndefined$1(n)||(n.indegree++,t.out.push(A[e.w]))}));return doResolveConflicts(filter$1(A,(function(e){return!e.indegree})))}function doResolveConflicts(e){const t=[];function A(e){return function(t){t.merged||(isUndefined$1(t.barycenter)||isUndefined$1(e.barycenter)||t.barycenter>=e.barycenter)&&mergeEntries(e,t)}}function n(t){return function(A){A.in.push(t),0==--A.indegree&&e.push(A)}}for(;e.length;){const l=e.pop();t.push(l),forEach$1(l.in.reverse(),A(l)),forEach$1(l.out,n(l))}return t.filter((function(e){return!e.merged})).map((function(e){return pick$1(e,["vs","i","barycenter","weight"])}))}function mergeEntries(e,t){let A=0,n=0;e.weight&&(A+=e.barycenter*e.weight,n+=e.weight),t.weight&&(A+=t.barycenter*t.weight,n+=t.weight),e.vs=t.vs.concat(e.vs),e.barycenter=A/n,e.weight=n,e.i=Math.min(t.i,e.i),t.merged=!0}function sort(e,t){const A=util2.partition(e,(function(e){return has$1(e,"barycenter")})),n=A.lhs,l=sortBy$1(A.rhs,(function(e){return-e.i})),r=[];let a=0,o=0,s=0;n.sort(compareWithBias(!!t)),s=consumeUnsortable(r,l,s),forEach$1(n,(function(e){s+=e.vs.length,r.push(e.vs),a+=e.barycenter*e.weight,o+=e.weight,s=consumeUnsortable(r,l,s)}));const i={vs:flatten(r)};return o&&(i.barycenter=a/o,i.weight=o),i}function consumeUnsortable(e,t,A){let n;for(;t.length&&(n=last2(t)).i<=A;)t.pop(),e.push(n.vs),A++;return A}function compareWithBias(e){return function(t,A){return t.barycenter<A.barycenter?-1:t.barycenter>A.barycenter?1:e?A.i-t.i:t.i-A.i}}function sortSubgraph(e,t,A,n){let l=e.children(t);const r=e.node(t),a=r?r.borderLeft:void 0,o=r?r.borderRight:void 0,s={};a&&(l=filter$1(l,(function(e){return e!==a&&e!==o})));const i=barycenter(e,l);forEach$1(i,(function(t){if(e.children(t.v).length){const l=sortSubgraph(e,t.v,A,n);s[t.v]=l,has$1(l,"barycenter")&&mergeBarycenters(t,l)}}));const u=resolveConflicts(i,A);expandSubgraphs(u,s);const c=sort(u,n);if(a&&(c.vs=flatten([a,c.vs,o]),e.predecessors(a).length)){const t=e.node(e.predecessors(a)[0]),A=e.node(e.predecessors(o)[0]);has$1(c,"barycenter")||(c.barycenter=0,c.weight=0),c.barycenter=(c.barycenter*c.weight+t.order+A.order)/(c.weight+2),c.weight+=2}return c}function expandSubgraphs(e,t){forEach$1(e,(function(e){e.vs=flatten(e.vs.map((function(e){return t[e]?t[e].vs:e})))}))}function mergeBarycenters(e,t){isUndefined$1(e.barycenter)?(e.barycenter=t.barycenter,e.weight=t.weight):(e.barycenter=(e.barycenter*e.weight+t.barycenter*t.weight)/(e.weight+t.weight),e.weight+=t.weight)}function buildLayerGraph(e,t,A){const n=createRootNode(e),l=new Graph2({compound:!0}).setGraph({root:n}).setDefaultNodeLabel((function(t){return e.node(t)}));return forEach$1(e.nodes(),(function(r){const a=e.node(r),o=e.parent(r);(a.rank===t||a.minRank<=t&&t<=a.maxRank)&&(l.setNode(r),l.setParent(r,o||n),forEach$1(e[A](r),(function(t){const A=t.v===r?t.w:t.v,n=l.edge(A,r),a=isUndefined$1(n)?0:n.weight;l.setEdge(A,r,{weight:e.edge(t).weight+a})})),has$1(a,"minRank")&&l.setNode(r,{borderLeft:a.borderLeft[t],borderRight:a.borderRight[t]}))})),l}function createRootNode(e){let t;for(;e.hasNode(t=uniqueId("_root")););return t}function addSubgraphConstraints(e,t,A){const n={};let l;forEach$1(A,(function(A){let r,a,o=e.parent(A);for(;o;){if(r=e.parent(o),r?(a=n[r],n[r]=o):(a=l,l=o),a&&a!==o)return void t.setEdge(a,o);o=r}}))}function order(e){const t=util2.maxRank(e),A=buildLayerGraphs(e,range$1(1,t+1),"inEdges"),n=buildLayerGraphs(e,range$1(t-1,-1,-1),"outEdges");let l=initOrder(e);assignOrder(e,l);let r,a=Number.POSITIVE_INFINITY;for(let t=0,o=0;o<4;++t,++o){sweepLayerGraphs(t%2?A:n,t%4>=2),l=util2.buildLayerMatrix(e);const s=crossCount(e,l);s<a&&(o=0,r=cloneDeep2(l),a=s)}assignOrder(e,r)}function buildLayerGraphs(e,t,A){return map$1(t,(function(t){return buildLayerGraph(e,t,A)}))}function sweepLayerGraphs(e,t){const A=new Graph2;forEach$1(e,(function(e){const n=e.graph().root,l=sortSubgraph(e,n,A,t);forEach$1(l.vs,(function(t,A){e.node(t).order=A})),addSubgraphConstraints(e,A,l.vs)}))}function assignOrder(e,t){t.forEach((function(t){forEach$1(t,(function(t,A){t&&(e.node(t).order=A)}))}))}function findType1Conflicts(e,t){const A={};return reduce$1(t,(function(t,n){let l=0,r=0;const a=t.length,o=last2(n);return forEach$1(n,(function(t,s){if(!t)return;const i=findOtherInnerSegmentNode(e,t),u=i?e.node(i).order:a;(i||t===o)&&(forEach$1(n.slice(r,s+1),(function(t){forEach$1(e.predecessors(t),(function(n){const r=e.node(n),a=r.order;!(a<l||u<a)||r.dummy&&e.node(t).dummy||addConflict(A,n,t)}))})),r=s+1,l=u)})),n})),A}function findType2Conflicts(e,t){const A={};function n(t,n,l,r,a){let o;forEach$1(range$1(n,l),(function(n){o=t[n],o&&e.node(o).dummy&&forEach$1(e.predecessors(o),(function(t){const n=e.node(t);n.dummy&&(n.order<r||n.order>a)&&addConflict(A,t,o)}))}))}return reduce$1(t,(function(t,A){let l,r=-1,a=0;return forEach$1(A,(function(o,s){if(o){if("border"===e.node(o).dummy){const t=e.predecessors(o);t.length&&(l=e.node(t[0]).order,n(A,a,s,r,l),a=s,r=l)}n(A,a,A.length,l,t.length)}})),A})),A}function findOtherInnerSegmentNode(e,t){if(e.node(t).dummy)return find$1(e.predecessors(t),(function(t){return e.node(t).dummy}))}function addConflict(e,t,A){if(t>A){const e=t;t=A,A=e}let n=e[t];n||(e[t]=n={}),n[A]=!0}function hasConflict(e,t,A){if(t>A){const e=t;t=A,A=e}return has$1(e[t],A)}function verticalAlignment(e,t,A,n){const l={},r={},a={};return forEach$1(t,(function(e){forEach$1(e,(function(e,t){l[e]=e,r[e]=e,a[e]=t}))})),forEach$1(t,(function(e){let t=-1;forEach$1(e,(function(e){if(!e)return;let o=n(e);if(o.length){o=sortBy$1(o,(function(e){return a[e]}));const n=(o.length-1)/2;for(let s=Math.floor(n),i=Math.ceil(n);s<=i;++s){const n=o[s];r[e]===e&&t<a[n]&&!hasConflict(A,e,n)&&(r[n]=e,r[e]=l[e]=l[n],t=a[n])}}}))})),{root:l,align:r}}function horizontalCompaction(e,t,A,n,l){const r={},a=buildBlockGraph(e,t,A,l),o={};forEach$1(a.nodes(),(function e(t){has$1(o,t)||(o[t]=!0,r[t]=reduce$1(a.inEdges(t)||[],(function(t,A){return e(A.v),Math.max(t,r[A.v]+a.edge(A))}),0))}));const s=l?"borderLeft":"borderRight";return forEach$1(a.nodes(),(function t(A){if(2!==o[A]){o[A]++;const n=e.node(A),l=reduce$1(a.outEdges(A)||[],((e,A)=>(t(A.w),Math.min(e,r[A.w]-a.edge(A)))),Number.POSITIVE_INFINITY);l!==Number.POSITIVE_INFINITY&&n.borderType!==s&&(r[A]=Math.max(r[A],l))}})),forEach$1(n,(function(e){r[e]=r[A[e]]})),r}function buildBlockGraph(e,t,A,n){const l=new Graph2,r=e.graph(),a=makeSepFn(r.nodesep,r.edgesep,n);return forEach$1(t,(function(t){let n;forEach$1(t,(function(t){const r=A[t];if(l.setNode(r),n){const o=A[n],s=l.edge(o,r);l.setEdge(o,r,Math.max(a(e,t,n),s||0))}n=t}))})),l}function findSmallestWidthAlignment(e,t){return minBy(values$1(t),(function(t){const A=(minBy(toPairs$1(t),(t=>t[1]-width(e,t[0])/2))||["k",0])[1];return(maxBy(toPairs$1(t),(t=>t[1]+width(e,t[0])/2))||["k",0])[1]-A}))}function alignCoordinates(e,t){const A=values$1(t),n=min3(A),l=max3(A);forEach$1(["u","d"],(function(A){forEach$1(["l","r"],(function(r){const a=A+r,o=e[a];if(o===t)return;const s=values$1(o),i="l"===r?n-min3(s):l-max3(s);i&&(e[a]=mapValues(o,(function(e){return e+i})))}))}))}function balance(e,t){return mapValues(e.ul,(function(A,n){if(t)return e[t.toLowerCase()][n];{const t=sortBy$1(map$1(e,n));return(t[1]+t[2])/2}}))}function positionX(e){const t=util2.buildLayerMatrix(e),A=Object.assign(findType1Conflicts(e,t),findType2Conflicts(e,t)),n={};let l;forEach$1(["u","d"],(function(r){l="u"===r?t:values$1(t).reverse(),forEach$1(["l","r"],(function(t){"r"===t&&(l=map$1(l,(function(e){return values$1(e).reverse()})));const a=("u"===r?e.predecessors:e.successors).bind(e),o=verticalAlignment(e,l,A,a);let s=horizontalCompaction(e,l,o.root,o.align,"r"===t);"r"===t&&(s=mapValues(s,(function(e){return-e}))),n[r+t]=s}))}));const r=findSmallestWidthAlignment(e,n);return alignCoordinates(n,r),balance(n,e.graph().align)}function makeSepFn(e,t,A){return function(n,l,r){const a=n.node(l),o=n.node(r);if(!a||!o)return 0;let s,i=0;if(i+=a.marginr||0,i+=getNodeWidth(a)/2,has$1(a,"labelpos"))switch(a.labelpos.toLowerCase()){case"l":s=-getNodeWidth(a)/2;break;case"r":s=getNodeWidth(a)/2}if(s&&(i+=A?s:-s),s=0,i+=(a.dummy?t:e)/2,i+=(o.dummy?t:e)/2,i+=o.marginl||0,i+=getNodeWidth(o)/2,has$1(o,"labelpos"))switch(o.labelpos.toLowerCase()){case"l":s=getNodeWidth(o)/2;break;case"r":s=-getNodeWidth(o)/2}return s&&(i+=A?s:-s),s=0,i}}function getNodeWidth(e){return e?Math.max(e.minwidth||0,e.width):0}function width(e,t){return getNodeWidth(e.node(t))}function position(e){doPositionY(e),forEach$1(positionX(e),(function(t,A){const n=e.node(A);n&&(n.x=t)}))}function doPositionY(e){const t=util2.buildLayerMatrix(e),A=e.graph().ranksep;let n=0;const l={};e.nodes().forEach((t=>{const A=e.node(t),n=isNumber(A.minRank)?A.minRank:A.rank;l[n]||(l[n]={marginTop:0,marginBottom:0,paddingTop:0,paddingBottom:0});const r=l[n];r.marginTop=Math.max(getNum(A.margint),r.marginTop),r.marginBottom=Math.max(getNum(A.marginb),r.marginBottom),r.paddingTop=Math.max(getNum(A.paddingt),r.paddingTop),r.paddingBottom=Math.max(getNum(A.paddingb),r.paddingBottom)})),forEach$1(t,(function(t,r){let a=0,o=0,s=0,i=0,u=0;for(const A of t)if(A){const t=e.node(A);if(l[t.rank]){const e=l[t.rank];a=Math.max(e.marginTop,a),o=Math.max(e.marginBottom,o),s=Math.max(e.paddingTop,s),i=Math.max(e.paddingBottom,i)}u=Math.max(u,t.height+getNum(t.margint)+getNum(t.marginb)+getNum(t.paddingt)+getNum(t.paddingb))}for(const A of t)A&&(e.node(A).y=n+a+u/2);n+=u+A+a+o+s+i}))}function layout(e,t){const A=t&&t.debugTiming?util2.time:util2.notime;A("layout",(function(){const t=A("  buildLayoutGraph",(function(){return buildLayoutGraph(e)}));A("  runLayout",(function(){runLayout(t,A)})),A("  updateInputGraph",(function(){updateInputGraph(e,t)}))}))}function runLayout(e,t){t("    makeSpaceForEdgeLabels",(function(){makeSpaceForEdgeLabels(e)})),t("    removeSelfEdges",(function(){removeSelfEdges(e)})),t("    acyclic",(function(){acyclic.run(e)})),t("    nestingGraph.run",(function(){nestingGraph.run(e)})),t("    rank",(function(){rank(e)})),t("    injectEdgeLabelProxies",(function(){injectEdgeLabelProxies(e)})),t("    removeEmptyRanks",(function(){removeEmptyRanks(e)})),t("    nestingGraph.cleanup",(function(){nestingGraph.cleanup(e)})),t("    normalizeRanks",(function(){normalizeRanks(e)})),t("    assignRankMinMax",(function(){assignRankMinMax(e)})),t("    removeEdgeLabelProxies",(function(){removeEdgeLabelProxies(e)})),t("    normalize.run",(function(){normalize2.run(e)})),t("    parentDummyChains",(function(){parentDummyChains(e)})),t("    addBorderSegments",(function(){addBorderSegments(e)})),t("    order",(function(){order(e)})),t("    insertSelfEdges",(function(){insertSelfEdges(e)})),t("    adjustCoordinateSystem",(function(){coordinateSystem.adjust(e)})),t("    position",(function(){position(e)})),t("    positionSelfEdges",(function(){positionSelfEdges(e)})),t("    removeBorderNodes",(function(){removeBorderNodes(e)})),t("    normalize.undo",(function(){normalize2.undo(e)})),t("    fixupEdgeLabelCoords",(function(){fixupEdgeLabelCoords(e)})),t("    undoCoordinateSystem",(function(){coordinateSystem.undo(e)})),t("    translateGraph",(function(){translateGraph(e)})),t("    assignNodeIntersects",(function(){assignNodeIntersects(e)})),t("    reversePoints",(function(){reversePointsForReversedEdges(e)})),t("    acyclic.undo",(function(){acyclic.undo(e)}))}function updateInputGraph(e,t){forEach$1(e.nodes(),(function(A){const n=e.node(A),l=t.node(A);n&&(n.x=l.x,n.y=l.y,t.children(A).length&&(n.width=l.width,n.height=l.height))})),forEach$1(e.edges(),(function(A){const n=e.edge(A),l=t.edge(A);n.points=l.points,n.labelPoint=l.labelPoint,has$1(l,"x")&&(n.x=l.x,n.y=l.y)})),e.graph().width=t.graph().width,e.graph().height=t.graph().height}var graphNumAttrs=["nodesep","edgesep","ranksep","marginx","marginy"],graphDefaults={ranksep:50,edgesep:20,nodesep:50,rankdir:"tb",splines:"polyline",avoid_label_on_border:!1},graphAttrs=["acyclicer","ranker","rankdir","align","splines","avoid_label_on_border"],nodeNumAttrs=["width","height","marginl","marginr","margint","marginb","paddingt","paddingb","minwidth"],nodeDefaults={width:0,height:0,marginl:0,marginr:0,margint:0,marginb:0},edgeNumAttrs=["minlen","weight","width","height","labeloffset"],edgeDefaults={minlen:1,weight:1,width:0,height:0,labeloffset:10,labelpos:"r"},edgeAttrs=["labelpos"];function buildLayoutGraph(e){const t=new Graph2({multigraph:!0,compound:!0}),A=canonicalize(e.graph());return t.setGraph(Object.assign({},graphDefaults,selectNumberAttrs(A,graphNumAttrs),pick$1(A,graphAttrs),{borderRanks:new Set})),forEach$1(e.nodes(),(function(A){const n=canonicalize(e.node(A));t.setNode(A,defaults$1(selectNumberAttrs(n,nodeNumAttrs),nodeDefaults)),t.setParent(A,e.parent(A))})),forEach$1(e.edges(),(function(A){const n=canonicalize(e.edge(A));t.setEdge(A,Object.assign({},edgeDefaults,selectNumberAttrs(n,edgeNumAttrs),pick$1(n,edgeAttrs)))})),t}function makeSpaceForEdgeLabels(e){const t=e.graph();t.ranksep/=2,forEach$1(e.edges(),(function(A){const n=e.edge(A);n.minlen*=2,"c"!==n.labelpos.toLowerCase()&&("TB"===t.rankdir||"BT"===t.rankdir?n.width+=n.labeloffset:n.height+=n.labeloffset)}))}function injectEdgeLabelProxies(e){forEach$1(e.edges(),(function(t){const A=e.edge(t);if(A.width&&A.height){const A=e.node(t.v),n={rank:(e.node(t.w).rank-A.rank)/2+A.rank,e:t};util2.addDummyNode(e,"edge-proxy",n,"_ep")}}))}function assignRankMinMax(e){let t=0;forEach$1(e.nodes(),(function(A){const n=e.node(A);n.borderTop&&(n.minRank=e.node(n.borderTop).rank,n.maxRank=e.node(n.borderBottom).rank,t=Math.max(t,n.maxRank))})),e.graph().maxRank=t}function removeEdgeLabelProxies(e){forEach$1(e.nodes(),(function(t){const A=e.node(t);"edge-proxy"===A.dummy&&(e.edge(A.e).labelRank=A.rank,e.removeNode(t))}))}function translateGraph(e){let t=Number.POSITIVE_INFINITY,A=0,n=Number.POSITIVE_INFINITY,l=0;const r=e.graph(),a=r.marginx||0,o=r.marginy||0;function s(e){const r=e.x,a=e.y,o=Math.max(("minwidth"in e?e.minwidth:0)||0,e.width),s=e.height;t=Math.min(t,r-o/2),A=Math.max(A,r+o/2),n=Math.min(n,a-s/2),l=Math.max(l,a+s/2)}forEach$1(e.nodes(),(function(t){s(e.node(t))})),forEach$1(e.edges(),(function(t){const A=e.edge(t);has$1(A,"x")&&s(A)})),t-=a,n-=o,forEach$1(e.nodes(),(function(A){const l=e.node(A);l.x-=t,l.y-=n})),forEach$1(e.edges(),(function(A){const l=e.edge(A);forEach$1(l.points,(function(e){e.x-=t,e.y-=n})),has$1(l,"x")&&(l.x-=t),has$1(l,"y")&&(l.y-=n)})),r.width=A-t+a,r.height=l-n+o}function assignNodeIntersects(e){const{rankdir:t,splines:A,borderRanks:n,nodesep:l,avoid_label_on_border:r}=e.graph(),a="TB"===t.toUpperCase(),o="BT"===t.toUpperCase()||a,s="ortho"===A;forEach$1(e.edges(),(function(t){const A=e.edge(t),a=e.node(t.v),i=e.node(t.w);let u=null,c=null;if(A.points){u=A.points[0],c=A.points[A.points.length-1];const e=A.points.slice(1,A.points.length-1);if(r){n.has(a.rank+1)&&(u.y+=l)}const t={...u};A.labelPoint=t;const h=util2.intersectRect(a,t),f=util2.intersectRect(i,c);let g=!1;if(s){const n=comparePositions(a,i),{leftOne:l,rightOne:r,bottomOne:s,topOne:d}=n,p=e.length?e[e.length-1]:null,B={x:[l.x,r.x],y:[d.y,s.y]};if(o&&!n.isXEqual&&isInsideRange(t.x,B.x)){const n=d.y+d.height/2,a=s.y-s.height/2,o={...h},i={...f};o.y=Math.max(h.y,n),i.y=Math.min(f.y,a),u={x:o.x,y:t.y},c={x:i.x,y:(p||t).y};const B=[o,u,t,...e,c,i],E=[r.x-r.width/2,l.x+l.width/2];if(E[0]<E[1]){if(B.every((e=>isInsideRange(e.x,E))))for(const e of B)e.x=t.x}A.points=B,g=!0}else if(!o&&!n.isYEqual&&isInsideRange(t.y,B.y)){const{leftOne:l,rightOne:r}=n,a=l.x+l.width/2,o=r.x-r.width/2,i={...h,x:Math.max(h.x,a)},B={...f,x:Math.min(f.x,o)};u={x:t.x,y:i.y},c={x:(p||t).x,y:B.y};const E=[i,u,t,...e,c,B],m=[s.y-s.height/2,d.y+d.height/2];if(m[0]<m[1]){if(E.every((e=>isInsideRange(e.y,m))))for(const e of E)e.y=t.y}A.points=E,g=!0}}if(!g){const e=util2.intersectRect(a,t),n=util2.intersectRect(i,c);A.points.unshift(e),A.points.push(n)}}else A.points=[],u=i,c=a,A.points.unshift(util2.intersectRect(a,u)),A.points.push(util2.intersectRect(i,c))}))}function fixupEdgeLabelCoords(e){forEach$1(e.edges(),(function(t){const A=e.edge(t);if(has$1(A,"x"))switch("l"!==A.labelpos&&"r"!==A.labelpos||(A.width-=A.labeloffset),A.labelpos){case"l":A.x-=A.width/2+A.labeloffset;break;case"r":A.x+=A.width/2+A.labeloffset}}))}function reversePointsForReversedEdges(e){forEach$1(e.edges(),(function(t){const A=e.edge(t);A.reversed&&A.points.reverse()}))}function removeBorderNodes(e){const{borderRanks:t}=e.graph();forEach$1(e.nodes(),(function(A){if(e.children(A).length){const n=e.node(A),l=e.node(n.borderTop),r=e.node(n.borderBottom),a=e.node(last2(n.borderLeft)),o=e.node(last2(n.borderRight));t.add(l.rank),t.add(r.rank);const s=Math.abs(o.x-a.x);if(n.width=Math.max(s,n.minwidth||0),n.minwidth&&n.minwidth>s){!function(t,A){const n={},l=r=>{if(n[r])return;n[r]=!0;const a=e.node(r);a.x>=A&&(a.x+=t);for(const t of e.children(r))l(t)};for(const t of e.nodes())l(t)}(n.minwidth-s,Math.min(a.x,o.x)+s)}n.height=Math.abs(r.y-l.y),n.x=a.x+n.width/2,n.y=l.y+n.height/2}})),forEach$1(e.nodes(),(function(t){"border"===e.node(t).dummy&&e.removeNode(t)}))}function removeSelfEdges(e){forEach$1(e.edges(),(function(t){if(t.v===t.w){const A=e.node(t.v);A.selfEdges||(A.selfEdges=[]),A.selfEdges.push({e:t,label:e.edge(t)}),e.removeEdge(t)}}))}function insertSelfEdges(e){util2.buildLayerMatrix(e).forEach((function(t){let A=0;t.forEach((function(t,n){const l=e.node(t);l.order=n+A,forEach$1(l.selfEdges,(function(t){util2.addDummyNode(e,"selfedge",{width:t.label.width,height:t.label.height,rank:l.rank,order:n+ ++A,e:t.e,label:t.label},"_se")})),delete l.selfEdges}))}))}function positionSelfEdges(e){forEach$1(e.nodes(),(function(t){const A=e.node(t);if("selfedge"===A.dummy){const n=e.node(A.e.v),l=n.x+n.width/2,r=n.y,a=A.x-l,o=n.height/2;e.setEdge(A.e,A.label),e.removeNode(t),A.label.points=[{x:l+2*a/3,y:r-o},{x:l+5*a/6,y:r-o},{x:l+a,y:r},{x:l+5*a/6,y:r+o},{x:l+2*a/3,y:r+o}],A.label.x=A.x,A.label.y=A.y}}))}function selectNumberAttrs(e,t){return mapValues(pick$1(e,t),Number)}function canonicalize(e){const t={};return forEach$1(e,(function(e,A){t[A.toLowerCase()]=e})),t}var index={layout:layout,util:util2},DagreWrapper=class{constructor(e){this.g=e}doLayout(){index.layout(this.g)}callNodeOnLayout(){const e=this.g;e.nodes().forEach((function(t){const A=e.node(t);A&&A.onLayout&&A.onLayout(A)}))}callEdgeOnLayout(){const e=this.g;e.edges().forEach((function(t){const A=e.edge(t);A&&A.onLayout&&A.onLayout(A)}))}getGraphBounds(){return getGraphBounds(this.g)}},conf2,erArtist={draw(e,t,A){conf2=getConf2(e);const n={type:"group",attrs:{},children:[]},l=createLayoutGraph({multigraph:!0,directed:!0,compound:!1}).setGraph({rankdir:conf2.layoutDirection,nodesep:80,edgesep:conf2.edgesep,ranksep:conf2.ranksep,splines:getGraphSplinesOption(conf2.edgeType)}).setDefaultEdgeLabel((function(){return{}})),r=new DagreWrapper(l);drawEntities(n,e,l);const a=addRelationships(e.relationships,l);drawInheritances(e,l,n),r.doLayout(),r.callNodeOnLayout(),r.callEdgeOnLayout();const o={type:"group",children:[],class:"er__relations"},s=makeBounds();a.forEach((function(e){const{bounds:t}=drawRelationshipFromLayout(o,e,l);tryExpandBounds(s,t)})),n.children.unshift(o);const i=r.getGraphBounds();tryExpandBounds(i,s);const u=conf2.diagramPadding,{title:c}=e;let h,f;if(c){const e=makeTitleMark(c,{fontSize:conf2.fontSize,fontFamily:conf2.fontFamily},{fill:conf2.textColor});h=e.titleSize,f=e.mark,f.class="er__title",n.children.push(f),h.height+=conf2.fontSize}const{width:g,height:d}=adjustRootMarkBounds({rootMark:n,gBounds:i,padX:u,padY:u,useMaxWidth:conf2.useMaxWidth,containerSize:null==A?void 0:A.containerSize,titleSize:h,titleMark:f});return{mark:n,width:g,height:d}}};function getFontConfig(e){return{fontSize:e.fontSize,fontFamily:e.fontFamily}}var drawAttributes=(e,t,A)=>{const n=conf2.entityPaddingY/2,l=conf2.entityPaddingX/2,r=.85*conf2.fontSize,a=Math.ceil(t.attrs.width),o=Math.ceil(t.attrs.height);let s=0,i=o+2*n,u=1;const c=makeEmptyGroup();e.children.push(c);const h=new TableBuilder;A.forEach((e=>{const A=`${t.attrs.id}-attr-${u}`,l=(e,t)=>makeMark("text",{...getTextDimensionsInPresicion(t,a),...getBaseText(),id:`${A}-${e}`,text:t,textAlign:"left",textBaseline:"middle",...a},{class:"er__entity-label"}),a={...getFontConfig(conf2),fontSize:r};let o;e.attributeKey&&(o=TableCell.fromMark(l("key",e.attributeKey),"key"));const c=TableCell.fromMark(l("type",e.attributeType),"type"),f=TableCell.fromMark(l("name",e.attributeName),"name");let g;e.comment&&(g=TableCell.fromMark(l("name",e.comment),"comment"));const d=new TableRow;d.addCells([c,f,o,g]),s=Math.max(s,d.map((e=>{var t;return(null===(t=e.mark)||void 0===t?void 0:t.attrs.width)||0})).reduce(((e,t)=>e+t),0));const p=d.map((e=>{var t;return(null===(t=e.mark)||void 0===t?void 0:t.attrs.height)||0}));i+=Math.max(...p)+2*n,u+=1,h.addRow(d)}));const f={key:0,type:0,name:0,comment:0};h.rows.forEach((e=>{e.map((e=>{f[e.name]=Math.floor(Math.max(f[e.name],e.width))}))}));const g={key:0,type:0,name:0,comment:0};let d=0;Object.keys(g).sort(((e,t)=>CELL_ORDER[e]-CELL_ORDER[t])).forEach((e=>{g[e]=d,f[e]&&(d+=Math.floor(f[e]+2*l))}));const p={width:Math.ceil(Math.max(conf2.minEntityWidth,d,a+2*l)),height:A.length>0?i:Math.max(conf2.minEntityHeight,o+2*conf2.entityPaddingY)};if(A.length>0){let e=function(e){return makeMark("rect",{fill:a,stroke:conf2.stroke,...e})};t.matrix=mat3_exports.fromTranslation(mat3_exports.create(),[p.width/2,n+o/2]);let A=toFixed(o+2*n),r="attributeBoxOdd";const a=conf2.attributeFill,s=Object.keys(CELL_ORDER);h.rows.forEach((t=>{const a=t.map((e=>e.mark)).reduce(((e,t)=>Math.max(e,t.attrs.height)),0),o=toFixed(a+2*n),i=toFixed(A+n+a/2),u=makeEmptyGroup();let h;c.children.push(u);let d=0;s.forEach((n=>{if(!f[n])return;const r=t.getCell(n),a=g[n],s=e({x:a,y:A,width:f[n]+2*l,height:o});u.children.push(s),d+=s.attrs.width,h=s,r&&(u.children.push(r.mark),r.mark.matrix=mat3_exports.fromTranslation(mat3_exports.create(),[a+l,i]))})),h&&(h.attrs.width+=Math.max(0,p.width-d));const B=t.map((e=>(null==e?void 0:e.mark.attrs.height)||0));A+=toFixed(Math.max(...B)+2*n),r="attributeBoxOdd"==r?"attributeBoxEven":"attributeBoxOdd"}))}else p.height=Math.max(conf2.minEntityHeight,i),t.matrix=mat3_exports.fromTranslation(mat3_exports.create(),[p.width/2,p.height/2]);return{...p,attributeGroup:c}},drawEntities=function(e,t,A){const n=Object.keys(t.entities),l=[];return n.forEach((function(n){const r=t.entities[n].itemId,a=makeMark("group",{id:n},{children:[],class:"er__entity"});l.push(a);const o={...getFontConfig(conf2),fontWeight:"bold"},s=makeMark("text",{...getBaseText(),...getTextDimensionsInPresicion(n,o),text:n,id:r,textAlign:"center",textBaseline:"middle",fill:conf2.textColor,...o},{itemId:r,class:"er__entity-label"}),i=makeMark("rect",{...getBaseText(),fill:conf2.fill,stroke:conf2.stroke,x:0,y:0,radius:conf2.borderRadius},{itemId:r,class:"er__entity-box"});a.children.push(i,s);const{width:u,height:c,attributeGroup:h}=drawAttributes(a,s,t.entities[n].attributes);safeAssign(i.attrs,{width:u,height:c}),h.itemId=r,A.setNode(n,{width:u,height:c,id:n,onLayout(e){const t=Math.floor(e.x),A=Math.floor(e.y);[i,s].forEach((e=>{safeAssign(e.attrs,{x:t-i.attrs.width/2,y:A-i.attrs.height/2})})),h&&positionGroupContents(h,{x:toFixed(t-u/2),y:toFixed(A-c/2),width:e.width,height:e.height})}}),e.children.push(a)})),l},getEdgeName=function(e){return(e.entityA+e.roleA+e.entityB).replace(/\s/g,"")},addRelationships=function(e,t){return e.forEach((function(e){t.setEdge(e.entityA,e.entityB,{name:getEdgeName(e),relationship:e})})),e},relCnt=0,drawRelationshipFromLayout=function(e,t,A){relCnt++;const n=makeBounds(),l=A.edge(t.entityA,t.entityB);if(!("relationship"in l))return;const[r,...a]=l.points,o=a[0],s=a[a.length-1];let i;if(updateBoundsByPoints(n,l.points),"curved"===conf2.edgeType){i=getPointsCurvePath(l.points)}else i=getPointsLinearPath(l.points);const u=t.itemId,c=makeMark("path",{path:i,stroke:conf2.edgeColor,lineJoin:"round"},{itemId:u});t.relSpec.relType===Identification.NON_IDENTIFYING&&(c.attrs.lineDash=[4,4]);const h=calcDirection(a[a.length-1],a[a.length-2]),f=drawMarkerTo(s,t.relSpec.cardA,h,{stroke:conf2.stroke,id:`${l.name}-end`}),g=calcDirection(r,o),d=drawMarkerTo(r,t.relSpec.cardB,g,{stroke:conf2.stroke,id:`${l.name}-start`}),p=l.labelPoint||getPointAt(l.points,.4,!0),B=p.x,E=p.y,m="rel"+relCnt,b={...getFontConfig(conf2),fontWeight:400},y=makeMark("text",{text:t.roleA,id:m,textAlign:"center",textBaseline:"middle",x:B,y:E,fill:conf2.textColor,...b},{itemId:u,class:"er__relationship-label"}),w=getTextDimensionsInPresicion(t.roleA,b);w.width+=conf2.fontSize/2,w.height+=conf2.fontSize/2;const Q=makeLabelBg(w,{x:B,y:E},{id:`#${m}`,fill:conf2.labelBackground});tryExpandBounds(n,calcBound([Q]));const C=[c,Q,y,d,f].filter((e=>!!e));return e.children.push(...C),{bounds:n}};function drawInheritances(e,t,A){const n=getFontConfig(conf2),l=makeEmptyGroup();A.children.push(l),e.inheritances.forEach((e=>{const A=getTextDimensionsInPresicion("ISA",n),r=makeMark("text",{text:"ISA",textAlign:"center",textBaseline:"middle",fill:conf2.textColor,...n},{class:"er__relationship-label"});l.children.push(r);const a=`inherit-${e.sup}-${e.sub}`,o=1.8*Math.max(A.width,A.height),s={width:o,height:Math.ceil(o*Math.sin(Math.PI/3))+5};let i;t.setNode(a,{...s,onLayout(e){i={x:toFixed(e.x),y:toFixed(e.y)}}}),t.setEdge(a,e.sup,{isInheritance:!0,onLayout(e){const t=makeLinePath(e,conf2);l.children.push(t);const n=calcDirection(e.points[0],e.points[1]),{mark:a}=makeTriangle(i,o,n+Math.PI/2,{stroke:conf2.edgeColor,fill:conf2.attributeFill,lineJoin:"round"});l.children.unshift(a);const s=-A.width*Math.cos(n)/4,u=-A.height*Math.sin(n);safeAssign(r.attrs,{x:i.x+s,y:i.y+u})}}),t.setEdge(e.sub,a,{isInheritance:!0,onLayout(e){const t=makeLinePath(e,conf2);l.children.push(t)}})}))}function makeLinePath(e,t){return makeMark("path",{path:"curved"===t.edgeType?getPointsCurvePath(e.points):getPointsLinearPath(e.points),stroke:t.edgeColor,lineJoin:"round"})}var artist_default2=erArtist,moo2=__toESM(require_moo());function id2(e){return e[0]}var COLOR2=/#[a-zA-Z0-9]+/,PARAM_DIRECTIVE2=/@param/,CONFIG_DIRECTIVE3=/@config/,L_PAREN2=/\(/,R_PAREN2=/\)/;function getTokenValue2(e){return e&&"value"in e?e.value:e}function handleConfigOpenCloseStatement2(e){const t=e[2].map((e=>e.type?getTokenValue2(e):e)).join("");try{return{type:"overrideConfig",value:JSON.parse(t)}}catch(e){return{type:"overrideConfig",error:e}}}var COMMENT_LINE2=/%%.*/,lexer2=moo2.compile({NL:MOO_NEWLINE,WS:{match:/ +/,lineBreaks:!1},QUOTED_WORD:QUOTED_WORD_REGEXP,ZERO_OR_ONE:/\|o|o\|/,ZERO_OR_MORE:/\}o|o\{/,ONE_OR_MORE:/\}\||\|\{/,ONLY_ONE:/\|\|/,NON_IDENTIFYING:/\.\.|\.\-|\-\./,IDENTIFYING:/\-\-/,COLON:/:/,LEFT_BRACE:/\{/,RIGHT_BRACE:/\}/,INHERIT:/inherit/,PARAM_DIRECTIVE:/@param/,COMMENT_LINE:COMMENT_LINE_REGEXP,CONFIG_DIRECTIVE:CONFIG_DIRECTIVE3,VALID_TEXT:{match:VALID_TEXT_REGEXP,fallback:!0}}),yy2;function setYY2(e){yy2=e}var grammar2={Lexer:lexer2,ParserRules:[{name:"_$ebnf$1",symbols:[]},{name:"_$ebnf$1",symbols:["_$ebnf$1","wschar"],postprocess:e=>e[0].concat([e[1]])},{name:"_",symbols:["_$ebnf$1"],postprocess:function(e){return null}},{name:"__$ebnf$1",symbols:["wschar"]},{name:"__$ebnf$1",symbols:["__$ebnf$1","wschar"],postprocess:e=>e[0].concat([e[1]])},{name:"__",symbols:["__$ebnf$1"],postprocess:function(e){return null}},{name:"wschar",symbols:[/[ \t\n\v\f\r]/],postprocess:id2},{name:"color",symbols:[COLOR2],postprocess:e=>tv(e[0])},{name:"paramStatement",symbols:[PARAM_DIRECTIVE2,"__","paramPart"],postprocess:function(e){return e[2]}},{name:"paramStatement$ebnf$1",symbols:[]},{name:"paramStatement$ebnf$1$subexpression$1",symbols:[/[\n]/,"_","paramPart"]},{name:"paramStatement$ebnf$1",symbols:["paramStatement$ebnf$1","paramStatement$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"paramStatement",symbols:[PARAM_DIRECTIVE2,"__",{literal:"{"},"_","paramStatement$ebnf$1",/[\n]/,"_",{literal:"}"}],postprocess:function(e){const t=[];return e[4].forEach((e=>{t.push(e[2])})),t}},{name:"paramPart$ebnf$1",symbols:[/[a-zA-Z0-9]/]},{name:"paramPart$ebnf$1",symbols:["paramPart$ebnf$1",/[a-zA-Z0-9]/],postprocess:e=>e[0].concat([e[1]])},{name:"paramPart$ebnf$2",symbols:[/[^ \n]/]},{name:"paramPart$ebnf$2",symbols:["paramPart$ebnf$2",/[^ \n]/],postprocess:e=>e[0].concat([e[1]])},{name:"paramPart",symbols:["paramPart$ebnf$1","__","paramPart$ebnf$2"],postprocess:function(e){const t=e[0].map((e=>tv(e))).join("");let A=e[2];return"string"!=typeof A&&(A=A.map((e=>tv(e))).join("")),{type:"addParam",key:t,value:A}}},{name:"configStatement$ebnf$1",symbols:[/[^\)]/]},{name:"configStatement$ebnf$1",symbols:["configStatement$ebnf$1",/[^\)]/],postprocess:e=>e[0].concat([e[1]])},{name:"configStatement",symbols:[CONFIG_DIRECTIVE3,{literal:"("},"configStatement$ebnf$1",{literal:")"}],postprocess:handleConfigOpenCloseStatement2},{name:"configOpenCloseStatement$ebnf$1",symbols:[/[^\)]/]},{name:"configOpenCloseStatement$ebnf$1",symbols:["configOpenCloseStatement$ebnf$1",/[^\)]/],postprocess:e=>e[0].concat([e[1]])},{name:"configOpenCloseStatement",symbols:[CONFIG_DIRECTIVE3,L_PAREN2,"configOpenCloseStatement$ebnf$1",R_PAREN2],postprocess:handleConfigOpenCloseStatement2},{name:"comment",symbols:[COMMENT_LINE2],postprocess:e=>null},{name:"start",symbols:["__","start"]},{name:"start",symbols:[{literal:"erDiagram"},"document"]},{name:"document",symbols:[]},{name:"document",symbols:["document","line"]},{name:"line$ebnf$1",symbols:[lexer2.has("WS")?{type:"WS"}:WS],postprocess:id2},{name:"line$ebnf$1",symbols:[],postprocess:()=>null},{name:"line",symbols:["line$ebnf$1","statement"]},{name:"line",symbols:[lexer2.has("NL")?{type:"NL"}:NL],postprocess:null},{name:"statement$ebnf$1",symbols:[]},{name:"statement$ebnf$1",symbols:["statement$ebnf$1",lexer2.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"statement$ebnf$2",symbols:[]},{name:"statement$ebnf$2",symbols:["statement$ebnf$2",lexer2.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"statement",symbols:["entityName","statement$ebnf$1","relSpec","statement$ebnf$2","entityName",lexer2.has("COLON")?{type:"COLON"}:COLON,"role",lexer2.has("NL")?{type:"NL"}:NL],postprocess:function(e){yy2.addEntity(e[0]),yy2.addEntity(e[4]),yy2.addRelationship(e[0],e[6],e[4],e[2])}},{name:"statement$ebnf$3",symbols:[]},{name:"statement$ebnf$3",symbols:["statement$ebnf$3",lexer2.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"statement",symbols:["entityName",lexer2.has("WS")?{type:"WS"}:WS,lexer2.has("INHERIT")?{type:"INHERIT"}:INHERIT,lexer2.has("WS")?{type:"WS"}:WS,"entityName","statement$ebnf$3",lexer2.has("NL")?{type:"NL"}:NL],postprocess:e=>{yy2.addEntity(e[4]),yy2.addEntity(e[0]);const t=e[4],A=e[0];yy2.addInheritance(t,A)}},{name:"statement$ebnf$4",symbols:["attributes"],postprocess:id2},{name:"statement$ebnf$4",symbols:[],postprocess:()=>null},{name:"statement",symbols:["entityName","__",{literal:"{"},"__","statement$ebnf$4","_",{literal:"}"},lexer2.has("NL")?{type:"NL"}:NL],postprocess:function(e){yy2.addEntity(e[0]),e[4]&&yy2.addAttributes(e[0],e[4])}},{name:"statement",symbols:["entityName",{literal:"{"},{literal:"}"},lexer2.has("NL")?{type:"NL"}:NL],postprocess:e=>yy2.addEntity(e[0])},{name:"statement$ebnf$5",symbols:[]},{name:"statement$ebnf$5",symbols:["statement$ebnf$5",lexer2.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"statement",symbols:["entityName","statement$ebnf$5",lexer2.has("NL")?{type:"NL"}:NL],postprocess:e=>yy2.addEntity(e[0])},{name:"statement",symbols:["titleStatement"]},{name:"statement$ebnf$6",symbols:[]},{name:"statement$ebnf$6",symbols:["statement$ebnf$6",lexer2.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"statement",symbols:["paramStatement","statement$ebnf$6",lexer2.has("NL")?{type:"NL"}:NL],postprocess:function(e){const{type:t,...A}=e[0];yy2.addParam(A)}},{name:"statement$ebnf$7",symbols:[]},{name:"statement$ebnf$7",symbols:["statement$ebnf$7",lexer2.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"statement",symbols:["configStatement","statement$ebnf$7",lexer2.has("NL")?{type:"NL"}:NL],postprocess:function(e){yy2.addOverrideConfig(e[0])}},{name:"statement",symbols:["comment",lexer2.has("NL")?{type:"NL"}:NL]},{name:"statement",symbols:[lexer2.has("NL")?{type:"NL"}:NL]},{name:"entityName",symbols:[lexer2.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT],postprocess:e=>tv(e[0])},{name:"attributes",symbols:["attribute"],postprocess:e=>[e[0]]},{name:"attributes",symbols:["attribute","__","attributes"],postprocess:e=>[e[0]].concat(e[2])},{name:"attribute$ebnf$1",symbols:[]},{name:"attribute$ebnf$1",symbols:["attribute$ebnf$1",lexer2.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"attribute$ebnf$2",symbols:[lexer2.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD],postprocess:id2},{name:"attribute$ebnf$2",symbols:[],postprocess:()=>null},{name:"attribute",symbols:["attributeType",lexer2.has("WS")?{type:"WS"}:WS,"attributeName",lexer2.has("WS")?{type:"WS"}:WS,lexer2.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,"attribute$ebnf$1","attribute$ebnf$2",lexer2.has("NL")?{type:"NL"}:NL],postprocess:function(e){const t=e[6]?getQuotedWord(e[6]):"";return{attributeType:e[0],attributeName:e[2],attributeKey:tv(e[4]),comment:t}}},{name:"attribute$ebnf$3",symbols:[]},{name:"attribute$ebnf$3",symbols:["attribute$ebnf$3",lexer2.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"attribute$ebnf$4",symbols:[lexer2.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD],postprocess:id2},{name:"attribute$ebnf$4",symbols:[],postprocess:()=>null},{name:"attribute$ebnf$5",symbols:[]},{name:"attribute$ebnf$5",symbols:["attribute$ebnf$5",lexer2.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"attribute",symbols:["attributeType",lexer2.has("WS")?{type:"WS"}:WS,"attributeName","attribute$ebnf$3","attribute$ebnf$4","attribute$ebnf$5",lexer2.has("NL")?{type:"NL"}:NL],postprocess:e=>{const t=e[4]?getQuotedWord(e[4]):"";return{attributeType:e[0],attributeName:e[2],comment:t}}},{name:"attributeType",symbols:[lexer2.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT],postprocess:e=>tv(e[0])},{name:"attributeName",symbols:[lexer2.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT],postprocess:e=>tv(e[0])},{name:"relSpec",symbols:["cardinality","relType","cardinality"],postprocess:function(e){return{cardA:e[2],relType:e[1],cardB:e[0]}}},{name:"cardinality",symbols:[lexer2.has("ZERO_OR_ONE")?{type:"ZERO_OR_ONE"}:ZERO_OR_ONE],postprocess:e=>yy2.Cardinality.ZERO_OR_ONE},{name:"cardinality",symbols:[lexer2.has("ZERO_OR_MORE")?{type:"ZERO_OR_MORE"}:ZERO_OR_MORE],postprocess:e=>yy2.Cardinality.ZERO_OR_MORE},{name:"cardinality",symbols:[lexer2.has("ONE_OR_MORE")?{type:"ONE_OR_MORE"}:ONE_OR_MORE],postprocess:e=>yy2.Cardinality.ONE_OR_MORE},{name:"cardinality",symbols:[lexer2.has("ONLY_ONE")?{type:"ONLY_ONE"}:ONLY_ONE],postprocess:e=>yy2.Cardinality.ONLY_ONE},{name:"relType",symbols:[lexer2.has("NON_IDENTIFYING")?{type:"NON_IDENTIFYING"}:NON_IDENTIFYING],postprocess:e=>yy2.Identification.NON_IDENTIFYING},{name:"relType",symbols:[lexer2.has("IDENTIFYING")?{type:"IDENTIFYING"}:IDENTIFYING],postprocess:e=>yy2.Identification.IDENTIFYING},{name:"role",symbols:[lexer2.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD],postprocess:e=>getQuotedWord(e[0])},{name:"role",symbols:[lexer2.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT],postprocess:e=>tv(e[0])},{name:"titleStatement",symbols:[{literal:"title"},lexer2.has("COLON")?{type:"COLON"}:COLON,"words",lexer2.has("NL")?{type:"NL"}:NL],postprocess:e=>{yy2.addTitle(e[2].trim())}},{name:"words$ebnf$1$subexpression$1",symbols:[lexer2.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{name:"words$ebnf$1$subexpression$1",symbols:[lexer2.has("WS")?{type:"WS"}:WS]},{name:"words$ebnf$1",symbols:["words$ebnf$1$subexpression$1"]},{name:"words$ebnf$1$subexpression$2",symbols:[lexer2.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{name:"words$ebnf$1$subexpression$2",symbols:[lexer2.has("WS")?{type:"WS"}:WS]},{name:"words$ebnf$1",symbols:["words$ebnf$1","words$ebnf$1$subexpression$2"],postprocess:e=>e[0].concat([e[1]])},{name:"words",symbols:["words$ebnf$1"],postprocess:function(e){return e[0].map((e=>tv(e[0]))).join("")}}],ParserStart:"start",ParserOptions:{skipUnmatchSymbols:[lexer2.has("WS")?{type:"WS"}:WS]}},erDiagram_default=grammar2;setYY2(db_default2);var parse2=genParserWithRules(erDiagram_default),ENTITY_ITEM_PATTERN=/^entity\-/,RELATIONSHIP_ITEM_PATTERN=/^relationship\-/,createErDiagramEvent=diagramEventMakerFactory("er"),eventRecognizer2=(new BaseEventRecognizer).addPatternRecognizerRule(ENTITY_ITEM_PATTERN,((e,t,A)=>{const n=t.itemId.replace(ENTITY_ITEM_PATTERN,"");return createErDiagramEvent(e,t,t.itemId,"entity",A.entities[n])})).addPatternRecognizerRule(RELATIONSHIP_ITEM_PATTERN,((e,t,A)=>{const n=A.relationships.find((e=>e.itemId===t.itemId));return createErDiagramEvent(e,t,t.itemId,"relationship",n)})),erDiagram={pattern:/^\s*erDiagram/,parser:{parse:e=>(parse2(e),db_default2.getDiagramIR())},artist:artist_default2,configKey:configKey2,eventRecognizer:eventRecognizer2,clear(){db_default2.clear()}},LineType;!function(e){e.DOTTED_ARROW="DOTTED_ARROW",e.SOLID_ARROW="SOLID_ARROW",e.STRAIGHT="STRAIGHT",e.DOTTED="DOTTED"}(LineType||(LineType={}));var ComponentDb=class extends BaseDb{constructor(){super(...arguments),this.aliases={},this.components={},this.interfaces={},this.groups={},this.relationships=[],this.LineType=LineType}addComponent(e,t){this.components[e]||(this.components[e]=t,this.aliases[e]=t)}addInterface(e,t){this.interfaces[e]||(this.interfaces[e]=t,this.aliases[e]=t)}addGroup(e,t){this.groups[e]||(this.groups[e]=t,this.aliases[e]=t)}addRelationship(e){this.relationships.push(e)}apply(e){if(Array.isArray(e))return e.map((e=>this.apply(e)));if(e)switch(e.type){case"addParam":this.configParams.push(e);break;case"overrideConfig":this.addOverrideConfig(e);break;case"setTitle":this.title=e.text}}fillMissingElements(){const e=[],t={},A=n=>{t[n.name]=n,n.children.forEach((t=>{if("groupType"in t)return A(t);e.push(t)}))};for(const e of Object.values(this.groups))A(e);function n(e){const A=t[e.parent];A&&A.children.push(e)}this.relationships.forEach((t=>{e.push(t.from),e.push(t.to)})),e.forEach((e=>{const{name:t,type:A}=e;this.aliases[t]||("component"===A?this.components[t]||this.groups[t]||(this.addComponent(t,e),n(e)):"interface"===A&&(this.interfaces[t]||(this.addInterface(t,e),n(e))))})),this.relationships.forEach((e=>{[e.from,e.to].forEach((e=>{const t=this.aliases[e.name];t&&"type"in t&&t.type!==e.type&&Object.assign(e,t)}))}))}getDiagramIR(){return{components:this.components,interfaces:this.interfaces,groups:this.groups,relationships:this.relationships,...this.getBaseDiagramIR()}}clear(){super.clear(),this.aliases={},this.components={},this.interfaces={},this.groups={},this.relationships=[]}},db3=new ComponentDb,db_default3=db3,defaultConfig3={diagramPadding:15,edgeType:"polyline",edgesep:20,ranksep:40,componentPadding:15,componentBackground:PALETTE.yellow,componentBorderColor:PALETTE.orange,groupBackground:PALETTE.white,groupBorderColor:PALETTE.normalDark,groupBorderWidth:2,relationLineColor:PALETTE.orange,textColor:PALETTE.normalDark,fontSize:14,fontFamily:DEFAULT_FONT_FAMILY,lineWidth:1,labelBackground:PALETTE.white,interfaceSize:16,useMaxWidth:!1,hideGroupType:!1},COMPONENT_PARAM_DIRECTIVE_RULES={...getParamRulesFromConfig(defaultConfig3),componentBackground:{valueType:"color"},componentBorderColor:{valueType:"color"},groupBackground:{valueType:"color"},groupBorderColor:{valueType:"color"},relationLineColor:{valueType:"color"},textColor:{valueType:"color"},labelBackground:{valueType:"color"},hideGroupType:{valueType:"boolean"}},configKey3="component",configurator3=makeConfigurator({defaultConfig:defaultConfig3,configKey:configKey3,getConfigFromParamDirectives:e=>interpreteConfigs(COMPONENT_PARAM_DIRECTIVE_RULES,e),getConfigFromTheme:e=>({componentBackground:e.primaryColor,componentBorderColor:e.primaryBorderColor,groupBackground:e.groupBackground,groupBorderColor:e.primaryBorderColor,relationLineColor:e.primaryColor,labelBackground:e.canvasBackground||e.background1,textColor:e.textColor})}),getConf3=configurator3.getConfig,conf3;function getEdgeName2(e){return`${e.from.name}_${e.to.name}_${e.message}`}var componentArtist={draw(e,t,A){conf3=getConf3(e,t);const n={type:"group",attrs:{},children:[]},l=createLayoutGraph({multigraph:!0,directed:!0,compound:!0}).setGraph({nodesep:20,edgesep:conf3.edgesep,ranksep:conf3.ranksep,splines:getGraphSplinesOption(conf3.edgeType),avoid_label_on_border:!0}),r=new DagreWrapper(l);drawComponentsTo(n,e,l),drawInterfacesTo(n,e,l),drawGroupsTo(n,e,l),drawRelationshipsTo(n,e,l),r.doLayout();const{labelBounds:a}=adjustMarkInGraph(r),o=tryExpandBounds(r.getGraphBounds(),a),s=conf3.diagramPadding,{title:i}=e;let u,c;if(i){const e=makeTitleMark(i,{fontSize:conf3.fontSize,fontFamily:conf3.fontFamily},{fill:conf3.textColor});u=e.titleSize,c=e.mark,c.class="component__title",n.children.push(c),u.height+=conf3.fontSize}const{width:h,height:f}=adjustRootMarkBounds({rootMark:n,gBounds:o,padX:s,padY:s,useMaxWidth:conf3.useMaxWidth,containerSize:null==A?void 0:A.containerSize,titleSize:u,titleMark:c});return{mark:n,width:h,height:f}}};function drawComponentsTo(e,t,A){const n=[],l=getFontConfig2(conf3);for(const r of Object.values(t.components)){const t=r.name,a=r.label||r.name,o=calculateTextDimensions(a||"",l),s=Math.round(o.width+2*conf3.componentPadding),i=Math.round(o.height+2*conf3.componentPadding),u=makeMark("rect",{width:s,height:i,fill:conf3.componentBackground,stroke:conf3.componentBorderColor,lineWidth:conf3.lineWidth,radius:4},{class:"component__component-rect"}),c=makeMark("text",{text:a,fill:conf3.textColor,textAlign:"center",textBaseline:"middle",...l}),h=makeMark("group",{},{children:[u,c],class:"component__component"});n.push(h),e.children.push(h),A.setNode(t,{width:s,height:i,id:t,onLayout(e){const{x:t,y:A}=e;safeAssign(u.attrs,{x:t-s/2,y:A-i/2}),safeAssign(c.attrs,{x:t,y:A})}})}}function drawInterfacesTo(e,t,A){const n=[],l=getFontConfig2(conf3);for(const r of Object.values(t.interfaces)){const t=r.name,a=r.label||r.name,o=calculateTextDimensions(a,l),s=conf3.interfaceSize,i=makeMark("circle",{x:0,y:0,r:s/2,fill:conf3.componentBackground,stroke:conf3.componentBorderColor,lineWidth:conf3.lineWidth},{class:"component__interface"}),u=makeMark("text",{text:a,fill:conf3.textColor,textAlign:"center",textBaseline:"top",...l}),c=makeMark("group",{},{children:[i,u],class:"component__group"});n.push(c),e.children.push(c);const h=Math.max(s,o.width),f={width:s,height:s+o.height,id:t,outerWidth:h,onLayout(e){const{x:t,y:A}=e;safeAssign(i.attrs,{x:t,y:A-o.height/2+2}),safeAssign(u.attrs,{x:t,y:A+2})}};if(A.setNode(t,f),o.width>s){const e=(o.width-s)/2;f.marginl=e,f.marginr=e}}}function drawGroupsTo(e,t,A){for(const n of Object.values(t.groups)){const t=n.name,l=n.groupType;let r;const a=symbolRegistry.get(l);a||(r=makeMark("rect",{fill:conf3.groupBackground,stroke:conf3.groupBorderColor,lineWidth:conf3.groupBorderWidth,radius:2},{class:"component__group-rect"}));const o=getFontConfig2(conf3),s=n.label||n.name,i=makeMark("text",{text:s,fill:conf3.textColor,textAlign:"center",...o,fontWeight:"bold"},{class:"component__group-label"});let u;const c=`[${n.groupType}]`;conf3.hideGroupType||(u=makeMark("text",{text:c,fill:conf3.textColor,...o,textBaseline:"hanging"},{class:"component__type"}));const h=calculateTextDimensions(s,{...o,fontWeight:i.attrs.fontWeight}),f={};a&&a.symbolMargin&&Object.assign(f,{marginl:a.symbolMargin.left,marginr:a.symbolMargin.right,margint:a.symbolMargin.top,marginb:a.symbolMargin.bottom});const g=h.width+10;A.setNode(t,{id:t,minwidth:g,...f,onLayout(e){const{x:n,y:a,width:s,height:f}=e,g=Math.max(s,h.width+10),p=A.node(t);if(r&&"rect"===r.type)safeAssign(r.attrs,{x:n-g/2,y:a-f/2,width:g,height:f}),d.children.unshift(r);else{const t={...e,width:Math.max(e.width,g)};r=symbolRegistry.create(l,{mode:"container",contentArea:t,attrs:{fill:conf3.groupBackground,stroke:conf3.groupBorderColor,lineWidth:conf3.groupBorderWidth}}),r&&(p.outerHeight=r.symbolBounds.height,p.outerWidth=r.symbolBounds.width,d.children.unshift(r))}if(safeAssign(i.attrs,{x:n,y:a-f/2+h.height+5}),u){const e=calculateTextDimensions(c,o);safeAssign(u.attrs,{x:n-g/2+2,y:a+f/2-2-e.height})}}});for(const e of n.children)if("name"in e){const n=A.node(e.name);n&&(A.setParent(n.id,t),n.dummyBoxId&&(A.setParent(n.id,n.dummyBoxId),A.setParent(n.dummyBoxId,t)))}const d=makeMark("group",{},{children:compact([i,u])});e.children.unshift(d)}}function drawRelationshipsTo(e,t,A){t.relationships.forEach((function(n){const l=makeMark("path",{path:[],stroke:conf3.relationLineColor,lineCap:"round"},{class:"component__rel-line"});let r,a,o;if([LineType.DOTTED_ARROW,LineType.DOTTED].includes(n.line.lineType)&&(l.attrs.lineDash=[4,4]),n.message){const e=getFontConfig2(conf3);o=calculateTextDimensions(n.message,e),r=makeMark("text",{text:n.message,fill:conf3.textColor,textAlign:"center",textBaseline:"middle",...e},{class:"component__rel-text"}),a=makeLabelBg(o,{x:0,y:0},{fill:conf3.labelBackground})}const s=n.line.lineType!==LineType.STRAIGHT;A.setEdge(n.from.name,n.to.name,{name:getEdgeName2(n),relationship:n,labelpos:"r",labelSize:o,onLayout(e,t){const A="curved"===conf3.edgeType?getPointsCurvePath(e.points):getPointsLinearPath(e.points);if(l.attrs.path=A,r){const A=e.labelPoint||getPointAt(e.points,.4,!0);safeAssign(r.attrs,{x:A.x,y:A.y}),safeAssign(a.attrs,{x:A.x-o.width/2,y:A.y-o.height/2});const n=a.attrs;t.updateBounds({left:n.x,right:n.x+n.width,top:n.y,bottom:n.y+n.height,width:n.width,height:n.height})}if(s){const t=e.points[e.points.length-1],A=e.points.slice(-2),n=drawArrowTo(t,8,calcDirection.apply(null,A),{color:conf3.relationLineColor});c.children.push(n)}}});const i="group"===n.from.type,u="group"===n.to.type;if(i||u)if(u){const e=t.groups[n.to.name],l=null==e?void 0:e.children[0];l&&"name"in l&&A.setEdge(n.from.name,l.name,{isDummyEdge:!0})}else if(i){const e=t.groups[n.from.name],l=null==e?void 0:e.children[0];l&&"name"in l&&A.setEdge(l.name,n.to.name,{isDummyEdge:!0})}const c=makeMark("group",{},{children:[l,a,r].filter((e=>Boolean(e)))});e.children.push(c)}))}var adjustMarkInGraph=function(e){e.callNodeOnLayout();const t=e.g,A=makeBounds(),n=e=>{tryExpandBounds(A,e)};return t.edges().forEach((function(e){const A=t.edge(e);A&&A.onLayout&&A.onLayout(A,{updateBounds:n})})),{labelBounds:A}};function getFontConfig2(e){return{fontSize:e.fontSize,fontFamily:e.fontFamily}}var artist_default3=componentArtist,moo3=__toESM(require_moo());function id3(e){return e[0]}var COLOR3=/#[a-zA-Z0-9]+/,PARAM_DIRECTIVE3=/@param/,CONFIG_DIRECTIVE4=/@config/,L_PAREN3=/\(/,R_PAREN3=/\)/;function getTokenValue3(e){return e&&"value"in e?e.value:e}function handleConfigOpenCloseStatement3(e){const t=e[2].map((e=>e.type?getTokenValue3(e):e)).join("");try{return{type:"overrideConfig",value:JSON.parse(t)}}catch(e){return{type:"overrideConfig",error:e}}}var COMMENT_LINE3=/%%.*/,commonTopRules={NL:MOO_NEWLINE,WS:{match:/ +/,lineBreaks:!0},L_SQ_BRACKET:{match:/\[/},R_SQ_BRACKET:{match:/\]/},COMMENT_LINE:COMMENT_LINE_REGEXP},commonTextRules={QUOTED_WORD:QUOTED_WORD_REGEXP,VALID_TEXT:{match:VALID_TEXT_REGEXP,fallback:!0}},lexer3=moo3.states({main:{...commonTopRules,L_BRACKET:{match:/\{/},R_BRACKET:{match:/\}/},COLON:/:/,...configLexerMainState,...commonTextRules},configStatement:{...configLexerconfigStatementState,...commonTextRules}}),yy3;function setYY3(e){yy3=e}var grammar3={Lexer:lexer3,ParserRules:[{name:"_$ebnf$1",symbols:[]},{name:"_$ebnf$1",symbols:["_$ebnf$1","wschar"],postprocess:e=>e[0].concat([e[1]])},{name:"_",symbols:["_$ebnf$1"],postprocess:function(e){return null}},{name:"__$ebnf$1",symbols:["wschar"]},{name:"__$ebnf$1",symbols:["__$ebnf$1","wschar"],postprocess:e=>e[0].concat([e[1]])},{name:"__",symbols:["__$ebnf$1"],postprocess:function(e){return null}},{name:"wschar",symbols:[/[ \t\n\v\f\r]/],postprocess:id3},{name:"color",symbols:[COLOR3],postprocess:e=>tv(e[0])},{name:"paramStatement",symbols:[PARAM_DIRECTIVE3,"__","paramPart"],postprocess:function(e){return e[2]}},{name:"paramStatement$ebnf$1",symbols:[]},{name:"paramStatement$ebnf$1$subexpression$1",symbols:[/[\n]/,"_","paramPart"]},{name:"paramStatement$ebnf$1",symbols:["paramStatement$ebnf$1","paramStatement$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"paramStatement",symbols:[PARAM_DIRECTIVE3,"__",{literal:"{"},"_","paramStatement$ebnf$1",/[\n]/,"_",{literal:"}"}],postprocess:function(e){const t=[];return e[4].forEach((e=>{t.push(e[2])})),t}},{name:"paramPart$ebnf$1",symbols:[/[a-zA-Z0-9]/]},{name:"paramPart$ebnf$1",symbols:["paramPart$ebnf$1",/[a-zA-Z0-9]/],postprocess:e=>e[0].concat([e[1]])},{name:"paramPart$ebnf$2",symbols:[/[^ \n]/]},{name:"paramPart$ebnf$2",symbols:["paramPart$ebnf$2",/[^ \n]/],postprocess:e=>e[0].concat([e[1]])},{name:"paramPart",symbols:["paramPart$ebnf$1","__","paramPart$ebnf$2"],postprocess:function(e){const t=e[0].map((e=>tv(e))).join("");let A=e[2];return"string"!=typeof A&&(A=A.map((e=>tv(e))).join("")),{type:"addParam",key:t,value:A}}},{name:"configStatement$ebnf$1",symbols:[/[^\)]/]},{name:"configStatement$ebnf$1",symbols:["configStatement$ebnf$1",/[^\)]/],postprocess:e=>e[0].concat([e[1]])},{name:"configStatement",symbols:[CONFIG_DIRECTIVE4,{literal:"("},"configStatement$ebnf$1",{literal:")"}],postprocess:handleConfigOpenCloseStatement3},{name:"configOpenCloseStatement$ebnf$1",symbols:[/[^\)]/]},{name:"configOpenCloseStatement$ebnf$1",symbols:["configOpenCloseStatement$ebnf$1",/[^\)]/],postprocess:e=>e[0].concat([e[1]])},{name:"configOpenCloseStatement",symbols:[CONFIG_DIRECTIVE4,L_PAREN3,"configOpenCloseStatement$ebnf$1",R_PAREN3],postprocess:handleConfigOpenCloseStatement3},{name:"comment",symbols:[COMMENT_LINE3],postprocess:e=>null},{name:"start",symbols:["__","start"]},{name:"start",symbols:[{literal:"componentDiagram"},"document"],postprocess:function(e){if(e[1])return yy3.apply(e[1]),e[1]}},{name:"document",symbols:[]},{name:"document",symbols:["document","line"],postprocess:function(e){return e[1]}},{name:"line$ebnf$1",symbols:[lexer3.has("WS")?{type:"WS"}:WS],postprocess:id3},{name:"line$ebnf$1",symbols:[],postprocess:()=>null},{name:"line",symbols:["line$ebnf$1","statement"]},{name:"line$ebnf$2",symbols:[lexer3.has("WS")?{type:"WS"}:WS],postprocess:id3},{name:"line$ebnf$2",symbols:[],postprocess:()=>null},{name:"line",symbols:["line$ebnf$2",lexer3.has("NL")?{type:"NL"}:NL],postprocess:e=>null},{name:"statement",symbols:["UMLElement"],postprocess:function(e){return e[0]}},{name:"statement",symbols:["paramStatement",lexer3.has("NL")?{type:"NL"}:NL]},{name:"statement",symbols:[{literal:"title"},lexer3.has("COLON")?{type:"COLON"}:COLON,"words",lexer3.has("NL")?{type:"NL"}:NL],postprocess:e=>({type:"setTitle",text:e[2].trim()})},{name:"statement",symbols:["configOpenCloseStatement",lexer3.has("NL")?{type:"NL"}:NL]},{name:"statement",symbols:["comment",lexer3.has("NL")?{type:"NL"}:NL]},{name:"UMLElement",symbols:["group"],postprocess:function(e){const t=e[0];return t&&yy3.addGroup(t.name,t),t}},{name:"UMLElement",symbols:["component"],postprocess:function(e){const t=e[0];return yy3.addComponent(t.name,t),t}},{name:"UMLElement",symbols:["interface"],postprocess:function(e){const t=e[0];return yy3.addInterface(t.name,t),t}},{name:"UMLElement",symbols:["relationship"],postprocess:id3},{name:"group$ebnf$1",symbols:[lexer3.has("WS")?{type:"WS"}:WS],postprocess:id3},{name:"group$ebnf$1",symbols:[],postprocess:()=>null},{name:"group$ebnf$2",symbols:[]},{name:"group$ebnf$2$subexpression$1",symbols:["_","UMLElement"]},{name:"group$ebnf$2",symbols:["group$ebnf$2","group$ebnf$2$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"group",symbols:["groupType","group$ebnf$1","textInsideQuote","_",lexer3.has("L_BRACKET")?{type:"L_BRACKET"}:L_BRACKET,"group$ebnf$2","_",lexer3.has("R_BRACKET")?{type:"R_BRACKET"}:R_BRACKET,lexer3.has("NL")?{type:"NL"}:NL],postprocess:function(e){const t=tv(e[0][0]),A=e[2]||t,n=e[2]||`${t}_${Date.now()}`,l=e[5].map((e=>e[1])).filter((e=>e));return l.forEach((e=>e.parent=n)),{type:"group",name:n,groupType:t,label:A,children:l}}},{name:"groupType",symbols:[{literal:"package"}]},{name:"groupType",symbols:[{literal:"node"}]},{name:"groupType",symbols:[{literal:"folder"}]},{name:"groupType",symbols:[{literal:"frame"}]},{name:"groupType",symbols:[{literal:"cloud"}]},{name:"groupType",symbols:[{literal:"database"}]},{name:"groupType",symbols:[{literal:"rectangle"}]},{name:"groupType",symbols:[{literal:"component"}]},{name:"component$ebnf$1",symbols:[lexer3.has("WS")?{type:"WS"}:WS],postprocess:id3},{name:"component$ebnf$1",symbols:[],postprocess:()=>null},{name:"component",symbols:[{literal:"component"},"component$ebnf$1",lexer3.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,lexer3.has("NL")?{type:"NL"}:NL],postprocess:function(e){return{type:"component",name:tv(e[2])}}},{name:"component$ebnf$2",symbols:[lexer3.has("WS")?{type:"WS"}:WS],postprocess:id3},{name:"component$ebnf$2",symbols:[],postprocess:()=>null},{name:"component$ebnf$3",symbols:[lexer3.has("WS")?{type:"WS"}:WS],postprocess:id3},{name:"component$ebnf$3",symbols:[],postprocess:()=>null},{name:"component$ebnf$4",symbols:["elementLabel"]},{name:"component$ebnf$4",symbols:["component$ebnf$4","elementLabel"],postprocess:e=>e[0].concat([e[1]])},{name:"component",symbols:[{literal:"component"},"component$ebnf$2",lexer3.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,"component$ebnf$3",lexer3.has("L_SQ_BRACKET")?{type:"L_SQ_BRACKET"}:L_SQ_BRACKET,"component$ebnf$4",lexer3.has("R_SQ_BRACKET")?{type:"R_SQ_BRACKET"}:R_SQ_BRACKET,lexer3.has("NL")?{type:"NL"}:NL],postprocess:function(e){return{type:"component",name:tv(e[2]),label:e[5].join("").trim()}}},{name:"component$ebnf$5",symbols:[lexer3.has("WS")?{type:"WS"}:WS],postprocess:id3},{name:"component$ebnf$5",symbols:[],postprocess:()=>null},{name:"component$subexpression$1",symbols:["textInsideQuote"]},{name:"component$subexpression$1",symbols:[lexer3.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{name:"component$ebnf$6",symbols:[]},{name:"component$ebnf$6",symbols:["component$ebnf$6",lexer3.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"component",symbols:[{literal:"component"},"component$ebnf$5","component$subexpression$1","component$ebnf$6",{literal:"as"},"__",lexer3.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,lexer3.has("NL")?{type:"NL"}:NL],postprocess:function(e){const t=e[2][0],A="string"==typeof t?t:tv(t);return{type:"component",name:tv(e[6]),label:A}}},{name:"component",symbols:["shortComponent",lexer3.has("NL")?{type:"NL"}:NL],postprocess:id3},{name:"component$ebnf$7",symbols:[lexer3.has("WS")?{type:"WS"}:WS],postprocess:id3},{name:"component$ebnf$7",symbols:[],postprocess:()=>null},{name:"component$ebnf$8",symbols:[lexer3.has("WS")?{type:"WS"}:WS],postprocess:id3},{name:"component$ebnf$8",symbols:[],postprocess:()=>null},{name:"component",symbols:["shortComponent","component$ebnf$7",{literal:"as"},"component$ebnf$8",lexer3.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,lexer3.has("NL")?{type:"NL"}:NL],postprocess:function(e){const t=e[0],A=tv(e[4]);return{...t,name:A,label:t.name}}},{name:"shortComponent$ebnf$1",symbols:["elementLabel"]},{name:"shortComponent$ebnf$1",symbols:["shortComponent$ebnf$1","elementLabel"],postprocess:e=>e[0].concat([e[1]])},{name:"shortComponent",symbols:[lexer3.has("L_SQ_BRACKET")?{type:"L_SQ_BRACKET"}:L_SQ_BRACKET,"shortComponent$ebnf$1",lexer3.has("R_SQ_BRACKET")?{type:"R_SQ_BRACKET"}:R_SQ_BRACKET],postprocess:function(e){return{type:"component",name:e[1].join("")}}},{name:"elementLabel$subexpression$1",symbols:[lexer3.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{name:"elementLabel$subexpression$1",symbols:[lexer3.has("NL")?{type:"NL"}:NL]},{name:"elementLabel$subexpression$1",symbols:[lexer3.has("WS")?{type:"WS"}:WS]},{name:"elementLabel",symbols:["elementLabel$subexpression$1"],postprocess:e=>tv(e[0][0])},{name:"textInsideQuote",symbols:[lexer3.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD],postprocess:function(e){return getQuotedWord(e[0])}},{name:"interface$ebnf$1",symbols:[lexer3.has("WS")?{type:"WS"}:WS],postprocess:id3},{name:"interface$ebnf$1",symbols:[],postprocess:()=>null},{name:"interface$subexpression$1",symbols:["textInsideQuote"]},{name:"interface$subexpression$1",symbols:[lexer3.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{name:"interface",symbols:["interfaceStart","interface$ebnf$1","interface$subexpression$1",lexer3.has("NL")?{type:"NL"}:NL],postprocess:function(e){const t=e[2][0];return{type:"interface",name:"string"==typeof t?t:tv(t)}}},{name:"interface$ebnf$2",symbols:[lexer3.has("WS")?{type:"WS"}:WS],postprocess:id3},{name:"interface$ebnf$2",symbols:[],postprocess:()=>null},{name:"interface$subexpression$2",symbols:["textInsideQuote"]},{name:"interface$subexpression$2",symbols:[lexer3.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{name:"interface$ebnf$3",symbols:[]},{name:"interface$ebnf$3",symbols:["interface$ebnf$3",lexer3.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"interface",symbols:["interfaceStart","interface$ebnf$2","interface$subexpression$2","interface$ebnf$3",{literal:"as"},"__",lexer3.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,lexer3.has("NL")?{type:"NL"}:NL],postprocess:function(e){const t=e[2][0],A="string"==typeof t?t:tv(t);return{type:"interface",name:tv(e[6]),label:A}}},{name:"interfaceStart$subexpression$1",symbols:[{literal:"interface"}]},{name:"interfaceStart$subexpression$1",symbols:[{literal:"()"}]},{name:"interfaceStart",symbols:["interfaceStart$subexpression$1"]},{name:"relationship$ebnf$1$subexpression$1",symbols:["__",lexer3.has("COLON")?{type:"COLON"}:COLON,"__","words"]},{name:"relationship$ebnf$1",symbols:["relationship$ebnf$1$subexpression$1"],postprocess:id3},{name:"relationship$ebnf$1",symbols:[],postprocess:()=>null},{name:"relationship",symbols:["elementReference","_","relationLine","_","elementReference","relationship$ebnf$1",lexer3.has("NL")?{type:"NL"}:NL],postprocess:function(e){const t=e[0],A=e[4];let n;e[5]&&(n=e[5][3]);const l={from:t,to:A,line:e[2],message:n};return yy3.addRelationship(l),l}},{name:"words$ebnf$1$subexpression$1",symbols:[lexer3.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{name:"words$ebnf$1$subexpression$1",symbols:[lexer3.has("WS")?{type:"WS"}:WS]},{name:"words$ebnf$1",symbols:["words$ebnf$1$subexpression$1"]},{name:"words$ebnf$1$subexpression$2",symbols:[lexer3.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{name:"words$ebnf$1$subexpression$2",symbols:[lexer3.has("WS")?{type:"WS"}:WS]},{name:"words$ebnf$1",symbols:["words$ebnf$1","words$ebnf$1$subexpression$2"],postprocess:e=>e[0].concat([e[1]])},{name:"words",symbols:["words$ebnf$1"],postprocess:function(e){return e[0].map((e=>tv(e[0]))).join("").trim()}},{name:"elementReference",symbols:["shortComponent"],postprocess:id3},{name:"elementReference$ebnf$1$subexpression$1",symbols:[{literal:"()"},"__"]},{name:"elementReference$ebnf$1",symbols:["elementReference$ebnf$1$subexpression$1"],postprocess:id3},{name:"elementReference$ebnf$1",symbols:[],postprocess:()=>null},{name:"elementReference",symbols:["elementReference$ebnf$1",lexer3.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT],postprocess:function(e){return{type:"interface",name:tv(e[1])}}},{name:"relationLine",symbols:[{literal:"--\x3e"}],postprocess:e=>({lineType:yy3.LineType.SOLID_ARROW})},{name:"relationLine",symbols:[{literal:"<--"}],postprocess:e=>({lineType:yy3.LineType.SOLID_ARROW,isReversed:!0})},{name:"relationLine",symbols:[{literal:"..>"}],postprocess:e=>({lineType:yy3.LineType.DOTTED_ARROW})},{name:"relationLine",symbols:[{literal:"<.."}],postprocess:e=>({lineType:yy3.LineType.DOTTED_ARROW,isReversed:!0})},{name:"relationLine",symbols:[{literal:"--"}],postprocess:e=>({lineType:yy3.LineType.STRAIGHT})},{name:"relationLine",symbols:[{literal:".."}],postprocess:e=>({lineType:yy3.LineType.DOTTED})}],ParserStart:"start",ParserOptions:{skipUnmatchSymbols:[lexer3.has("WS")?{type:"WS"}:WS]}},componentDiagram_default=grammar3;setYY3(db_default3);var parse3=genParserWithRules(componentDiagram_default),componentDiagram={pattern:/^\s*componentDiagram/,parser:{parse:e=>(parse3(e),db_default3.fillMissingElements(),db_default3.getDiagramIR())},artist:artist_default3,configKey:configKey3,clear(){db_default3.clear()}},ActivityDb=class extends BaseDb{constructor(){super(...arguments),this.steps=[],this.notes=[],this.arrowLabels=[],this.idCounter=makeIdCounter()}makeId(){return`id-${this.idCounter.next()}`}apply(e,t=!1,A={}){if(Array.isArray(e)){const n=[];let l;return e.forEach((e=>{var r;const a=this.apply(e,t,{...A,prevStepId:null===(r=null==l?void 0:l.value)||void 0===r?void 0:r.id});a&&(n.push(a),l=a)})),n}if(!e)return;let n;switch(e.type){case"addAction":n={type:"action",value:{...e.action,id:this.makeId()}};break;case"condition":{const t=this.makeId(),l=this.apply(e.then.children,!0,{...A,parentId:t}),r={id:t,message:e.message,then:{label:e.then.label,children:l}};if(e.else){const n=this.apply(e.else.children,!0,{...A,parentId:t});r.else={label:e.else.label,children:n}}n={type:"condition",value:r}}break;case"while":{const t=this.makeId(),l=this.apply(e.children,!0,{...A,parentId:t});n={type:"while",value:{id:t,message:e.message,children:l,confirmLabel:e.confirmLabel,denyLabel:e.denyLabel}};break}case"repeat":{const t=this.makeId(),l=this.apply(e.children,!0,{...A,parentId:t});n={type:"repeat",value:{id:t,message:e.message,children:l,confirmLabel:e.confirmLabel,denyLabel:e.denyLabel,firstAction:e.firstAction}};break}case"switch":{const t=this.makeId(),l=this.apply(e.children,!0,{...A,parentId:t});n={type:"switch",value:{id:t,message:e.message,children:l}};break}case"case":{const t=this.makeId(),l=this.apply(e.children,!0,{...A,parentId:t});n={type:"case",value:{id:t,confirmLabel:e.confirmLabel,children:l}};break}case"fork":{const t=this.makeId(),l=this.apply(e.branches,!0,{...A,parentId:t});n={type:"fork",value:{id:t,shouldMerge:e.shouldMerge,branches:l}};break}case"forkBranch":{const t=this.makeId();n={type:"forkBranch",value:{id:t,children:this.apply(e.children,!0,{...A,parentId:t})}};break}case"keyword":n={type:"keyword",value:{id:this.makeId(),label:e.label}};break;case"group":{const t=this.makeId(),l=this.apply(e.children,!0,{...A,parentId:t});n={type:"group",value:{id:t,...e,children:l}};break}case"note":{const t={id:this.makeId(),...e,text:dedent_default(e.text)},n=A.prevStepId;n&&(t.target=n),this.notes.push(t);break}case"arrowLabel":{const t={id:this.makeId(),...e},n=A.prevStepId;n&&(t.target=n),this.arrowLabels.push(t);break}case"setTitle":this.title=e.text;break;case"addParam":this.configParams.push(e);break;case"overrideConfig":this.addOverrideConfig(e)}return n&&!t&&this.steps.push(n),n&&(n.parentId=A.parentId),n}getDiagramIR(){return{steps:this.steps,notes:this.notes,arrowLabels:this.arrowLabels,...this.getBaseDiagramIR()}}clear(){super.clear(),this.idCounter.reset(),this.steps=[],this.notes=[]}},db4=new ActivityDb,defaultConfig4={diagramPadding:15,edgesep:30,edgeType:"polyline",useMaxWidth:!1,actionPaddingX:10,actionPaddingY:10,actionBackground:PALETTE.orange,actionBorderColor:PALETTE.normalDark,groupBackground:PALETTE.white,groupBorderColor:PALETTE.normalDark,textColor:PALETTE.normalDark,edgeColor:PALETTE.normalDark,keywordBackground:PALETTE.normalDark,noteTextColor:PALETTE.normalDark,noteMargin:10,labelTextColor:PALETTE.normalDark,labelBackground:PALETTE.white,fontSize:14,fontFamily:DEFAULT_FONT_FAMILY},ACTIVITY_PARAM_DIRECTIVE_RULES={...getParamRulesFromConfig(defaultConfig4),actionPaddingX:{valueType:"size"},actionPaddingY:{valueType:"size"},actionBackground:{valueType:"color"},actionBorderColor:{valueType:"color"},groupBackground:{valueType:"color"},groupBorderColor:{valueType:"color"},textColor:{valueType:"color"},edgeColor:{valueType:"color"},keywordBackground:{valueType:"color"},noteTextColor:{valueType:"color"},noteMargin:{valueType:"size"},labelBackground:{valueType:"color"},labelTextColor:{valueType:"color"},fontSize:{valueType:"size"},fontFamily:{valueType:"string"}},configKey4="activity",configurator4=makeConfigurator({defaultConfig:defaultConfig4,configKey:configKey4,getConfigFromParamDirectives:e=>interpreteConfigs(ACTIVITY_PARAM_DIRECTIVE_RULES,e),getConfigFromTheme:e=>({actionBackground:e.primaryColor,actionBorderColor:e.primaryBorderColor,groupBackground:e.groupBackground,groupBorderColor:e.primaryBorderColor,textColor:e.textColor,edgeColor:e.primaryColor,keywordBackground:e.textColor,labelBackground:e.canvasBackground||e.background1,labelTextColor:e.textColor})}),getConf4=configurator4.getConfig,isDev="undefined"!=typeof location&&"localhost"===location.hostname,conf4,model2,activityDraw,theme2;function makeTextMark(e,t,A,n){return makeMark("text",{text:t,width:A.width,height:A.height,fill:e.textColor,fontSize:e.fontSize,fontFamily:e.fontFamily,textBaseline:"middle",textAlign:"center",...n})}function calcTextDims(e,t={}){return calculateTextDimensions(e,Object.assign(getFontConfig3(conf4),t))}function isDetachAlikeKeyword(e){return["detach","kill"].includes(e.label)}function isEndAlikeKeyword(e){return["end","stop"].includes(e.label)}var erArtist2={draw(e,t,A){conf4=getConf4(e,t),model2=new ArtistModel(e),theme2=config_default.getConfig().themeConfig.themeVariables;const n=makeEmptyGroup(),l=createLayoutGraph({multigraph:!0,directed:!0,compound:!0}).setGraph({rankdir:"TB",nodesep:60,edgesep:conf4.edgesep,ranksep:30,splines:getGraphSplinesOption(conf4.edgeType)}).setDefaultEdgeLabel((function(){return{}}));model2.preProcess();const r=new DagreWrapper(l);activityDraw=new ActivityDraw(model2,l),isDev&&(window.activityDraw=activityDraw),e.steps.forEach((e=>{activityDraw.drawStep(n,e)})),e.notes.forEach((e=>{activityDraw.drawNote(n,e)})),r.doLayout(),r.callNodeOnLayout();const{bounds:a}=drawEdges(n,l),o=floorValues(tryExpandBounds(r.getGraphBounds(),a)),{title:s}=e;let i,u;if(s){const e=makeTitleMark(s,{fontSize:conf4.fontSize,fontFamily:conf4.fontFamily},{fill:conf4.textColor});i=e.titleSize,u=e.mark,u.class="activity__title",n.children.push(u),i.height+=conf4.fontSize}const{width:c,height:h}=adjustRootMarkBounds({rootMark:n,gBounds:o,padX:conf4.diagramPadding,padY:conf4.diagramPadding,useMaxWidth:conf4.useMaxWidth,containerSize:null==A?void 0:A.containerSize,titleSize:i,titleMark:u});return{mark:n,width:c,height:h}}};function getActionRectSize(e){const t=calcTextDims(e);return{rectWidth:t.width+2*conf4.actionPaddingX,rectHeight:t.height+2*conf4.actionPaddingY}}var ArtistModel=class{constructor(e){this.ir=e,this.stepModelMap=new Map,this.stepNotesMap=new Map,this.stepArrowLabelMap=new Map}shouldTouchPrevIds(e){return"group"!==e.type}preProcess(){const{ir:e}=this;let t=[];const A=(e,A,l={})=>{const{childrenKeys:r=["children"],parallelChildren:a=!1}=l,o=e.value,s=this.shouldTouchPrevIds(e);s&&(A.prevId=last(t));const i=t;s&&(t=[]);safeAssign(A,{endId:`${o.id}-end`}),r.forEach((e=>{o[e]&&o[e].forEach((e=>{n(e),a&&(t=[])}))})),this.stepModelMap.set(o.id,A),t=i},n=e=>{let l,r=this.makeStepModel(e);switch(e.type){case"action":{const t=e.value,{rectWidth:A,rectHeight:n}=getActionRectSize(t.message);safeAssign(r,{width:A,height:n}),this.stepModelMap.set(t.id,r);break}case"condition":{const A=e.value;r.prevId=last(t);const l=t;t=[],A.then.children.forEach((e=>n(e))),A.else&&(t=[],A.else.children.forEach((e=>n(e))));safeAssign(r,{endId:`${A.id}-end`}),this.stepModelMap.set(A.id,r),t=l;break}case"while":case"repeat":case"forkBranch":A(e,r);break;case"switch":A(e,r,{parallelChildren:!0});break;case"case":{A(e,r);const t=e.value,n=t.children[0],l=last(t.children);safeAssign(r,{startId:n?n.value.id:t.id,endId:l?l.value.id:t.id});break}case"group":{A(e,r);const t=e.value;if(t.children.length){const e=t.children[0],A=last(t.children);safeAssign(r,{startId:e.value.id,endId:A.value.id})}break}case"keyword":{const t=e.value,{rectWidth:A,rectHeight:n}=getActionRectSize(t.label);safeAssign(r,{width:A,height:n}),this.stepModelMap.set(t.id,r);break}case"fork":{const t=e.value;A(e,r,{childrenKeys:["branches"],parallelChildren:!0});safeAssign(r,{endId:`${t.id}-end`,innerFrameId:`${t.id}-frame`});break}default:r=null}if(t.length&&r&&!r.prevId&&"group"!==e.type){const e=last(t),A=this.stepModelMap.get(e);r.prevId=A?A.endId||A.id:e}r&&this.shouldTouchPrevIds(e)&&(r.endId?l=r.endId:"startId"in r?l=r.startId:"id"in e.value&&(l=e.value.id)),l&&(t.pop(),t.push(l))};e.steps.forEach((e=>{n(e)})),e.notes.forEach((e=>{const t=e.target;if(t&&this.stepModelMap.has(t)){let A=this.stepNotesMap.get(t);A||(A=[],this.stepNotesMap.set(t,A)),A.push(e)}})),e.arrowLabels.forEach((e=>{const t=e.target;t&&this.stepModelMap.has(t)&&this.stepArrowLabelMap.set(t,e)}))}makeStepModel(e){return{...e,id:e.value.id,width:0,height:0}}},ActivityDraw=class{constructor(e,t){this.model=e,this.g=t,this.keywordStepResults={},this.results={},this.traverseStepCollection=(e,t)=>{if(!e)return;let A=!1;return e.forEach((e=>{!1!==t(e)?this.traverseStep(e,t):A=!0})),!A},this.traverseStep=(e,t)=>{if(!e)return;const A=e.value;"children"in A?this.traverseStepCollection(A.children,t):"then"in A?(this.traverseStepCollection(A.then.children,t),A.else&&this.traverseStepCollection(A.else.children,t)):"branches"in A&&this.traverseStepCollection(A.branches,t)}}drawStep(e,t){var A;const n=this.g;let l;switch(t.type){case"action":l=drawAction(e,t.value,n);break;case"condition":{const A=t.value;l=this.drawCondition(e,A);break}case"while":l=this.drawWhile(e,t.value);break;case"switch":l=this.drawSwitch(e,t.value);break;case"case":l=this.drawCase(e,t.value);break;case"repeat":l=this.drawRepeat(e,t.value);break;case"group":l=this.drawGroup(e,t.value);break;case"keyword":{const A=t.value;l=this.drawKeyword(e,A),this.keywordStepResults[A.label]=l;break}case"fork":l=this.drawFork(e,t.value);break;case"forkBranch":l=this.drawForkBranch(e,t.value)}if(l&&l.stepModel){this.results[l.id]=l,l.endId&&(this.results[l.endId]=l);const e=l.stepModel.prevId,t=l.stepModel.startId||l.stepModel.id;let r="";const a=this.model.stepArrowLabelMap.get(e);if(a&&(r=a.text),e){const a=this.model.stepModelMap.get(e),o=this.results[e];!r&&(null==o?void 0:o.outLabel)&&(r=o.outLabel),e===(null===(A=this.keywordStepResults.start)||void 0===A?void 0:A.id)?n.setEdge(e,t,{label:r}):a&&"keyword"===a.type||l.hasDetached?n.setEdge(e,t,{label:r,isDummyEdge:!0}):n.setEdge(e,t,{label:r})}}return l?{...l}:null}linkResult(e,t,A=""){if(!e||!t)return;const n="string"==typeof e?e:e.endId||e.id;this.g.setEdge(n,t.id,{label:A})}drawCondition(e,t){const A=makeEmptyGroup(),n=model2.stepModelMap.get(t.id),{bgMark:l,textMark:r,rectWidth:a,rectHeight:o}=this.drawDecisionMarks(t.message);this.g.setNode(t.id,{id:t.id,mark:A,width:a,height:o,onLayout(e){positionGroupContents(A,{...e,x:e.x-e.width/2,y:e.y-e.height/2})}});const s=t.id,i=n.endId,u={id:s,startMark:A,stepModel:n,endId:i},{mark:c}=this.drawDiamondMark(i);e.children.push(A,c),A.children.push(l,r);const h=(t,A)=>{let l=!1;if(t.length){const n=last(t.map(((t,n)=>{if(l)return;const r=this.drawStep(e,t);return"keyword"===t.type&&(l=!0),0===n&&this.linkResult(s,r,A),r})));n&&this.g.setEdge(n.endId||n.id,i,{label:"",isDummyEdge:l})}else{const e={id:`${s}-condition-dummy`};this.g.setNode(e.id,{width:1,height:1}),this.g.setEdge(s,e.id,{label:A}),this.g.setEdge(e.id,i),n.parentId&&this.g.setParent(e.id,n.parentId)}};return h(t.then.children,t.then.label||"yes"),t.else&&h(t.else.children,"no"),u}drawDecisionMarks(e){const{rectWidth:t,rectHeight:A}=getActionRectSize(e),n=Math.ceil(.8*conf4.fontSize),l=makeMark("path",{fill:conf4.actionBackground,stroke:conf4.actionBorderColor,path:[["m",0,A/2],["l",n,A/2],["l",t-2*n,0],["l",n,-A/2],["l",-n,-A/2],["l",2*n-t,0],["Z"]]},{class:"activity__decision-bg"}),r=calcTextDims(e);return{bgMark:l,textMark:makeTextMark(conf4,e,r,{y:A/2,x:t/2,fontSize:conf4.fontSize,textBaseline:"middle",textAlign:"center"}),rectWidth:t,rectHeight:A}}drawDiamondMark(e,t={},A={}){const n=10,l=makeMark("path",{width:20,height:20,path:[["m",-10,0],["l",n,n],["l",n,-10],["l",-10,-10],["Z"]],fill:conf4.actionBackground,stroke:conf4.actionBorderColor,...t},{class:A.class||"activity__condition-end"}),r=(e,t)=>{const A=l.attrs.path[0];A[1]=e-n,A[2]=t};return this.g.setNode(e,{id:e,mark:l,width:20,height:20,onLayout(e){r(e.x,e.y)}}),{mark:l,diamondSide:n,moveDiamond:r}}drawWhile(e,t){const{message:A,id:n}=t,l=makeEmptyGroup(),r=model2.stepModelMap.get(t.id),{bgMark:a,textMark:o,rectWidth:s,rectHeight:i}=this.drawDecisionMarks(A);this.g.setNode(n,{id:n,mark:l,width:s,height:i,onLayout(e){positionGroupContents(l,{...e,x:e.x-e.width/2,y:e.y-e.height/2})}});const u=r.endId,c={id:n,startMark:l,stepModel:r,endId:u},{mark:h}=this.drawDiamondMark(u,{},{class:"activity__while-end"});e.children.push(l,h),l.children.push(a,o);const f=last(t.children.map(((A,l)=>{const r=this.drawStep(e,A);return 0===l&&this.linkResult(n,r,t.confirmLabel||""),r})));return f&&(this.g.setEdge(f.endId||f.id,n,{label:""}),this.g.setEdge(f.endId||f.id,u,{label:"",isDummyEdge:!0})),this.g.setEdge(n,u,{label:t.denyLabel||""}),c}drawGroup(e,t){const{id:A}=t,n=makeEmptyGroup(),l=model2.stepModelMap.get(A),r=l.endId,a={id:A,startMark:n,stepModel:l,endId:r},o=makeMark("rect",{fill:t.background||conf4.groupBackground,stroke:conf4.groupBorderColor,lineWidth:2,radius:2},{class:"activity__group-rect"}),s=t.label||t.name,i=getFontConfig3(conf4),u=makeMark("text",{text:s,fill:conf4.textColor,...i,fontWeight:"bold",textBaseline:"top"},{class:"activity__group-rect"}),c=calcTextDims(s,i),h=`${A}-label`;this.g.setNode(h,{id:h,mark:u,width:c.width,height:c.height}),this.g.setNode(A,{id:A,mark:n,onLayout:e=>{const{x:t,y:A,width:n,height:l}=e,r=Math.max(n,c.width+10);safeAssign(o.attrs,{x:t-r/2,y:A-l/2,width:r,height:l}),safeAssign(u.attrs,{x:t-r/2+i.fontSize/2,y:A-l/2})}}),this.g.setParent(h,A),n.children.push(o,u),e.children.push(n);const f=e=>{"group"!==e.type&&(unique(compact([e.id,e.startId,e.endId])).forEach((e=>{e&&this.g.setParent(e,A)})),e.innerFrameId?this.g.setParent(e.innerFrameId,A):this.traverseStep(e,(e=>{const t=this.model.stepModelMap.get(e.value.id);t&&f(t)})))};return t.children.map((t=>{const n=this.drawStep(e,t);return this.g.setParent(n.id,A),f(n.stepModel),n})),a}drawSwitch(e,t){const{id:A,message:n}=t,l=makeEmptyGroup(),r=model2.stepModelMap.get(A),{bgMark:a,textMark:o,rectWidth:s,rectHeight:i}=this.drawDecisionMarks(n);this.g.setNode(A,{id:A,mark:l,width:s,height:i,onLayout(e){positionGroupContents(l,{...e,x:e.x-e.width/2,y:e.y-e.height/2})}});const u=r.endId,c={id:A,startMark:l,stepModel:r,endId:u},{mark:h}=this.drawDiamondMark(u);return l.children.push(a,o),e.children.push(l,h),t.children.map((t=>{const n=this.drawStep(e,t);return this.g.setEdge(A,n.stepModel.startId||n.id,{label:t.value.confirmLabel,simplifyStartEdge:!0}),n.hasEnded||this.g.setEdge(n.endId,u,{label:""}),n})),c}drawCase(e,t){const{id:A}=t,n=makeEmptyGroup(),l=model2.stepModelMap.get(A),r=l.endId,a={id:A,startMark:n,stepModel:l,endId:r,hasEnded:!1};if(e.children.push(n),t.children.length)t.children.forEach((t=>{a.hasEnded||("keyword"===t.type&&(a.hasEnded=!0),this.drawStep(e,t))}));else{const t=makeCircle({r:1});e.children.push(t),this.g.setNode(r,{width:1,height:1,mark:t})}return a}drawRepeat(e,t){const{message:A,id:n}=t,l=t.denyLabel||"no",r=makeEmptyGroup(),a=model2.stepModelMap.get(n),{bgMark:o,textMark:s,rectWidth:i,rectHeight:u}=this.drawDecisionMarks(A),c=a.endId,h=a.id,f={id:n,startMark:r,stepModel:a,endId:c,outLabel:l};let g;if(t.firstAction){const e=makeEmptyGroup();e.class="activity__repeat-start";const{rectMark:A,textMark:n,actionInfo:l}=drawActionMarks({message:t.firstAction.message,conf:conf4});e.children.push(A,n),g=e,this.g.setNode(h,{id:h,mark:e,width:l.rectWidth,height:l.rectHeight,onLayout(t){positionGroupContents(e,{...t,x:t.x-t.width/2,y:t.y-t.height/2})}})}else{const e=this.drawDiamondMark(h,{},{class:"activity__repeat-start"});g=e.mark,this.g.setNode(h,{mark:g,width:2*e.diamondSide,height:2*e.diamondSide,onLayout(t){e.moveDiamond(t.x,t.y)}})}f.startMark=g,this.g.setNode(c,{id:c,mark:r,width:i,height:u,onLayout(e){positionGroupContents(r,{...e,x:e.x-e.width/2,y:e.y-e.height/2})}}),e.children.push(r,g),r.children.push(o,s);const d=t.children.map(((t,A)=>this.drawStep(e,t))),p=d[0];p&&this.linkResult(h,p);const B=last(d);if(B){const e=B.hasDetached||B.hasEnded;this.g.setEdge(B.endId||B.id,c,{isDummyEdge:e})}return this.g.setEdge(c,h,{label:t.confirmLabel||""}),f}drawKeyword(e,t){const A=model2.stepModelMap.get(t.id),n=makeEmptyGroup();n.class="activity__keyword";const{label:l,id:r}=t,a=conf4.keywordBackground,o=conf4.keywordBackground;if("start"===l){const e=makeCircle({r:10,fill:o});n.children.push(e)}else if("stop"===l||"end"===l){const e=makeCircle({r:10,stroke:a}),t=makeCircle({r:6,fill:o});n.children.push(e,t)}e.children.push(n),this.g.setNode(r,{id:r,mark:n,width:20,height:20,onLayout(e){positionGroupContents(n,{...e,x:e.x,y:e.y})}});const s=isDetachAlikeKeyword(t);return{id:r,startMark:n,stepModel:A,hasEnded:isEndAlikeKeyword(t),hasDetached:s}}drawFork(e,t){const{id:A}=t,n=makeEmptyGroup(),l=model2.stepModelMap.get(A),r=makeMark("rect",{width:100,height:4,x:0,y:0,fill:conf4.keywordBackground,radius:2}),a=()=>this.g.node(u),o=e=>{if(!e)return;const t=e.width,A=e.x;return{...e,width:t,x:A}};this.g.setNode(A,{id:A,mark:r,width:r.attrs.width,height:r.attrs.height,onLayout:e=>{const t=o(a());t&&(safeAssign(r.attrs,{x:t.x-t.width/2,y:e.y-e.height/2,width:t.width}),e.width=t.width)}});const s=l.endId,i={id:A,startMark:r,stepModel:l,endId:s},u=l.innerFrameId;let c;if(this.g.setNode(u,{mark:n,width:0}),t.shouldMerge){const{mark:e,diamondSide:t,moveDiamond:A}=this.drawDiamondMark(s);c=e,this.g.setNode(s,{id:s,mark:c,width:c.attrs.width,height:c.attrs.height,onLayout(e){const n=a();n&&A(n.x+t+1,e.y)}})}else c=makeMark("rect",{...r.attrs}),this.g.setNode(s,{id:s,mark:c,width:c.attrs.width,height:c.attrs.height,onLayout(e){const t=o(a());t&&(safeAssign(c.attrs,{x:t.x-t.width/2,y:e.y-e.height/2,width:t.width}),e.width=t.width)}});return n.children.push(r),e.children.push(n,c),t.branches.map((e=>{var l;const r=this.drawStep(n,e),a=null===(l=e.value.children[0])||void 0===l?void 0:l.value.id;a&&this.g.setEdge(A,a,{label:"",isForkStartStraightLine:!0});let o=!1;return e.value.children.map((e=>e.value.id)).forEach((e=>{if(o)return;const t=this.model.stepModelMap.get(e);t&&"keyword"===t.type&&(o=!0),this.g.setParent(e,u)})),this.g.setEdge(r.endId,s,{label:"",isForkEndStraightLine:!t.shouldMerge,isDummyEdge:o}),r})),i}drawForkBranch(e,t){const{id:A}=t,n=makeEmptyGroup(),l=model2.stepModelMap.get(A),r={id:A,startMark:n,stepModel:l,endId:""};e.children.push(n);const a=last(t.children.map((t=>{const A=this.drawStep(e,t);return n.children.push(A.startMark),A})));return a&&(r.endId=a.id),r}drawNote(e,t){const{id:A,text:n}=t,l=makeMark("group",{x:0,y:0},{children:[],class:"activity__note"});e.children.push(l);const r={fontSize:conf4.fontSize,fontFamily:conf4.fontFamily},a=calcTextDims(n,r),o=getBaseNote(theme2),s={width:a.width+2*conf4.noteMargin,height:a.height+2*conf4.noteMargin},i={type:"rect",class:"note__bg",attrs:o},u={type:"text",attrs:{fill:conf4.noteTextColor,text:n,textBaseline:"middle",...r}},c=this.model.stepModelMap.get(t.target);c&&c.parentId&&this.g.setParent(c.parentId,A),this.g.setNode(A,{mark:l,width:s.width,height:s.height,onLayout:()=>{const e=this.g.node(c.id);let n;n="left"===t.placement?e.x-e.width/2-s.width-conf4.noteMargin:e.x+e.width/2+conf4.noteMargin;const l=e.y-e.height/2;safeAssign(u.attrs,{x:n+conf4.noteMargin,y:l+a.height/2+conf4.noteMargin,width:s.width}),safeAssign(o,{x:n,y:l,width:s.width,height:s.height});const r=this.g.node(A);r.outerLeft=n,r.outerRight=n+s.width}}),l.children.push(i,u)}};function drawAction(e,t,A){const n=model2.stepModelMap.get(t.id),l=makeEmptyGroup(),{textMark:r,rectMark:a,actionInfo:o}=drawActionMarks({message:t.message,conf:conf4}),{rectWidth:s,rectHeight:i}=o;return l.children.push(a,r),A.setNode(t.id,{id:t.id,mark:l,width:s,height:i,onLayout(e){positionGroupContents(l,{...e,x:e.x-e.width/2,y:e.y-e.height/2})}}),e.children.push(l),{id:t.id,startMark:l,stepModel:n}}function drawActionMarks({message:e,conf:t}){const A=getFontConfig3(t),n=getTextDimensionsInPresicion(e,A),l=getActionRectSize(e);return{rectMark:makeMark("rect",{width:l.rectWidth,height:l.rectHeight,x:0,y:0,fill:t.actionBackground,stroke:t.actionBorderColor}),textMark:makeTextMark(t,e,n,{y:l.rectHeight/2,x:l.rectWidth/2,...A,textBaseline:"middle",textAlign:"center"}),actionInfo:l}}function drawEdges(e,t){const A=makeMark("group",{},{children:[]}),n=makeBounds();return t.edges().forEach((e=>{const l=t.edge(e);if(!l.points)return;if(updateBoundsByPoints(n,l.points),l.isDummyEdge)return;const[r,...a]=l.points,o=a[a.length-1];l.isForkStartStraightLine?l.points.slice(0,l.points.length-2).forEach((e=>{safeAssign(e,{x:o.x})})):l.isForkEndStraightLine&&l.points.slice(1).forEach((e=>{safeAssign(e,{x:r.x})}));const s=makeMark("path",{path:"curved"===conf4.edgeType?getPointsCurvePath(l.points):getPointsLinearPath(l.points),stroke:conf4.edgeColor,lineJoin:"round"}),i=a.slice(-2),u=calcDirection.apply(null,i),c=drawArrowTo(o,8,u,{color:conf4.edgeColor}),h=l.labelPoint||getPointAt(l.points,.4,!0);if(!h)return;const f=h.x,g=h.y;let d=null,p=null;if(l.label){const t=getFontConfig3(conf4);p=makeLabelBg(calcTextDims(l.label,t),{x:f,y:g},{fill:conf4.labelBackground},theme2),d=makeMark("text",{text:l.label,id:[e.v,e.w].join("-"),textAlign:"center",textBaseline:"middle",x:f,y:g,fill:conf4.labelTextColor,...t},{class:"activity__edge-label"});const A=calcBound([p]);tryExpandBounds(n,A)}A.children.push(...compact([s,p,d,c]))})),e.children.push(A),{bounds:n}}function getFontConfig3(e){return{fontSize:e.fontSize,fontFamily:e.fontFamily}}var artist_default4=erArtist2,moo4=__toESM(require_moo());function id4(e){return e[0]}var COLOR4=/#[a-zA-Z0-9]+/,PARAM_DIRECTIVE4=/@param/,CONFIG_DIRECTIVE5=/@config/,L_PAREN4=/\(/,R_PAREN4=/\)/;function getTokenValue4(e){return e&&"value"in e?e.value:e}function handleConfigOpenCloseStatement4(e){const t=e[2].map((e=>e.type?getTokenValue4(e):e)).join("");try{return{type:"overrideConfig",value:JSON.parse(t)}}catch(e){return{type:"overrideConfig",error:e}}}var COMMENT_LINE4=/%%.*/,COMMON_TOKEN_RULES={VALID_TEXT:{match:VALID_TEXT_REGEXP,fallback:!0}},lexer4=moo4.states({main:{NL:MOO_NEWLINE,WS:{match:/ +/,lineBreaks:!1},QUOTED_WORD:QUOTED_WORD_REGEXP,COLOR:COLOR_REGEXP,SEMICOLON:/;/,COLON:/:/,ACTIVITY_DIAGRAM:/activityDiagram/,L_PAREN:L_PAREN_REGEXP,R_PAREN:R_PAREN_REGEXP,L_BRACKET:{match:/\{/},R_BRACKET:{match:/\}/},NOTE:textToCaseInsensitiveRegex("@note"),START_NOTE:{match:/@start_note\s/,push:"noteState"},COMMENT_LINE:COMMENT_LINE_REGEXP,...configLexerMainState,VALID_TEXT:{match:VALID_TEXT_REGEXP,fallback:!0}},configStatement:{...configLexerconfigStatementState,...COMMON_TOKEN_RULES},noteState:{END_NOTE:{match:textToCaseInsensitiveRegex("@end_note"),pop:1},NL:MOO_NEWLINE,COMMA:/,/,WORD:{match:VALID_TEXT_REGEXP,fallback:!0}}}),yy4;function setYY4(e){yy4=e}function extractChildren(e){return Array.isArray(e)?e[0]:e}var grammar4={Lexer:lexer4,ParserRules:[{name:"_$ebnf$1",symbols:[]},{name:"_$ebnf$1",symbols:["_$ebnf$1","wschar"],postprocess:e=>e[0].concat([e[1]])},{name:"_",symbols:["_$ebnf$1"],postprocess:function(e){return null}},{name:"__$ebnf$1",symbols:["wschar"]},{name:"__$ebnf$1",symbols:["__$ebnf$1","wschar"],postprocess:e=>e[0].concat([e[1]])},{name:"__",symbols:["__$ebnf$1"],postprocess:function(e){return null}},{name:"wschar",symbols:[/[ \t\n\v\f\r]/],postprocess:id4},{name:"color",symbols:[COLOR4],postprocess:e=>tv(e[0])},{name:"paramStatement",symbols:[PARAM_DIRECTIVE4,"__","paramPart"],postprocess:function(e){return e[2]}},{name:"paramStatement$ebnf$1",symbols:[]},{name:"paramStatement$ebnf$1$subexpression$1",symbols:[/[\n]/,"_","paramPart"]},{name:"paramStatement$ebnf$1",symbols:["paramStatement$ebnf$1","paramStatement$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"paramStatement",symbols:[PARAM_DIRECTIVE4,"__",{literal:"{"},"_","paramStatement$ebnf$1",/[\n]/,"_",{literal:"}"}],postprocess:function(e){const t=[];return e[4].forEach((e=>{t.push(e[2])})),t}},{name:"paramPart$ebnf$1",symbols:[/[a-zA-Z0-9]/]},{name:"paramPart$ebnf$1",symbols:["paramPart$ebnf$1",/[a-zA-Z0-9]/],postprocess:e=>e[0].concat([e[1]])},{name:"paramPart$ebnf$2",symbols:[/[^ \n]/]},{name:"paramPart$ebnf$2",symbols:["paramPart$ebnf$2",/[^ \n]/],postprocess:e=>e[0].concat([e[1]])},{name:"paramPart",symbols:["paramPart$ebnf$1","__","paramPart$ebnf$2"],postprocess:function(e){const t=e[0].map((e=>tv(e))).join("");let A=e[2];return"string"!=typeof A&&(A=A.map((e=>tv(e))).join("")),{type:"addParam",key:t,value:A}}},{name:"configStatement$ebnf$1",symbols:[/[^\)]/]},{name:"configStatement$ebnf$1",symbols:["configStatement$ebnf$1",/[^\)]/],postprocess:e=>e[0].concat([e[1]])},{name:"configStatement",symbols:[CONFIG_DIRECTIVE5,{literal:"("},"configStatement$ebnf$1",{literal:")"}],postprocess:handleConfigOpenCloseStatement4},{name:"configOpenCloseStatement$ebnf$1",symbols:[/[^\)]/]},{name:"configOpenCloseStatement$ebnf$1",symbols:["configOpenCloseStatement$ebnf$1",/[^\)]/],postprocess:e=>e[0].concat([e[1]])},{name:"configOpenCloseStatement",symbols:[CONFIG_DIRECTIVE5,L_PAREN4,"configOpenCloseStatement$ebnf$1",R_PAREN4],postprocess:handleConfigOpenCloseStatement4},{name:"comment",symbols:[COMMENT_LINE4],postprocess:e=>null},{name:"start",symbols:["__","start"],postprocess:e=>e[1]},{name:"start",symbols:[lexer4.has("ACTIVITY_DIAGRAM")?{type:"ACTIVITY_DIAGRAM"}:ACTIVITY_DIAGRAM,"document"],postprocess:function(e){return e[1]}},{name:"document",symbols:[]},{name:"document",symbols:["document","line"],postprocess:e=>e[0].concat(e[1])},{name:"line$ebnf$1",symbols:[]},{name:"line$ebnf$1",symbols:["line$ebnf$1",lexer4.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"line",symbols:["line$ebnf$1","statement"],postprocess:e=>e[1]},{name:"line$ebnf$2",symbols:[lexer4.has("WS")?{type:"WS"}:WS],postprocess:id4},{name:"line$ebnf$2",symbols:[],postprocess:()=>null},{name:"line",symbols:["line$ebnf$2",lexer4.has("NL")?{type:"NL"}:NL],postprocess:null},{name:"statement",symbols:["action"]},{name:"statement$subexpression$1",symbols:[{literal:"start"}]},{name:"statement$subexpression$1",symbols:[{literal:"stop"}]},{name:"statement$subexpression$1",symbols:[{literal:"end"}]},{name:"statement$subexpression$1",symbols:[{literal:"detach"}]},{name:"statement$subexpression$1",symbols:[{literal:"kill"}]},{name:"statement",symbols:["statement$subexpression$1",lexer4.has("NL")?{type:"NL"}:NL],postprocess:function(e){return{type:"keyword",label:tv(e[0][0])}}},{name:"statement",symbols:["group"]},{name:"statement",symbols:["conditionSentence"]},{name:"statement",symbols:["repeatSentence"]},{name:"statement",symbols:["whileSentence"]},{name:"statement",symbols:["switchSentence"]},{name:"statement",symbols:["forkSentence"]},{name:"statement",symbols:["noteStatement"]},{name:"statement",symbols:["arrowLabelStatement"]},{name:"statement",symbols:["titleStatement"]},{name:"statement",symbols:["paramStatement","_",lexer4.has("NL")?{type:"NL"}:NL]},{name:"statement",symbols:["configStatement","_",lexer4.has("NL")?{type:"NL"}:NL]},{name:"statement",symbols:["comment","_",lexer4.has("NL")?{type:"NL"}:NL],postprocess:null},{name:"conditionSentence$ebnf$1$subexpression$1",symbols:["_","wordsInParens"]},{name:"conditionSentence$ebnf$1",symbols:["conditionSentence$ebnf$1$subexpression$1"],postprocess:id4},{name:"conditionSentence$ebnf$1",symbols:[],postprocess:()=>null},{name:"conditionSentence$ebnf$2",symbols:[]},{name:"conditionSentence$ebnf$2",symbols:["conditionSentence$ebnf$2","line"],postprocess:e=>e[0].concat([e[1]])},{name:"conditionSentence$ebnf$3",symbols:["elseClause"],postprocess:id4},{name:"conditionSentence$ebnf$3",symbols:[],postprocess:()=>null},{name:"conditionSentence",symbols:[{literal:"if"},"wordsInParens",{literal:"then"},"conditionSentence$ebnf$1",lexer4.has("NL")?{type:"NL"}:NL,"conditionSentence$ebnf$2","conditionSentence$ebnf$3","_",{literal:"endif"},"_",lexer4.has("NL")?{type:"NL"}:NL],postprocess:function(e){const t=(e[3]?e[3][1]:null)||"",A=e[6];return{type:"condition",message:e[1],then:{label:t,children:e[5].map((e=>Array.isArray(e)?e[0]:e))},else:A}}},{name:"elseClause$ebnf$1",symbols:[]},{name:"elseClause$ebnf$1",symbols:["elseClause$ebnf$1",lexer4.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"elseClause$ebnf$2",symbols:["wordsInParens"],postprocess:id4},{name:"elseClause$ebnf$2",symbols:[],postprocess:()=>null},{name:"elseClause$ebnf$3",symbols:[]},{name:"elseClause$ebnf$3",symbols:["elseClause$ebnf$3","line"],postprocess:e=>e[0].concat([e[1]])},{name:"elseClause",symbols:["elseClause$ebnf$1",{literal:"else"},"elseClause$ebnf$2",lexer4.has("NL")?{type:"NL"}:NL,"elseClause$ebnf$3"],postprocess:function(e){return{label:e[2],children:e[4].map((e=>Array.isArray(e)?e[0]:e))}}},{name:"whileSentence$ebnf$1$subexpression$1",symbols:[lexer4.has("WS")?{type:"WS"}:WS,{literal:"is"},lexer4.has("WS")?{type:"WS"}:WS,"wordsInParens"]},{name:"whileSentence$ebnf$1",symbols:["whileSentence$ebnf$1$subexpression$1"],postprocess:id4},{name:"whileSentence$ebnf$1",symbols:[],postprocess:()=>null},{name:"whileSentence$ebnf$2",symbols:[]},{name:"whileSentence$ebnf$2",symbols:["whileSentence$ebnf$2","line"],postprocess:e=>e[0].concat([e[1]])},{name:"whileSentence$ebnf$3",symbols:[]},{name:"whileSentence$ebnf$3",symbols:["whileSentence$ebnf$3",lexer4.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"whileSentence$ebnf$4$subexpression$1",symbols:["_","wordsInParens"]},{name:"whileSentence$ebnf$4",symbols:["whileSentence$ebnf$4$subexpression$1"],postprocess:id4},{name:"whileSentence$ebnf$4",symbols:[],postprocess:()=>null},{name:"whileSentence$ebnf$5",symbols:[lexer4.has("WS")?{type:"WS"}:WS],postprocess:id4},{name:"whileSentence$ebnf$5",symbols:[],postprocess:()=>null},{name:"whileSentence",symbols:[{literal:"while"},"wordsInParens","whileSentence$ebnf$1","_",lexer4.has("NL")?{type:"NL"}:NL,"whileSentence$ebnf$2","whileSentence$ebnf$3",{literal:"endwhile"},"whileSentence$ebnf$4","whileSentence$ebnf$5",lexer4.has("NL")?{type:"NL"}:NL],postprocess:function(e){const t=e[2]?e[2][3]:void 0,A=e[8]?e[8][1]:void 0;return{type:"while",message:e[1],confirmLabel:t,denyLabel:A,children:e[5].map((e=>Array.isArray(e)?e[0]:e))}}},{name:"repeatSentence",symbols:[{literal:"repeat"},lexer4.has("WS")?{type:"WS"}:WS,"oneLineAction","repeatBodyAndEnd"],postprocess:function(e){return{type:"repeat",firstAction:e[2].action,...e[3]}}},{name:"repeatSentence$ebnf$1",symbols:[lexer4.has("WS")?{type:"WS"}:WS],postprocess:id4},{name:"repeatSentence$ebnf$1",symbols:[],postprocess:()=>null},{name:"repeatSentence",symbols:[{literal:"repeat"},"repeatSentence$ebnf$1",lexer4.has("NL")?{type:"NL"}:NL,"repeatBodyAndEnd"],postprocess:function(e){return{type:"repeat",...e[3]}}},{name:"repeatBodyAndEnd$ebnf$1",symbols:[]},{name:"repeatBodyAndEnd$ebnf$1",symbols:["repeatBodyAndEnd$ebnf$1","line"],postprocess:e=>e[0].concat([e[1]])},{name:"repeatBodyAndEnd$ebnf$2",symbols:[]},{name:"repeatBodyAndEnd$ebnf$2",symbols:["repeatBodyAndEnd$ebnf$2",lexer4.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"repeatBodyAndEnd$ebnf$3$subexpression$1",symbols:[lexer4.has("WS")?{type:"WS"}:WS,{literal:"is"},lexer4.has("WS")?{type:"WS"}:WS,"wordsInParens"]},{name:"repeatBodyAndEnd$ebnf$3",symbols:["repeatBodyAndEnd$ebnf$3$subexpression$1"],postprocess:id4},{name:"repeatBodyAndEnd$ebnf$3",symbols:[],postprocess:()=>null},{name:"repeatBodyAndEnd$ebnf$4$subexpression$1",symbols:[lexer4.has("WS")?{type:"WS"}:WS,{literal:"not"},lexer4.has("WS")?{type:"WS"}:WS,"wordsInParens"]},{name:"repeatBodyAndEnd$ebnf$4",symbols:["repeatBodyAndEnd$ebnf$4$subexpression$1"],postprocess:id4},{name:"repeatBodyAndEnd$ebnf$4",symbols:[],postprocess:()=>null},{name:"repeatBodyAndEnd$ebnf$5",symbols:[lexer4.has("WS")?{type:"WS"}:WS],postprocess:id4},{name:"repeatBodyAndEnd$ebnf$5",symbols:[],postprocess:()=>null},{name:"repeatBodyAndEnd",symbols:["repeatBodyAndEnd$ebnf$1","repeatBodyAndEnd$ebnf$2",{literal:"repeatwhile"},"wordsInParens","repeatBodyAndEnd$ebnf$3","repeatBodyAndEnd$ebnf$4","repeatBodyAndEnd$ebnf$5",lexer4.has("NL")?{type:"NL"}:NL],postprocess:function(e){return{message:e[3],confirmLabel:e[4]?e[4][3]:void 0,denyLabel:e[5]?e[5][3]:void 0,children:e[0].map((e=>Array.isArray(e)?e[0]:e))}}},{name:"switchSentence$ebnf$1",symbols:[]},{name:"switchSentence$ebnf$1",symbols:["switchSentence$ebnf$1",lexer4.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"switchSentence$ebnf$2",symbols:[]},{name:"switchSentence$ebnf$2$subexpression$1$ebnf$1",symbols:[]},{name:"switchSentence$ebnf$2$subexpression$1$ebnf$1",symbols:["switchSentence$ebnf$2$subexpression$1$ebnf$1",lexer4.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"switchSentence$ebnf$2$subexpression$1",symbols:["switchSentence$ebnf$2$subexpression$1$ebnf$1","caseClause"]},{name:"switchSentence$ebnf$2",symbols:["switchSentence$ebnf$2","switchSentence$ebnf$2$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"switchSentence$ebnf$3",symbols:[]},{name:"switchSentence$ebnf$3",symbols:["switchSentence$ebnf$3",lexer4.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"switchSentence$ebnf$4",symbols:[]},{name:"switchSentence$ebnf$4",symbols:["switchSentence$ebnf$4",lexer4.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"switchSentence",symbols:[{literal:"switch"},"wordsInParens","switchSentence$ebnf$1",lexer4.has("NL")?{type:"NL"}:NL,"switchSentence$ebnf$2","switchSentence$ebnf$3",{literal:"endswitch"},"switchSentence$ebnf$4",lexer4.has("NL")?{type:"NL"}:NL],postprocess:function(e){return{type:"switch",message:e[1],children:e[4].map((e=>e[1]))}}},{name:"caseClause$ebnf$1",symbols:[]},{name:"caseClause$ebnf$1",symbols:["caseClause$ebnf$1",lexer4.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"caseClause$ebnf$2",symbols:[]},{name:"caseClause$ebnf$2",symbols:["caseClause$ebnf$2","line"],postprocess:e=>e[0].concat([e[1]])},{name:"caseClause",symbols:[{literal:"case"},"wordsInParens","caseClause$ebnf$1",lexer4.has("NL")?{type:"NL"}:NL,"caseClause$ebnf$2"],postprocess:function(e){return{type:"case",confirmLabel:e[1].trim(),children:e[4].map((e=>Array.isArray(e)?e[0]:e))}}},{name:"forkSentence$ebnf$1",symbols:[]},{name:"forkSentence$ebnf$1",symbols:["forkSentence$ebnf$1",lexer4.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"forkSentence$ebnf$2$subexpression$1",symbols:[lexer4.has("WS")?{type:"WS"}:WS,"statement"]},{name:"forkSentence$ebnf$2",symbols:["forkSentence$ebnf$2$subexpression$1"]},{name:"forkSentence$ebnf$2$subexpression$2",symbols:[lexer4.has("WS")?{type:"WS"}:WS,"statement"]},{name:"forkSentence$ebnf$2",symbols:["forkSentence$ebnf$2","forkSentence$ebnf$2$subexpression$2"],postprocess:e=>e[0].concat([e[1]])},{name:"forkSentence$ebnf$3",symbols:[]},{name:"forkSentence$ebnf$3$subexpression$1",symbols:["_","forkAgainClause"]},{name:"forkSentence$ebnf$3",symbols:["forkSentence$ebnf$3","forkSentence$ebnf$3$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"forkSentence$subexpression$1",symbols:[{literal:"endfork"}]},{name:"forkSentence$subexpression$1",symbols:[{literal:"endmerge"}]},{name:"forkSentence",symbols:[{literal:"fork"},"forkSentence$ebnf$1",lexer4.has("NL")?{type:"NL"}:NL,"forkSentence$ebnf$2","forkSentence$ebnf$3","_","forkSentence$subexpression$1",lexer4.has("NL")?{type:"NL"}:NL],postprocess:function(e){const t=[{type:"forkBranch",children:e[3].map((e=>extractChildren(e[1])))},...e[4].map((e=>e[1]))];return{type:"fork",shouldMerge:"endmerge"===tv(e[6][0]),branches:t}}},{name:"forkAgainClause$ebnf$1",symbols:[]},{name:"forkAgainClause$ebnf$1",symbols:["forkAgainClause$ebnf$1",lexer4.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"forkAgainClause$ebnf$2$subexpression$1",symbols:[lexer4.has("WS")?{type:"WS"}:WS,"statement"]},{name:"forkAgainClause$ebnf$2",symbols:["forkAgainClause$ebnf$2$subexpression$1"]},{name:"forkAgainClause$ebnf$2$subexpression$2",symbols:[lexer4.has("WS")?{type:"WS"}:WS,"statement"]},{name:"forkAgainClause$ebnf$2",symbols:["forkAgainClause$ebnf$2","forkAgainClause$ebnf$2$subexpression$2"],postprocess:e=>e[0].concat([e[1]])},{name:"forkAgainClause",symbols:[{literal:"forkagain"},"forkAgainClause$ebnf$1",lexer4.has("NL")?{type:"NL"}:NL,"forkAgainClause$ebnf$2"],postprocess:function(e){return{type:"forkBranch",children:e[3].map((e=>extractChildren(e[1])))}}},{name:"wordsInParens",symbols:[lexer4.has("L_PAREN")?{type:"L_PAREN"}:L_PAREN4,"words",lexer4.has("R_PAREN")?{type:"R_PAREN"}:R_PAREN4],postprocess:e=>e[1]},{name:"words$ebnf$1$subexpression$1",symbols:[lexer4.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{name:"words$ebnf$1$subexpression$1",symbols:[lexer4.has("WS")?{type:"WS"}:WS]},{name:"words$ebnf$1",symbols:["words$ebnf$1$subexpression$1"]},{name:"words$ebnf$1$subexpression$2",symbols:[lexer4.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{name:"words$ebnf$1$subexpression$2",symbols:[lexer4.has("WS")?{type:"WS"}:WS]},{name:"words$ebnf$1",symbols:["words$ebnf$1","words$ebnf$1$subexpression$2"],postprocess:e=>e[0].concat([e[1]])},{name:"words",symbols:["words$ebnf$1"],postprocess:function(e){return e[0].map((e=>tv(e[0]))).join("")}},{name:"action",symbols:[lexer4.has("COLON")?{type:"COLON"}:COLON,"multilineText",lexer4.has("SEMICOLON")?{type:"SEMICOLON"}:SEMICOLON,lexer4.has("NL")?{type:"NL"}:NL],postprocess:function(e){return{type:"addAction",action:{actionType:"normal",message:e[1]}}}},{name:"oneLineAction",symbols:[lexer4.has("COLON")?{type:"COLON"}:COLON,"words",lexer4.has("SEMICOLON")?{type:"SEMICOLON"}:SEMICOLON,lexer4.has("NL")?{type:"NL"}:NL],postprocess:function(e){return{type:"addAction",action:{actionType:"normal",message:e[1]}}}},{name:"multilineText$ebnf$1",symbols:[]},{name:"multilineText$ebnf$1$subexpression$1",symbols:[lexer4.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{name:"multilineText$ebnf$1$subexpression$1",symbols:[lexer4.has("WS")?{type:"WS"}:WS]},{name:"multilineText$ebnf$1$subexpression$1",symbols:[lexer4.has("NL")?{type:"NL"}:NL]},{name:"multilineText$ebnf$1",symbols:["multilineText$ebnf$1","multilineText$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"multilineText",symbols:["multilineText$ebnf$1"],postprocess:function(e){return e[0].map((e=>e.map((e=>tv(e))))).join("")}},{name:"groupType",symbols:[{literal:"group"}]},{name:"groupType",symbols:[{literal:"partition"}]},{name:"group$ebnf$1$subexpression$1",symbols:["color",lexer4.has("WS")?{type:"WS"}:WS]},{name:"group$ebnf$1",symbols:["group$ebnf$1$subexpression$1"],postprocess:id4},{name:"group$ebnf$1",symbols:[],postprocess:()=>null},{name:"group$subexpression$1",symbols:[lexer4.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD]},{name:"group$subexpression$1",symbols:[lexer4.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{name:"group$ebnf$2$subexpression$1",symbols:["__","statement"]},{name:"group$ebnf$2",symbols:["group$ebnf$2$subexpression$1"]},{name:"group$ebnf$2$subexpression$2",symbols:["__","statement"]},{name:"group$ebnf$2",symbols:["group$ebnf$2","group$ebnf$2$subexpression$2"],postprocess:e=>e[0].concat([e[1]])},{name:"group$ebnf$3",symbols:[]},{name:"group$ebnf$3",symbols:["group$ebnf$3",lexer4.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"group$ebnf$4",symbols:[]},{name:"group$ebnf$4",symbols:["group$ebnf$4",lexer4.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"group",symbols:["groupType","__","group$ebnf$1","group$subexpression$1","_",lexer4.has("L_BRACKET")?{type:"L_BRACKET"}:L_BRACKET,"group$ebnf$2","group$ebnf$3",lexer4.has("R_BRACKET")?{type:"R_BRACKET"}:R_BRACKET,"group$ebnf$4",lexer4.has("NL")?{type:"NL"}:NL],postprocess:function(e){const t=tv(e[0][0]),A=e[2]?e[2][0]:null,n=e[3][0],l="QUOTED_WORD"===n.type?getQuotedWord(n).replace(/"(.*)"/,"$1"):tv(n),r=(l||t).trim(),a=(l||`${t}_${Date.now()}`).trim(),o=e[6].map((e=>e[1][0])).filter((e=>e));return o.forEach((e=>e.parent=a)),{type:"group",name:a,groupType:t,label:r,background:A,children:o}}},{name:"placement",symbols:[{literal:"left"}],postprocess:e=>"left"},{name:"placement",symbols:[{literal:"right"}],postprocess:e=>"right"},{name:"multilineNoteText$ebnf$1",symbols:[]},{name:"multilineNoteText$ebnf$1$subexpression$1",symbols:[lexer4.has("COMMA")?{type:"COMMA"}:COMMA]},{name:"multilineNoteText$ebnf$1$subexpression$1",symbols:[lexer4.has("WORD")?{type:"WORD"}:WORD]},{name:"multilineNoteText$ebnf$1$subexpression$1",symbols:[lexer4.has("NL")?{type:"NL"}:NL]},{name:"multilineNoteText$ebnf$1",symbols:["multilineNoteText$ebnf$1","multilineNoteText$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"multilineNoteText",symbols:["multilineNoteText$ebnf$1",lexer4.has("END_NOTE")?{type:"END_NOTE"}:END_NOTE],postprocess:function(e){const t=e[0].map((e=>e.map((e=>tv(e))))).join("");let A=t;return"\n"===t[t.length-1]&&(A=t.slice(0,t.length-1)),A}},{name:"noteStatement$subexpression$1",symbols:[{literal:"note"}]},{name:"noteStatement$subexpression$1",symbols:[lexer4.has("NOTE")?{type:"NOTE"}:NOTE]},{name:"noteStatement$ebnf$1",symbols:[]},{name:"noteStatement$ebnf$1",symbols:["noteStatement$ebnf$1",lexer4.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"noteStatement$ebnf$2",symbols:[]},{name:"noteStatement$ebnf$2",symbols:["noteStatement$ebnf$2",lexer4.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"noteStatement",symbols:["noteStatement$subexpression$1","noteStatement$ebnf$1","placement","noteStatement$ebnf$2",lexer4.has("COLON")?{type:"COLON"}:COLON,"words",lexer4.has("NL")?{type:"NL"}:NL],postprocess:function(e){const t=e[5].trim();return{type:"note",placement:e[2],text:t}}},{name:"noteStatement$subexpression$2",symbols:[{literal:"note"}]},{name:"noteStatement$subexpression$2",symbols:[lexer4.has("START_NOTE")?{type:"START_NOTE"}:START_NOTE]},{name:"noteStatement$ebnf$3",symbols:[]},{name:"noteStatement$ebnf$3",symbols:["noteStatement$ebnf$3",lexer4.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"noteStatement$ebnf$4",symbols:[]},{name:"noteStatement$ebnf$4",symbols:["noteStatement$ebnf$4",lexer4.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"noteStatement",symbols:["noteStatement$subexpression$2","noteStatement$ebnf$3","placement","noteStatement$ebnf$4",lexer4.has("NL")?{type:"NL"}:NL,"multilineNoteText",lexer4.has("NL")?{type:"NL"}:NL],postprocess:function(e){const t=e[5];return{type:"note",placement:e[2],text:t}}},{name:"arrowLabelStatement",symbols:[{literal:"->"},"__","words",lexer4.has("SEMICOLON")?{type:"SEMICOLON"}:SEMICOLON,"_",lexer4.has("NL")?{type:"NL"}:NL],postprocess:function(e){return{type:"arrowLabel",text:e[2]}}},{name:"titleStatement",symbols:[{literal:"title"},lexer4.has("COLON")?{type:"COLON"}:COLON,"words",lexer4.has("NL")?{type:"NL"}:NL],postprocess:e=>({type:"setTitle",text:e[2].trim()})}],ParserStart:"start",ParserOptions:{skipUnmatchSymbols:[lexer4.has("WS")?{type:"WS"}:WS]}},activityDiagram_default=grammar4;setYY4(db4);var parse4=genParserWithRules(activityDiagram_default,{dedupeAmbigousResults:!0,postProcess:e=>(db4.apply(e),e)}),activityDiagram={pattern:/^\s*activityDiagram/,parser:{parse:e=>(parse4(e),db4.getDiagramIR())},artist:artist_default4,configKey:"activity",clear(){db4.clear()}},DOTDb=class extends BaseDb{constructor(){super(...arguments),this.ACTION_HANDLERS={overrideConfig(e){this.addOverrideConfig(e)},addParam(e){this.configParams.push(e)},addGraph(e){function t(e){return e.reduce(((e,t)=>(e[t.id]=t.eq,e)),{})}const A=function e(A){const n={...A},l=[],r=[],a={};for(const A of n.children){let n=A;switch(A.type){case"attr_stmt":{const e=A,l=A.target||"graph";"attr_list"in e&&(a[l]=Object.assign(a[l]||{},t(e.attr_list)),n=null);break}case"node_stmt":case"edge_stmt":{const e=A;"attr_list"in e&&(A.attrs=t(e.attr_list),delete e.attr_list);break}case"subgraph":n=e(A);break;case"attr":l.push(A),n=null}n&&r.push(n)}return n.children=r,l.length&&(a.graph=Object.assign(a.graph||{},t(l))),Object.keys(a).length&&(n.attrs=a),n}(e.graph);this.graph=A}}}getDiagramIR(){return this.processAttrs(),{...super.getBaseDiagramIR(),graph:this.graph}}processAttrs(){}apply(e){e&&(Array.isArray(e)?e.forEach((e=>this.apply(e))):e.type in this.ACTION_HANDLERS&&this.ACTION_HANDLERS[e.type].call(this,e))}clear(){super.clear(),this.graph=void 0}},db5=new DOTDb,db_default4=db5,SHAPE_MAP={ellipse:"ellipse",circle:"circle"};function drawNodeShape(e){const{data:t,shape:A,textDims:n,markAttrs:l}=e,r=floorValues(TRANSFORM_GRAPH.graphNodeToRectStart(t));if(A){const e=SHAPE_MAP[A];if(symbolRegistry.get(e||A)){const e={x:t.x,y:t.y,width:n.width,height:n.height};return{containerNode:symbolRegistry.create(A,{mode:"container",attrs:l,contentArea:e})}}}const a=makeMark("rect",{...r,...l});return"plaintext"===A&&(a.attrs.fill="transparent",a.attrs.stroke="transparent"),{containerNode:a}}var StyleContext=class e{constructor(){this.values={}}setParent(e){this.parent=e}spawn(){const t=new e;return t.setParent(this),t}getValue(e){const t=this.resolve(e);if(t.resolved)return t.value}set(e,t){this.values[e]={v:t}}setValues(e){for(const[t,A]of Object.entries(e))this.set(t,A)}resolve(e){let t=this;for(;t;){if(t.values[e])return{resolved:!0,value:t.values[e].v};t=t.parent}return{resolved:!1,value:void 0}}},DEFAULT_LINE_WIDTH=1,BOLD_LINE_WIDTH=2,DASHED_LINE_DASH=[5,5],DOTTED_LINE_DASH=[2,4],defaultConfig5={diagramPadding:15,layoutDirection:"TB",ranksep:20,nodesep:20,edgesep:10,edgeType:"polyline",nodePadding:8,nodeBorderRadius:2,backgroundColor:PALETTE.white,labelTextColor:PALETTE.normalDark,nodeBorderColor:PALETTE.normalDark,edgeColor:PALETTE.normalDark,fontSize:14,fontWeight:"normal",fontFamily:DEFAULT_FONT_FAMILY},DOT_PARAM_DIRECTIVE_RULES={...getParamRulesFromConfig(defaultConfig5)},configKey5="dot",configurator5=makeConfigurator({defaultConfig:defaultConfig5,configKey:configKey5,getConfigFromParamDirectives:e=>interpreteConfigs(DOT_PARAM_DIRECTIVE_RULES,e),getConfigFromTheme:e=>({backgroundColor:e.canvasBackground,labelTextColor:e.textColor,nodeBorderColor:e.primaryLineColor,edgeColor:e.primaryLineColor})}),getConf5=configurator5.getConfig,StyleContexts=class e{constructor(){this.node=new StyleContext,this.edge=new StyleContext,this.graph=new StyleContext}spawn(){const t=new e;return t.node.setParent(this.node),t.edge.setParent(this.edge),t.graph.setParent(this.graph),t}update(e){e.graph&&this.graph.setValues(e.graph),e.node&&this.node.setValues(e.node),e.edge&&this.edge.setValues(e.edge)}},artist=makeArtist({draw(e,t,A){const n=getConf5(e,t),l=makeEmptyGroup(),r=new DOTDraw(e,n,l),a=r.draw(),o=r.dagreWrapper.getGraphBounds();let{width:s,height:i}=adjustRootMarkBounds({rootMark:l,gBounds:o,padX:n.diagramPadding,padY:n.diagramPadding});if(a&&(a.labelHeight&&(i+=a.labelHeight),a.frameRect)){safeAssign(a.frameRect.attrs,{width:s,height:i,x:-n.diagramPadding,y:-n.diagramPadding})}return{mark:l,width:s,height:i}}}),DOTDraw=class{constructor(e,t,A){this.ir=e,this.conf=t,this.rootMark=A,this.drawnNodeIds=new Set,this.edgeNodeIds=new Set,this.subgraphs=new Map,isDev&&(window.dotDraw=this),this.g=createLayoutGraph({multigraph:!0,directed:!0,compound:!0}).setGraph({rankdir:t.layoutDirection,nodesep:t.nodesep,edgesep:t.edgesep,ranksep:t.ranksep,splines:getGraphSplinesOption(t.edgeType)}),this.dagreWrapper=new DagreWrapper(this.g)}draw(){const e=this.ir.graph;if(!e)return;const t=this.dagreWrapper,A={id:e.id,mark:this.rootMark,isRoot:!0,styleContexts:new StyleContexts};this.updateSubgraphMap(),this.drawGraphAlike(e,A);for(const e of this.edgeNodeIds)this.drawnNodeIds.has(e)||(this.drawNode(e,{},A),this.g.setParent(e,A.id));return t.doLayout(),t.callNodeOnLayout(),t.callEdgeOnLayout(),this.drawOutmostFrame(A)}updateSubgraphMap(){const e=this.ir.graph;this.subgraphs=new Map;const t=e=>{if("subgraph"===e.type){this.subgraphs.set(e.id,e);for(const A of e.children)t(A)}};for(const A of e.children)t(A)}drawGraphAlike(e,t){var A;e.attrs&&t.styleContexts.update(e.attrs);const n=this.conf,l=t.styleContexts.graph,r=this.getFontConfig(l),a=(null===(A=e.attrs)||void 0===A?void 0:A.graph)||{},o=a.label;if(t.isRoot)this.g.setNode(e.id,{});else{let A=0,s=0;if(o){const e=calculateTextDimensions(o,r);A=e.width+r.fontSize,s=e.height}this.g.setNode(e.id,{minwidth:A,paddingt:s,onLayout(e){const A=floorValues(TRANSFORM_GRAPH.graphNodeToRectStart(e)),s=graphAttrMapper(a,l),i=makeMark("rect",{...A,stroke:n.nodeBorderColor,...s});if(t.mark.children.unshift(i),o){const A={x:e.x,y:e.y-e.height/2},s=makeTextAtPoint(o,A,{textBaseline:"hanging",...r,fill:n.labelTextColor,...graphLabelAttrMapper(a,l)});t.mark.children.push(s)}}})}e.children.forEach((A=>{switch(A.type){case"node_stmt":this.drawNodeStmt(A,t);break;case"edge_stmt":this.drawEdgeStmt(A,t);break;case"subgraph":{const n=makeEmptyGroup();t.mark.children.push(n);const l={id:A.id,mark:n,styleContexts:t.styleContexts.spawn(),parentId:t.id};this.drawGraphAlike(A,l),this.g.setParent(A.id,e.id);break}}}))}drawNodeStmt(e,t){const{nodeId:A}=e;this.g.setParent(A.id,t.id),this.drawNode(A.id,e.attrs,t),this.drawnNodeIds.add(A.id)}drawNode(e,t={},A){const n=this.subgraphs.get(e);if(Boolean(n))return;const l=t.label||e,r=A.styleContexts.node,a=this.getFontConfig(r),o=getTextDimensionsInPresicion(l,a),s=o.width+2*this.conf.nodePadding,i=o.height+2*this.conf.nodePadding,u=nodeLayoutAttrMapper(t,r);this.g.setNode(e,{width:s,height:i,...u,onLayout:e=>{const n=t.shape||r.getValue("shape"),s=t.style||r.getValue("style");let i=null,u=DEFAULT_LINE_WIDTH;"dashed"===s?i=DASHED_LINE_DASH.slice():"dotted"===s?i=DOTTED_LINE_DASH.slice():"bold"===s&&(u=BOLD_LINE_WIDTH);const c=drawNodeShape({data:e,shape:n,textDims:o,markAttrs:{stroke:this.conf.nodeBorderColor,radius:this.conf.nodeBorderRadius,lineDash:i,lineWidth:u,...nodeAttrsToStyle(t,r)}}),h=makeMark("text",{text:l,x:e.x,y:e.y,fill:this.conf.labelTextColor,...a,...nodeAttrsToLabelStyle(t,r),textAlign:"center",textBaseline:"middle"});A.mark.children.push(c.containerNode,h)}})}drawEdgeStmt(e,t){const{edge_list:A,attrs:n={}}=e,l=zipTuple(A.slice(0,A.length-1),A.slice(1)),r=makeEmptyGroup(),a=graphAttrMapper({},t.styleContexts.graph);t.mark.children.push(r);const o="digraph"===this.ir.graph.type;l.forEach((([e,A])=>{this.edgeNodeIds.add(e.id),this.edgeNodeIds.add(A.id);const l=this.conf;this.g.setEdge(e.id,A.id,{onLayout:s=>{const i=t.styleContexts.edge,u=n.style||i.getValue("style");if("invis"===u)return;const c="curved"===this.conf.edgeType?getPointsCurvePath(s.points):getPointsLinearPath(s.points),h=edgeAttrsToStyle(n,i);let f=null,g=DEFAULT_LINE_WIDTH;"dashed"===u?f=DASHED_LINE_DASH.slice():"dotted"===u?f=DOTTED_LINE_DASH.slice():"bold"===u&&(g=BOLD_LINE_WIDTH);const d=makeMark("path",{path:c,stroke:l.edgeColor,lineDash:f,lineWidth:g,...h});if(r.children.push(d),o){const e=last(s.points),t=calcDirection(s.points[s.points.length-2],e),A=n.arrowhead||i.getValue("arrowhead")||"normal",o=drawArrowTo(last(s.points),8,t,{type:ARROW_TYPE_MAP[A]||"triangle",color:h.stroke||l.edgeColor,bgColor:a.fill||this.conf.backgroundColor});r.children.push(o)}const p=s.labelPoint||s.points[1];if(n.label){const t=n.fontcolor||this.conf.labelTextColor,l=makeMark("text",{text:n.label,id:[e.id,A.id].join("-"),textAlign:"center",textBaseline:"middle",...p,fill:t,...this.getFontConfig(i)},{class:"activity__edge-label"});r.children.push(l)}}})}))}drawOutmostFrame(e){var t;const A=this.ir.graph;if(!(null===(t=A.attrs)||void 0===t?void 0:t.graph))return;const n=A.attrs.graph,l=this.conf,r=this.dagreWrapper.getGraphBounds();let a;const o=e.styleContexts.graph;if(n.bgcolor){const t=r,A=graphAttrMapper(n,o);a=makeMark("rect",{...pick(t,["width","height"]),...A,stroke:"transparent"},{class:"dot__frame-bg"}),e.mark.children.unshift(a)}const s=n.label;let i=0;if(s){const t=this.getFontConfig(o),A={x:r.left+r.width/2,y:r.bottom};i=calculateTextDimensions(s,t).height;const a=makeTextAtPoint(s,A,{textBaseline:"hanging",...t,fill:l.labelTextColor,...graphLabelAttrMapper(n,o)});e.mark.children.push(a)}return{labelHeight:i,frameRect:a}}getFontConfig(e){const t=null==e?void 0:e.getValue("fontsize");return{fontSize:t&&parseFloat(t)||this.conf.fontSize,fontFamily:(null==e?void 0:e.getValue("fontname"))||this.conf.fontFamily,fontWeight:this.conf.fontWeight}}};function zipTuple(e,t){const A=[];for(let n=0;n<e.length;n++)n<t.length&&A.push([e[n],t[n]]);return A}function makeAttrMapper(e){return(t,A)=>{const n={};for(const[l,r]of Object.entries(e)){const e=t[l]||(null==A?void 0:A.getValue(l));e&&(n[r]=e)}return n}}var NODE_ATTR_MAP={color:"stroke",bgcolor:"fill"},nodeAttrMapper=makeAttrMapper(NODE_ATTR_MAP);function nodeAttrsToStyle(e,t){return nodeAttrMapper(e,t)}var NODE_LABEL_ATTR_MAP={fontcolor:"fill"},nodeLabelAttrMapper=makeAttrMapper(NODE_LABEL_ATTR_MAP);function nodeAttrsToLabelStyle(e,t){return nodeLabelAttrMapper(e,t)}var nodeLayoutAttrMapper=makeAttrMapper({margint:"margint",marginb:"marginb",marginl:"marginl",marginr:"marginr"}),EDGE_ATTR_MAP={color:"stroke"},edgeAttrMapper=makeAttrMapper(EDGE_ATTR_MAP);function edgeAttrsToStyle(e,t){return edgeAttrMapper(e,t)}var GRAPH_ATTR_MAP={color:"stroke",bgcolor:"fill"},graphAttrMapper=makeAttrMapper(GRAPH_ATTR_MAP),graphLabelAttrMapper=makeAttrMapper({...NODE_LABEL_ATTR_MAP}),ARROW_TYPE_MAP={normal:"triangle",box:"box",obox:"obox",dot:"dot",odot:"odot",open:"default",diamond:"diamond",ediamond:"ediamond"},artist_default5=artist,moo5=__toESM(require_moo());function id5(e){return e[0]}var COLOR5=/#[a-zA-Z0-9]+/,PARAM_DIRECTIVE5=/@param/,CONFIG_DIRECTIVE6=/@config/,L_PAREN5=/\(/,R_PAREN5=/\)/;function getTokenValue5(e){return e&&"value"in e?e.value:e}function handleConfigOpenCloseStatement5(e){const t=e[2].map((e=>e.type?getTokenValue5(e):e)).join("");try{return{type:"overrideConfig",value:JSON.parse(t)}}catch(e){return{type:"overrideConfig",error:e}}}var COMMENT_LINE5=/%%.*/,COMMON_TOKEN_RULES2={VALID_TEXT:{match:VALID_TEXT_REGEXP,fallback:!0}},lexer5=moo5.states({main:{NL:MOO_NEWLINE,WS:{match:/[ \t]+/,lineBreaks:!1},QUOTED_WORD:QUOTED_WORD_REGEXP,COLOR:COLOR_REGEXP,SEMICOLON:/;/,COLON:/:/,COMMA:/,/,DOT_DIAGRAM:/dotDiagram/,L_PAREN:L_PAREN_REGEXP,R_PAREN:R_PAREN_REGEXP,L_BRACKET:{match:/\{/},R_BRACKET:{match:/\}/},L_SQ_BRACKET:{match:/\[/},R_SQ_BRACKET:{match:/\]/},EQ:{match:/=/},SUBGRAPH:{match:/subgraph/},COMMENT_LINE:COMMENT_LINE_REGEXP,DOT_SLASH_COMMENT:/\/\/.*/,DOT_BLOCK_COMMENT_START:{match:/\/\*/,push:"blockComment"},...configLexerMainState,VALID_TEXT:{match:VALID_TEXT_REGEXP,fallback:!0}},configStatement:{...configLexerconfigStatementState,...COMMON_TOKEN_RULES2},blockComment:{DOT_BLOCK_COMMENT_END:{match:/\*\//,pop:1},ANY_COMMENT_TEXT:{match:/(?:\s\w\d\n\r)+(?!\*\/)/,fallback:!0}}});function rNull(){return null}var grammar5={Lexer:lexer5,ParserRules:[{name:"_$ebnf$1",symbols:[]},{name:"_$ebnf$1",symbols:["_$ebnf$1","wschar"],postprocess:e=>e[0].concat([e[1]])},{name:"_",symbols:["_$ebnf$1"],postprocess:function(e){return null}},{name:"__$ebnf$1",symbols:["wschar"]},{name:"__$ebnf$1",symbols:["__$ebnf$1","wschar"],postprocess:e=>e[0].concat([e[1]])},{name:"__",symbols:["__$ebnf$1"],postprocess:function(e){return null}},{name:"wschar",symbols:[/[ \t\n\v\f\r]/],postprocess:id5},{name:"color",symbols:[COLOR5],postprocess:e=>tv(e[0])},{name:"paramStatement",symbols:[PARAM_DIRECTIVE5,"__","paramPart"],postprocess:function(e){return e[2]}},{name:"paramStatement$ebnf$1",symbols:[]},{name:"paramStatement$ebnf$1$subexpression$1",symbols:[/[\n]/,"_","paramPart"]},{name:"paramStatement$ebnf$1",symbols:["paramStatement$ebnf$1","paramStatement$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"paramStatement",symbols:[PARAM_DIRECTIVE5,"__",{literal:"{"},"_","paramStatement$ebnf$1",/[\n]/,"_",{literal:"}"}],postprocess:function(e){const t=[];return e[4].forEach((e=>{t.push(e[2])})),t}},{name:"paramPart$ebnf$1",symbols:[/[a-zA-Z0-9]/]},{name:"paramPart$ebnf$1",symbols:["paramPart$ebnf$1",/[a-zA-Z0-9]/],postprocess:e=>e[0].concat([e[1]])},{name:"paramPart$ebnf$2",symbols:[/[^ \n]/]},{name:"paramPart$ebnf$2",symbols:["paramPart$ebnf$2",/[^ \n]/],postprocess:e=>e[0].concat([e[1]])},{name:"paramPart",symbols:["paramPart$ebnf$1","__","paramPart$ebnf$2"],postprocess:function(e){const t=e[0].map((e=>tv(e))).join("");let A=e[2];return"string"!=typeof A&&(A=A.map((e=>tv(e))).join("")),{type:"addParam",key:t,value:A}}},{name:"configStatement$ebnf$1",symbols:[/[^\)]/]},{name:"configStatement$ebnf$1",symbols:["configStatement$ebnf$1",/[^\)]/],postprocess:e=>e[0].concat([e[1]])},{name:"configStatement",symbols:[CONFIG_DIRECTIVE6,{literal:"("},"configStatement$ebnf$1",{literal:")"}],postprocess:handleConfigOpenCloseStatement5},{name:"configOpenCloseStatement$ebnf$1",symbols:[/[^\)]/]},{name:"configOpenCloseStatement$ebnf$1",symbols:["configOpenCloseStatement$ebnf$1",/[^\)]/],postprocess:e=>e[0].concat([e[1]])},{name:"configOpenCloseStatement",symbols:[CONFIG_DIRECTIVE6,L_PAREN5,"configOpenCloseStatement$ebnf$1",R_PAREN5],postprocess:handleConfigOpenCloseStatement5},{name:"comment",symbols:[COMMENT_LINE5],postprocess:e=>null},{name:"start",symbols:["__","start"],postprocess:e=>e[1]},{name:"start",symbols:[lexer5.has("DOT_DIAGRAM")?{type:"DOT_DIAGRAM"}:DOT_DIAGRAM,"document"],postprocess:function(e){return e[1]}},{name:"document",symbols:[]},{name:"document",symbols:["document","statementWrap"],postprocess:e=>{let t=e[0];return e[1]&&(t=e[0].concat(e[1])),t}},{name:"statementWrap$ebnf$1",symbols:[]},{name:"statementWrap$ebnf$1",symbols:["statementWrap$ebnf$1",lexer5.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"statementWrap",symbols:["statementWrap$ebnf$1","statement"],postprocess:e=>e[1]},{name:"statementWrap$ebnf$2",symbols:[lexer5.has("WS")?{type:"WS"}:WS],postprocess:id5},{name:"statementWrap$ebnf$2",symbols:[],postprocess:()=>null},{name:"statementWrap",symbols:["statementWrap$ebnf$2","dotCommentSegment",lexer5.has("NL")?{type:"NL"}:NL],postprocess:null},{name:"statementWrap$ebnf$3",symbols:[lexer5.has("WS")?{type:"WS"}:WS],postprocess:id5},{name:"statementWrap$ebnf$3",symbols:[],postprocess:()=>null},{name:"statementWrap",symbols:["statementWrap$ebnf$3",lexer5.has("NL")?{type:"NL"}:NL],postprocess:null},{name:"statement$subexpression$1",symbols:[{literal:"graph"}]},{name:"statement$subexpression$1",symbols:[{literal:"digraph"}]},{name:"statement$ebnf$1",symbols:[lexer5.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT],postprocess:id5},{name:"statement$ebnf$1",symbols:[],postprocess:()=>null},{name:"statement$ebnf$2",symbols:[lexer5.has("NL")?{type:"NL"}:NL],postprocess:id5},{name:"statement$ebnf$2",symbols:[],postprocess:()=>null},{name:"statement",symbols:["statement$subexpression$1","statement$ebnf$1",lexer5.has("L_BRACKET")?{type:"L_BRACKET"}:L_BRACKET,"statement$ebnf$2","stmtList",lexer5.has("R_BRACKET")?{type:"R_BRACKET"}:R_BRACKET],postprocess:function(e){const t=e[4],A=e[1]?tv(e[1]):"";return{type:"addGraph",graph:{type:tv(e[0][0]),id:A,children:t}}}},{name:"statement",symbols:["paramStatement",lexer5.has("NL")?{type:"NL"}:NL]},{name:"statement",symbols:["configOpenCloseStatement",lexer5.has("NL")?{type:"NL"}:NL]},{name:"statement",symbols:["comment",lexer5.has("NL")?{type:"NL"}:NL]},{name:"dotCommentSegment",symbols:[lexer5.has("DOT_SLASH_COMMENT")?{type:"DOT_SLASH_COMMENT"}:DOT_SLASH_COMMENT],postprocess:rNull},{name:"dotCommentSegment$ebnf$1",symbols:[]},{name:"dotCommentSegment$ebnf$1",symbols:["dotCommentSegment$ebnf$1",lexer5.has("ANY_COMMENT_TEXT")?{type:"ANY_COMMENT_TEXT"}:ANY_COMMENT_TEXT],postprocess:e=>e[0].concat([e[1]])},{name:"dotCommentSegment",symbols:[lexer5.has("DOT_BLOCK_COMMENT_START")?{type:"DOT_BLOCK_COMMENT_START"}:DOT_BLOCK_COMMENT_START,"dotCommentSegment$ebnf$1",lexer5.has("DOT_BLOCK_COMMENT_END")?{type:"DOT_BLOCK_COMMENT_END"}:DOT_BLOCK_COMMENT_END],postprocess:rNull},{name:"stmtList$subexpression$1",symbols:[lexer5.has("SEMICOLON")?{type:"SEMICOLON"}:SEMICOLON]},{name:"stmtList$subexpression$1",symbols:[lexer5.has("NL")?{type:"NL"}:NL]},{name:"stmtList$ebnf$1",symbols:["stmtList"],postprocess:id5},{name:"stmtList$ebnf$1",symbols:[],postprocess:()=>null},{name:"stmtList",symbols:["dotStmt","stmtList$subexpression$1","_","stmtList$ebnf$1"],postprocess:function(e){const t=e[3]||[],A=e[0][0];return A?[A,...t]:t}},{name:"dotStmt",symbols:["attrStmt"]},{name:"dotStmt",symbols:["nodeStmt"]},{name:"dotStmt",symbols:["edgeStmt"]},{name:"dotStmt",symbols:["singleAttrStmt"]},{name:"dotStmt",symbols:["subgraph"]},{name:"dotStmt",symbols:["dotCommentSegment"],postprocess:null},{name:"dotStmt",symbols:["comment"],postprocess:null},{name:"attrStmt$subexpression$1",symbols:[{literal:"graph"}]},{name:"attrStmt$subexpression$1",symbols:[{literal:"node"}]},{name:"attrStmt$subexpression$1",symbols:[{literal:"edge"}]},{name:"attrStmt",symbols:["attrStmt$subexpression$1","__","attrList"],postprocess:function(e){return{type:"attr_stmt",target:tv(e[0][0]),attr_list:e[2]}}},{name:"singleAttrStmt$subexpression$1",symbols:[lexer5.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{name:"singleAttrStmt$subexpression$1",symbols:[lexer5.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD]},{name:"singleAttrStmt$ebnf$1$subexpression$1",symbols:[lexer5.has("SEMICOLON")?{type:"SEMICOLON"}:SEMICOLON]},{name:"singleAttrStmt$ebnf$1$subexpression$1",symbols:[lexer5.has("COMMA")?{type:"COMMA"}:COMMA]},{name:"singleAttrStmt$ebnf$1",symbols:["singleAttrStmt$ebnf$1$subexpression$1"],postprocess:id5},{name:"singleAttrStmt$ebnf$1",symbols:[],postprocess:()=>null},{name:"singleAttrStmt",symbols:[lexer5.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,lexer5.has("EQ")?{type:"EQ"}:EQ,"singleAttrStmt$subexpression$1","singleAttrStmt$ebnf$1"],postprocess:function(e){const t=tv(e[0]),A=e[2][0];return{type:"attr",id:t,eq:"QUOTED_WORD"===A.type?getQuotedWord(A):tv(A)}}},{name:"nodeStmt$ebnf$1",symbols:["attrList"],postprocess:id5},{name:"nodeStmt$ebnf$1",symbols:[],postprocess:()=>null},{name:"nodeStmt",symbols:["nodeId","nodeStmt$ebnf$1"],postprocess:function(e){const t={type:"node_stmt",nodeId:e[0]};return e[1]&&(t.attr_list=e[1]),t}},{name:"nodeStmt",symbols:["nodeId",lexer5.has("L_SQ_BRACKET")?{type:"L_SQ_BRACKET"}:L_SQ_BRACKET,lexer5.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD,lexer5.has("R_SQ_BRACKET")?{type:"R_SQ_BRACKET"}:R_SQ_BRACKET],postprocess:function(e){e[0];const t=getQuotedWord(e[2]);return{type:"node_stmt",nodeId:e[0],attrs:{label:t}}}},{name:"nodeStmt",symbols:["nodeId"],postprocess:function(e){e[0];return{type:"node_stmt",nodeId:e[0]}}},{name:"edgeStmt$ebnf$1",symbols:["attrList"],postprocess:id5},{name:"edgeStmt$ebnf$1",symbols:[],postprocess:()=>null},{name:"edgeStmt",symbols:["nodeId","edgeRHS","edgeStmt$ebnf$1"],postprocess:function(e){const t={type:"edge_stmt",edge_list:[e[0],...e[1]]};return e[2]&&(t.attr_list=e[2]),t}},{name:"edgeRHS$ebnf$1",symbols:[lexer5.has("WS")?{type:"WS"}:WS],postprocess:id5},{name:"edgeRHS$ebnf$1",symbols:[],postprocess:()=>null},{name:"edgeRHS$ebnf$2",symbols:["edgeRHS"],postprocess:id5},{name:"edgeRHS$ebnf$2",symbols:[],postprocess:()=>null},{name:"edgeRHS",symbols:["edgeop","edgeRHS$ebnf$1","nodeId","edgeRHS$ebnf$2"],postprocess:function(e){const t=e[3]||[];return[e[2],...t]}},{name:"edgeop",symbols:[{literal:"->"}]},{name:"edgeop",symbols:[{literal:"--"}]},{name:"attrList$ebnf$1",symbols:["attrList"],postprocess:id5},{name:"attrList$ebnf$1",symbols:[],postprocess:()=>null},{name:"attrList",symbols:[lexer5.has("L_SQ_BRACKET")?{type:"L_SQ_BRACKET"}:L_SQ_BRACKET,"attrItems",lexer5.has("R_SQ_BRACKET")?{type:"R_SQ_BRACKET"}:R_SQ_BRACKET,"attrList$ebnf$1"],postprocess:function(e){e[3]&&e[3][0],e[1];return e[1]}},{name:"attrItems$subexpression$1",symbols:[lexer5.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{name:"attrItems$subexpression$1",symbols:[lexer5.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD]},{name:"attrItems$ebnf$1$subexpression$1",symbols:[lexer5.has("SEMICOLON")?{type:"SEMICOLON"}:SEMICOLON]},{name:"attrItems$ebnf$1$subexpression$1",symbols:[lexer5.has("COMMA")?{type:"COMMA"}:COMMA]},{name:"attrItems$ebnf$1",symbols:["attrItems$ebnf$1$subexpression$1"],postprocess:id5},{name:"attrItems$ebnf$1",symbols:[],postprocess:()=>null},{name:"attrItems$ebnf$2",symbols:["attrItems"],postprocess:id5},{name:"attrItems$ebnf$2",symbols:[],postprocess:()=>null},{name:"attrItems",symbols:[lexer5.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,lexer5.has("EQ")?{type:"EQ"}:EQ,"attrItems$subexpression$1","attrItems$ebnf$1","attrItems$ebnf$2"],postprocess:function(e){const t=e[4]?e[4]:[],A=tv(e[0]),n=e[2][0];return[{type:"attr",id:A,eq:"QUOTED_WORD"===n.type?getQuotedWord(n):tv(n)},...t]}},{name:"nodeId",symbols:[lexer5.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD],postprocess:function(e){return{type:"node_id",id:getQuotedWord(e[0]).trim()}}},{name:"nodeId",symbols:[lexer5.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT],postprocess:function(e){return{type:"node_id",id:tv(e[0]).trim()}}},{name:"subgraph$ebnf$1",symbols:[lexer5.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT],postprocess:id5},{name:"subgraph$ebnf$1",symbols:[],postprocess:()=>null},{name:"subgraph",symbols:[lexer5.has("SUBGRAPH")?{type:"SUBGRAPH"}:SUBGRAPH,"subgraph$ebnf$1",lexer5.has("L_BRACKET")?{type:"L_BRACKET"}:L_BRACKET,"_","stmtList","_",lexer5.has("R_BRACKET")?{type:"R_BRACKET"}:R_BRACKET],postprocess:function(e){const t={type:"subgraph",children:e[4]};return e[1]&&(t.id=tv(e[1]).trim()),t}}],ParserStart:"start",ParserOptions:{skipUnmatchSymbols:[lexer5.has("WS")?{type:"WS"}:WS]}},dotDiagram_default=grammar5,parse5=genParserWithRules(dotDiagram_default,{dedupeAmbigousResults:!0,postProcess:e=>(db_default4.apply(e),e)}),dotDiagram={pattern:/^\s*dotDiagram/,parser:{parse:e=>(parse5(e),db_default4.getDiagramIR())},artist:artist_default5,configKey:"dot",clear(){db_default4.clear()}},MMTree=class e{constructor(){this.nodes=new Map}static fromRootItem(t){const A=new e;return A.root=A.addItemToNode({...t,parent:null}),A.current=A.root,A}add(e){let t=this.current;for(;t&&Math.abs(t.depth)>=Math.abs(e.depth)&&t.id!==this.root.id&&t.parent;)t=this.nodes.get(t.parent);if(t||(t=this.root),t===this.root||Math.abs(t.depth)<Math.abs(e.depth)){const A=this.addItemToNode(e);this.addChild(t,A),this.current=A}}getNode(e){return this.nodes.get(e)}addChild(e,t){e.children.push(t.id),t.parent=e.id}addItemToNode(e){return e.children||(e.children=[]),this.nodes.set(e.id,e),e}serialize(){const e={root:this.root.id,nodes:{[this.root.id]:this.root}};return this.walkTree(this.root,(t=>{e.nodes[t.id]=t})),e}walkTree(e,t){t(e),e.children.forEach((e=>{const A=this.nodes.get(e);A&&this.walkTree(A,t)}))}},MindmapDb=class extends BaseDb{constructor(){super(...arguments),this.items=[],this.trees=[],this.idCounter=makeIdCounter(),this.treeMap=new WeakMap}makeId(){return this.idCounter.next()}getDiagramIR(){return{...this.getBaseDiagramIR(),trees:this.trees.map((e=>{const t=e.serialize();return this.treeMap.set(t,e),t}))}}addItem(e){this.currentTree&&1!==e.depth?this.currentTree.add(e):(this.currentTree=MMTree.fromRootItem(e),this.trees.push(this.currentTree))}apply(e){if(e){if(Array.isArray(e))return e.map((e=>this.apply(e)));switch(e.type){case"addItem":{const{type:t,...A}=e;this.addItem({...A,id:this.makeId(),isReverse:Boolean(e.isReverse),children:[]});break}case"addParam":this.configParams.push(e);break;case"setTitle":this.title=e.text;break;case"overrideConfig":this.addOverrideConfig(e)}}}getTreeByData(e){return this.treeMap.get(e)}clear(){super.clear(),this.idCounter.reset(),this.trees=[],this.items=[],this.currentTree=null}},db6=new MindmapDb,db_default5=db6;function getColorsByPrimary(e,t=!1){const A=(0,import_tinycolor2.default)(e),n=A.toHsl();let l;l=A.clone().brighten(15);return{nodeBgColor:(0,import_tinycolor2.default)({h:n.h,s:20,l:90}).toHexString(),l1NodeBgColor:e,l2NodeBgColor:l.toHexString()}}var DEFAULT_COLORS=getColorsByPrimary(PALETTE.orange),defaultConfig6={diagramPadding:15,layoutDirection:"LR",useMaxWidth:!1,borderRadius:4,nodeBgColor:DEFAULT_COLORS.nodeBgColor,nodePadding:10,nodeFontWeight:"normal",textColor:PALETTE.normalDark,edgeColor:PALETTE.normalDark,fontFamily:DEFAULT_FONT_FAMILY,maxFontSize:18,minFontSize:12,levelDistance:40,l1NodeBgColor:DEFAULT_COLORS.l1NodeBgColor,l1NodeTextColor:PALETTE.normalDark,l2NodeBgColor:DEFAULT_COLORS.l2NodeBgColor,l2NodeTextColor:PALETTE.normalDark},MINDMAP_PARAM_DIRECTIVE_RULES={...getParamRulesFromConfig(defaultConfig6),useMaxWidth:{valueType:"boolean"},diagramPadding:{valueType:"size"},layoutDirection:{valueType:"layoutDirection"},borderRadius:{valueType:"size"},nodeBgColor:{valueType:"color"},nodePadding:{valueType:"size"},textColor:{valueType:"color"},edgeColor:{valueType:"color"},maxFontSize:{valueType:"size"},minFontSize:{valueType:"size"},fontFamily:{valueType:"string"},levelDistance:{valueType:"size"},l1NodeBgColor:{valueType:"color"},l1NodeTextColor:{valueType:"color"},l2NodeBgColor:{valueType:"color"},l2NodeTextColor:{valueType:"color"}},configKey6="mindmap",configurator6=makeConfigurator({defaultConfig:defaultConfig6,configKey:configKey6,getConfigFromParamDirectives:e=>interpreteConfigs(MINDMAP_PARAM_DIRECTIVE_RULES,e),getConfigFromTheme(e){const{nodeBgColor:t,l1NodeBgColor:A,l2NodeBgColor:n}=getColorsByPrimary(e.primaryColor,e.isDark);return{nodeBgColor:t,textColor:(0,import_tinycolor2.default)(t).isLight()!==(0,import_tinycolor2.default)(e.textColor).isLight()?e.textColor:e.canvasBackground,edgeColor:e.primaryLineColor,l1NodeBgColor:A,l1NodeTextColor:e.textColor,l2NodeBgColor:n,l2NodeTextColor:e.textColor}}}),getConf6=configurator6.getConfig,conf5,mmDraw,mmArtist={draw(e,t,A){conf5=Object.assign(getConf6(e),t||{}),mmDraw=new MMDraw(e),isDev&&(window.mmDraw=mmDraw);const n={type:"group",attrs:{},children:[]};mmDraw.drawTo(n);const l=mmDraw.dagreWrapper.getGraphBounds(),{title:r}=e;let a,o;if(r){const e=makeTitleMark(r,{fontSize:conf5.maxFontSize,fontFamily:conf5.fontFamily},{fill:conf5.textColor});a=e.titleSize,o=e.mark,o.class="mindmap__title",n.children.push(o),a.height+=conf5.maxFontSize}const{width:s,height:i}=adjustRootMarkBounds({rootMark:n,gBounds:l,padX:conf5.diagramPadding,padY:conf5.diagramPadding,useMaxWidth:conf5.useMaxWidth,containerSize:null==A?void 0:A.containerSize,titleSize:a,titleMark:o});return{width:s,height:i,mark:n}}},MMDraw=class{constructor(e){this.ir=e,this.trees=e.trees.map((e=>db_default5.getTreeByData(e))),this.g=createLayoutGraph({multigraph:!0,directed:!0,compound:!0}).setGraph({rankdir:conf5.layoutDirection,nodesep:30,edgesep:30,ranksep:conf5.levelDistance}).setDefaultEdgeLabel((function(){return{}})),this.dagreWrapper=new DagreWrapper(this.g)}drawTo(e){this.trees.map((t=>this.drawTree(e,t))),this.dagreWrapper.doLayout(),this.dagreWrapper.callNodeOnLayout(),this.drawEdgesTo(e)}drawTree(e,t){t.walkTree(t.root,(A=>{this.drawNode(e,t,A)}))}getNodeStyleOfLevel(e){return{bgColor:conf5[`l${e}NodeBgColor`]||conf5.nodeBgColor,textColor:conf5[`l${e}NodeTextColor`]||conf5.textColor}}drawNode(e,t,A){const n=Math.max(conf5.minFontSize,conf5.maxFontSize-2*(A.depth-1)),l=getFontConfig4(conf5,{fontSize:n,fontWeight:conf5.nodeFontWeight}),r=calculateTextDimensions(A.label,l),a=makeEmptyGroup();a.class="mindmap__node";const o=Math.ceil(.75*n),s=r.width+2*o,i=r.height+2*o,u=this.getNodeStyleOfLevel(A.depth),c=makeMark("rect",{x:-s/2,y:-i/2,width:s,height:i,fill:u.bgColor,radius:conf5.borderRadius}),h=makeMark("text",{text:A.label,fill:u.textColor,textBaseline:"middle",textAlign:"center",...l});a.children.push(c,h),this.g.setNode(A.id,{width:s,height:i,onLayout(e){positionGroupContents(a,e)}}),A.children.forEach((e=>{const n=t.getNode(e);n.isReverse?this.g.setEdge(e,A.id,{label:`${n.label}-${A.label}`,isReverse:!0}):this.g.setEdge(A.id,e,{label:`${A.label}-${A.label}`})})),e.children.push(a)}drawEdgesTo(e){const t=makeEmptyGroup(),A=this.g;this.g.edges().forEach((e=>{const n=A.edge(e);if(!n.points)return;const l=isGraphVertical(A),r=A.node(e.v),a=A.node(e.w);let o,s;const{isReverse:i}=n;l?(o=getPositionOfRect(TRANSFORM_GRAPH.graphNodeToRectStart(i?a:r),PositionH.CENTER|(i?PositionV.TOP:PositionV.BOTTOM)),s=getPositionOfRect(TRANSFORM_GRAPH.graphNodeToRectStart(i?r:a),PositionH.CENTER|(i?PositionV.BOTTOM:PositionV.TOP))):(o=getPositionOfRect(TRANSFORM_GRAPH.graphNodeToRectStart(i?a:r),(i?PositionH.LEFT:PositionH.RIGHT)|PositionV.CENTER),s=getPositionOfRect(TRANSFORM_GRAPH.graphNodeToRectStart(i?r:a),(i?PositionH.RIGHT:PositionH.LEFT)|PositionV.CENTER));const u=(i?A.predecessors(e.w):A.successors(e.v)).reduce(((e,t)=>{const n=TRANSFORM_GRAPH.graphNodeToRectStart(A.node(t));n.x<e.left&&(e.left=n.x);const l=n.x+n.width;return l>e.right&&(e.right=l),e.top=Math.min(n.y,e.top),e.bottom=Math.max(n.y+n.height,e.bottom),e}),makeBounds());let c;if(l){const e=i?(o.y+u.bottom)/2:(o.y+u.top)/2;c=[o,{x:o.x,y:e},{x:s.x,y:e},s]}else{const e=i?(o.x+u.right)/2:(o.x+u.left)/2;c=[o,{x:e,y:o.y},{x:e,y:s.y},s]}const h=makeMark("path",{path:getPointsLinearPath(c),stroke:conf5.edgeColor,lineJoin:"round"});t.children.push(h)})),e.children.push(t)}};function getFontConfig4(e,t){return{fontFamily:e.fontFamily,...t}}var artist_default6=mmArtist,moo6=__toESM(require_moo());function id6(e){return e[0]}var COLOR6=/#[a-zA-Z0-9]+/,PARAM_DIRECTIVE6=/@param/,CONFIG_DIRECTIVE7=/@config/,L_PAREN6=/\(/,R_PAREN6=/\)/;function getTokenValue6(e){return e&&"value"in e?e.value:e}function handleConfigOpenCloseStatement6(e){const t=e[2].map((e=>e.type?getTokenValue6(e):e)).join("");try{return{type:"overrideConfig",value:JSON.parse(t)}}catch(e){return{type:"overrideConfig",error:e}}}var COMMENT_LINE6=/%%.*/,COMMON_TOKEN_RULES3={VALID_TEXT:{match:VALID_TEXT_REGEXP,fallback:!0}},lexer6=moo6.states({main:{NL:MOO_NEWLINE,WS:{match:/ +/,lineBreaks:!1},ASTERISKS:/\*+/,PLUS:/\++/,MINUS:/\-+/,SEMICOLON:/;/,COLON:/:/,PARAM_DIRECTIVE:PARAM_DIRECTIVE6,...configLexerMainState,L_PAREN:L_PAREN_REGEXP,R_PAREN:R_PAREN_REGEXP,COMMENT_LINE:COMMENT_LINE_REGEXP,...COMMON_TOKEN_RULES3},configStatement:{...configLexerconfigStatementState,...COMMON_TOKEN_RULES3}}),yy5;function setYY5(e){yy5=e}var grammar6={Lexer:lexer6,ParserRules:[{name:"_$ebnf$1",symbols:[]},{name:"_$ebnf$1",symbols:["_$ebnf$1","wschar"],postprocess:e=>e[0].concat([e[1]])},{name:"_",symbols:["_$ebnf$1"],postprocess:function(e){return null}},{name:"__$ebnf$1",symbols:["wschar"]},{name:"__$ebnf$1",symbols:["__$ebnf$1","wschar"],postprocess:e=>e[0].concat([e[1]])},{name:"__",symbols:["__$ebnf$1"],postprocess:function(e){return null}},{name:"wschar",symbols:[/[ \t\n\v\f\r]/],postprocess:id6},{name:"color",symbols:[COLOR6],postprocess:e=>tv(e[0])},{name:"paramStatement",symbols:[PARAM_DIRECTIVE6,"__","paramPart"],postprocess:function(e){return e[2]}},{name:"paramStatement$ebnf$1",symbols:[]},{name:"paramStatement$ebnf$1$subexpression$1",symbols:[/[\n]/,"_","paramPart"]},{name:"paramStatement$ebnf$1",symbols:["paramStatement$ebnf$1","paramStatement$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"paramStatement",symbols:[PARAM_DIRECTIVE6,"__",{literal:"{"},"_","paramStatement$ebnf$1",/[\n]/,"_",{literal:"}"}],postprocess:function(e){const t=[];return e[4].forEach((e=>{t.push(e[2])})),t}},{name:"paramPart$ebnf$1",symbols:[/[a-zA-Z0-9]/]},{name:"paramPart$ebnf$1",symbols:["paramPart$ebnf$1",/[a-zA-Z0-9]/],postprocess:e=>e[0].concat([e[1]])},{name:"paramPart$ebnf$2",symbols:[/[^ \n]/]},{name:"paramPart$ebnf$2",symbols:["paramPart$ebnf$2",/[^ \n]/],postprocess:e=>e[0].concat([e[1]])},{name:"paramPart",symbols:["paramPart$ebnf$1","__","paramPart$ebnf$2"],postprocess:function(e){const t=e[0].map((e=>tv(e))).join("");let A=e[2];return"string"!=typeof A&&(A=A.map((e=>tv(e))).join("")),{type:"addParam",key:t,value:A}}},{name:"configStatement$ebnf$1",symbols:[/[^\)]/]},{name:"configStatement$ebnf$1",symbols:["configStatement$ebnf$1",/[^\)]/],postprocess:e=>e[0].concat([e[1]])},{name:"configStatement",symbols:[CONFIG_DIRECTIVE7,{literal:"("},"configStatement$ebnf$1",{literal:")"}],postprocess:handleConfigOpenCloseStatement6},{name:"configOpenCloseStatement$ebnf$1",symbols:[/[^\)]/]},{name:"configOpenCloseStatement$ebnf$1",symbols:["configOpenCloseStatement$ebnf$1",/[^\)]/],postprocess:e=>e[0].concat([e[1]])},{name:"configOpenCloseStatement",symbols:[CONFIG_DIRECTIVE7,L_PAREN6,"configOpenCloseStatement$ebnf$1",R_PAREN6],postprocess:handleConfigOpenCloseStatement6},{name:"comment",symbols:[COMMENT_LINE6],postprocess:e=>null},{name:"start",symbols:["__","start"]},{name:"start",symbols:[{literal:"mindmap"},"document"]},{name:"document",symbols:[]},{name:"document",symbols:["document","line"],postprocess:e=>e[0].concat(e[1])},{name:"line$ebnf$1",symbols:[]},{name:"line$ebnf$1",symbols:["line$ebnf$1",lexer6.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"line",symbols:["line$ebnf$1","statement"]},{name:"line$ebnf$2",symbols:[]},{name:"line$ebnf$2",symbols:["line$ebnf$2",lexer6.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"line",symbols:["line$ebnf$2",lexer6.has("NL")?{type:"NL"}:NL]},{name:"statement",symbols:["levelNotation",lexer6.has("WS")?{type:"WS"}:WS,"words",lexer6.has("NL")?{type:"NL"}:NL],postprocess:function(e){const t=e[2],A=e[0];return{type:"addItem",label:t,depth:e[0].depth,isReverse:A.isReverse}}},{name:"statement$ebnf$1",symbols:[lexer6.has("WS")?{type:"WS"}:WS],postprocess:id6},{name:"statement$ebnf$1",symbols:[],postprocess:()=>null},{name:"statement",symbols:["levelNotation",lexer6.has("WS")?{type:"WS"}:WS,lexer6.has("COLON")?{type:"COLON"}:COLON,"multilineText",lexer6.has("SEMICOLON")?{type:"SEMICOLON"}:SEMICOLON,"statement$ebnf$1",lexer6.has("NL")?{type:"NL"}:NL],postprocess:function(e){const t=e[3],A=e[0];return{type:"addItem",label:t,depth:A.depth,isReverse:A.isReverse}}},{name:"statement",symbols:["paramStatement","_",lexer6.has("NL")?{type:"NL"}:NL]},{name:"statement",symbols:["configOpenCloseStatement","_",lexer6.has("NL")?{type:"NL"}:NL]},{name:"statement",symbols:[{literal:"title"},lexer6.has("COLON")?{type:"COLON"}:COLON,"words",lexer6.has("NL")?{type:"NL"}:NL],postprocess:e=>({type:"setTitle",text:e[2].trim()})},{name:"statement",symbols:["comment","_",lexer6.has("NL")?{type:"NL"}:NL]},{name:"levelNotation$subexpression$1",symbols:[lexer6.has("ASTERISKS")?{type:"ASTERISKS"}:ASTERISKS]},{name:"levelNotation$subexpression$1",symbols:[lexer6.has("PLUS")?{type:"PLUS"}:PLUS]},{name:"levelNotation",symbols:["levelNotation$subexpression$1"],postprocess:function(e){const t=tv(e[0][0]);return{depth:t.length,text:t}}},{name:"levelNotation",symbols:[lexer6.has("MINUS")?{type:"MINUS"}:MINUS],postprocess:function(e){const t=tv(e[0]);return{depth:t.length,text:t,isReverse:!0}}},{name:"textSegment",symbols:[lexer6.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{name:"textSegment",symbols:[lexer6.has("ASTERISKS")?{type:"ASTERISKS"}:ASTERISKS]},{name:"textSegment",symbols:[lexer6.has("PLUS")?{type:"PLUS"}:PLUS]},{name:"textSegment",symbols:[lexer6.has("MINUS")?{type:"MINUS"}:MINUS]},{name:"textSegment",symbols:[lexer6.has("WS")?{type:"WS"}:WS],postprocess:function(e){const t=e[0];return"string"==typeof t?t:tv(t)}},{name:"words$ebnf$1",symbols:["textSegment"]},{name:"words$ebnf$1",symbols:["words$ebnf$1","textSegment"],postprocess:e=>e[0].concat([e[1]])},{name:"words",symbols:["words$ebnf$1"],postprocess:function(e){return e[0].map((e=>e[0])).join("")}},{name:"multilineText$ebnf$1",symbols:[]},{name:"multilineText$ebnf$1$subexpression$1",symbols:["textSegment"]},{name:"multilineText$ebnf$1$subexpression$1",symbols:[lexer6.has("NL")?{type:"NL"}:NL]},{name:"multilineText$ebnf$1",symbols:["multilineText$ebnf$1","multilineText$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"multilineText",symbols:["multilineText$ebnf$1"],postprocess:function(e){return e[0].map((e=>e.map((e=>"string"==typeof e?e:tv(e))))).join("")}}],ParserStart:"start",ParserOptions:{skipUnmatchSymbols:[]}},mindmap_default=grammar6;setYY5(db_default5);var parse6=genParserWithRules(mindmap_default,{postProcess:e=>(db_default5.apply(e),e)}),mindmap={pattern:/^\s*mindmap/,parser:{parse:e=>(parse6(e),db_default5.getDiagramIR())},artist:artist_default6,configKey:configKey6,clear(){db_default5.clear()}},import_dayjs=__toESM(require_dayjs_min()),t0=new Date,t1=new Date;function newInterval(e,t,A,n){function l(t){return e(t=0===arguments.length?new Date:new Date(+t)),t}return l.floor=function(t){return e(t=new Date(+t)),t},l.ceil=function(A){return e(A=new Date(A-1)),t(A,1),e(A),A},l.round=function(e){var t=l(e),A=l.ceil(e);return e-t<A-e?t:A},l.offset=function(e,A){return t(e=new Date(+e),null==A?1:Math.floor(A)),e},l.range=function(A,n,r){var a,o=[];if(A=l.ceil(A),r=null==r?1:Math.floor(r),!(A<n&&r>0))return o;do{o.push(a=new Date(+A)),t(A,r),e(A)}while(a<A&&A<n);return o},l.filter=function(A){return newInterval((function(t){if(t>=t)for(;e(t),!A(t);)t.setTime(t-1)}),(function(e,n){if(e>=e)if(n<0)for(;++n<=0;)for(;t(e,-1),!A(e););else for(;--n>=0;)for(;t(e,1),!A(e););}))},A&&(l.count=function(t,n){return t0.setTime(+t),t1.setTime(+n),e(t0),e(t1),Math.floor(A(t0,t1))},l.every=function(e){return e=Math.floor(e),isFinite(e)&&e>0?e>1?l.filter(n?function(t){return n(t)%e==0}:function(t){return l.count(0,t)%e==0}):l:null}),l}var millisecond=newInterval((function(){}),(function(e,t){e.setTime(+e+t)}),(function(e,t){return t-e}));millisecond.every=function(e){return e=Math.floor(e),isFinite(e)&&e>0?e>1?newInterval((function(t){t.setTime(Math.floor(t/e)*e)}),(function(t,A){t.setTime(+t+A*e)}),(function(t,A){return(A-t)/e})):millisecond:null};var millisecond_default=millisecond,milliseconds=millisecond.range,durationSecond=1e3,durationMinute=60*durationSecond,durationHour=60*durationMinute,durationDay=24*durationHour,durationWeek=7*durationDay,durationMonth=30*durationDay,durationYear=365*durationDay,second=newInterval((function(e){e.setTime(e-e.getMilliseconds())}),(function(e,t){e.setTime(+e+t*durationSecond)}),(function(e,t){return(t-e)/durationSecond}),(function(e){return e.getUTCSeconds()})),second_default=second,seconds=second.range,minute=newInterval((function(e){e.setTime(e-e.getMilliseconds()-e.getSeconds()*durationSecond)}),(function(e,t){e.setTime(+e+t*durationMinute)}),(function(e,t){return(t-e)/durationMinute}),(function(e){return e.getMinutes()})),minute_default=minute,minutes=minute.range,hour=newInterval((function(e){e.setTime(e-e.getMilliseconds()-e.getSeconds()*durationSecond-e.getMinutes()*durationMinute)}),(function(e,t){e.setTime(+e+t*durationHour)}),(function(e,t){return(t-e)/durationHour}),(function(e){return e.getHours()})),hour_default=hour,hours=hour.range,day=newInterval((e=>e.setHours(0,0,0,0)),((e,t)=>e.setDate(e.getDate()+t)),((e,t)=>(t-e-(t.getTimezoneOffset()-e.getTimezoneOffset())*durationMinute)/durationDay),(e=>e.getDate()-1)),day_default=day,days=day.range;function weekday(e){return newInterval((function(t){t.setDate(t.getDate()-(t.getDay()+7-e)%7),t.setHours(0,0,0,0)}),(function(e,t){e.setDate(e.getDate()+7*t)}),(function(e,t){return(t-e-(t.getTimezoneOffset()-e.getTimezoneOffset())*durationMinute)/durationWeek}))}var sunday=weekday(0),monday=weekday(1),tuesday=weekday(2),wednesday=weekday(3),thursday=weekday(4),friday=weekday(5),saturday=weekday(6),sundays=sunday.range,mondays=monday.range,tuesdays=tuesday.range,wednesdays=wednesday.range,thursdays=thursday.range,fridays=friday.range,saturdays=saturday.range,month=newInterval((function(e){e.setDate(1),e.setHours(0,0,0,0)}),(function(e,t){e.setMonth(e.getMonth()+t)}),(function(e,t){return t.getMonth()-e.getMonth()+12*(t.getFullYear()-e.getFullYear())}),(function(e){return e.getMonth()})),month_default=month,months=month.range,year=newInterval((function(e){e.setMonth(0,1),e.setHours(0,0,0,0)}),(function(e,t){e.setFullYear(e.getFullYear()+t)}),(function(e,t){return t.getFullYear()-e.getFullYear()}),(function(e){return e.getFullYear()}));year.every=function(e){return isFinite(e=Math.floor(e))&&e>0?newInterval((function(t){t.setFullYear(Math.floor(t.getFullYear()/e)*e),t.setMonth(0,1),t.setHours(0,0,0,0)}),(function(t,A){t.setFullYear(t.getFullYear()+A*e)})):null};var year_default=year,years=year.range,utcMinute=newInterval((function(e){e.setUTCSeconds(0,0)}),(function(e,t){e.setTime(+e+t*durationMinute)}),(function(e,t){return(t-e)/durationMinute}),(function(e){return e.getUTCMinutes()})),utcMinute_default=utcMinute,utcMinutes=utcMinute.range,utcHour=newInterval((function(e){e.setUTCMinutes(0,0,0)}),(function(e,t){e.setTime(+e+t*durationHour)}),(function(e,t){return(t-e)/durationHour}),(function(e){return e.getUTCHours()})),utcHour_default=utcHour,utcHours=utcHour.range,utcDay=newInterval((function(e){e.setUTCHours(0,0,0,0)}),(function(e,t){e.setUTCDate(e.getUTCDate()+t)}),(function(e,t){return(t-e)/durationDay}),(function(e){return e.getUTCDate()-1})),utcDay_default=utcDay,utcDays=utcDay.range;function utcWeekday(e){return newInterval((function(t){t.setUTCDate(t.getUTCDate()-(t.getUTCDay()+7-e)%7),t.setUTCHours(0,0,0,0)}),(function(e,t){e.setUTCDate(e.getUTCDate()+7*t)}),(function(e,t){return(t-e)/durationWeek}))}var utcSunday=utcWeekday(0),utcMonday=utcWeekday(1),utcTuesday=utcWeekday(2),utcWednesday=utcWeekday(3),utcThursday=utcWeekday(4),utcFriday=utcWeekday(5),utcSaturday=utcWeekday(6),utcSundays=utcSunday.range,utcMondays=utcMonday.range,utcTuesdays=utcTuesday.range,utcWednesdays=utcWednesday.range,utcThursdays=utcThursday.range,utcFridays=utcFriday.range,utcSaturdays=utcSaturday.range,utcMonth=newInterval((function(e){e.setUTCDate(1),e.setUTCHours(0,0,0,0)}),(function(e,t){e.setUTCMonth(e.getUTCMonth()+t)}),(function(e,t){return t.getUTCMonth()-e.getUTCMonth()+12*(t.getUTCFullYear()-e.getUTCFullYear())}),(function(e){return e.getUTCMonth()})),utcMonth_default=utcMonth,utcMonths=utcMonth.range,utcYear=newInterval((function(e){e.setUTCMonth(0,1),e.setUTCHours(0,0,0,0)}),(function(e,t){e.setUTCFullYear(e.getUTCFullYear()+t)}),(function(e,t){return t.getUTCFullYear()-e.getUTCFullYear()}),(function(e){return e.getUTCFullYear()}));utcYear.every=function(e){return isFinite(e=Math.floor(e))&&e>0?newInterval((function(t){t.setUTCFullYear(Math.floor(t.getUTCFullYear()/e)*e),t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)}),(function(t,A){t.setUTCFullYear(t.getUTCFullYear()+A*e)})):null};var utcYear_default=utcYear,utcYears=utcYear.range;function ascending(e,t){return null==e||null==t?NaN:e<t?-1:e>t?1:e>=t?0:NaN}function bisector(e){let t=e,A=e,n=e;function l(e,t,l=0,r=e.length){if(l<r){if(0!==A(t,t))return r;do{const A=l+r>>>1;n(e[A],t)<0?l=A+1:r=A}while(l<r)}return l}return 2!==e.length&&(t=(t,A)=>e(t)-A,A=ascending,n=(t,A)=>ascending(e(t),A)),{left:l,center:function(e,A,n=0,r=e.length){const a=l(e,A,n,r-1);return a>n&&t(e[a-1],A)>-t(e[a],A)?a-1:a},right:function(e,t,l=0,r=e.length){if(l<r){if(0!==A(t,t))return r;do{const A=l+r>>>1;n(e[A],t)<=0?l=A+1:r=A}while(l<r)}return l}}}function number(e){return null===e?NaN:+e}var ascendingBisect=bisector(ascending),bisectRight=ascendingBisect.right,bisectLeft=ascendingBisect.left,bisectCenter=bisector(number).center,bisect_default=bisectRight,e10=Math.sqrt(50),e5=Math.sqrt(10),e2=Math.sqrt(2);function tickStep(e,t,A){var n=Math.abs(t-e)/Math.max(0,A),l=Math.pow(10,Math.floor(Math.log(n)/Math.LN10)),r=n/l;return r>=e10?l*=10:r>=e5?l*=5:r>=e2&&(l*=2),t<e?-l:l}function ticker(e,t,A,n,l,r){const a=[[second_default,1,durationSecond],[second_default,5,5*durationSecond],[second_default,15,15*durationSecond],[second_default,30,30*durationSecond],[r,1,durationMinute],[r,5,5*durationMinute],[r,15,15*durationMinute],[r,30,30*durationMinute],[l,1,durationHour],[l,3,3*durationHour],[l,6,6*durationHour],[l,12,12*durationHour],[n,1,durationDay],[n,2,2*durationDay],[A,1,durationWeek],[t,1,durationMonth],[t,3,3*durationMonth],[e,1,durationYear]];function o(t,A,n){const l=Math.abs(A-t)/n,r=bisector((([,,e])=>e)).right(a,l);if(r===a.length)return e.every(tickStep(t/durationYear,A/durationYear,n));if(0===r)return millisecond_default.every(Math.max(tickStep(t,A,n),1));const[o,s]=a[l/a[r-1][2]<a[r][2]/l?r-1:r];return o.every(s)}return[function(e,t,A){const n=t<e;n&&([e,t]=[t,e]);const l=A&&"function"==typeof A.range?A:o(e,t,A),r=l?l.range(e,+t+1):[];return n?r.reverse():r},o]}var[utcTicks,utcTickInterval]=ticker(utcYear_default,utcMonth_default,utcSunday,utcDay_default,utcHour_default,utcMinute_default),[timeTicks,timeTickInterval]=ticker(year_default,month_default,sunday,day_default,hour_default,minute_default),AFTER_TASK_REGEXP=/^after\s+([\d\w- ]+)/,DEFAULT_TIME_FORMAT="YYYY-MM-DD",GanttDb=class extends BaseDb{constructor(){super(...arguments),this.tasks={},this.attrs=this.makeDefaultAttrs(),this.taskCounter=makeIdCounter(),this.tags=this.makeDefaultTags(),this.markDates=[],this.lastOrder=0,this.ACTION_HANDLERS={addAttr(e){let t=e.value;["excludes","includes"].includes(e.key)&&(t=e.value.toLowerCase().split(/[\s,]+/)),this.attrs[e.key]=t},addTask(e){this.addTask(e)},addSection(e){this.currentSection=e.label},markDate(e){this.processMarkDate(e.value)},overrideConfig(e){this.addOverrideConfig(e)},addParam(e){this.configParams.push(e)}}}getDiagramIR(){return{...super.getBaseDiagramIR(),tasks:this.tasks,attrs:this.attrs,markDates:this.markDates}}apply(e){e&&(Array.isArray(e)?e.forEach((e=>this.apply(e))):e.type in this.ACTION_HANDLERS&&this.ACTION_HANDLERS[e.type].call(this,e))}makeTaskId(e){if(void 0===e){return"task"+this.taskCounter.next()}return e}addTask(e){const{label:t,extraValue:A}=e,n=this.parseTaskData(t.trim(),A.trim(),{});this.lastTaskId=n.id,this.tasks[n.id]=n}parseTaskData(e,t,A){const n=A.prevTask||this.tasks[this.lastTaskId],l=t.trim().split(",").map((e=>e.trim())),r={label:e,id:this.makeTaskId(),startTime:null,endTime:null,renderEndTime:null,order:this.lastOrder++,section:this.currentSection};if(l[0]){const e=l[0].toUpperCase().split(" ");let t=!1;e.forEach((e=>{this.tags[e]&&(t=!0,r.tags||(r.tags=[]),r.tags.push(e))})),t&&l.shift()}const a=l.length;let o="";if(1===a){const[e]=l;r.startTime=null==n?void 0:n.endTime,o=e}else if(2===a){const[e,t]=l,{date:A,prevTaskId:n}=this.getStartOfTask(e);r.startTime=A,r.prevTaskId=n,o=t}else if(3===a){const[e,t,A]=l;r.id=this.makeTaskId(e);const{date:n,prevTaskId:a}=this.getStartOfTask(t);r.startTime=n,r.prevTaskId=a,o=A}return o&&(r.endTime=this.getEndDate(r.startTime,o,!1),r.isManualEndTime=isDateStrValid(o,this.attrs.dateFormat).isValid,checkTaskDates(r,this.attrs.dateFormat,this.attrs.excludes,this.attrs.includes)),r}findTaskById(e){return this.tasks[e]}getStartOfTask(e){e=e.trim();let t="";const A=AFTER_TASK_REGEXP.exec(e.trim());if(null!==A){let e=null;if(A[1].split(" ").forEach((A=>{const n=this.findTaskById(A);void 0!==n&&(t=n.id,e?n.endTime>e.endTime&&(e=n):e=n)})),e)return{date:e.endTime,prevTaskId:t};{const e=new Date;return e.setHours(0,0,0,0),{date:e,prevTaskId:t}}}const n=this.attrs.dateFormat,l=(0,import_dayjs.default)(e,n,!0);return l.isValid()?{date:l.toDate(),prevTaskId:t}:(logger.debug(`Invalid date:${e},dateFormat:${n}`),{date:new Date,prevTaskId:t})}getEndDate(e,t,A){A=A||!1,t=t.trim();const n=(0,import_dayjs.default)(t,this.attrs.dateFormat.trim(),!0);return n.isValid()?(A&&n.add(1,"d"),n.toDate()):durationToDate(/^([\d]+)([wdhms])/.exec(t.trim()),(0,import_dayjs.default)(e))}processMarkDate(e){let t;if("today"===e.trim())t=new Date;else{const{dayObject:A,isValid:n}=isDateStrValid(e,this.attrs.dateFormat);n&&(t=A.toDate())}t&&this.markDates.push(t)}makeDefaultAttrs(){return{title:"",dateFormat:DEFAULT_TIME_FORMAT,axisFormat:"",axisInterval:null,excludes:[],includes:[]}}makeDefaultTags(){return createDictByKeys(["ACTIVE","DONE","CRIT","MILESTONE"])}clear(){super.clear(),this.tasks={},this.attrs=this.makeDefaultAttrs(),this.tags=this.makeDefaultTags(),this.lastOrder=0,this.currentSection=void 0,this.markDates=[]}},db7=new GanttDb;function isDateStrValid(e,t){const A=(0,import_dayjs.default)(e,t||DEFAULT_TIME_FORMAT,!0);return{dayObject:A,isValid:A.isValid()}}function checkTaskDates(e,t,A,n){if(!A.length||e.isManualEndTime)return;const l=(0,import_dayjs.default)(e.startTime,t,!0);l.add(1,"d");const r=(0,import_dayjs.default)(e.endTime,t,!0),a=fixTaskDates(l,r,t,A,n);e.endTime=r.toDate(),e.renderEndTime=a}var fixTaskDates=function(e,t,A,n,l){let r=!1,a=null;for(;e<=t;)r||(a=t.toDate()),r=isInvalidDate(e,A,n,l),r&&(t=t.add(1,"d")),e=e.add(1,"d");return a},isInvalidDate=function(e,t,A,n){return!(n.length&&n.indexOf(e.format(t))>=0)&&(e.day()>=6&&A.indexOf("weekends")>=0||(!!(A.length&&A.indexOf(e.format("dddd").toLowerCase())>=0)||A.indexOf(e.format(t.trim()))>=0))},durationToDate=function(e,t){let A=t;if(null!==e){const[n,l,r]=e,a=parseFloat(l);switch(r){case"s":A=t.add(a,"second");break;case"m":A=t.add(a,"minute");break;case"h":A=t.add(a,"hour");break;case"d":A=t.add(a,"day");break;case"w":A=t.add(a,"week")}}return A.toDate()};function createDictByKeys(e,t=!0){return e.reduce(((e,A)=>(e[A]=t,e)),{})}function getAxisTimeInterval(e){const{axisFormat:t,axisInterval:A}=e;let n=day_default.every(1);const l=[{pattern:/y/i,rangeMaker:year_default},{pattern:/M/,rangeMaker:month_default},{pattern:/d/i,rangeMaker:day_default},{pattern:/w/i,rangeMaker:sunday},{pattern:/h/i,rangeMaker:hour_default},{pattern:/m/,rangeMaker:minute_default},{pattern:/s/,rangeMaker:second_default}];let r;if(A){const e=/(\d+)(\w)/.exec(A.trim());if(e){const t=parseInt(e[1]),A=e[2];if(!isNaN(t))for(const e of l)e.pattern.test(A)&&(r=e.rangeMaker.every(t))}}if(r)n=r;else for(const e of l)e.pattern.test(t)&&(n=e.rangeMaker.every(1));return n}var db_default6=db7;function initRange(e,t){switch(arguments.length){case 0:break;case 1:this.range(e);break;default:this.range(t).domain(e)}return this}function define_default(e,t,A){e.prototype=t.prototype=A,A.constructor=e}function extend(e,t){var A=Object.create(e.prototype);for(var n in t)A[n]=t[n];return A}function Color(){}var darker=.7,brighter=1/darker,reI="\\s*([+-]?\\d+)\\s*",reN="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",reP="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",reHex=/^#([0-9a-f]{3,8})$/,reRgbInteger=new RegExp("^rgb\\("+[reI,reI,reI]+"\\)$"),reRgbPercent=new RegExp("^rgb\\("+[reP,reP,reP]+"\\)$"),reRgbaInteger=new RegExp("^rgba\\("+[reI,reI,reI,reN]+"\\)$"),reRgbaPercent=new RegExp("^rgba\\("+[reP,reP,reP,reN]+"\\)$"),reHslPercent=new RegExp("^hsl\\("+[reN,reP,reP]+"\\)$"),reHslaPercent=new RegExp("^hsla\\("+[reN,reP,reP,reN]+"\\)$"),named={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function color_formatHex(){return this.rgb().formatHex()}function color_formatHsl(){return hslConvert(this).formatHsl()}function color_formatRgb(){return this.rgb().formatRgb()}function color(e){var t,A;return e=(e+"").trim().toLowerCase(),(t=reHex.exec(e))?(A=t[1].length,t=parseInt(t[1],16),6===A?rgbn(t):3===A?new Rgb(t>>8&15|t>>4&240,t>>4&15|240&t,(15&t)<<4|15&t,1):8===A?rgba(t>>24&255,t>>16&255,t>>8&255,(255&t)/255):4===A?rgba(t>>12&15|t>>8&240,t>>8&15|t>>4&240,t>>4&15|240&t,((15&t)<<4|15&t)/255):null):(t=reRgbInteger.exec(e))?new Rgb(t[1],t[2],t[3],1):(t=reRgbPercent.exec(e))?new Rgb(255*t[1]/100,255*t[2]/100,255*t[3]/100,1):(t=reRgbaInteger.exec(e))?rgba(t[1],t[2],t[3],t[4]):(t=reRgbaPercent.exec(e))?rgba(255*t[1]/100,255*t[2]/100,255*t[3]/100,t[4]):(t=reHslPercent.exec(e))?hsla(t[1],t[2]/100,t[3]/100,1):(t=reHslaPercent.exec(e))?hsla(t[1],t[2]/100,t[3]/100,t[4]):named.hasOwnProperty(e)?rgbn(named[e]):"transparent"===e?new Rgb(NaN,NaN,NaN,0):null}function rgbn(e){return new Rgb(e>>16&255,e>>8&255,255&e,1)}function rgba(e,t,A,n){return n<=0&&(e=t=A=NaN),new Rgb(e,t,A,n)}function rgbConvert(e){return e instanceof Color||(e=color(e)),e?new Rgb((e=e.rgb()).r,e.g,e.b,e.opacity):new Rgb}function rgb(e,t,A,n){return 1===arguments.length?rgbConvert(e):new Rgb(e,t,A,null==n?1:n)}function Rgb(e,t,A,n){this.r=+e,this.g=+t,this.b=+A,this.opacity=+n}function rgb_formatHex(){return"#"+hex(this.r)+hex(this.g)+hex(this.b)}function rgb_formatRgb(){var e=this.opacity;return(1===(e=isNaN(e)?1:Math.max(0,Math.min(1,e)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===e?")":", "+e+")")}function hex(e){return((e=Math.max(0,Math.min(255,Math.round(e)||0)))<16?"0":"")+e.toString(16)}function hsla(e,t,A,n){return n<=0?e=t=A=NaN:A<=0||A>=1?e=t=NaN:t<=0&&(e=NaN),new Hsl(e,t,A,n)}function hslConvert(e){if(e instanceof Hsl)return new Hsl(e.h,e.s,e.l,e.opacity);if(e instanceof Color||(e=color(e)),!e)return new Hsl;if(e instanceof Hsl)return e;var t=(e=e.rgb()).r/255,A=e.g/255,n=e.b/255,l=Math.min(t,A,n),r=Math.max(t,A,n),a=NaN,o=r-l,s=(r+l)/2;return o?(a=t===r?(A-n)/o+6*(A<n):A===r?(n-t)/o+2:(t-A)/o+4,o/=s<.5?r+l:2-r-l,a*=60):o=s>0&&s<1?0:a,new Hsl(a,o,s,e.opacity)}function hsl(e,t,A,n){return 1===arguments.length?hslConvert(e):new Hsl(e,t,A,null==n?1:n)}function Hsl(e,t,A,n){this.h=+e,this.s=+t,this.l=+A,this.opacity=+n}function hsl2rgb(e,t,A){return 255*(e<60?t+(A-t)*e/60:e<180?A:e<240?t+(A-t)*(240-e)/60:t)}function basis(e,t,A,n,l){var r=e*e,a=r*e;return((1-3*e+3*r-a)*t+(4-6*r+3*a)*A+(1+3*e+3*r-3*a)*n+a*l)/6}function basis_default2(e){var t=e.length-1;return function(A){var n=A<=0?A=0:A>=1?(A=1,t-1):Math.floor(A*t),l=e[n],r=e[n+1],a=n>0?e[n-1]:2*l-r,o=n<t-1?e[n+2]:2*r-l;return basis((A-n/t)*t,a,l,r,o)}}function basisClosed_default(e){var t=e.length;return function(A){var n=Math.floor(((A%=1)<0?++A:A)*t),l=e[(n+t-1)%t],r=e[n%t],a=e[(n+1)%t],o=e[(n+2)%t];return basis((A-n/t)*t,l,r,a,o)}}define_default(Color,color,{copy:function(e){return Object.assign(new this.constructor,this,e)},displayable:function(){return this.rgb().displayable()},hex:color_formatHex,formatHex:color_formatHex,formatHsl:color_formatHsl,formatRgb:color_formatRgb,toString:color_formatRgb}),define_default(Rgb,rgb,extend(Color,{brighter:function(e){return e=null==e?brighter:Math.pow(brighter,e),new Rgb(this.r*e,this.g*e,this.b*e,this.opacity)},darker:function(e){return e=null==e?darker:Math.pow(darker,e),new Rgb(this.r*e,this.g*e,this.b*e,this.opacity)},rgb:function(){return this},displayable:function(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:rgb_formatHex,formatHex:rgb_formatHex,formatRgb:rgb_formatRgb,toString:rgb_formatRgb})),define_default(Hsl,hsl,extend(Color,{brighter:function(e){return e=null==e?brighter:Math.pow(brighter,e),new Hsl(this.h,this.s,this.l*e,this.opacity)},darker:function(e){return e=null==e?darker:Math.pow(darker,e),new Hsl(this.h,this.s,this.l*e,this.opacity)},rgb:function(){var e=this.h%360+360*(this.h<0),t=isNaN(e)||isNaN(this.s)?0:this.s,A=this.l,n=A+(A<.5?A:1-A)*t,l=2*A-n;return new Rgb(hsl2rgb(e>=240?e-240:e+120,l,n),hsl2rgb(e,l,n),hsl2rgb(e<120?e+240:e-120,l,n),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl:function(){var e=this.opacity;return(1===(e=isNaN(e)?1:Math.max(0,Math.min(1,e)))?"hsl(":"hsla(")+(this.h||0)+", "+100*(this.s||0)+"%, "+100*(this.l||0)+"%"+(1===e?")":", "+e+")")}}));var constant_default2=e=>()=>e;function linear(e,t){return function(A){return e+A*t}}function exponential(e,t,A){return e=Math.pow(e,A),t=Math.pow(t,A)-e,A=1/A,function(n){return Math.pow(e+n*t,A)}}function gamma(e){return 1==(e=+e)?nogamma:function(t,A){return A-t?exponential(t,A,e):constant_default2(isNaN(t)?A:t)}}function nogamma(e,t){var A=t-e;return A?linear(e,A):constant_default2(isNaN(e)?t:e)}var rgb_default=function e(t){var A=gamma(t);function n(e,t){var n=A((e=rgb(e)).r,(t=rgb(t)).r),l=A(e.g,t.g),r=A(e.b,t.b),a=nogamma(e.opacity,t.opacity);return function(t){return e.r=n(t),e.g=l(t),e.b=r(t),e.opacity=a(t),e+""}}return n.gamma=e,n}(1);function rgbSpline(e){return function(t){var A,n,l=t.length,r=new Array(l),a=new Array(l),o=new Array(l);for(A=0;A<l;++A)n=rgb(t[A]),r[A]=n.r||0,a[A]=n.g||0,o[A]=n.b||0;return r=e(r),a=e(a),o=e(o),n.opacity=1,function(e){return n.r=r(e),n.g=a(e),n.b=o(e),n+""}}}var rgbBasis=rgbSpline(basis_default2),rgbBasisClosed=rgbSpline(basisClosed_default);function numberArray_default(e,t){t||(t=[]);var A,n=e?Math.min(t.length,e.length):0,l=t.slice();return function(r){for(A=0;A<n;++A)l[A]=e[A]*(1-r)+t[A]*r;return l}}function isNumberArray(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}function genericArray(e,t){var A,n=t?t.length:0,l=e?Math.min(n,e.length):0,r=new Array(l),a=new Array(n);for(A=0;A<l;++A)r[A]=value_default(e[A],t[A]);for(;A<n;++A)a[A]=t[A];return function(e){for(A=0;A<l;++A)a[A]=r[A](e);return a}}function date_default(e,t){var A=new Date;return e=+e,t=+t,function(n){return A.setTime(e*(1-n)+t*n),A}}function number_default(e,t){return e=+e,t=+t,function(A){return e*(1-A)+t*A}}function object_default(e,t){var A,n={},l={};for(A in null!==e&&"object"==typeof e||(e={}),null!==t&&"object"==typeof t||(t={}),t)A in e?n[A]=value_default(e[A],t[A]):l[A]=t[A];return function(e){for(A in n)l[A]=n[A](e);return l}}var reA=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,reB=new RegExp(reA.source,"g");function zero2(e){return function(){return e}}function one(e){return function(t){return e(t)+""}}function string_default(e,t){var A,n,l,r=reA.lastIndex=reB.lastIndex=0,a=-1,o=[],s=[];for(e+="",t+="";(A=reA.exec(e))&&(n=reB.exec(t));)(l=n.index)>r&&(l=t.slice(r,l),o[a]?o[a]+=l:o[++a]=l),(A=A[0])===(n=n[0])?o[a]?o[a]+=n:o[++a]=n:(o[++a]=null,s.push({i:a,x:number_default(A,n)})),r=reB.lastIndex;return r<t.length&&(l=t.slice(r),o[a]?o[a]+=l:o[++a]=l),o.length<2?s[0]?one(s[0].x):zero2(t):(t=s.length,function(e){for(var A,n=0;n<t;++n)o[(A=s[n]).i]=A.x(e);return o.join("")})}function value_default(e,t){var A,n=typeof t;return null==t||"boolean"===n?constant_default2(t):("number"===n?number_default:"string"===n?(A=color(t))?(t=A,rgb_default):string_default:t instanceof color?rgb_default:t instanceof Date?date_default:isNumberArray(t)?numberArray_default:Array.isArray(t)?genericArray:"function"!=typeof t.valueOf&&"function"!=typeof t.toString||isNaN(t)?object_default:number_default)(e,t)}function round_default(e,t){return e=+e,t=+t,function(A){return Math.round(e*(1-A)+t*A)}}function constants(e){return function(){return e}}function number2(e){return+e}var unit=[0,1];function identity4(e){return e}function normalize3(e,t){return(t-=e=+e)?function(A){return(A-e)/t}:constants(isNaN(t)?NaN:.5)}function clamper(e,t){var A;return e>t&&(A=e,e=t,t=A),function(A){return Math.max(e,Math.min(t,A))}}function bimap(e,t,A){var n=e[0],l=e[1],r=t[0],a=t[1];return l<n?(n=normalize3(l,n),r=A(a,r)):(n=normalize3(n,l),r=A(r,a)),function(e){return r(n(e))}}function polymap(e,t,A){var n=Math.min(e.length,t.length)-1,l=new Array(n),r=new Array(n),a=-1;for(e[n]<e[0]&&(e=e.slice().reverse(),t=t.slice().reverse());++a<n;)l[a]=normalize3(e[a],e[a+1]),r[a]=A(t[a],t[a+1]);return function(t){var A=bisect_default(e,t,1,n)-1;return r[A](l[A](t))}}function copy3(e,t){return t.domain(e.domain()).range(e.range()).interpolate(e.interpolate()).clamp(e.clamp()).unknown(e.unknown())}function transformer(){var e,t,A,n,l,r,a=unit,o=unit,s=value_default,i=identity4;function u(){var e=Math.min(a.length,o.length);return i!==identity4&&(i=clamper(a[0],a[e-1])),n=e>2?polymap:bimap,l=r=null,c}function c(t){return null==t||isNaN(t=+t)?A:(l||(l=n(a.map(e),o,s)))(e(i(t)))}return c.invert=function(A){return i(t((r||(r=n(o,a.map(e),number_default)))(A)))},c.domain=function(e){return arguments.length?(a=Array.from(e,number2),u()):a.slice()},c.range=function(e){return arguments.length?(o=Array.from(e),u()):o.slice()},c.rangeRound=function(e){return o=Array.from(e),s=round_default,u()},c.clamp=function(e){return arguments.length?(i=!!e||identity4,u()):i!==identity4},c.interpolate=function(e){return arguments.length?(s=e,u()):s},c.unknown=function(e){return arguments.length?(A=e,c):A},function(A,n){return e=A,t=n,u()}}function continuous(){return transformer()(identity4,identity4)}function nice(e,t){var A,n=0,l=(e=e.slice()).length-1,r=e[n],a=e[l];return a<r&&(A=n,n=l,l=A,A=r,r=a,a=A),e[n]=t.floor(r),e[l]=t.ceil(a),e}function localDate(e){if(0<=e.y&&e.y<100){var t=new Date(-1,e.m,e.d,e.H,e.M,e.S,e.L);return t.setFullYear(e.y),t}return new Date(e.y,e.m,e.d,e.H,e.M,e.S,e.L)}function utcDate(e){if(0<=e.y&&e.y<100){var t=new Date(Date.UTC(-1,e.m,e.d,e.H,e.M,e.S,e.L));return t.setUTCFullYear(e.y),t}return new Date(Date.UTC(e.y,e.m,e.d,e.H,e.M,e.S,e.L))}function newDate(e,t,A){return{y:e,m:t,d:A,H:0,M:0,S:0,L:0}}function formatLocale(e){var t=e.dateTime,A=e.date,n=e.time,l=e.periods,r=e.days,a=e.shortDays,o=e.months,s=e.shortMonths,i=formatRe(l),u=formatLookup(l),c=formatRe(r),h=formatLookup(r),f=formatRe(a),g=formatLookup(a),d=formatRe(o),p=formatLookup(o),B=formatRe(s),E=formatLookup(s),m={a:function(e){return a[e.getDay()]},A:function(e){return r[e.getDay()]},b:function(e){return s[e.getMonth()]},B:function(e){return o[e.getMonth()]},c:null,d:formatDayOfMonth,e:formatDayOfMonth,f:formatMicroseconds,g:formatYearISO,G:formatFullYearISO,H:formatHour24,I:formatHour12,j:formatDayOfYear,L:formatMilliseconds,m:formatMonthNumber,M:formatMinutes,p:function(e){return l[+(e.getHours()>=12)]},q:function(e){return 1+~~(e.getMonth()/3)},Q:formatUnixTimestamp,s:formatUnixTimestampSeconds,S:formatSeconds,u:formatWeekdayNumberMonday,U:formatWeekNumberSunday,V:formatWeekNumberISO,w:formatWeekdayNumberSunday,W:formatWeekNumberMonday,x:null,X:null,y:formatYear,Y:formatFullYear,Z:formatZone,"%":formatLiteralPercent},b={a:function(e){return a[e.getUTCDay()]},A:function(e){return r[e.getUTCDay()]},b:function(e){return s[e.getUTCMonth()]},B:function(e){return o[e.getUTCMonth()]},c:null,d:formatUTCDayOfMonth,e:formatUTCDayOfMonth,f:formatUTCMicroseconds,g:formatUTCYearISO,G:formatUTCFullYearISO,H:formatUTCHour24,I:formatUTCHour12,j:formatUTCDayOfYear,L:formatUTCMilliseconds,m:formatUTCMonthNumber,M:formatUTCMinutes,p:function(e){return l[+(e.getUTCHours()>=12)]},q:function(e){return 1+~~(e.getUTCMonth()/3)},Q:formatUnixTimestamp,s:formatUnixTimestampSeconds,S:formatUTCSeconds,u:formatUTCWeekdayNumberMonday,U:formatUTCWeekNumberSunday,V:formatUTCWeekNumberISO,w:formatUTCWeekdayNumberSunday,W:formatUTCWeekNumberMonday,x:null,X:null,y:formatUTCYear,Y:formatUTCFullYear,Z:formatUTCZone,"%":formatLiteralPercent},y={a:function(e,t,A){var n=f.exec(t.slice(A));return n?(e.w=g.get(n[0].toLowerCase()),A+n[0].length):-1},A:function(e,t,A){var n=c.exec(t.slice(A));return n?(e.w=h.get(n[0].toLowerCase()),A+n[0].length):-1},b:function(e,t,A){var n=B.exec(t.slice(A));return n?(e.m=E.get(n[0].toLowerCase()),A+n[0].length):-1},B:function(e,t,A){var n=d.exec(t.slice(A));return n?(e.m=p.get(n[0].toLowerCase()),A+n[0].length):-1},c:function(e,A,n){return C(e,t,A,n)},d:parseDayOfMonth,e:parseDayOfMonth,f:parseMicroseconds,g:parseYear,G:parseFullYear,H:parseHour24,I:parseHour24,j:parseDayOfYear,L:parseMilliseconds,m:parseMonthNumber,M:parseMinutes,p:function(e,t,A){var n=i.exec(t.slice(A));return n?(e.p=u.get(n[0].toLowerCase()),A+n[0].length):-1},q:parseQuarter,Q:parseUnixTimestamp,s:parseUnixTimestampSeconds,S:parseSeconds,u:parseWeekdayNumberMonday,U:parseWeekNumberSunday,V:parseWeekNumberISO,w:parseWeekdayNumberSunday,W:parseWeekNumberMonday,x:function(e,t,n){return C(e,A,t,n)},X:function(e,t,A){return C(e,n,t,A)},y:parseYear,Y:parseFullYear,Z:parseZone,"%":parseLiteralPercent};function w(e,t){return function(A){var n,l,r,a=[],o=-1,s=0,i=e.length;for(A instanceof Date||(A=new Date(+A));++o<i;)37===e.charCodeAt(o)&&(a.push(e.slice(s,o)),null!=(l=pads[n=e.charAt(++o)])?n=e.charAt(++o):l="e"===n?" ":"0",(r=t[n])&&(n=r(A,l)),a.push(n),s=o+1);return a.push(e.slice(s,o)),a.join("")}}function Q(e,t){return function(A){var n,l,r=newDate(1900,void 0,1);if(C(r,e,A+="",0)!=A.length)return null;if("Q"in r)return new Date(r.Q);if("s"in r)return new Date(1e3*r.s+("L"in r?r.L:0));if(t&&!("Z"in r)&&(r.Z=0),"p"in r&&(r.H=r.H%12+12*r.p),void 0===r.m&&(r.m="q"in r?r.q:0),"V"in r){if(r.V<1||r.V>53)return null;"w"in r||(r.w=1),"Z"in r?(l=(n=utcDate(newDate(r.y,0,1))).getUTCDay(),n=l>4||0===l?utcMonday.ceil(n):utcMonday(n),n=utcDay_default.offset(n,7*(r.V-1)),r.y=n.getUTCFullYear(),r.m=n.getUTCMonth(),r.d=n.getUTCDate()+(r.w+6)%7):(l=(n=localDate(newDate(r.y,0,1))).getDay(),n=l>4||0===l?monday.ceil(n):monday(n),n=day_default.offset(n,7*(r.V-1)),r.y=n.getFullYear(),r.m=n.getMonth(),r.d=n.getDate()+(r.w+6)%7)}else("W"in r||"U"in r)&&("w"in r||(r.w="u"in r?r.u%7:"W"in r?1:0),l="Z"in r?utcDate(newDate(r.y,0,1)).getUTCDay():localDate(newDate(r.y,0,1)).getDay(),r.m=0,r.d="W"in r?(r.w+6)%7+7*r.W-(l+5)%7:r.w+7*r.U-(l+6)%7);return"Z"in r?(r.H+=r.Z/100|0,r.M+=r.Z%100,utcDate(r)):localDate(r)}}function C(e,t,A,n){for(var l,r,a=0,o=t.length,s=A.length;a<o;){if(n>=s)return-1;if(37===(l=t.charCodeAt(a++))){if(l=t.charAt(a++),!(r=y[l in pads?t.charAt(a++):l])||(n=r(e,A,n))<0)return-1}else if(l!=A.charCodeAt(n++))return-1}return n}return m.x=w(A,m),m.X=w(n,m),m.c=w(t,m),b.x=w(A,b),b.X=w(n,b),b.c=w(t,b),{format:function(e){var t=w(e+="",m);return t.toString=function(){return e},t},parse:function(e){var t=Q(e+="",!1);return t.toString=function(){return e},t},utcFormat:function(e){var t=w(e+="",b);return t.toString=function(){return e},t},utcParse:function(e){var t=Q(e+="",!0);return t.toString=function(){return e},t}}}var pads={"-":"",_:" ",0:"0"},numberRe=/^\s*\d+/,percentRe=/^%/,requoteRe=/[\\^$*+?|[\]().{}]/g,locale,timeFormat,timeParse,utcFormat,utcParse;function pad(e,t,A){var n=e<0?"-":"",l=(n?-e:e)+"",r=l.length;return n+(r<A?new Array(A-r+1).join(t)+l:l)}function requote(e){return e.replace(requoteRe,"\\$&")}function formatRe(e){return new RegExp("^(?:"+e.map(requote).join("|")+")","i")}function formatLookup(e){return new Map(e.map(((e,t)=>[e.toLowerCase(),t])))}function parseWeekdayNumberSunday(e,t,A){var n=numberRe.exec(t.slice(A,A+1));return n?(e.w=+n[0],A+n[0].length):-1}function parseWeekdayNumberMonday(e,t,A){var n=numberRe.exec(t.slice(A,A+1));return n?(e.u=+n[0],A+n[0].length):-1}function parseWeekNumberSunday(e,t,A){var n=numberRe.exec(t.slice(A,A+2));return n?(e.U=+n[0],A+n[0].length):-1}function parseWeekNumberISO(e,t,A){var n=numberRe.exec(t.slice(A,A+2));return n?(e.V=+n[0],A+n[0].length):-1}function parseWeekNumberMonday(e,t,A){var n=numberRe.exec(t.slice(A,A+2));return n?(e.W=+n[0],A+n[0].length):-1}function parseFullYear(e,t,A){var n=numberRe.exec(t.slice(A,A+4));return n?(e.y=+n[0],A+n[0].length):-1}function parseYear(e,t,A){var n=numberRe.exec(t.slice(A,A+2));return n?(e.y=+n[0]+(+n[0]>68?1900:2e3),A+n[0].length):-1}function parseZone(e,t,A){var n=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(t.slice(A,A+6));return n?(e.Z=n[1]?0:-(n[2]+(n[3]||"00")),A+n[0].length):-1}function parseQuarter(e,t,A){var n=numberRe.exec(t.slice(A,A+1));return n?(e.q=3*n[0]-3,A+n[0].length):-1}function parseMonthNumber(e,t,A){var n=numberRe.exec(t.slice(A,A+2));return n?(e.m=n[0]-1,A+n[0].length):-1}function parseDayOfMonth(e,t,A){var n=numberRe.exec(t.slice(A,A+2));return n?(e.d=+n[0],A+n[0].length):-1}function parseDayOfYear(e,t,A){var n=numberRe.exec(t.slice(A,A+3));return n?(e.m=0,e.d=+n[0],A+n[0].length):-1}function parseHour24(e,t,A){var n=numberRe.exec(t.slice(A,A+2));return n?(e.H=+n[0],A+n[0].length):-1}function parseMinutes(e,t,A){var n=numberRe.exec(t.slice(A,A+2));return n?(e.M=+n[0],A+n[0].length):-1}function parseSeconds(e,t,A){var n=numberRe.exec(t.slice(A,A+2));return n?(e.S=+n[0],A+n[0].length):-1}function parseMilliseconds(e,t,A){var n=numberRe.exec(t.slice(A,A+3));return n?(e.L=+n[0],A+n[0].length):-1}function parseMicroseconds(e,t,A){var n=numberRe.exec(t.slice(A,A+6));return n?(e.L=Math.floor(n[0]/1e3),A+n[0].length):-1}function parseLiteralPercent(e,t,A){var n=percentRe.exec(t.slice(A,A+1));return n?A+n[0].length:-1}function parseUnixTimestamp(e,t,A){var n=numberRe.exec(t.slice(A));return n?(e.Q=+n[0],A+n[0].length):-1}function parseUnixTimestampSeconds(e,t,A){var n=numberRe.exec(t.slice(A));return n?(e.s=+n[0],A+n[0].length):-1}function formatDayOfMonth(e,t){return pad(e.getDate(),t,2)}function formatHour24(e,t){return pad(e.getHours(),t,2)}function formatHour12(e,t){return pad(e.getHours()%12||12,t,2)}function formatDayOfYear(e,t){return pad(1+day_default.count(year_default(e),e),t,3)}function formatMilliseconds(e,t){return pad(e.getMilliseconds(),t,3)}function formatMicroseconds(e,t){return formatMilliseconds(e,t)+"000"}function formatMonthNumber(e,t){return pad(e.getMonth()+1,t,2)}function formatMinutes(e,t){return pad(e.getMinutes(),t,2)}function formatSeconds(e,t){return pad(e.getSeconds(),t,2)}function formatWeekdayNumberMonday(e){var t=e.getDay();return 0===t?7:t}function formatWeekNumberSunday(e,t){return pad(sunday.count(year_default(e)-1,e),t,2)}function dISO(e){var t=e.getDay();return t>=4||0===t?thursday(e):thursday.ceil(e)}function formatWeekNumberISO(e,t){return e=dISO(e),pad(thursday.count(year_default(e),e)+(4===year_default(e).getDay()),t,2)}function formatWeekdayNumberSunday(e){return e.getDay()}function formatWeekNumberMonday(e,t){return pad(monday.count(year_default(e)-1,e),t,2)}function formatYear(e,t){return pad(e.getFullYear()%100,t,2)}function formatYearISO(e,t){return pad((e=dISO(e)).getFullYear()%100,t,2)}function formatFullYear(e,t){return pad(e.getFullYear()%1e4,t,4)}function formatFullYearISO(e,t){var A=e.getDay();return pad((e=A>=4||0===A?thursday(e):thursday.ceil(e)).getFullYear()%1e4,t,4)}function formatZone(e){var t=e.getTimezoneOffset();return(t>0?"-":(t*=-1,"+"))+pad(t/60|0,"0",2)+pad(t%60,"0",2)}function formatUTCDayOfMonth(e,t){return pad(e.getUTCDate(),t,2)}function formatUTCHour24(e,t){return pad(e.getUTCHours(),t,2)}function formatUTCHour12(e,t){return pad(e.getUTCHours()%12||12,t,2)}function formatUTCDayOfYear(e,t){return pad(1+utcDay_default.count(utcYear_default(e),e),t,3)}function formatUTCMilliseconds(e,t){return pad(e.getUTCMilliseconds(),t,3)}function formatUTCMicroseconds(e,t){return formatUTCMilliseconds(e,t)+"000"}function formatUTCMonthNumber(e,t){return pad(e.getUTCMonth()+1,t,2)}function formatUTCMinutes(e,t){return pad(e.getUTCMinutes(),t,2)}function formatUTCSeconds(e,t){return pad(e.getUTCSeconds(),t,2)}function formatUTCWeekdayNumberMonday(e){var t=e.getUTCDay();return 0===t?7:t}function formatUTCWeekNumberSunday(e,t){return pad(utcSunday.count(utcYear_default(e)-1,e),t,2)}function UTCdISO(e){var t=e.getUTCDay();return t>=4||0===t?utcThursday(e):utcThursday.ceil(e)}function formatUTCWeekNumberISO(e,t){return e=UTCdISO(e),pad(utcThursday.count(utcYear_default(e),e)+(4===utcYear_default(e).getUTCDay()),t,2)}function formatUTCWeekdayNumberSunday(e){return e.getUTCDay()}function formatUTCWeekNumberMonday(e,t){return pad(utcMonday.count(utcYear_default(e)-1,e),t,2)}function formatUTCYear(e,t){return pad(e.getUTCFullYear()%100,t,2)}function formatUTCYearISO(e,t){return pad((e=UTCdISO(e)).getUTCFullYear()%100,t,2)}function formatUTCFullYear(e,t){return pad(e.getUTCFullYear()%1e4,t,4)}function formatUTCFullYearISO(e,t){var A=e.getUTCDay();return pad((e=A>=4||0===A?utcThursday(e):utcThursday.ceil(e)).getUTCFullYear()%1e4,t,4)}function formatUTCZone(){return"+0000"}function formatLiteralPercent(){return"%"}function formatUnixTimestamp(e){return+e}function formatUnixTimestampSeconds(e){return Math.floor(+e/1e3)}function defaultLocale(e){return locale=formatLocale(e),timeFormat=locale.format,timeParse=locale.parse,utcFormat=locale.utcFormat,utcParse=locale.utcParse,locale}function date(e){return new Date(e)}function number3(e){return e instanceof Date?+e:+new Date(+e)}function calendar(e,t,A,n,l,r,a,o,s,i){var u=continuous(),c=u.invert,h=u.domain,f=i(".%L"),g=i(":%S"),d=i("%I:%M"),p=i("%I %p"),B=i("%a %d"),E=i("%b %d"),m=i("%B"),b=i("%Y");function y(e){return(s(e)<e?f:o(e)<e?g:a(e)<e?d:r(e)<e?p:n(e)<e?l(e)<e?B:E:A(e)<e?m:b)(e)}return u.invert=function(e){return new Date(c(e))},u.domain=function(e){return arguments.length?h(Array.from(e,number3)):h().map(date)},u.ticks=function(t){var A=h();return e(A[0],A[A.length-1],null==t?10:t)},u.tickFormat=function(e,t){return null==t?y:i(t)},u.nice=function(e){var A=h();return e&&"function"==typeof e.range||(e=t(A[0],A[A.length-1],null==e?10:e)),e?h(nice(A,e)):u},u.copy=function(){return copy3(u,calendar(e,t,A,n,l,r,a,o,s,i))},u}function time2(){return initRange.apply(calendar(timeTicks,timeTickInterval,year_default,month_default,sunday,day_default,hour_default,minute_default,second_default,timeFormat).domain([new Date(2e3,0,1),new Date(2e3,0,2)]),arguments)}defaultLocale({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});var import_dayjs2=__toESM(require_dayjs_min()),defaultConfig7={barHeight:20,barGap:2,topPadding:30,sidePadding:20,gridLineStartPadding:20,numberSectionStyles:4,axisFormat:"YY-MM-DD",axisLabelFontSize:10,gridLineWidth:2,gridLineColor:PALETTE.normalDark,axisLabelColor:PALETTE.normalDark,markLineColor:PALETTE.pink,barBackground:PALETTE.orange,barBorderColor:PALETTE.normalDark,barBorderRadius:2,sectionBackgrounds:["#fff0da",void 0],sectionLabelColor:PALETTE.normalDark,fontColor:PALETTE.normalDark,fontSize:14,fontFamily:DEFAULT_FONT_FAMILY},GANTT_PARAM_DIRECTIVE_RULES={...getParamRulesFromConfig(defaultConfig7),axisFormat:{valueType:"string"}},configKey7="gantt",configurator7=makeConfigurator({defaultConfig:defaultConfig7,configKey:configKey7,getConfigFromParamDirectives:e=>interpreteConfigs(GANTT_PARAM_DIRECTIVE_RULES,e),getConfigFromTheme(e,t){let A,n;(0,import_tinycolor2.default)(e.canvasBackground||"white").isLight()?(A=PALETTE.normalDark,n=(0,import_tinycolor2.default)(A).lighten(20).toHexString()):(A=PALETTE.white,n=(0,import_tinycolor2.default)(A).darken(20).toHexString());const l=[(0,import_tinycolor2.default)(e.primaryColor).brighten(20).desaturate(10).toHexString(),void 0];return(0,import_tinycolor2.default)(A),{barBackground:e.primaryColor,barBorderColor:t.fontColor,fontColor:e.textColor,axisLabelColor:A,sectionLabelColor:A,sectionBackgrounds:l,gridLineColor:n}}}),getConf7=configurator7.getConfig,artist2=makeArtist({draw(e,t,A){var n;const l=getConf7(e,t),r=makeEmptyGroup();let a=1e3;(null===(n=A.containerSize)||void 0===n?void 0:n.width)&&(a=A.containerSize.width);const o=new GanttDraw(e,l,r,a);o.makeGant();const s=o.getPageSize(),{width:i,height:u}=s;return{mark:r,width:i,height:u}}}),GANTT_LAYER_CONFIG={sectionBackground:1,excludesBackground:2,gridLine:5,bar:10,markLine:15,title:15},GanttDraw=class{constructor(e,t,A,n){this.ir=e,this.conf=t,this.rootMark=A,this.sectionLabelWidth=0,this.layerManager=new LayerManager,isDev&&(window.ganttDraw=this);const l=Object.values(e.tasks);this.taskArray=l,this.startDate=new Date(min(l,(function(e){return Number(e.startTime)}))),this.endDate=new Date(max(l,(function(e){return Number(e.renderEndTime||e.endTime)}))),this.fontConfig={fontSize:t.fontSize,fontFamily:t.fontFamily};const r=l.map((e=>e.section));this.categories=r;const a=r.reduce(((e,t)=>(e[t]||(e[t]=t?calculateTextDimensions(t,this.fontConfig).width:0),e)),{}),o=Object.values(a).reduce(((e,t)=>Math.max(e,t)),0);this.sectionLabelWidth=Math.round(o?o+5:0);const s=e=>{const A=this.ir.attrs.axisFormat||this.conf.axisFormat,n=calculateTextDimensions((0,import_dayjs2.default)().format(A),{fontSize:t.axisLabelFontSize}).width,l=getAxisTimeInterval({axisFormat:A,axisInterval:this.ir.attrs.axisInterval}),r=time2().domain([this.startDate,this.endDate]).rangeRound([0,e-2*t.sidePadding-this.sectionLabelWidth-n/4]),a=r.ticks(l).map((e=>{const n=(0,import_dayjs2.default)(e).format(A);return{date:e,label:n,labelWidth:calculateTextDimensions(n,{fontSize:t.axisLabelFontSize}).width}}));return{timeScale:r,ticks:a}},{ticks:i}=s(n),u=t.axisLabelFontSize/2,c=i.reduce(((e,t)=>e+t.labelWidth+u),0)+2*t.sidePadding+o;this.titleTextDims=e.attrs.title?calculateTextDimensions(e.attrs.title,this.fontConfig):{width:0,height:0};const h=l.length*(t.barHeight+t.barGap)+2*t.topPadding+t.gridLineStartPadding+t.axisLabelFontSize+this.titleTextDims.height;this.height=h,this.width=Math.max(n,c);const{timeScale:f,ticks:g}=s(this.width);this.timeScale=f,this.ticks=g;for(const[e,t]of Object.entries(GANTT_LAYER_CONFIG))this.layerManager.addLayer(e,t)}getPageSize(){return{width:this.width,height:this.height}}makeGant(){const{taskArray:e}=this,{conf:t}=this,A=t.barHeight+t.barGap;this.drawTitle();const{sectionsHeight:n}=this.drawSections(e,A);this.drawExcludeDays({sectionsHeight:n}),this.drawGrid({sectionsHeight:n}),this.drawMarkDates({sectionsHeight:n}),this.rootMark.children=this.layerManager.sortLayerMarks()}getScaledTimeX(e){return Math.round(this.timeScale(e))}drawTitle(){const e=this.ir.attrs.title;if(e){const t=this.titleTextDims.width,A=makeMark("text",{text:e,x:(this.width-t)/2,y:this.conf.topPadding,fill:this.conf.fontColor,textBaseline:"middle",...this.fontConfig,fontWeight:"bold"});this.layerManager.addMark("title",A)}}drawGrid(e){const t=makeEmptyGroup();t.class="gantt__grid",this.layerManager.addMark("gridLine",t);const{axisLabelColor:A,gridLineColor:n,axisLabelFontSize:l,topPadding:r,sidePadding:a,gridLineStartPadding:o}=this.conf,s=r+(this.titleTextDims.height||0),i=e.sectionsHeight+o;this.ticks.forEach((e=>{const{date:r,label:o}=e,u=this.getScaledTimeX(r)+a+this.sectionLabelWidth,c=s+i,h=makeMark("line",{x1:u,x2:u,y1:s,y2:c,stroke:n}),f=makeMark("text",{text:o,fill:A,textAlign:"center",textBaseline:"top",x:u,y:c+10,fontSize:l});t.children.push(h,f)}))}drawSections(e,t){const{conf:A}=this,n=this.width,l=makeEmptyGroup(),{gridLineStartPadding:r,gridLineWidth:a,sectionBackgrounds:o,sidePadding:s,topPadding:i,barHeight:u,barGap:c}=A,h=r+i+(this.titleTextDims.height||0);this.layerManager.addMark("sectionBackground",l);const f=new Map,g=this.sectionLabelWidth+s;e.forEach(((e,r)=>{const i=makeEmptyGroup();if(this.layerManager.addMark("bar",i),!f.get(e.section)){const r=o[f.size%o.length]||"transparent",a=e.order*t+h,i=makeMark("rect",{x:0,y:a,width:n,height:t,fill:r},{class:"gantt__section"});let u;l.children.push(i),e.section&&(u=makeMark("text",{text:e.section,x:s,y:a+t/2,...this.fontConfig,fill:A.sectionLabelColor,textAlign:"left",textBaseline:"middle"}),l.children.push(u)),f.set(e.section,{backgroundRect:i,taskCount:0,labelMark:u})}f.get(e.section).taskCount+=1;const d=g+this.getScaledTimeX(e.startTime),p=g+this.getScaledTimeX(e.startTime);let B=g+this.getScaledTimeX(e.renderEndTime||e.endTime),E=B-p;const m={radius:A.barBorderRadius,x:d,y:e.order*t+h+c/2,width:E,height:u,fill:A.barBackground,stroke:A.barBorderColor},b=makeMark("rect",{...m}),y=getTaskAppearanceInfo({baseAttrs:m,task:e,taskMark:b,originTaskMark:b,conf:this.conf});let w,Q;y?(w=y.taskMark,E=y.width,B=p+E):w=b;const C=(null==y?void 0:y.taskMarkOffset)||{x:0,y:0},M=calculateTextDimensions(e.label,this.fontConfig).width;if(M>E){Q=M<n-B-C.x?B+M/2+a+C.x:p-M/2+C.x}else Q=p+E/2+C.x;const I=r*t+A.barHeight/2+h,T=makeMark("text",{text:e.label,x:Q+a/2,y:I,textAlign:"center",textBaseline:"middle",...this.fontConfig,fill:A.fontColor});i.children.push(w,T)}));for(const{taskCount:e,labelMark:A,backgroundRect:n}of f.values())e>1&&(A&&(A.attrs.y+=(e-1)*t/2),n.attrs.height+=(e-1)*t);return{sectionsHeight:Array.from(f.values()).reduce(((e,A)=>e+A.taskCount*t),0)}}drawExcludeDays(e){const{conf:t}=this,A=makeEmptyGroup(),{gridLineStartPadding:n,gridLineColor:l,sidePadding:r,topPadding:a}=t,o=a+(this.titleTextDims.height||0);this.layerManager.addMark("excludesBackground",A);const s=this.startDate,i=this.endDate,{excludes:u,includes:c,dateFormat:h}=this.ir.attrs;if(!s||!i)return;const f=this.sectionLabelWidth+r,g=e.sectionsHeight+n,d=[];let p=null,B=(0,import_dayjs2.default)(s);for(;B.toDate()<=i;)isInvalidDate(B,h,u,c)?p||(p={start:B.toDate(),end:B.toDate()}):p&&(p.end=B.toDate(),d.push(p),p=null),B=B.add(1,"d");d.forEach((e=>{const t=f+this.getScaledTimeX(e.start),n=makeMark("rect",{x:t,width:f+this.getScaledTimeX(e.end)-t,y:o,height:g,fill:l,fillOpacity:.2});A.children.push(n)}))}drawMarkDates(e){const{topPadding:t,sidePadding:A,gridLineStartPadding:n,markLineColor:l}=this.conf,r=t+(this.titleTextDims.height||0),a=r+e.sectionsHeight+n,o=makeEmptyGroup();this.layerManager.addMark("markLine",o),this.ir.markDates.forEach((e=>{const t=this.getScaledTimeX(e)+A+this.sectionLabelWidth,n=makeMark("line",{x1:t,x2:t,y1:r,y2:a,lineWidth:2,stroke:l});o.children.push(n)}))}},TASK_TAGS_INFO_MAP={MILESTONE:{decorate(e){const{taskMark:t,conf:A}=e,n=t.attrs,l=Math.min(20,A.barHeight),r=l/2;return{taskMark:drawDiamondTo({x:n.x,y:n.y+n.height/2},r,n),width:l,taskMarkOffset:{x:-l,y:0}}}},DONE:{decorate(e){const{taskMark:t}=e;return safeAssign(t.attrs,{fillOpacity:.6}),{taskMark:t}}},CRIT:{decorate(e){const{taskMark:t}=e;return safeAssign(t.attrs,{stroke:"red"}),{taskMark:t}}}};function getTaskAppearanceInfo(e){const t=e.task;if(!t.tags)return;const A={taskMark:e.taskMark,width:e.taskMark.attrs.width,taskMarkOffset:{x:0,y:0}};let n=e.taskMark;return t.tags.forEach((t=>{const l=TASK_TAGS_INFO_MAP[t];l&&l.decorate&&(Object.assign(A,l.decorate({...e,taskMark:n})),A.taskMark&&(n=A.taskMark))})),A.taskMark=n,A}var artist_default7=artist2,moo7=__toESM(require_moo());function id7(e){return e[0]}function nth2(e){return function(t){return t[e]}}var COLOR7=/#[a-zA-Z0-9]+/,PARAM_DIRECTIVE7=/@param/,CONFIG_DIRECTIVE8=/@config/,L_PAREN7=/\(/,R_PAREN7=/\)/;function getTokenValue7(e){return e&&"value"in e?e.value:e}function handleConfigOpenCloseStatement7(e){const t=e[2].map((e=>e.type?getTokenValue7(e):e)).join("");try{return{type:"overrideConfig",value:JSON.parse(t)}}catch(e){return{type:"overrideConfig",error:e}}}var COMMENT_LINE7=/%%.*/,ATTR_KEYWORDS=["title","dateFormat","axisFormat","axisInterval"],OTHER_KEYWORDS=["section","markDate","excludes","includes"],keywordRules=[...ATTR_KEYWORDS,...OTHER_KEYWORDS].reduce(((e,t)=>{const A=new RegExp(`${t}`);return e[t.toUpperCase()]={match:A,push:"attr"},e}),{}),commonTextRules2={QUOTED_WORD:QUOTED_WORD_REGEXP},lexer7=moo7.states({main:{NL:MOO_NEWLINE,WS:{match:/ +/,lineBreaks:!1},...commonTextRules2,...keywordRules,COLON:/:/,LEFT_BRACE:/\{/,RIGHT_BRACE:/\}/,PARAM_DIRECTIVE:/@param/,COMMENT_LINE:COMMENT_LINE_REGEXP,CONFIG_DIRECTIVE:CONFIG_DIRECTIVE8,VALID_TEXT:{match:VALID_TEXT_REGEXP,fallback:!0}},attr:{...commonTextRules2,VALID_TEXT:{match:/[^\n]+/,pop:1}}}),grammar7={Lexer:lexer7,ParserRules:[{name:"_$ebnf$1",symbols:[]},{name:"_$ebnf$1",symbols:["_$ebnf$1","wschar"],postprocess:e=>e[0].concat([e[1]])},{name:"_",symbols:["_$ebnf$1"],postprocess:function(e){return null}},{name:"__$ebnf$1",symbols:["wschar"]},{name:"__$ebnf$1",symbols:["__$ebnf$1","wschar"],postprocess:e=>e[0].concat([e[1]])},{name:"__",symbols:["__$ebnf$1"],postprocess:function(e){return null}},{name:"wschar",symbols:[/[ \t\n\v\f\r]/],postprocess:id7},{name:"color",symbols:[COLOR7],postprocess:e=>tv(e[0])},{name:"paramStatement",symbols:[PARAM_DIRECTIVE7,"__","paramPart"],postprocess:function(e){return e[2]}},{name:"paramStatement$ebnf$1",symbols:[]},{name:"paramStatement$ebnf$1$subexpression$1",symbols:[/[\n]/,"_","paramPart"]},{name:"paramStatement$ebnf$1",symbols:["paramStatement$ebnf$1","paramStatement$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"paramStatement",symbols:[PARAM_DIRECTIVE7,"__",{literal:"{"},"_","paramStatement$ebnf$1",/[\n]/,"_",{literal:"}"}],postprocess:function(e){const t=[];return e[4].forEach((e=>{t.push(e[2])})),t}},{name:"paramPart$ebnf$1",symbols:[/[a-zA-Z0-9]/]},{name:"paramPart$ebnf$1",symbols:["paramPart$ebnf$1",/[a-zA-Z0-9]/],postprocess:e=>e[0].concat([e[1]])},{name:"paramPart$ebnf$2",symbols:[/[^ \n]/]},{name:"paramPart$ebnf$2",symbols:["paramPart$ebnf$2",/[^ \n]/],postprocess:e=>e[0].concat([e[1]])},{name:"paramPart",symbols:["paramPart$ebnf$1","__","paramPart$ebnf$2"],postprocess:function(e){const t=e[0].map((e=>tv(e))).join("");let A=e[2];return"string"!=typeof A&&(A=A.map((e=>tv(e))).join("")),{type:"addParam",key:t,value:A}}},{name:"configStatement$ebnf$1",symbols:[/[^\)]/]},{name:"configStatement$ebnf$1",symbols:["configStatement$ebnf$1",/[^\)]/],postprocess:e=>e[0].concat([e[1]])},{name:"configStatement",symbols:[CONFIG_DIRECTIVE8,{literal:"("},"configStatement$ebnf$1",{literal:")"}],postprocess:handleConfigOpenCloseStatement7},{name:"configOpenCloseStatement$ebnf$1",symbols:[/[^\)]/]},{name:"configOpenCloseStatement$ebnf$1",symbols:["configOpenCloseStatement$ebnf$1",/[^\)]/],postprocess:e=>e[0].concat([e[1]])},{name:"configOpenCloseStatement",symbols:[CONFIG_DIRECTIVE8,L_PAREN7,"configOpenCloseStatement$ebnf$1",R_PAREN7],postprocess:handleConfigOpenCloseStatement7},{name:"comment",symbols:[COMMENT_LINE7],postprocess:e=>null},{name:"start",symbols:["__","start"]},{name:"start",symbols:[{literal:"gantt"},"document"]},{name:"document",symbols:[]},{name:"document",symbols:["document","line"],postprocess:e=>{let t=e[0];return e[1]&&(t=e[0].concat(e[1])),t}},{name:"line$ebnf$1",symbols:[lexer7.has("WS")?{type:"WS"}:WS],postprocess:id7},{name:"line$ebnf$1",symbols:[],postprocess:()=>null},{name:"line",symbols:["line$ebnf$1","statement"],postprocess:nth2(1)},{name:"line$ebnf$2",symbols:[lexer7.has("WS")?{type:"WS"}:WS],postprocess:id7},{name:"line$ebnf$2",symbols:[],postprocess:()=>null},{name:"line",symbols:["line$ebnf$2",lexer7.has("NL")?{type:"NL"}:NL],postprocess:null},{name:"statement$ebnf$1",symbols:[lexer7.has("WS")?{type:"WS"}:WS],postprocess:id7},{name:"statement$ebnf$1",symbols:[],postprocess:()=>null},{name:"statement",symbols:["attrKey","statement$ebnf$1","words",lexer7.has("NL")?{type:"NL"}:NL],postprocess:e=>{const t=e[2].trim();return{type:"addAttr",key:e[0],value:t}}},{name:"statement",symbols:[lexer7.has("SECTION")?{type:"SECTION"}:SECTION,"words",lexer7.has("NL")?{type:"NL"}:NL],postprocess:e=>({type:"addSection",label:e[1].trim()})},{name:"statement",symbols:[lexer7.has("MARKDATE")?{type:"MARKDATE"}:MARKDATE,"words",lexer7.has("NL")?{type:"NL"}:NL],postprocess:e=>({type:"markDate",value:e[1].trim()})},{name:"statement",symbols:["words",lexer7.has("COLON")?{type:"COLON"}:COLON,"words",lexer7.has("NL")?{type:"NL"}:NL],postprocess:e=>({type:"addTask",label:e[0],extraValue:e[2]})},{name:"statement",symbols:["paramStatement",lexer7.has("NL")?{type:"NL"}:NL],postprocess:nth2(0)},{name:"statement",symbols:["configOpenCloseStatement",lexer7.has("NL")?{type:"NL"}:NL],postprocess:nth2(0)},{name:"statement",symbols:["comment",lexer7.has("NL")?{type:"NL"}:NL],postprocess:null},{name:"attrKey$subexpression$1",symbols:[lexer7.has("TITLE")?{type:"TITLE"}:TITLE]},{name:"attrKey$subexpression$1",symbols:[lexer7.has("DATEFORMAT")?{type:"DATEFORMAT"}:DATEFORMAT]},{name:"attrKey$subexpression$1",symbols:[lexer7.has("AXISFORMAT")?{type:"AXISFORMAT"}:AXISFORMAT]},{name:"attrKey$subexpression$1",symbols:[lexer7.has("AXISINTERVAL")?{type:"AXISINTERVAL"}:AXISINTERVAL]},{name:"attrKey$subexpression$1",symbols:[lexer7.has("EXCLUDES")?{type:"EXCLUDES"}:EXCLUDES]},{name:"attrKey$subexpression$1",symbols:[lexer7.has("INCLUDES")?{type:"INCLUDES"}:INCLUDES]},{name:"attrKey",symbols:["attrKey$subexpression$1"],postprocess:e=>tv(e[0][0])},{name:"words$ebnf$1",symbols:[]},{name:"words$ebnf$1$subexpression$1",symbols:[lexer7.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{name:"words$ebnf$1$subexpression$1",symbols:[lexer7.has("WS")?{type:"WS"}:WS]},{name:"words$ebnf$1",symbols:["words$ebnf$1","words$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"words",symbols:[lexer7.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,"words$ebnf$1"],postprocess:function(e){return tv(e[0])+e[1].map((e=>tv(e[0]))).join("")}},{name:"words",symbols:[lexer7.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD],postprocess:function(e){const t=tv(e[0]);return t.slice(1,t.length-1)}}],ParserStart:"start",ParserOptions:{skipUnmatchSymbols:[lexer7.has("WS")?{type:"WS"}:WS]}},gantt_default=grammar7,parse7=genParserWithRules(gantt_default,{dedupeAmbigousResults:!0,postProcess:e=>(db_default6.apply(e),e)}),gantt={pattern:/^\s*gantt/,parser:{parse:e=>(parse7(e),db_default6.getDiagramIR())},artist:artist_default7,configKey:configKey7,clear(){db_default6.clear()}},Relation;!function(e){e.INHERITANCE="INHERITANCE",e.COMPOSITION="COMPOSITION",e.AGGREGATION="AGGREGATION",e.ASSOCIATION="ASSOCIATION",e.LINK="LINK"}(Relation||(Relation={}));var NAMESPACE_SEP=".",ClassDb=class extends BaseDb{constructor(){super(...arguments),this.classes={},this.relations=[],this.notes=[],this.ACTION_HANDLERS={addClass(e){let t=this.classes[e.name];const{type:A,...n}=e,l=this.parseClassAction(n);t?Object.assign(t,l):t=l,this.classes[e.name]=t},addClassMember(e){const t=this.parseMemberLabel(e.member.raw);let A=this.classes[e.className];A||(A=this.parseClassAction({name:e.className,members:[]}),this.classes[e.className]=A),A.members.push(t)},addRelation(e){let t=this.classes[e.left];t||(t=this.parseClassAction({name:e.left,members:[]}),this.classes[e.left]=t);let A=this.classes[e.right];A||(A=this.parseClassAction({name:e.right,members:[]}),this.classes[e.right]=A);const{relationRaw:n,...l}=e,r={...l,relation:n.type};n.dashed&&(r.dashed=n.dashed),this.relations.push(r)},addAnnotation(e){let t=this.classes[e.className];t||(t=this.parseClassAction({name:e.className,members:[]}),this.classes[e.className]=t),t.annotation=e.annotation},note(e){const t=`note-${e.target}-${e.placement}`,A={...e,id:t,text:dedent_default(e.text)};this.notes.push(A)},overrideConfig(e){this.addOverrideConfig(e)},addParam(e){this.configParams.push(e)}}}parseClassAction(e){const t=e.name;let A=e.name,n="",l="";const r=[];if(e.name.includes(NAMESPACE_SEP)){const t=e.name.split(NAMESPACE_SEP);A=t[t.length-1],n=t.slice(0,t.length-1).join(NAMESPACE_SEP)}if(e.members)for(const t of e.members)if("annotation"in t)l=t.annotation;else{const e=this.parseMemberLabel(t.raw);e.modifier=t.modifier,r.push(e)}const a=e.label||A;return{...e,name:A,namespace:n,fullName:t,members:r,annotation:l,label:a}}parseMemberLabel(e){let t=e;const A=t[0];let n="public";const l="-"===A,r="#"===A;l?n="private":r&&(n="protected"),(l||r||"+"===A)&&(t=t.slice(1));return{access:n,raw:e,isMethod:/\(.*\)/.test(t)}}getDiagramIR(){return{...super.getBaseDiagramIR(),classes:this.classes,relations:this.relations,notes:this.notes}}apply(e){e&&(Array.isArray(e)?e.forEach((e=>this.apply(e))):e.type in this.ACTION_HANDLERS&&this.ACTION_HANDLERS[e.type].call(this,e))}clear(){super.clear(),this.classes={},this.relations=[],this.notes=[]}},db8=new ClassDb,db_default7=db8,defaultConfig8={diagramPadding:15,layoutDirection:"TB",ranksep:20,nodesep:20,edgesep:10,edgeType:"polyline",entityBackground:PALETTE.orange,entityBorderColor:PALETTE.normalDark,entityBodyBackground:PALETTE.white,entityTextColor:PALETTE.normalDark,labelBackground:PALETTE.white,relationLineColor:PALETTE.normalDark,relationTextColor:PALETTE.normalDark,entityRadius:2,noteMargin:10,noteTextColor:PALETTE.normalDark,fontSize:14,fontWeight:"normal",fontFamily:DEFAULT_FONT_FAMILY},CLASS_PARAM_DIRECTIVE_RULES={...getParamRulesFromConfig(defaultConfig8)},configKey8="class",configurator8=makeConfigurator({defaultConfig:defaultConfig8,configKey:configKey8,getConfigFromParamDirectives:e=>interpreteConfigs(CLASS_PARAM_DIRECTIVE_RULES,e),getConfigFromTheme(e){const t=(0,import_tinycolor2.default)(e.primaryColor);let A;A=(0,import_tinycolor2.default)(e.canvasBackground||PALETTE.white).isLight()?PALETTE.normalDark:PALETTE.white;const n=t.brighten(60).toHexString();return{entityBackground:e.primaryColor,entityBodyBackground:n,relationLineColor:A}}}),getConf8=configurator8.getConfig,artist3=makeArtist({draw(e,t,A){const n=makeEmptyGroup(),l=getConf8(e,t),r=new ClassDiagramDraw(e,l);isDev&&(window.classDraw=r);const{gBounds:a}=r.drawTo(n),{width:o,height:s}=adjustRootMarkBounds({rootMark:n,gBounds:a,padX:l.diagramPadding,padY:l.diagramPadding});return{mark:n,width:o,height:s}}}),ClassDiagramDraw=class{constructor(e,t){this.ir=e,this.conf=t,this.relationGroupMark=makeEmptyGroup(),this.elementBounds=makeBounds();const A=createLayoutGraph({multigraph:!0,directed:!0,compound:!0}).setGraph({nodesep:20,edgesep:t.edgesep,ranksep:t.ranksep,splines:getGraphSplinesOption(t.edgeType),avoid_label_on_border:!0});this.dagreWrapper=new DagreWrapper(A),this.theme=config_default.getConfig().themeConfig.themeVariables}drawTo(e){this.rootMark=e;for(const e of Object.values(this.ir.classes))this.drawClass(e);e.children.push(this.relationGroupMark);for(const e of this.ir.relations)this.drawRelation(e);for(const e of this.ir.notes)this.drawNote(e);return this.dagreWrapper.doLayout(),this.dagreWrapper.callNodeOnLayout(),this.dagreWrapper.callEdgeOnLayout(),{gBounds:tryExpandBounds(this.dagreWrapper.getGraphBounds(),this.elementBounds)}}drawClass(e){const t=new EntityMarkBuilder(this.dagreWrapper.g,this.conf);t.addHeader(e.fullName,e.annotation),this.markBuilder=t;const A=e.members.filter((e=>!e.isMethod)),n=e.members.filter((e=>e.isMethod));for(const e of[A,n]){const{index:A}=t.getCurrentSection(),n=A+1;if(e.length)for(const A of e)t.addRow(n,[{label:A.raw,italic:"abstract"===A.modifier,underline:"static"===A.modifier}]);else t.addRow(n,[""])}this.rootMark.children.push(t.group);const l=this.dagreWrapper.g,r=t.getSize();l.setNode(e.fullName,{id:e.fullName,...r,onLayout(e){t.onLayout(e)}})}drawRelation(e){const t=this.dagreWrapper.g,{conf:A,relationGroupMark:n}=this;let l;const r={fontSize:A.fontSize,fontFamily:A.fontFamily},a=e.reversed?e.right:e.left,o=e.reversed?e.left:e.right;let s=1;if(e.label){l=calculateTextDimensions(e.label,r),s=Math.ceil(l.height/A.ranksep)+1;const n=t.node(a),o=(l.width-n.width)/2;o>0&&(n.marginr=o,n.marginl=o)}const i=e.labelLeft?calculateTextDimensions(e.labelLeft,r):null,u=e.labelRight?calculateTextDimensions(e.labelRight,r):null;let c,h;e.labelLeft&&(s+=Math.ceil(i.height/A.ranksep),c=makeMark("text",{text:e.labelLeft,fill:A.relationLineColor,class:"class__label",...r}),n.children.push(c)),e.labelRight&&(s+=Math.ceil(u.height/A.ranksep),h=makeMark("text",{text:e.labelRight,fill:A.relationLineColor,class:"class__label",...r}),n.children.push(h));const f=e.reversed?h:c,g=e.reversed?c:h;t.setEdge(a,o,{label:e.relation,minlen:s,onLayout:t=>{const a=makeMark("path",{path:"curved"===A.edgeType?getPointsCurvePath(t.points):getPointsLinearPath(t.points),stroke:A.relationLineColor,lineCap:"round",lineDash:e.dashed?[2,2]:null},{class:"class__rel-line"});if(n.children.push(a),e.label){const a=(1===s?t.labelPoint:null)||getMedianPoint(t.points).point,o=makeMark("text",{text:e.label,fill:A.relationTextColor,textAlign:"center",textBaseline:"middle",...a,...r},{class:"class__rel-text"}),i=makeLabelBg(l,a,{fill:A.labelBackground}),u=calcBound([i]);tryExpandBounds(this.elementBounds,u),n.children.push(i,o)}const o=t.points[t.points.length-1],i=t.points.slice(-2),u=calcDirection.apply(null,i),c=RELATION_TO_ARROW_TYPE[e.relation];if(c){const e=drawArrowTo(o,8,u,{color:A.relationLineColor,type:c});n.children.push(e)}if(f){const e=t.points[2];safeAssign(f.attrs,movePointPosition(e,{x:5,y:0}))}g&&safeAssign(g.attrs,movePointPosition(o,{x:5,y:0}))}})}drawNote(e){const{id:t,text:A}=e,n=this.dagreWrapper.g,l=n.node(e.target);if(!l)return;const r=makeMark("group",{x:0,y:0},{children:[],class:"activity__note"}),{rootMark:a,conf:o,theme:s}=this;a.children.push(r);const i={fontSize:o.fontSize,fontFamily:o.fontFamily},u=calculateTextDimensions(A,i),c=getBaseNote(s),h={width:u.width+2*o.noteMargin,height:u.height+2*o.noteMargin},f={type:"rect",class:"note__bg",attrs:c},g={type:"text",attrs:{fill:o.noteTextColor,text:A,textBaseline:"middle",...i}};let d=!1;"LEFT_OF"===e.placement?(d=!0,l.marginl=h.width):"RIGHT_OF"===e.placement&&(d=!0,l.marginr=h.width),"TOP_OF"===e.placement?l.margint=h.height:"BOTTOM_OF"===e.placement&&(l.marginb=h.height),d?l.height<h.height&&(l.height=h.height):l.width<h.width&&(l.width=h.width),n.setNode(t,{mark:r,width:h.width,height:h.height,onLayout:()=>{const A=l,r=A.x-A.width/2,a=A.y-A.height/2;let s=r,i=a;"LEFT_OF"===e.placement?s=r-h.width-o.noteMargin:"RIGHT_OF"===e.placement&&(s=A.x+A.width/2+o.noteMargin),"TOP_OF"===e.placement?i=a-h.height-o.noteMargin:"BOTTOM_OF"===e.placement&&(i=a+A.height+h.height+o.noteMargin),safeAssign(g.attrs,{x:s+o.noteMargin,y:i+u.height/2+o.noteMargin,width:h.width}),safeAssign(c,{x:s,y:i,width:h.width,height:h.height});const f=n.node(t);d||(f.outerTop=i,f.outerBottom=i+h.height)}}),r.children.push(f,g)}},RELATION_TO_ARROW_TYPE={[Relation.INHERITANCE]:"etriangle",[Relation.ASSOCIATION]:"default",[Relation.COMPOSITION]:"diamond",[Relation.AGGREGATION]:"ediamond"},EntityMarkBuilder=class{constructor(e,t){this.g=e,this.conf=t,this.group=makeEmptyGroup(),this.rowPadding=8,this.curY=0,this.curContentHeight=0,this.sections=[]}addHeader(e,t){let A;return A=t?this.addRow(0,[`<<${t}>>`,e]):this.addRow(0,[e]),A.isHeader=!0,last(A.marks).labelMark.attrs.fontWeight="bold",A}addRow(e,t){this.sections[e]||(this.sections[e]={rows:[]});const A=this.sections[e],{rowPadding:n}=this,l=[],r={width:0,height:0};let a=0;for(const e of t){const t="string"==typeof e?{label:e}:e,A=t.label,o=calculateTextDimensions(A,this.getFontConfig()),s=this.curY+a+n,i={text:A,fill:this.conf.entityTextColor,x:0,y:s,textAlign:"center",textBaseline:"hanging",...o,...this.getFontConfig()};t.italic&&Object.assign(i,{fontStyle:"italic"});const u={labelMark:makeMark("text",i)};if(t.underline){const e=makeMark("line",{x1:0,x2:o.width,y1:s,y2:s,stroke:this.conf.entityTextColor,class:"class-entity__underline"});u.decorationLine=e}const c=o.height+Math.floor(n/2);a+=c,l.push(u),r.width=Math.max(r.width,o.width),r.height+=c}const o=this.curY,s=r.height+n;this.curY+=s,this.curContentHeight+=s;const i={labels:t,marks:l,labelDims:r,yOffsetStart:o,yOffsetEnd:this.curY};A.rows.push(i);for(const e of l)this.group.children.push(e.labelMark),e.decorationLine&&this.group.children.push(e.decorationLine);return i}getCurrentSection(){const e=this.sections.length-1;return{index:e,section:this.sections[e]}}getSize(){let e=0;for(const t of this.sections)for(const A of t.rows){const{labelDims:t}=A;e=Math.max(t.width,e)}return{width:e+2*this.rowPadding,height:this.curContentHeight+this.rowPadding}}onLayout(e){const t=this.getSize(),A=makeMark("rect",{...t,x:-t.width/2,y:-t.height/2,fill:this.conf.entityBackground,radius:this.conf.entityRadius,stroke:this.conf.entityBorderColor}),n=t.height/2,{rowPadding:l}=this,r=last(this.sections);let a,o;if(this.sections.forEach(((e,A)=>{if(!e.rows.length)return;for(const A of e.rows)for(const{labelMark:e,decorationLine:r}of A.marks)if(A.isHeader||(e.attrs.x+=-t.width/2+l,e.attrs.textAlign="left"),e.attrs.y+=l/2-n,r){const A=e.attrs.height;r.attrs.y1=e.attrs.y+A,r.attrs.y2=e.attrs.y+A;const n=-t.width/2+l/2;r.attrs.x1+=n,r.attrs.x2+=n}const s=e.rows[0],i=last(e.rows);if(1===A&&(a=s.yOffsetStart-n+l),A>0){const e=s.yOffsetStart-n+l,A=makeMark("line",{x1:-t.width/2,x2:t.width/2,y1:e,y2:e,stroke:this.conf.entityBorderColor},{class:"class-entity__sep-line"});this.group.children.push(A)}e===r&&(o=i.yOffsetEnd+l-n)})),void 0!==a&&void 0!==o){const e=a,A=makeMark("rect",{width:t.width,height:o-a,x:-t.width/2,y:e,fill:this.conf.entityBodyBackground,stroke:this.conf.entityBorderColor,class:"class__section-bg"});this.group.children.unshift(A)}this.group.children.unshift(A),positionGroupContents(this.group,e)}getFontConfig(){return{fontFamily:this.conf.fontFamily,fontSize:this.conf.fontSize}}},artist_default8=artist3,moo8=__toESM(require_moo());function id8(e){return e[0]}var COLOR8=/#[a-zA-Z0-9]+/,PARAM_DIRECTIVE8=/@param/,CONFIG_DIRECTIVE9=/@config/,L_PAREN8=/\(/,R_PAREN8=/\)/;function getTokenValue8(e){return e&&"value"in e?e.value:e}function handleConfigOpenCloseStatement8(e){const t=e[2].map((e=>e.type?getTokenValue8(e):e)).join("");try{return{type:"overrideConfig",value:JSON.parse(t)}}catch(e){return{type:"overrideConfig",error:e}}}var COMMENT_LINE8=/%%.*/,COMMON_TOKEN_RULES4={VALID_TEXT:{match:VALID_TEXT_REGEXP,fallback:!0}},_PLACEMENT2=[{match:/left\sof/,type:()=>"LEFT_OF"},{match:/right\sof/,type:()=>"RIGHT_OF"},{match:/top\sof/,type:()=>"TOP_OF"},{match:/bottom\sof/,type:()=>"BOTTOM_OF"}],lexer8=moo8.states({main:{NL:MOO_NEWLINE,WS:{match:/[ \t]+/,lineBreaks:!1},QUOTED_WORD:QUOTED_WORD_REGEXP,COLOR:COLOR_REGEXP,SEMICOLON:/;/,COLON:/:/,CLASS_DIAGRAM:/classDiagram/,L_PAREN:L_PAREN_REGEXP,R_PAREN:R_PAREN_REGEXP,L_BRACKET:{match:/\{/},R_BRACKET:{match:/\}/},TEXT_WITH_ANGLE_BRACKETS:{match:/\<\<(?:.*)\>\>/},EQ:{match:/=/},SUBGRAPH:{match:/subgraph/},NOTE:textToCaseInsensitiveRegex("@note"),START_NOTE:{match:/@start_note\s/,push:"noteState"},_PLACEMENT:_PLACEMENT2,COMMENT_LINE:COMMENT_LINE_REGEXP,...configLexerMainState,VALID_TEXT:{match:VALID_TEXT_REGEXP,fallback:!0}},configStatement:{...configLexerconfigStatementState,...COMMON_TOKEN_RULES4},noteState:{END_NOTE:{match:textToCaseInsensitiveRegex("@end_note"),pop:1},_PLACEMENT:_PLACEMENT2,NL:MOO_NEWLINE,VALID_TEXT:{match:VALID_TEXT_REGEXP,fallback:!0}}}),nth0=makeNth(0),nth1=makeNth(1),grammar8={Lexer:lexer8,ParserRules:[{name:"_$ebnf$1",symbols:[]},{name:"_$ebnf$1",symbols:["_$ebnf$1","wschar"],postprocess:e=>e[0].concat([e[1]])},{name:"_",symbols:["_$ebnf$1"],postprocess:function(e){return null}},{name:"__$ebnf$1",symbols:["wschar"]},{name:"__$ebnf$1",symbols:["__$ebnf$1","wschar"],postprocess:e=>e[0].concat([e[1]])},{name:"__",symbols:["__$ebnf$1"],postprocess:function(e){return null}},{name:"wschar",symbols:[/[ \t\n\v\f\r]/],postprocess:id8},{name:"color",symbols:[COLOR8],postprocess:e=>tv(e[0])},{name:"paramStatement",symbols:[PARAM_DIRECTIVE8,"__","paramPart"],postprocess:function(e){return e[2]}},{name:"paramStatement$ebnf$1",symbols:[]},{name:"paramStatement$ebnf$1$subexpression$1",symbols:[/[\n]/,"_","paramPart"]},{name:"paramStatement$ebnf$1",symbols:["paramStatement$ebnf$1","paramStatement$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"paramStatement",symbols:[PARAM_DIRECTIVE8,"__",{literal:"{"},"_","paramStatement$ebnf$1",/[\n]/,"_",{literal:"}"}],postprocess:function(e){const t=[];return e[4].forEach((e=>{t.push(e[2])})),t}},{name:"paramPart$ebnf$1",symbols:[/[a-zA-Z0-9]/]},{name:"paramPart$ebnf$1",symbols:["paramPart$ebnf$1",/[a-zA-Z0-9]/],postprocess:e=>e[0].concat([e[1]])},{name:"paramPart$ebnf$2",symbols:[/[^ \n]/]},{name:"paramPart$ebnf$2",symbols:["paramPart$ebnf$2",/[^ \n]/],postprocess:e=>e[0].concat([e[1]])},{name:"paramPart",symbols:["paramPart$ebnf$1","__","paramPart$ebnf$2"],postprocess:function(e){const t=e[0].map((e=>tv(e))).join("");let A=e[2];return"string"!=typeof A&&(A=A.map((e=>tv(e))).join("")),{type:"addParam",key:t,value:A}}},{name:"configStatement$ebnf$1",symbols:[/[^\)]/]},{name:"configStatement$ebnf$1",symbols:["configStatement$ebnf$1",/[^\)]/],postprocess:e=>e[0].concat([e[1]])},{name:"configStatement",symbols:[CONFIG_DIRECTIVE9,{literal:"("},"configStatement$ebnf$1",{literal:")"}],postprocess:handleConfigOpenCloseStatement8},{name:"configOpenCloseStatement$ebnf$1",symbols:[/[^\)]/]},{name:"configOpenCloseStatement$ebnf$1",symbols:["configOpenCloseStatement$ebnf$1",/[^\)]/],postprocess:e=>e[0].concat([e[1]])},{name:"configOpenCloseStatement",symbols:[CONFIG_DIRECTIVE9,L_PAREN8,"configOpenCloseStatement$ebnf$1",R_PAREN8],postprocess:handleConfigOpenCloseStatement8},{name:"comment",symbols:[COMMENT_LINE8],postprocess:e=>null},{name:"start",symbols:["__","start"],postprocess:nth1},{name:"start",symbols:[lexer8.has("CLASS_DIAGRAM")?{type:"CLASS_DIAGRAM"}:CLASS_DIAGRAM,"document"],postprocess:function(e){return e[1]}},{name:"document",symbols:[]},{name:"document",symbols:["document","statementWrap"],postprocess:e=>{let t=e[0];return e[1]&&(t=e[0].concat(e[1])),t}},{name:"statementWrap$ebnf$1",symbols:[]},{name:"statementWrap$ebnf$1",symbols:["statementWrap$ebnf$1",lexer8.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"statementWrap",symbols:["statementWrap$ebnf$1","statement"],postprocess:e=>e[1]},{name:"statementWrap$ebnf$2",symbols:[lexer8.has("WS")?{type:"WS"}:WS],postprocess:id8},{name:"statementWrap$ebnf$2",symbols:[],postprocess:()=>null},{name:"statementWrap",symbols:["statementWrap$ebnf$2",lexer8.has("NL")?{type:"NL"}:NL],postprocess:null},{name:"statement",symbols:["classStatement"]},{name:"statement",symbols:["memberLabelStatement"]},{name:"statement",symbols:["relationStatement"]},{name:"statement",symbols:["classAnnotationStatement"]},{name:"statement",symbols:["noteStatement"]},{name:"statement",symbols:["paramStatement",lexer8.has("NL")?{type:"NL"}:NL]},{name:"statement",symbols:["configOpenCloseStatement",lexer8.has("NL")?{type:"NL"}:NL]},{name:"statement",symbols:["comment",lexer8.has("NL")?{type:"NL"}:NL]},{name:"classStatement$ebnf$1",symbols:[lexer8.has("NL")?{type:"NL"}:NL],postprocess:id8},{name:"classStatement$ebnf$1",symbols:[],postprocess:()=>null},{name:"classStatement$ebnf$2",symbols:["classMembers"],postprocess:id8},{name:"classStatement$ebnf$2",symbols:[],postprocess:()=>null},{name:"classStatement$ebnf$3",symbols:[lexer8.has("NL")?{type:"NL"}:NL],postprocess:id8},{name:"classStatement$ebnf$3",symbols:[],postprocess:()=>null},{name:"classStatement",symbols:[{literal:"class"},lexer8.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,lexer8.has("L_BRACKET")?{type:"L_BRACKET"}:L_BRACKET,"classStatement$ebnf$1","classStatement$ebnf$2","classStatement$ebnf$3",lexer8.has("R_BRACKET")?{type:"R_BRACKET"}:R_BRACKET,lexer8.has("NL")?{type:"NL"}:NL],postprocess:function(e){const t=e[4];return{type:"addClass",name:tv(e[1]),members:t}}},{name:"classStatement",symbols:[{literal:"class"},"textInQuote",{literal:"as"},lexer8.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,lexer8.has("NL")?{type:"NL"}:NL],postprocess:function(e){return{type:"addClass",name:tv(e[3]),label:e[1],members:[]}}},{name:"classStatement",symbols:[{literal:"class"},lexer8.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,lexer8.has("NL")?{type:"NL"}:NL],postprocess:function(e){return{type:"addClass",name:tv(e[1]),members:[]}}},{name:"classMembers",symbols:["classMember"]},{name:"classMembers",symbols:["annotation"]},{name:"classMembers$subexpression$1",symbols:["annotation"]},{name:"classMembers$subexpression$1",symbols:["classMember"]},{name:"classMembers",symbols:["classMembers",lexer8.has("NL")?{type:"NL"}:NL,"classMembers$subexpression$1"],postprocess:function(e){return[...e[0],...e[2]]}},{name:"classMember$ebnf$1",symbols:["modifier"],postprocess:id8},{name:"classMember$ebnf$1",symbols:[],postprocess:()=>null},{name:"classMember",symbols:["classMember$ebnf$1","memberLabel"],postprocess:function(e){const t=e[0]?e[0]:null;return{raw:e[1],modifier:t}}},{name:"words$ebnf$1",symbols:[]},{name:"words$ebnf$1$subexpression$1",symbols:[lexer8.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{name:"words$ebnf$1$subexpression$1",symbols:[lexer8.has("WS")?{type:"WS"}:WS]},{name:"words$ebnf$1",symbols:["words$ebnf$1","words$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"words",symbols:[lexer8.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,"words$ebnf$1"],postprocess:function(e){return tv(e[0])+e[1].map((e=>tv(e[0]))).join("")}},{name:"memberLabel$ebnf$1",symbols:[]},{name:"memberLabel$ebnf$1$subexpression$1",symbols:[lexer8.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{name:"memberLabel$ebnf$1$subexpression$1",symbols:[lexer8.has("L_PAREN")?{type:"L_PAREN"}:L_PAREN8]},{name:"memberLabel$ebnf$1$subexpression$1",symbols:[lexer8.has("R_PAREN")?{type:"R_PAREN"}:R_PAREN8]},{name:"memberLabel$ebnf$1$subexpression$1",symbols:[lexer8.has("COLON")?{type:"COLON"}:COLON]},{name:"memberLabel$ebnf$1$subexpression$1",symbols:[lexer8.has("WS")?{type:"WS"}:WS]},{name:"memberLabel$ebnf$1",symbols:["memberLabel$ebnf$1","memberLabel$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"memberLabel",symbols:[lexer8.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,"memberLabel$ebnf$1"],postprocess:function(e){return tv(e[0])+e[1].map((e=>tv(e[0]))).join("")}},{name:"modifier$subexpression$1",symbols:[{literal:"static"}]},{name:"modifier$subexpression$1",symbols:[{literal:"abstract"}]},{name:"modifier",symbols:[lexer8.has("L_BRACKET")?{type:"L_BRACKET"}:L_BRACKET,"modifier$subexpression$1",lexer8.has("R_BRACKET")?{type:"R_BRACKET"}:R_BRACKET],postprocess:function(e){return tv(e[1][0])}},{name:"memberLabelStatement",symbols:[lexer8.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,lexer8.has("COLON")?{type:"COLON"}:COLON,"classMember",lexer8.has("NL")?{type:"NL"}:NL],postprocess:function(e){return{type:"addClassMember",className:tv(e[0]),member:e[2]}}},{name:"relationStatement$ebnf$1",symbols:["textInQuote"],postprocess:id8},{name:"relationStatement$ebnf$1",symbols:[],postprocess:()=>null},{name:"relationStatement$ebnf$2",symbols:["textInQuote"],postprocess:id8},{name:"relationStatement$ebnf$2",symbols:[],postprocess:()=>null},{name:"relationStatement$ebnf$3$subexpression$1$ebnf$1",symbols:[]},{name:"relationStatement$ebnf$3$subexpression$1$ebnf$1",symbols:["relationStatement$ebnf$3$subexpression$1$ebnf$1",lexer8.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"relationStatement$ebnf$3$subexpression$1$ebnf$2",symbols:[]},{name:"relationStatement$ebnf$3$subexpression$1$ebnf$2",symbols:["relationStatement$ebnf$3$subexpression$1$ebnf$2",lexer8.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"relationStatement$ebnf$3$subexpression$1",symbols:["relationStatement$ebnf$3$subexpression$1$ebnf$1",lexer8.has("COLON")?{type:"COLON"}:COLON,"relationStatement$ebnf$3$subexpression$1$ebnf$2","words"]},{name:"relationStatement$ebnf$3",symbols:["relationStatement$ebnf$3$subexpression$1"],postprocess:id8},{name:"relationStatement$ebnf$3",symbols:[],postprocess:()=>null},{name:"relationStatement",symbols:["classInRelation","relationStatement$ebnf$1","relation","relationStatement$ebnf$2","classInRelation","relationStatement$ebnf$3"],postprocess:function(e){let t={type:e[2],dashed:!1,reversed:!1},A=e[1],n=e[3];e[2].type&&(t=e[2]);let l="";return e[5]&&(l=e[5][3]),{type:"addRelation",left:e[0].name,right:e[4].name,relationRaw:e[2],labelLeft:A,labelRight:n,label:l,dashed:Boolean(t.dashed),reversed:Boolean(t.reversed)}}},{name:"classInRelation",symbols:[lexer8.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT],postprocess:e=>({name:tv(e[0])})},{name:"relation",symbols:[{literal:"<|--"}],postprocess:e=>({type:Relation.INHERITANCE,reversed:!0})},{name:"relation",symbols:[{literal:"<|.."}],postprocess:e=>({type:Relation.INHERITANCE,reversed:!0,dashed:!0})},{name:"relation",symbols:[{literal:"--|>"}],postprocess:e=>({type:Relation.INHERITANCE})},{name:"relation",symbols:[{literal:"..|>"}],postprocess:e=>({type:Relation.INHERITANCE,dashed:!0})},{name:"relation",symbols:[{literal:"*--"}],postprocess:e=>({type:Relation.COMPOSITION,reversed:!0})},{name:"relation",symbols:[{literal:"*.."}],postprocess:e=>({type:Relation.COMPOSITION,reversed:!0,dashed:!0})},{name:"relation",symbols:[{literal:"--*"}],postprocess:e=>({type:Relation.COMPOSITION})},{name:"relation",symbols:[{literal:"..*"}],postprocess:e=>({type:Relation.COMPOSITION,dashed:!0})},{name:"relation",symbols:[{literal:"o--"}],postprocess:e=>({type:Relation.AGGREGATION,reversed:!0})},{name:"relation",symbols:[{literal:"o.."}],postprocess:e=>({type:Relation.AGGREGATION,reversed:!0,dashed:!0})},{name:"relation",symbols:[{literal:"--o"}],postprocess:e=>({type:Relation.AGGREGATION})},{name:"relation",symbols:[{literal:"..o"}],postprocess:e=>({type:Relation.AGGREGATION,dashed:!0})},{name:"relation",symbols:[{literal:"--\x3e"}],postprocess:e=>({type:Relation.ASSOCIATION})},{name:"relation",symbols:[{literal:"..>"}],postprocess:e=>({type:Relation.ASSOCIATION,dashed:!0})},{name:"relation",symbols:[{literal:"<--"}],postprocess:e=>({type:Relation.ASSOCIATION,reversed:!0})},{name:"relation",symbols:[{literal:"<.."}],postprocess:e=>({type:Relation.ASSOCIATION,reversed:!0,dashed:!0})},{name:"relation",symbols:[{literal:"--"}],postprocess:e=>({type:Relation.LINK})},{name:"relation",symbols:[{literal:".."}],postprocess:e=>({type:Relation.LINK,dashed:!0})},{name:"classAnnotationStatement",symbols:["annotation","classInRelation"],postprocess:function(e){return{type:"addAnnotation",annotation:e[0].annotation,className:e[1].name}}},{name:"annotation",symbols:[lexer8.has("TEXT_WITH_ANGLE_BRACKETS")?{type:"TEXT_WITH_ANGLE_BRACKETS"}:TEXT_WITH_ANGLE_BRACKETS],postprocess:function(e){return{type:"annotation",annotation:tv(e[0]).replace(/\<\<(.*)\>\>/,"$1").trim()}}},{name:"textInQuote",symbols:[lexer8.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD],postprocess:function(e){return getQuotedWord(e[0])}},{name:"placement",symbols:[lexer8.has("LEFT_OF")?{type:"LEFT_OF"}:LEFT_OF],postprocess:e=>"LEFT_OF"},{name:"placement",symbols:[lexer8.has("RIGHT_OF")?{type:"RIGHT_OF"}:RIGHT_OF],postprocess:e=>"RIGHT_OF"},{name:"placement",symbols:[lexer8.has("TOP_OF")?{type:"TOP_OF"}:TOP_OF],postprocess:e=>"TOP_OF"},{name:"placement",symbols:[lexer8.has("BOTTOM_OF")?{type:"BOTTOM_OF"}:BOTTOM_OF],postprocess:e=>"BOTTOM_OF"},{name:"multilineNoteText$ebnf$1",symbols:[]},{name:"multilineNoteText$ebnf$1$subexpression$1",symbols:[lexer8.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT]},{name:"multilineNoteText$ebnf$1$subexpression$1",symbols:[lexer8.has("QUOTED_WORD")?{type:"QUOTED_WORD"}:QUOTED_WORD]},{name:"multilineNoteText$ebnf$1$subexpression$1",symbols:[lexer8.has("NL")?{type:"NL"}:NL]},{name:"multilineNoteText$ebnf$1",symbols:["multilineNoteText$ebnf$1","multilineNoteText$ebnf$1$subexpression$1"],postprocess:e=>e[0].concat([e[1]])},{name:"multilineNoteText",symbols:["multilineNoteText$ebnf$1",lexer8.has("END_NOTE")?{type:"END_NOTE"}:END_NOTE],postprocess:function(e){return e[0].map((e=>e.map((e=>tv(e))))).join("")}},{name:"noteStatement$subexpression$1",symbols:[{literal:"note"}]},{name:"noteStatement$subexpression$1",symbols:[lexer8.has("NOTE")?{type:"NOTE"}:NOTE]},{name:"noteStatement$ebnf$1",symbols:[]},{name:"noteStatement$ebnf$1",symbols:["noteStatement$ebnf$1",lexer8.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"noteStatement$ebnf$2",symbols:[]},{name:"noteStatement$ebnf$2",symbols:["noteStatement$ebnf$2",lexer8.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"noteStatement",symbols:["noteStatement$subexpression$1","noteStatement$ebnf$1","placement",lexer8.has("WS")?{type:"WS"}:WS,lexer8.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,"noteStatement$ebnf$2",lexer8.has("COLON")?{type:"COLON"}:COLON,"words",lexer8.has("NL")?{type:"NL"}:NL],postprocess:function(e){const t=e[7].trim();return{type:"note",placement:e[2],target:tv(e[4]).trim(),text:t}}},{name:"noteStatement$subexpression$2",symbols:[{literal:"note"}]},{name:"noteStatement$subexpression$2",symbols:[lexer8.has("START_NOTE")?{type:"START_NOTE"}:START_NOTE]},{name:"noteStatement$ebnf$3",symbols:[]},{name:"noteStatement$ebnf$3",symbols:["noteStatement$ebnf$3",lexer8.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"noteStatement$ebnf$4",symbols:[]},{name:"noteStatement$ebnf$4",symbols:["noteStatement$ebnf$4",lexer8.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"noteStatement$ebnf$5",symbols:[]},{name:"noteStatement$ebnf$5",symbols:["noteStatement$ebnf$5",lexer8.has("WS")?{type:"WS"}:WS],postprocess:e=>e[0].concat([e[1]])},{name:"noteStatement",symbols:["noteStatement$subexpression$2","noteStatement$ebnf$3","placement","noteStatement$ebnf$4",lexer8.has("VALID_TEXT")?{type:"VALID_TEXT"}:VALID_TEXT,"noteStatement$ebnf$5",lexer8.has("NL")?{type:"NL"}:NL,"multilineNoteText",lexer8.has("NL")?{type:"NL"}:NL],postprocess:function(e){const t=e[7];return{type:"note",placement:e[2],target:tv(e[4]).trim(),text:t}}}],ParserStart:"start",ParserOptions:{skipUnmatchSymbols:[lexer8.has("WS")?{type:"WS"}:WS]}},classDiagram_default=grammar8,parse8=genParserWithRules(classDiagram_default,{dedupeAmbigousResults:!0,postProcess:e=>(db_default7.apply(e),e)}),classDiagram={pattern:/^\s*classDiagram/,parser:{parse:e=>(parse8(e),db_default7.getDiagramIR())},artist:artist_default8,configKey:"class",clear(){db_default7.clear()}},HEADER_ELLIPSE_RY=12;function makeDatabaseIcon({width:e,height:t,x:A,y:n}){const l=e/2,r=HEADER_ELLIPSE_RY,a=t/2,o=n-a+r,s=n+a-r,i=makeMark("group",{},{children:[makeMark("path",{path:[["M",A-l,o],["L",A-l,s],["A",l,r,0,1,0,A+l,s],["L",A+l,o]],stroke:PALETTE.normalDark}),makeMark("ellipse",{x:A,y:o,cx:A,cy:n,rx:l,ry:r,stroke:PALETTE.normalDark})]});return makeMark("symbol",{},{mark:i})}function makeDatabaseContainer({width:e,height:t,x:A,y:n}){const l=e/2,r=12,a=t/2,o=n-a-r,s=n+a,i=makeMark("group",{},{children:[makeMark("path",{path:[["M",A-l,o],["L",A-l,s],["A",l,r,0,1,0,A+l,s],["L",A+l,o]],stroke:PALETTE.normalDark}),makeMark("ellipse",{x:A,y:o,cx:A,cy:n,rx:l,ry:r,stroke:PALETTE.normalDark})]});return makeMark("symbol",{},{mark:i,symbolBounds:{left:-l,right:l,top:-(a+24),bottom:a+r,width:e,height:t+36}})}symbolRegistry.register("database",{type:"factory",modes:["container","icon"],symbolMargin:{top:2*HEADER_ELLIPSE_RY},factory:(e,{mode:t})=>"container"===t?makeDatabaseContainer(e):makeDatabaseIcon(e),styleMark(e,t,A){e.children.forEach((e=>{safeAssign(e.attrs,A)}))}});var HEADER_HEIGHT=12;symbolRegistry.register("package",{type:"factory",symbolMargin:{top:HEADER_HEIGHT},factory({width:e,height:t,x:A,y:n}){const l=t/2,r=e/2,a=A-e/2,o=n-l,s=makeMark("group",{},{children:[makeMark("path",{path:[["M",a,o],["L",a,o-12],["L",a+e/2,o-12],["L",a+e/2+4,o]]}),makeMark("rect",{x:a,y:o,width:e,height:t})]});return makeMark("symbol",{},{mark:s,symbolBounds:{left:-r,right:r,top:-12-l,bottom:l,width:e,height:t+12}})},styleMark(e,t,A){e.children.forEach((e=>{safeAssign(e.attrs,A)}))}}),symbolRegistry.register("folder",symbolRegistry.get("package"));var PROJECT_X=12,PROJECT_Y=12;function makeNode(e){const{width:t,height:A,x:n,y:l}=e,r=A/2,a=t/2,o=n-t/2,s=l-r,i=PROJECT_Y,u=makeMark("group",{},{children:[makeMark("path",{lineJoin:"round",path:[["M",o,s],["L",o+PROJECT_X,s-i],["L",o+PROJECT_X+t,s-i],["L",o+t,s],["M",o+PROJECT_X+t,s-i],["L",o+PROJECT_X+t,s-i+A],["L",o+t,s+A],["L",o+t,s]]}),makeMark("rect",{x:o,y:s,width:t,height:A})]});return makeMark("symbol",{},{mark:u,symbolBounds:{left:-a,right:a,top:-i-r,bottom:r,width:t+i,height:A+i}})}function makeCloudIcon({width:e,height:t,x:A,y:n}){const l=makeMark("group",{},{children:[makeMark("path",{lineJoin:"round",lineWidth:3,path:[`M ${A-e/2}${n-t/2-24}`,"m 23.2 12.1 c -0.8 -4.1 -4.4 -7.3 -8.8 -7.3 c -3.5 0 -6.5 2 -8 4.9 c -3.6 0.4 -6.4 3.4 -6.4 7.1 c 0 4 3.2 7.2 7.2 7.2 h 15.6 c 3.3 0 6 -2.7 6 -6 c 0 -3.2 -2.5 -5.8 -5.6 -5.9 z"].join(" ")})]});return makeMark("symbol",{},{mark:l})}function makeCloudContainer({width:e,height:t,x:A,y:n}){const l=e/2+t/2/Math.sqrt(3),r=A-e/2,a=n-t/2,o=makeMark("group",{},{children:[makeMark("path",{lineJoin:"round",lineWidth:3,path:[`M ${r}${a-24+4}`,"m 23.2 12.1 c -0.8 -4.1 -4.4 -7.3 -8.8 -7.3 c -3.5 0 -6.5 2 -8 4.9 c -3.6 0.4 -6.4 3.4 -6.4 7.1 c 0 4 3.2 7.2 7.2 7.2 h 15.6 c 3.3 0 6 -2.7 6 -6 c 0 -3.2 -2.5 -5.8 -5.6 -5.9 z"].join(" ")}),makeMark("rect",{x:r,y:a,width:e,height:t})]});return makeMark("symbol",{},{mark:o,symbolBounds:{left:-l/2,right:l/2,top:-t/2,bottom:t/2,width:l,height:t}})}function makeIcon({width:e,height:t,x:A,y:n}){const l=Math.min(e,t)/5,r=A-1.5*l,a=A+1.5*l,o=1*l,s=2*l,i=makeMark("group",{},{children:[makeMark("circle",{r:l,x:A,y:n-t/2+l,width:e,height:t}),makeMark("path",{path:[["M",r,n+l/3],["L",a,n+l/3],["M",A,n-l/2],["L",A,n+o],["l",-l,s],["l",l,-s],["l",l,s]]})]});return makeMark("symbol",{},{mark:i})}function makeEllipseContainer({width:e,height:t,x:A,y:n}){const l=t/2+8,r=makeMark("group",{},{children:[makeMark("ellipse",{rx:e/2+10,ry:l,x:A,y:n,cx:A,cy:n})]});return makeMark("symbol",{},{mark:r,symbolBounds:{left:A-10,right:A+10,top:n-l,bottom:n+l,width:e+20,height:t+16}})}function makeContainer({width:e,height:t,x:A,y:n}){const l=e/2+10,r=makeMark("group",{},{children:[makeMark("circle",{r:l,x:A,y:n})]});return makeMark("symbol",{},{mark:r,symbolBounds:{left:A-10,right:A+10,top:n-l,bottom:n+l,width:e+20,height:t+20}})}function makeContainer2({width:e,height:t,x:A,y:n}){const l=t+6,r=l*e/t/2,a=r-e/2,o=makeMark("group",{},{children:[makeMark("path",{path:[["M",A,n],["M",A-r,n],["L",A,n+l],["L",A+r,n],["L",A,n-l],["Z"]]})]});return makeMark("symbol",{},{mark:o,symbolBounds:{left:A-a,right:A+a,top:n-l,bottom:n+l,width:2*r,height:2*l}})}function makeIcon2({width:e,height:t,x:A,y:n}){const l=t/2,r=e/2,a=makeMark("group",{},{children:[makeMark("path",{path:[["M",A,n],["m",-r,0],["l",r,l],["l",r,-l],["l",-r,-l],["Z"]]})]});return makeMark("symbol",{},{mark:a})}symbolRegistry.register("node",{type:"factory",modes:["container","icon"],symbolMargin:{top:PROJECT_Y,right:PROJECT_X},factory(e,{mode:t}){if("icon"===t){const t=e.height-PROJECT_Y;return makeNode({x:e.x,y:e.y+PROJECT_Y/2,width:clamp(e.width-PROJECT_X,.6*e.width,t),height:t})}return makeNode(e)},styleMark(e,t,A){e.children.forEach((e=>{safeAssign(e.attrs,A)}))}}),symbolRegistry.register("cloud",{type:"factory",symbolMargin:{top:20},factory:(e,{mode:t})=>"container"===t?makeCloudContainer(e):makeCloudIcon(e),styleMark(e,t,A){e.children.forEach((e=>{safeAssign(e.attrs,A)}))}}),symbolRegistry.register("actor",{type:"factory",modes:["icon"],factory:e=>makeIcon(e),styleMark(e,t,A){e.children.forEach((e=>{safeAssign(e.attrs,A),"path"===e.type&&(e.attrs.fill=null),e.attrs.lineWidth=Math.max(A.lineWidth||0,1.5)}))}}),symbolRegistry.register("ellipse",{type:"factory",factory(e,{mode:t}){if("container"===t)return makeEllipseContainer(e)},styleMark(e,t,A){e.children.forEach((e=>{safeAssign(e.attrs,A)}))}}),symbolRegistry.register("circle",{type:"factory",factory(e,{mode:t}){if("container"===t)return makeContainer(e)},styleMark(e,t,A){e.children.forEach((e=>{safeAssign(e.attrs,A)}))}}),symbolRegistry.register("diamond",{type:"factory",factory:(e,{mode:t})=>"container"===t?makeContainer2(e):makeIcon2(e),styleMark(e,t,A){e.children.forEach((e=>{safeAssign(e.attrs,A)}))}});var DIAGRAMS={erDiagram:erDiagram,sequenceDiagram:sequenceDiagram,componentDiagram:componentDiagram,activityDiagram:activityDiagram,mindmap:mindmap,gantt:gantt,dotDiagram:dotDiagram,classDiagram:classDiagram},Stack3=class{constructor(){this.list=[]}top(){return this.list[this.list.length-1]}push(e){this.list.push(e)}pop(){return this.list.pop()}clear(){this.list=[]}},noop3=()=>{},GraphicEvent=class{constructor(e){this.type=e.type,this.gEvent=e}get originEvent(){return this.gEvent.originalEvent}get x(){return this.gEvent.x}get y(){return this.gEvent.y}get clientX(){return this.gEvent.clientX}get clientY(){return this.gEvent.clientY}};function traverseScene(e,t,A){const n=t[e.type]||t.default;let l,r;n&&("function"==typeof n?l=n:(l=n.enter,r=n.exit)),l&&l(e,A),"group"===e.type&&e.children?e.children.forEach((e=>{traverseScene(e,t,A)})):"symbol"===e.type&&traverseScene(e.mark,t,A),r&&r(e,A)}var BaseRenderer=class{constructor(e){this.ir=e,this.container=null,this.shapeToMarkMap=new WeakMap}setContainer(e){this.gcvs&&this.gcvs.destroy(),this.container=e;const t=new(this.getCanvasClass())({container:e,width:this.ir.width,height:this.ir.height});return this.gcvs=t,this}getRootElement(){if(this.gcvs)return this.gcvs.cfg.el}addBgShape(){var e;this.ir.bgColor&&(null===(e=this.gcvs)||void 0===e||e.addShape("rect",{attrs:{width:this.ir.width,height:this.ir.height,fill:this.ir.bgColor}}))}renderGCanvas(){const e=this.gcvs;if(!e)return;e.clear();const t=this;this.addBgShape();const A=new Stack3,n={addToCurrentGroup(n){const l=A.top()||e,r=t.preProcessMarkAttrs(n),a=l.addShape(n.type,{attrs:r});return t.onShapeAdd(a,n),a},applyMarkPostProcess(e,t){e.matrix&&t.setMatrix(e.matrix)}};traverseScene(this.ir.mark,{group:{enter(l){const r=(A.top()||e).addGroup();A.push(r),t.onShapeAdd(r,l),n.applyMarkPostProcess(l,r)},exit(){A.pop()}},symbol:{enter(){}},default(e){const t=n.addToCurrentGroup(e);n.applyMarkPostProcess(e,t)}},n)}on(e,t){if(!this.gcvs)return noop3;const A=this.gcvs,n=e=>{const A=this.shapeToMarkMap.get(e.shape),n=e.propagationPath.reduce(((e,t)=>{const A=this.shapeToMarkMap.get(t);return A&&e.push(A),e}),[]),l=new GraphicEvent(e);l.mark=A,l.markPath=n,t(l)};return A.on(e,n),()=>{A.off(e,n)}}preProcessMarkAttrs(e){return e.attrs}onShapeAdd(e,t){this.shapeToMarkMap.set(e,t)}render(){this.renderGCanvas()}},shape_exports={};__export(shape_exports,{Base:()=>base_default2,Circle:()=>circle_default2,Dom:()=>dom_default,Ellipse:()=>ellipse_default3,Image:()=>image_default,Line:()=>line_default4,Marker:()=>marker_default,Path:()=>path_default3,Polygon:()=>polygon_default3,Polyline:()=>polyline_default3,Rect:()=>rect_default2,Text:()=>text_default2});var extendStatics=function(e,t){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var A in t)Object.prototype.hasOwnProperty.call(t,A)&&(e[A]=t[A])})(e,t)};function __extends(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function A(){this.constructor=e}extendStatics(e,t),e.prototype=null===t?Object.create(t):(A.prototype=t.prototype,new A)}var __assign=function(){return __assign=Object.assign||function(e){for(var t,A=1,n=arguments.length;A<n;A++)for(var l in t=arguments[A])Object.prototype.hasOwnProperty.call(t,l)&&(e[l]=t[l]);return e},__assign.apply(this,arguments)};function __decorate(e,t,A,n){var l,r=arguments.length,a=r<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,A):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,A,n);else for(var o=e.length-1;o>=0;o--)(l=e[o])&&(a=(r<3?l(a):r>3?l(t,A,a):l(t,A))||a);return r>3&&a&&Object.defineProperty(t,A,a),a}function __spreadArrays(){for(var e=0,t=0,A=arguments.length;t<A;t++)e+=arguments[t].length;var n=Array(e),l=0;for(t=0;t<A;t++)for(var r=arguments[t],a=0,o=r.length;a<o;a++,l++)n[l]=r[a];return n}var isArrayLike3=function(e){return null!==e&&"function"!=typeof e&&isFinite(e.length)},is_array_like_default=isArrayLike3,toString3={}.toString,isType=function(e,t){return toString3.call(e)==="[object "+t+"]"},is_type_default=isType,is_function_default=function(e){return is_type_default(e,"Function")},isNil=function(e){return null==e},is_nil_default=isNil,is_array_default=function(e){return Array.isArray?Array.isArray(e):is_type_default(e,"Array")},is_object_default=function(e){var t=typeof e;return null!==e&&"object"===t||"function"===t};function each(e,t){if(e)if(is_array_default(e))for(var A=0,n=e.length;A<n&&!1!==t(e[A],A);A++);else if(is_object_default(e))for(var l in e)if(e.hasOwnProperty(l)&&!1===t(e[l],l))break}var each_default=each,isObjectLike3=function(e){return"object"==typeof e&&null!==e},is_object_like_default=isObjectLike3,max_default=function(e){if(is_array_default(e))return e.reduce((function(e,t){return Math.max(e,t)}),e[0])},min_default=function(e){if(is_array_default(e))return e.reduce((function(e,t){return Math.min(e,t)}),e[0])},arrPrototype=Array.prototype,splice3=arrPrototype.splice,indexOf=arrPrototype.indexOf,splice4=Array.prototype.splice,is_string_default=function(e){return is_type_default(e,"String")},isNumber2=function(e){return is_type_default(e,"Number")},is_number_default=isNumber2,isInteger=Number.isInteger?Number.isInteger:function(e){return is_number_default(e)&&e%1==0},PRECISION=1e-5;function isNumberEqual(e,t,A){return void 0===A&&(A=PRECISION),Math.abs(e-t)<A}var mod=function(e,t){return(e%t+t)%t},mod_default=mod,DEGREE=180/Math.PI,RADIAN=Math.PI/180,toRadian=function(e){return RADIAN*e},to_radian_default=toRadian,values3=Object.values?function(e){return Object.values(e)}:function(e){var t=[];return each_default(e,(function(A,n){is_function_default(e)&&"prototype"===n||t.push(A)})),t},values_default=values3,to_string_default=function(e){return is_nil_default(e)?"":e.toString()},upperFirst=function(e){var t=to_string_default(e);return t.charAt(0).toUpperCase()+t.substring(1)},upper_first_default=upperFirst,toString4={}.toString,objectProto3=Object.prototype;function _mix(e,t){for(var A in t)t.hasOwnProperty(A)&&"constructor"!==A&&void 0!==t[A]&&(e[A]=t[A])}function mix(e,t,A,n){return t&&_mix(e,t),A&&_mix(e,A),n&&_mix(e,n),e}var memoize_default=function(e,t){if(!is_function_default(e))throw new TypeError("Expected a function");var A=function(){for(var n=[],l=0;l<arguments.length;l++)n[l]=arguments[l];var r=t?t.apply(this,n):n[0],a=A.cache;if(a.has(r))return a.get(r);var o=e.apply(this,n);return a.set(r,o),o};return A.cache=new Map,A},isEqual=function(e,t){if(e===t)return!0;if(!e||!t)return!1;if(is_string_default(e)||is_string_default(t))return!1;if(is_array_like_default(e)||is_array_like_default(t)){if(e.length!==t.length)return!1;for(var A=!0,n=0;n<e.length&&(A=isEqual(e[n],t[n]));n++);return A}if(is_object_like_default(e)||is_object_like_default(t)){var l=Object.keys(e),r=Object.keys(t);if(l.length!==r.length)return!1;for(A=!0,n=0;n<l.length&&(A=isEqual(e[l[n]],t[l[n]]));n++);return A}return!1},is_equal_default=isEqual,to_array_default=function(e){return is_array_like_default(e)?Array.prototype.slice.call(e):[]},map3={},unique_id_default=function(e){return map3[e=e||"g"]?map3[e]+=1:map3[e]=1,e+map3[e]},noop_default=function(){},ctx,measure_text_width_default=memoize_default((function(e,t){void 0===t&&(t={});var A=t.fontSize,n=t.fontFamily,l=t.fontWeight,r=t.fontStyle,a=t.fontVariant;return ctx||(ctx=document.createElement("canvas").getContext("2d")),ctx.font=[r,a,l,A+"px",n].join(" "),ctx.measureText(is_string_default(e)?e:"").width}),(function(e,t){return void 0===t&&(t={}),__spreadArrays([e],values_default(t)).join("")})),default_1=function(){function e(){this.map={}}return e.prototype.has=function(e){return void 0!==this.map[e]},e.prototype.get=function(e,t){var A=this.map[e];return void 0===A?t:A},e.prototype.set=function(e,t){this.map[e]=t},e.prototype.clear=function(){this.map={}},e.prototype.delete=function(e){delete this.map[e]},e.prototype.size=function(){return Object.keys(this.map).length},e}(),SPACES="\t\n\v\f\r   ᠎             　\u2028\u2029",PATH_COMMAND=new RegExp("([a-z])["+SPACES+",]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?["+SPACES+"]*,?["+SPACES+"]*)+)","ig"),PATH_VALUES=new RegExp("(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)["+SPACES+"]*,?["+SPACES+"]*","ig"),parsePathString=function(e){if(!e)return null;if(is_array_default(e))return e;var t={a:7,c:6,o:2,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,u:3,z:0},A=[];return String(e).replace(PATH_COMMAND,(function(n,l,r){var a=[],o=l.toLowerCase();if(r.replace(PATH_VALUES,(function(e,t){t&&a.push(+t)})),"m"===o&&a.length>2&&(A.push([l].concat(a.splice(0,2))),o="l",l="m"===l?"l":"L"),"o"===o&&1===a.length&&A.push([l,a[0]]),"r"===o)A.push([l].concat(a));else for(;a.length>=t[o]&&(A.push([l].concat(a.splice(0,t[o]))),t[o]););return e})),A},isEqual2=function(e,t){if(e.length!==t.length)return!1;var A=!0;return each_default(e,(function(e,n){if(e!==t[n])return A=!1,!1})),A};function getMinDiff(e,t,A){var n=null,l=A;return t<l&&(l=t,n="add"),e<l&&(l=e,n="del"),{type:n,min:l}}var levenshteinDistance=function(e,t){var A,n,l=e.length,r=t.length,a=0;if(0===l||0===r)return null;for(var o=[],s=0;s<=l;s++)o[s]=[],o[s][0]={min:s};for(var i=0;i<=r;i++)o[0][i]={min:i};for(s=1;s<=l;s++){A=e[s-1];for(i=1;i<=r;i++){n=t[i-1],a=isEqual2(A,n)?0:1;var u=o[s-1][i].min+1,c=o[s][i-1].min+1,h=o[s-1][i-1].min+a;o[s][i]=getMinDiff(u,c,h)}}return o},fillPathByDiff=function(e,t){var A=levenshteinDistance(e,t),n=e.length,l=t.length,r=[],a=1,o=1;if(A[n][l].min!==n){for(var s=1;s<=n;s++){var i=A[s][s].min;o=s;for(var u=a;u<=l;u++)A[s][u].min<i&&(i=A[s][u].min,o=u);a=o,A[s][a].type&&r.push({index:s-1,type:A[s][a].type})}for(s=r.length-1;s>=0;s--)a=r[s].index,"add"===r[s].type?e.splice(a,0,[].concat(e[a])):e.splice(a,1)}var c=l-(n=e.length);if(n<l)for(s=0;s<c;s++)"z"===e[n-1][0]||"Z"===e[n-1][0]?e.splice(n-2,0,e[n-2]):e.push(e[n-1]),n+=1;return e};function _splitPoints(e,t,A){for(var n,l=[].concat(e),r=1/(A+1),a=_getSegmentPoints(t)[0],o=1;o<=A;o++)r*=o,0===(n=Math.floor(e.length*r))?l.unshift([a[0]*r+e[n][0]*(1-r),a[1]*r+e[n][1]*(1-r)]):l.splice(n,0,[a[0]*r+e[n][0]*(1-r),a[1]*r+e[n][1]*(1-r)]);return l}function _getSegmentPoints(e){var t=[];switch(e[0]){case"M":case"L":case"T":t.push([e[1],e[2]]);break;case"A":t.push([e[6],e[7]]);break;case"Q":case"S":t.push([e[3],e[4]]),t.push([e[1],e[2]]);break;case"C":t.push([e[5],e[6]]),t.push([e[1],e[2]]),t.push([e[3],e[4]]);break;case"H":case"V":t.push([e[1],e[1]])}return t}var formatPath=function(e,t){if(e.length<=1)return e;for(var A,n=0;n<t.length;n++)if(e[n][0]!==t[n][0])switch(A=_getSegmentPoints(e[n]),t[n][0]){case"M":e[n]=["M"].concat(A[0]);break;case"L":e[n]=["L"].concat(A[0]);break;case"A":e[n]=[].concat(t[n]),e[n][6]=A[0][0],e[n][7]=A[0][1];break;case"Q":if(A.length<2){if(!(n>0)){e[n]=t[n];break}A=_splitPoints(A,e[n-1],1)}e[n]=["Q"].concat(A.reduce((function(e,t){return e.concat(t)}),[]));break;case"T":e[n]=["T"].concat(A[0]);break;case"C":if(A.length<3){if(!(n>0)){e[n]=t[n];break}A=_splitPoints(A,e[n-1],2)}e[n]=["C"].concat(A.reduce((function(e,t){return e.concat(t)}),[]));break;case"S":if(A.length<2){if(!(n>0)){e[n]=t[n];break}A=_splitPoints(A,e[n-1],1)}e[n]=["S"].concat(A.reduce((function(e,t){return e.concat(t)}),[]));break;default:e[n]=t[n]}return e},GraphEvent=function(){function e(e,t){this.bubbles=!0,this.target=null,this.currentTarget=null,this.delegateTarget=null,this.delegateObject=null,this.defaultPrevented=!1,this.propagationStopped=!1,this.shape=null,this.fromShape=null,this.toShape=null,this.propagationPath=[],this.type=e,this.name=e,this.originalEvent=t,this.timeStamp=t.timeStamp}return e.prototype.preventDefault=function(){this.defaultPrevented=!0,this.originalEvent.preventDefault&&this.originalEvent.preventDefault()},e.prototype.stopPropagation=function(){this.propagationStopped=!0},e.prototype.toString=function(){return"[Event (type="+this.type+")]"},e.prototype.save=function(){},e.prototype.restore=function(){},e}(),graph_event_default=GraphEvent;function removeFromArray(e,t){var A=e.indexOf(t);-1!==A&&e.splice(A,1)}var isBrowser="undefined"!=typeof window&&void 0!==window.document;function isParent(e,t){if(e.isCanvas())return!0;for(var A=t.getParent(),n=!1;A;){if(A===e){n=!0;break}A=A.getParent()}return n}function isAllowCapture(e){return e.cfg.visible&&e.cfg.capture}var Base=function(e){function t(t){var A=e.call(this)||this;A.destroyed=!1;var n=A.getDefaultCfg();return A.cfg=mix(n,t),A}return __extends(t,e),t.prototype.getDefaultCfg=function(){return{}},t.prototype.get=function(e){return this.cfg[e]},t.prototype.set=function(e,t){this.cfg[e]=t},t.prototype.destroy=function(){this.cfg={destroyed:!0},this.off(),this.destroyed=!0},t}(esm_default),base_default=Base,__spreadArray=function(e,t,A){if(A||2===arguments.length)for(var n,l=0,r=t.length;l<r;l++)!n&&l in t||(n||(n=Array.prototype.slice.call(t,0,l)),n[l]=t[l]);return e.concat(n||Array.prototype.slice.call(t))},BrowserInfo=function(e,t,A){this.name=e,this.version=t,this.os=A,this.type="browser"},NodeInfo=function(e){this.version=e,this.type="node",this.name="node",this.os=process.platform},SearchBotDeviceInfo=function(e,t,A,n){this.name=e,this.version=t,this.os=A,this.bot=n,this.type="bot-device"},BotInfo=function(){this.type="bot",this.bot=!0,this.name="bot",this.version=null,this.os=null},ReactNativeInfo=function(){this.type="react-native",this.name="react-native",this.version=null,this.os=null},SEARCHBOX_UA_REGEX=/alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/,SEARCHBOT_OS_REGEX=/(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/,REQUIRED_VERSION_PARTS=3,userAgentRules=[["aol",/AOLShield\/([0-9\._]+)/],["edge",/Edge\/([0-9\._]+)/],["edge-ios",/EdgiOS\/([0-9\._]+)/],["yandexbrowser",/YaBrowser\/([0-9\._]+)/],["kakaotalk",/KAKAOTALK\s([0-9\.]+)/],["samsung",/SamsungBrowser\/([0-9\.]+)/],["silk",/\bSilk\/([0-9._-]+)\b/],["miui",/MiuiBrowser\/([0-9\.]+)$/],["beaker",/BeakerBrowser\/([0-9\.]+)/],["edge-chromium",/EdgA?\/([0-9\.]+)/],["chromium-webview",/(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],["chrome",/(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],["phantomjs",/PhantomJS\/([0-9\.]+)(:?\s|$)/],["crios",/CriOS\/([0-9\.]+)(:?\s|$)/],["firefox",/Firefox\/([0-9\.]+)(?:\s|$)/],["fxios",/FxiOS\/([0-9\.]+)/],["opera-mini",/Opera Mini.*Version\/([0-9\.]+)/],["opera",/Opera\/([0-9\.]+)(?:\s|$)/],["opera",/OPR\/([0-9\.]+)(:?\s|$)/],["pie",/^Microsoft Pocket Internet Explorer\/(\d+\.\d+)$/],["pie",/^Mozilla\/\d\.\d+\s\(compatible;\s(?:MSP?IE|MSInternet Explorer) (\d+\.\d+);.*Windows CE.*\)$/],["netfront",/^Mozilla\/\d\.\d+.*NetFront\/(\d.\d)/],["ie",/Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],["ie",/MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],["ie",/MSIE\s(7\.0)/],["bb10",/BB10;\sTouch.*Version\/([0-9\.]+)/],["android",/Android\s([0-9\.]+)/],["ios",/Version\/([0-9\._]+).*Mobile.*Safari.*/],["safari",/Version\/([0-9\._]+).*Safari/],["facebook",/FB[AS]V\/([0-9\.]+)/],["instagram",/Instagram\s([0-9\.]+)/],["ios-webview",/AppleWebKit\/([0-9\.]+).*Mobile/],["ios-webview",/AppleWebKit\/([0-9\.]+).*Gecko\)$/],["curl",/^curl\/([0-9\.]+)$/],["searchbot",SEARCHBOX_UA_REGEX]],operatingSystemRules=[["iOS",/iP(hone|od|ad)/],["Android OS",/Android/],["BlackBerry OS",/BlackBerry|BB10/],["Windows Mobile",/IEMobile/],["Amazon OS",/Kindle/],["Windows 3.11",/Win16/],["Windows 95",/(Windows 95)|(Win95)|(Windows_95)/],["Windows 98",/(Windows 98)|(Win98)/],["Windows 2000",/(Windows NT 5.0)|(Windows 2000)/],["Windows XP",/(Windows NT 5.1)|(Windows XP)/],["Windows Server 2003",/(Windows NT 5.2)/],["Windows Vista",/(Windows NT 6.0)/],["Windows 7",/(Windows NT 6.1)/],["Windows 8",/(Windows NT 6.2)/],["Windows 8.1",/(Windows NT 6.3)/],["Windows 10",/(Windows NT 10.0)/],["Windows ME",/Windows ME/],["Windows CE",/Windows CE|WinCE|Microsoft Pocket Internet Explorer/],["Open BSD",/OpenBSD/],["Sun OS",/SunOS/],["Chrome OS",/CrOS/],["Linux",/(Linux)|(X11)/],["Mac OS",/(Mac_PowerPC)|(Macintosh)/],["QNX",/QNX/],["BeOS",/BeOS/],["OS/2",/OS\/2/]];function detect(e){return e?parseUserAgent(e):void 0===document&&"undefined"!=typeof navigator&&"ReactNative"===navigator.product?new ReactNativeInfo:"undefined"!=typeof navigator?parseUserAgent(navigator.userAgent):getNodeVersion()}function matchUserAgent(e){return""!==e&&userAgentRules.reduce((function(t,A){var n=A[0],l=A[1];if(t)return t;var r=l.exec(e);return!!r&&[n,r]}),!1)}function parseUserAgent(e){var t=matchUserAgent(e);if(!t)return null;var A=t[0],n=t[1];if("searchbot"===A)return new BotInfo;var l=n[1]&&n[1].split(".").join("_").split("_").slice(0,3);l?l.length<REQUIRED_VERSION_PARTS&&(l=__spreadArray(__spreadArray([],l,!0),createVersionParts(REQUIRED_VERSION_PARTS-l.length),!0)):l=[];var r=l.join("."),a=detectOS(e),o=SEARCHBOT_OS_REGEX.exec(e);return o&&o[1]?new SearchBotDeviceInfo(A,r,a,o[1]):new BrowserInfo(A,r,a)}function detectOS(e){for(var t=0,A=operatingSystemRules.length;t<A;t++){var n=operatingSystemRules[t],l=n[0];if(n[1].exec(e))return l}return null}function getNodeVersion(){return"undefined"!=typeof process&&process.version?new NodeInfo(process.version.slice(1)):null}function createVersionParts(e){for(var t=[],A=0;A<e;A++)t.push("0");return t}var ext_exports2={};function leftTranslate2(e,t,A){var n=[0,0,0,0,0,0,0,0,0];return mat3_exports.fromTranslation(n,A),mat3_exports.multiply(e,n,t)}function leftRotate3(e,t,A){var n=[0,0,0,0,0,0,0,0,0];return mat3_exports.fromRotation(n,A),mat3_exports.multiply(e,n,t)}function leftScale3(e,t,A){var n=[0,0,0,0,0,0,0,0,0];return mat3_exports.fromScaling(n,A),mat3_exports.multiply(e,n,t)}function leftMultiply2(e,t,A){return mat3_exports.multiply(e,A,t)}function transform5(e,t){for(var A=e?[].concat(e):[1,0,0,0,1,0,0,0,1],n=0,l=t.length;n<l;n++){var r=t[n];switch(r[0]){case"t":leftTranslate2(A,A,[r[1],r[2]]);break;case"s":leftScale3(A,A,[r[1],r[2]]);break;case"r":leftRotate3(A,A,r[1]);break;case"m":leftMultiply2(A,A,r[1])}}return A}function direction2(e,t){return e[0]*t[1]-t[0]*e[1]}function angleTo2(e,t,A){var n=vec2_exports.angle(e,t),l=direction2(e,t)>=0;return A?l?2*Math.PI-n:n:l?n:2*Math.PI-n}function vertical2(e,t,A){return A?(e[0]=t[1],e[1]=-1*t[0]):(e[0]=-1*t[1],e[1]=t[0]),e}function multiplyMatrix(e,t){var A=[],n=e[0],l=e[1],r=e[2],a=e[3],o=e[4],s=e[5],i=e[6],u=e[7],c=e[8],h=t[0],f=t[1],g=t[2],d=t[3],p=t[4],B=t[5],E=t[6],m=t[7],b=t[8];return A[0]=h*n+f*a+g*i,A[1]=h*l+f*o+g*u,A[2]=h*r+f*s+g*c,A[3]=d*n+p*a+B*i,A[4]=d*l+p*o+B*u,A[5]=d*r+p*s+B*c,A[6]=E*n+m*a+b*i,A[7]=E*l+m*o+b*u,A[8]=E*r+m*s+b*c,A}function multiplyVec2(e,t){var A=[],n=t[0],l=t[1];return A[0]=e[0]*n+e[3]*l+e[6],A[1]=e[1]*n+e[4]*l+e[7],A}function invert2(e){var t=[],A=e[0],n=e[1],l=e[2],r=e[3],a=e[4],o=e[5],s=e[6],i=e[7],u=e[8],c=u*a-o*i,h=-u*r+o*s,f=i*r-a*s,g=A*c+n*h+l*f;return g?(g=1/g,t[0]=c*g,t[1]=(-u*n+l*i)*g,t[2]=(o*n-l*a)*g,t[3]=h*g,t[4]=(u*A-l*s)*g,t[5]=(-o*A+l*r)*g,t[6]=f*g,t[7]=(-i*A+n*s)*g,t[8]=(a*A-n*r)*g,t):null}__export(ext_exports2,{angleTo:()=>angleTo2,direction:()=>direction2,leftRotate:()=>leftRotate3,leftScale:()=>leftScale3,leftTranslate:()=>leftTranslate2,transform:()=>transform5,vertical:()=>vertical2});var transform6=ext_exports2.transform,MATRIX="matrix",CLONE_CFGS=["zIndex","capture","visible","type"],RESERVED_PORPS=["repeat"],DELEGATION_SPLIT=":",WILDCARD2="*";function _cloneArrayAttr(e){for(var t=[],A=0;A<e.length;A++)is_array_default(e[A])?t.push([].concat(e[A])):t.push(e[A]);return t}function getFormatFromAttrs(e,t){var A={},n=t.attrs;for(var l in e)A[l]=n[l];return A}function getFormatToAttrs(e,t){var A={},n=t.attr();return each_default(e,(function(e,t){-1!==RESERVED_PORPS.indexOf(t)||is_equal_default(n[t],e)||(A[t]=e)})),A}function checkExistedAttrs(e,t){if(t.onFrame)return e;var A=t.startTime,n=t.delay,l=t.duration,r=Object.prototype.hasOwnProperty;return each_default(e,(function(e){A+n<e.startTime+e.delay+e.duration&&l>e.delay&&each_default(t.toAttrs,(function(t,A){r.call(e.toAttrs,A)&&(delete e.toAttrs[A],delete e.fromAttrs[A])}))})),e}var Element2=function(e){function t(t){var A=e.call(this,t)||this;A.attrs={};var n=A.getDefaultAttrs();return mix(n,t.attrs),A.attrs=n,A.initAttrs(n),A.initAnimate(),A}return __extends(t,e),t.prototype.getDefaultCfg=function(){return{visible:!0,capture:!0,zIndex:0}},t.prototype.getDefaultAttrs=function(){return{matrix:this.getDefaultMatrix(),opacity:1}},t.prototype.onCanvasChange=function(e){},t.prototype.initAttrs=function(e){},t.prototype.initAnimate=function(){this.set("animable",!0),this.set("animating",!1)},t.prototype.isGroup=function(){return!1},t.prototype.getParent=function(){return this.get("parent")},t.prototype.getCanvas=function(){return this.get("canvas")},t.prototype.attr=function(){for(var e,t=[],A=0;A<arguments.length;A++)t[A]=arguments[A];var n=t[0],l=t[1];if(!n)return this.attrs;if(is_object_default(n)){for(var r in n)this.setAttr(r,n[r]);return this.afterAttrsChange(n),this}return 2===t.length?(this.setAttr(n,l),this.afterAttrsChange(((e={})[n]=l,e)),this):this.attrs[n]},t.prototype.isClipped=function(e,t){var A=this.getClip();return A&&!A.isHit(e,t)},t.prototype.setAttr=function(e,t){var A=this.attrs[e];A!==t&&(this.attrs[e]=t,this.onAttrChange(e,t,A))},t.prototype.onAttrChange=function(e,t,A){"matrix"===e&&this.set("totalMatrix",null)},t.prototype.afterAttrsChange=function(e){if(this.cfg.isClipShape){var t=this.cfg.applyTo;t&&t.onCanvasChange("clip")}else this.onCanvasChange("attr")},t.prototype.show=function(){return this.set("visible",!0),this.onCanvasChange("show"),this},t.prototype.hide=function(){return this.set("visible",!1),this.onCanvasChange("hide"),this},t.prototype.setZIndex=function(e){this.set("zIndex",e);var t=this.getParent();return t&&t.sort(),this},t.prototype.toFront=function(){var e=this.getParent();if(e){var t=e.getChildren(),A=(this.get("el"),t.indexOf(this));t.splice(A,1),t.push(this),this.onCanvasChange("zIndex")}},t.prototype.toBack=function(){var e=this.getParent();if(e){var t=e.getChildren(),A=(this.get("el"),t.indexOf(this));t.splice(A,1),t.unshift(this),this.onCanvasChange("zIndex")}},t.prototype.remove=function(e){void 0===e&&(e=!0);var t=this.getParent();t?(removeFromArray(t.getChildren(),this),t.get("clearing")||this.onCanvasChange("remove")):this.onCanvasChange("remove"),e&&this.destroy()},t.prototype.resetMatrix=function(){this.attr(MATRIX,this.getDefaultMatrix()),this.onCanvasChange("matrix")},t.prototype.getMatrix=function(){return this.attr(MATRIX)},t.prototype.setMatrix=function(e){this.attr(MATRIX,e),this.onCanvasChange("matrix")},t.prototype.getTotalMatrix=function(){var e=this.cfg.totalMatrix;if(!e){var t=this.attr("matrix"),A=this.cfg.parentMatrix;e=A&&t?multiplyMatrix(A,t):t||A,this.set("totalMatrix",e)}return e},t.prototype.applyMatrix=function(e){var t=this.attr("matrix"),A=null;A=e&&t?multiplyMatrix(e,t):t||e,this.set("totalMatrix",A),this.set("parentMatrix",e)},t.prototype.getDefaultMatrix=function(){return null},t.prototype.applyToMatrix=function(e){var t=this.attr("matrix");return t?multiplyVec2(t,e):e},t.prototype.invertFromMatrix=function(e){var t=this.attr("matrix");if(t){var A=invert2(t);if(A)return multiplyVec2(A,e)}return e},t.prototype.setClip=function(e){var t=this.getCanvas(),A=null;if(e){var n=this.getShapeBase()[upper_first_default(e.type)];n&&(A=new n({type:e.type,isClipShape:!0,applyTo:this,attrs:e.attrs,canvas:t}))}return this.set("clipShape",A),this.onCanvasChange("clip"),A},t.prototype.getClip=function(){var e=this.cfg.clipShape;return e||null},t.prototype.clone=function(){var e=this,t=this.attrs,A={};each_default(t,(function(e,n){is_array_default(t[n])?A[n]=_cloneArrayAttr(t[n]):A[n]=t[n]}));var n=new(0,this.constructor)({attrs:A});return each_default(CLONE_CFGS,(function(t){n.set(t,e.get(t))})),n},t.prototype.destroy=function(){this.destroyed||(this.attrs={},e.prototype.destroy.call(this))},t.prototype.isAnimatePaused=function(){return this.get("_pause").isPaused},t.prototype.animate=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];if(this.get("timeline")||this.get("canvas")){this.set("animating",!0);var A=this.get("timeline");A||(A=this.get("canvas").get("timeline"),this.set("timeline",A));var n=this.get("animations")||[];A.timer||A.initTimer();var l,r,a,o,s,i=e[0],u=e[1],c=e[2],h=void 0===c?"easeLinear":c,f=e[3],g=void 0===f?noop_default:f,d=e[4],p=void 0===d?0:d;is_function_default(i)?(l=i,i={}):is_object_default(i)&&i.onFrame&&(l=i.onFrame,r=i.repeat),is_object_default(u)?(u=(s=u).duration,h=s.easing||"easeLinear",p=s.delay||0,r=s.repeat||r||!1,g=s.callback||noop_default,a=s.pauseCallback||noop_default,o=s.resumeCallback||noop_default):(is_number_default(g)&&(p=g,g=null),is_function_default(h)?(g=h,h="easeLinear"):h=h||"easeLinear");var B=getFormatToAttrs(i,this),E={fromAttrs:getFormatFromAttrs(B,this),toAttrs:B,duration:u,easing:h,repeat:r,callback:g,pauseCallback:a,resumeCallback:o,delay:p,startTime:A.getTime(),id:unique_id_default(),onFrame:l,pathFormatted:!1};n.length>0?n=checkExistedAttrs(n,E):A.addAnimator(this),n.push(E),this.set("animations",n),this.set("_pause",{isPaused:!1})}},t.prototype.stopAnimate=function(e){var t=this;void 0===e&&(e=!0);var A=this.get("animations");each_default(A,(function(A){e&&(A.onFrame?t.attr(A.onFrame(1)):t.attr(A.toAttrs)),A.callback&&A.callback()})),this.set("animating",!1),this.set("animations",[])},t.prototype.pauseAnimate=function(){var e=this.get("timeline"),t=this.get("animations"),A=e.getTime();return each_default(t,(function(e){e._paused=!0,e._pauseTime=A,e.pauseCallback&&e.pauseCallback()})),this.set("_pause",{isPaused:!0,pauseTime:A}),this},t.prototype.resumeAnimate=function(){var e=this.get("timeline").getTime(),t=this.get("animations"),A=this.get("_pause").pauseTime;return each_default(t,(function(t){t.startTime=t.startTime+(e-A),t._paused=!1,t._pauseTime=null,t.resumeCallback&&t.resumeCallback()})),this.set("_pause",{isPaused:!1}),this.set("animations",t),this},t.prototype.emitDelegation=function(e,t){var A,n=this,l=t.propagationPath;this.getEvents();"mouseenter"===e?A=t.fromShape:"mouseleave"===e&&(A=t.toShape);for(var r=function(e){var r=l[e],o=r.get("name");if(o){if((r.isGroup()||r.isCanvas&&r.isCanvas())&&A&&isParent(r,A))return"break";is_array_default(o)?each_default(o,(function(e){n.emitDelegateEvent(r,e,t)})):a.emitDelegateEvent(r,o,t)}},a=this,o=0;o<l.length;o++){if("break"===r(o))break}},t.prototype.emitDelegateEvent=function(e,t,A){var n=this.getEvents(),l=t+DELEGATION_SPLIT+A.type;(n[l]||n[WILDCARD2])&&(A.name=l,A.currentTarget=e,A.delegateTarget=this,A.delegateObject=e.get("delegateObject"),this.emit(l,A))},t.prototype.translate=function(e,t){void 0===e&&(e=0),void 0===t&&(t=0);var A=this.getMatrix(),n=transform6(A,[["t",e,t]]);return this.setMatrix(n),this},t.prototype.move=function(e,t){var A=this.attr("x")||0,n=this.attr("y")||0;return this.translate(e-A,t-n),this},t.prototype.moveTo=function(e,t){return this.move(e,t)},t.prototype.scale=function(e,t){var A=this.getMatrix(),n=transform6(A,[["s",e,t||e]]);return this.setMatrix(n),this},t.prototype.rotate=function(e){var t=this.getMatrix(),A=transform6(t,[["r",e]]);return this.setMatrix(A),this},t.prototype.rotateAtStart=function(e){var t=this.attr(),A=t.x,n=t.y,l=this.getMatrix(),r=transform6(l,[["t",-A,-n],["r",e],["t",A,n]]);return this.setMatrix(r),this},t.prototype.rotateAtPoint=function(e,t,A){var n=this.getMatrix(),l=transform6(n,[["t",-e,-t],["r",A],["t",e,t]]);return this.setMatrix(l),this},t}(base_default),element_default=Element2,SHAPE_MAP2={},INDEX="_INDEX";function setCanvas(e,t){if(e.set("canvas",t),e.isGroup()){var A=e.get("children");A.length&&A.forEach((function(e){setCanvas(e,t)}))}}function setTimeline(e,t){if(e.set("timeline",t),e.isGroup()){var A=e.get("children");A.length&&A.forEach((function(e){setTimeline(e,t)}))}}function removeChild(e,t,A){void 0===A&&(A=!0),A?t.destroy():(t.set("parent",null),t.set("canvas",null)),removeFromArray(e.getChildren(),t)}function getComparer(e){return function(t,A){var n=e(t,A);return 0===n?t[INDEX]-A[INDEX]:n}}var Container=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.isCanvas=function(){return!1},t.prototype.getBBox=function(){var e=1/0,t=-1/0,A=1/0,n=-1/0,l=[],r=[],a=this.getChildren().filter((function(e){return e.get("visible")&&(!e.isGroup()||e.isGroup()&&e.getChildren().length>0)}));return a.length>0?(each_default(a,(function(e){var t=e.getBBox();l.push(t.minX,t.maxX),r.push(t.minY,t.maxY)})),e=min_default(l),t=max_default(l),A=min_default(r),n=max_default(r)):(e=0,t=0,A=0,n=0),{x:e,y:A,minX:e,minY:A,maxX:t,maxY:n,width:t-e,height:n-A}},t.prototype.getCanvasBBox=function(){var e=1/0,t=-1/0,A=1/0,n=-1/0,l=[],r=[],a=this.getChildren().filter((function(e){return e.get("visible")&&(!e.isGroup()||e.isGroup()&&e.getChildren().length>0)}));return a.length>0?(each_default(a,(function(e){var t=e.getCanvasBBox();l.push(t.minX,t.maxX),r.push(t.minY,t.maxY)})),e=min_default(l),t=max_default(l),A=min_default(r),n=max_default(r)):(e=0,t=0,A=0,n=0),{x:e,y:A,minX:e,minY:A,maxX:t,maxY:n,width:t-e,height:n-A}},t.prototype.getDefaultCfg=function(){var t=e.prototype.getDefaultCfg.call(this);return t.children=[],t},t.prototype.onAttrChange=function(t,A,n){if(e.prototype.onAttrChange.call(this,t,A,n),"matrix"===t){var l=this.getTotalMatrix();this._applyChildrenMarix(l)}},t.prototype.applyMatrix=function(t){var A=this.getTotalMatrix();e.prototype.applyMatrix.call(this,t);var n=this.getTotalMatrix();n!==A&&this._applyChildrenMarix(n)},t.prototype._applyChildrenMarix=function(e){var t=this.getChildren();each_default(t,(function(t){t.applyMatrix(e)}))},t.prototype.addShape=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var A=e[0],n=e[1];is_object_default(A)?n=A:n.type=A;var l=SHAPE_MAP2[n.type];l||(l=upper_first_default(n.type),SHAPE_MAP2[n.type]=l);var r=new(this.getShapeBase()[l])(n);return this.add(r),r},t.prototype.addGroup=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var A,n=e[0],l=e[1];if(is_function_default(n))A=new n(l||{parent:this});else{var r=n||{};A=new(this.getGroupBase())(r)}return this.add(A),A},t.prototype.getCanvas=function(){return this.isCanvas()?this:this.get("canvas")},t.prototype.getShape=function(e,t,A){if(!isAllowCapture(this))return null;var n,l=this.getChildren();if(this.isCanvas())n=this._findShape(l,e,t,A);else{var r=[e,t,1];r=this.invertFromMatrix(r),this.isClipped(r[0],r[1])||(n=this._findShape(l,r[0],r[1],A))}return n},t.prototype._findShape=function(e,t,A,n){for(var l=null,r=e.length-1;r>=0;r--){var a=e[r];if(isAllowCapture(a)&&(a.isGroup()?l=a.getShape(t,A,n):a.isHit(t,A)&&(l=a)),l)break}return l},t.prototype.add=function(e){var t=this.getCanvas(),A=this.getChildren(),n=this.get("timeline"),l=e.getParent();l&&removeChild(l,e,!1),e.set("parent",this),t&&setCanvas(e,t),n&&setTimeline(e,n),A.push(e),e.onCanvasChange("add"),this._applyElementMatrix(e)},t.prototype._applyElementMatrix=function(e){var t=this.getTotalMatrix();t&&e.applyMatrix(t)},t.prototype.getChildren=function(){return this.get("children")},t.prototype.sort=function(){var e=this.getChildren();each_default(e,(function(e,t){return e[INDEX]=t,e})),e.sort(getComparer((function(e,t){return e.get("zIndex")-t.get("zIndex")}))),this.onCanvasChange("sort")},t.prototype.clear=function(){if(this.set("clearing",!0),!this.destroyed){for(var e=this.getChildren(),t=e.length-1;t>=0;t--)e[t].destroy();this.set("children",[]),this.onCanvasChange("clear"),this.set("clearing",!1)}},t.prototype.destroy=function(){this.get("destroyed")||(this.clear(),e.prototype.destroy.call(this))},t.prototype.getFirst=function(){return this.getChildByIndex(0)},t.prototype.getLast=function(){var e=this.getChildren();return this.getChildByIndex(e.length-1)},t.prototype.getChildByIndex=function(e){return this.getChildren()[e]},t.prototype.getCount=function(){return this.getChildren().length},t.prototype.contain=function(e){return this.getChildren().indexOf(e)>-1},t.prototype.removeChild=function(e,t){void 0===t&&(t=!0),this.contain(e)&&e.remove(t)},t.prototype.findAll=function(e){var t=[],A=this.getChildren();return each_default(A,(function(A){e(A)&&t.push(A),A.isGroup()&&(t=t.concat(A.findAll(e)))})),t},t.prototype.find=function(e){var t=null,A=this.getChildren();return each_default(A,(function(A){if(e(A)?t=A:A.isGroup()&&(t=A.find(e)),t)return!1})),t},t.prototype.findById=function(e){return this.find((function(t){return t.get("id")===e}))},t.prototype.findByClassName=function(e){return this.find((function(t){return t.get("className")===e}))},t.prototype.findAllByName=function(e){return this.findAll((function(t){return t.get("name")===e}))},t}(element_default),container_default=Container,frame=0,timeout=0,interval=0,pokeDelay=1e3,taskHead,taskTail,clockLast=0,clockNow=0,clockSkew=0,clock="object"==typeof performance&&performance.now?performance:Date,setFrame="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(e){setTimeout(e,17)};function now(){return clockNow||(setFrame(clearNow),clockNow=clock.now()+clockSkew)}function clearNow(){clockNow=0}function Timer(){this._call=this._time=this._next=null}function timer(e,t,A){var n=new Timer;return n.restart(e,t,A),n}function timerFlush(){now(),++frame;for(var e,t=taskHead;t;)(e=clockNow-t._time)>=0&&t._call.call(null,e),t=t._next;--frame}function wake(){clockNow=(clockLast=clock.now())+clockSkew,frame=timeout=0;try{timerFlush()}finally{frame=0,nap(),clockNow=0}}function poke(){var e=clock.now(),t=e-clockLast;t>pokeDelay&&(clockSkew-=t,clockLast=e)}function nap(){for(var e,t,A=taskHead,n=1/0;A;)A._call?(n>A._time&&(n=A._time),e=A,A=A._next):(t=A._next,A._next=null,A=e?e._next=t:taskHead=t);taskTail=e,sleep(n)}function sleep(e){frame||(timeout&&(timeout=clearTimeout(timeout)),e-clockNow>24?(e<1/0&&(timeout=setTimeout(wake,e-clock.now()-clockSkew)),interval&&(interval=clearInterval(interval))):(interval||(clockLast=clock.now(),interval=setInterval(poke,pokeDelay)),frame=1,setFrame(wake)))}function basis2(e,t,A,n,l){var r=e*e,a=r*e;return((1-3*e+3*r-a)*t+(4-6*r+3*a)*A+(1+3*e+3*r-3*a)*n+a*l)/6}function basis_default3(e){var t=e.length-1;return function(A){var n=A<=0?A=0:A>=1?(A=1,t-1):Math.floor(A*t),l=e[n],r=e[n+1],a=n>0?e[n-1]:2*l-r,o=n<t-1?e[n+2]:2*r-l;return basis2((A-n/t)*t,a,l,r,o)}}function basisClosed_default2(e){var t=e.length;return function(A){var n=Math.floor(((A%=1)<0?++A:A)*t),l=e[(n+t-1)%t],r=e[n%t],a=e[(n+1)%t],o=e[(n+2)%t];return basis2((A-n/t)*t,l,r,a,o)}}function constant_default3(e){return function(){return e}}function linear2(e,t){return function(A){return e+A*t}}function exponential2(e,t,A){return e=Math.pow(e,A),t=Math.pow(t,A)-e,A=1/A,function(n){return Math.pow(e+n*t,A)}}function gamma2(e){return 1==(e=+e)?nogamma2:function(t,A){return A-t?exponential2(t,A,e):constant_default3(isNaN(t)?A:t)}}function nogamma2(e,t){var A=t-e;return A?linear2(e,A):constant_default3(isNaN(e)?t:e)}Timer.prototype=timer.prototype={constructor:Timer,restart:function(e,t,A){if("function"!=typeof e)throw new TypeError("callback is not a function");A=(null==A?now():+A)+(null==t?0:+t),this._next||taskTail===this||(taskTail?taskTail._next=this:taskHead=this,taskTail=this),this._call=e,this._time=A,sleep()},stop:function(){this._call&&(this._call=null,this._time=1/0,sleep())}};var rgb_default2=function e(t){var A=gamma2(t);function n(e,t){var n=A((e=rgb(e)).r,(t=rgb(t)).r),l=A(e.g,t.g),r=A(e.b,t.b),a=nogamma2(e.opacity,t.opacity);return function(t){return e.r=n(t),e.g=l(t),e.b=r(t),e.opacity=a(t),e+""}}return n.gamma=e,n}(1);function rgbSpline2(e){return function(t){var A,n,l=t.length,r=new Array(l),a=new Array(l),o=new Array(l);for(A=0;A<l;++A)n=rgb(t[A]),r[A]=n.r||0,a[A]=n.g||0,o[A]=n.b||0;return r=e(r),a=e(a),o=e(o),n.opacity=1,function(e){return n.r=r(e),n.g=a(e),n.b=o(e),n+""}}}var rgbBasis2=rgbSpline2(basis_default3),rgbBasisClosed2=rgbSpline2(basisClosed_default2);function numberArray_default2(e,t){t||(t=[]);var A,n=e?Math.min(t.length,e.length):0,l=t.slice();return function(r){for(A=0;A<n;++A)l[A]=e[A]*(1-r)+t[A]*r;return l}}function isNumberArray2(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}function array_default2(e,t){return(isNumberArray2(t)?numberArray_default2:genericArray2)(e,t)}function genericArray2(e,t){var A,n=t?t.length:0,l=e?Math.min(n,e.length):0,r=new Array(l),a=new Array(n);for(A=0;A<l;++A)r[A]=value_default2(e[A],t[A]);for(;A<n;++A)a[A]=t[A];return function(e){for(A=0;A<l;++A)a[A]=r[A](e);return a}}function date_default2(e,t){var A=new Date;return e=+e,t=+t,function(n){return A.setTime(e*(1-n)+t*n),A}}function number_default2(e,t){return e=+e,t=+t,function(A){return e*(1-A)+t*A}}function object_default2(e,t){var A,n={},l={};for(A in null!==e&&"object"==typeof e||(e={}),null!==t&&"object"==typeof t||(t={}),t)A in e?n[A]=value_default2(e[A],t[A]):l[A]=t[A];return function(e){for(A in n)l[A]=n[A](e);return l}}var reA2=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,reB2=new RegExp(reA2.source,"g");function zero3(e){return function(){return e}}function one2(e){return function(t){return e(t)+""}}function string_default2(e,t){var A,n,l,r=reA2.lastIndex=reB2.lastIndex=0,a=-1,o=[],s=[];for(e+="",t+="";(A=reA2.exec(e))&&(n=reB2.exec(t));)(l=n.index)>r&&(l=t.slice(r,l),o[a]?o[a]+=l:o[++a]=l),(A=A[0])===(n=n[0])?o[a]?o[a]+=n:o[++a]=n:(o[++a]=null,s.push({i:a,x:number_default2(A,n)})),r=reB2.lastIndex;return r<t.length&&(l=t.slice(r),o[a]?o[a]+=l:o[++a]=l),o.length<2?s[0]?one2(s[0].x):zero3(t):(t=s.length,function(e){for(var A,n=0;n<t;++n)o[(A=s[n]).i]=A.x(e);return o.join("")})}function value_default2(e,t){var A,n=typeof t;return null==t||"boolean"===n?constant_default3(t):("number"===n?number_default2:"string"===n?(A=color(t))?(t=A,rgb_default2):string_default2:t instanceof color?rgb_default2:t instanceof Date?date_default2:isNumberArray2(t)?numberArray_default2:Array.isArray(t)?genericArray2:"function"!=typeof t.valueOf&&"function"!=typeof t.toString||isNaN(t)?object_default2:number_default2)(e,t)}var src_exports={};function linear3(e){return+e}function quadIn(e){return e*e}function quadOut(e){return e*(2-e)}function quadInOut(e){return((e*=2)<=1?e*e:--e*(2-e)+1)/2}function cubicIn(e){return e*e*e}function cubicOut(e){return--e*e*e+1}function cubicInOut(e){return((e*=2)<=1?e*e*e:(e-=2)*e*e+2)/2}__export(src_exports,{easeBack:()=>backInOut,easeBackIn:()=>backIn,easeBackInOut:()=>backInOut,easeBackOut:()=>backOut,easeBounce:()=>bounceOut,easeBounceIn:()=>bounceIn,easeBounceInOut:()=>bounceInOut,easeBounceOut:()=>bounceOut,easeCircle:()=>circleInOut,easeCircleIn:()=>circleIn,easeCircleInOut:()=>circleInOut,easeCircleOut:()=>circleOut,easeCubic:()=>cubicInOut,easeCubicIn:()=>cubicIn,easeCubicInOut:()=>cubicInOut,easeCubicOut:()=>cubicOut,easeElastic:()=>elasticOut,easeElasticIn:()=>elasticIn,easeElasticInOut:()=>elasticInOut,easeElasticOut:()=>elasticOut,easeExp:()=>expInOut,easeExpIn:()=>expIn,easeExpInOut:()=>expInOut,easeExpOut:()=>expOut,easeLinear:()=>linear3,easePoly:()=>polyInOut,easePolyIn:()=>polyIn,easePolyInOut:()=>polyInOut,easePolyOut:()=>polyOut,easeQuad:()=>quadInOut,easeQuadIn:()=>quadIn,easeQuadInOut:()=>quadInOut,easeQuadOut:()=>quadOut,easeSin:()=>sinInOut,easeSinIn:()=>sinIn,easeSinInOut:()=>sinInOut,easeSinOut:()=>sinOut});var exponent=3,polyIn=function e(t){function A(e){return Math.pow(e,t)}return t=+t,A.exponent=e,A}(exponent),polyOut=function e(t){function A(e){return 1-Math.pow(1-e,t)}return t=+t,A.exponent=e,A}(exponent),polyInOut=function e(t){function A(e){return((e*=2)<=1?Math.pow(e,t):2-Math.pow(2-e,t))/2}return t=+t,A.exponent=e,A}(exponent),pi2=Math.PI,halfPi=pi2/2;function sinIn(e){return 1==+e?1:1-Math.cos(e*halfPi)}function sinOut(e){return Math.sin(e*halfPi)}function sinInOut(e){return(1-Math.cos(pi2*e))/2}function tpmt(e){return 1.0009775171065494*(Math.pow(2,-10*e)-.0009765625)}function expIn(e){return tpmt(1-+e)}function expOut(e){return 1-tpmt(e)}function expInOut(e){return((e*=2)<=1?tpmt(1-e):2-tpmt(e-1))/2}function circleIn(e){return 1-Math.sqrt(1-e*e)}function circleOut(e){return Math.sqrt(1- --e*e)}function circleInOut(e){return((e*=2)<=1?1-Math.sqrt(1-e*e):Math.sqrt(1-(e-=2)*e)+1)/2}var b1=4/11,b2=6/11,b3=8/11,b4=3/4,b5=9/11,b6=10/11,b7=15/16,b8=21/22,b9=63/64,b0=1/b1/b1;function bounceIn(e){return 1-bounceOut(1-e)}function bounceOut(e){return(e=+e)<b1?b0*e*e:e<b3?b0*(e-=b2)*e+b4:e<b6?b0*(e-=b5)*e+b7:b0*(e-=b8)*e+b9}function bounceInOut(e){return((e*=2)<=1?1-bounceOut(1-e):bounceOut(e-1)+1)/2}var overshoot=1.70158,backIn=function e(t){function A(e){return(e=+e)*e*(t*(e-1)+e)}return t=+t,A.overshoot=e,A}(overshoot),backOut=function e(t){function A(e){return--e*e*((e+1)*t+e)+1}return t=+t,A.overshoot=e,A}(overshoot),backInOut=function e(t){function A(e){return((e*=2)<1?e*e*((t+1)*e-t):(e-=2)*e*((t+1)*e+t)+2)/2}return t=+t,A.overshoot=e,A}(overshoot),tau2=2*Math.PI,amplitude=1,period=.3,elasticIn=function e(t,A){var n=Math.asin(1/(t=Math.max(1,t)))*(A/=tau2);function l(e){return t*tpmt(- --e)*Math.sin((n-e)/A)}return l.amplitude=function(t){return e(t,A*tau2)},l.period=function(A){return e(t,A)},l}(amplitude,period),elasticOut=function e(t,A){var n=Math.asin(1/(t=Math.max(1,t)))*(A/=tau2);function l(e){return 1-t*tpmt(e=+e)*Math.sin((e+n)/A)}return l.amplitude=function(t){return e(t,A*tau2)},l.period=function(A){return e(t,A)},l}(amplitude,period),elasticInOut=function e(t,A){var n=Math.asin(1/(t=Math.max(1,t)))*(A/=tau2);function l(e){return((e=2*e-1)<0?t*tpmt(-e)*Math.sin((n-e)/A):2-t*tpmt(e)*Math.sin((n+e)/A))/2}return l.amplitude=function(t){return e(t,A*tau2)},l.period=function(A){return e(t,A)},l}(amplitude,period),EASING_MAP={};function getEasing(e){return EASING_MAP[e.toLowerCase()]||src_exports[e]}var isColorProp=function(e){return["fill","stroke","fillStyle","strokeStyle"].includes(e)},isGradientColor=function(e){return/^[r,R,L,l]{1}[\s]*\(/.test(e)},IDENTITY_MATRIX=[1,0,0,0,1,0,0,0,1];function _update(e,t,A){var n={},l=t.fromAttrs,r=t.toAttrs;if(!e.destroyed){var a;for(var o in r)if(!is_equal_default(l[o],r[o]))if("path"===o){var s=r[o],i=l[o];s.length>i.length?(s=parsePathString(r[o]),i=parsePathString(l[o]),i=fillPathByDiff(i,s),i=formatPath(i,s),t.fromAttrs.path=i,t.toAttrs.path=s):t.pathFormatted||(s=parsePathString(r[o]),i=parsePathString(l[o]),i=formatPath(i,s),t.fromAttrs.path=i,t.toAttrs.path=s,t.pathFormatted=!0),n[o]=[];for(var u=0;u<s.length;u++){for(var c=s[u],h=i[u],f=[],g=0;g<c.length;g++)is_number_default(c[g])&&h&&is_number_default(h[g])?(a=value_default2(h[g],c[g]),f.push(a(A))):f.push(c[g]);n[o].push(f)}}else if("matrix"===o){var d=array_default2(l[o]||IDENTITY_MATRIX,r[o]||IDENTITY_MATRIX)(A);n[o]=d}else isColorProp(o)&&isGradientColor(r[o])?n[o]=r[o]:is_function_default(r[o])||(a=value_default2(l[o],r[o]),n[o]=a(A));e.attr(n)}}function update(e,t,A){var n,l=t.startTime;if(A<l+t.delay||t._paused)return!1;var r=t.duration,a=getEasing(t.easing);if(A=A-l-t.delay,t.repeat)n=a(n=A%r/r);else{if(!((n=A/r)<1))return t.onFrame?e.attr(t.onFrame(1)):e.attr(t.toAttrs),!0;n=a(n)}if(t.onFrame){var o=t.onFrame(n);e.attr(o)}else _update(e,t,n);return!1}var Timeline=function(){function e(e){this.animators=[],this.current=0,this.timer=null,this.canvas=e}return e.prototype.initTimer=function(){var e,t,A,n=this;this.timer=timer((function(l){if(n.current=l,n.animators.length>0){for(var r=n.animators.length-1;r>=0;r--)if((e=n.animators[r]).destroyed)n.removeAnimator(r);else{if(!e.isAnimatePaused())for(var a=(t=e.get("animations")).length-1;a>=0;a--)A=t[a],update(e,A,l)&&(t.splice(a,1),A.callback&&A.callback());0===t.length&&n.removeAnimator(r)}n.canvas.get("autoDraw")||n.canvas.draw()}}))},e.prototype.addAnimator=function(e){this.animators.push(e)},e.prototype.removeAnimator=function(e){this.animators.splice(e,1)},e.prototype.isAnimating=function(){return!!this.animators.length},e.prototype.stop=function(){this.timer&&this.timer.stop()},e.prototype.stopAllAnimations=function(e){void 0===e&&(e=!0),this.animators.forEach((function(t){t.stopAnimate(e)})),this.animators=[],this.canvas.draw()},e.prototype.getTime=function(){return this.current},e}(),timeline_default=Timeline,CLICK_OFFSET=40,LEFT_BTN_CODE=0,EVENTS=["mousedown","mouseup","dblclick","mouseout","mouseover","mousemove","mouseleave","mouseenter","touchstart","touchmove","touchend","dragenter","dragover","dragleave","drop","contextmenu","mousewheel"];function emitTargetEvent(e,t,A){A.name=t,A.target=e,A.currentTarget=e,A.delegateTarget=e,e.emit(t,A)}function bubbleEvent(e,t,A){if(A.bubbles){var n=void 0,l=!1;if("mouseenter"===t?(n=A.fromShape,l=!0):"mouseleave"===t&&(l=!0,n=A.toShape),e.isCanvas()&&l)return;if(n&&isParent(e,n))return void(A.bubbles=!1);A.name=t,A.currentTarget=e,A.delegateTarget=e,e.emit(t,A)}}var EventController=function(){function e(e){var t=this;this.draggingShape=null,this.dragging=!1,this.currentShape=null,this.mousedownShape=null,this.mousedownPoint=null,this._eventCallback=function(e){var A=e.type;t._triggerEvent(A,e)},this._onDocumentMove=function(e){if(t.canvas.get("el")!==e.target&&(t.dragging||t.currentShape)){var A=t._getPointInfo(e);t.dragging&&t._emitEvent("drag",e,A,t.draggingShape)}},this._onDocumentMouseUp=function(e){if(t.canvas.get("el")!==e.target&&t.dragging){var A=t._getPointInfo(e);t.draggingShape&&t._emitEvent("drop",e,A,null),t._emitEvent("dragend",e,A,t.draggingShape),t._afterDrag(t.draggingShape,A,e)}},this.canvas=e.canvas}return e.prototype.init=function(){this._bindEvents()},e.prototype._bindEvents=function(){var e=this,t=this.canvas.get("el");each_default(EVENTS,(function(A){t.addEventListener(A,e._eventCallback)})),document&&(document.addEventListener("mousemove",this._onDocumentMove),document.addEventListener("mouseup",this._onDocumentMouseUp))},e.prototype._clearEvents=function(){var e=this,t=this.canvas.get("el");each_default(EVENTS,(function(A){t.removeEventListener(A,e._eventCallback)})),document&&(document.removeEventListener("mousemove",this._onDocumentMove),document.removeEventListener("mouseup",this._onDocumentMouseUp))},e.prototype._getEventObj=function(e,t,A,n,l,r){var a=new graph_event_default(e,t);return a.fromShape=l,a.toShape=r,a.x=A.x,a.y=A.y,a.clientX=A.clientX,a.clientY=A.clientY,a.propagationPath.push(n),a},e.prototype._getShape=function(e,t){return this.canvas.getShape(e.x,e.y,t)},e.prototype._getPointInfo=function(e){var t=this.canvas,A=t.getClientByEvent(e),n=t.getPointByEvent(e);return{x:n.x,y:n.y,clientX:A.x,clientY:A.y}},e.prototype._triggerEvent=function(e,t){var A=this._getPointInfo(t),n=this._getShape(A,t),l=this["_on"+e],r=!1;if(l)l.call(this,A,n,t);else{var a=this.currentShape;"mouseenter"===e||"dragenter"===e||"mouseover"===e?(this._emitEvent(e,t,A,null,null,n),n&&this._emitEvent(e,t,A,n,null,n),"mouseenter"===e&&this.draggingShape&&this._emitEvent("dragenter",t,A,null)):"mouseleave"===e||"dragleave"===e||"mouseout"===e?(r=!0,a&&this._emitEvent(e,t,A,a,a,null),this._emitEvent(e,t,A,null,a,null),"mouseleave"===e&&this.draggingShape&&this._emitEvent("dragleave",t,A,null)):this._emitEvent(e,t,A,n,null,null)}if(r||(this.currentShape=n),n&&!n.get("destroyed")){var o=this.canvas;o.get("el").style.cursor=n.attr("cursor")||o.get("cursor")}},e.prototype._onmousedown=function(e,t,A){A.button===LEFT_BTN_CODE&&(this.mousedownShape=t,this.mousedownPoint=e,this.mousedownTimeStamp=A.timeStamp),this._emitEvent("mousedown",A,e,t,null,null)},e.prototype._emitMouseoverEvents=function(e,t,A,n){var l=this.canvas.get("el");A!==n&&(A&&(this._emitEvent("mouseout",e,t,A,A,n),this._emitEvent("mouseleave",e,t,A,A,n),n&&!n.get("destroyed")||(l.style.cursor=this.canvas.get("cursor"))),n&&(this._emitEvent("mouseover",e,t,n,A,n),this._emitEvent("mouseenter",e,t,n,A,n)))},e.prototype._emitDragoverEvents=function(e,t,A,n,l){n?(n!==A&&(A&&this._emitEvent("dragleave",e,t,A,A,n),this._emitEvent("dragenter",e,t,n,A,n)),l||this._emitEvent("dragover",e,t,n)):A&&this._emitEvent("dragleave",e,t,A,A,n),l&&this._emitEvent("dragover",e,t,n)},e.prototype._afterDrag=function(e,t,A){e&&(e.set("capture",!0),this.draggingShape=null),this.dragging=!1;var n=this._getShape(t,A);n!==e&&this._emitMouseoverEvents(A,t,e,n),this.currentShape=n},e.prototype._onmouseup=function(e,t,A){if(A.button===LEFT_BTN_CODE){var n=this.draggingShape;this.dragging?(n&&this._emitEvent("drop",A,e,t),this._emitEvent("dragend",A,e,n),this._afterDrag(n,e,A)):(this._emitEvent("mouseup",A,e,t),t===this.mousedownShape&&this._emitEvent("click",A,e,t),this.mousedownShape=null,this.mousedownPoint=null)}},e.prototype._ondragover=function(e,t,A){A.preventDefault();var n=this.currentShape;this._emitDragoverEvents(A,e,n,t,!0)},e.prototype._onmousemove=function(e,t,A){var n=this.canvas,l=this.currentShape,r=this.draggingShape;if(this.dragging)r&&this._emitDragoverEvents(A,e,l,t,!1),this._emitEvent("drag",A,e,r);else{var a=this.mousedownPoint;if(a){var o=this.mousedownShape,s=A.timeStamp-this.mousedownTimeStamp,i=a.clientX-e.clientX,u=a.clientY-e.clientY;s>120||i*i+u*u>CLICK_OFFSET?o&&o.get("draggable")?((r=this.mousedownShape).set("capture",!1),this.draggingShape=r,this.dragging=!0,this._emitEvent("dragstart",A,e,r),this.mousedownShape=null,this.mousedownPoint=null):!o&&n.get("draggable")?(this.dragging=!0,this._emitEvent("dragstart",A,e,null),this.mousedownShape=null,this.mousedownPoint=null):(this._emitMouseoverEvents(A,e,l,t),this._emitEvent("mousemove",A,e,t)):(this._emitMouseoverEvents(A,e,l,t),this._emitEvent("mousemove",A,e,t))}else this._emitMouseoverEvents(A,e,l,t),this._emitEvent("mousemove",A,e,t)}},e.prototype._emitEvent=function(e,t,A,n,l,r){var a=this._getEventObj(e,t,A,n,l,r);if(n){a.shape=n,emitTargetEvent(n,e,a);for(var o=n.getParent();o;)o.emitDelegation(e,a),a.propagationStopped||bubbleEvent(o,e,a),a.propagationPath.push(o),o=o.getParent()}else{emitTargetEvent(this.canvas,e,a)}},e.prototype.destroy=function(){this._clearEvents(),this.canvas=null,this.currentShape=null,this.draggingShape=null,this.mousedownPoint=null,this.mousedownShape=null,this.mousedownTimeStamp=null},e}(),event_contoller_default=EventController,PX_SUFFIX="px",browser=detect(),isFirefox=browser&&"firefox"===browser.name,Canvas=function(e){function t(t){var A=e.call(this,t)||this;return A.initContainer(),A.initDom(),A.initEvents(),A.initTimeline(),A}return __extends(t,e),t.prototype.getDefaultCfg=function(){var t=e.prototype.getDefaultCfg.call(this);return t.cursor="default",t.supportCSSTransform=!1,t},t.prototype.initContainer=function(){var e=this.get("container");is_string_default(e)&&(e=document.getElementById(e),this.set("container",e))},t.prototype.initDom=function(){var e=this.createDom();this.set("el",e),this.get("container").appendChild(e),this.setDOMSize(this.get("width"),this.get("height"))},t.prototype.initEvents=function(){var e=new event_contoller_default({canvas:this});e.init(),this.set("eventController",e)},t.prototype.initTimeline=function(){var e=new timeline_default(this);this.set("timeline",e)},t.prototype.setDOMSize=function(e,t){var A=this.get("el");isBrowser&&(A.style.width=e+PX_SUFFIX,A.style.height=t+PX_SUFFIX)},t.prototype.changeSize=function(e,t){this.setDOMSize(e,t),this.set("width",e),this.set("height",t),this.onCanvasChange("changeSize")},t.prototype.getRenderer=function(){return this.get("renderer")},t.prototype.getCursor=function(){return this.get("cursor")},t.prototype.setCursor=function(e){this.set("cursor",e);var t=this.get("el");isBrowser&&t&&(t.style.cursor=e)},t.prototype.getPointByEvent=function(e){if(this.get("supportCSSTransform")){if(isFirefox&&!is_nil_default(e.layerX)&&e.layerX!==e.offsetX)return{x:e.layerX,y:e.layerY};if(!is_nil_default(e.offsetX))return{x:e.offsetX,y:e.offsetY}}var t=this.getClientByEvent(e),A=t.x,n=t.y;return this.getPointByClient(A,n)},t.prototype.getClientByEvent=function(e){var t=e;return e.touches&&(t="touchend"===e.type?e.changedTouches[0]:e.touches[0]),{x:t.clientX,y:t.clientY}},t.prototype.getPointByClient=function(e,t){var A=this.get("el").getBoundingClientRect();return{x:e-A.left,y:t-A.top}},t.prototype.getClientByPoint=function(e,t){var A=this.get("el").getBoundingClientRect();return{x:e+A.left,y:t+A.top}},t.prototype.draw=function(){},t.prototype.removeDom=function(){var e=this.get("el");e.parentNode.removeChild(e)},t.prototype.clearEvents=function(){this.get("eventController").destroy()},t.prototype.isCanvas=function(){return!0},t.prototype.getParent=function(){return null},t.prototype.destroy=function(){var t=this.get("timeline");this.get("destroyed")||(this.clear(),t&&t.stop(),this.clearEvents(),this.removeDom(),e.prototype.destroy.call(this))},t}(container_default),canvas_default=Canvas,AbstractGroup=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.isGroup=function(){return!0},t.prototype.isEntityGroup=function(){return!1},t.prototype.clone=function(){for(var t=e.prototype.clone.call(this),A=this.getChildren(),n=0;n<A.length;n++){var l=A[n];t.add(l.clone())}return t},t}(container_default),group_default2=AbstractGroup,AbstractShape=function(e){function t(t){return e.call(this,t)||this}return __extends(t,e),t.prototype._isInBBox=function(e,t){var A=this.getBBox();return A.minX<=e&&A.maxX>=e&&A.minY<=t&&A.maxY>=t},t.prototype.afterAttrsChange=function(t){e.prototype.afterAttrsChange.call(this,t),this.clearCacheBBox()},t.prototype.getBBox=function(){var e=this.cfg.bbox;return e||(e=this.calculateBBox(),this.set("bbox",e)),e},t.prototype.getCanvasBBox=function(){var e=this.cfg.canvasBBox;return e||(e=this.calculateCanvasBBox(),this.set("canvasBBox",e)),e},t.prototype.applyMatrix=function(t){e.prototype.applyMatrix.call(this,t),this.set("canvasBBox",null)},t.prototype.calculateCanvasBBox=function(){var e=this.getBBox(),t=this.getTotalMatrix(),A=e.minX,n=e.minY,l=e.maxX,r=e.maxY;if(t){var a=multiplyVec2(t,[e.minX,e.minY]),o=multiplyVec2(t,[e.maxX,e.minY]),s=multiplyVec2(t,[e.minX,e.maxY]),i=multiplyVec2(t,[e.maxX,e.maxY]);A=Math.min(a[0],o[0],s[0],i[0]),l=Math.max(a[0],o[0],s[0],i[0]),n=Math.min(a[1],o[1],s[1],i[1]),r=Math.max(a[1],o[1],s[1],i[1])}var u=this.attrs;if(u.shadowColor){var c=u.shadowBlur,h=void 0===c?0:c,f=u.shadowOffsetX,g=void 0===f?0:f,d=u.shadowOffsetY,p=void 0===d?0:d,B=A-h+g,E=l+h+g,m=n-h+p,b=r+h+p;A=Math.min(A,B),l=Math.max(l,E),n=Math.min(n,m),r=Math.max(r,b)}return{x:A,y:n,minX:A,minY:n,maxX:l,maxY:r,width:l-A,height:r-n}},t.prototype.clearCacheBBox=function(){this.set("bbox",null),this.set("canvasBBox",null)},t.prototype.isClipShape=function(){return this.get("isClipShape")},t.prototype.isInShape=function(e,t){return!1},t.prototype.isOnlyHitBox=function(){return!1},t.prototype.isHit=function(e,t){var A=this.get("startArrowShape"),n=this.get("endArrowShape"),l=[e,t,1],r=(l=this.invertFromMatrix(l))[0],a=l[1],o=this._isInBBox(r,a);if(this.isOnlyHitBox())return o;if(o&&!this.isClipped(r,a)){if(this.isInShape(r,a))return!0;if(A&&A.isHit(r,a))return!0;if(n&&n.isHit(r,a))return!0}return!1},t}(element_default),shape_default=AbstractShape,cache=new Map;function register(e,t){cache.set(e,t)}function getMethod(e){return cache.get(e)}function rect_default(e){var t=e.attr();return{x:t.x,y:t.y,width:t.width,height:t.height}}function circle_default(e){var t=e.attr(),A=t.x,n=t.y,l=t.r;return{x:A-l,y:n-l,width:2*l,height:2*l}}var util_exports={};function minNum(e){return Math.min.apply(null,e)}function maxNum(e){return Math.max.apply(null,e)}function distance2(e,t,A,n){var l=e-A,r=t-n;return Math.sqrt(l*l+r*r)}function isNumberEqual2(e,t){return Math.abs(e-t)<.001}function getBBoxByArray(e,t){var A=minNum(e),n=minNum(t);return{x:A,y:n,width:maxNum(e)-A,height:maxNum(t)-n}}function getBBoxRange(e,t,A,n){return{minX:minNum([e,A]),maxX:maxNum([e,A]),minY:minNum([t,n]),maxY:maxNum([t,n])}}function piMod(e){return(e+2*Math.PI)%(2*Math.PI)}__export(util_exports,{distance:()=>distance2,getBBoxByArray:()=>getBBoxByArray,getBBoxRange:()=>getBBoxRange,isNumberEqual:()=>isNumberEqual2,piMod:()=>piMod});var line_default2={box:function(e,t,A,n){return getBBoxByArray([e,A],[t,n])},length:function(e,t,A,n){return distance2(e,t,A,n)},pointAt:function(e,t,A,n,l){return{x:(1-l)*e+l*A,y:(1-l)*t+l*n}},pointDistance:function(e,t,A,n,l,r){var a=(A-e)*(l-e)+(n-t)*(r-t);return a<0?distance2(e,t,l,r):a>(A-e)*(A-e)+(n-t)*(n-t)?distance2(A,n,l,r):this.pointToLine(e,t,A,n,l,r)},pointToLine:function(e,t,A,n,l,r){var a=[A-e,n-t];if(exactEquals2(a,[0,0]))return Math.sqrt((l-e)*(l-e)+(r-t)*(r-t));var o=[-a[1],a[0]];normalize(o,o);var s=[l-e,r-t];return Math.abs(dot(s,o))},tangentAngle:function(e,t,A,n){return Math.atan2(n-t,A-e)}},EPSILON2=1e-4;function nearestPoint(e,t,A,n,l,r){var a,o=1/0,s=[A,n],i=20;r&&r>200&&(i=r/10);for(var u=1/i,c=u/10,h=0;h<=i;h++){var f=h*u,g=[l.apply(null,e.concat([f])),l.apply(null,t.concat([f]))];(E=distance2(s[0],s[1],g[0],g[1]))<o&&(a=f,o=E)}if(0===a)return{x:e[0],y:t[0]};if(1===a){var d=e.length;return{x:e[d-1],y:t[d-1]}}o=1/0;for(h=0;h<32&&!(c<EPSILON2);h++){var p=a-c,B=a+c,E=(g=[l.apply(null,e.concat([p])),l.apply(null,t.concat([p]))],distance2(s[0],s[1],g[0],g[1]));if(p>=0&&E<o)a=p,o=E;else{var m=[l.apply(null,e.concat([B])),l.apply(null,t.concat([B]))],b=distance2(s[0],s[1],m[0],m[1]);B<=1&&b<o?(a=B,o=b):c*=.5}}return{x:l.apply(null,e.concat([a])),y:l.apply(null,t.concat([a]))}}function snapLength(e,t){for(var A=0,n=e.length,l=0;l<n;l++){A+=distance2(e[l],t[l],e[(l+1)%n],t[(l+1)%n])}return A/2}function quadraticAt(e,t,A,n){var l=1-n;return l*l*e+2*n*l*t+n*n*A}function extrema(e,t,A){var n=e+A-2*t;if(isNumberEqual2(n,0))return[.5];var l=(e-t)/n;return l<=1&&l>=0?[l]:[]}function derivativeAt(e,t,A,n){return 2*(1-n)*(t-e)+2*n*(A-t)}function divideQuadratic(e,t,A,n,l,r,a){var o=quadraticAt(e,A,l,a),s=quadraticAt(t,n,r,a),i=line_default2.pointAt(e,t,A,n,a),u=line_default2.pointAt(A,n,l,r,a);return[[e,t,i.x,i.y,o,s],[o,s,u.x,u.y,l,r]]}function quadraticLength(e,t,A,n,l,r,a){if(0===a)return(distance2(e,t,A,n)+distance2(A,n,l,r)+distance2(e,t,l,r))/2;var o=divideQuadratic(e,t,A,n,l,r,.5),s=o[0],i=o[1];return s.push(a-1),i.push(a-1),quadraticLength.apply(null,s)+quadraticLength.apply(null,i)}var quadratic_default={box:function(e,t,A,n,l,r){var a=extrema(e,A,l)[0],o=extrema(t,n,r)[0],s=[e,l],i=[t,r];return void 0!==a&&s.push(quadraticAt(e,A,l,a)),void 0!==o&&i.push(quadraticAt(t,n,r,o)),getBBoxByArray(s,i)},length:function(e,t,A,n,l,r){return quadraticLength(e,t,A,n,l,r,3)},nearestPoint:function(e,t,A,n,l,r,a,o){return nearestPoint([e,A,l],[t,n,r],a,o,quadraticAt)},pointDistance:function(e,t,A,n,l,r,a,o){var s=this.nearestPoint(e,t,A,n,l,r,a,o);return distance2(s.x,s.y,a,o)},interpolationAt:quadraticAt,pointAt:function(e,t,A,n,l,r,a){return{x:quadraticAt(e,A,l,a),y:quadraticAt(t,n,r,a)}},divide:function(e,t,A,n,l,r,a){return divideQuadratic(e,t,A,n,l,r,a)},tangentAngle:function(e,t,A,n,l,r,a){var o=derivativeAt(e,A,l,a),s=derivativeAt(t,n,r,a);return piMod(Math.atan2(s,o))}};function cubicAt(e,t,A,n,l){var r=1-l;return r*r*r*e+3*t*l*r*r+3*A*l*l*r+n*l*l*l}function derivativeAt2(e,t,A,n,l){var r=1-l;return 3*(r*r*(t-e)+2*r*l*(A-t)+l*l*(n-A))}function extrema2(e,t,A,n){var l,r,a,o=-3*e+9*t-9*A+3*n,s=6*e-12*t+6*A,i=3*t-3*e,u=[];if(isNumberEqual2(o,0))isNumberEqual2(s,0)||(l=-i/s)>=0&&l<=1&&u.push(l);else{var c=s*s-4*o*i;isNumberEqual2(c,0)?u.push(-s/(2*o)):c>0&&(r=(-s-(a=Math.sqrt(c)))/(2*o),(l=(-s+a)/(2*o))>=0&&l<=1&&u.push(l),r>=0&&r<=1&&u.push(r))}return u}function divideCubic(e,t,A,n,l,r,a,o,s){var i=cubicAt(e,A,l,a,s),u=cubicAt(t,n,r,o,s),c=line_default2.pointAt(e,t,A,n,s),h=line_default2.pointAt(A,n,l,r,s),f=line_default2.pointAt(l,r,a,o,s),g=line_default2.pointAt(c.x,c.y,h.x,h.y,s),d=line_default2.pointAt(h.x,h.y,f.x,f.y,s);return[[e,t,c.x,c.y,g.x,g.y,i,u],[i,u,d.x,d.y,f.x,f.y,a,o]]}function cubicLength(e,t,A,n,l,r,a,o,s){if(0===s)return snapLength([e,A,l,a],[t,n,r,o]);var i=divideCubic(e,t,A,n,l,r,a,o,.5),u=i[0],c=i[1];return u.push(s-1),c.push(s-1),cubicLength.apply(null,u)+cubicLength.apply(null,c)}var cubic_default={extrema:extrema2,box:function(e,t,A,n,l,r,a,o){for(var s=[e,a],i=[t,o],u=extrema2(e,A,l,a),c=extrema2(t,n,r,o),h=0;h<u.length;h++)s.push(cubicAt(e,A,l,a,u[h]));for(h=0;h<c.length;h++)i.push(cubicAt(t,n,r,o,c[h]));return getBBoxByArray(s,i)},length:function(e,t,A,n,l,r,a,o){return cubicLength(e,t,A,n,l,r,a,o,3)},nearestPoint:function(e,t,A,n,l,r,a,o,s,i,u){return nearestPoint([e,A,l,a],[t,n,r,o],s,i,cubicAt,u)},pointDistance:function(e,t,A,n,l,r,a,o,s,i,u){var c=this.nearestPoint(e,t,A,n,l,r,a,o,s,i,u);return distance2(c.x,c.y,s,i)},interpolationAt:cubicAt,pointAt:function(e,t,A,n,l,r,a,o,s){return{x:cubicAt(e,A,l,a,s),y:cubicAt(t,n,r,o,s)}},divide:function(e,t,A,n,l,r,a,o,s){return divideCubic(e,t,A,n,l,r,a,o,s)},tangentAngle:function(e,t,A,n,l,r,a,o,s){var i=derivativeAt2(e,A,l,a,s),u=derivativeAt2(t,n,r,o,s);return piMod(Math.atan2(u,i))}};function copysign(e,t){var A=Math.abs(e);return t>0?A:-1*A}var ellipse_default={box:function(e,t,A,n){return{x:e-A,y:t-n,width:2*A,height:2*n}},length:function(e,t,A,n){return Math.PI*(3*(A+n)-Math.sqrt((3*A+n)*(A+3*n)))},nearestPoint:function(e,t,A,n,l,r){var a=A,o=n;if(0===a||0===o)return{x:e,y:t};for(var s,i,u=l-e,c=r-t,h=Math.abs(u),f=Math.abs(c),g=a*a,d=o*o,p=Math.PI/4,B=0;B<4;B++){s=a*Math.cos(p),i=o*Math.sin(p);var E=(g-d)*Math.pow(Math.cos(p),3)/a,m=(d-g)*Math.pow(Math.sin(p),3)/o,b=s-E,y=i-m,w=h-E,Q=f-m,C=Math.hypot(y,b),M=Math.hypot(Q,w);p+=C*Math.asin((b*Q-y*w)/(C*M))/Math.sqrt(g+d-s*s-i*i),p=Math.min(Math.PI/2,Math.max(0,p))}return{x:e+copysign(s,u),y:t+copysign(i,c)}},pointDistance:function(e,t,A,n,l,r){var a=this.nearestPoint(e,t,A,n,l,r);return distance2(a.x,a.y,l,r)},pointAt:function(e,t,A,n,l){var r=2*Math.PI*l;return{x:e+A*Math.cos(r),y:t+n*Math.sin(r)}},tangentAngle:function(e,t,A,n,l){var r=2*Math.PI*l;return piMod(Math.atan2(n*Math.cos(r),-A*Math.sin(r)))}};function derivativeXAt(e,t,A,n,l,r,a,o){return-1*A*Math.cos(l)*Math.sin(o)-n*Math.sin(l)*Math.cos(o)}function derivativeYAt(e,t,A,n,l,r,a,o){return-1*A*Math.sin(l)*Math.sin(o)+n*Math.cos(l)*Math.cos(o)}function xExtrema(e,t,A){return Math.atan(-t/e*Math.tan(A))}function yExtrema(e,t,A){return Math.atan(t/(e*Math.tan(A)))}function xAt(e,t,A,n,l,r){return A*Math.cos(l)*Math.cos(r)-n*Math.sin(l)*Math.sin(r)+e}function yAt(e,t,A,n,l,r){return A*Math.sin(l)*Math.cos(r)+n*Math.cos(l)*Math.sin(r)+t}function getAngle(e,t,A,n){return(Math.atan2(n*e,A*t)+2*Math.PI)%(2*Math.PI)}function getPoint(e,t,A){return{x:e*Math.cos(A),y:t*Math.sin(A)}}function rotate3(e,t,A){var n=Math.cos(A),l=Math.sin(A);return[e*n-t*l,e*l+t*n]}var arc_default={box:function(e,t,A,n,l,r,a){for(var o=xExtrema(A,n,l),s=1/0,i=-1/0,u=[r,a],c=2*-Math.PI;c<=2*Math.PI;c+=Math.PI){var h=o+c;r<a?r<h&&h<a&&u.push(h):a<h&&h<r&&u.push(h)}for(c=0;c<u.length;c++){var f=xAt(e,t,A,n,l,u[c]);f<s&&(s=f),f>i&&(i=f)}var g=yExtrema(A,n,l),d=1/0,p=-1/0,B=[r,a];for(c=2*-Math.PI;c<=2*Math.PI;c+=Math.PI){var E=g+c;r<a?r<E&&E<a&&B.push(E):a<E&&E<r&&B.push(E)}for(c=0;c<B.length;c++){var m=yAt(e,t,A,n,l,B[c]);m<d&&(d=m),m>p&&(p=m)}return{x:s,y:d,width:i-s,height:p-d}},length:function(e,t,A,n,l,r,a){},nearestPoint:function(e,t,A,n,l,r,a,o,s){var i=rotate3(o-e,s-t,-l),u=i[0],c=i[1],h=ellipse_default.nearestPoint(0,0,A,n,u,c),f=getAngle(A,n,h.x,h.y);f<r?h=getPoint(A,n,r):f>a&&(h=getPoint(A,n,a));var g=rotate3(h.x,h.y,l);return{x:g[0]+e,y:g[1]+t}},pointDistance:function(e,t,A,n,l,r,a,o,s){var i=this.nearestPoint(e,t,A,n,o,s);return distance2(i.x,i.y,o,s)},pointAt:function(e,t,A,n,l,r,a,o){var s=(a-r)*o+r;return{x:xAt(e,t,A,n,l,s),y:yAt(e,t,A,n,l,s)}},tangentAngle:function(e,t,A,n,l,r,a,o){var s=(a-r)*o+r,i=derivativeXAt(e,t,A,n,l,r,a,s),u=derivativeYAt(e,t,A,n,l,r,a,s);return piMod(Math.atan2(u,i))}};function analyzePoints(e){for(var t=0,A=[],n=0;n<e.length-1;n++){var l=e[n],r=e[n+1],a=distance2(l[0],l[1],r[0],r[1]),o={from:l,to:r,length:a};A.push(o),t+=a}return{segments:A,totalLength:t}}function lengthOfSegment(e){if(e.length<2)return 0;for(var t=0,A=0;A<e.length-1;A++){var n=e[A],l=e[A+1];t+=distance2(n[0],n[1],l[0],l[1])}return t}function pointAtSegments(e,t){if(t>1||t<0||e.length<2)return null;var A=analyzePoints(e),n=A.segments,l=A.totalLength;if(0===l)return{x:e[0][0],y:e[0][1]};for(var r=0,a=null,o=0;o<n.length;o++){var s=n[o],i=s.from,u=s.to,c=s.length/l;if(t>=r&&t<=r+c){var h=(t-r)/c;a=line_default2.pointAt(i[0],i[1],u[0],u[1],h);break}r+=c}return a}function angleAtSegments(e,t){if(t>1||t<0||e.length<2)return 0;for(var A=analyzePoints(e),n=A.segments,l=A.totalLength,r=0,a=0,o=0;o<n.length;o++){var s=n[o],i=s.from,u=s.to,c=s.length/l;if(t>=r&&t<=r+c){a=Math.atan2(u[1]-i[1],u[0]-i[0]);break}r+=c}return a}function distanceAtSegment(e,t,A){for(var n=1/0,l=0;l<e.length-1;l++){var r=e[l],a=e[l+1],o=line_default2.pointDistance(r[0],r[1],a[0],a[1],t,A);o<n&&(n=o)}return n}var polyline_default={box:function(e){for(var t=[],A=[],n=0;n<e.length;n++){var l=e[n];t.push(l[0]),A.push(l[1])}return getBBoxByArray(t,A)},length:function(e){return lengthOfSegment(e)},pointAt:function(e,t){return pointAtSegments(e,t)},pointDistance:function(e,t,A){return distanceAtSegment(e,t,A)},tangentAngle:function(e,t){return angleAtSegments(e,t)}};function mergeBBox(e,t){return e&&t?{minX:Math.min(e.minX,t.minX),minY:Math.min(e.minY,t.minY),maxX:Math.max(e.maxX,t.maxX),maxY:Math.max(e.maxY,t.maxY)}:e||t}function mergeArrowBBox(e,t){var A=e.get("startArrowShape"),n=e.get("endArrowShape");return A&&(t=mergeBBox(t,A.getCanvasBBox())),n&&(t=mergeBBox(t,n.getCanvasBBox())),t}function polyline_default2(e){for(var t=e.attr().points,A=[],n=[],l=0;l<t.length;l++){var r=t[l];A.push(r[0]),n.push(r[1])}var a=util_exports.getBBoxByArray(A,n),o=a.x,s=a.y,i={minX:o,minY:s,maxX:o+a.width,maxY:s+a.height};return{x:(i=mergeArrowBBox(e,i)).minX,y:i.minY,width:i.maxX-i.minX,height:i.maxY-i.minY}}function polygon_default2(e){for(var t=e.attr().points,A=[],n=[],l=0;l<t.length;l++){var r=t[l];A.push(r[0]),n.push(r[1])}return util_exports.getBBoxByArray(A,n)}var offScreenCtx=null;function getOffScreenContext(){if(!offScreenCtx){var e=document.createElement("canvas");e.width=1,e.height=1,offScreenCtx=e.getContext("2d")}return offScreenCtx}function getTextHeight(e,t,A){var n=1;return is_string_default(e)&&(n=e.split("\n").length),n>1?t*n+getLineSpaceing(t,A)*(n-1):t}function getLineSpaceing(e,t){return t?t-e:.14*e}function getTextWidth(e,t){var A=getOffScreenContext(),n=0;if(is_nil_default(e)||""===e)return n;if(A.save(),A.font=t,is_string_default(e)&&e.includes("\n")){var l=e.split("\n");each_default(l,(function(e){var t=A.measureText(e).width;n<t&&(n=t)}))}else n=A.measureText(e).width;return A.restore(),n}function assembleFont(e){var t=e.fontSize,A=e.fontFamily,n=e.fontWeight;return[e.fontStyle,e.fontVariant,n,t+"px",A].join(" ").trim()}function text_default(e){var t=e.attr(),A=t.x,n=t.y,l=t.text,r=t.fontSize,a=t.lineHeight,o=t.font;o||(o=assembleFont(t));var s,i=getTextWidth(l,o);if(i){var u=t.textAlign,c=t.textBaseline,h=getTextHeight(l,r,a),f={x:A,y:n-h};u&&("end"===u||"right"===u?f.x-=i:"center"===u&&(f.x-=i/2)),c&&("top"===c?f.y+=h:"middle"===c&&(f.y+=h/2)),s={x:f.x,y:f.y,width:i,height:h}}else s={x:A,y:n,width:0,height:0};return s}var regexTags=/[MLHVQTCSAZ]([^MLHVQTCSAZ]*)/gi,regexDot=/[^\s\,]+/gi;function parsePath(e){var t=e||[];return is_array_default(t)?t:is_string_default(t)?(t=t.match(regexTags),each_default(t,(function(e,A){if((e=e.match(regexDot))[0].length>1){var n=e[0].charAt(0);e.splice(1,0,e[0].substr(1)),e[0]=n}each_default(e,(function(t,A){isNaN(t)||(e[A]=+t)})),t[A]=e})),t):void 0}var parse_path_default=parsePath,SPACES2="\t\n\v\f\r   ᠎             　\u2028\u2029",PATH_COMMAND2=new RegExp("([a-z])["+SPACES2+",]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?["+SPACES2+"]*,?["+SPACES2+"]*)+)","ig"),PATH_VALUES2=new RegExp("(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)["+SPACES2+"]*,?["+SPACES2+"]*","ig"),TAU=2*Math.PI;function vMag(e){return Math.sqrt(e[0]*e[0]+e[1]*e[1])}function vRatio(e,t){return vMag(e)*vMag(t)?(e[0]*t[0]+e[1]*t[1])/(vMag(e)*vMag(t)):1}function vAngle(e,t){return(e[0]*t[1]<e[1]*t[0]?-1:1)*Math.acos(vRatio(e,t))}function isSamePoint(e,t){return e[0]===t[0]&&e[1]===t[1]}function getArcParams(e,t){var A=t[1],n=t[2],l=mod_default(to_radian_default(t[3]),2*Math.PI),r=t[4],a=t[5],o=e[0],s=e[1],i=t[6],u=t[7],c=Math.cos(l)*(o-i)/2+Math.sin(l)*(s-u)/2,h=-1*Math.sin(l)*(o-i)/2+Math.cos(l)*(s-u)/2,f=c*c/(A*A)+h*h/(n*n);f>1&&(A*=Math.sqrt(f),n*=Math.sqrt(f));var g=A*A*(h*h)+n*n*(c*c),d=g?Math.sqrt((A*A*(n*n)-g)/g):1;r===a&&(d*=-1),isNaN(d)&&(d=0);var p=n?d*A*h/n:0,B=A?d*-n*c/A:0,E=(o+i)/2+Math.cos(l)*p-Math.sin(l)*B,m=(s+u)/2+Math.sin(l)*p+Math.cos(l)*B,b=[(c-p)/A,(h-B)/n],y=[(-1*c-p)/A,(-1*h-B)/n],w=vAngle([1,0],b),Q=vAngle(b,y);return vRatio(b,y)<=-1&&(Q=Math.PI),vRatio(b,y)>=1&&(Q=0),0===a&&Q>0&&(Q-=2*Math.PI),1===a&&Q<0&&(Q+=2*Math.PI),{cx:E,cy:m,rx:isSamePoint(e,[i,u])?0:A,ry:isSamePoint(e,[i,u])?0:n,startAngle:w,endAngle:w+Q,xRotation:l,arcFlag:r,sweepFlag:a}}function toSymmetry(e,t){return[t[0]+(t[0]-e[0]),t[1]+(t[1]-e[1])]}function getSegments(e){for(var t=[],A=null,n=null,l=null,r=0,a=(e=parse_path_default(e)).length,o=0;o<a;o++){var s=e[o];n=e[o+1];var i=s[0],u={command:i,prePoint:A,params:s,startTangent:null,endTangent:null};switch(i){case"M":l=[s[1],s[2]],r=o;break;case"A":var c=getArcParams(A,s);u.arcParams=c}if("Z"===i)A=l,n=e[r+1];else{var h=s.length;A=[s[h-2],s[h-1]]}n&&"Z"===n[0]&&(n=e[r],t[r]&&(t[r].prePoint=A)),u.currentPoint=A,t[r]&&isSamePoint(A,t[r].currentPoint)&&(t[r].prePoint=u.prePoint);var f=n?[n[n.length-2],n[n.length-1]]:null;u.nextPoint=f;var g=u.prePoint;if(["L","H","V"].includes(i))u.startTangent=[g[0]-A[0],g[1]-A[1]],u.endTangent=[A[0]-g[0],A[1]-g[1]];else if("Q"===i){var d=[s[1],s[2]];u.startTangent=[g[0]-d[0],g[1]-d[1]],u.endTangent=[A[0]-d[0],A[1]-d[1]]}else if("T"===i){d=toSymmetry((E=t[o-1]).currentPoint,g);"Q"===E.command?(u.command="Q",u.startTangent=[g[0]-d[0],g[1]-d[1]],u.endTangent=[A[0]-d[0],A[1]-d[1]]):(u.command="TL",u.startTangent=[g[0]-A[0],g[1]-A[1]],u.endTangent=[A[0]-g[0],A[1]-g[1]])}else if("C"===i){var p=[s[1],s[2]],B=[s[3],s[4]];u.startTangent=[g[0]-p[0],g[1]-p[1]],u.endTangent=[A[0]-B[0],A[1]-B[1]],0===u.startTangent[0]&&0===u.startTangent[1]&&(u.startTangent=[p[0]-B[0],p[1]-B[1]]),0===u.endTangent[0]&&0===u.endTangent[1]&&(u.endTangent=[B[0]-p[0],B[1]-p[1]])}else if("S"===i){var E;p=toSymmetry((E=t[o-1]).currentPoint,g),B=[s[1],s[2]];"C"===E.command?(u.command="C",u.startTangent=[g[0]-p[0],g[1]-p[1]],u.endTangent=[A[0]-B[0],A[1]-B[1]]):(u.command="SQ",u.startTangent=[g[0]-B[0],g[1]-B[1]],u.endTangent=[A[0]-B[0],A[1]-B[1]])}else if("A"===i){var m=.001,b=u.arcParams||{},y=b.cx,w=void 0===y?0:y,Q=b.cy,C=void 0===Q?0:Q,M=b.rx,I=void 0===M?0:M,T=b.ry,x=void 0===T?0:T,F=b.sweepFlag,$=void 0===F?0:F,D=b.startAngle,v=void 0===D?0:D,N=b.endAngle,S=void 0===N?0:N;0===$&&(m*=-1);var U=I*Math.cos(v-m)+w,R=x*Math.sin(v-m)+C;u.startTangent=[U-l[0],R-l[1]];var Y=I*Math.cos(v+S+m)+w,k=x*Math.sin(v+S-m)+C;u.endTangent=[g[0]-Y,g[1]-k]}t.push(u)}return t}function getPathBox(e,t){for(var A=[],n=[],l=[],r=0;r<e.length;r++){var a=(d=e[r]).currentPoint,o=d.params,s=d.prePoint,i=void 0;switch(d.command){case"Q":i=quadratic_default.box(s[0],s[1],o[1],o[2],o[3],o[4]);break;case"C":i=cubic_default.box(s[0],s[1],o[1],o[2],o[3],o[4],o[5],o[6]);break;case"A":var u=d.arcParams;i=arc_default.box(u.cx,u.cy,u.rx,u.ry,u.xRotation,u.startAngle,u.endAngle);break;default:A.push(a[0]),n.push(a[1])}i&&(d.box=i,A.push(i.x,i.x+i.width),n.push(i.y,i.y+i.height)),t&&("L"===d.command||"M"===d.command)&&d.prePoint&&d.nextPoint&&l.push(d)}A=A.filter((function(e){return!Number.isNaN(e)&&e!==1/0&&e!==-1/0})),n=n.filter((function(e){return!Number.isNaN(e)&&e!==1/0&&e!==-1/0}));var c=min_default(A),h=min_default(n),f=max_default(A),g=max_default(n);if(0===l.length)return{x:c,y:h,width:f-c,height:g-h};for(r=0;r<l.length;r++){var d;(a=(d=l[r]).currentPoint)[0]===c?c-=getExtraFromSegmentWithAngle(d,t).xExtra:a[0]===f&&(f+=getExtraFromSegmentWithAngle(d,t).xExtra),a[1]===h?h-=getExtraFromSegmentWithAngle(d,t).yExtra:a[1]===g&&(g+=getExtraFromSegmentWithAngle(d,t).yExtra)}return{x:c,y:h,width:f-c,height:g-h}}function getExtraFromSegmentWithAngle(e,t){var A=e.prePoint,n=e.currentPoint,l=e.nextPoint,r=Math.pow(n[0]-A[0],2)+Math.pow(n[1]-A[1],2),a=Math.pow(n[0]-l[0],2)+Math.pow(n[1]-l[1],2),o=Math.pow(A[0]-l[0],2)+Math.pow(A[1]-l[1],2),s=Math.acos((r+a-o)/(2*Math.sqrt(r)*Math.sqrt(a)));if(!s||0===Math.sin(s)||isNumberEqual(s,0))return{xExtra:0,yExtra:0};var i=Math.abs(Math.atan2(l[1]-n[1],l[0]-n[0])),u=Math.abs(Math.atan2(l[0]-n[0],l[1]-n[1]));return i=i>Math.PI/2?Math.PI-i:i,u=u>Math.PI/2?Math.PI-u:u,{xExtra:Math.cos(s/2-i)*(t/2*(1/Math.sin(s/2)))-t/2||0,yExtra:Math.cos(u-s/2)*(t/2*(1/Math.sin(s/2)))-t/2||0}}function path_default2(e){var t=e.attr(),A=t.path,n=t.stroke?t.lineWidth:0,l=getPathBox(e.get("segments")||getSegments(A),n),r=l.x,a=l.y,o={minX:r,minY:a,maxX:r+l.width,maxY:a+l.height};return{x:(o=mergeArrowBBox(e,o)).minX,y:o.minY,width:o.maxX-o.minX,height:o.maxY-o.minY}}function line_default3(e){var t=e.attr(),A=t.x1,n=t.y1,l=t.x2,r=t.y2,a={minX:Math.min(A,l),maxX:Math.max(A,l),minY:Math.min(n,r),maxY:Math.max(n,r)};return{x:(a=mergeArrowBBox(e,a)).minX,y:a.minY,width:a.maxX-a.minX,height:a.maxY-a.minY}}function ellipse_default2(e){var t=e.attr(),A=t.x,n=t.y,l=t.rx,r=t.ry;return{x:A-l,y:n-r,width:2*l,height:2*r}}register("rect",rect_default),register("image",rect_default),register("circle",circle_default),register("marker",circle_default),register("polyline",polyline_default2),register("polygon",polygon_default2),register("text",text_default),register("path",path_default2),register("line",line_default3),register("ellipse",ellipse_default2);var SHAPE_TO_TAGS={rect:"path",circle:"circle",line:"line",path:"path",marker:"path",text:"text",polyline:"polyline",polygon:"polygon",image:"image",ellipse:"ellipse",dom:"foreignObject"},SVG_ATTR_MAP={opacity:"opacity",fillStyle:"fill",fill:"fill",fillOpacity:"fill-opacity",strokeStyle:"stroke",strokeOpacity:"stroke-opacity",stroke:"stroke",x:"x",y:"y",r:"r",rx:"rx",ry:"ry",width:"width",height:"height",x1:"x1",x2:"x2",y1:"y1",y2:"y2",lineCap:"stroke-linecap",lineJoin:"stroke-linejoin",lineWidth:"stroke-width",lineDash:"stroke-dasharray",lineDashOffset:"stroke-dashoffset",miterLimit:"stroke-miterlimit",font:"font",fontSize:"font-size",fontStyle:"font-style",fontVariant:"font-variant",fontWeight:"font-weight",fontFamily:"font-family",startArrow:"marker-start",endArrow:"marker-end",path:"d",class:"class",id:"id",style:"style",preserveAspectRatio:"preserveAspectRatio"};function createSVGElement(e){return document.createElementNS("http://www.w3.org/2000/svg",e)}function createDom(e){var t=SHAPE_TO_TAGS[e.type],A=e.getParent();if(!t)throw new Error("the type "+e.type+" is not supported by svg");var n=createSVGElement(t);if(e.get("id")&&(n.id=e.get("id")),e.set("el",n),e.set("attrs",{}),A){var l=A.get("el");l||(l=A.createDom(),A.set("el",l)),l.appendChild(n)}return n}function sortDom(e,t){var A=e.get("el"),n=to_array_default(A.children).sort(t),l=document.createDocumentFragment();n.forEach((function(e){l.appendChild(e)})),A.appendChild(l)}function moveTo(e,t){var A=e.parentNode,n=Array.from(A.childNodes).filter((function(e){return 1===e.nodeType&&"defs"!==e.nodeName.toLowerCase()})),l=n[t],r=n.indexOf(e);if(l){if(r>t)A.insertBefore(e,l);else if(r<t){var a=n[t+1];a?A.insertBefore(e,a):A.appendChild(e)}}else A.appendChild(e)}function setShadow(e,t){var A=e.cfg.el,n=e.attr(),l={dx:n.shadowOffsetX,dy:n.shadowOffsetY,blur:n.shadowBlur,color:n.shadowColor};if(l.dx||l.dy||l.blur||l.color){var r=t.find("filter",l);r||(r=t.addShadow(l)),A.setAttribute("filter","url(#"+r+")")}else A.removeAttribute("filter")}function setTransform(e){var t=e.attr().matrix;if(t){for(var A=e.cfg.el,n=[],l=0;l<9;l+=3)n.push(t[l]+","+t[l+1]);-1===(n=n.join(",")).indexOf("NaN")?A.setAttribute("transform","matrix("+n+")"):console.warn("invalid matrix:",t)}}function setClip(e,t){var A=e.getClip(),n=e.get("el");if(A){if(A&&!n.hasAttribute("clip-path")){createDom(A),A.createPath(t);var l=t.addClip(A);n.setAttribute("clip-path","url(#"+l+")")}}else n.removeAttribute("clip-path")}function drawChildren(e,t){t.forEach((function(t){t.draw(e)}))}function refreshElement(e,t){var A=e.get("canvas");if(A&&A.get("autoDraw")){var n=A.get("context"),l=e.getParent(),r=l?l.getChildren():[A],a=e.get("el");if("remove"===t)if(e.get("isClipShape")){var o=a&&a.parentNode,s=o&&o.parentNode;o&&s&&s.removeChild(o)}else a&&a.parentNode&&a.parentNode.removeChild(a);else if("show"===t)a.setAttribute("visibility","visible");else if("hide"===t)a.setAttribute("visibility","hidden");else if("zIndex"===t)moveTo(a,r.indexOf(e));else if("sort"===t){var i=e.get("children");i&&i.length&&sortDom(e,(function(e,t){return i.indexOf(e)-i.indexOf(t)?1:0}))}else"clear"===t?a&&(a.innerHTML=""):"matrix"===t?setTransform(e):"clip"===t?setClip(e,n):"attr"===t||"add"===t&&e.draw(n)}}var Group=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.isEntityGroup=function(){return!0},t.prototype.createDom=function(){var e=createSVGElement("g");this.set("el",e);var t=this.getParent();if(t){var A=t.get("el");A||(A=t.createDom(),t.set("el",A)),A.appendChild(e)}return e},t.prototype.afterAttrsChange=function(t){e.prototype.afterAttrsChange.call(this,t);var A=this.get("canvas");if(A&&A.get("autoDraw")){var n=A.get("context");this.createPath(n,t)}},t.prototype.onCanvasChange=function(e){refreshElement(this,e)},t.prototype.getShapeBase=function(){return shape_exports},t.prototype.getGroupBase=function(){return t},t.prototype.draw=function(e){var t=this.getChildren(),A=this.get("el");this.get("destroyed")?A&&A.parentNode.removeChild(A):(A||this.createDom(),setClip(this,e),this.createPath(e),t.length&&drawChildren(e,t))},t.prototype.createPath=function(e,t){var A=this.attr(),n=this.get("el");each_default(t||A,(function(e,t){SVG_ATTR_MAP[t]&&n.setAttribute(SVG_ATTR_MAP[t],e)})),setTransform(this)},t}(group_default2),group_default3=Group,ShapeBase=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type="svg",t.canFill=!1,t.canStroke=!1,t}return __extends(t,e),t.prototype.getDefaultAttrs=function(){var t=e.prototype.getDefaultAttrs.call(this);return __assign(__assign({},t),{lineWidth:1,lineAppendWidth:0,strokeOpacity:1,fillOpacity:1})},t.prototype.afterAttrsChange=function(t){e.prototype.afterAttrsChange.call(this,t);var A=this.get("canvas");if(A&&A.get("autoDraw")){var n=A.get("context");this.draw(n,t)}},t.prototype.getShapeBase=function(){return shape_exports},t.prototype.getGroupBase=function(){return group_default3},t.prototype.onCanvasChange=function(e){refreshElement(this,e)},t.prototype.calculateBBox=function(){var e=this.get("el"),t=null;if(e)t=e.getBBox();else{var A=getMethod(this.get("type"));A&&(t=A(this))}if(t){var n=t.x,l=t.y,r=t.width,a=t.height,o=this.getHitLineWidth(),s=o/2,i=n-s,u=l-s;return{x:i,y:u,minX:i,minY:u,maxX:n+r+s,maxY:l+a+s,width:r+o,height:a+o}}return{x:0,y:0,minX:0,minY:0,maxX:0,maxY:0,width:0,height:0}},t.prototype.isFill=function(){var e=this.attr(),t=e.fill,A=e.fillStyle;return(t||A||this.isClipShape())&&this.canFill},t.prototype.isStroke=function(){var e=this.attr(),t=e.stroke,A=e.strokeStyle;return(t||A)&&this.canStroke},t.prototype.draw=function(e,t){var A=this.get("el");this.get("destroyed")?A&&A.parentNode.removeChild(A):(A||createDom(this),setClip(this,e),this.createPath(e,t),this.shadow(e,t),this.strokeAndFill(e,t),this.transform(t))},t.prototype.createPath=function(e,t){},t.prototype.strokeAndFill=function(e,t){var A=t||this.attr(),n=A.fill,l=A.fillStyle,r=A.stroke,a=A.strokeStyle,o=A.fillOpacity,s=A.strokeOpacity,i=A.lineWidth,u=this.get("el");this.canFill&&(t?"fill"in A?this._setColor(e,"fill",n):"fillStyle"in A&&this._setColor(e,"fill",l):this._setColor(e,"fill",n||l),o&&u.setAttribute(SVG_ATTR_MAP.fillOpacity,o)),this.canStroke&&i>0&&(t?"stroke"in A?this._setColor(e,"stroke",r):"strokeStyle"in A&&this._setColor(e,"stroke",a):this._setColor(e,"stroke",r||a),s&&u.setAttribute(SVG_ATTR_MAP.strokeOpacity,s),i&&u.setAttribute(SVG_ATTR_MAP.lineWidth,i))},t.prototype._setColor=function(e,t,A){var n=this.get("el");if(A)if(A=A.trim(),/^[r,R,L,l]{1}[\s]*\(/.test(A))(l=e.find("gradient",A))||(l=e.addGradient(A)),n.setAttribute(SVG_ATTR_MAP[t],"url(#"+l+")");else if(/^[p,P]{1}[\s]*\(/.test(A)){var l;(l=e.find("pattern",A))||(l=e.addPattern(A)),n.setAttribute(SVG_ATTR_MAP[t],"url(#"+l+")")}else n.setAttribute(SVG_ATTR_MAP[t],A);else n.setAttribute(SVG_ATTR_MAP[t],"none")},t.prototype.shadow=function(e,t){var A=this.attr(),n=t||A,l=n.shadowOffsetX,r=n.shadowOffsetY,a=n.shadowBlur,o=n.shadowColor;(l||r||a||o)&&setShadow(this,e)},t.prototype.transform=function(e){var t=this.attr();(e||t).matrix&&setTransform(this)},t.prototype.isInShape=function(e,t){return this.isPointInPath(e,t)},t.prototype.isPointInPath=function(e,t){var A=this.get("el"),n=this.get("canvas").get("el").getBoundingClientRect(),l=e+n.left,r=t+n.top,a=document.elementFromPoint(l,r);return!(!a||!a.isEqualNode(A))},t.prototype.getHitLineWidth=function(){var e=this.attrs,t=e.lineWidth,A=e.lineAppendWidth;return this.isStroke()?t+A:0},t}(shape_default),base_default2=ShapeBase,Circle=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type="circle",t.canFill=!0,t.canStroke=!0,t}return __extends(t,e),t.prototype.getDefaultAttrs=function(){var t=e.prototype.getDefaultAttrs.call(this);return __assign(__assign({},t),{x:0,y:0,r:0})},t.prototype.createPath=function(e,t){var A=this.attr(),n=this.get("el");each_default(t||A,(function(e,t){"x"===t||"y"===t?n.setAttribute("c"+t,e):SVG_ATTR_MAP[t]&&n.setAttribute(SVG_ATTR_MAP[t],e)}))},t}(base_default2),circle_default2=Circle,Dom=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type="dom",t.canFill=!1,t.canStroke=!1,t}return __extends(t,e),t.prototype.createPath=function(e,t){var A=this.attr(),n=this.get("el");if(each_default(t||A,(function(e,t){SVG_ATTR_MAP[t]&&n.setAttribute(SVG_ATTR_MAP[t],e)})),"function"==typeof A.html){var l=A.html.call(this,A);if(l instanceof Element||l instanceof HTMLDocument){for(var r=n.childNodes,a=r.length-1;a>=0;a--)n.removeChild(r[a]);n.appendChild(l)}else n.innerHTML=l}else n.innerHTML=A.html},t}(base_default2),dom_default=Dom,Ellipse=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type="ellipse",t.canFill=!0,t.canStroke=!0,t}return __extends(t,e),t.prototype.getDefaultAttrs=function(){var t=e.prototype.getDefaultAttrs.call(this);return __assign(__assign({},t),{x:0,y:0,rx:0,ry:0})},t.prototype.createPath=function(e,t){var A=this.attr(),n=this.get("el");each_default(t||A,(function(e,t){"x"===t||"y"===t?n.setAttribute("c"+t,e):SVG_ATTR_MAP[t]&&n.setAttribute(SVG_ATTR_MAP[t],e)}))},t}(base_default2),ellipse_default3=Ellipse,Image2=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type="image",t.canFill=!1,t.canStroke=!1,t}return __extends(t,e),t.prototype.getDefaultAttrs=function(){var t=e.prototype.getDefaultAttrs.call(this);return __assign(__assign({},t),{x:0,y:0,width:0,height:0})},t.prototype.createPath=function(e,t){var A=this,n=this.attr(),l=this.get("el");each_default(t||n,(function(e,t){"img"===t?A._setImage(n.img):SVG_ATTR_MAP[t]&&l.setAttribute(SVG_ATTR_MAP[t],e)}))},t.prototype.setAttr=function(e,t){this.attrs[e]=t,"img"===e&&this._setImage(t)},t.prototype._setImage=function(e){var t=this.attr(),A=this.get("el");if(is_string_default(e))A.setAttribute("href",e);else if(e instanceof window.Image)t.width||(A.setAttribute("width",e.width),this.attr("width",e.width)),t.height||(A.setAttribute("height",e.height),this.attr("height",e.height)),A.setAttribute("href",e.src);else if(e instanceof HTMLElement&&is_string_default(e.nodeName)&&"CANVAS"===e.nodeName.toUpperCase())A.setAttribute("href",e.toDataURL());else if(e instanceof ImageData){var n=document.createElement("canvas");n.setAttribute("width",""+e.width),n.setAttribute("height",""+e.height),n.getContext("2d").putImageData(e,0,0),t.width||(A.setAttribute("width",""+e.width),this.attr("width",e.width)),t.height||(A.setAttribute("height",""+e.height),this.attr("height",e.height)),A.setAttribute("href",n.toDataURL())}},t}(base_default2),image_default=Image2,Line=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type="line",t.canFill=!1,t.canStroke=!0,t}return __extends(t,e),t.prototype.getDefaultAttrs=function(){var t=e.prototype.getDefaultAttrs.call(this);return __assign(__assign({},t),{x1:0,y1:0,x2:0,y2:0,startArrow:!1,endArrow:!1})},t.prototype.createPath=function(e,t){var A=this.attr(),n=this.get("el");each_default(t||A,(function(t,l){if("startArrow"===l||"endArrow"===l)if(t){var r=is_object_default(t)?e.addArrow(A,SVG_ATTR_MAP[l]):e.getDefaultArrow(A,SVG_ATTR_MAP[l]);n.setAttribute(SVG_ATTR_MAP[l],"url(#"+r+")")}else n.removeAttribute(SVG_ATTR_MAP[l]);else SVG_ATTR_MAP[l]&&n.setAttribute(SVG_ATTR_MAP[l],t)}))},t.prototype.getTotalLength=function(){var e=this.attr(),t=e.x1,A=e.y1,n=e.x2,l=e.y2;return line_default2.length(t,A,n,l)},t.prototype.getPoint=function(e){var t=this.attr(),A=t.x1,n=t.y1,l=t.x2,r=t.y2;return line_default2.pointAt(A,n,l,r,e)},t}(base_default2),line_default4=Line,Symbols={circle:function(e,t,A){return[["M",e,t],["m",-A,0],["a",A,A,0,1,0,2*A,0],["a",A,A,0,1,0,2*-A,0]]},square:function(e,t,A){return[["M",e-A,t-A],["L",e+A,t-A],["L",e+A,t+A],["L",e-A,t+A],["Z"]]},diamond:function(e,t,A){return[["M",e-A,t],["L",e,t-A],["L",e+A,t],["L",e,t+A],["Z"]]},triangle:function(e,t,A){var n=A*Math.sin(1/3*Math.PI);return[["M",e-A,t+n],["L",e,t-n],["L",e+A,t+n],["z"]]},triangleDown:function(e,t,A){var n=A*Math.sin(1/3*Math.PI);return[["M",e-A,t-n],["L",e+A,t-n],["L",e,t+n],["Z"]]}},symbols_default={get:function(e){return Symbols[e]},register:function(e,t){Symbols[e]=t},remove:function(e){delete Symbols[e]},getAll:function(){return Symbols}},Marker=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type="marker",t.canFill=!0,t.canStroke=!0,t}return __extends(t,e),t.prototype.createPath=function(e){this.get("el").setAttribute("d",this._assembleMarker())},t.prototype._assembleMarker=function(){var e=this._getPath();return is_array_default(e)?e.map((function(e){return e.join(" ")})).join(""):e},t.prototype._getPath=function(){var e,t=this.attr(),A=t.x,n=t.y,l=t.r||t.radius,r=t.symbol||"circle";return(e=is_function_default(r)?r:symbols_default.get(r))?e(A,n,l):(console.warn(e+" symbol is not exist."),null)},t.symbolsFactory=symbols_default,t}(base_default2),marker_default=Marker,Path2=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type="path",t.canFill=!0,t.canStroke=!0,t}return __extends(t,e),t.prototype.getDefaultAttrs=function(){var t=e.prototype.getDefaultAttrs.call(this);return __assign(__assign({},t),{startArrow:!1,endArrow:!1})},t.prototype.createPath=function(e,t){var A=this,n=this.attr(),l=this.get("el");each_default(t||n,(function(t,r){if("path"===r&&is_array_default(t))l.setAttribute("d",A._formatPath(t));else if("startArrow"===r||"endArrow"===r)if(t){var a=is_object_default(t)?e.addArrow(n,SVG_ATTR_MAP[r]):e.getDefaultArrow(n,SVG_ATTR_MAP[r]);l.setAttribute(SVG_ATTR_MAP[r],"url(#"+a+")")}else l.removeAttribute(SVG_ATTR_MAP[r]);else SVG_ATTR_MAP[r]&&l.setAttribute(SVG_ATTR_MAP[r],t)}))},t.prototype._formatPath=function(e){var t=e.map((function(e){return e.join(" ")})).join("");return~t.indexOf("NaN")?"":t},t.prototype.getTotalLength=function(){var e=this.get("el");return e?e.getTotalLength():null},t.prototype.getPoint=function(e){var t=this.get("el"),A=this.getTotalLength();if(0===A)return null;var n=t?t.getPointAtLength(e*A):null;return n?{x:n.x,y:n.y}:null},t}(base_default2),path_default3=Path2,Polygon=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type="polygon",t.canFill=!0,t.canStroke=!0,t}return __extends(t,e),t.prototype.createPath=function(e,t){var A=this.attr(),n=this.get("el");each_default(t||A,(function(e,t){"points"===t&&is_array_default(e)&&e.length>=2?n.setAttribute("points",e.map((function(e){return e[0]+","+e[1]})).join(" ")):SVG_ATTR_MAP[t]&&n.setAttribute(SVG_ATTR_MAP[t],e)}))},t}(base_default2),polygon_default3=Polygon,Polyline=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type="polyline",t.canFill=!0,t.canStroke=!0,t}return __extends(t,e),t.prototype.getDefaultAttrs=function(){var t=e.prototype.getDefaultAttrs.call(this);return __assign(__assign({},t),{startArrow:!1,endArrow:!1})},t.prototype.onAttrChange=function(t,A,n){e.prototype.onAttrChange.call(this,t,A,n),-1!==["points"].indexOf(t)&&this._resetCache()},t.prototype._resetCache=function(){this.set("totalLength",null),this.set("tCache",null)},t.prototype.createPath=function(e,t){var A=this.attr(),n=this.get("el");each_default(t||A,(function(e,t){"points"===t&&is_array_default(e)&&e.length>=2?n.setAttribute("points",e.map((function(e){return e[0]+","+e[1]})).join(" ")):SVG_ATTR_MAP[t]&&n.setAttribute(SVG_ATTR_MAP[t],e)}))},t.prototype.getTotalLength=function(){var e=this.attr().points,t=this.get("totalLength");return is_nil_default(t)?(this.set("totalLength",polyline_default.length(e)),this.get("totalLength")):t},t.prototype.getPoint=function(e){var t,A,n=this.attr().points,l=this.get("tCache");return l||(this._setTcache(),l=this.get("tCache")),each_default(l,(function(n,l){e>=n[0]&&e<=n[1]&&(t=(e-n[0])/(n[1]-n[0]),A=l)})),line_default2.pointAt(n[A][0],n[A][1],n[A+1][0],n[A+1][1],t)},t.prototype._setTcache=function(){var e=this.attr().points;if(e&&0!==e.length){var t=this.getTotalLength();if(!(t<=0)){var A,n,l=0,r=[];each_default(e,(function(a,o){e[o+1]&&((A=[])[0]=l/t,n=line_default2.length(a[0],a[1],e[o+1][0],e[o+1][1]),l+=n,A[1]=l/t,r.push(A))})),this.set("tCache",r)}}},t.prototype.getStartTangent=function(){var e=this.attr().points,t=[];return t.push([e[1][0],e[1][1]]),t.push([e[0][0],e[0][1]]),t},t.prototype.getEndTangent=function(){var e=this.attr().points,t=e.length-1,A=[];return A.push([e[t-1][0],e[t-1][1]]),A.push([e[t][0],e[t][1]]),A},t}(base_default2),polyline_default3=Polyline;function parseRadius(e){var t=0,A=0,n=0,l=0;return is_array_default(e)?1===e.length?t=A=n=l=e[0]:2===e.length?(t=n=e[0],A=l=e[1]):3===e.length?(t=e[0],A=l=e[1],n=e[2]):(t=e[0],A=e[1],n=e[2],l=e[3]):t=A=n=l=e,{r1:t,r2:A,r3:n,r4:l}}var Rect=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type="rect",t.canFill=!0,t.canStroke=!0,t}return __extends(t,e),t.prototype.getDefaultAttrs=function(){var t=e.prototype.getDefaultAttrs.call(this);return __assign(__assign({},t),{x:0,y:0,width:0,height:0,radius:0})},t.prototype.createPath=function(e,t){var A=this,n=this.attr(),l=this.get("el"),r=!1,a=["x","y","width","height","radius"];each_default(t||n,(function(e,t){-1===a.indexOf(t)||r?-1===a.indexOf(t)&&SVG_ATTR_MAP[t]&&l.setAttribute(SVG_ATTR_MAP[t],e):(l.setAttribute("d",A._assembleRect(n)),r=!0)}))},t.prototype._assembleRect=function(e){var t=e.x,A=e.y,n=e.width,l=e.height,r=e.radius;if(!r)return"M "+t+","+A+" l "+n+",0 l 0,"+l+" l"+-n+" 0 z";var a=parseRadius(r);return is_array_default(r)?1===r.length?a.r1=a.r2=a.r3=a.r4=r[0]:2===r.length?(a.r1=a.r3=r[0],a.r2=a.r4=r[1]):3===r.length?(a.r1=r[0],a.r2=a.r4=r[1],a.r3=r[2]):(a.r1=r[0],a.r2=r[1],a.r3=r[2],a.r4=r[3]):a.r1=a.r2=a.r3=a.r4=r,[["M "+(t+a.r1)+","+A],["l "+(n-a.r1-a.r2)+",0"],["a "+a.r2+","+a.r2+",0,0,1,"+a.r2+","+a.r2],["l 0,"+(l-a.r2-a.r3)],["a "+a.r3+","+a.r3+",0,0,1,"+-a.r3+","+a.r3],["l "+(a.r3+a.r4-n)+",0"],["a "+a.r4+","+a.r4+",0,0,1,"+-a.r4+","+-a.r4],["l 0,"+(a.r4+a.r1-l)],["a "+a.r1+","+a.r1+",0,0,1,"+a.r1+","+-a.r1],["z"]].join(" ")},t}(base_default2),rect_default2=Rect,LETTER_SPACING=.3,BASELINE_MAP={top:"before-edge",middle:"central",bottom:"after-edge",alphabetic:"baseline",hanging:"hanging"},BASELINE_MAP_FOR_FIREFOX={top:"text-before-edge",middle:"central",bottom:"text-after-edge",alphabetic:"alphabetic",hanging:"hanging"},ANCHOR_MAP={left:"left",start:"left",center:"middle",right:"end",end:"end"},Text=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type="text",t.canFill=!0,t.canStroke=!0,t}return __extends(t,e),t.prototype.getDefaultAttrs=function(){var t=e.prototype.getDefaultAttrs.call(this);return __assign(__assign({},t),{x:0,y:0,text:null,fontSize:12,fontFamily:"sans-serif",fontStyle:"normal",fontWeight:"normal",fontVariant:"normal",textAlign:"start",textBaseline:"bottom"})},t.prototype.createPath=function(e,t){var A=this,n=this.attr(),l=this.get("el");this._setFont(),each_default(t||n,(function(e,t){"text"===t?A._setText(""+e):"matrix"===t&&e?setTransform(A):SVG_ATTR_MAP[t]&&l.setAttribute(SVG_ATTR_MAP[t],e)})),l.setAttribute("paint-order","stroke"),l.setAttribute("style","stroke-linecap:butt; stroke-linejoin:miter;")},t.prototype._setFont=function(){var e=this.get("el"),t=this.attr(),A=t.textBaseline,n=t.textAlign,l=detect();l&&"firefox"===l.name?e.setAttribute("dominant-baseline",BASELINE_MAP_FOR_FIREFOX[A]||"alphabetic"):e.setAttribute("alignment-baseline",BASELINE_MAP[A]||"baseline"),e.setAttribute("text-anchor",ANCHOR_MAP[n]||"left")},t.prototype._setText=function(e){var t=this.get("el"),A=this.attr(),n=A.x,l=A.textBaseline,r=void 0===l?"bottom":l;if(e)if(~e.indexOf("\n")){var a=e.split("\n"),o=a.length-1,s="";each_default(a,(function(e,t){0===t?"alphabetic"===r?s+='<tspan x="'+n+'" dy="'+-o+'em">'+e+"</tspan>":"top"===r?s+='<tspan x="'+n+'" dy="0.9em">'+e+"</tspan>":"middle"===r?s+='<tspan x="'+n+'" dy="'+-(o-1)/2+'em">'+e+"</tspan>":"bottom"===r?s+='<tspan x="'+n+'" dy="-'+(o+LETTER_SPACING)+'em">'+e+"</tspan>":"hanging"===r&&(s+='<tspan x="'+n+'" dy="'+(-(o-1)-LETTER_SPACING)+'em">'+e+"</tspan>"):s+='<tspan x="'+n+'" dy="1em">'+e+"</tspan>"})),t.innerHTML=s}else t.innerHTML=e;else t.innerHTML=""},t}(base_default2),text_default2=Text,regexLG=/^l\s*\(\s*([\d.]+)\s*\)\s*(.*)/i,regexRG=/^r\s*\(\s*([\d.]+)\s*,\s*([\d.]+)\s*,\s*([\d.]+)\s*\)\s*(.*)/i,regexColorStop=/[\d.]+:(#[^\s]+|[^)]+\))/gi;function addStop(e){var t=e.match(regexColorStop);if(!t)return"";var A="";return t.sort((function(e,t){return e=e.split(":"),t=t.split(":"),Number(e[0])-Number(t[0])})),each_default(t,(function(e){e=e.split(":"),A+='<stop offset="'+e[0]+'" stop-color="'+e[1]+'"></stop>'})),A}function parseLineGradient(e,t){var A,n,l=regexLG.exec(e),r=mod_default(to_radian_default(parseFloat(l[1])),2*Math.PI),a=l[2];r>=0&&r<.5*Math.PI?(A={x:0,y:0},n={x:1,y:1}):.5*Math.PI<=r&&r<Math.PI?(A={x:1,y:0},n={x:0,y:1}):Math.PI<=r&&r<1.5*Math.PI?(A={x:1,y:1},n={x:0,y:0}):(A={x:0,y:1},n={x:1,y:0});var o=Math.tan(r),s=o*o,i=(n.x-A.x+o*(n.y-A.y))/(s+1)+A.x,u=o*(n.x-A.x+o*(n.y-A.y))/(s+1)+A.y;t.setAttribute("x1",A.x),t.setAttribute("y1",A.y),t.setAttribute("x2",i),t.setAttribute("y2",u),t.innerHTML=addStop(a)}function parseRadialGradient(e,t){var A=regexRG.exec(e),n=parseFloat(A[1]),l=parseFloat(A[2]),r=parseFloat(A[3]),a=A[4];t.setAttribute("cx",n),t.setAttribute("cy",l),t.setAttribute("r",r),t.innerHTML=addStop(a)}var Gradient=function(){function e(e){this.cfg={};var t=null,A=unique_id_default("gradient_");return"l"===e.toLowerCase()[0]?parseLineGradient(e,t=createSVGElement("linearGradient")):parseRadialGradient(e,t=createSVGElement("radialGradient")),t.setAttribute("id",A),this.el=t,this.id=A,this.cfg=e,this}return e.prototype.match=function(e,t){return this.cfg===t},e}(),gradient_default=Gradient,ATTR_MAP={shadowColor:"color",shadowOpacity:"opacity",shadowBlur:"blur",shadowOffsetX:"dx",shadowOffsetY:"dy"},SHADOW_DIMENSION={x:"-40%",y:"-40%",width:"200%",height:"200%"},Shadow=function(){function e(e){this.type="filter",this.cfg={},this.type="filter";var t=createSVGElement("filter");return each_default(SHADOW_DIMENSION,(function(e,A){t.setAttribute(A,e)})),this.el=t,this.id=unique_id_default("filter_"),this.el.id=this.id,this.cfg=e,this._parseShadow(e,t),this}return e.prototype.match=function(e,t){if(this.type!==e)return!1;var A=!0,n=this.cfg;return each_default(Object.keys(n),(function(e){if(n[e]!==t[e])return A=!1,!1})),A},e.prototype.update=function(e,t){var A=this.cfg;return A[ATTR_MAP[e]]=t,this._parseShadow(A,this.el),this},e.prototype._parseShadow=function(e,t){var A='<feDropShadow\n      dx="'+(e.dx||0)+'"\n      dy="'+(e.dy||0)+'"\n      stdDeviation="'+(e.blur?e.blur/10:0)+'"\n      flood-color="'+(e.color?e.color:"#000")+'"\n      flood-opacity="'+(e.opacity?e.opacity:1)+'"\n      />';t.innerHTML=A},e}(),shadow_default=Shadow,Arrow=function(){function e(e,t){this.cfg={};var A=createSVGElement("marker"),n=unique_id_default("marker_");A.setAttribute("id",n);var l=createSVGElement("path");l.setAttribute("stroke",e.stroke||"none"),l.setAttribute("fill",e.fill||"none"),A.appendChild(l),A.setAttribute("overflow","visible"),A.setAttribute("orient","auto-start-reverse"),this.el=A,this.child=l,this.id=n;var r=e["marker-start"===t?"startArrow":"endArrow"];return this.stroke=e.stroke||"#000",!0===r?this._setDefaultPath(t,l):(this.cfg=r,this._setMarker(e.lineWidth,l)),this}return e.prototype.match=function(){return!1},e.prototype._setDefaultPath=function(e,t){var A=this.el;t.setAttribute("d","M0,0 L"+10*Math.cos(Math.PI/6)+",5 L0,10"),A.setAttribute("refX",""+10*Math.cos(Math.PI/6)),A.setAttribute("refY","5")},e.prototype._setMarker=function(e,t){var A=this.el,n=this.cfg.path,l=this.cfg.d;is_array_default(n)&&(n=n.map((function(e){return e.join(" ")})).join("")),t.setAttribute("d",n),A.appendChild(t),l&&A.setAttribute("refX",""+l/e)},e.prototype.update=function(e){var t=this.child;t.attr?t.attr("fill",e):t.setAttribute("fill",e)},e}(),arrow_default=Arrow,Clip=function(){function e(e){this.type="clip",this.cfg={};var t=createSVGElement("clipPath");this.el=t,this.id=unique_id_default("clip_"),t.id=this.id;var A=e.cfg.el;return t.appendChild(A),this.cfg=e,this}return e.prototype.match=function(){return!1},e.prototype.remove=function(){var e=this.el;e.parentNode.removeChild(e)},e}(),clip_default=Clip,regexPR=/^p\s*\(\s*([axyn])\s*\)\s*(.*)/i,Pattern=function(){function e(e){this.cfg={};var t=createSVGElement("pattern");t.setAttribute("patternUnits","userSpaceOnUse");var A=createSVGElement("image");t.appendChild(A);var n=unique_id_default("pattern_");t.id=n,this.el=t,this.id=n,this.cfg=e;var l=regexPR.exec(e)[2];A.setAttribute("href",l);var r=new Image;function a(){t.setAttribute("width",""+r.width),t.setAttribute("height",""+r.height)}return l.match(/^data:/i)||(r.crossOrigin="Anonymous"),r.src=l,r.complete?a():(r.onload=a,r.src=r.src),this}return e.prototype.match=function(e,t){return this.cfg===t},e}(),pattern_default=Pattern,Defs=function(){function e(e){var t=createSVGElement("defs"),A=unique_id_default("defs_");t.id=A,e.appendChild(t),this.children=[],this.defaultArrow={},this.el=t,this.canvas=e}return e.prototype.find=function(e,t){for(var A=this.children,n=null,l=0;l<A.length;l++)if(A[l].match(e,t)){n=A[l].id;break}return n},e.prototype.findById=function(e){for(var t=this.children,A=null,n=0;n<t.length;n++)if(t[n].id===e){A=t[n];break}return A},e.prototype.add=function(e){this.children.push(e),e.canvas=this.canvas,e.parent=this},e.prototype.getDefaultArrow=function(e,t){var A=e.stroke||e.strokeStyle;if(this.defaultArrow[A])return this.defaultArrow[A].id;var n=new arrow_default(e,t);return this.defaultArrow[A]=n,this.el.appendChild(n.el),this.add(n),n.id},e.prototype.addGradient=function(e){var t=new gradient_default(e);return this.el.appendChild(t.el),this.add(t),t.id},e.prototype.addArrow=function(e,t){var A=new arrow_default(e,t);return this.el.appendChild(A.el),this.add(A),A.id},e.prototype.addShadow=function(e){var t=new shadow_default(e);return this.el.appendChild(t.el),this.add(t),t.id},e.prototype.addPattern=function(e){var t=new pattern_default(e);return this.el.appendChild(t.el),this.add(t),t.id},e.prototype.addClip=function(e){var t=new clip_default(e);return this.el.appendChild(t.el),this.add(t),t.id},e}(),defs_default=Defs,Canvas2=function(e){function t(t){return e.call(this,__assign(__assign({},t),{autoDraw:!0,renderer:"svg"}))||this}return __extends(t,e),t.prototype.getShapeBase=function(){return shape_exports},t.prototype.getGroupBase=function(){return group_default3},t.prototype.getShape=function(e,t,A){var n=A.target||A.srcElement;if(!SHAPE_TO_TAGS[n.tagName]){for(var l=n.parentNode;l&&!SHAPE_TO_TAGS[l.tagName];)l=l.parentNode;n=l}return this.find((function(e){return e.get("el")===n}))},t.prototype.createDom=function(){var e=createSVGElement("svg"),t=new defs_default(e);return e.setAttribute("width",""+this.get("width")),e.setAttribute("height",""+this.get("height")),this.set("context",t),e},t.prototype.onCanvasChange=function(e){var t=this.get("context"),A=this.get("el");if("sort"===e){var n=this.get("children");n&&n.length&&sortDom(this,(function(e,t){return n.indexOf(e)-n.indexOf(t)?1:0}))}else if("clear"===e){if(A){A.innerHTML="";var l=t.el;l.innerHTML="",A.appendChild(l)}}else"matrix"===e?setTransform(this):"clip"===e?setClip(this,t):"changeSize"===e&&(A.setAttribute("width",""+this.get("width")),A.setAttribute("height",""+this.get("height")))},t.prototype.draw=function(){var e=this.get("context"),t=this.getChildren();setClip(this,e),t.length&&drawChildren(e,t)},t}(canvas_default),canvas_default2=Canvas2,SvgRenderer=class extends BaseRenderer{getCanvasClass(){return canvas_default2}preProcessMarkAttrs(e){return"text"===e.type?{...e.attrs,text:escapeHtml(e.attrs.text)}:e.attrs}onShapeAdd(e,t){if(super.onShapeAdd(e,t),t.class){const A=e.get("el");A&&A.classList&&t.class.split(" ").forEach((e=>{e&&A.classList.add(e)}))}}};function escapeHtml(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}var import_g_canvas=__toESM(require_canvas()),CanvasRenderer=class extends BaseRenderer{getCanvasClass(){return import_g_canvas.Canvas}},RendererRegistry=class{constructor(){this.renderers={svg:SvgRenderer,canvas:CanvasRenderer}}getRendererClass(e){return this.renderers[e]}register(e,t){this.renderers[e]=t}},rendererRegistry=new RendererRegistry;function makeRenderer(e,t){t=t||"svg";const A=rendererRegistry.getRendererClass(t);return A?new A(e):new SvgRenderer(e)}function render(e,t){const A=makeRenderer(e,t.renderer).setContainer(t.container);A.render(),t.onRender&&t.onRender(A)}function initDiagrams(){Object.keys(DIAGRAMS).forEach((e=>{diagramRegistry.registerDiagram(e,DIAGRAMS[e])}))}initDiagrams();var CLASSES={wrapper:"pintora-wrapper"},ConfigStack=class{constructor(){this.list=[]}push(e){this.list.push(e)}pop(){return this.list.pop()}get size(){return this.list.length}},configStack=new ConfigStack,pintoraStandalone={renderTo(e,t){const{container:A,config:n}=t;let l,r,a;l="string"==typeof A?document.querySelector(A):A,n&&(r=config_default.cloneConfig(),configStack.push(r),pintoraStandalone.setConfig(n));try{const A={width:l.clientWidth};a=parseAndDraw(e,safeAssign({containerSize:A},t))}catch(e){(t.onError||console.warn)(e)}try{if(a){let e=a.graphicIR;if(t.enhanceGraphicIR&&(e=t.enhanceGraphicIR(e)),!e.bgColor){const t=a.diagramIR,A=config_default.gnernateNewConfig(t.overrideConfig||{}),n=A.themeConfig.themeVariables?.canvasBackground;n&&(e.bgColor=n)}const A=t.onRender;render(e,{...t,container:l,onRender(e){if(diagramEventManager.wireCurrentEventsToRenderer(e,a.diagramIR),t.eventsHandlers)for(const[A,n]of Object.entries(t.eventsHandlers))diagramEventManager.wireDiagramEventToRenderer(e,A,n,a.diagramIR);A&&A(e)}})}}finally{n&&r&&(config_default.replaceConfig(r),configStack.pop())}},initBrowser(e={}){document.querySelectorAll(".pintora").forEach((e=>{pintoraStandalone.renderContentOf(e)}))},renderContentOf(e,t={}){let A=t.resultContainer;if(!A){const t=e.previousElementSibling;t&&t.classList.contains(CLASSES.wrapper)&&t.remove();const n=document.createElement("div");n.classList.add(CLASSES.wrapper),e.style.display="none",e.parentNode&&e.parentNode.insertBefore(n,e),A=n}const n=pintoraStandalone.getConfigFromElement(e),l=n.renderer||config_default.getConfig().core?.defaultRenderer||"svg";let r=null;n.theme&&(r={themeConfig:{theme:n.theme}});const a=t.getContent?t.getContent(e):e.innerText;return pintoraStandalone.renderTo(a,{container:A,renderer:l,config:r,eventsHandlers:t.eventsHandlers}),A},getConfigFromElement:e=>["renderer","theme"].reduce(((t,A)=>{const n=e.dataset[A];return n&&(t[A]=n),t}),{}),getConfig:config_default.getConfig,setConfig:config_default.setConfig,diagramEventManager:diagramEventManager,configApi:config_default,configEngine:config_engine_exports,diagramRegistry:diagramRegistry,themeRegistry:themeRegistry,symbolRegistry:symbolRegistry,parseAndDraw:parseAndDraw,util:util},defaults_exports={};__export(defaults_exports,{fontDir:()=>fontDir,fontFamily:()=>fontFamily,fontFamilyMappings:()=>fontFamilyMappings,fontSize:()=>fontSize});var import_node_path=__toESM(require_path_browserify(),1),import_node_url=__toESM(require_url2(),1),__dirname=(0,import_node_path.dirname)((0,import_node_url.fileURLToPath)("")),fontSize=16,fontFamily="sans-serif",fontDir=(0,import_node_path.join)(__dirname,"../../","fonts/"),fontFamilyMappings={"sans-serif":"OpenSans-Regular.ttf","Open Sans":"OpenSans-Regular.ttf"},extend2=(...e)=>{var t,A,n;for(t=e.pop(),n=e.length-1;n>=0;n--)for(A in t)e[n].prototype[A]=t[A]},extendStatic=(...e)=>{var t,A,n;for(t=e.pop(),n=e.length-1;n>=0;n--)for(A in t)e[n][A]=t[A]},mixin=(e,t)=>{const A=Object.getOwnPropertyDescriptors(e);Object.defineProperties(t.prototype,A)},$=Symbol("private properties"),EventTarget=class{constructor(){this[$]={},this[$].listeners={}}addEventListener(e,t){e in this[$].listeners||(this[$].listeners[e]=[]),this[$].listeners[e].push(t)}dispatchEvent(e){if(!(e.type in this[$].listeners))return!0;var t=this[$].listeners[e.type];return e.target=this,t.forEach((function(t){t(e)})),!e.defaultPrevented}removeEventListener(e,t){if(e in this[$].listeners)for(var A=this[$].listeners[e],n=0,l=A.length;n<l;n++)if(A[n]===t)return void A.splice(n,1)}},htmlEntities=function(e){return String(e).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;")},emptyElements={br:!0,hr:!0,img:!0,link:!0},tag=function(e){const t=[...e.attrs].map((function(e){return(e.prefix?e.prefix+":":"")+e.localName+'="'+htmlEntities(e.value)+'"'})),{prefix:A,localName:n}=e,l=(A?A+":":"")+n;return"<"+[].concat(l,t).join(" ")+">"+(emptyElements[l.toLowerCase()]?"":e.innerHTML+"</"+l+">")},cloneNode=function(e){const{prefix:t,localName:A,namespaceURI:n,nodeValue:l,ownerDocument:r}=e,a=(t?t+":":"")+A,o=A.includes(":");return new e.constructor(a,{attrs:new Set([...e.attrs].map((e=>e.cloneNode()))),nodeValue:l,ownerDocument:r,local:o},n)},svg="http://www.w3.org/2000/svg",html="http://www.w3.org/1999/xhtml",xml="http://www.w3.org/XML/1998/namespace",xmlns="http://www.w3.org/2000/xmlns/",nodeTypes={ELEMENT_NODE:1,ATTRIBUTE_NODE:2,TEXT_NODE:3,CDATA_SECTION_NODE:4,ENTITY_REFERENCE_NODE:5,ENTITY_NODE:6,PROCESSING_INSTRUCTION_NODE:7,COMMENT_NODE:8,DOCUMENT_NODE:9,DOCUMENT_TYPE_NODE:10,DOCUMENT_FRAGMENT_NODE:11,NOTATION_NODE:12},Node=class e extends EventTarget{constructor(t="",A={},n=null){if(super(),t.includes(":")&&!A.local?[this.prefix,this.localName]=t.split(":"):(this.localName=t,this.prefix=null),this.nodeName=n===html?t.toUpperCase():t,this.namespaceURI=n,this.nodeType=e.ELEMENT_NODE,this.nodeValue=null!=A.nodeValue?A.nodeValue:null,this.childNodes=[],this.attrs=A.attrs||new Set,this.ownerDocument=A.ownerDocument||null,this.parentNode=null,A.childNodes)for(let e=0,t=A.childNodes.length;e<t;++e)this.appendChild(A.childNodes[e])}appendChild(e){return this.insertBefore(e)}cloneNode(e=!1){const t=cloneNode(this);return e&&this.childNodes.forEach((function(A){const n=A.cloneNode(e);t.appendChild(n)})),t}contains(e){if(e===this)return!1;for(;e.parentNode;){if(e===this)return!0;e=e.parentNode}return!1}getRootNode(){return this.parentNode&&this.nodeType!==e.DOCUMENT_NODE?this.parentNode.getRootNode():this}hasChildNodes(){return!!this.childNodes.length}insertBefore(t,A){let n=this.childNodes.indexOf(A);if(-1===n&&(n=this.childNodes.length),t.nodeType===e.DOCUMENT_FRAGMENT_NODE){let e,n=A;for(;e=t.childNodes.pop();)this.insertBefore(e,n),n=e;return t}return t.parentNode&&t.parentNode.removeChild(t),t.parentNode=this,this.childNodes.splice(n,0,t),t}isDefaultNamespace(t){switch(this.nodeType){case e.ELEMENT_NODE:return this.prefix?this.hasAttribute("xmlns")?this.getAttribute("xmlns"):!!this.parentNode&&this.parentNode.isDefaultNamespace(t):this.namespaceURI===t;case e.DOCUMENT_NODE:return this.documentElement.isDefaultNamespace(t);case e.ENTITY_NODE:case e.NOTATION_NODE:case e.DOCUMENT_TYPE_NODE:case e.DOCUMENT_FRAGMENT_NODE:return!1;case e.ATTRIBUTE_NODE:return!!this.ownerElement&&this.ownerElement.isDefaultNamespace(t);default:return!!this.parentNode&&this.parentNode.isDefaultNamespace(t)}}isEqualNode(t){this.normalize(),t.normalize();let A=this.nodeName===t.nodeName;return A=A&&this.localName===t.localName,A=A&&this.namespaceURI===t.namespaceURI,A=A&&this.prefix===t.prefix,A=A&&this.nodeValue===t.nodeValue,A=A&&this.childNodes.length===t.childNodes.length,!!A&&(A=A&&!this.childNodes.reduce(((e,A,n)=>e&&A.isEqualNode(t.childNodes[n])),!0),this.nodeType===e.DOCUMENT_TYPE_NODE&&t.nodeType===e.DOCUMENT_TYPE_NODE&&(A=A&&this.publicId===t.publicId,A=A&&this.systemId===t.systemId,A=A&&this.internalSubset===t.internalSubset),A)}isSameNode(e){return this===e}lookupNamespacePrefix(e,t){if(this.namespaceURI&&this.namespaceURI===e&&this.prefix&&t.lookupNamespaceURI(this.prefix)===e)return this.prefix;for(const[A,n]of this.attrs.entries()){if(!A.includes(":"))continue;const[l,r]=A.split(":");if("xmlns"===l&&n===e&&t.lookupNamespaceURI(r)===e)return r}return this.parentNode?this.parentNode.lookupNamespacePrefix(e,t):null}lookupNamespaceURI(t){switch(this.nodeType){case e.ELEMENT_NODE:if(null!=this.namespaceURI&&this.prefix===t)return this.namespaceURI;for(const[e,A]of this.attrs.entries()){if(!e.includes(":"))continue;const[n,l]=e.split(":");if("xmlns"===n&&l===t)return null!=A?A:null;if("xmlns"===l&&null==t)return null!=A?A:null}return this.parentNode?this.parentNode.lookupNamespaceURI(t):null;case e.DOCUMENT_NODE:return this.documentElement.lookupNamespaceURI(t);case e.ENTITY_NODE:case e.NOTATION_NODE:case e.DOCUMENT_TYPE_NODE:case e.DOCUMENT_FRAGMENT_NODE:return null;case e.ATTRIBUTE_NODE:return this.ownerElement?this.ownerElement.lookupNamespaceURI(t):null;default:return this.parentNode?this.parentNode.lookupNamespaceURI(t):null}}lookupPrefix(t){if(!t)return null;switch(this.nodeType){case e.ELEMENT_NODE:return this.lookupNamespacePrefix(t,this);case e.DOCUMENT_NODE:return this.documentElement.lookupNamespacePrefix(t);case e.ENTITY_NODE:case e.NOTATION_NODE:case e.DOCUMENT_FRAGMENT_NODE:case e.DOCUMENT_TYPE_NODE:return null;case e.ATTRIBUTE_NODE:return this.ownerElement?this.ownerElement.lookupNamespacePrefix(t):null;default:return this.parentNode?this.parentNode.lookupNamespacePrefix(t):null}}normalize(){const t=[];for(const A of this.childNodes){const n=t.shift();if(n){if(A.nodeType===e.TEXT_NODE){if(!A.data){t.unshift(n);continue}if(n.nodeType===e.TEXT_NODE){const e=this.ownerDocument.createTextNode(n.data+A.data);t.push(e);continue}t.push(n,A)}}else A.data&&t.unshift(A)}t.forEach((e=>{e.parentNode=this})),this.childNodes=t}removeChild(e){e.parentNode=null;const t=this.childNodes.indexOf(e);return-1===t||this.childNodes.splice(t,1),e}replaceChild(e,t){const A=t.nextSibling;return this.removeChild(t),this.insertBefore(e,A),t}get nextSibling(){return this.parentNode&&this.parentNode.childNodes[this.parentNode.childNodes.indexOf(this)+1]||null}get previousSibling(){return this.parentNode&&this.parentNode.childNodes[this.parentNode.childNodes.indexOf(this)-1]||null}get textContent(){return this.nodeType===e.TEXT_NODE||this.nodeType===e.CDATA_SECTION_NODE||this.nodeType===e.COMMENT_NODE?this.data:this.childNodes.reduce((function(e,t){return e+t.textContent}),"")}set textContent(t){this.nodeType!==e.TEXT_NODE&&this.nodeType!==e.CDATA_SECTION_NODE&&this.nodeType!==e.COMMENT_NODE?(this.childNodes=[],this.appendChild(this.ownerDocument.createTextNode(t))):this.data=t}get lastChild(){return this.childNodes[this.childNodes.length-1]||null}get firstChild(){return this.childNodes[0]||null}};extendStatic(Node,nodeTypes),extend2(Node,nodeTypes);var Attr=class extends Node{constructor(e,t,A){super(e,{nodeValue:"",...t},A),this.nodeName=A===html?e.toLowerCase():e,this.nodeType=Node.ATTRIBUTE_NODE,this.ownerElement=null}get value(){return this.nodeValue}set value(e){this.nodeValue=e}get name(){return this.nodeName}},NonDocumentTypeChildNode={};Object.defineProperties(NonDocumentTypeChildNode,{previousElementSibling:{get(){let e;for(;e=this.previousSibling;)if(e.nodeType===e.ELEMENT_NODE)return e;return null}},nextElementSibling:{get(){let e;for(;e=this.nextSibling;)if(e.nodeType===e.ELEMENT_NODE)return e;return null}}});var nodesToNode=(e,t)=>{if(1===(e=e.map((e=>"string"==typeof e?t.createTextNode(e):e))).length)return e[0];const A=t.createDocumentFragment();return e.forEach(A.appendChild,A),A},ChildNode={before(...e){if(!this.parentNode)return;const t=nodesToNode(e,this.ownerDocument);this.parentNode.insertBefore(t,this)},after(...e){if(!this.parentNode)return;const t=nodesToNode(e,this.ownerDocument);this.parentNode.insertBefore(t,this.nextSibling)},replaceWith(...e){if(!this.parentNode)return;const t=this.nextSibling,A=nodesToNode(e,this.ownerDocument);this.parentNode.insertBefore(A,t),this.remove()},remove(){this.parentNode&&this.parentNode.removeChild(this)}},CharacterData=class extends Node{constructor(e,t){super(e,t),this.data=this.nodeValue}appendData(e){this.data+=e}deleteData(e,t){this.data=this.data.slice(0,e)+this.data.slice(0,e+t)}insertData(e,t){this.data=this.data.slice(0,e)+t+this.data.slice(e)}replaceData(e,t,A){this.deleteData(e,t),this.insertData(e,A)}substringData(e,t){this.data=this.data.substr(e,t)}get length(){return this.data.length}};mixin(NonDocumentTypeChildNode,CharacterData),mixin(ChildNode,CharacterData);var Comment=class extends CharacterData{constructor(e,t){super(e,t),this.nodeType=Node.COMMENT_NODE}},Event=class{constructor(e){this.type=e,this.cancelable=!1,this.defaultPrevented=!1,this.target=null}preventDefault(){this.cancelable&&(this.defaultPrevented=!0)}},CustomEvent=class extends Event{constructor(e,t={}){super(e),this.detail=t.detail||null,this.cancelable=t.cancelable||!1}},Text2=class extends CharacterData{constructor(e,t){super(e,t),this.nodeType=Node.TEXT_NODE}},NodeFilter=class e{acceptNode(){return e.FILTER_ACCEPT}};extendStatic(NodeFilter,{FILTER_ACCEPT:1,FILTER_REJECT:2,FILTER_IGNORE:4,SHOW_ALL:-1,SHOW_ELEMENT:1,SHOW_TEXT:4,SHOW_ENTITY_REFERENCE:16,SHOW_ENTITY:32,SHOW_PROCESSING_INSTRUCTION:64,SHOW_COMMENT:128,SHOW_DOCUMENT:256,SHOW_DOCUMENT_TYPE:512,SHOW_DOCUMENT_FRAGMENT:1024,SHOW_NOTATION:2048});var showThisNode=(e,t)=>e===NodeFilter.SHOW_ALL||(!!(e&NodeFilter.SHOW_ELEMENT&&t.nodeType===t.ELEMENT_NODE)||(!!(e&NodeFilter.SHOW_TEXT&&t.nodeType===t.TEXT_NODE)||(!!(e&NodeFilter.SHOW_ENTITY_REFERENCE&&t.nodeType===t.ENTITY_REFERENCE_NODE)||(!!(e&NodeFilter.SHOW_ENTITY&&t.nodeType===t.ENTITY_NODE)||(!!(e&NodeFilter.SHOW_PROCESSING_INSTRUCTION&&t.nodeType===t.PROCESSING_INSTRUCTION_NODE)||(!!(e&NodeFilter.SHOW_COMMENT&&t.nodeType===t.COMMENT_NODE)||(!!(e&NodeFilter.SHOW_DOCUMENT&&t.nodeType===t.DOCUMENT_NODE)||(!!(e&NodeFilter.SHOW_DOCUMENT_TYPE&&t.nodeType===t.DOCUMENT_TYPE_NODE)||(!!(e&NodeFilter.SHOW_DOCUMENT_FRAGMENT&&t.nodeType===t.DOCUMENT_FRAGMENT_NODE)||!!(e&NodeFilter.SHOW_NOTATION&&t.nodeType===t.NOTATION_NODE)))))))))),NodeIterator=class e{constructor(e,t=NodeFilter.SHOW_ALL,A=()=>NodeFilter.FILTER_ACCEPT,n=!0){this.root=n?{childNodes:[e]}:e,this.whatToShow=t,this.filter=A}*[Symbol.iterator](){const t=this.root.childNodes;for(const A of t){if(!showThisNode(this.whatToShow,A))continue;const t=this.filter(A);t!==NodeFilter.FILTER_REJECT&&(t===NodeFilter.FILTER_ACCEPT&&(yield A),yield*new e(A,this.whatToShow,this.filter,!1))}return this}},hasClass=(e,t)=>e.className.split(/\s+/).includes(t),elementAccess={getElementsByTagName(e){return[...new NodeIterator(this,NodeFilter.SHOW_ELEMENT,(t=>t.nodeName===e?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_IGNORE),!1)]},getElementsByTagNameNS(e,t){return[...new NodeIterator(this,NodeFilter.SHOW_ELEMENT,(A=>A.isNamespace(e)&&A.nodeName===t?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_IGNORE),!1)]},getElementsByClassName(e){return[...new NodeIterator(this,NodeFilter.SHOW_ELEMENT,(t=>hasClass(t,e)?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_IGNORE),!1)]}},fullHex=function(e){return 4===e.length?["#",e.substring(1,2),e.substring(1,2),e.substring(2,3),e.substring(2,3),e.substring(3,4),e.substring(3,4)].join(""):e},hexToRGB=function(e){if(typeof e instanceof Map){for(const[t,A]of e)e.set(t,hexToRGB(A));return e}return/#[0-9a-f]{3,6}/.test(e)?(e=fullHex(e),"rgb("+[parseInt(e.slice(1,3),16),parseInt(e.slice(3,5),16),parseInt(e.slice(5,7),16)].join(",")+")"):e};function decamelize(e){return String(e).replace(/([a-z])([A-Z])/g,(function(e,t,A){return t+"-"+A.toLowerCase()}))}function camelCase(e){return String(e).replace(/([a-z])-([a-z])/g,(function(e,t,A){return t+A.toUpperCase()}))}function removeQuotes(e){return e.startsWith('"')||e.startsWith("'")?e.slice(1,-1):e}function htmlEntities2(e){return String(e).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;")}function cdata(e){return`<![CDATA[${e}]]>`}function comment(e){return`\x3c!--${e}--\x3e`}var splitNotInBrackets=(e,t)=>{var A,n,l,r=0,a=0,o=0,s=[];for(n=0,l=e.length;n<l;++n)(A=e.charAt(n))!==t||r||a?"("===A?++r:")"===A?--r:"["===A?++a:"]"===A&&--a:(s.push(e.slice(o,n).trim()),o=n+1);return s.push(e.slice(o).trim()),s},transforms=/\)\s*,?\s*/,delimiter=/[\s,]+/,hyphen=/([^e])-/gi,pathLetters=/[MLHVCSQTAZ]/gi,isPathLetter=/[MLHVCSQTAZ]/i,numbersWithDots=/((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi,dots=/\./g,CssQuery=class e{constructor(t){if(e.cache.has(t))return void(this.queries=e.cache.get(t));let A=splitNotInBrackets(t,",");A=A.map((e=>{let t=0,A=0;e=e.replace(/[()[\]>~+]/g,(function(e){return"("===e?++t:")"===e?--t:"["===e?++A:"]"===e&&--A,"()[]".indexOf(e)>-1||A||t?e:" "+e+" "}));const n=[];let l="%";for(let t=0,A=(e=splitNotInBrackets(e," ").filter((e=>!!e.length))).length;t<A;++t)">~+%".indexOf(e[t])>-1?l=e[t]:(n.push([l,e[t]]),l="%");return n})),this.queries=A,e.cacheKeys.length>50&&e.cache.delete(e.cacheKeys.shift()),e.cache.set(t,A),e.cacheKeys.push(t)}matches(e,t){for(let A=this.queries.length;A--;)if(this.matchHelper(this.queries[A],e,t))return!0;return!1}matchHelper(e,t,A){const n=(e=e.slice()).pop();if(!new CssQueryNode(n[1]).matches(t,A))return!1;if(!e.length)return!0;if(","===n[0])return!0;if("+"===n[0])return!!t.previousSibling&&this.matchHelper(e,t.previousSibling,A);if(">"===n[0])return!!t.parentNode&&this.matchHelper(e,t.parentNode,A);if("~"===n[0]){for(;t=t.previousSibling;)if(this.matchHelper(e,t,A))return!0;return!1}if("%"===n[0]){for(;t=t.parentNode;)if(this.matchHelper(e,t,A))return!0;return!1}}};CssQuery.cache=new Map,CssQuery.cacheKeys=[];var nth3=(node,arr,nth)=>{if("even"===nth?nth="2n":"odd"===nth&&(nth="2n+1"),/[^\d\-n+*/]+/.test(nth))return!1;nth=nth.replace("n","*n");for(var i,n=0,nl=arr.length;n<nl&&(i=eval(nth),!(i>nl));++n)if(arr[i-1]===node)return!0;return!1},lower=e=>e.toLowerCase(),eq3=(e,t,A)=>A?lower(e)===lower(t):e===t,attributeMatcher={"=":(e,t,A)=>eq3(t,A,e),"~=":(e,t,A)=>A.split(delimiter).filter((A=>eq3(A,t,e))).length>0,"|=":(e,t,A)=>eq3(A.split(delimiter)[0],t,e),"^=":(e,t,A)=>e?lower(A).startsWith(lower(t)):A.startsWith(t),"$=":(e,t,A)=>e?lower(A).endsWith(lower(t)):A.endsWith(t),"*=":(e,t,A)=>e?lower(A).includes(lower(t)):A.includes(t),"*":(e,t,A)=>null!=A},getAttributeValue=(e,t,A)=>e&&"*"!==e?A.getAttribute(e+":"+t):A.getAttribute(t),pseudoMatcher={"first-child":(e,t)=>t.parentNode&&t.parentNode.firstChild===t,"last-child":(e,t)=>t.parentNode&&t.parentNode.lastChild===t,"nth-child":(e,t)=>t.parentNode&&nth3(t,t.parentNode.childNodes,e),"nth-last-child":(e,t)=>t.parentNode&&nth3(t,t.parentNode.childNodes.slice().reverse(),e),"first-of-type":(e,t)=>t.parentNode&&t.parentNode.childNodes.filter((e=>e.nodeName===t.nodeName))[0]===t,"last-of-type":(e,t)=>t.parentNode&&t.parentNode.childNodes.filter((e=>e.nodeName===t.nodeName)).pop()===t,"nth-of-type":(e,t)=>t.parentNode&&nth3(t,t.parentNode.childNodes.filter((e=>e.nodeName===t.nodeName)),e),"nth-last-of-type":(e,t)=>t.parentNode&&nth3(t,t.parentNode.childNodes.filter((e=>e.nodeName===t.nodeName)).reverse(),e),"only-child":(e,t)=>t.parentNode&&1===t.parentNode.childNodes.length,"only-of-type":(e,t)=>t.parentNode&&1===t.parentNode.childNodes.filter((e=>e.nodeName===t.nodeName)).length,root:(e,t)=>t.ownerDocument.documentElement===t,not:(e,t,A)=>!new CssQuery(e).matches(t,A),matches:(e,t,A)=>new CssQuery(e).matches(t,A),scope:(e,t,A)=>t===A},CssQueryNode=class{constructor(e){this.tag="",this.id="",this.classList=[],this.attrs=[],this.pseudo=[];let t=e.match(/^[\w-]+|^\*/);for(t&&(this.tag=t[0],e=e.slice(this.tag.length));t=/:([\w-]+)(?:\((.+)\))?/g.exec(e);)this.pseudo.push(pseudoMatcher[t[1]].bind(this,removeQuotes(t[2]||""))),e=e.slice(0,t.index)+e.slice(t.index+t[0].length);for(;t=/\[([\w-*]+\|)?([\w-]+)(([=^~$|*]+)(.+?)( +[iI])?)?\]/g.exec(e);){const A=t[1]?t[1].split("|")[0]:null;this.attrs.push({name:t[2],getValue:getAttributeValue.bind(this,A,t[2]),matcher:attributeMatcher[t[4]||"*"].bind(this,!!t[6],removeQuotes((t[5]||"").trim()))}),e=e.slice(0,t.index)+e.slice(t.index+t[0].length)}for(t=e.match(/#([\w-]+)/),t&&(this.id=t[1],e=e.slice(0,t.index)+e.slice(t.index+t[0].length));t=/\.([\w-]+)/g.exec(e);)this.classList.push(t[1]),e=e.slice(0,t.index)+e.slice(t.index+t[0].length)}matches(e,t){let A;if(1!==e.nodeType)return!1;if(e.namespaceURI===html&&(this.tag=this.tag.toUpperCase()),this.tag&&this.tag!==e.nodeName&&"*"!==this.tag)return!1;if(this.id&&this.id!==e.id)return!1;const n=(e.getAttribute("class")||"").split(delimiter).filter((e=>!!e.length));if(this.classList.filter((e=>n.indexOf(e)<0)).length)return!1;for(A=this.attrs.length;A--;){const t=this.attrs[A].getValue(e);if(null===t||!this.attrs[A].matcher(t))return!1}for(A=this.pseudo.length;A--;)if(!this.pseudo[A](e,t))return!1;return!0}},ParentNode={matchWithScope(e,t){return new CssQuery(e).matches(this,t)},query(e,t,A=!1){const n=new NodeIterator(t,NodeFilter.SHOW_ELEMENT,(A=>A.matchWithScope(e,t)?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_IGNORE),!1),l=[];for(const e of n)if(l.push(e),A)return l;return l},querySelectorAll(e){return this.query(e,this)},querySelector(e){return this.query(e,this,!0)[0]||null},closest(e){const t=new CssQuery(e);let A=this;for(;A;){if(t.matches(A,this))return A;A=A.parentNode}return null},prepend(...e){const t=nodesToNode(e,this.ownerDocument);this.insertBefore(t,this.firstChild)},append(...e){const t=nodesToNode(e,this.ownerDocument);this.appendChild(t)},replaceChildren(...e){for(;this.firstChild;)this.removeChild(this.firstChild);this.append(...e)}};Object.defineProperties(ParentNode,{children:{get(){return this.childNodes.filter((function(e){return e.nodeType===e.ELEMENT_NODE}))}},firstElementChild:{get(){for(const e of this.childNodes)if(e&&e.nodeType===e.ELEMENT_NODE)return e;return null}},lastElementChild:{get(){for(const e of this.childNodes.slice().reverse())if(e&&e.nodeType===e.ELEMENT_NODE)return e;return null}},childElementCount:{get(){return this.children.length}}});var NonElementParentNode={getElementById(e){const t=new NodeIterator(this,NodeFilter.SHOW_ELEMENT,(t=>e===t.id?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_IGNORE),!1);for(const e of t)return e;return null}},DocumentFragment=class extends Node{constructor(e,t){super(e,t),this.nodeType=Node.DOCUMENT_FRAGMENT_NODE}};mixin(elementAccess,DocumentFragment),mixin(ParentNode,DocumentFragment),mixin(NonElementParentNode,DocumentFragment);var import_sax=__toESM(require_sax(),1),HTMLParser=function(e,t){let A=t,n=t.ownerDocument,l=null;t.nodeType!==t.DOCUMENT_NODE?e='<svgdom:wrapper xmlns:svgdom="svgdom:rocks">'+e+"</svgdom:wrapper>":n=t;const r=import_sax.default.parser(!0,{xmlns:!0,strictEntities:!0});r.onerror=e=>{throw e},r.ondoctype=e=>{if(A!==n)throw new Error("Doctype can only be appended to document");A.appendChild(n.implementation.createDocumentType())},r.ontext=e=>A.appendChild(n.createTextNode(e)),r.oncomment=e=>A.appendChild(n.createComment(e)),r.onopentag=e=>{if("svgdom:wrapper"===e.name)return;const t=e.attributes,l=e.uri||A.lookupNamespaceURI(e.prefix||null);var r=n.createElementNS(l,e.name);for(const[e,A]of Object.entries(t))r.setAttributeNS(A.uri,e,A.value);A.appendChild(r),A=r},r.onclosetag=e=>{"svgdom:wrapper"!==e&&(A=A.parentNode)},r.onopencdata=()=>{l=n.createCDATASection("")},r.oncdata=e=>{l.appendData(e)},r.onclosecdata=()=>{A.appendChild(l)},r.write(e)},mapMap=function(e,t){var A=[];return e.forEach((function(e,n){A.push(t(e,n))})),A},mapToCss=function(e){return mapMap(e,(function(e,t){return!!e&&decamelize(t)+": "+e})).filter((function(e){return!!e})).join("; ")+";"||null},cssToMap=function(e){return new Map(e.split(/\s*;\s*/).filter((function(e){return!!e})).map((function(e){return e.split(/\s*:\s*/)})))},validateAndExtract=(e,t)=>{let A=null,n=t;if(e||(e=null),t.includes(":")&&([A,n]=t.split(":")),!e&&A)throw new Error("Namespace Error");if("xml"===A&&e!==xml)throw new Error("Namespace Error");if(("xmlns"===A||"xmlns"===t)&&e!==xmlns)throw new Error("Namespace Error");if("xmlns"!==A&&"xmlns"!==t&&e===xmlns)throw new Error("Namespace Error");return[e,A,n]},getAttributeByNsAndLocalName=(e,t,A)=>(t||(t=null),[...e.attrs].find((e=>e.localName===A&&e.namespaceURI===t))),getAttributeByQualifiedName=(e,t)=>(e.namespaceURI===html&&e.ownerDocument.namespaceURI===html&&(t=t.toLowerCase()),[...e.attrs].find((e=>e.name===t))),getStyleProxy=e=>new Proxy(e,{get(t,A){const n=t.getAttribute("style")||"",l=cssToMap(n);return"cssText"===A?n:"setProperty"===A?function(t,A="",n=""){e.style[t]=A+(n?`!${n}`:"")}:"getPropertyValue"===A?function(t){return e.style[t]??""}:(A=decamelize(A),l.has(A)?l.get(A):"")},set(e,t,A){if("css-text"===(t=decamelize(t)))return e.setAttribute("style",mapToCss(cssToMap(A))),!0;{A=hexToRGB(A.toString());const n=e.getAttribute("style")||"",l=cssToMap(n);return l.set(t,A),e.setAttribute("style",mapToCss(l)),!0}}}),Element3=class extends Node{constructor(e,t,A){super(e,t,A),this.style=getStyleProxy(this),this.tagName=this.nodeName}getAttribute(e){const t=this.getAttributeNode(e);return t?t.value:null}getAttributeNode(e){return getAttributeByQualifiedName(this,e)}getAttributeNodeNS(e,t){return getAttributeByNsAndLocalName(this,e,t)}getAttributeNS(e,t){const A=this.getAttributeNodeNS(e,t);return A?A.value:null}getBoundingClientRect(){throw new Error("Only implemented for SVG Elements")}hasAttribute(e){return!!this.getAttributeNode(e)}hasAttributeNS(e,t){return!!this.getAttributeNodeNS(e,t)}matches(e){return this.matchWithScope(e,this)}removeAttribute(e){const t=this.getAttributeNode(e);return t&&this.removeAttributeNode(t),t}removeAttributeNode(e){if(!this.attrs.delete(e))throw new Error("Attribute cannot be removed because it was not found on the element");return e}removeAttributeNS(e,t){const A=this.getAttributeNodeNS(e,t);return A&&this.removeAttributeNode(A),A}setAttribute(e,t){this.namespaceURI===html&&this.ownerDocument.namespaceURI===html&&(e=e.toLowerCase());let A=this.getAttributeNode(e);A||(A=this.ownerDocument.createAttributeNS(null,e,!0),this.setAttributeNode(A)),A.value=t}setAttributeNode(e){this.attrs.add(e),e.ownerElement=this}setAttributeNS(e,t,A){const[n,l,r]=validateAndExtract(e,t);let a=this.getAttributeNodeNS(n,r);a||(a=this.ownerDocument.createAttributeNS(n,t),this.setAttributeNode(a)),a.value=A,this.attrs.add(a)}get attributes(){return[...this.attrs]}get className(){return this.getAttribute("class")}set className(e){this.setAttribute("class",e)}get id(){return this.getAttribute("id")||""}set id(e){return this.setAttribute("id",e)}get innerHTML(){return this.childNodes.map((e=>e.nodeType===Node.TEXT_NODE?htmlEntities2(e.data):e.nodeType===Node.CDATA_SECTION_NODE?cdata(e.data):e.nodeType===Node.COMMENT_NODE?comment(e.data):e.outerHTML)).join("")}set innerHTML(e){for(;this.firstChild;)this.removeChild(this.firstChild);HTMLParser(e,this)}get outerHTML(){return tag(this)}set outerHTML(e){const t=new DocumentFragment;HTMLParser(e,t),this.parentNode.insertBefore(t,this),this.parentNode.removeChild(this)}};mixin(ParentNode,Element3),mixin(elementAccess,Element3),mixin(NonDocumentTypeChildNode,Element3),mixin(ChildNode,Element3);var HTMLElement2=class extends Element3{},HTMLLinkElement=class extends HTMLElement2{};Object.defineProperties(HTMLLinkElement.prototype,{href:{get(){return this.getAttribute("href")},set(e){this.setAttribute("href",e)}},rel:{get(){return this.getAttribute("rel")},set(e){this.setAttribute("rel",e)}},type:{get(){return this.getAttribute("type")},set(e){this.setAttribute("type",e)}}});var HTMLScriptElement=class extends HTMLElement2{};Object.defineProperties(HTMLScriptElement.prototype,{src:{get(){return this.getAttribute("src")},set(e){this.setAttribute("src",e)}},type:{get(){return this.getAttribute("type")},set(e){this.setAttribute("type",e)}}});var import_image_size=__toESM(require_dist(),1),HTMLImageElement=class extends HTMLElement2{constructor(...e){super(...e),this.naturalWidth=0,this.naturalHeight=0,this.complete=!1}};Object.defineProperties(HTMLImageElement.prototype,{src:{get(){return this.getAttribute("src")},set(e){this.setAttribute("src",e),(0,import_image_size.default)(e,((e,t)=>{e?this.dispatchEvent(new Event("error")):(this.naturalWidth=t.width,this.naturalHeight=t.height,this.complete=!0,this.dispatchEvent(new Event("load")))}))}},height:{get(){return this.getAttribute("height")||this.naturalHeight},set(e){this.setAttribute("height",e)}},width:{get(){return this.getAttribute("width")||this.naturalWidth},set(e){this.setAttribute("width",e)}}});var SVGElement=class extends Element3{get ownerSVGElement(){let e=this;for(;e=e.parentNode;)if("svg"==e.nodeName)return e;return null}get viewportElement(){let e=this;for(;e=e.parentNode;)if(["svg","symbol"].includes(e.nodeName))return e;return null}},SVGPoint=class e{constructor(){this.x=0,this.y=0}matrixTransform(t){var A=new e;return A.x=t.a*this.x+t.c*this.y+1*t.e,A.y=t.b*this.x+t.d*this.y+1*t.f,A}},Point=class e{constructor(e,t){const A=Array.isArray(e)?{x:e[0],y:e[1]}:"object"==typeof e?{x:e.x,y:e.y}:null!=e?{x:e,y:null!=t?t:e}:{x:0,y:0};this.x=A.x,this.y=A.y}abs(){return Math.sqrt(this.absQuad())}absQuad(){return this.x*this.x+this.y*this.y}add(t,A){const n=new e(t,A);return new e(this.x+n.x,this.y+n.y)}angleTo(e){let t=Math.sign(this.x*e.y-this.y*e.x);return t=t||1,t*Math.acos(Math.round(this.dot(e)/(this.abs()*e.abs())*1e6)/1e6)}clone(){return new e(this)}closeTo(e,t=1e-5){return this.equals(e)||Math.abs(this.x-e.x)<t&&Math.abs(this.y-e.y)<t}div(t){return new e(this.x/t,this.y/t)}dot(e){return this.x*e.x+this.y*e.y}equals(e){return this.x===e.x&&this.y===e.y}mul(t){return new e(this.x*t,this.y*t)}native(){const e=new SVGPoint;return e.x=this.x,e.y=this.y,e}normal(){return new e(this.y,-this.x)}normalize(){const e=this.abs();if(!e)throw new Error("Can't normalize vector of zero length");return this.div(e)}reflectAt(e){return e.add(e.sub(this))}sub(t,A){const n=new e(t,A);return new e(this.x-n.x,this.y-n.y)}toArray(){return[this.x,this.y]}toPath(){return["M",this.x,this.y].join(" ")}transform(t){return new e(this.native().matrixTransform(t))}transformO(e){const{x:t,y:A}=this.native().matrixTransform(e);this.x=t,this.y=A}},Box=class e{constructor(e){e="string"==typeof e?e.split(delimiter).map(parseFloat):Array.isArray(e)?e:"object"==typeof e?[null!=e.left?e.left:e.x,null!=e.top?e.top:e.y,e.width,e.height]:4===arguments.length?[].slice.call(arguments):[0,0,0,0],this.x=this.left=e[0],this.y=this.top=e[1],this.width=e[2],this.height=e[3],this.right=this.left+this.width,this.bottom=this.top+this.height}merge(t){if(t instanceof NoBox)return new e(this);var A=Math.min(this.x,t.x),n=Math.min(this.y,t.y);return new e(A,n,Math.max(this.x+this.width,t.x+t.width)-A,Math.max(this.y+this.height,t.y+t.height)-n)}transform(t){var A=1/0,n=-1/0,l=1/0,r=-1/0;return[new Point(this.x,this.y),new Point(this.x+this.width,this.y),new Point(this.x,this.y+this.height),new Point(this.x+this.width,this.y+this.height)].forEach((function(e){e=e.transform(t),A=Math.min(A,e.x),n=Math.max(n,e.x),l=Math.min(l,e.y),r=Math.max(r,e.y)})),new e(A,l,n-A,r-l)}},NoBox=class e extends Box{merge(t){return t instanceof e?new e:new Box(t)}transform(t){return new e}},radians=function(e){return e%360*Math.PI/180};function matrixFactory(e,t,A,n,l,r){var a=new SVGMatrix;return a.a=e,a.b=t,a.c=A,a.d=n,a.e=l,a.f=r,a}var SVGMatrix=class e{constructor(){this.a=this.d=1,this.b=this.c=this.e=this.f=0}inverse(){var e=this.a,t=this.b,A=this.c,n=this.d,l=this.e,r=this.f,a=e*n-t*A;if(!a)throw new Error("Cannot invert "+this);var o=n/a,s=-t/a,i=-A/a,u=e/a,c=-(o*l+i*r),h=-(s*l+u*r);return this.a=o,this.b=s,this.c=i,this.d=u,this.e=c,this.f=h,this}multiply(t){var A=new e;return A.a=this.a*t.a+this.c*t.b+0*this.e,A.b=this.b*t.a+this.d*t.b+0*this.f,A.c=this.a*t.c+this.c*t.d+0*this.e,A.d=this.b*t.c+this.d*t.d+0*this.f,A.e=this.a*t.e+this.c*t.f+1*this.e,A.f=this.b*t.e+this.d*t.f+1*this.f,A}rotate(e,t,A){return e=e%360*Math.PI/180,this.multiply(matrixFactory(Math.cos(e),Math.sin(e),-Math.sin(e),Math.cos(e),t?-Math.cos(e)*t+Math.sin(e)*A+t:0,A?-Math.sin(e)*t-Math.cos(e)*A+A:0))}scale(e,t=e){return this.multiply(matrixFactory(e,0,0,t,0,0))}skew(e,t){return this.multiply(matrixFactory(1,Math.tan(radians(t)),Math.tan(radians(e)),1,0,0))}skewX(e){return this.skew(e,0)}skewY(e){return this.skew(0,e)}toString(){return"SVGMatrix"}translate(e=0,t=0){return this.multiply(matrixFactory(1,0,0,1,e,t))}},PointCloud=class e extends Array{constructor(...e){1===e.length&&"number"==typeof e[0]?super(e.shift()):super(),e.reduce(((e,t)=>(e.push(...t),this)),this)}bbox(){if(!this.length)return new NoBox;let e=1/0,t=-1/0,A=1/0,n=-1/0;return this.forEach((function(l){e=Math.min(e,l.x),t=Math.max(t,l.x),A=Math.min(A,l.y),n=Math.max(n,l.y)})),new Box(e,A,t-e,n-A)}merge(t){return new e(this,t)}transform(t){return new e(this.map((e=>e.transform(t))))}},pathHandlers={M:(e,t,A,n)=>(t.x=n.x=e[0],t.y=n.y=e[1],new Move(t)),L(e,t){const A=new Line2(t.x,t.y,e[0],e[1]);return t.x=e[0],t.y=e[1],A},H:(e,t)=>pathHandlers.L([e[0],t.y],t),V:(e,t)=>pathHandlers.L([t.x,e[0]],t),Q(e,t,A){const n=Cubic.fromQuad(t,new Point(e[0],e[1]),new Point(e[2],e[3]));t.x=e[2],t.y=e[3];const l=new Point(e[0],e[1]).reflectAt(t);return A.x=l.x,A.y=l.y,n},T:(e,t,A,n,l)=>(e=l?[A.x,A.y].concat(e):[t.x,t.y].concat(e),pathHandlers.Q(e,t,A)),C(e,t,A){const n=new Cubic(t,new Point(e[0],e[1]),new Point(e[2],e[3]),new Point(e[4],e[5]));t.x=e[4],t.y=e[5];const l=new Point(e[2],e[3]).reflectAt(t);return A.x=l.x,A.y=l.y,n},S:(e,t,A,n,l)=>(e=l?[A.x,A.y].concat(e):[t.x,t.y].concat(e),pathHandlers.C(e,t,A)),Z:(e,t,A,n)=>pathHandlers.L([n.x,n.y],t),A(e,t,A){const n=new Arc(t,new Point(e[5],e[6]),e[0],e[1],e[2],e[3],e[4]);return t.x=e[5],t.y=e[6],n}},mlhvqtcsa="mlhvqtcsaz".split("");for(let e=0,t=mlhvqtcsa.length;e<t;++e)pathHandlers[mlhvqtcsa[e]]=function(e){return function(t,A,n,l,r){if("H"===e)t[0]=t[0]+A.x;else if("V"===e)t[0]=t[0]+A.y;else if("A"===e)t[5]=t[5]+A.x,t[6]=t[6]+A.y;else for(let e=0,n=t.length;e<n;++e)t[e]=t[e]+(e%2?A.y:A.x);return pathHandlers[e](t,A,n,l,r)}}(mlhvqtcsa[e].toUpperCase());function pathRegReplace(e,t,A,n){return A+n.replace(dots," .")}function isBeziere(e){return e instanceof Cubic}var pathParser=e=>{if(!e)return[];const t={M:2,L:2,H:1,V:1,C:6,S:4,Q:4,T:2,A:7,Z:0};e=e.replace(numbersWithDots,pathRegReplace).replace(pathLetters," $& ").replace(hyphen,"$1 -").trim().split(delimiter);const A=[],n=new Point,l=new Point,r=new Point;let a=0;const o=e.length;let s;do{isPathLetter.test(e[a])?(s=e[a],++a):"M"===s?s="L":"m"===s&&(s="l"),A.push(pathHandlers[s].call(null,e.slice(a,a+=t[s.toUpperCase()]).map(parseFloat),n,r,l,isBeziere(A[A.length-1])))}while(o>a);return A},Move=class{constructor(e){this.p1=e.clone()}bbox(){const e=this.p1;return new Box(e.x,e.y,0,0)}getCloud(){return new PointCloud([this.p1])}length(){return 0}toPath(){return["M",this.p1.x,this.p1.y].join(" ")}toPathFragment(){return["M",this.p1.x,this.p1.y]}transform(e){return this.p1.transformO(e),this}},Arc=class e{constructor(e,t,A,n,l,r,a){if(!A||!n)return new Line2(e,t);A=Math.abs(A),n=Math.abs(n),this.p1=e.clone(),this.p2=t.clone(),this.arc=r?1:0,this.sweep=a?1:0;const o=Math.cos(l/180*Math.PI),s=Math.sin(l/180*Math.PI),i=new Point((e.x-t.x)/2,(e.y-t.y)/2).transform(matrixFactory(o,-s,s,o,0,0)),u=i.x**2/A**2+i.y**2/n**2;u>1&&(A=Math.sqrt(u)*A,n=Math.sqrt(u)*n);const c=A**2,h=n**2,f=c*i.y**2,g=h*i.x**2,d=c*h-f-g;let p;p=Math.abs(d)<1e-15?new Point(0,0):new Point(A*i.y/n,-n*i.x/A).mul(Math.sqrt(d/(f+g))),this.arc===this.sweep&&(p=p.mul(-1));const B=p.transform(matrixFactory(o,s,-s,o,0,0)).add(new Point((e.x+t.x)/2,(e.y+t.y)/2)),E=new Point((i.x-p.x)/A,(i.y-p.y)/n),m=new Point(1,0).angleTo(E);let b=E.angleTo(new Point((-i.x-p.x)/A,(-i.y-p.y)/n));b%=2*Math.PI,!a&&b>0&&(b-=2*Math.PI),a&&b<0&&(b+=2*Math.PI),this.c=B,this.theta=180*m/Math.PI,this.theta2=180*(m+b)/Math.PI,this.delta=180*b/Math.PI,this.rx=A,this.ry=n,this.phi=l,this.cosφ=o,this.sinφ=s}static fromCenterForm(t,A,n,l,r,a){const o=Math.cos(l/180*Math.PI),s=Math.sin(l/180*Math.PI),i=matrixFactory(o,s,-s,o,0,0),u=new Point(A*Math.cos(r/180*Math.PI),n*Math.sin(r/180*Math.PI)).transform(i).add(t),c=new Point(A*Math.cos((r+a)/180*Math.PI),n*Math.sin((r+a)/180*Math.PI)).transform(i).add(t),h=Math.abs(a)>180?1:0;return new e(u,c,A,n,l,h,a>0?1:0)}bbox(){return this.getCloud().bbox()}clone(){return new e(this.p1,this.p2,this.rx,this.ry,this.phi,this.arc,this.sweep)}getCloud(){if(this.p1.equals(this.p2))return new PointCloud([this.p1]);let e=180*Math.atan(-this.sinφ/this.cosφ*this.ry/this.rx)/Math.PI,t=180*Math.atan(this.cosφ/this.sinφ*this.ry/this.rx)/Math.PI,A=this.theta,n=this.theta2;if((A<0||n<0)&&(A+=360,n+=360),n<A){const e=A;A=n,n=e}for(;e-90>e;)e-=90;for(;e<A;)e+=90;for(;t-90>t;)t-=90;for(;t<A;)t+=90;const l=[e,t,e+90,t+90,e+180,t+180,e+270,t+270].filter((function(e){return e>A&&e<n})).map(function(e){for(;this.theta<e;)e-=360;return this.pointAt((e-this.theta)%360/this.delta)}.bind(this)).concat(this.p1,this.p2);return new PointCloud(l)}length(){if(this.p1.equals(this.p2))return 0;const e=this.p2.sub(this.p1).abs(),t=this.splitAt(.5),A=t[0].p2.sub(t[0].p1).abs(),n=t[1].p2.sub(t[1].p1).abs();return A+n-e<1e-5?A+n:t[0].length()+t[1].length()}pointAt(e){if(this.p1.equals(this.p2))return this.p1.clone();const t=(this.theta+e*this.delta)/180*Math.PI,A=Math.sin(t),n=Math.cos(t);return new Point(this.cosφ*this.rx*n-this.sinφ*this.ry*A+this.c.x,this.sinφ*this.ry*n+this.cosφ*this.rx*A+this.c.y)}splitAt(t){const A=Math.abs(this.delta),n=A*t,l=A*(1-t),r=this.pointAt(t);return[new e(this.p1,r,this.rx,this.ry,this.phi,n>180,this.sweep),new e(r,this.p2,this.rx,this.ry,this.phi,l>180,this.sweep)]}toPath(){return["M",this.p1.x,this.p1.y,"A",this.rx,this.ry,this.phi,this.arc,this.sweep,this.p2.x,this.p2.y].join(" ")}toPathFragment(){return["A",this.rx,this.ry,this.phi,this.arc,this.sweep,this.p2.x,this.p2.y]}toString(){return`p1:${this.p1.x.toFixed(4)}${this.p1.y.toFixed(4)},p2:${this.p2.x.toFixed(4)}${this.p2.y.toFixed(4)},c:${this.c.x.toFixed(4)}${this.c.y.toFixed(4)}theta:${this.theta.toFixed(4)},theta2:${this.theta2.toFixed(4)},delta:${this.delta.toFixed(4)},large:${this.arc},sweep:${this.sweep}`}transform(t){return new e(this.p1.transform(t),this.p2.transform(t),this.rx,this.ry,this.phi,this.arc,this.sweep)}},Cubic=class e{constructor(e,t,A,n){e instanceof Point?(this.p1=new Point(e),this.c1=new Point(t),this.c2=new Point(A),this.p2=new Point(n)):(this.p1=new Point(e.p1),this.c1=new Point(e.c1),this.c2=new Point(e.c2),this.p2=new Point(e.p2))}static fromQuad(t,A,n){const l=t.mul(1/3).add(A.mul(2/3)),r=A.mul(2/3).add(n.mul(1/3));return new e(t,l,r,n)}bbox(){return this.getCloud().bbox()}findRoots(){return this.findRootsX().concat(this.findRootsY())}findRootsX(){return this.findRootsXY(this.p1.x,this.c1.x,this.c2.x,this.p2.x)}findRootsXY(e,t,A,n){const l=3*(3*t-e-3*A+n),r=6*(e-2*t+A),a=3*(t-e);return 0===l?[-a/r].filter((function(e){return e>0&&e<1})):r*r-4*l*a<0?[]:r*r-4*l*a==0?[Math.round(-r/(2*l)*1e5)/1e5].filter((function(e){return e>0&&e<1})):[Math.round((-r+Math.sqrt(r*r-4*l*a))/(2*l)*1e5)/1e5,Math.round((-r-Math.sqrt(r*r-4*l*a))/(2*l)*1e5)/1e5].filter((function(e){return e>0&&e<1}))}findRootsY(){return this.findRootsXY(this.p1.y,this.c1.y,this.c2.y,this.p2.y)}flatness(){let e=Math.pow(3*this.c1.x-2*this.p1.x-this.p2.x,2),t=Math.pow(3*this.c1.y-2*this.p1.y-this.p2.y,2);const A=Math.pow(3*this.c2.x-2*this.p2.x-this.p1.x,2),n=Math.pow(3*this.c2.y-2*this.p2.y-this.p1.y,2);return e<A&&(e=A),t<n&&(t=n),e+t}getCloud(){const e=this.findRoots().filter((e=>0!==e&&1!==e)).map((e=>this.pointAt(e))).concat(this.p1,this.p2);return new PointCloud(e)}length(){return this.lengthAt()}lengthAt(e=1){const t=this.splitAt(e)[0].makeFlat(e);let A=0;for(let e=0,n=t.length;e<n;++e)A+=t[e].p2.sub(t[e].p1).abs();return A}makeFlat(e){return this.flatness()>.15?this.splitAt(.5).map((function(t){return t.makeFlat(.5*e)})).reduce((function(e,t){return e.concat(t)}),[]):(this.t_value=e,[this])}pointAt(e){return new Point((1-e)*(1-e)*(1-e)*this.p1.x+3*(1-e)*(1-e)*e*this.c1.x+3*(1-e)*e*e*this.c2.x+e*e*e*this.p2.x,(1-e)*(1-e)*(1-e)*this.p1.y+3*(1-e)*(1-e)*e*this.c1.y+3*(1-e)*e*e*this.c2.y+e*e*e*this.p2.y)}splitAt(t){const A=this.splitAtScalar(t,"x"),n=this.splitAtScalar(t,"y");return[new e(new Point(A[0][0],n[0][0]),new Point(A[0][1],n[0][1]),new Point(A[0][2],n[0][2]),new Point(A[0][3],n[0][3])),new e(new Point(A[1][0],n[1][0]),new Point(A[1][1],n[1][1]),new Point(A[1][2],n[1][2]),new Point(A[1][3],n[1][3]))]}splitAtScalar(e,t){const A=this.p1[t],n=this.c1[t],l=this.c2[t],r=this.p2[t],a=e*e*e*r-3*e*e*(e-1)*l+3*e*(e-1)*(e-1)*n-(e-1)*(e-1)*(e-1)*A;return[[A,e*n-(e-1)*A,e*e*l-2*e*(e-1)*n+(e-1)*(e-1)*A,a],[a,e*e*r-2*e*(e-1)*l+(e-1)*(e-1)*n,e*r-(e-1)*l,r]]}toPath(){return["M",this.p1.x,this.p1.y].concat(this.toPathFragment()).join(" ")}toPathFragment(){return["C",this.c1.x,this.c1.y,this.c2.x,this.c2.y,this.p2.x,this.p2.y]}transform(e){return this.p1.transformO(e),this.c1.transformO(e),this.c2.transformO(e),this.p2.transformO(e),this}},Line2=class{constructor(e,t,A,n){e instanceof Object?(this.p1=new Point(e),this.p2=new Point(t)):(this.p1=new Point(e,t),this.p2=new Point(A,n))}bbox(){return this.getCloud().bbox()}getCloud(){return new PointCloud([this.p1,this.p2])}length(){return this.p2.sub(this.p1).abs()}pointAt(e){const t=this.p2.sub(this.p1).mul(e);return this.p1.add(t)}toPath(){return["M",this.p1.x,this.p1.y,this.p2.x,this.p2.y].join(" ")}toPathFragment(){return["L",this.p2.x,this.p2.y]}transform(e){return this.p1.transformO(e),this.p2.transformO(e),this}},PathSegmentArray=class extends Array{bbox(){return this.reduce(((e,t)=>e.merge(t.bbox())),new NoBox)}cloud(){return this.reduce(((e,t)=>t.getCloud().merge(e)),new PointCloud)}merge(e){return this.concat(e)}transform(e){return this.map((t=>t.transform(e)))}},getPathSegments=function(e){return new PathSegmentArray(...pathParser(e))},pointAtLength=function(e,t){const A=pathParser(e),n=A.map((e=>e.length())),l=n.reduce(((e,t)=>e+t),0);let r=0,a=t/l;if(a>=1)return A[A.length-1].p2?A[A.length-1].p2.native():A[A.length-1].p1.native();if(a<=0)return A[0].p1.native();for(;A[A.length-1]instanceof Move;)A.pop();let o=0;for(const e=n.length;r<e;++r){if(o+=n[r]/l,o>a)break}return a=l/n[r]*(a-o)+1,A[r].pointAt(a).native()},length2=function(e){return pathParser(e).reduce(((e,t)=>e+t.length()),0)},pathFrom={box:({x:e,y:t,width:A,height:n})=>`M ${e}${t}h ${A}v ${n}H ${e}V ${t}`,rect(e){const t=parseFloat(e.getAttribute("width"))||0,A=parseFloat(e.getAttribute("height"))||0,n=parseFloat(e.getAttribute("x"))||0,l=parseFloat(e.getAttribute("y"))||0;return`M ${n}${l}h ${t}v ${A}H ${n}V ${l}`},circle(e){const t=parseFloat(e.getAttribute("r"))||0,A=parseFloat(e.getAttribute("cx"))||0,n=parseFloat(e.getAttribute("cy"))||0;return 0===t?"M0 0":`M ${A-t}${n}A ${t}${t}0 0 0 ${A+t}${n}A ${t}${t}0 0 0 ${A-t}${n}`},ellipse(e){const t=parseFloat(e.getAttribute("rx"))||0,A=parseFloat(e.getAttribute("ry"))||0,n=parseFloat(e.getAttribute("cx"))||0,l=parseFloat(e.getAttribute("cy"))||0;return`M ${n-t}${l}A ${t}${A}0 0 0 ${n+t}${l}A ${t}${A}0 0 0 ${n-t}${l}`},line(e){const t=parseFloat(e.getAttribute("x1"))||0,A=parseFloat(e.getAttribute("x2"))||0;return`M ${t}${parseFloat(e.getAttribute("y1"))||0}L ${A}${parseFloat(e.getAttribute("y2"))||0}`},polygon:e=>`M ${e.getAttribute("points")}z`,polyline:e=>`M ${e.getAttribute("points")}`},import_node_path2=__toESM(require_path_browserify(),1),ENCODING_MAPPING={utf16le:"utf-16le",ucs2:"utf-16le",utf16be:"utf-16be"},DecodeStream=class{constructor(e){this.buffer=e,this.view=new DataView(e.buffer,e.byteOffset,e.byteLength),this.pos=0,this.length=this.buffer.length}readString(e,t="ascii"){t=ENCODING_MAPPING[t]||t;let A=this.readBuffer(e);try{return new TextDecoder(t).decode(A)}catch(e){return A}}readBuffer(e){return this.buffer.slice(this.pos,this.pos+=e)}readUInt24BE(){return(this.readUInt16BE()<<8)+this.readUInt8()}readUInt24LE(){return this.readUInt16LE()+(this.readUInt8()<<16)}readInt24BE(){return(this.readInt16BE()<<8)+this.readUInt8()}readInt24LE(){return this.readUInt16LE()+(this.readInt8()<<16)}};DecodeStream.TYPES={UInt8:1,UInt16:2,UInt24:3,UInt32:4,Int8:1,Int16:2,Int24:3,Int32:4,Float:4,Double:8};for(let e of Object.getOwnPropertyNames(DataView.prototype))if("get"===e.slice(0,3)){let t=e.slice(3).replace("Ui","UI");"Float32"===t?t="Float":"Float64"===t&&(t="Double");let A=DecodeStream.TYPES[t];DecodeStream.prototype["read"+t+(1===A?"":"BE")]=function(){const t=this.view[e](this.pos,!1);return this.pos+=A,t},1!==A&&(DecodeStream.prototype["read"+t+"LE"]=function(){const t=this.view[e](this.pos,!0);return this.pos+=A,t})}var textEncoder=new TextEncoder,isBigEndian=18==new Uint8Array(new Uint16Array([4660]).buffer)[0],EncodeStream=class{constructor(e){this.buffer=e,this.view=new DataView(this.buffer.buffer,this.buffer.byteOffset,this.buffer.byteLength),this.pos=0}writeBuffer(e){this.buffer.set(e,this.pos),this.pos+=e.length}writeString(e,t="ascii"){let A;switch(t){case"utf16le":case"utf16-le":case"ucs2":A=stringToUtf16(e,isBigEndian);break;case"utf16be":case"utf16-be":A=stringToUtf16(e,!isBigEndian);break;case"utf8":A=textEncoder.encode(e);break;case"ascii":A=stringToAscii(e);break;default:throw new Error(`Unsupported encoding:${t}`)}this.writeBuffer(A)}writeUInt24BE(e){this.buffer[this.pos++]=e>>>16&255,this.buffer[this.pos++]=e>>>8&255,this.buffer[this.pos++]=255&e}writeUInt24LE(e){this.buffer[this.pos++]=255&e,this.buffer[this.pos++]=e>>>8&255,this.buffer[this.pos++]=e>>>16&255}writeInt24BE(e){e>=0?this.writeUInt24BE(e):this.writeUInt24BE(e+16777215+1)}writeInt24LE(e){e>=0?this.writeUInt24LE(e):this.writeUInt24LE(e+16777215+1)}fill(e,t){if(t<this.buffer.length)this.buffer.fill(e,this.pos,this.pos+t),this.pos+=t;else{const A=new Uint8Array(t);A.fill(e),this.writeBuffer(A)}}};function stringToUtf16(e,t){let A=new Uint16Array(e.length);for(let n=0;n<e.length;n++){let l=e.charCodeAt(n);t&&(l=l>>8|(255&l)<<8),A[n]=l}return new Uint8Array(A.buffer)}function stringToAscii(e){let t=new Uint8Array(e.length);for(let A=0;A<e.length;A++)t[A]=e.charCodeAt(A);return t}for(let e of Object.getOwnPropertyNames(DataView.prototype))if("set"===e.slice(0,3)){let t=e.slice(3).replace("Ui","UI");"Float32"===t?t="Float":"Float64"===t&&(t="Double");let A=DecodeStream.TYPES[t];EncodeStream.prototype["write"+t+(1===A?"":"BE")]=function(t){this.view[e](this.pos,t,!1),this.pos+=A},1!==A&&(EncodeStream.prototype["write"+t+"LE"]=function(t){this.view[e](this.pos,t,!0),this.pos+=A})}var Base2=class{fromBuffer(e){let t=new DecodeStream(e);return this.decode(t)}toBuffer(e){let t=this.size(e),A=new Uint8Array(t),n=new EncodeStream(A);return this.encode(n,e),A}},NumberT=class extends Base2{constructor(e,t="BE"){super(),this.type=e,this.endian=t,this.fn=this.type,"8"!==this.type[this.type.length-1]&&(this.fn+=this.endian)}size(){return DecodeStream.TYPES[this.type]}decode(e){return e[`read${this.fn}`]()}encode(e,t){return e[`write${this.fn}`](t)}},uint8=new NumberT("UInt8"),uint16be=new NumberT("UInt16","BE"),uint16=uint16be,uint16le=new NumberT("UInt16","LE"),uint24be=new NumberT("UInt24","BE"),uint24=uint24be,uint24le=new NumberT("UInt24","LE"),uint32be=new NumberT("UInt32","BE"),uint32=uint32be,uint32le=new NumberT("UInt32","LE"),int8=new NumberT("Int8"),int16be=new NumberT("Int16","BE"),int16=int16be,int16le=new NumberT("Int16","LE"),int24be=new NumberT("Int24","BE"),int24le=new NumberT("Int24","LE"),int32be=new NumberT("Int32","BE"),int32=int32be,int32le=new NumberT("Int32","LE"),floatbe=new NumberT("Float","BE"),floatle=new NumberT("Float","LE"),doublebe=new NumberT("Double","BE"),doublele=new NumberT("Double","LE"),Fixed=class extends NumberT{constructor(e,t,A=e>>1){super(`Int${e}`,t),this._point=1<<A}decode(e){return super.decode(e)/this._point}encode(e,t){return super.encode(e,t*this._point|0)}},fixed16be=new Fixed(16,"BE"),fixed16=fixed16be,fixed16le=new Fixed(16,"LE"),fixed32be=new Fixed(32,"BE"),fixed32=fixed32be,fixed32le=new Fixed(32,"LE");function resolveLength(e,t,A){let n;if("number"==typeof e?n=e:"function"==typeof e?n=e.call(A,A):A&&"string"==typeof e?n=A[e]:t&&e instanceof NumberT&&(n=e.decode(t)),isNaN(n))throw new Error("Not a fixed size");return n}var PropertyDescriptor=class{constructor(e={}){this.enumerable=!0,this.configurable=!0;for(let t in e){const A=e[t];this[t]=A}}},ArrayT=class extends Base2{constructor(e,t,A="count"){super(),this.type=e,this.length=t,this.lengthType=A}decode(e,t){let A;const{pos:n}=e,l=[];let r=t;if(null!=this.length&&(A=resolveLength(this.length,e,t)),this.length instanceof NumberT&&(Object.defineProperties(l,{parent:{value:t},_startOffset:{value:n},_currentOffset:{value:0,writable:!0},_length:{value:A}}),r=l),null==A||"bytes"===this.lengthType){const n=null!=A?e.pos+A:(null!=t?t._length:void 0)?t._startOffset+t._length:e.length;for(;e.pos<n;)l.push(this.type.decode(e,r))}else for(let t=0,n=A;t<n;t++)l.push(this.type.decode(e,r));return l}size(e,t,A=!0){if(!e)return this.type.size(null,t)*resolveLength(this.length,null,t);let n=0;this.length instanceof NumberT&&(n+=this.length.size(),t={parent:t,pointerSize:0});for(let A of e)n+=this.type.size(A,t);return t&&A&&this.length instanceof NumberT&&(n+=t.pointerSize),n}encode(e,t,A){let n=A;this.length instanceof NumberT&&(n={pointers:[],startOffset:e.pos,parent:A},n.pointerOffset=e.pos+this.size(t,n,!1),this.length.encode(e,t.length));for(let A of t)this.type.encode(e,A,n);if(this.length instanceof NumberT){let t=0;for(;t<n.pointers.length;){const A=n.pointers[t++];A.type.encode(e,A.val,A.parent)}}}},LazyArray=class extends ArrayT{decode(e,t){const{pos:A}=e,n=resolveLength(this.length,e,t);this.length instanceof NumberT&&(t={parent:t,_startOffset:A,_currentOffset:0,_length:n});const l=new LazyArrayValue(this.type,n,e,t);return e.pos+=n*this.type.size(null,t),l}size(e,t){return e instanceof LazyArrayValue&&(e=e.toArray()),super.size(e,t)}encode(e,t,A){return t instanceof LazyArrayValue&&(t=t.toArray()),super.encode(e,t,A)}},LazyArrayValue=class{constructor(e,t,A,n){this.type=e,this.length=t,this.stream=A,this.ctx=n,this.base=this.stream.pos,this.items=[]}get(e){if(!(e<0||e>=this.length)){if(null==this.items[e]){const{pos:t}=this.stream;this.stream.pos=this.base+this.type.size(null,this.ctx)*e,this.items[e]=this.type.decode(this.stream,this.ctx),this.stream.pos=t}return this.items[e]}}toArray(){const e=[];for(let t=0,A=this.length;t<A;t++)e.push(this.get(t));return e}},Bitfield=class extends Base2{constructor(e,t=[]){super(),this.type=e,this.flags=t}decode(e){const t=this.type.decode(e),A={};for(let e=0;e<this.flags.length;e++){const n=this.flags[e];null!=n&&(A[n]=!!(t&1<<e))}return A}size(){return this.type.size()}encode(e,t){let A=0;for(let e=0;e<this.flags.length;e++){const n=this.flags[e];null!=n&&t[n]&&(A|=1<<e)}return this.type.encode(e,A)}},BufferT=class extends Base2{constructor(e){super(),this.length=e}decode(e,t){const A=resolveLength(this.length,e,t);return e.readBuffer(A)}size(e,t){if(!e)return resolveLength(this.length,null,t);let A=e.length;return this.length instanceof NumberT&&(A+=this.length.size()),A}encode(e,t,A){return this.length instanceof NumberT&&this.length.encode(e,t.length),e.writeBuffer(t)}},Optional=class extends Base2{constructor(e,t=!0){super(),this.type=e,this.condition=t}decode(e,t){let{condition:A}=this;if("function"==typeof A&&(A=A.call(t,t)),A)return this.type.decode(e,t)}size(e,t){let{condition:A}=this;return"function"==typeof A&&(A=A.call(t,t)),A?this.type.size(e,t):0}encode(e,t,A){let{condition:n}=this;if("function"==typeof n&&(n=n.call(A,A)),n)return this.type.encode(e,t,A)}},Reserved=class extends Base2{constructor(e,t=1){super(),this.type=e,this.count=t}decode(e,t){e.pos+=this.size(null,t)}size(e,t){const A=resolveLength(this.count,null,t);return this.type.size()*A}encode(e,t,A){return e.fill(0,this.size(t,A))}},StringT=class extends Base2{constructor(e,t="ascii"){super(),this.length=e,this.encoding=t}decode(e,t){let A,n;if(null!=this.length)A=resolveLength(this.length,e,t);else{let t;for(({buffer:t,length:A,pos:n}=e);n<A&&0!==t[n];)++n;A=n-e.pos}let{encoding:l}=this;"function"==typeof l&&(l=l.call(t,t)||"ascii");const r=e.readString(A,l);return null==this.length&&e.pos<e.length&&e.pos++,r}size(e,t){if(!e)return resolveLength(this.length,null,t);let{encoding:A}=this;"function"==typeof A&&(A=A.call(null!=t?t.val:void 0,null!=t?t.val:void 0)||"ascii"),"utf16be"===A&&(A="utf16le");let n=byteLength(e,A);return this.length instanceof NumberT&&(n+=this.length.size()),null==this.length&&n++,n}encode(e,t,A){let{encoding:n}=this;if("function"==typeof n&&(n=n.call(null!=A?A.val:void 0,null!=A?A.val:void 0)||"ascii"),this.length instanceof NumberT&&this.length.encode(e,byteLength(t,n)),e.writeString(t,n),null==this.length)return e.writeUInt8(0)}};function byteLength(e,t){switch(t){case"ascii":return e.length;case"utf8":let A=0;for(let t=0;t<e.length;t++){let n=e.charCodeAt(t);if(n>=55296&&n<=56319&&t<e.length-1){let A=e.charCodeAt(++t);56320==(64512&A)?n=((1023&n)<<10)+(1023&A)+65536:t--}4294967168&n?4294965248&n?4294901760&n?4292870144&n||(A+=4):A+=3:A+=2:A++}return A;case"utf16le":case"utf16-le":case"utf16be":case"utf16-be":case"ucs2":return 2*e.length;default:throw new Error("Unknown encoding "+t)}}var Struct=class extends Base2{constructor(e={}){super(),this.fields=e}decode(e,t,A=0){const n=this._setup(e,t,A);return this._parseFields(e,n,this.fields),null!=this.process&&this.process.call(n,e),n}_setup(e,t,A){const n={};return Object.defineProperties(n,{parent:{value:t},_startOffset:{value:e.pos},_currentOffset:{value:0,writable:!0},_length:{value:A}}),n}_parseFields(e,t,A){for(let l in A){var n;const r=A[l];void 0!==(n="function"==typeof r?r.call(t,t):r.decode(e,t))&&(n instanceof PropertyDescriptor?Object.defineProperty(t,l,n):t[l]=n),t._currentOffset=e.pos-t._startOffset}}size(e,t,A=!0){null==e&&(e={});const n={parent:t,val:e,pointerSize:0};null!=this.preEncode&&this.preEncode.call(e);let l=0;for(let t in this.fields){const A=this.fields[t];null!=A.size&&(l+=A.size(e[t],n))}return A&&(l+=n.pointerSize),l}encode(e,t,A){let n;null!=this.preEncode&&this.preEncode.call(t,e);const l={pointers:[],startOffset:e.pos,parent:A,val:t,pointerSize:0};l.pointerOffset=e.pos+this.size(t,l,!1);for(let A in this.fields)n=this.fields[A],null!=n.encode&&n.encode(e,t[A],l);let r=0;for(;r<l.pointers.length;){const t=l.pointers[r++];t.type.encode(e,t.val,t.parent)}}},getPath=(e,t)=>t.reduce(((e,t)=>e&&e[t]),e),VersionedStruct=class e extends Struct{constructor(e,t={}){super(),this.type=e,this.versions=t,"string"==typeof e&&(this.versionPath=e.split("."))}decode(t,A,n=0){const l=this._setup(t,A,n);"string"==typeof this.type?l.version=getPath(A,this.versionPath):l.version=this.type.decode(t),this.versions.header&&this._parseFields(t,l,this.versions.header);const r=this.versions[l.version];if(null==r)throw new Error(`Unknown version ${l.version}`);return r instanceof e?r.decode(t,A):(this._parseFields(t,l,r),null!=this.process&&this.process.call(l,t),l)}size(e,t,A=!0){let n,l;if(!e)throw new Error("Not a fixed size");null!=this.preEncode&&this.preEncode.call(e);const r={parent:t,val:e,pointerSize:0};let a=0;if("string"!=typeof this.type&&(a+=this.type.size(e.version,r)),this.versions.header)for(n in this.versions.header)l=this.versions.header[n],null!=l.size&&(a+=l.size(e[n],r));const o=this.versions[e.version];if(null==o)throw new Error(`Unknown version ${e.version}`);for(n in o)l=o[n],null!=l.size&&(a+=l.size(e[n],r));return A&&(a+=r.pointerSize),a}encode(e,t,A){let n,l;null!=this.preEncode&&this.preEncode.call(t,e);const r={pointers:[],startOffset:e.pos,parent:A,val:t,pointerSize:0};if(r.pointerOffset=e.pos+this.size(t,r,!1),"string"!=typeof this.type&&this.type.encode(e,t.version),this.versions.header)for(n in this.versions.header)l=this.versions.header[n],null!=l.encode&&l.encode(e,t[n],r);const a=this.versions[t.version];for(n in a)l=a[n],null!=l.encode&&l.encode(e,t[n],r);let o=0;for(;o<r.pointers.length;){const t=r.pointers[o++];t.type.encode(e,t.val,t.parent)}}},Pointer=class extends Base2{constructor(e,t,A={}){if(super(),this.offsetType=e,this.type=t,this.options=A,"void"===this.type&&(this.type=null),null==this.options.type&&(this.options.type="local"),null==this.options.allowNull&&(this.options.allowNull=!0),null==this.options.nullValue&&(this.options.nullValue=0),null==this.options.lazy&&(this.options.lazy=!1),this.options.relativeTo){if("function"!=typeof this.options.relativeTo)throw new Error("relativeTo option must be a function");this.relativeToGetter=A.relativeTo}}decode(e,t){const A=this.offsetType.decode(e,t);if(A===this.options.nullValue&&this.options.allowNull)return null;let n;switch(this.options.type){case"local":n=t._startOffset;break;case"immediate":n=e.pos-this.offsetType.size();break;case"parent":n=t.parent._startOffset;break;default:for(var l=t;l.parent;)l=l.parent;n=l._startOffset||0}this.options.relativeTo&&(n+=this.relativeToGetter(t));const r=A+n;if(null!=this.type){let A=null;const n=()=>{if(null!=A)return A;const{pos:n}=e;return e.pos=r,A=this.type.decode(e,t),e.pos=n,A};return this.options.lazy?new PropertyDescriptor({get:n}):n()}return r}size(e,t){const A=t;switch(this.options.type){case"local":case"immediate":break;case"parent":t=t.parent;break;default:for(;t.parent;)t=t.parent}let{type:n}=this;if(null==n){if(!(e instanceof VoidPointer))throw new Error("Must be a VoidPointer");({type:n}=e),e=e.value}if(e&&t){let l=n.size(e,A);t.pointerSize+=l}return this.offsetType.size()}encode(e,t,A){let n;const l=A;if(null==t)return void this.offsetType.encode(e,this.options.nullValue);switch(this.options.type){case"local":n=A.startOffset;break;case"immediate":n=e.pos+this.offsetType.size(t,l);break;case"parent":n=(A=A.parent).startOffset;break;default:for(n=0;A.parent;)A=A.parent}this.options.relativeTo&&(n+=this.relativeToGetter(l.val)),this.offsetType.encode(e,A.pointerOffset-n);let{type:r}=this;if(null==r){if(!(t instanceof VoidPointer))throw new Error("Must be a VoidPointer");({type:r}=t),t=t.value}return A.pointers.push({type:r,val:t,parent:l}),A.pointerOffset+=r.size(t,l)}},VoidPointer=class{constructor(e,t){this.type=e,this.value=t}};function _define_property(e,t,A){return t in e?Object.defineProperty(e,t,{value:A,enumerable:!0,configurable:!0,writable:!0}):e[t]=A,e}var import_fast_deep_equal=__toESM(require_fast_deep_equal(),1),import_base64_js=__toESM(require_base64_js(),1),import_unicode_trie=__toESM(require_unicode_trie(),1);function $parcel$interopDefault(e){return e&&e.__esModule?e.default:e}var $f4087201da764553$exports={};$f4087201da764553$exports=JSON.parse('{"categories":["Cc","Zs","Po","Sc","Ps","Pe","Sm","Pd","Nd","Lu","Sk","Pc","Ll","So","Lo","Pi","Cf","No","Pf","Lt","Lm","Mn","Me","Mc","Nl","Zl","Zp","Cs","Co"],"combiningClasses":["Not_Reordered","Above","Above_Right","Below","Attached_Above_Right","Attached_Below","Overlay","Iota_Subscript","Double_Below","Double_Above","Below_Right","Above_Left","CCC10","CCC11","CCC12","CCC13","CCC14","CCC15","CCC16","CCC17","CCC18","CCC19","CCC20","CCC21","CCC22","CCC23","CCC24","CCC25","CCC30","CCC31","CCC32","CCC27","CCC28","CCC29","CCC33","CCC34","CCC35","CCC36","Nukta","Virama","CCC84","CCC91","CCC103","CCC107","CCC118","CCC122","CCC129","CCC130","CCC132","Attached_Above","Below_Left","Left","Kana_Voicing","CCC26","Right"],"scripts":["Common","Latin","Bopomofo","Inherited","Greek","Coptic","Cyrillic","Armenian","Hebrew","Arabic","Syriac","Thaana","Nko","Samaritan","Mandaic","Devanagari","Bengali","Gurmukhi","Gujarati","Oriya","Tamil","Telugu","Kannada","Malayalam","Sinhala","Thai","Lao","Tibetan","Myanmar","Georgian","Hangul","Ethiopic","Cherokee","Canadian_Aboriginal","Ogham","Runic","Tagalog","Hanunoo","Buhid","Tagbanwa","Khmer","Mongolian","Limbu","Tai_Le","New_Tai_Lue","Buginese","Tai_Tham","Balinese","Sundanese","Batak","Lepcha","Ol_Chiki","Braille","Glagolitic","Tifinagh","Han","Hiragana","Katakana","Yi","Lisu","Vai","Bamum","Syloti_Nagri","Phags_Pa","Saurashtra","Kayah_Li","Rejang","Javanese","Cham","Tai_Viet","Meetei_Mayek","null","Linear_B","Lycian","Carian","Old_Italic","Gothic","Old_Permic","Ugaritic","Old_Persian","Deseret","Shavian","Osmanya","Osage","Elbasan","Caucasian_Albanian","Linear_A","Cypriot","Imperial_Aramaic","Palmyrene","Nabataean","Hatran","Phoenician","Lydian","Meroitic_Hieroglyphs","Meroitic_Cursive","Kharoshthi","Old_South_Arabian","Old_North_Arabian","Manichaean","Avestan","Inscriptional_Parthian","Inscriptional_Pahlavi","Psalter_Pahlavi","Old_Turkic","Old_Hungarian","Hanifi_Rohingya","Old_Sogdian","Sogdian","Elymaic","Brahmi","Kaithi","Sora_Sompeng","Chakma","Mahajani","Sharada","Khojki","Multani","Khudawadi","Grantha","Newa","Tirhuta","Siddham","Modi","Takri","Ahom","Dogra","Warang_Citi","Nandinagari","Zanabazar_Square","Soyombo","Pau_Cin_Hau","Bhaiksuki","Marchen","Masaram_Gondi","Gunjala_Gondi","Makasar","Cuneiform","Egyptian_Hieroglyphs","Anatolian_Hieroglyphs","Mro","Bassa_Vah","Pahawh_Hmong","Medefaidrin","Miao","Tangut","Nushu","Duployan","SignWriting","Nyiakeng_Puachue_Hmong","Wancho","Mende_Kikakui","Adlam"],"eaw":["N","Na","A","W","H","F"]}');var $747425b437e121da$var$trie=new(0,import_unicode_trie.default)(import_base64_js.default.toByteArray("")),$747425b437e121da$var$log2=Math.log2||(e=>Math.log(e)/Math.LN2),$747425b437e121da$var$bits=e=>$747425b437e121da$var$log2(e)+1|0,$747425b437e121da$var$CATEGORY_BITS=$747425b437e121da$var$bits($parcel$interopDefault($f4087201da764553$exports).categories.length-1),$747425b437e121da$var$COMBINING_BITS=$747425b437e121da$var$bits($parcel$interopDefault($f4087201da764553$exports).combiningClasses.length-1),$747425b437e121da$var$SCRIPT_BITS=$747425b437e121da$var$bits($parcel$interopDefault($f4087201da764553$exports).scripts.length-1),$747425b437e121da$var$EAW_BITS=$747425b437e121da$var$bits($parcel$interopDefault($f4087201da764553$exports).eaw.length-1),$747425b437e121da$var$NUMBER_BITS=10,$747425b437e121da$var$CATEGORY_SHIFT=$747425b437e121da$var$COMBINING_BITS+$747425b437e121da$var$SCRIPT_BITS+$747425b437e121da$var$EAW_BITS+$747425b437e121da$var$NUMBER_BITS,$747425b437e121da$var$COMBINING_SHIFT=$747425b437e121da$var$SCRIPT_BITS+$747425b437e121da$var$EAW_BITS+$747425b437e121da$var$NUMBER_BITS,$747425b437e121da$var$SCRIPT_SHIFT=$747425b437e121da$var$EAW_BITS+$747425b437e121da$var$NUMBER_BITS,$747425b437e121da$var$CATEGORY_MASK=(1<<$747425b437e121da$var$CATEGORY_BITS)-1,$747425b437e121da$var$COMBINING_MASK=(1<<$747425b437e121da$var$COMBINING_BITS)-1,$747425b437e121da$var$SCRIPT_MASK=(1<<$747425b437e121da$var$SCRIPT_BITS)-1,$747425b437e121da$var$EAW_MASK=(1<<$747425b437e121da$var$EAW_BITS)-1,$747425b437e121da$var$NUMBER_MASK=(1<<$747425b437e121da$var$NUMBER_BITS)-1;function $747425b437e121da$export$410364bbb673ddbc(e){const t=$747425b437e121da$var$trie.get(e);return $parcel$interopDefault($f4087201da764553$exports).categories[t>>$747425b437e121da$var$CATEGORY_SHIFT&$747425b437e121da$var$CATEGORY_MASK]}function $747425b437e121da$export$c03b919c6651ed55(e){const t=$747425b437e121da$var$trie.get(e);return $parcel$interopDefault($f4087201da764553$exports).combiningClasses[t>>$747425b437e121da$var$COMBINING_SHIFT&$747425b437e121da$var$COMBINING_MASK]}function $747425b437e121da$export$941569448d136665(e){const t=$747425b437e121da$var$trie.get(e);return $parcel$interopDefault($f4087201da764553$exports).scripts[t>>$747425b437e121da$var$SCRIPT_SHIFT&$747425b437e121da$var$SCRIPT_MASK]}function $747425b437e121da$export$727d9dbc4fbb948f(e){return"Nd"===$747425b437e121da$export$410364bbb673ddbc(e)}function $747425b437e121da$export$e33ad6871e762338(e){const t=$747425b437e121da$export$410364bbb673ddbc(e);return"Mn"===t||"Me"===t||"Mc"===t}var import_unicode_trie2=__toESM(require_unicode_trie(),1),import_dfa=__toESM(require_dfa(),1),import_clone2=__toESM(require_clone(),1),import_tiny_inflate=__toESM(require_tiny_inflate(),1),import_decompress=__toESM(require_decompress(),1);function $parcel$export(e,t,A,n){Object.defineProperty(e,t,{get:A,set:n,enumerable:!0,configurable:!0})}function $parcel$interopDefault2(e){return e&&e.__esModule?e.default:e}var $d636bc798e7178db$exports={};$parcel$export($d636bc798e7178db$exports,"logErrors",(()=>$d636bc798e7178db$export$bd5c5d8b8dcafd78)),$parcel$export($d636bc798e7178db$exports,"registerFormat",(()=>$d636bc798e7178db$export$36b2f24e97d43be)),$parcel$export($d636bc798e7178db$exports,"create",(()=>$d636bc798e7178db$export$185802fd694ee1f5)),$parcel$export($d636bc798e7178db$exports,"defaultLanguage",(()=>$d636bc798e7178db$export$42940898df819940)),$parcel$export($d636bc798e7178db$exports,"setDefaultLanguage",(()=>$d636bc798e7178db$export$5157e7780d44cc36));var $d636bc798e7178db$export$bd5c5d8b8dcafd78=!1,$d636bc798e7178db$var$formats=[];function $d636bc798e7178db$export$36b2f24e97d43be(e){$d636bc798e7178db$var$formats.push(e)}function $d636bc798e7178db$export$185802fd694ee1f5(e,t){for(let A=0;A<$d636bc798e7178db$var$formats.length;A++){let n=$d636bc798e7178db$var$formats[A];if(n.probe(e)){let A=new n(new DecodeStream(e));return t?A.getFont(t):A}}throw new Error("Unknown font format")}var $d636bc798e7178db$export$42940898df819940="en";function $d636bc798e7178db$export$5157e7780d44cc36(e="en"){$d636bc798e7178db$export$42940898df819940=e}function $e71565f2ce09cb6b$export$69a3209f1a06c04d(e,t,A){if(A.get){let e=A.get;A.get=function(){let A=e.call(this);return Object.defineProperty(this,t,{value:A}),A}}else if("function"==typeof A.value){let e=A.value;return{get(){let A=new Map;function n(...t){let n=t.length>0?t[0]:"value";if(A.has(n))return A.get(n);let l=e.apply(this,t);return A.set(n,l),l}return Object.defineProperty(this,t,{value:n}),n}}}}var $26a62205ad06574e$var$SubHeader=new Struct({firstCode:uint16,entryCount:uint16,idDelta:int16,idRangeOffset:uint16}),$26a62205ad06574e$var$CmapGroup=new Struct({startCharCode:uint32,endCharCode:uint32,glyphID:uint32}),$26a62205ad06574e$var$UnicodeValueRange=new Struct({startUnicodeValue:uint24,additionalCount:uint8}),$26a62205ad06574e$var$UVSMapping=new Struct({unicodeValue:uint24,glyphID:uint16}),$26a62205ad06574e$var$DefaultUVS=new ArrayT($26a62205ad06574e$var$UnicodeValueRange,uint32),$26a62205ad06574e$var$NonDefaultUVS=new ArrayT($26a62205ad06574e$var$UVSMapping,uint32),$26a62205ad06574e$var$VarSelectorRecord=new Struct({varSelector:uint24,defaultUVS:new Pointer(uint32,$26a62205ad06574e$var$DefaultUVS,{type:"parent"}),nonDefaultUVS:new Pointer(uint32,$26a62205ad06574e$var$NonDefaultUVS,{type:"parent"})}),$26a62205ad06574e$var$CmapSubtable=new VersionedStruct(uint16,{0:{length:uint16,language:uint16,codeMap:new LazyArray(uint8,256)},2:{length:uint16,language:uint16,subHeaderKeys:new ArrayT(uint16,256),subHeaderCount:e=>Math.max.apply(Math,e.subHeaderKeys),subHeaders:new LazyArray($26a62205ad06574e$var$SubHeader,"subHeaderCount"),glyphIndexArray:new LazyArray(uint16,"subHeaderCount")},4:{length:uint16,language:uint16,segCountX2:uint16,segCount:e=>e.segCountX2>>1,searchRange:uint16,entrySelector:uint16,rangeShift:uint16,endCode:new LazyArray(uint16,"segCount"),reservedPad:new Reserved(uint16),startCode:new LazyArray(uint16,"segCount"),idDelta:new LazyArray(int16,"segCount"),idRangeOffset:new LazyArray(uint16,"segCount"),glyphIndexArray:new LazyArray(uint16,(e=>(e.length-e._currentOffset)/2))},6:{length:uint16,language:uint16,firstCode:uint16,entryCount:uint16,glyphIndices:new LazyArray(uint16,"entryCount")},8:{reserved:new Reserved(uint16),length:uint32,language:uint16,is32:new LazyArray(uint8,8192),nGroups:uint32,groups:new LazyArray($26a62205ad06574e$var$CmapGroup,"nGroups")},10:{reserved:new Reserved(uint16),length:uint32,language:uint32,firstCode:uint32,entryCount:uint32,glyphIndices:new LazyArray(uint16,"numChars")},12:{reserved:new Reserved(uint16),length:uint32,language:uint32,nGroups:uint32,groups:new LazyArray($26a62205ad06574e$var$CmapGroup,"nGroups")},13:{reserved:new Reserved(uint16),length:uint32,language:uint32,nGroups:uint32,groups:new LazyArray($26a62205ad06574e$var$CmapGroup,"nGroups")},14:{length:uint32,numRecords:uint32,varSelectors:new LazyArray($26a62205ad06574e$var$VarSelectorRecord,"numRecords")}}),$26a62205ad06574e$var$CmapEntry=new Struct({platformID:uint16,encodingID:uint16,table:new Pointer(uint32,$26a62205ad06574e$var$CmapSubtable,{type:"parent",lazy:!0})}),$26a62205ad06574e$export$2e2bcd8739ae039=new Struct({version:uint16,numSubtables:uint16,tables:new ArrayT($26a62205ad06574e$var$CmapEntry,"numSubtables")}),$f2612a29f92ac062$export$2e2bcd8739ae039=new Struct({version:int32,revision:int32,checkSumAdjustment:uint32,magicNumber:uint32,flags:uint16,unitsPerEm:uint16,created:new ArrayT(int32,2),modified:new ArrayT(int32,2),xMin:int16,yMin:int16,xMax:int16,yMax:int16,macStyle:new Bitfield(uint16,["bold","italic","underline","outline","shadow","condensed","extended"]),lowestRecPPEM:uint16,fontDirectionHint:int16,indexToLocFormat:int16,glyphDataFormat:int16}),$2c179dd593583073$export$2e2bcd8739ae039=new Struct({version:int32,ascent:int16,descent:int16,lineGap:int16,advanceWidthMax:uint16,minLeftSideBearing:int16,minRightSideBearing:int16,xMaxExtent:int16,caretSlopeRise:int16,caretSlopeRun:int16,caretOffset:int16,reserved:new Reserved(int16,4),metricDataFormat:int16,numberOfMetrics:uint16}),$bdc9060542264b85$var$HmtxEntry=new Struct({advance:uint16,bearing:int16}),$bdc9060542264b85$export$2e2bcd8739ae039=new Struct({metrics:new LazyArray($bdc9060542264b85$var$HmtxEntry,(e=>e.parent.hhea.numberOfMetrics)),bearings:new LazyArray(int16,(e=>e.parent.maxp.numGlyphs-e.parent.hhea.numberOfMetrics))}),$dbf51cb3d3fe409d$export$2e2bcd8739ae039=new Struct({version:int32,numGlyphs:uint16,maxPoints:uint16,maxContours:uint16,maxComponentPoints:uint16,maxComponentContours:uint16,maxZones:uint16,maxTwilightPoints:uint16,maxStorage:uint16,maxFunctionDefs:uint16,maxInstructionDefs:uint16,maxStackElements:uint16,maxSizeOfInstructions:uint16,maxComponentElements:uint16,maxComponentDepth:uint16});function $e449ad78d50845fe$export$badc544e0651b6b1(e,t,A=0){return 1===e&&$e449ad78d50845fe$export$479e671907f486d1[A]?$e449ad78d50845fe$export$479e671907f486d1[A]:$e449ad78d50845fe$export$6fef87b7618bdf0b[e][t]}var $e449ad78d50845fe$var$SINGLE_BYTE_ENCODINGS=new Set(["x-mac-roman","x-mac-cyrillic","iso-8859-6","iso-8859-8"]),$e449ad78d50845fe$var$MAC_ENCODINGS={"x-mac-croatian":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊©⁄€‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ","x-mac-gaelic":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØḂ±≤≥ḃĊċḊḋḞḟĠġṀæøṁṖṗɼƒſṠ«»… ÀÃÕŒœ–—“”‘’ṡẛÿŸṪ€‹›Ŷŷṫ·Ỳỳ⁊ÂÊÁËÈÍÎÏÌÓÔ♣ÒÚÛÙıÝýŴŵẄẅẀẁẂẃ","x-mac-greek":"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦€ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ­","x-mac-icelandic":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ","x-mac-inuit":"ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ°ᒡᒥᒦ•¶ᒧ®©™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł","x-mac-ce":"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ","x-mac-romanian":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂȘ∞±≤≥¥µ∂∑∏π∫ªºΩăș¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›Țț‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ","x-mac-turkish":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙˆ˜¯˘˙˚¸˝˛ˇ"},$e449ad78d50845fe$var$encodingCache=new Map;function $e449ad78d50845fe$export$1dceb3c14ed68bee(e){let t=$e449ad78d50845fe$var$encodingCache.get(e);if(t)return t;let A=$e449ad78d50845fe$var$MAC_ENCODINGS[e];if(A){let t=new Map;for(let e=0;e<A.length;e++)t.set(A.charCodeAt(e),128+e);return $e449ad78d50845fe$var$encodingCache.set(e,t),t}if($e449ad78d50845fe$var$SINGLE_BYTE_ENCODINGS.has(e)){let t=new TextDecoder(e),A=new Uint8Array(128);for(let e=0;e<128;e++)A[e]=128+e;let n=new Map,l=t.decode(A);for(let e=0;e<128;e++)n.set(l.charCodeAt(e),128+e);return $e449ad78d50845fe$var$encodingCache.set(e,n),n}}var $e449ad78d50845fe$export$6fef87b7618bdf0b=[["utf16be","utf16be","utf16be","utf16be","utf16be","utf16be"],["x-mac-roman","shift-jis","big5","euc-kr","iso-8859-6","iso-8859-8","x-mac-greek","x-mac-cyrillic","x-mac-symbol","x-mac-devanagari","x-mac-gurmukhi","x-mac-gujarati","Oriya","Bengali","Tamil","Telugu","Kannada","Malayalam","Sinhalese","Burmese","Khmer","iso-8859-11","Laotian","Georgian","Armenian","hz-gb-2312","Tibetan","Mongolian","Geez","x-mac-ce","Vietnamese","Sindhi"],["ascii"],["symbol","utf16be","shift-jis","gb18030","big5","x-cp20949","johab",null,null,null,"utf16be"]],$e449ad78d50845fe$export$479e671907f486d1={15:"x-mac-icelandic",17:"x-mac-turkish",18:"x-mac-croatian",24:"x-mac-ce",25:"x-mac-ce",26:"x-mac-ce",27:"x-mac-ce",28:"x-mac-ce",30:"x-mac-icelandic",37:"x-mac-romanian",38:"x-mac-ce",39:"x-mac-ce",40:"x-mac-ce",143:"x-mac-inuit",146:"x-mac-gaelic"},$e449ad78d50845fe$export$2092376fd002e13=[[],{0:"en",30:"fo",60:"ks",90:"rw",1:"fr",31:"fa",61:"ku",91:"rn",2:"de",32:"ru",62:"sd",92:"ny",3:"it",33:"zh",63:"bo",93:"mg",4:"nl",34:"nl-BE",64:"ne",94:"eo",5:"sv",35:"ga",65:"sa",128:"cy",6:"es",36:"sq",66:"mr",129:"eu",7:"da",37:"ro",67:"bn",130:"ca",8:"pt",38:"cz",68:"as",131:"la",9:"no",39:"sk",69:"gu",132:"qu",10:"he",40:"si",70:"pa",133:"gn",11:"ja",41:"yi",71:"or",134:"ay",12:"ar",42:"sr",72:"ml",135:"tt",13:"fi",43:"mk",73:"kn",136:"ug",14:"el",44:"bg",74:"ta",137:"dz",15:"is",45:"uk",75:"te",138:"jv",16:"mt",46:"be",76:"si",139:"su",17:"tr",47:"uz",77:"my",140:"gl",18:"hr",48:"kk",78:"km",141:"af",19:"zh-Hant",49:"az-Cyrl",79:"lo",142:"br",20:"ur",50:"az-Arab",80:"vi",143:"iu",21:"hi",51:"hy",81:"id",144:"gd",22:"th",52:"ka",82:"tl",145:"gv",23:"ko",53:"mo",83:"ms",146:"ga",24:"lt",54:"ky",84:"ms-Arab",147:"to",25:"pl",55:"tg",85:"am",148:"el-polyton",26:"hu",56:"tk",86:"ti",149:"kl",27:"es",57:"mn-CN",87:"om",150:"az",28:"lv",58:"mn",88:"so",151:"nn",29:"se",59:"ps",89:"sw"},[],{1078:"af",16393:"en-IN",1159:"rw",1074:"tn",1052:"sq",6153:"en-IE",1089:"sw",1115:"si",1156:"gsw",8201:"en-JM",1111:"kok",1051:"sk",1118:"am",17417:"en-MY",1042:"ko",1060:"sl",5121:"ar-DZ",5129:"en-NZ",1088:"ky",11274:"es-AR",15361:"ar-BH",13321:"en-PH",1108:"lo",16394:"es-BO",3073:"ar",18441:"en-SG",1062:"lv",13322:"es-CL",2049:"ar-IQ",7177:"en-ZA",1063:"lt",9226:"es-CO",11265:"ar-JO",11273:"en-TT",2094:"dsb",5130:"es-CR",13313:"ar-KW",2057:"en-GB",1134:"lb",7178:"es-DO",12289:"ar-LB",1033:"en",1071:"mk",12298:"es-EC",4097:"ar-LY",12297:"en-ZW",2110:"ms-BN",17418:"es-SV",6145:"ary",1061:"et",1086:"ms",4106:"es-GT",8193:"ar-OM",1080:"fo",1100:"ml",18442:"es-HN",16385:"ar-QA",1124:"fil",1082:"mt",2058:"es-MX",1025:"ar-SA",1035:"fi",1153:"mi",19466:"es-NI",10241:"ar-SY",2060:"fr-BE",1146:"arn",6154:"es-PA",7169:"aeb",3084:"fr-CA",1102:"mr",15370:"es-PY",14337:"ar-AE",1036:"fr",1148:"moh",10250:"es-PE",9217:"ar-YE",5132:"fr-LU",1104:"mn",20490:"es-PR",1067:"hy",6156:"fr-MC",2128:"mn-CN",3082:"es",1101:"as",4108:"fr-CH",1121:"ne",1034:"es",2092:"az-Cyrl",1122:"fy",1044:"nb",21514:"es-US",1068:"az",1110:"gl",2068:"nn",14346:"es-UY",1133:"ba",1079:"ka",1154:"oc",8202:"es-VE",1069:"eu",3079:"de-AT",1096:"or",2077:"sv-FI",1059:"be",1031:"de",1123:"ps",1053:"sv",2117:"bn",5127:"de-LI",1045:"pl",1114:"syr",1093:"bn-IN",4103:"de-LU",1046:"pt",1064:"tg",8218:"bs-Cyrl",2055:"de-CH",2070:"pt-PT",2143:"tzm",5146:"bs",1032:"el",1094:"pa",1097:"ta",1150:"br",1135:"kl",1131:"qu-BO",1092:"tt",1026:"bg",1095:"gu",2155:"qu-EC",1098:"te",1027:"ca",1128:"ha",3179:"qu",1054:"th",3076:"zh-HK",1037:"he",1048:"ro",1105:"bo",5124:"zh-MO",1081:"hi",1047:"rm",1055:"tr",2052:"zh",1038:"hu",1049:"ru",1090:"tk",4100:"zh-SG",1039:"is",9275:"smn",1152:"ug",1028:"zh-TW",1136:"ig",4155:"smj-NO",1058:"uk",1155:"co",1057:"id",5179:"smj",1070:"hsb",1050:"hr",1117:"iu",3131:"se-FI",1056:"ur",4122:"hr-BA",2141:"iu-Latn",1083:"se",2115:"uz-Cyrl",1029:"cs",2108:"ga",2107:"se-SE",1091:"uz",1030:"da",1076:"xh",8251:"sms",1066:"vi",1164:"prs",1077:"zu",6203:"sma-NO",1106:"cy",1125:"dv",1040:"it",7227:"sms",1160:"wo",2067:"nl-BE",2064:"it-CH",1103:"sa",1157:"sah",1043:"nl",1041:"ja",7194:"sr-Cyrl-BA",1144:"ii",3081:"en-AU",1099:"kn",3098:"sr",1130:"yo",10249:"en-BZ",1087:"kk",6170:"sr-Latn-BA",4105:"en-CA",1107:"km",2074:"sr-Latn",9225:"en-029",1158:"quc",1132:"nso"}],$2bcf221753ec8e32$var$NameRecord=new Struct({platformID:uint16,encodingID:uint16,languageID:uint16,nameID:uint16,length:uint16,string:new Pointer(uint16,new StringT("length",(e=>$e449ad78d50845fe$export$badc544e0651b6b1(e.platformID,e.encodingID,e.languageID))),{type:"parent",relativeTo:e=>e.parent.stringOffset,allowNull:!1})}),$2bcf221753ec8e32$var$LangTagRecord=new Struct({length:uint16,tag:new Pointer(uint16,new StringT("length","utf16be"),{type:"parent",relativeTo:e=>e.stringOffset})}),$2bcf221753ec8e32$var$NameTable=new VersionedStruct(uint16,{0:{count:uint16,stringOffset:uint16,records:new ArrayT($2bcf221753ec8e32$var$NameRecord,"count")},1:{count:uint16,stringOffset:uint16,records:new ArrayT($2bcf221753ec8e32$var$NameRecord,"count"),langTagCount:uint16,langTags:new ArrayT($2bcf221753ec8e32$var$LangTagRecord,"langTagCount")}}),$2bcf221753ec8e32$export$2e2bcd8739ae039=$2bcf221753ec8e32$var$NameTable,$2bcf221753ec8e32$var$NAMES=["copyright","fontFamily","fontSubfamily","uniqueSubfamily","fullName","version","postscriptName","trademark","manufacturer","designer","description","vendorURL","designerURL","license","licenseURL",null,"preferredFamily","preferredSubfamily","compatibleFull","sampleText","postscriptCIDFontName","wwsFamilyName","wwsSubfamilyName"];$2bcf221753ec8e32$var$NameTable.process=function(e){var t={};for(let e of this.records){let A=$e449ad78d50845fe$export$2092376fd002e13[e.platformID][e.languageID];null==A&&null!=this.langTags&&e.languageID>=32768&&(A=this.langTags[e.languageID-32768].tag),null==A&&(A=e.platformID+"-"+e.languageID);let n=e.nameID>=256?"fontFeatures":$2bcf221753ec8e32$var$NAMES[e.nameID]||e.nameID;null==t[n]&&(t[n]={});let l=t[n];e.nameID>=256&&(l=l[e.nameID]||(l[e.nameID]={})),"string"!=typeof e.string&&"string"==typeof l[A]||(l[A]=e.string)}this.records=t},$2bcf221753ec8e32$var$NameTable.preEncode=function(){if(Array.isArray(this.records))return;this.version=0;let e=[];for(let t in this.records){let A=this.records[t];"fontFeatures"!==t&&(e.push({platformID:3,encodingID:1,languageID:1033,nameID:$2bcf221753ec8e32$var$NAMES.indexOf(t),length:2*A.en.length,string:A.en}),"postscriptName"===t&&e.push({platformID:1,encodingID:0,languageID:0,nameID:$2bcf221753ec8e32$var$NAMES.indexOf(t),length:A.en.length,string:A.en}))}this.records=e,this.count=e.length,this.stringOffset=$2bcf221753ec8e32$var$NameTable.size(this,null,!1)};var $84b272aa31b70606$var$OS2=new VersionedStruct(uint16,{header:{xAvgCharWidth:int16,usWeightClass:uint16,usWidthClass:uint16,fsType:new Bitfield(uint16,[null,"noEmbedding","viewOnly","editable",null,null,null,null,"noSubsetting","bitmapOnly"]),ySubscriptXSize:int16,ySubscriptYSize:int16,ySubscriptXOffset:int16,ySubscriptYOffset:int16,ySuperscriptXSize:int16,ySuperscriptYSize:int16,ySuperscriptXOffset:int16,ySuperscriptYOffset:int16,yStrikeoutSize:int16,yStrikeoutPosition:int16,sFamilyClass:int16,panose:new ArrayT(uint8,10),ulCharRange:new ArrayT(uint32,4),vendorID:new StringT(4),fsSelection:new Bitfield(uint16,["italic","underscore","negative","outlined","strikeout","bold","regular","useTypoMetrics","wws","oblique"]),usFirstCharIndex:uint16,usLastCharIndex:uint16},0:{},1:{typoAscender:int16,typoDescender:int16,typoLineGap:int16,winAscent:uint16,winDescent:uint16,codePageRange:new ArrayT(uint32,2)},2:{typoAscender:int16,typoDescender:int16,typoLineGap:int16,winAscent:uint16,winDescent:uint16,codePageRange:new ArrayT(uint32,2),xHeight:int16,capHeight:int16,defaultChar:uint16,breakChar:uint16,maxContent:uint16},5:{typoAscender:int16,typoDescender:int16,typoLineGap:int16,winAscent:uint16,winDescent:uint16,codePageRange:new ArrayT(uint32,2),xHeight:int16,capHeight:int16,defaultChar:uint16,breakChar:uint16,maxContent:uint16,usLowerOpticalPointSize:uint16,usUpperOpticalPointSize:uint16}}),$84b272aa31b70606$var$versions=$84b272aa31b70606$var$OS2.versions;$84b272aa31b70606$var$versions[3]=$84b272aa31b70606$var$versions[4]=$84b272aa31b70606$var$versions[2];var $84b272aa31b70606$export$2e2bcd8739ae039=$84b272aa31b70606$var$OS2,$32d9e2eb9565d93c$export$2e2bcd8739ae039=new VersionedStruct(fixed32,{header:{italicAngle:fixed32,underlinePosition:int16,underlineThickness:int16,isFixedPitch:uint32,minMemType42:uint32,maxMemType42:uint32,minMemType1:uint32,maxMemType1:uint32},1:{},2:{numberOfGlyphs:uint16,glyphNameIndex:new ArrayT(uint16,"numberOfGlyphs"),names:new ArrayT(new StringT(uint8))},2.5:{numberOfGlyphs:uint16,offsets:new ArrayT(uint8,"numberOfGlyphs")},3:{},4:{map:new ArrayT(uint32,(e=>e.parent.maxp.numGlyphs))}}),$5202bd9d9ad8eaac$export$2e2bcd8739ae039=new Struct({controlValues:new ArrayT(int16)}),$5c0f37ca5ffb1850$export$2e2bcd8739ae039=new Struct({instructions:new ArrayT(uint8)}),$2b2b260902b1c57e$var$loca=new VersionedStruct("head.indexToLocFormat",{0:{offsets:new ArrayT(uint16)},1:{offsets:new ArrayT(uint32)}});$2b2b260902b1c57e$var$loca.process=function(){if(0===this.version&&!this._processed){for(let e=0;e<this.offsets.length;e++)this.offsets[e]<<=1;this._processed=!0}},$2b2b260902b1c57e$var$loca.preEncode=function(){if(0===this.version&&!1!==this._processed){for(let e=0;e<this.offsets.length;e++)this.offsets[e]>>>=1;this._processed=!1}};var $2b2b260902b1c57e$export$2e2bcd8739ae039=$2b2b260902b1c57e$var$loca,$7afb878c7bea4f66$export$2e2bcd8739ae039=new Struct({controlValueProgram:new ArrayT(uint8)}),$6c92b6371bce8bd9$export$2e2bcd8739ae039=new ArrayT(new BufferT),$43e9821ef3717eec$export$2e2bcd8739ae039=class{getCFFVersion(e){for(;e&&!e.hdrSize;)e=e.parent;return e?e.version:-1}decode(e,t){let A=this.getCFFVersion(t)>=2?e.readUInt32BE():e.readUInt16BE();if(0===A)return[];let n,l=e.readUInt8();if(1===l)n=uint8;else if(2===l)n=uint16;else if(3===l)n=uint24;else{if(4!==l)throw new Error(`Bad offset size in CFFIndex:${l}${e.pos}`);n=uint32}let r=[],a=e.pos+(A+1)*l-1,o=n.decode(e);for(let l=0;l<A;l++){let A=n.decode(e);if(null!=this.type){let n=e.pos;e.pos=a+o,t.length=A-o,r.push(this.type.decode(e,t)),e.pos=n}else r.push({offset:a+o,length:A-o});o=A}return e.pos=a+o,r}size(e,t){let A=2;if(0===e.length)return A;let n,l=this.type||new BufferT,r=1;for(let A=0;A<e.length;A++){let n=e[A];r+=l.size(n,t)}if(r<=255)n=uint8;else if(r<=65535)n=uint16;else if(r<=16777215)n=uint24;else{if(!(r<=4294967295))throw new Error("Bad offset in CFFIndex");n=uint32}return A+=1+n.size()*(e.length+1),A+=r-1,A}encode(e,t,A){if(e.writeUInt16BE(t.length),0===t.length)return;let n,l=this.type||new BufferT,r=[],a=1;for(let e of t){let t=l.size(e,A);r.push(t),a+=t}if(a<=255)n=uint8;else if(a<=65535)n=uint16;else if(a<=16777215)n=uint24;else{if(!(a<=4294967295))throw new Error("Bad offset in CFFIndex");n=uint32}e.writeUInt8(n.size()),a=1,n.encode(e,a);for(let t of r)a+=t,n.encode(e,a);for(let n of t)l.encode(e,n,A)}constructor(e){this.type=e}},$c2d28e92708f99da$var$FLOAT_EOF=15,$c2d28e92708f99da$var$FLOAT_LOOKUP=["0","1","2","3","4","5","6","7","8","9",".","E","E-",null,"-"],$c2d28e92708f99da$var$FLOAT_ENCODE_LOOKUP={".":10,E:11,"E-":12,"-":14},$c2d28e92708f99da$export$2e2bcd8739ae039=class{static decode(e,t){if(32<=t&&t<=246)return t-139;if(247<=t&&t<=250)return 256*(t-247)+e.readUInt8()+108;if(251<=t&&t<=254)return 256*-(t-251)-e.readUInt8()-108;if(28===t)return e.readInt16BE();if(29===t)return e.readInt32BE();if(30===t){let t="";for(;;){let A=e.readUInt8(),n=A>>4;if(n===$c2d28e92708f99da$var$FLOAT_EOF)break;t+=$c2d28e92708f99da$var$FLOAT_LOOKUP[n];let l=15&A;if(l===$c2d28e92708f99da$var$FLOAT_EOF)break;t+=$c2d28e92708f99da$var$FLOAT_LOOKUP[l]}return parseFloat(t)}return null}static size(e){if(e.forceLarge&&(e=32768),(0|e)!==e){let t=""+e;return 1+Math.ceil((t.length+1)/2)}return-107<=e&&e<=107?1:108<=e&&e<=1131||-1131<=e&&e<=-108?2:-32768<=e&&e<=32767?3:5}static encode(e,t){let A=Number(t);if(t.forceLarge)return e.writeUInt8(29),e.writeInt32BE(A);if((0|A)===A)return-107<=A&&A<=107?e.writeUInt8(A+139):108<=A&&A<=1131?(A-=108,e.writeUInt8(247+(A>>8)),e.writeUInt8(255&A)):-1131<=A&&A<=-108?(A=-A-108,e.writeUInt8(251+(A>>8)),e.writeUInt8(255&A)):-32768<=A&&A<=32767?(e.writeUInt8(28),e.writeInt16BE(A)):(e.writeUInt8(29),e.writeInt32BE(A));{e.writeUInt8(30);let t=""+A;for(let A=0;A<t.length;A+=2){let l=t[A],r=$c2d28e92708f99da$var$FLOAT_ENCODE_LOOKUP[l]||+l;if(A===t.length-1)var n=$c2d28e92708f99da$var$FLOAT_EOF;else{let e=t[A+1];n=$c2d28e92708f99da$var$FLOAT_ENCODE_LOOKUP[e]||+e}e.writeUInt8(r<<4|15&n)}if(n!==$c2d28e92708f99da$var$FLOAT_EOF)return e.writeUInt8($c2d28e92708f99da$var$FLOAT_EOF<<4)}}},$61aa549f16d58b9b$export$2e2bcd8739ae039=class{decodeOperands(e,t,A,n){if(Array.isArray(e))return n.map(((n,l)=>this.decodeOperands(e[l],t,A,[n])));if(null!=e.decode)return e.decode(t,A,n);switch(e){case"number":case"offset":case"sid":return n[0];case"boolean":return!!n[0];default:return n}}encodeOperands(e,t,A,n){return Array.isArray(e)?n.map(((n,l)=>this.encodeOperands(e[l],t,A,n)[0])):null!=e.encode?e.encode(t,n,A):"number"==typeof n?[n]:"boolean"==typeof n?[+n]:Array.isArray(n)?n:[n]}decode(e,t){let A=e.pos+t.length,n={},l=[];Object.defineProperties(n,{parent:{value:t},_startOffset:{value:e.pos}});for(let e in this.fields){let t=this.fields[e];n[t[1]]=t[3]}for(;e.pos<A;){let t=e.readUInt8();if(t<28){12===t&&(t=t<<8|e.readUInt8());let A=this.fields[t];if(!A)throw new Error(`Unknown operator ${t}`);let r=this.decodeOperands(A[2],e,n,l);null!=r&&(r instanceof PropertyDescriptor?Object.defineProperty(n,A[1],r):n[A[1]]=r),l=[]}else l.push($c2d28e92708f99da$export$2e2bcd8739ae039.decode(e,t))}return n}size(e,t,A=!0){let n={parent:t,val:e,pointerSize:0,startOffset:t.startOffset||0},l=0;for(let t in this.fields){let A=this.fields[t],r=e[A[1]];if(null==r||(0,import_fast_deep_equal.default)(r,A[3]))continue;let a=this.encodeOperands(A[2],null,n,r);for(let e of a)l+=$c2d28e92708f99da$export$2e2bcd8739ae039.size(e);l+=(Array.isArray(A[0])?A[0]:[A[0]]).length}return A&&(l+=n.pointerSize),l}encode(e,t,A){let n={pointers:[],startOffset:e.pos,parent:A,val:t,pointerSize:0};n.pointerOffset=e.pos+this.size(t,n,!1);for(let A of this.ops){let l=t[A[1]];if(null==l||(0,import_fast_deep_equal.default)(l,A[3]))continue;let r=this.encodeOperands(A[2],e,n,l);for(let t of r)$c2d28e92708f99da$export$2e2bcd8739ae039.encode(e,t);let a=Array.isArray(A[0])?A[0]:[A[0]];for(let t of a)e.writeUInt8(t)}let l=0;for(;l<n.pointers.length;){let t=n.pointers[l++];t.type.encode(e,t.val,t.parent)}}constructor(e=[]){this.ops=e,this.fields={};for(let t of e){let e=Array.isArray(t[0])?t[0][0]<<8|t[0][1]:t[0];this.fields[e]=t}}},$0e34a43d05bde82c$export$2e2bcd8739ae039=class extends Pointer{decode(e,t,A){return this.offsetType={decode:()=>A[0]},super.decode(e,t,A)}encode(e,t,A){if(!e)return this.offsetType={size:()=>0},this.size(t,A),[new $0e34a43d05bde82c$var$Ptr(0)];let n=null;return this.offsetType={encode:(e,t)=>n=t},super.encode(e,t,A),[new $0e34a43d05bde82c$var$Ptr(n)]}constructor(e,t={}){null==t.type&&(t.type="global"),super(null,e,t)}},$0e34a43d05bde82c$var$Ptr=class{valueOf(){return this.val}constructor(e){this.val=e,this.forceLarge=!0}},$6d59db2e29cc77b3$var$CFFBlendOp=class{static decode(e,t,A){let n=A.pop();for(;A.length>n;)A.pop()}},$6d59db2e29cc77b3$export$2e2bcd8739ae039=new $61aa549f16d58b9b$export$2e2bcd8739ae039([[6,"BlueValues","delta",null],[7,"OtherBlues","delta",null],[8,"FamilyBlues","delta",null],[9,"FamilyOtherBlues","delta",null],[[12,9],"BlueScale","number",.039625],[[12,10],"BlueShift","number",7],[[12,11],"BlueFuzz","number",1],[10,"StdHW","number",null],[11,"StdVW","number",null],[[12,12],"StemSnapH","delta",null],[[12,13],"StemSnapV","delta",null],[[12,14],"ForceBold","boolean",!1],[[12,17],"LanguageGroup","number",0],[[12,18],"ExpansionFactor","number",.06],[[12,19],"initialRandomSeed","number",0],[20,"defaultWidthX","number",0],[21,"nominalWidthX","number",0],[22,"vsindex","number",0],[23,"blend",$6d59db2e29cc77b3$var$CFFBlendOp,null],[19,"Subrs",new $0e34a43d05bde82c$export$2e2bcd8739ae039(new $43e9821ef3717eec$export$2e2bcd8739ae039,{type:"local"}),null]]),$229224aec43783c5$export$2e2bcd8739ae039=[".notdef","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","onesuperior","logicalnot","mu","trademark","Eth","onehalf","plusminus","Thorn","onequarter","divide","brokenbar","degree","thorn","threequarters","twosuperior","registered","minus","eth","multiply","threesuperior","copyright","Aacute","Acircumflex","Adieresis","Agrave","Aring","Atilde","Ccedilla","Eacute","Ecircumflex","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Ntilde","Oacute","Ocircumflex","Odieresis","Ograve","Otilde","Scaron","Uacute","Ucircumflex","Udieresis","Ugrave","Yacute","Ydieresis","Zcaron","aacute","acircumflex","adieresis","agrave","aring","atilde","ccedilla","eacute","ecircumflex","edieresis","egrave","iacute","icircumflex","idieresis","igrave","ntilde","oacute","ocircumflex","odieresis","ograve","otilde","scaron","uacute","ucircumflex","udieresis","ugrave","yacute","ydieresis","zcaron","exclamsmall","Hungarumlautsmall","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","commasuperior","threequartersemdash","periodsuperior","questionsmall","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","ffi","ffl","parenleftinferior","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","exclamdownsmall","centoldstyle","Lslashsmall","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","Dotaccentsmall","Macronsmall","figuredash","hypheninferior","Ogoneksmall","Ringsmall","Cedillasmall","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall","001.000","001.001","001.002","001.003","Black","Bold","Book","Light","Medium","Regular","Roman","Semibold"],$bc0433d9b7e41f5f$export$dee0027060fa13bd=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","","endash","dagger","daggerdbl","periodcentered","","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","","questiondown","","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","","ring","cedilla","","hungarumlaut","ogonek","caron","emdash","","","","","","","","","","","","","","","","","AE","","ordfeminine","","","","","Lslash","Oslash","OE","ordmasculine","","","","","","ae","","","","dotlessi","","","lslash","oslash","oe","germandbls"],$bc0433d9b7e41f5f$export$4f58f497e14a53c3=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclamsmall","Hungarumlautsmall","","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","questionsmall","","asuperior","bsuperior","centsuperior","dsuperior","esuperior","","","isuperior","","","lsuperior","msuperior","nsuperior","osuperior","","","rsuperior","ssuperior","tsuperior","","ff","fi","fl","ffi","ffl","parenleftinferior","","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdownsmall","centoldstyle","Lslashsmall","","","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","","Dotaccentsmall","","","Macronsmall","","","figuredash","hypheninferior","","","Ogoneksmall","Ringsmall","Cedillasmall","","","","onequarter","onehalf","threequarters","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","","","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall"],$ef658f5c9a1488b2$export$c33b50336c234f16=[".notdef","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","onesuperior","logicalnot","mu","trademark","Eth","onehalf","plusminus","Thorn","onequarter","divide","brokenbar","degree","thorn","threequarters","twosuperior","registered","minus","eth","multiply","threesuperior","copyright","Aacute","Acircumflex","Adieresis","Agrave","Aring","Atilde","Ccedilla","Eacute","Ecircumflex","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Ntilde","Oacute","Ocircumflex","Odieresis","Ograve","Otilde","Scaron","Uacute","Ucircumflex","Udieresis","Ugrave","Yacute","Ydieresis","Zcaron","aacute","acircumflex","adieresis","agrave","aring","atilde","ccedilla","eacute","ecircumflex","edieresis","egrave","iacute","icircumflex","idieresis","igrave","ntilde","oacute","ocircumflex","odieresis","ograve","otilde","scaron","uacute","ucircumflex","udieresis","ugrave","yacute","ydieresis","zcaron"],$ef658f5c9a1488b2$export$3ed0f9e1fee8d489=[".notdef","space","exclamsmall","Hungarumlautsmall","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","questionsmall","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","fi","fl","ffi","ffl","parenleftinferior","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","exclamdownsmall","centoldstyle","Lslashsmall","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","Dotaccentsmall","Macronsmall","figuredash","hypheninferior","Ogoneksmall","Ringsmall","Cedillasmall","onequarter","onehalf","threequarters","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall"],$ef658f5c9a1488b2$export$dc28be11139d4120=[".notdef","space","dollaroldstyle","dollarsuperior","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","fi","fl","ffi","ffl","parenleftinferior","parenrightinferior","hyphensuperior","colonmonetary","onefitted","rupiah","centoldstyle","figuredash","hypheninferior","onequarter","onehalf","threequarters","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior"],$7cbbe4e24ef3cb75$var$LangSysTable=new Struct({reserved:new Reserved(uint16),reqFeatureIndex:uint16,featureCount:uint16,featureIndexes:new ArrayT(uint16,"featureCount")}),$7cbbe4e24ef3cb75$var$LangSysRecord=new Struct({tag:new StringT(4),langSys:new Pointer(uint16,$7cbbe4e24ef3cb75$var$LangSysTable,{type:"parent"})}),$7cbbe4e24ef3cb75$var$Script=new Struct({defaultLangSys:new Pointer(uint16,$7cbbe4e24ef3cb75$var$LangSysTable),count:uint16,langSysRecords:new ArrayT($7cbbe4e24ef3cb75$var$LangSysRecord,"count")}),$7cbbe4e24ef3cb75$var$ScriptRecord=new Struct({tag:new StringT(4),script:new Pointer(uint16,$7cbbe4e24ef3cb75$var$Script,{type:"parent"})}),$7cbbe4e24ef3cb75$export$3e15fc05ce864229=new ArrayT($7cbbe4e24ef3cb75$var$ScriptRecord,uint16),$7cbbe4e24ef3cb75$var$FeatureParams=new Struct({version:uint16,nameID:uint16}),$7cbbe4e24ef3cb75$export$6e91cf7616333d5=new Struct({featureParams:new Pointer(uint16,$7cbbe4e24ef3cb75$var$FeatureParams),lookupCount:uint16,lookupListIndexes:new ArrayT(uint16,"lookupCount")}),$7cbbe4e24ef3cb75$var$FeatureRecord=new Struct({tag:new StringT(4),feature:new Pointer(uint16,$7cbbe4e24ef3cb75$export$6e91cf7616333d5,{type:"parent"})}),$7cbbe4e24ef3cb75$export$aa18130def4b6cb4=new ArrayT($7cbbe4e24ef3cb75$var$FeatureRecord,uint16),$7cbbe4e24ef3cb75$var$LookupFlags=new Struct({markAttachmentType:uint8,flags:new Bitfield(uint8,["rightToLeft","ignoreBaseGlyphs","ignoreLigatures","ignoreMarks","useMarkFilteringSet"])});function $7cbbe4e24ef3cb75$export$df0008c6ff2da22a(e){let t=new Struct({lookupType:uint16,flags:$7cbbe4e24ef3cb75$var$LookupFlags,subTableCount:uint16,subTables:new ArrayT(new Pointer(uint16,e),"subTableCount"),markFilteringSet:new Optional(uint16,(e=>e.flags.flags.useMarkFilteringSet))});return new LazyArray(new Pointer(uint16,t),uint16)}var $7cbbe4e24ef3cb75$var$RangeRecord=new Struct({start:uint16,end:uint16,startCoverageIndex:uint16}),$7cbbe4e24ef3cb75$export$17608c3f81a6111=new VersionedStruct(uint16,{1:{glyphCount:uint16,glyphs:new ArrayT(uint16,"glyphCount")},2:{rangeCount:uint16,rangeRecords:new ArrayT($7cbbe4e24ef3cb75$var$RangeRecord,"rangeCount")}}),$7cbbe4e24ef3cb75$var$ClassRangeRecord=new Struct({start:uint16,end:uint16,class:uint16}),$7cbbe4e24ef3cb75$export$843d551fbbafef71=new VersionedStruct(uint16,{1:{startGlyph:uint16,glyphCount:uint16,classValueArray:new ArrayT(uint16,"glyphCount")},2:{classRangeCount:uint16,classRangeRecord:new ArrayT($7cbbe4e24ef3cb75$var$ClassRangeRecord,"classRangeCount")}}),$7cbbe4e24ef3cb75$export$8215d14a63d9fb10=new Struct({a:uint16,b:uint16,deltaFormat:uint16}),$7cbbe4e24ef3cb75$var$LookupRecord=new Struct({sequenceIndex:uint16,lookupListIndex:uint16}),$7cbbe4e24ef3cb75$var$Rule=new Struct({glyphCount:uint16,lookupCount:uint16,input:new ArrayT(uint16,(e=>e.glyphCount-1)),lookupRecords:new ArrayT($7cbbe4e24ef3cb75$var$LookupRecord,"lookupCount")}),$7cbbe4e24ef3cb75$var$RuleSet=new ArrayT(new Pointer(uint16,$7cbbe4e24ef3cb75$var$Rule),uint16),$7cbbe4e24ef3cb75$var$ClassRule=new Struct({glyphCount:uint16,lookupCount:uint16,classes:new ArrayT(uint16,(e=>e.glyphCount-1)),lookupRecords:new ArrayT($7cbbe4e24ef3cb75$var$LookupRecord,"lookupCount")}),$7cbbe4e24ef3cb75$var$ClassSet=new ArrayT(new Pointer(uint16,$7cbbe4e24ef3cb75$var$ClassRule),uint16),$7cbbe4e24ef3cb75$export$841858b892ce1f4c=new VersionedStruct(uint16,{1:{coverage:new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),ruleSetCount:uint16,ruleSets:new ArrayT(new Pointer(uint16,$7cbbe4e24ef3cb75$var$RuleSet),"ruleSetCount")},2:{coverage:new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),classDef:new Pointer(uint16,$7cbbe4e24ef3cb75$export$843d551fbbafef71),classSetCnt:uint16,classSet:new ArrayT(new Pointer(uint16,$7cbbe4e24ef3cb75$var$ClassSet),"classSetCnt")},3:{glyphCount:uint16,lookupCount:uint16,coverages:new ArrayT(new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),"glyphCount"),lookupRecords:new ArrayT($7cbbe4e24ef3cb75$var$LookupRecord,"lookupCount")}}),$7cbbe4e24ef3cb75$var$ChainRule=new Struct({backtrackGlyphCount:uint16,backtrack:new ArrayT(uint16,"backtrackGlyphCount"),inputGlyphCount:uint16,input:new ArrayT(uint16,(e=>e.inputGlyphCount-1)),lookaheadGlyphCount:uint16,lookahead:new ArrayT(uint16,"lookaheadGlyphCount"),lookupCount:uint16,lookupRecords:new ArrayT($7cbbe4e24ef3cb75$var$LookupRecord,"lookupCount")}),$7cbbe4e24ef3cb75$var$ChainRuleSet=new ArrayT(new Pointer(uint16,$7cbbe4e24ef3cb75$var$ChainRule),uint16),$7cbbe4e24ef3cb75$export$5e6d09e6861162f6=new VersionedStruct(uint16,{1:{coverage:new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),chainCount:uint16,chainRuleSets:new ArrayT(new Pointer(uint16,$7cbbe4e24ef3cb75$var$ChainRuleSet),"chainCount")},2:{coverage:new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),backtrackClassDef:new Pointer(uint16,$7cbbe4e24ef3cb75$export$843d551fbbafef71),inputClassDef:new Pointer(uint16,$7cbbe4e24ef3cb75$export$843d551fbbafef71),lookaheadClassDef:new Pointer(uint16,$7cbbe4e24ef3cb75$export$843d551fbbafef71),chainCount:uint16,chainClassSet:new ArrayT(new Pointer(uint16,$7cbbe4e24ef3cb75$var$ChainRuleSet),"chainCount")},3:{backtrackGlyphCount:uint16,backtrackCoverage:new ArrayT(new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),"backtrackGlyphCount"),inputGlyphCount:uint16,inputCoverage:new ArrayT(new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),"inputGlyphCount"),lookaheadGlyphCount:uint16,lookaheadCoverage:new ArrayT(new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),"lookaheadGlyphCount"),lookupCount:uint16,lookupRecords:new ArrayT($7cbbe4e24ef3cb75$var$LookupRecord,"lookupCount")}}),$1a47b0c45c1c22fe$var$F2DOT14=new Fixed(16,"BE",14),$1a47b0c45c1c22fe$var$RegionAxisCoordinates=new Struct({startCoord:$1a47b0c45c1c22fe$var$F2DOT14,peakCoord:$1a47b0c45c1c22fe$var$F2DOT14,endCoord:$1a47b0c45c1c22fe$var$F2DOT14}),$1a47b0c45c1c22fe$var$VariationRegionList=new Struct({axisCount:uint16,regionCount:uint16,variationRegions:new ArrayT(new ArrayT($1a47b0c45c1c22fe$var$RegionAxisCoordinates,"axisCount"),"regionCount")}),$1a47b0c45c1c22fe$var$DeltaSet=new Struct({shortDeltas:new ArrayT(int16,(e=>e.parent.shortDeltaCount)),regionDeltas:new ArrayT(int8,(e=>e.parent.regionIndexCount-e.parent.shortDeltaCount)),deltas:e=>e.shortDeltas.concat(e.regionDeltas)}),$1a47b0c45c1c22fe$var$ItemVariationData=new Struct({itemCount:uint16,shortDeltaCount:uint16,regionIndexCount:uint16,regionIndexes:new ArrayT(uint16,"regionIndexCount"),deltaSets:new ArrayT($1a47b0c45c1c22fe$var$DeltaSet,"itemCount")}),$1a47b0c45c1c22fe$export$fe1b122a2710f241=new Struct({format:uint16,variationRegionList:new Pointer(uint32,$1a47b0c45c1c22fe$var$VariationRegionList),variationDataCount:uint16,itemVariationData:new ArrayT(new Pointer(uint32,$1a47b0c45c1c22fe$var$ItemVariationData),"variationDataCount")}),$1a47b0c45c1c22fe$var$ConditionTable=new VersionedStruct(uint16,{1:{axisIndex:uint16,axisIndex:uint16,filterRangeMinValue:$1a47b0c45c1c22fe$var$F2DOT14,filterRangeMaxValue:$1a47b0c45c1c22fe$var$F2DOT14}}),$1a47b0c45c1c22fe$var$ConditionSet=new Struct({conditionCount:uint16,conditionTable:new ArrayT(new Pointer(uint32,$1a47b0c45c1c22fe$var$ConditionTable),"conditionCount")}),$1a47b0c45c1c22fe$var$FeatureTableSubstitutionRecord=new Struct({featureIndex:uint16,alternateFeatureTable:new Pointer(uint32,$7cbbe4e24ef3cb75$export$6e91cf7616333d5,{type:"parent"})}),$1a47b0c45c1c22fe$var$FeatureTableSubstitution=new Struct({version:fixed32,substitutionCount:uint16,substitutions:new ArrayT($1a47b0c45c1c22fe$var$FeatureTableSubstitutionRecord,"substitutionCount")}),$1a47b0c45c1c22fe$var$FeatureVariationRecord=new Struct({conditionSet:new Pointer(uint32,$1a47b0c45c1c22fe$var$ConditionSet,{type:"parent"}),featureTableSubstitution:new Pointer(uint32,$1a47b0c45c1c22fe$var$FeatureTableSubstitution,{type:"parent"})}),$1a47b0c45c1c22fe$export$441b70b7971dd419=new Struct({majorVersion:uint16,minorVersion:uint16,featureVariationRecordCount:uint32,featureVariationRecords:new ArrayT($1a47b0c45c1c22fe$var$FeatureVariationRecord,"featureVariationRecordCount")}),$b84fd3dd9d8eddb2$var$PredefinedOp=class{decode(e,t,A){return this.predefinedOps[A[0]]?this.predefinedOps[A[0]]:this.type.decode(e,t,A)}size(e,t){return this.type.size(e,t)}encode(e,t,A){let n=this.predefinedOps.indexOf(t);return-1!==n?n:this.type.encode(e,t,A)}constructor(e,t){this.predefinedOps=e,this.type=t}},$b84fd3dd9d8eddb2$var$CFFEncodingVersion=class extends NumberT{decode(e){return 127&uint8.decode(e)}constructor(){super("UInt8")}},$b84fd3dd9d8eddb2$var$Range1=new Struct({first:uint16,nLeft:uint8}),$b84fd3dd9d8eddb2$var$Range2=new Struct({first:uint16,nLeft:uint16}),$b84fd3dd9d8eddb2$var$CFFCustomEncoding=new VersionedStruct(new $b84fd3dd9d8eddb2$var$CFFEncodingVersion,{0:{nCodes:uint8,codes:new ArrayT(uint8,"nCodes")},1:{nRanges:uint8,ranges:new ArrayT($b84fd3dd9d8eddb2$var$Range1,"nRanges")}}),$b84fd3dd9d8eddb2$var$CFFEncoding=new $b84fd3dd9d8eddb2$var$PredefinedOp([$bc0433d9b7e41f5f$export$dee0027060fa13bd,$bc0433d9b7e41f5f$export$4f58f497e14a53c3],new $0e34a43d05bde82c$export$2e2bcd8739ae039($b84fd3dd9d8eddb2$var$CFFCustomEncoding,{lazy:!0})),$b84fd3dd9d8eddb2$var$RangeArray=class extends ArrayT{decode(e,t){let A=resolveLength(this.length,e,t),n=0,l=[];for(;n<A;){let A=this.type.decode(e,t);A.offset=n,n+=A.nLeft+1,l.push(A)}return l}},$b84fd3dd9d8eddb2$var$CFFCustomCharset=new VersionedStruct(uint8,{0:{glyphs:new ArrayT(uint16,(e=>e.parent.CharStrings.length-1))},1:{ranges:new $b84fd3dd9d8eddb2$var$RangeArray($b84fd3dd9d8eddb2$var$Range1,(e=>e.parent.CharStrings.length-1))},2:{ranges:new $b84fd3dd9d8eddb2$var$RangeArray($b84fd3dd9d8eddb2$var$Range2,(e=>e.parent.CharStrings.length-1))}}),$b84fd3dd9d8eddb2$var$CFFCharset=new $b84fd3dd9d8eddb2$var$PredefinedOp([$ef658f5c9a1488b2$export$c33b50336c234f16,$ef658f5c9a1488b2$export$3ed0f9e1fee8d489,$ef658f5c9a1488b2$export$dc28be11139d4120],new $0e34a43d05bde82c$export$2e2bcd8739ae039($b84fd3dd9d8eddb2$var$CFFCustomCharset,{lazy:!0})),$b84fd3dd9d8eddb2$var$FDRange3=new Struct({first:uint16,fd:uint8}),$b84fd3dd9d8eddb2$var$FDRange4=new Struct({first:uint32,fd:uint16}),$b84fd3dd9d8eddb2$var$FDSelect=new VersionedStruct(uint8,{0:{fds:new ArrayT(uint8,(e=>e.parent.CharStrings.length))},3:{nRanges:uint16,ranges:new ArrayT($b84fd3dd9d8eddb2$var$FDRange3,"nRanges"),sentinel:uint16},4:{nRanges:uint32,ranges:new ArrayT($b84fd3dd9d8eddb2$var$FDRange4,"nRanges"),sentinel:uint32}}),$b84fd3dd9d8eddb2$var$ptr=new $0e34a43d05bde82c$export$2e2bcd8739ae039($6d59db2e29cc77b3$export$2e2bcd8739ae039),$b84fd3dd9d8eddb2$var$CFFPrivateOp=class{decode(e,t,A){return t.length=A[0],$b84fd3dd9d8eddb2$var$ptr.decode(e,t,[A[1]])}size(e,t){return[$6d59db2e29cc77b3$export$2e2bcd8739ae039.size(e,t,!1),$b84fd3dd9d8eddb2$var$ptr.size(e,t)[0]]}encode(e,t,A){return[$6d59db2e29cc77b3$export$2e2bcd8739ae039.size(t,A,!1),$b84fd3dd9d8eddb2$var$ptr.encode(e,t,A)[0]]}},$b84fd3dd9d8eddb2$var$FontDict=new $61aa549f16d58b9b$export$2e2bcd8739ae039([[18,"Private",new $b84fd3dd9d8eddb2$var$CFFPrivateOp,null],[[12,38],"FontName","sid",null],[[12,7],"FontMatrix","array",[.001,0,0,.001,0,0]],[[12,5],"PaintType","number",0]]),$b84fd3dd9d8eddb2$var$CFFTopDict=new $61aa549f16d58b9b$export$2e2bcd8739ae039([[[12,30],"ROS",["sid","sid","number"],null],[0,"version","sid",null],[1,"Notice","sid",null],[[12,0],"Copyright","sid",null],[2,"FullName","sid",null],[3,"FamilyName","sid",null],[4,"Weight","sid",null],[[12,1],"isFixedPitch","boolean",!1],[[12,2],"ItalicAngle","number",0],[[12,3],"UnderlinePosition","number",-100],[[12,4],"UnderlineThickness","number",50],[[12,5],"PaintType","number",0],[[12,6],"CharstringType","number",2],[[12,7],"FontMatrix","array",[.001,0,0,.001,0,0]],[13,"UniqueID","number",null],[5,"FontBBox","array",[0,0,0,0]],[[12,8],"StrokeWidth","number",0],[14,"XUID","array",null],[15,"charset",$b84fd3dd9d8eddb2$var$CFFCharset,$ef658f5c9a1488b2$export$c33b50336c234f16],[16,"Encoding",$b84fd3dd9d8eddb2$var$CFFEncoding,$bc0433d9b7e41f5f$export$dee0027060fa13bd],[17,"CharStrings",new $0e34a43d05bde82c$export$2e2bcd8739ae039(new $43e9821ef3717eec$export$2e2bcd8739ae039),null],[18,"Private",new $b84fd3dd9d8eddb2$var$CFFPrivateOp,null],[[12,20],"SyntheticBase","number",null],[[12,21],"PostScript","sid",null],[[12,22],"BaseFontName","sid",null],[[12,23],"BaseFontBlend","delta",null],[[12,31],"CIDFontVersion","number",0],[[12,32],"CIDFontRevision","number",0],[[12,33],"CIDFontType","number",0],[[12,34],"CIDCount","number",8720],[[12,35],"UIDBase","number",null],[[12,37],"FDSelect",new $0e34a43d05bde82c$export$2e2bcd8739ae039($b84fd3dd9d8eddb2$var$FDSelect),null],[[12,36],"FDArray",new $0e34a43d05bde82c$export$2e2bcd8739ae039(new $43e9821ef3717eec$export$2e2bcd8739ae039($b84fd3dd9d8eddb2$var$FontDict)),null],[[12,38],"FontName","sid",null]]),$b84fd3dd9d8eddb2$var$VariationStore=new Struct({length:uint16,itemVariationStore:$1a47b0c45c1c22fe$export$fe1b122a2710f241}),$b84fd3dd9d8eddb2$var$CFF2TopDict=new $61aa549f16d58b9b$export$2e2bcd8739ae039([[[12,7],"FontMatrix","array",[.001,0,0,.001,0,0]],[17,"CharStrings",new $0e34a43d05bde82c$export$2e2bcd8739ae039(new $43e9821ef3717eec$export$2e2bcd8739ae039),null],[[12,37],"FDSelect",new $0e34a43d05bde82c$export$2e2bcd8739ae039($b84fd3dd9d8eddb2$var$FDSelect),null],[[12,36],"FDArray",new $0e34a43d05bde82c$export$2e2bcd8739ae039(new $43e9821ef3717eec$export$2e2bcd8739ae039($b84fd3dd9d8eddb2$var$FontDict)),null],[24,"vstore",new $0e34a43d05bde82c$export$2e2bcd8739ae039($b84fd3dd9d8eddb2$var$VariationStore),null],[25,"maxstack","number",193]]),$b84fd3dd9d8eddb2$var$CFFTop=new VersionedStruct(fixed16,{1:{hdrSize:uint8,offSize:uint8,nameIndex:new $43e9821ef3717eec$export$2e2bcd8739ae039(new StringT("length")),topDictIndex:new $43e9821ef3717eec$export$2e2bcd8739ae039($b84fd3dd9d8eddb2$var$CFFTopDict),stringIndex:new $43e9821ef3717eec$export$2e2bcd8739ae039(new StringT("length")),globalSubrIndex:new $43e9821ef3717eec$export$2e2bcd8739ae039},2:{hdrSize:uint8,length:uint16,topDict:$b84fd3dd9d8eddb2$var$CFF2TopDict,globalSubrIndex:new $43e9821ef3717eec$export$2e2bcd8739ae039}}),$b84fd3dd9d8eddb2$export$2e2bcd8739ae039=$b84fd3dd9d8eddb2$var$CFFTop,$822ac0d589e4e237$var$CFFFont=class e{static decode(t){return new e(t)}decode(){this.stream.pos;let e=$b84fd3dd9d8eddb2$export$2e2bcd8739ae039.decode(this.stream);for(let t in e){let A=e[t];this[t]=A}if(this.version<2){if(1!==this.topDictIndex.length)throw new Error("Only a single font is allowed in CFF");this.topDict=this.topDictIndex[0]}return this.isCIDFont=null!=this.topDict.ROS,this}string(e){return this.version>=2?null:e<$229224aec43783c5$export$2e2bcd8739ae039.length?$229224aec43783c5$export$2e2bcd8739ae039[e]:this.stringIndex[e-$229224aec43783c5$export$2e2bcd8739ae039.length]}get postscriptName(){return this.version<2?this.nameIndex[0]:null}get fullName(){return this.string(this.topDict.FullName)}get familyName(){return this.string(this.topDict.FamilyName)}getCharString(e){return this.stream.pos=this.topDict.CharStrings[e].offset,this.stream.readBuffer(this.topDict.CharStrings[e].length)}getGlyphName(e){if(this.version>=2)return null;if(this.isCIDFont)return null;let{charset:t}=this.topDict;if(Array.isArray(t))return t[e];if(0===e)return".notdef";switch(e-=1,t.version){case 0:return this.string(t.glyphs[e]);case 1:case 2:for(let A=0;A<t.ranges.length;A++){let n=t.ranges[A];if(n.offset<=e&&e<=n.offset+n.nLeft)return this.string(n.first+(e-n.offset))}}return null}fdForGlyph(e){if(!this.topDict.FDSelect)return null;switch(this.topDict.FDSelect.version){case 0:return this.topDict.FDSelect.fds[e];case 3:case 4:let{ranges:t}=this.topDict.FDSelect,A=0,n=t.length-1;for(;A<=n;){let l=A+n>>1;if(e<t[l].first)n=l-1;else{if(!(l<n&&e>=t[l+1].first))return t[l].fd;A=l+1}}default:throw new Error(`Unknown FDSelect version:${this.topDict.FDSelect.version}`)}}privateDictForGlyph(e){if(this.topDict.FDSelect){let t=this.fdForGlyph(e);return this.topDict.FDArray[t]?this.topDict.FDArray[t].Private:null}return this.version<2?this.topDict.Private:this.topDict.FDArray[0].Private}constructor(e){this.stream=e,this.decode()}},$822ac0d589e4e237$export$2e2bcd8739ae039=$822ac0d589e4e237$var$CFFFont,$2bbf2bc1ce37cd8f$var$VerticalOrigin=new Struct({glyphIndex:uint16,vertOriginY:int16}),$2bbf2bc1ce37cd8f$export$2e2bcd8739ae039=new Struct({majorVersion:uint16,minorVersion:uint16,defaultVertOriginY:int16,numVertOriginYMetrics:uint16,metrics:new ArrayT($2bbf2bc1ce37cd8f$var$VerticalOrigin,"numVertOriginYMetrics")}),$0941618dc22a946d$export$16b227cb15d716a0=new Struct({height:uint8,width:uint8,horiBearingX:int8,horiBearingY:int8,horiAdvance:uint8,vertBearingX:int8,vertBearingY:int8,vertAdvance:uint8}),$0941618dc22a946d$export$62c53e75f69bfe12=new Struct({height:uint8,width:uint8,bearingX:int8,bearingY:int8,advance:uint8}),$0941618dc22a946d$var$EBDTComponent=new Struct({glyph:uint16,xOffset:int8,yOffset:int8}),$0941618dc22a946d$var$ByteAligned=class{},$0941618dc22a946d$var$BitAligned=class{},$0941618dc22a946d$export$f1f5ddeb20d14f=new VersionedStruct("version",{1:{metrics:$0941618dc22a946d$export$62c53e75f69bfe12,data:$0941618dc22a946d$var$ByteAligned},2:{metrics:$0941618dc22a946d$export$62c53e75f69bfe12,data:$0941618dc22a946d$var$BitAligned},5:{data:$0941618dc22a946d$var$BitAligned},6:{metrics:$0941618dc22a946d$export$16b227cb15d716a0,data:$0941618dc22a946d$var$ByteAligned},7:{metrics:$0941618dc22a946d$export$16b227cb15d716a0,data:$0941618dc22a946d$var$BitAligned},8:{metrics:$0941618dc22a946d$export$62c53e75f69bfe12,pad:new Reserved(uint8),numComponents:uint16,components:new ArrayT($0941618dc22a946d$var$EBDTComponent,"numComponents")},9:{metrics:$0941618dc22a946d$export$16b227cb15d716a0,pad:new Reserved(uint8),numComponents:uint16,components:new ArrayT($0941618dc22a946d$var$EBDTComponent,"numComponents")},17:{metrics:$0941618dc22a946d$export$62c53e75f69bfe12,dataLen:uint32,data:new BufferT("dataLen")},18:{metrics:$0941618dc22a946d$export$16b227cb15d716a0,dataLen:uint32,data:new BufferT("dataLen")},19:{dataLen:uint32,data:new BufferT("dataLen")}}),$9911c4c7201c13de$var$SBitLineMetrics=new Struct({ascender:int8,descender:int8,widthMax:uint8,caretSlopeNumerator:int8,caretSlopeDenominator:int8,caretOffset:int8,minOriginSB:int8,minAdvanceSB:int8,maxBeforeBL:int8,minAfterBL:int8,pad:new Reserved(int8,2)}),$9911c4c7201c13de$var$CodeOffsetPair=new Struct({glyphCode:uint16,offset:uint16}),$9911c4c7201c13de$var$IndexSubtable=new VersionedStruct(uint16,{header:{imageFormat:uint16,imageDataOffset:uint32},1:{offsetArray:new ArrayT(uint32,(e=>e.parent.lastGlyphIndex-e.parent.firstGlyphIndex+1))},2:{imageSize:uint32,bigMetrics:$0941618dc22a946d$export$16b227cb15d716a0},3:{offsetArray:new ArrayT(uint16,(e=>e.parent.lastGlyphIndex-e.parent.firstGlyphIndex+1))},4:{numGlyphs:uint32,glyphArray:new ArrayT($9911c4c7201c13de$var$CodeOffsetPair,(e=>e.numGlyphs+1))},5:{imageSize:uint32,bigMetrics:$0941618dc22a946d$export$16b227cb15d716a0,numGlyphs:uint32,glyphCodeArray:new ArrayT(uint16,"numGlyphs")}}),$9911c4c7201c13de$var$IndexSubtableArray=new Struct({firstGlyphIndex:uint16,lastGlyphIndex:uint16,subtable:new Pointer(uint32,$9911c4c7201c13de$var$IndexSubtable)}),$9911c4c7201c13de$var$BitmapSizeTable=new Struct({indexSubTableArray:new Pointer(uint32,new ArrayT($9911c4c7201c13de$var$IndexSubtableArray,1),{type:"parent"}),indexTablesSize:uint32,numberOfIndexSubTables:uint32,colorRef:uint32,hori:$9911c4c7201c13de$var$SBitLineMetrics,vert:$9911c4c7201c13de$var$SBitLineMetrics,startGlyphIndex:uint16,endGlyphIndex:uint16,ppemX:uint8,ppemY:uint8,bitDepth:uint8,flags:new Bitfield(uint8,["horizontal","vertical"])}),$9911c4c7201c13de$export$2e2bcd8739ae039=new Struct({version:uint32,numSizes:uint32,sizes:new ArrayT($9911c4c7201c13de$var$BitmapSizeTable,"numSizes")}),$abb847051efd51b1$var$ImageTable=new Struct({ppem:uint16,resolution:uint16,imageOffsets:new ArrayT(new Pointer(uint32,"void"),(e=>e.parent.parent.maxp.numGlyphs+1))}),$abb847051efd51b1$export$2e2bcd8739ae039=new Struct({version:uint16,flags:new Bitfield(uint16,["renderOutlines"]),numImgTables:uint32,imageTables:new ArrayT(new Pointer(uint32,$abb847051efd51b1$var$ImageTable),"numImgTables")}),$eb629188f3dfefdd$var$LayerRecord=new Struct({gid:uint16,paletteIndex:uint16}),$eb629188f3dfefdd$var$BaseGlyphRecord=new Struct({gid:uint16,firstLayerIndex:uint16,numLayers:uint16}),$eb629188f3dfefdd$export$2e2bcd8739ae039=new Struct({version:uint16,numBaseGlyphRecords:uint16,baseGlyphRecord:new Pointer(uint32,new ArrayT($eb629188f3dfefdd$var$BaseGlyphRecord,"numBaseGlyphRecords")),layerRecords:new Pointer(uint32,new ArrayT($eb629188f3dfefdd$var$LayerRecord,"numLayerRecords"),{lazy:!0}),numLayerRecords:uint16}),$08734b8e7dc64587$var$ColorRecord=new Struct({blue:uint8,green:uint8,red:uint8,alpha:uint8}),$08734b8e7dc64587$export$2e2bcd8739ae039=new VersionedStruct(uint16,{header:{numPaletteEntries:uint16,numPalettes:uint16,numColorRecords:uint16,colorRecords:new Pointer(uint32,new ArrayT($08734b8e7dc64587$var$ColorRecord,"numColorRecords")),colorRecordIndices:new ArrayT(uint16,"numPalettes")},0:{},1:{offsetPaletteTypeArray:new Pointer(uint32,new ArrayT(uint32,"numPalettes")),offsetPaletteLabelArray:new Pointer(uint32,new ArrayT(uint16,"numPalettes")),offsetPaletteEntryLabelArray:new Pointer(uint32,new ArrayT(uint16,"numPaletteEntries"))}}),$497cef411d884e34$var$BaseCoord=new VersionedStruct(uint16,{1:{coordinate:int16},2:{coordinate:int16,referenceGlyph:uint16,baseCoordPoint:uint16},3:{coordinate:int16,deviceTable:new Pointer(uint16,$7cbbe4e24ef3cb75$export$8215d14a63d9fb10)}}),$497cef411d884e34$var$BaseValues=new Struct({defaultIndex:uint16,baseCoordCount:uint16,baseCoords:new ArrayT(new Pointer(uint16,$497cef411d884e34$var$BaseCoord),"baseCoordCount")}),$497cef411d884e34$var$FeatMinMaxRecord=new Struct({tag:new StringT(4),minCoord:new Pointer(uint16,$497cef411d884e34$var$BaseCoord,{type:"parent"}),maxCoord:new Pointer(uint16,$497cef411d884e34$var$BaseCoord,{type:"parent"})}),$497cef411d884e34$var$MinMax=new Struct({minCoord:new Pointer(uint16,$497cef411d884e34$var$BaseCoord),maxCoord:new Pointer(uint16,$497cef411d884e34$var$BaseCoord),featMinMaxCount:uint16,featMinMaxRecords:new ArrayT($497cef411d884e34$var$FeatMinMaxRecord,"featMinMaxCount")}),$497cef411d884e34$var$BaseLangSysRecord=new Struct({tag:new StringT(4),minMax:new Pointer(uint16,$497cef411d884e34$var$MinMax,{type:"parent"})}),$497cef411d884e34$var$BaseScript=new Struct({baseValues:new Pointer(uint16,$497cef411d884e34$var$BaseValues),defaultMinMax:new Pointer(uint16,$497cef411d884e34$var$MinMax),baseLangSysCount:uint16,baseLangSysRecords:new ArrayT($497cef411d884e34$var$BaseLangSysRecord,"baseLangSysCount")}),$497cef411d884e34$var$BaseScriptRecord=new Struct({tag:new StringT(4),script:new Pointer(uint16,$497cef411d884e34$var$BaseScript,{type:"parent"})}),$497cef411d884e34$var$BaseScriptList=new ArrayT($497cef411d884e34$var$BaseScriptRecord,uint16),$497cef411d884e34$var$BaseTagList=new ArrayT(new StringT(4),uint16),$497cef411d884e34$var$Axis=new Struct({baseTagList:new Pointer(uint16,$497cef411d884e34$var$BaseTagList),baseScriptList:new Pointer(uint16,$497cef411d884e34$var$BaseScriptList)}),$497cef411d884e34$export$2e2bcd8739ae039=new VersionedStruct(uint32,{header:{horizAxis:new Pointer(uint16,$497cef411d884e34$var$Axis),vertAxis:new Pointer(uint16,$497cef411d884e34$var$Axis)},65536:{},65537:{itemVariationStore:new Pointer(uint32,$1a47b0c45c1c22fe$export$fe1b122a2710f241)}}),$cf5f33c63ef209e6$var$AttachPoint=new ArrayT(uint16,uint16),$cf5f33c63ef209e6$var$AttachList=new Struct({coverage:new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),glyphCount:uint16,attachPoints:new ArrayT(new Pointer(uint16,$cf5f33c63ef209e6$var$AttachPoint),"glyphCount")}),$cf5f33c63ef209e6$var$CaretValue=new VersionedStruct(uint16,{1:{coordinate:int16},2:{caretValuePoint:uint16},3:{coordinate:int16,deviceTable:new Pointer(uint16,$7cbbe4e24ef3cb75$export$8215d14a63d9fb10)}}),$cf5f33c63ef209e6$var$LigGlyph=new ArrayT(new Pointer(uint16,$cf5f33c63ef209e6$var$CaretValue),uint16),$cf5f33c63ef209e6$var$LigCaretList=new Struct({coverage:new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),ligGlyphCount:uint16,ligGlyphs:new ArrayT(new Pointer(uint16,$cf5f33c63ef209e6$var$LigGlyph),"ligGlyphCount")}),$cf5f33c63ef209e6$var$MarkGlyphSetsDef=new Struct({markSetTableFormat:uint16,markSetCount:uint16,coverage:new ArrayT(new Pointer(uint32,$7cbbe4e24ef3cb75$export$17608c3f81a6111),"markSetCount")}),$cf5f33c63ef209e6$export$2e2bcd8739ae039=new VersionedStruct(uint32,{header:{glyphClassDef:new Pointer(uint16,$7cbbe4e24ef3cb75$export$843d551fbbafef71),attachList:new Pointer(uint16,$cf5f33c63ef209e6$var$AttachList),ligCaretList:new Pointer(uint16,$cf5f33c63ef209e6$var$LigCaretList),markAttachClassDef:new Pointer(uint16,$7cbbe4e24ef3cb75$export$843d551fbbafef71)},65536:{},65538:{markGlyphSetsDef:new Pointer(uint16,$cf5f33c63ef209e6$var$MarkGlyphSetsDef)},65539:{markGlyphSetsDef:new Pointer(uint16,$cf5f33c63ef209e6$var$MarkGlyphSetsDef),itemVariationStore:new Pointer(uint32,$1a47b0c45c1c22fe$export$fe1b122a2710f241)}}),$47e0e8ef515d9903$var$ValueFormat=new Bitfield(uint16,["xPlacement","yPlacement","xAdvance","yAdvance","xPlaDevice","yPlaDevice","xAdvDevice","yAdvDevice"]),$47e0e8ef515d9903$var$types={xPlacement:int16,yPlacement:int16,xAdvance:int16,yAdvance:int16,xPlaDevice:new Pointer(uint16,$7cbbe4e24ef3cb75$export$8215d14a63d9fb10,{type:"global",relativeTo:e=>e.rel}),yPlaDevice:new Pointer(uint16,$7cbbe4e24ef3cb75$export$8215d14a63d9fb10,{type:"global",relativeTo:e=>e.rel}),xAdvDevice:new Pointer(uint16,$7cbbe4e24ef3cb75$export$8215d14a63d9fb10,{type:"global",relativeTo:e=>e.rel}),yAdvDevice:new Pointer(uint16,$7cbbe4e24ef3cb75$export$8215d14a63d9fb10,{type:"global",relativeTo:e=>e.rel})},$47e0e8ef515d9903$var$ValueRecord=class{buildStruct(e){let t=e;for(;!t[this.key]&&t.parent;)t=t.parent;if(!t[this.key])return;let A={rel:()=>t._startOffset},n=t[this.key];for(let e in n)n[e]&&(A[e]=$47e0e8ef515d9903$var$types[e]);return new Struct(A)}size(e,t){return this.buildStruct(t).size(e,t)}decode(e,t){let A=this.buildStruct(t).decode(e,t);return delete A.rel,A}constructor(e="valueFormat"){this.key=e}},$47e0e8ef515d9903$var$PairValueRecord=new Struct({secondGlyph:uint16,value1:new $47e0e8ef515d9903$var$ValueRecord("valueFormat1"),value2:new $47e0e8ef515d9903$var$ValueRecord("valueFormat2")}),$47e0e8ef515d9903$var$PairSet=new ArrayT($47e0e8ef515d9903$var$PairValueRecord,uint16),$47e0e8ef515d9903$var$Class2Record=new Struct({value1:new $47e0e8ef515d9903$var$ValueRecord("valueFormat1"),value2:new $47e0e8ef515d9903$var$ValueRecord("valueFormat2")}),$47e0e8ef515d9903$var$Anchor=new VersionedStruct(uint16,{1:{xCoordinate:int16,yCoordinate:int16},2:{xCoordinate:int16,yCoordinate:int16,anchorPoint:uint16},3:{xCoordinate:int16,yCoordinate:int16,xDeviceTable:new Pointer(uint16,$7cbbe4e24ef3cb75$export$8215d14a63d9fb10),yDeviceTable:new Pointer(uint16,$7cbbe4e24ef3cb75$export$8215d14a63d9fb10)}}),$47e0e8ef515d9903$var$EntryExitRecord=new Struct({entryAnchor:new Pointer(uint16,$47e0e8ef515d9903$var$Anchor,{type:"parent"}),exitAnchor:new Pointer(uint16,$47e0e8ef515d9903$var$Anchor,{type:"parent"})}),$47e0e8ef515d9903$var$MarkRecord=new Struct({class:uint16,markAnchor:new Pointer(uint16,$47e0e8ef515d9903$var$Anchor,{type:"parent"})}),$47e0e8ef515d9903$var$MarkArray=new ArrayT($47e0e8ef515d9903$var$MarkRecord,uint16),$47e0e8ef515d9903$var$BaseRecord=new ArrayT(new Pointer(uint16,$47e0e8ef515d9903$var$Anchor),(e=>e.parent.classCount)),$47e0e8ef515d9903$var$BaseArray=new ArrayT($47e0e8ef515d9903$var$BaseRecord,uint16),$47e0e8ef515d9903$var$ComponentRecord=new ArrayT(new Pointer(uint16,$47e0e8ef515d9903$var$Anchor),(e=>e.parent.parent.classCount)),$47e0e8ef515d9903$var$LigatureAttach=new ArrayT($47e0e8ef515d9903$var$ComponentRecord,uint16),$47e0e8ef515d9903$var$LigatureArray=new ArrayT(new Pointer(uint16,$47e0e8ef515d9903$var$LigatureAttach),uint16),$47e0e8ef515d9903$export$73a8cfb19cd43a0f=new VersionedStruct("lookupType",{1:new VersionedStruct(uint16,{1:{coverage:new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),valueFormat:$47e0e8ef515d9903$var$ValueFormat,value:new $47e0e8ef515d9903$var$ValueRecord},2:{coverage:new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),valueFormat:$47e0e8ef515d9903$var$ValueFormat,valueCount:uint16,values:new LazyArray(new $47e0e8ef515d9903$var$ValueRecord,"valueCount")}}),2:new VersionedStruct(uint16,{1:{coverage:new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),valueFormat1:$47e0e8ef515d9903$var$ValueFormat,valueFormat2:$47e0e8ef515d9903$var$ValueFormat,pairSetCount:uint16,pairSets:new LazyArray(new Pointer(uint16,$47e0e8ef515d9903$var$PairSet),"pairSetCount")},2:{coverage:new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),valueFormat1:$47e0e8ef515d9903$var$ValueFormat,valueFormat2:$47e0e8ef515d9903$var$ValueFormat,classDef1:new Pointer(uint16,$7cbbe4e24ef3cb75$export$843d551fbbafef71),classDef2:new Pointer(uint16,$7cbbe4e24ef3cb75$export$843d551fbbafef71),class1Count:uint16,class2Count:uint16,classRecords:new LazyArray(new LazyArray($47e0e8ef515d9903$var$Class2Record,"class2Count"),"class1Count")}}),3:{format:uint16,coverage:new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),entryExitCount:uint16,entryExitRecords:new ArrayT($47e0e8ef515d9903$var$EntryExitRecord,"entryExitCount")},4:{format:uint16,markCoverage:new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),baseCoverage:new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),classCount:uint16,markArray:new Pointer(uint16,$47e0e8ef515d9903$var$MarkArray),baseArray:new Pointer(uint16,$47e0e8ef515d9903$var$BaseArray)},5:{format:uint16,markCoverage:new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),ligatureCoverage:new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),classCount:uint16,markArray:new Pointer(uint16,$47e0e8ef515d9903$var$MarkArray),ligatureArray:new Pointer(uint16,$47e0e8ef515d9903$var$LigatureArray)},6:{format:uint16,mark1Coverage:new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),mark2Coverage:new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),classCount:uint16,mark1Array:new Pointer(uint16,$47e0e8ef515d9903$var$MarkArray),mark2Array:new Pointer(uint16,$47e0e8ef515d9903$var$BaseArray)},7:$7cbbe4e24ef3cb75$export$841858b892ce1f4c,8:$7cbbe4e24ef3cb75$export$5e6d09e6861162f6,9:{posFormat:uint16,lookupType:uint16,extension:new Pointer(uint32,null)}});$47e0e8ef515d9903$export$73a8cfb19cd43a0f.versions[9].extension.type=$47e0e8ef515d9903$export$73a8cfb19cd43a0f;var $47e0e8ef515d9903$export$2e2bcd8739ae039=new VersionedStruct(uint32,{header:{scriptList:new Pointer(uint16,$7cbbe4e24ef3cb75$export$3e15fc05ce864229),featureList:new Pointer(uint16,$7cbbe4e24ef3cb75$export$aa18130def4b6cb4),lookupList:new Pointer(uint16,new $7cbbe4e24ef3cb75$export$df0008c6ff2da22a($47e0e8ef515d9903$export$73a8cfb19cd43a0f))},65536:{},65537:{featureVariations:new Pointer(uint32,$1a47b0c45c1c22fe$export$441b70b7971dd419)}}),$d3f442064af66e06$var$Sequence=new ArrayT(uint16,uint16),$d3f442064af66e06$var$AlternateSet=$d3f442064af66e06$var$Sequence,$d3f442064af66e06$var$Ligature=new Struct({glyph:uint16,compCount:uint16,components:new ArrayT(uint16,(e=>e.compCount-1))}),$d3f442064af66e06$var$LigatureSet=new ArrayT(new Pointer(uint16,$d3f442064af66e06$var$Ligature),uint16),$d3f442064af66e06$var$GSUBLookup=new VersionedStruct("lookupType",{1:new VersionedStruct(uint16,{1:{coverage:new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),deltaGlyphID:int16},2:{coverage:new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),glyphCount:uint16,substitute:new LazyArray(uint16,"glyphCount")}}),2:{substFormat:uint16,coverage:new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),count:uint16,sequences:new LazyArray(new Pointer(uint16,$d3f442064af66e06$var$Sequence),"count")},3:{substFormat:uint16,coverage:new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),count:uint16,alternateSet:new LazyArray(new Pointer(uint16,$d3f442064af66e06$var$AlternateSet),"count")},4:{substFormat:uint16,coverage:new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),count:uint16,ligatureSets:new LazyArray(new Pointer(uint16,$d3f442064af66e06$var$LigatureSet),"count")},5:$7cbbe4e24ef3cb75$export$841858b892ce1f4c,6:$7cbbe4e24ef3cb75$export$5e6d09e6861162f6,7:{substFormat:uint16,lookupType:uint16,extension:new Pointer(uint32,null)},8:{substFormat:uint16,coverage:new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),backtrackCoverage:new ArrayT(new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),"backtrackGlyphCount"),lookaheadGlyphCount:uint16,lookaheadCoverage:new ArrayT(new Pointer(uint16,$7cbbe4e24ef3cb75$export$17608c3f81a6111),"lookaheadGlyphCount"),glyphCount:uint16,substitutes:new ArrayT(uint16,"glyphCount")}});$d3f442064af66e06$var$GSUBLookup.versions[7].extension.type=$d3f442064af66e06$var$GSUBLookup;var $d3f442064af66e06$export$2e2bcd8739ae039=new VersionedStruct(uint32,{header:{scriptList:new Pointer(uint16,$7cbbe4e24ef3cb75$export$3e15fc05ce864229),featureList:new Pointer(uint16,$7cbbe4e24ef3cb75$export$aa18130def4b6cb4),lookupList:new Pointer(uint16,new $7cbbe4e24ef3cb75$export$df0008c6ff2da22a($d3f442064af66e06$var$GSUBLookup))},65536:{},65537:{featureVariations:new Pointer(uint32,$1a47b0c45c1c22fe$export$441b70b7971dd419)}}),$71cfb3c4767fbd0c$var$JstfGSUBModList=new ArrayT(uint16,uint16),$71cfb3c4767fbd0c$var$JstfPriority=new Struct({shrinkageEnableGSUB:new Pointer(uint16,$71cfb3c4767fbd0c$var$JstfGSUBModList),shrinkageDisableGSUB:new Pointer(uint16,$71cfb3c4767fbd0c$var$JstfGSUBModList),shrinkageEnableGPOS:new Pointer(uint16,$71cfb3c4767fbd0c$var$JstfGSUBModList),shrinkageDisableGPOS:new Pointer(uint16,$71cfb3c4767fbd0c$var$JstfGSUBModList),shrinkageJstfMax:new Pointer(uint16,new $7cbbe4e24ef3cb75$export$df0008c6ff2da22a($47e0e8ef515d9903$export$73a8cfb19cd43a0f)),extensionEnableGSUB:new Pointer(uint16,$71cfb3c4767fbd0c$var$JstfGSUBModList),extensionDisableGSUB:new Pointer(uint16,$71cfb3c4767fbd0c$var$JstfGSUBModList),extensionEnableGPOS:new Pointer(uint16,$71cfb3c4767fbd0c$var$JstfGSUBModList),extensionDisableGPOS:new Pointer(uint16,$71cfb3c4767fbd0c$var$JstfGSUBModList),extensionJstfMax:new Pointer(uint16,new $7cbbe4e24ef3cb75$export$df0008c6ff2da22a($47e0e8ef515d9903$export$73a8cfb19cd43a0f))}),$71cfb3c4767fbd0c$var$JstfLangSys=new ArrayT(new Pointer(uint16,$71cfb3c4767fbd0c$var$JstfPriority),uint16),$71cfb3c4767fbd0c$var$JstfLangSysRecord=new Struct({tag:new StringT(4),jstfLangSys:new Pointer(uint16,$71cfb3c4767fbd0c$var$JstfLangSys)}),$71cfb3c4767fbd0c$var$JstfScript=new Struct({extenderGlyphs:new Pointer(uint16,new ArrayT(uint16,uint16)),defaultLangSys:new Pointer(uint16,$71cfb3c4767fbd0c$var$JstfLangSys),langSysCount:uint16,langSysRecords:new ArrayT($71cfb3c4767fbd0c$var$JstfLangSysRecord,"langSysCount")}),$71cfb3c4767fbd0c$var$JstfScriptRecord=new Struct({tag:new StringT(4),script:new Pointer(uint16,$71cfb3c4767fbd0c$var$JstfScript,{type:"parent"})}),$71cfb3c4767fbd0c$export$2e2bcd8739ae039=new Struct({version:uint32,scriptCount:uint16,scriptList:new ArrayT($71cfb3c4767fbd0c$var$JstfScriptRecord,"scriptCount")}),$d059a6bd2d3b5b63$var$VariableSizeNumber=class{decode(e,t){switch(this.size(0,t)){case 1:return e.readUInt8();case 2:return e.readUInt16BE();case 3:return e.readUInt24BE();case 4:return e.readUInt32BE()}}size(e,t){return resolveLength(this._size,null,t)}constructor(e){this._size=e}},$d059a6bd2d3b5b63$var$MapDataEntry=new Struct({entry:new $d059a6bd2d3b5b63$var$VariableSizeNumber((e=>1+((48&e.parent.entryFormat)>>4))),outerIndex:e=>e.entry>>1+(15&e.parent.entryFormat),innerIndex:e=>e.entry&(1<<1+(15&e.parent.entryFormat))-1}),$d059a6bd2d3b5b63$var$DeltaSetIndexMap=new Struct({entryFormat:uint16,mapCount:uint16,mapData:new ArrayT($d059a6bd2d3b5b63$var$MapDataEntry,"mapCount")}),$d059a6bd2d3b5b63$export$2e2bcd8739ae039=new Struct({majorVersion:uint16,minorVersion:uint16,itemVariationStore:new Pointer(uint32,$1a47b0c45c1c22fe$export$fe1b122a2710f241),advanceWidthMapping:new Pointer(uint32,$d059a6bd2d3b5b63$var$DeltaSetIndexMap),LSBMapping:new Pointer(uint32,$d059a6bd2d3b5b63$var$DeltaSetIndexMap),RSBMapping:new Pointer(uint32,$d059a6bd2d3b5b63$var$DeltaSetIndexMap)}),$dceeca3e1977ce30$var$Signature=new Struct({format:uint32,length:uint32,offset:uint32}),$dceeca3e1977ce30$var$SignatureBlock=new Struct({reserved:new Reserved(uint16,2),cbSignature:uint32,signature:new BufferT("cbSignature")}),$dceeca3e1977ce30$export$2e2bcd8739ae039=new Struct({ulVersion:uint32,usNumSigs:uint16,usFlag:uint16,signatures:new ArrayT($dceeca3e1977ce30$var$Signature,"usNumSigs"),signatureBlocks:new ArrayT($dceeca3e1977ce30$var$SignatureBlock,"usNumSigs")}),$8acd740a9435aad0$var$GaspRange=new Struct({rangeMaxPPEM:uint16,rangeGaspBehavior:new Bitfield(uint16,["grayscale","gridfit","symmetricSmoothing","symmetricGridfit"])}),$8acd740a9435aad0$export$2e2bcd8739ae039=new Struct({version:uint16,numRanges:uint16,gaspRanges:new ArrayT($8acd740a9435aad0$var$GaspRange,"numRanges")}),$b5f380243c34d6a0$var$DeviceRecord=new Struct({pixelSize:uint8,maximumWidth:uint8,widths:new ArrayT(uint8,(e=>e.parent.parent.maxp.numGlyphs))}),$b5f380243c34d6a0$export$2e2bcd8739ae039=new Struct({version:uint16,numRecords:int16,sizeDeviceRecord:int32,records:new ArrayT($b5f380243c34d6a0$var$DeviceRecord,"numRecords")}),$ca2df1256966e313$var$KernPair=new Struct({left:uint16,right:uint16,value:int16}),$ca2df1256966e313$var$ClassTable=new Struct({firstGlyph:uint16,nGlyphs:uint16,offsets:new ArrayT(uint16,"nGlyphs"),max:e=>e.offsets.length&&Math.max.apply(Math,e.offsets)}),$ca2df1256966e313$var$Kern2Array=new Struct({off:e=>e._startOffset-e.parent.parent._startOffset,len:e=>((e.parent.leftTable.max-e.off)/e.parent.rowWidth+1)*(e.parent.rowWidth/2),values:new LazyArray(int16,"len")}),$ca2df1256966e313$var$KernSubtable=new VersionedStruct("format",{0:{nPairs:uint16,searchRange:uint16,entrySelector:uint16,rangeShift:uint16,pairs:new ArrayT($ca2df1256966e313$var$KernPair,"nPairs")},2:{rowWidth:uint16,leftTable:new Pointer(uint16,$ca2df1256966e313$var$ClassTable,{type:"parent"}),rightTable:new Pointer(uint16,$ca2df1256966e313$var$ClassTable,{type:"parent"}),array:new Pointer(uint16,$ca2df1256966e313$var$Kern2Array,{type:"parent"})},3:{glyphCount:uint16,kernValueCount:uint8,leftClassCount:uint8,rightClassCount:uint8,flags:uint8,kernValue:new ArrayT(int16,"kernValueCount"),leftClass:new ArrayT(uint8,"glyphCount"),rightClass:new ArrayT(uint8,"glyphCount"),kernIndex:new ArrayT(uint8,(e=>e.leftClassCount*e.rightClassCount))}}),$ca2df1256966e313$var$KernTable=new VersionedStruct("version",{0:{subVersion:uint16,length:uint16,format:uint8,coverage:new Bitfield(uint8,["horizontal","minimum","crossStream","override"]),subtable:$ca2df1256966e313$var$KernSubtable,padding:new Reserved(uint8,(e=>e.length-e._currentOffset))},1:{length:uint32,coverage:new Bitfield(uint8,[null,null,null,null,null,"variation","crossStream","vertical"]),format:uint8,tupleIndex:uint16,subtable:$ca2df1256966e313$var$KernSubtable,padding:new Reserved(uint8,(e=>e.length-e._currentOffset))}}),$ca2df1256966e313$export$2e2bcd8739ae039=new VersionedStruct(uint16,{0:{nTables:uint16,tables:new ArrayT($ca2df1256966e313$var$KernTable,"nTables")},1:{reserved:new Reserved(uint16),nTables:uint32,tables:new ArrayT($ca2df1256966e313$var$KernTable,"nTables")}}),$7a9f92b0c46ebe33$export$2e2bcd8739ae039=new Struct({version:uint16,numGlyphs:uint16,yPels:new ArrayT(uint8,"numGlyphs")}),$2b2ccc419d152631$export$2e2bcd8739ae039=new Struct({version:uint16,fontNumber:uint32,pitch:uint16,xHeight:uint16,style:uint16,typeFamily:uint16,capHeight:uint16,symbolSet:uint16,typeface:new StringT(16),characterComplement:new StringT(8),fileName:new StringT(6),strokeWeight:new StringT(1),widthType:new StringT(1),serifStyle:uint8,reserved:new Reserved(uint8)}),$ca5b40b9bcda9c9b$var$Ratio=new Struct({bCharSet:uint8,xRatio:uint8,yStartRatio:uint8,yEndRatio:uint8}),$ca5b40b9bcda9c9b$var$vTable=new Struct({yPelHeight:uint16,yMax:int16,yMin:int16}),$ca5b40b9bcda9c9b$var$VdmxGroup=new Struct({recs:uint16,startsz:uint8,endsz:uint8,entries:new ArrayT($ca5b40b9bcda9c9b$var$vTable,"recs")}),$ca5b40b9bcda9c9b$export$2e2bcd8739ae039=new Struct({version:uint16,numRecs:uint16,numRatios:uint16,ratioRanges:new ArrayT($ca5b40b9bcda9c9b$var$Ratio,"numRatios"),offsets:new ArrayT(uint16,"numRatios"),groups:new ArrayT($ca5b40b9bcda9c9b$var$VdmxGroup,"numRecs")}),$69530a3c40755af0$export$2e2bcd8739ae039=new Struct({version:uint16,ascent:int16,descent:int16,lineGap:int16,advanceHeightMax:int16,minTopSideBearing:int16,minBottomSideBearing:int16,yMaxExtent:int16,caretSlopeRise:int16,caretSlopeRun:int16,caretOffset:int16,reserved:new Reserved(int16,4),metricDataFormat:int16,numberOfMetrics:uint16}),$344073dd270f0e62$var$VmtxEntry=new Struct({advance:uint16,bearing:int16}),$344073dd270f0e62$export$2e2bcd8739ae039=new Struct({metrics:new LazyArray($344073dd270f0e62$var$VmtxEntry,(e=>e.parent.vhea.numberOfMetrics)),bearings:new LazyArray(int16,(e=>e.parent.maxp.numGlyphs-e.parent.vhea.numberOfMetrics))}),$3793b781918cfced$var$shortFrac=new Fixed(16,"BE",14),$3793b781918cfced$var$Correspondence=new Struct({fromCoord:$3793b781918cfced$var$shortFrac,toCoord:$3793b781918cfced$var$shortFrac}),$3793b781918cfced$var$Segment=new Struct({pairCount:uint16,correspondence:new ArrayT($3793b781918cfced$var$Correspondence,"pairCount")}),$3793b781918cfced$export$2e2bcd8739ae039=new Struct({version:fixed32,axisCount:uint32,segment:new ArrayT($3793b781918cfced$var$Segment,"axisCount")}),$6cb7dd5f47d82580$var$UnboundedArrayAccessor=class{getItem(e){if(null==this._items[e]){let t=this.stream.pos;this.stream.pos=this.base+this.type.size(null,this.parent)*e,this._items[e]=this.type.decode(this.stream,this.parent),this.stream.pos=t}return this._items[e]}inspect(){return`[UnboundedArray ${this.type.constructor.name}]`}constructor(e,t,A){this.type=e,this.stream=t,this.parent=A,this.base=this.stream.pos,this._items=[]}},$6cb7dd5f47d82580$export$c5af1eebc882e39a=class extends ArrayT{decode(e,t){return new $6cb7dd5f47d82580$var$UnboundedArrayAccessor(this.type,e,t)}constructor(e){super(e,0)}},$6cb7dd5f47d82580$export$8351f8c2ae2f103c=function(e=uint16){e=new class{decode(e,t){return t=t.parent.parent,this.type.decode(e,t)}size(e,t){return t=t.parent.parent,this.type.size(e,t)}encode(e,t,A){return A=A.parent.parent,this.type.encode(e,t,A)}constructor(e){this.type=e}}(e);let t=new Struct({unitSize:uint16,nUnits:uint16,searchRange:uint16,entrySelector:uint16,rangeShift:uint16}),A=new Struct({lastGlyph:uint16,firstGlyph:uint16,value:e}),n=new Struct({lastGlyph:uint16,firstGlyph:uint16,values:new Pointer(uint16,new ArrayT(e,(e=>e.lastGlyph-e.firstGlyph+1)),{type:"parent"})}),l=new Struct({glyph:uint16,value:e});return new VersionedStruct(uint16,{0:{values:new $6cb7dd5f47d82580$export$c5af1eebc882e39a(e)},2:{binarySearchHeader:t,segments:new ArrayT(A,(e=>e.binarySearchHeader.nUnits))},4:{binarySearchHeader:t,segments:new ArrayT(n,(e=>e.binarySearchHeader.nUnits))},6:{binarySearchHeader:t,segments:new ArrayT(l,(e=>e.binarySearchHeader.nUnits))},8:{firstGlyph:uint16,count:uint16,values:new ArrayT(e,"count")}})};function $6cb7dd5f47d82580$export$79f7d93d790934ba(e={},t=uint16){let A=Object.assign({newState:uint16,flags:uint16},e),n=new Struct(A),l=new $6cb7dd5f47d82580$export$c5af1eebc882e39a(new ArrayT(uint16,(e=>e.nClasses)));return new Struct({nClasses:uint32,classTable:new Pointer(uint32,new $6cb7dd5f47d82580$export$8351f8c2ae2f103c(t)),stateArray:new Pointer(uint32,l),entryTable:new Pointer(uint32,new $6cb7dd5f47d82580$export$c5af1eebc882e39a(n))})}function $6cb7dd5f47d82580$export$105027425199cc51(e={},t=uint16){let A=new Struct({version:()=>8,firstGlyph:uint16,values:new ArrayT(uint8,uint16)}),n=Object.assign({newStateOffset:uint16,newState:e=>(e.newStateOffset-(e.parent.stateArray.base-e.parent._startOffset))/e.parent.nClasses,flags:uint16},e),l=new Struct(n),r=new $6cb7dd5f47d82580$export$c5af1eebc882e39a(new ArrayT(uint8,(e=>e.nClasses)));return new Struct({nClasses:uint16,classTable:new Pointer(uint16,A),stateArray:new Pointer(uint16,r),entryTable:new Pointer(uint16,new $6cb7dd5f47d82580$export$c5af1eebc882e39a(l))})}var $6a3746e8c708f5a3$var$BslnSubtable=new VersionedStruct("format",{0:{deltas:new ArrayT(int16,32)},1:{deltas:new ArrayT(int16,32),mappingData:new $6cb7dd5f47d82580$export$8351f8c2ae2f103c(uint16)},2:{standardGlyph:uint16,controlPoints:new ArrayT(uint16,32)},3:{standardGlyph:uint16,controlPoints:new ArrayT(uint16,32),mappingData:new $6cb7dd5f47d82580$export$8351f8c2ae2f103c(uint16)}}),$6a3746e8c708f5a3$export$2e2bcd8739ae039=new Struct({version:fixed32,format:uint16,defaultBaseline:uint16,subtable:$6a3746e8c708f5a3$var$BslnSubtable}),$d0c76fac617b308a$var$Setting=new Struct({setting:uint16,nameIndex:int16,name:e=>e.parent.parent.parent.name.records.fontFeatures[e.nameIndex]}),$d0c76fac617b308a$var$FeatureName=new Struct({feature:uint16,nSettings:uint16,settingTable:new Pointer(uint32,new ArrayT($d0c76fac617b308a$var$Setting,"nSettings"),{type:"parent"}),featureFlags:new Bitfield(uint8,[null,null,null,null,null,null,"hasDefault","exclusive"]),defaultSetting:uint8,nameIndex:int16,name:e=>e.parent.parent.name.records.fontFeatures[e.nameIndex]}),$d0c76fac617b308a$export$2e2bcd8739ae039=new Struct({version:fixed32,featureNameCount:uint16,reserved1:new Reserved(uint16),reserved2:new Reserved(uint32),featureNames:new ArrayT($d0c76fac617b308a$var$FeatureName,"featureNameCount")}),$e83fd065f00fcd01$var$Axis=new Struct({axisTag:new StringT(4),minValue:fixed32,defaultValue:fixed32,maxValue:fixed32,flags:uint16,nameID:uint16,name:e=>e.parent.parent.name.records.fontFeatures[e.nameID]}),$e83fd065f00fcd01$var$Instance=new Struct({nameID:uint16,name:e=>e.parent.parent.name.records.fontFeatures[e.nameID],flags:uint16,coord:new ArrayT(fixed32,(e=>e.parent.axisCount)),postscriptNameID:new Optional(uint16,(e=>e.parent.instanceSize-e._currentOffset>0))}),$e83fd065f00fcd01$export$2e2bcd8739ae039=new Struct({version:fixed32,offsetToData:uint16,countSizePairs:uint16,axisCount:uint16,axisSize:uint16,instanceCount:uint16,instanceSize:uint16,axis:new ArrayT($e83fd065f00fcd01$var$Axis,"axisCount"),instance:new ArrayT($e83fd065f00fcd01$var$Instance,"instanceCount")}),$dbe33c8d3a7f131c$var$shortFrac=new Fixed(16,"BE",14),$dbe33c8d3a7f131c$var$Offset=class{static decode(e,t){return t.flags?e.readUInt32BE():2*e.readUInt16BE()}},$dbe33c8d3a7f131c$var$gvar=new Struct({version:uint16,reserved:new Reserved(uint16),axisCount:uint16,globalCoordCount:uint16,globalCoords:new Pointer(uint32,new ArrayT(new ArrayT($dbe33c8d3a7f131c$var$shortFrac,"axisCount"),"globalCoordCount")),glyphCount:uint16,flags:uint16,offsetToData:uint32,offsets:new ArrayT(new Pointer($dbe33c8d3a7f131c$var$Offset,"void",{relativeTo:e=>e.offsetToData,allowNull:!1}),(e=>e.glyphCount+1))}),$dbe33c8d3a7f131c$export$2e2bcd8739ae039=$dbe33c8d3a7f131c$var$gvar,$05b01887df96c4ee$var$ClassTable=new Struct({length:uint16,coverage:uint16,subFeatureFlags:uint32,stateTable:new $6cb7dd5f47d82580$export$105027425199cc51}),$05b01887df96c4ee$var$WidthDeltaRecord=new Struct({justClass:uint32,beforeGrowLimit:fixed32,beforeShrinkLimit:fixed32,afterGrowLimit:fixed32,afterShrinkLimit:fixed32,growFlags:uint16,shrinkFlags:uint16}),$05b01887df96c4ee$var$WidthDeltaCluster=new ArrayT($05b01887df96c4ee$var$WidthDeltaRecord,uint32),$05b01887df96c4ee$var$ActionData=new VersionedStruct("actionType",{0:{lowerLimit:fixed32,upperLimit:fixed32,order:uint16,glyphs:new ArrayT(uint16,uint16)},1:{addGlyph:uint16},2:{substThreshold:fixed32,addGlyph:uint16,substGlyph:uint16},3:{},4:{variationAxis:uint32,minimumLimit:fixed32,noStretchValue:fixed32,maximumLimit:fixed32},5:{flags:uint16,glyph:uint16}}),$05b01887df96c4ee$var$Action=new Struct({actionClass:uint16,actionType:uint16,actionLength:uint32,actionData:$05b01887df96c4ee$var$ActionData,padding:new Reserved(uint8,(e=>e.actionLength-e._currentOffset))}),$05b01887df96c4ee$var$PostcompensationAction=new ArrayT($05b01887df96c4ee$var$Action,uint32),$05b01887df96c4ee$var$PostCompensationTable=new Struct({lookupTable:new $6cb7dd5f47d82580$export$8351f8c2ae2f103c(new Pointer(uint16,$05b01887df96c4ee$var$PostcompensationAction))}),$05b01887df96c4ee$var$JustificationTable=new Struct({classTable:new Pointer(uint16,$05b01887df96c4ee$var$ClassTable,{type:"parent"}),wdcOffset:uint16,postCompensationTable:new Pointer(uint16,$05b01887df96c4ee$var$PostCompensationTable,{type:"parent"}),widthDeltaClusters:new $6cb7dd5f47d82580$export$8351f8c2ae2f103c(new Pointer(uint16,$05b01887df96c4ee$var$WidthDeltaCluster,{type:"parent",relativeTo:e=>e.wdcOffset}))}),$05b01887df96c4ee$export$2e2bcd8739ae039=new Struct({version:uint32,format:uint16,horizontal:new Pointer(uint16,$05b01887df96c4ee$var$JustificationTable),vertical:new Pointer(uint16,$05b01887df96c4ee$var$JustificationTable)}),$03ee6ebd54db1053$var$LigatureData={action:uint16},$03ee6ebd54db1053$var$ContextualData={markIndex:uint16,currentIndex:uint16},$03ee6ebd54db1053$var$InsertionData={currentInsertIndex:uint16,markedInsertIndex:uint16},$03ee6ebd54db1053$var$SubstitutionTable=new Struct({items:new $6cb7dd5f47d82580$export$c5af1eebc882e39a(new Pointer(uint32,new $6cb7dd5f47d82580$export$8351f8c2ae2f103c))}),$03ee6ebd54db1053$var$SubtableData=new VersionedStruct("type",{0:{stateTable:new $6cb7dd5f47d82580$export$79f7d93d790934ba},1:{stateTable:new $6cb7dd5f47d82580$export$79f7d93d790934ba($03ee6ebd54db1053$var$ContextualData),substitutionTable:new Pointer(uint32,$03ee6ebd54db1053$var$SubstitutionTable)},2:{stateTable:new $6cb7dd5f47d82580$export$79f7d93d790934ba($03ee6ebd54db1053$var$LigatureData),ligatureActions:new Pointer(uint32,new $6cb7dd5f47d82580$export$c5af1eebc882e39a(uint32)),components:new Pointer(uint32,new $6cb7dd5f47d82580$export$c5af1eebc882e39a(uint16)),ligatureList:new Pointer(uint32,new $6cb7dd5f47d82580$export$c5af1eebc882e39a(uint16))},4:{lookupTable:new $6cb7dd5f47d82580$export$8351f8c2ae2f103c},5:{stateTable:new $6cb7dd5f47d82580$export$79f7d93d790934ba($03ee6ebd54db1053$var$InsertionData),insertionActions:new Pointer(uint32,new $6cb7dd5f47d82580$export$c5af1eebc882e39a(uint16))}}),$03ee6ebd54db1053$var$Subtable=new Struct({length:uint32,coverage:uint24,type:uint8,subFeatureFlags:uint32,table:$03ee6ebd54db1053$var$SubtableData,padding:new Reserved(uint8,(e=>e.length-e._currentOffset))}),$03ee6ebd54db1053$var$FeatureEntry=new Struct({featureType:uint16,featureSetting:uint16,enableFlags:uint32,disableFlags:uint32}),$03ee6ebd54db1053$var$MorxChain=new Struct({defaultFlags:uint32,chainLength:uint32,nFeatureEntries:uint32,nSubtables:uint32,features:new ArrayT($03ee6ebd54db1053$var$FeatureEntry,"nFeatureEntries"),subtables:new ArrayT($03ee6ebd54db1053$var$Subtable,"nSubtables")}),$03ee6ebd54db1053$export$2e2bcd8739ae039=new Struct({version:uint16,unused:new Reserved(uint16),nChains:uint32,chains:new ArrayT($03ee6ebd54db1053$var$MorxChain,"nChains")}),$b7492a80b0d1a056$var$OpticalBounds=new Struct({left:int16,top:int16,right:int16,bottom:int16}),$b7492a80b0d1a056$export$2e2bcd8739ae039=new Struct({version:fixed32,format:uint16,lookupTable:new $6cb7dd5f47d82580$export$8351f8c2ae2f103c($b7492a80b0d1a056$var$OpticalBounds)}),$c3395722bea751e2$var$tables={},$c3395722bea751e2$export$2e2bcd8739ae039=$c3395722bea751e2$var$tables;$c3395722bea751e2$var$tables.cmap=$26a62205ad06574e$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.head=$f2612a29f92ac062$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.hhea=$2c179dd593583073$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.hmtx=$bdc9060542264b85$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.maxp=$dbf51cb3d3fe409d$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.name=$2bcf221753ec8e32$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables["OS/2"]=$84b272aa31b70606$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.post=$32d9e2eb9565d93c$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.fpgm=$5c0f37ca5ffb1850$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.loca=$2b2b260902b1c57e$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.prep=$7afb878c7bea4f66$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables["cvt "]=$5202bd9d9ad8eaac$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.glyf=$6c92b6371bce8bd9$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables["CFF "]=$822ac0d589e4e237$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.CFF2=$822ac0d589e4e237$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.VORG=$2bbf2bc1ce37cd8f$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.EBLC=$9911c4c7201c13de$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.CBLC=$c3395722bea751e2$var$tables.EBLC,$c3395722bea751e2$var$tables.sbix=$abb847051efd51b1$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.COLR=$eb629188f3dfefdd$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.CPAL=$08734b8e7dc64587$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.BASE=$497cef411d884e34$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.GDEF=$cf5f33c63ef209e6$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.GPOS=$47e0e8ef515d9903$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.GSUB=$d3f442064af66e06$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.JSTF=$71cfb3c4767fbd0c$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.HVAR=$d059a6bd2d3b5b63$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.DSIG=$dceeca3e1977ce30$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.gasp=$8acd740a9435aad0$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.hdmx=$b5f380243c34d6a0$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.kern=$ca2df1256966e313$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.LTSH=$7a9f92b0c46ebe33$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.PCLT=$2b2ccc419d152631$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.VDMX=$ca5b40b9bcda9c9b$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.vhea=$69530a3c40755af0$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.vmtx=$344073dd270f0e62$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.avar=$3793b781918cfced$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.bsln=$6a3746e8c708f5a3$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.feat=$d0c76fac617b308a$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.fvar=$e83fd065f00fcd01$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.gvar=$dbe33c8d3a7f131c$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.just=$05b01887df96c4ee$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.morx=$03ee6ebd54db1053$export$2e2bcd8739ae039,$c3395722bea751e2$var$tables.opbd=$b7492a80b0d1a056$export$2e2bcd8739ae039;var $816c07a04b6dba87$var$TableEntry=new Struct({tag:new StringT(4),checkSum:uint32,offset:new Pointer(uint32,"void",{type:"global"}),length:uint32}),$816c07a04b6dba87$var$Directory=new Struct({tag:new StringT(4),numTables:uint16,searchRange:uint16,entrySelector:uint16,rangeShift:uint16,tables:new ArrayT($816c07a04b6dba87$var$TableEntry,"numTables")});$816c07a04b6dba87$var$Directory.process=function(){let e={};for(let t of this.tables)e[t.tag]=t;this.tables=e},$816c07a04b6dba87$var$Directory.preEncode=function(){if(!Array.isArray(this.tables)){let e=[];for(let t in this.tables){let A=this.tables[t];A&&e.push({tag:t,checkSum:0,offset:new VoidPointer($c3395722bea751e2$export$2e2bcd8739ae039[t],A),length:$c3395722bea751e2$export$2e2bcd8739ae039[t].size(A)})}this.tables=e}this.tag="true",this.numTables=this.tables.length;let e=Math.floor(Math.log(this.numTables)/Math.LN2),t=Math.pow(2,e);this.searchRange=16*t,this.entrySelector=Math.log(t)/Math.LN2,this.rangeShift=16*this.numTables-this.searchRange};var $816c07a04b6dba87$export$2e2bcd8739ae039=$816c07a04b6dba87$var$Directory;function $12727730ddfc8bfe$export$2e0ae67339d5f1ac(e,t){let A=0,n=e.length-1;for(;A<=n;){let l=A+n>>1,r=t(e[l]);if(r<0)n=l-1;else{if(!(r>0))return l;A=l+1}}return-1}function $12727730ddfc8bfe$export$d02631cccf789723(e,t){let A=[];for(;e<t;)A.push(e++);return A}var $12727730ddfc8bfe$export$3d28c1996ced1f14=new TextDecoder("ascii"),$12727730ddfc8bfe$var$CHARS="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",$12727730ddfc8bfe$var$LOOKUP=new Uint8Array(256);for(let e=0;e<$12727730ddfc8bfe$var$CHARS.length;e++)$12727730ddfc8bfe$var$LOOKUP[$12727730ddfc8bfe$var$CHARS.charCodeAt(e)]=e;function $12727730ddfc8bfe$export$94fdf11bafc8de6b(e){let t=.75*e.length;"="===e[e.length-1]&&(t--,"="===e[e.length-2]&&t--);let A=new Uint8Array(t),n=0;for(let t=0,l=e.length;t<l;t+=4){let l=$12727730ddfc8bfe$var$LOOKUP[e.charCodeAt(t)],r=$12727730ddfc8bfe$var$LOOKUP[e.charCodeAt(t+1)],a=$12727730ddfc8bfe$var$LOOKUP[e.charCodeAt(t+2)],o=$12727730ddfc8bfe$var$LOOKUP[e.charCodeAt(t+3)];A[n++]=l<<2|r>>4,A[n++]=(15&r)<<4|a>>2,A[n++]=(3&a)<<6|63&o}return A}var $f08dd41ef10b694c$export$2e2bcd8739ae039=class{findSubtable(e,t){for(let[A,n]of t)for(let t of e.tables)if(t.platformID===A&&t.encodingID===n)return t.table;return null}lookup(e,t){if(this.encoding)e=this.encoding.get(e)||e;else if(t){let A=this.getVariationSelector(e,t);if(A)return A}let A=this.cmap;switch(A.version){case 0:return A.codeMap.get(e)||0;case 4:{let t=0,n=A.segCount-1;for(;t<=n;){let l=t+n>>1;if(e<A.startCode.get(l))n=l-1;else{if(!(e>A.endCode.get(l))){let t,n=A.idRangeOffset.get(l);if(0===n)t=e+A.idDelta.get(l);else{let r=n/2+(e-A.startCode.get(l))-(A.segCount-l);t=A.glyphIndexArray.get(r)||0,0!==t&&(t+=A.idDelta.get(l))}return 65535&t}t=l+1}}return 0}case 8:throw new Error("TODO: cmap format 8");case 6:case 10:return A.glyphIndices.get(e-A.firstCode)||0;case 12:case 13:{let t=0,n=A.nGroups-1;for(;t<=n;){let l=t+n>>1,r=A.groups.get(l);if(e<r.startCharCode)n=l-1;else{if(!(e>r.endCharCode))return 12===A.version?r.glyphID+(e-r.startCharCode):r.glyphID;t=l+1}}return 0}case 14:throw new Error("TODO: cmap format 14");default:throw new Error(`Unknown cmap format ${A.version}`)}}getVariationSelector(e,t){if(!this.uvs)return 0;let A=this.uvs.varSelectors.toArray(),n=$12727730ddfc8bfe$export$2e0ae67339d5f1ac(A,(e=>t-e.varSelector)),l=A[n];return-1!==n&&l.defaultUVS&&(n=$12727730ddfc8bfe$export$2e0ae67339d5f1ac(l.defaultUVS,(t=>e<t.startUnicodeValue?-1:e>t.startUnicodeValue+t.additionalCount?1:0))),-1!==n&&l.nonDefaultUVS&&(n=$12727730ddfc8bfe$export$2e0ae67339d5f1ac(l.nonDefaultUVS,(t=>e-t.unicodeValue)),-1!==n)?l.nonDefaultUVS[n].glyphID:0}getCharacterSet(){let e=this.cmap;switch(e.version){case 0:return $12727730ddfc8bfe$export$d02631cccf789723(0,e.codeMap.length);case 4:{let t=[],A=e.endCode.toArray();for(let n=0;n<A.length;n++){let l=A[n]+1,r=e.startCode.get(n);t.push(...$12727730ddfc8bfe$export$d02631cccf789723(r,l))}return t}case 8:throw new Error("TODO: cmap format 8");case 6:case 10:return $12727730ddfc8bfe$export$d02631cccf789723(e.firstCode,e.firstCode+e.glyphIndices.length);case 12:case 13:{let t=[];for(let A of e.groups.toArray())t.push(...$12727730ddfc8bfe$export$d02631cccf789723(A.startCharCode,A.endCharCode+1));return t}case 14:throw new Error("TODO: cmap format 14");default:throw new Error(`Unknown cmap format ${e.version}`)}}codePointsForGlyph(e){let t=this.cmap;switch(t.version){case 0:{let A=[];for(let n=0;n<256;n++)t.codeMap.get(n)===e&&A.push(n);return A}case 4:{let n=[];for(let l=0;l<t.segCount;l++){let r=t.endCode.get(l),a=t.startCode.get(l),o=t.idRangeOffset.get(l),s=t.idDelta.get(l);for(var A=a;A<=r;A++){let r=0;if(0===o)r=A+s;else{let e=o/2+(A-a)-(t.segCount-l);r=t.glyphIndexArray.get(e)||0,0!==r&&(r+=s)}r===e&&n.push(A)}}return n}case 12:{let A=[];for(let n of t.groups.toArray())e>=n.glyphID&&e<=n.glyphID+(n.endCharCode-n.startCharCode)&&A.push(n.startCharCode+(e-n.glyphID));return A}case 13:{let A=[];for(let n of t.groups.toArray())e===n.glyphID&&A.push(...$12727730ddfc8bfe$export$d02631cccf789723(n.startCharCode,n.endCharCode+1));return A}default:throw new Error(`Unknown cmap format ${t.version}`)}}constructor(e){if(this.encoding=null,this.cmap=this.findSubtable(e,[[3,10],[0,6],[0,4],[3,1],[0,3],[0,2],[0,1],[0,0]]),!this.cmap)for(let t of e.tables){let e=$e449ad78d50845fe$export$1dceb3c14ed68bee($e449ad78d50845fe$export$badc544e0651b6b1(t.platformID,t.encodingID,t.table.language-1));e&&(this.cmap=t.table,this.encoding=e)}if(!this.cmap)throw new Error("Could not find a supported cmap table");this.uvs=this.findSubtable(e,[[0,5]]),this.uvs&&14!==this.uvs.version&&(this.uvs=null)}};__decorate([$e71565f2ce09cb6b$export$69a3209f1a06c04d],$f08dd41ef10b694c$export$2e2bcd8739ae039.prototype,"getCharacterSet",null),__decorate([$e71565f2ce09cb6b$export$69a3209f1a06c04d],$f08dd41ef10b694c$export$2e2bcd8739ae039.prototype,"codePointsForGlyph",null);var $0bba3a9db57637f3$export$2e2bcd8739ae039=class{process(e,t){for(let A=0;A<e.length-1;A++){let n=e[A].id,l=e[A+1].id;t[A].xAdvance+=this.getKerning(n,l)}}getKerning(e,t){let A=0;for(let n of this.kern.tables){if(n.coverage.crossStream)continue;switch(n.version){case 0:if(!n.coverage.horizontal)continue;break;case 1:if(n.coverage.vertical||n.coverage.variation)continue;break;default:throw new Error(`Unsupported kerning table version ${n.version}`)}let l=0,r=n.subtable;switch(n.format){case 0:let A=$12727730ddfc8bfe$export$2e0ae67339d5f1ac(r.pairs,(function(A){return e-A.left||t-A.right}));A>=0&&(l=r.pairs[A].value);break;case 2:let a=0,o=0;a=e>=r.leftTable.firstGlyph&&e<r.leftTable.firstGlyph+r.leftTable.nGlyphs?r.leftTable.offsets[e-r.leftTable.firstGlyph]:r.array.off,t>=r.rightTable.firstGlyph&&t<r.rightTable.firstGlyph+r.rightTable.nGlyphs&&(o=r.rightTable.offsets[t-r.rightTable.firstGlyph]);let s=(a+o-r.array.off)/2;l=r.array.values.get(s);break;case 3:if(e>=r.glyphCount||t>=r.glyphCount)return 0;l=r.kernValue[r.kernIndex[r.leftClass[e]*r.rightClassCount+r.rightClass[t]]];break;default:throw new Error(`Unsupported kerning sub-table format ${n.format}`)}n.coverage.override?A=l:A+=l}return A}constructor(e){this.kern=e.kern}},$0a4bdfeb6dfd6f5e$export$2e2bcd8739ae039=class{positionGlyphs(e,t){let A=0,n=0;for(let l=0;l<e.length;l++){e[l].isMark?n=l:(A!==n&&this.positionCluster(e,t,A,n),A=n=l)}return A!==n&&this.positionCluster(e,t,A,n),t}positionCluster(e,t,A,n){let l=e[A],r=l.cbox.copy();l.codePoints.length>1&&(r.minX+=(l.codePoints.length-1)*r.width/l.codePoints.length);let a=-t[A].xAdvance,o=0,s=this.font.unitsPerEm/16;for(let l=A+1;l<=n;l++){let A=e[l],n=A.cbox,i=t[l],u=this.getCombiningClass(A.codePoints[0]);if("Not_Reordered"!==u){switch(i.xOffset=i.yOffset=0,u){case"Double_Above":case"Double_Below":i.xOffset+=r.minX-n.width/2-n.minX;break;case"Attached_Below_Left":case"Below_Left":case"Above_Left":i.xOffset+=r.minX-n.minX;break;case"Attached_Above_Right":case"Below_Right":case"Above_Right":i.xOffset+=r.maxX-n.width-n.minX;break;default:i.xOffset+=r.minX+(r.width-n.width)/2-n.minX}switch(u){case"Double_Below":case"Below_Left":case"Below":case"Below_Right":case"Attached_Below_Left":case"Attached_Below":"Attached_Below_Left"!==u&&"Attached_Below"!==u||(r.minY+=s),i.yOffset=-r.minY-n.maxY,r.minY+=n.height;break;case"Double_Above":case"Above_Left":case"Above":case"Above_Right":case"Attached_Above":case"Attached_Above_Right":"Attached_Above"!==u&&"Attached_Above_Right"!==u||(r.maxY+=s),i.yOffset=r.maxY-n.minY,r.maxY+=n.height}i.xAdvance=i.yAdvance=0,i.xOffset+=a,i.yOffset+=o}else a-=i.xAdvance,o-=i.yAdvance}}getCombiningClass(e){let t=$747425b437e121da$export$c03b919c6651ed55(e);if(3584==(-256&e))if("Not_Reordered"===t)switch(e){case 3633:case 3636:case 3637:case 3638:case 3639:case 3655:case 3660:case 3645:case 3662:return"Above_Right";case 3761:case 3764:case 3765:case 3766:case 3767:case 3771:case 3788:case 3789:return"Above";case 3772:return"Below"}else if(3642===e)return"Below_Right";switch(t){case"CCC10":case"CCC11":case"CCC12":case"CCC13":case"CCC14":case"CCC15":case"CCC16":case"CCC17":case"CCC18":case"CCC20":case"CCC22":case"CCC29":case"CCC32":case"CCC118":case"CCC129":case"CCC132":return"Below";case"CCC23":return"Attached_Above";case"CCC24":case"CCC107":return"Above_Right";case"CCC25":case"CCC19":return"Above_Left";case"CCC26":case"CCC27":case"CCC28":case"CCC30":case"CCC31":case"CCC33":case"CCC34":case"CCC35":case"CCC36":case"CCC122":case"CCC130":return"Above";case"CCC21":break;case"CCC103":return"Below_Right"}return t}constructor(e){this.font=e}},$f34600ab9d7f70d8$export$2e2bcd8739ae039=class e{get width(){return this.maxX-this.minX}get height(){return this.maxY-this.minY}addPoint(e,t){Math.abs(e)!==1/0&&(e<this.minX&&(this.minX=e),e>this.maxX&&(this.maxX=e)),Math.abs(t)!==1/0&&(t<this.minY&&(this.minY=t),t>this.maxY&&(this.maxY=t))}copy(){return new e(this.minX,this.minY,this.maxX,this.maxY)}constructor(e=1/0,t=1/0,A=-1/0,n=-1/0){this.minX=e,this.minY=t,this.maxX=A,this.maxY=n}},$130d1a642ebcd2b7$var$UNICODE_SCRIPTS={Caucasian_Albanian:"aghb",Arabic:"arab",Imperial_Aramaic:"armi",Armenian:"armn",Avestan:"avst",Balinese:"bali",Bamum:"bamu",Bassa_Vah:"bass",Batak:"batk",Bengali:["bng2","beng"],Bopomofo:"bopo",Brahmi:"brah",Braille:"brai",Buginese:"bugi",Buhid:"buhd",Chakma:"cakm",Canadian_Aboriginal:"cans",Carian:"cari",Cham:"cham",Cherokee:"cher",Coptic:"copt",Cypriot:"cprt",Cyrillic:"cyrl",Devanagari:["dev2","deva"],Deseret:"dsrt",Duployan:"dupl",Egyptian_Hieroglyphs:"egyp",Elbasan:"elba",Ethiopic:"ethi",Georgian:"geor",Glagolitic:"glag",Gothic:"goth",Grantha:"gran",Greek:"grek",Gujarati:["gjr2","gujr"],Gurmukhi:["gur2","guru"],Hangul:"hang",Han:"hani",Hanunoo:"hano",Hebrew:"hebr",Hiragana:"hira",Pahawh_Hmong:"hmng",Katakana_Or_Hiragana:"hrkt",Old_Italic:"ital",Javanese:"java",Kayah_Li:"kali",Katakana:"kana",Kharoshthi:"khar",Khmer:"khmr",Khojki:"khoj",Kannada:["knd2","knda"],Kaithi:"kthi",Tai_Tham:"lana",Lao:"lao ",Latin:"latn",Lepcha:"lepc",Limbu:"limb",Linear_A:"lina",Linear_B:"linb",Lisu:"lisu",Lycian:"lyci",Lydian:"lydi",Mahajani:"mahj",Mandaic:"mand",Manichaean:"mani",Mende_Kikakui:"mend",Meroitic_Cursive:"merc",Meroitic_Hieroglyphs:"mero",Malayalam:["mlm2","mlym"],Modi:"modi",Mongolian:"mong",Mro:"mroo",Meetei_Mayek:"mtei",Myanmar:["mym2","mymr"],Old_North_Arabian:"narb",Nabataean:"nbat",Nko:"nko ",Ogham:"ogam",Ol_Chiki:"olck",Old_Turkic:"orkh",Oriya:["ory2","orya"],Osmanya:"osma",Palmyrene:"palm",Pau_Cin_Hau:"pauc",Old_Permic:"perm",Phags_Pa:"phag",Inscriptional_Pahlavi:"phli",Psalter_Pahlavi:"phlp",Phoenician:"phnx",Miao:"plrd",Inscriptional_Parthian:"prti",Rejang:"rjng",Runic:"runr",Samaritan:"samr",Old_South_Arabian:"sarb",Saurashtra:"saur",Shavian:"shaw",Sharada:"shrd",Siddham:"sidd",Khudawadi:"sind",Sinhala:"sinh",Sora_Sompeng:"sora",Sundanese:"sund",Syloti_Nagri:"sylo",Syriac:"syrc",Tagbanwa:"tagb",Takri:"takr",Tai_Le:"tale",New_Tai_Lue:"talu",Tamil:["tml2","taml"],Tai_Viet:"tavt",Telugu:["tel2","telu"],Tifinagh:"tfng",Tagalog:"tglg",Thaana:"thaa",Thai:"thai",Tibetan:"tibt",Tirhuta:"tirh",Ugaritic:"ugar",Vai:"vai ",Warang_Citi:"wara",Old_Persian:"xpeo",Cuneiform:"xsux",Yi:"yi  ",Inherited:"zinh",Common:"zyyy",Unknown:"zzzz"},$130d1a642ebcd2b7$var$OPENTYPE_SCRIPTS={};for(let e in $130d1a642ebcd2b7$var$UNICODE_SCRIPTS){let t=$130d1a642ebcd2b7$var$UNICODE_SCRIPTS[e];if(Array.isArray(t))for(let A of t)$130d1a642ebcd2b7$var$OPENTYPE_SCRIPTS[A]=e;else $130d1a642ebcd2b7$var$OPENTYPE_SCRIPTS[t]=e}function $130d1a642ebcd2b7$export$ce50e82f12a827a4(e){return $130d1a642ebcd2b7$var$OPENTYPE_SCRIPTS[e]}function $130d1a642ebcd2b7$export$e5cb25e204fb8450(e){let t=e.length,A=0;for(;A<t;){let n=e.charCodeAt(A++);if(55296<=n&&n<=56319&&A<t){let t=e.charCodeAt(A);56320<=t&&t<=57343&&(A++,n=((1023&n)<<10)+(1023&t)+65536)}let l=$747425b437e121da$export$941569448d136665(n);if("Common"!==l&&"Inherited"!==l&&"Unknown"!==l)return $130d1a642ebcd2b7$var$UNICODE_SCRIPTS[l]}return $130d1a642ebcd2b7$var$UNICODE_SCRIPTS.Unknown}function $130d1a642ebcd2b7$export$16fab0757cfc223d(e){for(let t=0;t<e.length;t++){let A=$747425b437e121da$export$941569448d136665(e[t]);if("Common"!==A&&"Inherited"!==A&&"Unknown"!==A)return $130d1a642ebcd2b7$var$UNICODE_SCRIPTS[A]}return $130d1a642ebcd2b7$var$UNICODE_SCRIPTS.Unknown}var $130d1a642ebcd2b7$var$RTL={arab:!0,hebr:!0,syrc:!0,thaa:!0,cprt:!0,khar:!0,phnx:!0,"nko ":!0,lydi:!0,avst:!0,armi:!0,phli:!0,prti:!0,sarb:!0,orkh:!0,samr:!0,mand:!0,merc:!0,mero:!0,mani:!0,mend:!0,nbat:!0,narb:!0,palm:!0,phlp:!0};function $130d1a642ebcd2b7$export$9fddb9d0dd7d8a54(e){return $130d1a642ebcd2b7$var$RTL[e]?"rtl":"ltr"}var $be07b3e97a42687a$export$2e2bcd8739ae039=class{get advanceWidth(){let e=0;for(let t of this.positions)e+=t.xAdvance;return e}get advanceHeight(){let e=0;for(let t of this.positions)e+=t.yAdvance;return e}get bbox(){let e=new $f34600ab9d7f70d8$export$2e2bcd8739ae039,t=0,A=0;for(let n=0;n<this.glyphs.length;n++){let l=this.glyphs[n],r=this.positions[n],a=l.bbox;e.addPoint(a.minX+t+r.xOffset,a.minY+A+r.yOffset),e.addPoint(a.maxX+t+r.xOffset,a.maxY+A+r.yOffset),t+=r.xAdvance,A+=r.yAdvance}return e}constructor(e,t,A,n,l){if(this.glyphs=e,this.positions=null,this.script=A,this.language=n||null,this.direction=l||$130d1a642ebcd2b7$export$9fddb9d0dd7d8a54(A),this.features={},Array.isArray(t))for(let e of t)this.features[e]=!0;else"object"==typeof t&&(this.features=t)}},$1ac75d9a55b67f01$export$2e2bcd8739ae039=class{constructor(e=0,t=0,A=0,n=0){this.xAdvance=e,this.yAdvance=t,this.xOffset=A,this.yOffset=n}},$3b6302b64eccc32c$var$features={allTypographicFeatures:{code:0,exclusive:!1,allTypeFeatures:0},ligatures:{code:1,exclusive:!1,requiredLigatures:0,commonLigatures:2,rareLigatures:4,rebusPictures:8,diphthongLigatures:10,squaredLigatures:12,abbrevSquaredLigatures:14,symbolLigatures:16,contextualLigatures:18,historicalLigatures:20},cursiveConnection:{code:2,exclusive:!0,unconnected:0,partiallyConnected:1,cursive:2},letterCase:{code:3,exclusive:!0},verticalSubstitution:{code:4,exclusive:!1,substituteVerticalForms:0},linguisticRearrangement:{code:5,exclusive:!1,linguisticRearrangement:0},numberSpacing:{code:6,exclusive:!0,monospacedNumbers:0,proportionalNumbers:1,thirdWidthNumbers:2,quarterWidthNumbers:3},smartSwash:{code:8,exclusive:!1,wordInitialSwashes:0,wordFinalSwashes:2,nonFinalSwashes:8},diacritics:{code:9,exclusive:!0,showDiacritics:0,hideDiacritics:1,decomposeDiacritics:2},verticalPosition:{code:10,exclusive:!0,normalPosition:0,superiors:1,inferiors:2,ordinals:3,scientificInferiors:4},fractions:{code:11,exclusive:!0,noFractions:0,verticalFractions:1,diagonalFractions:2},overlappingCharacters:{code:13,exclusive:!1,preventOverlap:0},typographicExtras:{code:14,exclusive:!1,slashedZero:4},mathematicalExtras:{code:15,exclusive:!1,mathematicalGreek:10},ornamentSets:{code:16,exclusive:!0,noOrnaments:0,dingbats:1,piCharacters:2,fleurons:3,decorativeBorders:4,internationalSymbols:5,mathSymbols:6},characterAlternatives:{code:17,exclusive:!0,noAlternates:0},designComplexity:{code:18,exclusive:!0,designLevel1:0,designLevel2:1,designLevel3:2,designLevel4:3,designLevel5:4},styleOptions:{code:19,exclusive:!0,noStyleOptions:0,displayText:1,engravedText:2,illuminatedCaps:3,titlingCaps:4,tallCaps:5},characterShape:{code:20,exclusive:!0,traditionalCharacters:0,simplifiedCharacters:1,JIS1978Characters:2,JIS1983Characters:3,JIS1990Characters:4,traditionalAltOne:5,traditionalAltTwo:6,traditionalAltThree:7,traditionalAltFour:8,traditionalAltFive:9,expertCharacters:10,JIS2004Characters:11,hojoCharacters:12,NLCCharacters:13,traditionalNamesCharacters:14},numberCase:{code:21,exclusive:!0,lowerCaseNumbers:0,upperCaseNumbers:1},textSpacing:{code:22,exclusive:!0,proportionalText:0,monospacedText:1,halfWidthText:2,thirdWidthText:3,quarterWidthText:4,altProportionalText:5,altHalfWidthText:6},transliteration:{code:23,exclusive:!0,noTransliteration:0},annotation:{code:24,exclusive:!0,noAnnotation:0,boxAnnotation:1,roundedBoxAnnotation:2,circleAnnotation:3,invertedCircleAnnotation:4,parenthesisAnnotation:5,periodAnnotation:6,romanNumeralAnnotation:7,diamondAnnotation:8,invertedBoxAnnotation:9,invertedRoundedBoxAnnotation:10},kanaSpacing:{code:25,exclusive:!0,fullWidthKana:0,proportionalKana:1},ideographicSpacing:{code:26,exclusive:!0,fullWidthIdeographs:0,proportionalIdeographs:1,halfWidthIdeographs:2},unicodeDecomposition:{code:27,exclusive:!1,canonicalComposition:0,compatibilityComposition:2,transcodingComposition:4},rubyKana:{code:28,exclusive:!1,rubyKana:2},CJKSymbolAlternatives:{code:29,exclusive:!0,noCJKSymbolAlternatives:0,CJKSymbolAltOne:1,CJKSymbolAltTwo:2,CJKSymbolAltThree:3,CJKSymbolAltFour:4,CJKSymbolAltFive:5},ideographicAlternatives:{code:30,exclusive:!0,noIdeographicAlternatives:0,ideographicAltOne:1,ideographicAltTwo:2,ideographicAltThree:3,ideographicAltFour:4,ideographicAltFive:5},CJKVerticalRomanPlacement:{code:31,exclusive:!0,CJKVerticalRomanCentered:0,CJKVerticalRomanHBaseline:1},italicCJKRoman:{code:32,exclusive:!1,CJKItalicRoman:2},caseSensitiveLayout:{code:33,exclusive:!1,caseSensitiveLayout:0,caseSensitiveSpacing:2},alternateKana:{code:34,exclusive:!1,alternateHorizKana:0,alternateVertKana:2},stylisticAlternatives:{code:35,exclusive:!1,noStylisticAlternates:0,stylisticAltOne:2,stylisticAltTwo:4,stylisticAltThree:6,stylisticAltFour:8,stylisticAltFive:10,stylisticAltSix:12,stylisticAltSeven:14,stylisticAltEight:16,stylisticAltNine:18,stylisticAltTen:20,stylisticAltEleven:22,stylisticAltTwelve:24,stylisticAltThirteen:26,stylisticAltFourteen:28,stylisticAltFifteen:30,stylisticAltSixteen:32,stylisticAltSeventeen:34,stylisticAltEighteen:36,stylisticAltNineteen:38,stylisticAltTwenty:40},contextualAlternates:{code:36,exclusive:!1,contextualAlternates:0,swashAlternates:2,contextualSwashAlternates:4},lowerCase:{code:37,exclusive:!0,defaultLowerCase:0,lowerCaseSmallCaps:1,lowerCasePetiteCaps:2},upperCase:{code:38,exclusive:!0,defaultUpperCase:0,upperCaseSmallCaps:1,upperCasePetiteCaps:2},languageTag:{code:39,exclusive:!0},CJKRomanSpacing:{code:103,exclusive:!0,halfWidthCJKRoman:0,proportionalCJKRoman:1,defaultCJKRoman:2,fullWidthCJKRoman:3}},$3b6302b64eccc32c$var$feature=(e,t)=>[$3b6302b64eccc32c$var$features[e].code,$3b6302b64eccc32c$var$features[e][t]],$3b6302b64eccc32c$var$OTMapping={rlig:$3b6302b64eccc32c$var$feature("ligatures","requiredLigatures"),clig:$3b6302b64eccc32c$var$feature("ligatures","contextualLigatures"),dlig:$3b6302b64eccc32c$var$feature("ligatures","rareLigatures"),hlig:$3b6302b64eccc32c$var$feature("ligatures","historicalLigatures"),liga:$3b6302b64eccc32c$var$feature("ligatures","commonLigatures"),hist:$3b6302b64eccc32c$var$feature("ligatures","historicalLigatures"),smcp:$3b6302b64eccc32c$var$feature("lowerCase","lowerCaseSmallCaps"),pcap:$3b6302b64eccc32c$var$feature("lowerCase","lowerCasePetiteCaps"),frac:$3b6302b64eccc32c$var$feature("fractions","diagonalFractions"),dnom:$3b6302b64eccc32c$var$feature("fractions","diagonalFractions"),numr:$3b6302b64eccc32c$var$feature("fractions","diagonalFractions"),afrc:$3b6302b64eccc32c$var$feature("fractions","verticalFractions"),case:$3b6302b64eccc32c$var$feature("caseSensitiveLayout","caseSensitiveLayout"),ccmp:$3b6302b64eccc32c$var$feature("unicodeDecomposition","canonicalComposition"),cpct:$3b6302b64eccc32c$var$feature("CJKVerticalRomanPlacement","CJKVerticalRomanCentered"),valt:$3b6302b64eccc32c$var$feature("CJKVerticalRomanPlacement","CJKVerticalRomanCentered"),swsh:$3b6302b64eccc32c$var$feature("contextualAlternates","swashAlternates"),cswh:$3b6302b64eccc32c$var$feature("contextualAlternates","contextualSwashAlternates"),curs:$3b6302b64eccc32c$var$feature("cursiveConnection","cursive"),c2pc:$3b6302b64eccc32c$var$feature("upperCase","upperCasePetiteCaps"),c2sc:$3b6302b64eccc32c$var$feature("upperCase","upperCaseSmallCaps"),init:$3b6302b64eccc32c$var$feature("smartSwash","wordInitialSwashes"),fin2:$3b6302b64eccc32c$var$feature("smartSwash","wordFinalSwashes"),medi:$3b6302b64eccc32c$var$feature("smartSwash","nonFinalSwashes"),med2:$3b6302b64eccc32c$var$feature("smartSwash","nonFinalSwashes"),fin3:$3b6302b64eccc32c$var$feature("smartSwash","wordFinalSwashes"),fina:$3b6302b64eccc32c$var$feature("smartSwash","wordFinalSwashes"),pkna:$3b6302b64eccc32c$var$feature("kanaSpacing","proportionalKana"),half:$3b6302b64eccc32c$var$feature("textSpacing","halfWidthText"),halt:$3b6302b64eccc32c$var$feature("textSpacing","altHalfWidthText"),hkna:$3b6302b64eccc32c$var$feature("alternateKana","alternateHorizKana"),vkna:$3b6302b64eccc32c$var$feature("alternateKana","alternateVertKana"),ital:$3b6302b64eccc32c$var$feature("italicCJKRoman","CJKItalicRoman"),lnum:$3b6302b64eccc32c$var$feature("numberCase","upperCaseNumbers"),onum:$3b6302b64eccc32c$var$feature("numberCase","lowerCaseNumbers"),mgrk:$3b6302b64eccc32c$var$feature("mathematicalExtras","mathematicalGreek"),calt:$3b6302b64eccc32c$var$feature("contextualAlternates","contextualAlternates"),vrt2:$3b6302b64eccc32c$var$feature("verticalSubstitution","substituteVerticalForms"),vert:$3b6302b64eccc32c$var$feature("verticalSubstitution","substituteVerticalForms"),tnum:$3b6302b64eccc32c$var$feature("numberSpacing","monospacedNumbers"),pnum:$3b6302b64eccc32c$var$feature("numberSpacing","proportionalNumbers"),sups:$3b6302b64eccc32c$var$feature("verticalPosition","superiors"),subs:$3b6302b64eccc32c$var$feature("verticalPosition","inferiors"),ordn:$3b6302b64eccc32c$var$feature("verticalPosition","ordinals"),pwid:$3b6302b64eccc32c$var$feature("textSpacing","proportionalText"),hwid:$3b6302b64eccc32c$var$feature("textSpacing","halfWidthText"),qwid:$3b6302b64eccc32c$var$feature("textSpacing","quarterWidthText"),twid:$3b6302b64eccc32c$var$feature("textSpacing","thirdWidthText"),fwid:$3b6302b64eccc32c$var$feature("textSpacing","proportionalText"),palt:$3b6302b64eccc32c$var$feature("textSpacing","altProportionalText"),trad:$3b6302b64eccc32c$var$feature("characterShape","traditionalCharacters"),smpl:$3b6302b64eccc32c$var$feature("characterShape","simplifiedCharacters"),jp78:$3b6302b64eccc32c$var$feature("characterShape","JIS1978Characters"),jp83:$3b6302b64eccc32c$var$feature("characterShape","JIS1983Characters"),jp90:$3b6302b64eccc32c$var$feature("characterShape","JIS1990Characters"),jp04:$3b6302b64eccc32c$var$feature("characterShape","JIS2004Characters"),expt:$3b6302b64eccc32c$var$feature("characterShape","expertCharacters"),hojo:$3b6302b64eccc32c$var$feature("characterShape","hojoCharacters"),nlck:$3b6302b64eccc32c$var$feature("characterShape","NLCCharacters"),tnam:$3b6302b64eccc32c$var$feature("characterShape","traditionalNamesCharacters"),ruby:$3b6302b64eccc32c$var$feature("rubyKana","rubyKana"),titl:$3b6302b64eccc32c$var$feature("styleOptions","titlingCaps"),zero:$3b6302b64eccc32c$var$feature("typographicExtras","slashedZero"),ss01:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltOne"),ss02:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltTwo"),ss03:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltThree"),ss04:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltFour"),ss05:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltFive"),ss06:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltSix"),ss07:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltSeven"),ss08:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltEight"),ss09:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltNine"),ss10:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltTen"),ss11:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltEleven"),ss12:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltTwelve"),ss13:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltThirteen"),ss14:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltFourteen"),ss15:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltFifteen"),ss16:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltSixteen"),ss17:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltSeventeen"),ss18:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltEighteen"),ss19:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltNineteen"),ss20:$3b6302b64eccc32c$var$feature("stylisticAlternatives","stylisticAltTwenty")};for(let e=1;e<=99;e++)$3b6302b64eccc32c$var$OTMapping[`cv${`00${e}`.slice(-2)}`]=[$3b6302b64eccc32c$var$features.characterAlternatives.code,e];var $3b6302b64eccc32c$var$AATMapping={};for(let e in $3b6302b64eccc32c$var$OTMapping){let t=$3b6302b64eccc32c$var$OTMapping[e];null==$3b6302b64eccc32c$var$AATMapping[t[0]]&&($3b6302b64eccc32c$var$AATMapping[t[0]]={}),$3b6302b64eccc32c$var$AATMapping[t[0]][t[1]]=e}function $3b6302b64eccc32c$export$b813f7d2a1677c16(e){let t={};for(let A in e){let n;(n=$3b6302b64eccc32c$var$OTMapping[A])&&(null==t[n[0]]&&(t[n[0]]={}),t[n[0]][n[1]]=e[A])}return t}function $3b6302b64eccc32c$var$mapFeatureStrings(e){let[t,A]=e;if(isNaN(t))var n=$3b6302b64eccc32c$var$features[t]&&$3b6302b64eccc32c$var$features[t].code;else n=t;if(isNaN(A))var l=$3b6302b64eccc32c$var$features[t]&&$3b6302b64eccc32c$var$features[t][A];else l=A;return[n,l]}function $3b6302b64eccc32c$export$bd6df347a4f391c4(e){let t={};if(Array.isArray(e))for(let A=0;A<e.length;A++){let n,l=$3b6302b64eccc32c$var$mapFeatureStrings(e[A]);(n=$3b6302b64eccc32c$var$AATMapping[l[0]]&&$3b6302b64eccc32c$var$AATMapping[l[0]][l[1]])&&(t[n]=!0)}else if("object"==typeof e)for(let A in e){let n=e[A];for(let e in n){let l,r=$3b6302b64eccc32c$var$mapFeatureStrings([A,e]);n[e]&&(l=$3b6302b64eccc32c$var$AATMapping[r[0]]&&$3b6302b64eccc32c$var$AATMapping[r[0]][r[1]])&&(t[l]=!0)}}return Object.keys(t)}var $ff5ce077dae0f144$export$2e2bcd8739ae039=class{lookup(e){switch(this.table.version){case 0:return this.table.values.getItem(e);case 2:case 4:{let n=0,l=this.table.binarySearchHeader.nUnits-1;for(;n<=l;){var t=n+l>>1;if(65535===(A=this.table.segments[t]).firstGlyph)return null;if(e<A.firstGlyph)l=t-1;else{if(!(e>A.lastGlyph))return 2===this.table.version?A.value:A.values[e-A.firstGlyph];n=t+1}}return null}case 6:{let n=0,l=this.table.binarySearchHeader.nUnits-1;for(;n<=l;){var A;t=n+l>>1;if(65535===(A=this.table.segments[t]).glyph)return null;if(e<A.glyph)l=t-1;else{if(!(e>A.glyph))return A.value;n=t+1}}return null}case 8:return this.table.values[e-this.table.firstGlyph];default:throw new Error(`Unknown lookup table format:${this.table.version}`)}}glyphsForValue(e){let t=[];switch(this.table.version){case 2:case 4:for(let A of this.table.segments)if(2===this.table.version&&A.value===e)t.push(...$12727730ddfc8bfe$export$d02631cccf789723(A.firstGlyph,A.lastGlyph+1));else for(let n=0;n<A.values.length;n++)A.values[n]===e&&t.push(A.firstGlyph+n);break;case 6:for(let A of this.table.segments)A.value===e&&t.push(A.glyph);break;case 8:for(let A=0;A<this.table.values.length;A++)this.table.values[A]===e&&t.push(this.table.firstGlyph+A);break;default:throw new Error(`Unknown lookup table format:${this.table.version}`)}return t}constructor(e){this.table=e}};__decorate([$e71565f2ce09cb6b$export$69a3209f1a06c04d],$ff5ce077dae0f144$export$2e2bcd8739ae039.prototype,"glyphsForValue",null);var $50c7aac9316f2948$var$START_OF_TEXT_STATE=0,$50c7aac9316f2948$var$END_OF_TEXT_CLASS=0,$50c7aac9316f2948$var$OUT_OF_BOUNDS_CLASS=1,$50c7aac9316f2948$var$DELETED_GLYPH_CLASS=2,$50c7aac9316f2948$var$DONT_ADVANCE=16384,$50c7aac9316f2948$export$2e2bcd8739ae039=class{process(e,t,A){let n=$50c7aac9316f2948$var$START_OF_TEXT_STATE,l=t?e.length-1:0,r=t?-1:1;for(;1===r&&l<=e.length||-1===r&&l>=-1;){let t=null,a=$50c7aac9316f2948$var$OUT_OF_BOUNDS_CLASS,o=!0;l===e.length||-1===l?a=$50c7aac9316f2948$var$END_OF_TEXT_CLASS:(t=e[l],65535===t.id?a=$50c7aac9316f2948$var$DELETED_GLYPH_CLASS:(a=this.lookupTable.lookup(t.id),null==a&&(a=$50c7aac9316f2948$var$OUT_OF_BOUNDS_CLASS)));let s=this.stateTable.stateArray.getItem(n)[a],i=this.stateTable.entryTable.getItem(s);a!==$50c7aac9316f2948$var$END_OF_TEXT_CLASS&&a!==$50c7aac9316f2948$var$DELETED_GLYPH_CLASS&&(A(t,i,l),o=!(i.flags&$50c7aac9316f2948$var$DONT_ADVANCE)),n=i.newState,o&&(l+=r)}return e}traverse(e,t=0,A=new Set){if(A.has(t))return;A.add(t);let{nClasses:n,stateArray:l,entryTable:r}=this.stateTable,a=l.getItem(t);for(let t=4;t<n;t++){let n=a[t],l=r.getItem(n);for(let n of this.lookupTable.glyphsForValue(t))e.enter&&e.enter(n,l),0!==l.newState&&this.traverse(e,l.newState,A),e.exit&&e.exit(n,l)}}constructor(e){this.stateTable=e,this.lookupTable=new $ff5ce077dae0f144$export$2e2bcd8739ae039(e.classTable)}},$55f71433a605c87d$var$MARK_FIRST=32768,$55f71433a605c87d$var$MARK_LAST=8192,$55f71433a605c87d$var$VERB=15,$55f71433a605c87d$var$SET_MARK=32768,$55f71433a605c87d$var$SET_COMPONENT=32768,$55f71433a605c87d$var$PERFORM_ACTION=8192,$55f71433a605c87d$var$LAST_MASK=2147483648,$55f71433a605c87d$var$STORE_MASK=1073741824,$55f71433a605c87d$var$OFFSET_MASK=1073741823,$55f71433a605c87d$var$REVERSE_DIRECTION=4194304,$55f71433a605c87d$var$CURRENT_INSERT_BEFORE=2048,$55f71433a605c87d$var$MARKED_INSERT_BEFORE=1024,$55f71433a605c87d$var$CURRENT_INSERT_COUNT=992,$55f71433a605c87d$var$MARKED_INSERT_COUNT=31,$55f71433a605c87d$export$2e2bcd8739ae039=class{process(e,t={}){for(let A of this.morx.chains){let n=A.defaultFlags;for(let e of A.features){let A;(A=t[e.featureType])&&(A[e.featureSetting]?(n&=e.disableFlags,n|=e.enableFlags):!1===A[e.featureSetting]&&(n|=~e.disableFlags,n&=~e.enableFlags))}for(let t of A.subtables)t.subFeatureFlags&n&&this.processSubtable(t,e)}let A=e.length-1;for(;A>=0;)65535===e[A].id&&e.splice(A,1),A--;return e}processSubtable(e,t){if(this.subtable=e,this.glyphs=t,4===this.subtable.type)return void this.processNoncontextualSubstitutions(this.subtable,this.glyphs);this.ligatureStack=[],this.markedGlyph=null,this.firstGlyph=null,this.lastGlyph=null,this.markedIndex=null;let A=this.getStateMachine(e),n=this.getProcessor(),l=!!(this.subtable.coverage&$55f71433a605c87d$var$REVERSE_DIRECTION);return A.process(this.glyphs,l,n)}getStateMachine(e){return new $50c7aac9316f2948$export$2e2bcd8739ae039(e.table.stateTable)}getProcessor(){switch(this.subtable.type){case 0:return this.processIndicRearragement;case 1:return this.processContextualSubstitution;case 2:return this.processLigature;case 4:return this.processNoncontextualSubstitutions;case 5:return this.processGlyphInsertion;default:throw new Error(`Invalid morx subtable type:${this.subtable.type}`)}}processIndicRearragement(e,t,A){t.flags&$55f71433a605c87d$var$MARK_FIRST&&(this.firstGlyph=A),t.flags&$55f71433a605c87d$var$MARK_LAST&&(this.lastGlyph=A),$55f71433a605c87d$var$reorderGlyphs(this.glyphs,t.flags&$55f71433a605c87d$var$VERB,this.firstGlyph,this.lastGlyph)}processContextualSubstitution(e,t,A){let n=this.subtable.table.substitutionTable.items;if(65535!==t.markIndex){let A=n.getItem(t.markIndex),r=new $ff5ce077dae0f144$export$2e2bcd8739ae039(A);e=this.glyphs[this.markedGlyph],(l=r.lookup(e.id))&&(this.glyphs[this.markedGlyph]=this.font.getGlyph(l,e.codePoints))}if(65535!==t.currentIndex){let r=n.getItem(t.currentIndex),a=new $ff5ce077dae0f144$export$2e2bcd8739ae039(r);var l;e=this.glyphs[A],(l=a.lookup(e.id))&&(this.glyphs[A]=this.font.getGlyph(l,e.codePoints))}t.flags&$55f71433a605c87d$var$SET_MARK&&(this.markedGlyph=A)}processLigature(e,t,A){if(t.flags&$55f71433a605c87d$var$SET_COMPONENT&&this.ligatureStack.push(A),t.flags&$55f71433a605c87d$var$PERFORM_ACTION){let e=this.subtable.table.ligatureActions,A=this.subtable.table.components,n=this.subtable.table.ligatureList,l=t.action,r=!1,a=0,o=[],s=[];for(;!r;){let t=this.ligatureStack.pop();o.unshift(...this.glyphs[t].codePoints);let i=e.getItem(l++);r=!!(i&$55f71433a605c87d$var$LAST_MASK);let u=!!(i&$55f71433a605c87d$var$STORE_MASK),c=(i&$55f71433a605c87d$var$OFFSET_MASK)<<2>>2;if(c+=this.glyphs[t].id,a+=A.getItem(c),r||u){let e=n.getItem(a);this.glyphs[t]=this.font.getGlyph(e,o),s.push(t),a=0,o=[]}else this.glyphs[t]=this.font.getGlyph(65535)}this.ligatureStack.push(...s)}}processNoncontextualSubstitutions(e,t,A){let n=new $ff5ce077dae0f144$export$2e2bcd8739ae039(e.table.lookupTable);for(A=0;A<t.length;A++){let e=t[A];if(65535!==e.id){let l=n.lookup(e.id);l&&(t[A]=this.font.getGlyph(l,e.codePoints))}}}_insertGlyphs(e,t,A,n){let l=[];for(;A--;){let e=this.subtable.table.insertionActions.getItem(t++);l.push(this.font.getGlyph(e))}n||e++,this.glyphs.splice(e,0,...l)}processGlyphInsertion(e,t,A){if(t.flags&$55f71433a605c87d$var$SET_MARK&&(this.markedIndex=A),65535!==t.markedInsertIndex){let e=(t.flags&$55f71433a605c87d$var$MARKED_INSERT_COUNT)>>>5,A=!!(t.flags&$55f71433a605c87d$var$MARKED_INSERT_BEFORE);this._insertGlyphs(this.markedIndex,t.markedInsertIndex,e,A)}if(65535!==t.currentInsertIndex){let e=(t.flags&$55f71433a605c87d$var$CURRENT_INSERT_COUNT)>>>5,n=!!(t.flags&$55f71433a605c87d$var$CURRENT_INSERT_BEFORE);this._insertGlyphs(A,t.currentInsertIndex,e,n)}}getSupportedFeatures(){let e=[];for(let t of this.morx.chains)for(let A of t.features)e.push([A.featureType,A.featureSetting]);return e}generateInputs(e){return this.inputCache||this.generateInputCache(),this.inputCache[e]||[]}generateInputCache(){this.inputCache={};for(let e of this.morx.chains){let t=e.defaultFlags;for(let A of e.subtables)A.subFeatureFlags&t&&this.generateInputsForSubtable(A)}}generateInputsForSubtable(e){if(2!==e.type)return;if(!!(e.coverage&$55f71433a605c87d$var$REVERSE_DIRECTION))throw new Error("Reverse subtable, not supported.");this.subtable=e,this.ligatureStack=[];let t=this.getStateMachine(e),A=this.getProcessor(),n=[],l=[];this.glyphs=[],t.traverse({enter:(e,t)=>{let r=this.glyphs;l.push({glyphs:r.slice(),ligatureStack:this.ligatureStack.slice()});let a=this.font.getGlyph(e);n.push(a),r.push(n[n.length-1]),A(r[r.length-1],t,r.length-1);let o=0,s=0;for(let e=0;e<r.length&&o<=1;e++)65535!==r[e].id&&(o++,s=r[e].id);if(1===o){let e=n.map((e=>e.id)),t=this.inputCache[s];t?t.push(e):this.inputCache[s]=[e]}},exit:()=>{({glyphs:this.glyphs,ligatureStack:this.ligatureStack}=l.pop()),n.pop()}})}constructor(e){this.processIndicRearragement=this.processIndicRearragement.bind(this),this.processContextualSubstitution=this.processContextualSubstitution.bind(this),this.processLigature=this.processLigature.bind(this),this.processNoncontextualSubstitutions=this.processNoncontextualSubstitutions.bind(this),this.processGlyphInsertion=this.processGlyphInsertion.bind(this),this.font=e,this.morx=e.morx,this.inputCache=null}};function $55f71433a605c87d$var$swap(e,t,A,n=!1,l=!1){let r=e.splice(A[0]-(A[1]-1),A[1]);l&&r.reverse();let a=e.splice(t[0],t[1],...r);return n&&a.reverse(),e.splice(A[0]-(t[1]-1),0,...a),e}function $55f71433a605c87d$var$reorderGlyphs(e,t,A,n){switch(t){case 0:return e;case 1:return $55f71433a605c87d$var$swap(e,[A,1],[n,0]);case 2:return $55f71433a605c87d$var$swap(e,[A,0],[n,1]);case 3:return $55f71433a605c87d$var$swap(e,[A,1],[n,1]);case 4:return $55f71433a605c87d$var$swap(e,[A,2],[n,0]);case 5:return $55f71433a605c87d$var$swap(e,[A,2],[n,0],!0,!1);case 6:return $55f71433a605c87d$var$swap(e,[A,0],[n,2]);case 7:return $55f71433a605c87d$var$swap(e,[A,0],[n,2],!1,!0);case 8:return $55f71433a605c87d$var$swap(e,[A,1],[n,2]);case 9:return $55f71433a605c87d$var$swap(e,[A,1],[n,2],!1,!0);case 10:return $55f71433a605c87d$var$swap(e,[A,2],[n,1]);case 11:return $55f71433a605c87d$var$swap(e,[A,2],[n,1],!0,!1);case 12:return $55f71433a605c87d$var$swap(e,[A,2],[n,2]);case 13:return $55f71433a605c87d$var$swap(e,[A,2],[n,2],!0,!1);case 14:return $55f71433a605c87d$var$swap(e,[A,2],[n,2],!1,!0);case 15:return $55f71433a605c87d$var$swap(e,[A,2],[n,2],!0,!0);default:throw new Error(`Unknown verb:${t}`)}}__decorate([$e71565f2ce09cb6b$export$69a3209f1a06c04d],$55f71433a605c87d$export$2e2bcd8739ae039.prototype,"getStateMachine",null);var $ba6dd74203be8728$export$2e2bcd8739ae039=class{substitute(e){"rtl"===e.direction&&e.glyphs.reverse(),this.morxProcessor.process(e.glyphs,$3b6302b64eccc32c$export$b813f7d2a1677c16(e.features))}getAvailableFeatures(e,t){return $3b6302b64eccc32c$export$bd6df347a4f391c4(this.morxProcessor.getSupportedFeatures())}stringsForGlyph(e){let t=this.morxProcessor.generateInputs(e),A=new Set;for(let e of t)this._addStrings(e,0,A,"");return A}_addStrings(e,t,A,n){let l=this.font._cmapProcessor.codePointsForGlyph(e[t]);for(let r of l){let l=n+String.fromCodePoint(r);t<e.length-1?this._addStrings(e,t+1,A,l):A.add(l)}}constructor(e){this.font=e,this.morxProcessor=new $55f71433a605c87d$export$2e2bcd8739ae039(e),this.fallbackPosition=!1}},$94d7a73bd2edfc9a$export$2e2bcd8739ae039=class{_addFeatures(e,t){let A=this.stages.length-1,n=this.stages[A];for(let l of e)null==this.allFeatures[l]&&(n.push(l),this.allFeatures[l]=A,t&&(this.globalFeatures[l]=!0))}add(e,t=!0){if(0===this.stages.length&&this.stages.push([]),"string"==typeof e&&(e=[e]),Array.isArray(e))this._addFeatures(e,t);else{if("object"!=typeof e)throw new Error("Unsupported argument to ShapingPlan#add");this._addFeatures(e.global||[],!0),this._addFeatures(e.local||[],!1)}}addStage(e,t){"function"==typeof e?this.stages.push(e,[]):(this.stages.push([]),this.add(e,t))}setFeatureOverrides(e){if(Array.isArray(e))this.add(e);else if("object"==typeof e)for(let t in e)if(e[t])this.add(t);else if(null!=this.allFeatures[t]){let e=this.stages[this.allFeatures[t]];e.splice(e.indexOf(t),1),delete this.allFeatures[t],delete this.globalFeatures[t]}}assignGlobalFeatures(e){for(let t of e)for(let e in this.globalFeatures)t.features[e]=!0}process(e,t,A){for(let n of this.stages)"function"==typeof n?A||n(this.font,t,this):n.length>0&&e.applyFeatures(n,t,A)}constructor(e,t,A){this.font=e,this.script=t,this.direction=A,this.stages=[],this.globalFeatures={},this.allFeatures={}}},$649970d87335b30f$var$VARIATION_FEATURES=["rvrn"],$649970d87335b30f$var$COMMON_FEATURES=["ccmp","locl","rlig","mark","mkmk"],$649970d87335b30f$var$FRACTIONAL_FEATURES=["frac","numr","dnom"],$649970d87335b30f$var$HORIZONTAL_FEATURES=["calt","clig","liga","rclt","curs","kern"],$649970d87335b30f$var$DIRECTIONAL_FEATURES={ltr:["ltra","ltrm"],rtl:["rtla","rtlm"]},$649970d87335b30f$export$2e2bcd8739ae039=class{static plan(e,t,A){this.planPreprocessing(e),this.planFeatures(e),this.planPostprocessing(e,A),e.assignGlobalFeatures(t),this.assignFeatures(e,t)}static planPreprocessing(e){e.add({global:[...$649970d87335b30f$var$VARIATION_FEATURES,...$649970d87335b30f$var$DIRECTIONAL_FEATURES[e.direction]],local:$649970d87335b30f$var$FRACTIONAL_FEATURES})}static planFeatures(e){}static planPostprocessing(e,t){e.add([...$649970d87335b30f$var$COMMON_FEATURES,...$649970d87335b30f$var$HORIZONTAL_FEATURES]),e.setFeatureOverrides(t)}static assignFeatures(e,t){for(let e=0;e<t.length;e++){let A=t[e];if(8260===A.codePoints[0]){let n=e,l=e+1;for(;n>0&&$747425b437e121da$export$727d9dbc4fbb948f(t[n-1].codePoints[0]);)t[n-1].features.numr=!0,t[n-1].features.frac=!0,n--;for(;l<t.length&&$747425b437e121da$export$727d9dbc4fbb948f(t[l].codePoints[0]);)t[l].features.dnom=!0,t[l].features.frac=!0,l++;A.features.frac=!0,e=l-1}}}};_define_property($649970d87335b30f$export$2e2bcd8739ae039,"zeroMarkWidths","AFTER_GPOS");var $764eb544bbe1ccf0$var$trie=new(0,import_unicode_trie2.default)($12727730ddfc8bfe$export$94fdf11bafc8de6b("ABABAAAAAACgMQAAAZUBav7t2CtPA0EUBeDZB00pin9AJZIEgyUEj0QhweDAgQOJxCBRBElQSBwSicLgkOAwnNKZ5GaY2c7uzj4o5yZfZrrbefbuIx2nSq3CGmzAWH/+K+UO7MIe7MMhHMMpnMMFXMIVXIt2t3CnP088iPqjqNN8e4Ij7Rle4LUH82rLm6i/92A+RERERERERERNmfz/89GDeRARERERzbN8ceps2Iwt9H0C9/AJ6yOlDkbTczcot5VSm8Pm1vcFWfb7+BKOLTuOd2UlTX4wGP85Eg953lWPFbnuN7PkjtLmalOWbNenkHOSa7T3KmR9MVTZ2zZkVj1kHa68MueVKH0R4zqQ44WEXLM8VjcWHP0PtKLfPzQnMtGn3W4QYf6qxFxceVI394r2xnV+1rih0fV1Vzf3fO1n3evL5J78ruvZ5ptX2Rwy92Tfb1wlEqut3U+sZ3HXOeJ7/zDrbyuP6+Zz0fqa6Nv3vhY7Yu1xWnGevmsvsUpTT/RYIe8waUH/rvHMWKFzLfN8L+rTfp645mfX7ftlnfDtYxN59w0=")),$764eb544bbe1ccf0$var$FEATURES=["isol","fina","fin2","fin3","medi","med2","init"],$764eb544bbe1ccf0$var$ShapingClasses={Non_Joining:0,Left_Joining:1,Right_Joining:2,Dual_Joining:3,Join_Causing:3,ALAPH:4,"DALATH RISH":5,Transparent:6},$764eb544bbe1ccf0$var$ISOL="isol",$764eb544bbe1ccf0$var$FINA="fina",$764eb544bbe1ccf0$var$FIN2="fin2",$764eb544bbe1ccf0$var$FIN3="fin3",$764eb544bbe1ccf0$var$MEDI="medi",$764eb544bbe1ccf0$var$MED2="med2",$764eb544bbe1ccf0$var$INIT="init",$764eb544bbe1ccf0$var$NONE=null,$764eb544bbe1ccf0$var$STATE_TABLE=[[[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$NONE,0],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,2],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,1],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,2],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,1],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,6]],[[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$NONE,0],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,2],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,1],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,2],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$FIN2,5],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,6]],[[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$NONE,0],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,2],[$764eb544bbe1ccf0$var$INIT,$764eb544bbe1ccf0$var$FINA,1],[$764eb544bbe1ccf0$var$INIT,$764eb544bbe1ccf0$var$FINA,3],[$764eb544bbe1ccf0$var$INIT,$764eb544bbe1ccf0$var$FINA,4],[$764eb544bbe1ccf0$var$INIT,$764eb544bbe1ccf0$var$FINA,6]],[[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$NONE,0],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,2],[$764eb544bbe1ccf0$var$MEDI,$764eb544bbe1ccf0$var$FINA,1],[$764eb544bbe1ccf0$var$MEDI,$764eb544bbe1ccf0$var$FINA,3],[$764eb544bbe1ccf0$var$MEDI,$764eb544bbe1ccf0$var$FINA,4],[$764eb544bbe1ccf0$var$MEDI,$764eb544bbe1ccf0$var$FINA,6]],[[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$NONE,0],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,2],[$764eb544bbe1ccf0$var$MED2,$764eb544bbe1ccf0$var$ISOL,1],[$764eb544bbe1ccf0$var$MED2,$764eb544bbe1ccf0$var$ISOL,2],[$764eb544bbe1ccf0$var$MED2,$764eb544bbe1ccf0$var$FIN2,5],[$764eb544bbe1ccf0$var$MED2,$764eb544bbe1ccf0$var$ISOL,6]],[[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$NONE,0],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,2],[$764eb544bbe1ccf0$var$ISOL,$764eb544bbe1ccf0$var$ISOL,1],[$764eb544bbe1ccf0$var$ISOL,$764eb544bbe1ccf0$var$ISOL,2],[$764eb544bbe1ccf0$var$ISOL,$764eb544bbe1ccf0$var$FIN2,5],[$764eb544bbe1ccf0$var$ISOL,$764eb544bbe1ccf0$var$ISOL,6]],[[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$NONE,0],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,2],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,1],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,2],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$FIN3,5],[$764eb544bbe1ccf0$var$NONE,$764eb544bbe1ccf0$var$ISOL,6]]],$764eb544bbe1ccf0$export$2e2bcd8739ae039=class extends $649970d87335b30f$export$2e2bcd8739ae039{static planFeatures(e){e.add(["ccmp","locl"]);for(let t=0;t<$764eb544bbe1ccf0$var$FEATURES.length;t++){let A=$764eb544bbe1ccf0$var$FEATURES[t];e.addStage(A,!1)}e.addStage("mset")}static assignFeatures(e,t){super.assignFeatures(e,t);let A=-1,n=0,l=[];for(let e=0;e<t.length;e++){let a,o;let s=$764eb544bbe1ccf0$var$getShapingClass((r=t[e]).codePoints[0]);s!==$764eb544bbe1ccf0$var$ShapingClasses.Transparent?([o,a,n]=$764eb544bbe1ccf0$var$STATE_TABLE[n][s],o!==$764eb544bbe1ccf0$var$NONE&&-1!==A&&(l[A]=o),l[e]=a,A=e):l[e]=$764eb544bbe1ccf0$var$NONE}for(let e=0;e<t.length;e++){let A;var r=t[e];(A=l[e])&&(r.features[A]=!0)}}};function $764eb544bbe1ccf0$var$getShapingClass(e){let t=$764eb544bbe1ccf0$var$trie.get(e);if(t)return t-1;let A=$747425b437e121da$export$410364bbb673ddbc(e);return"Mn"===A||"Me"===A||"Cf"===A?$764eb544bbe1ccf0$var$ShapingClasses.Transparent:$764eb544bbe1ccf0$var$ShapingClasses.Non_Joining}var $85d408632270248b$export$2e2bcd8739ae039=class{reset(e={},t=0){this.options=e,this.flags=e.flags||{},this.markAttachmentType=e.markAttachmentType||0,this.index=t}get cur(){return this.glyphs[this.index]||null}shouldIgnore(e){return this.flags.ignoreMarks&&e.isMark||this.flags.ignoreBaseGlyphs&&e.isBase||this.flags.ignoreLigatures&&e.isLigature||this.markAttachmentType&&e.isMark&&e.markAttachmentType!==this.markAttachmentType}move(e){for(this.index+=e;0<=this.index&&this.index<this.glyphs.length&&this.shouldIgnore(this.glyphs[this.index]);)this.index+=e;return 0>this.index||this.index>=this.glyphs.length?null:this.glyphs[this.index]}next(){return this.move(1)}prev(){return this.move(-1)}peek(e=1){let t=this.index,A=this.increment(e);return this.index=t,A}peekIndex(e=1){let t=this.index;this.increment(e);let A=this.index;return this.index=t,A}increment(e=1){let t=e<0?-1:1;for(e=Math.abs(e);e--;)this.move(t);return this.glyphs[this.index]}constructor(e,t){this.glyphs=e,this.reset(t)}},$a83b9c36aaa94fd3$var$DEFAULT_SCRIPTS=["DFLT","dflt","latn"],$a83b9c36aaa94fd3$export$2e2bcd8739ae039=class{findScript(e){if(null==this.table.scriptList)return null;Array.isArray(e)||(e=[e]);for(let t of e)for(let e of this.table.scriptList)if(e.tag===t)return e;return null}selectScript(e,t,A){let n,l=!1;if(!this.script||e!==this.scriptTag){if(n=this.findScript(e),n||(n=this.findScript($a83b9c36aaa94fd3$var$DEFAULT_SCRIPTS)),!n)return this.scriptTag;this.scriptTag=n.tag,this.script=n.script,this.language=null,this.languageTag=null,l=!0}if(A&&A===this.direction||(this.direction=A||$130d1a642ebcd2b7$export$9fddb9d0dd7d8a54(e)),t&&t.length<4&&(t+=" ".repeat(4-t.length)),!t||t!==this.languageTag){this.language=null;for(let e of this.script.langSysRecords)if(e.tag===t){this.language=e.langSys,this.languageTag=e.tag;break}this.language||(this.language=this.script.defaultLangSys,this.languageTag=null),l=!0}if(l&&(this.features={},this.language))for(let e of this.language.featureIndexes){let t=this.table.featureList[e],A=this.substituteFeatureForVariations(e);this.features[t.tag]=A||t.feature}return this.scriptTag}lookupsForFeatures(e=[],t){let A=[];for(let n of e){let e=this.features[n];if(e)for(let l of e.lookupListIndexes)t&&-1!==t.indexOf(l)||A.push({feature:n,index:l,lookup:this.table.lookupList.get(l)})}return A.sort(((e,t)=>e.index-t.index)),A}substituteFeatureForVariations(e){if(-1===this.variationsIndex)return null;let t=this.table.featureVariations.featureVariationRecords[this.variationsIndex].featureTableSubstitution.substitutions;for(let A of t)if(A.featureIndex===e)return A.alternateFeatureTable;return null}findVariationsIndex(e){let t=this.table.featureVariations;if(!t)return-1;let A=t.featureVariationRecords;for(let t=0;t<A.length;t++){let n=A[t].conditionSet.conditionTable;if(this.variationConditionsMatch(n,e))return t}return-1}variationConditionsMatch(e,t){return e.every((e=>{let A=e.axisIndex<t.length?t[e.axisIndex]:0;return e.filterRangeMinValue<=A&&A<=e.filterRangeMaxValue}))}applyFeatures(e,t,A){let n=this.lookupsForFeatures(e);this.applyLookups(n,t,A)}applyLookups(e,t,A){this.glyphs=t,this.positions=A,this.glyphIterator=new $85d408632270248b$export$2e2bcd8739ae039(t);for(let{feature:A,lookup:n}of e)for(this.currentFeature=A,this.glyphIterator.reset(n.flags);this.glyphIterator.index<t.length;)if(A in this.glyphIterator.cur.features){for(let e of n.subTables){if(this.applyLookup(n.lookupType,e))break}this.glyphIterator.next()}else this.glyphIterator.next()}applyLookup(e,t){throw new Error("applyLookup must be implemented by subclasses")}applyLookupList(e){let t=this.glyphIterator.options,A=this.glyphIterator.index;for(let n of e){this.glyphIterator.reset(t,A),this.glyphIterator.increment(n.sequenceIndex);let e=this.table.lookupList.get(n.lookupListIndex);this.glyphIterator.reset(e.flags,this.glyphIterator.index);for(let t of e.subTables)if(this.applyLookup(e.lookupType,t))break}return this.glyphIterator.reset(t,A),!0}coverageIndex(e,t){switch(null==t&&(t=this.glyphIterator.cur.id),e.version){case 1:return e.glyphs.indexOf(t);case 2:for(let A of e.rangeRecords)if(A.start<=t&&t<=A.end)return A.startCoverageIndex+t-A.start}return-1}match(e,t,A,n){let l=this.glyphIterator.index,r=this.glyphIterator.increment(e),a=0;for(;a<t.length&&r&&A(t[a],r);)n&&n.push(this.glyphIterator.index),a++,r=this.glyphIterator.next();return this.glyphIterator.index=l,!(a<t.length)&&(n||!0)}sequenceMatches(e,t){return this.match(e,t,((e,t)=>e===t.id))}sequenceMatchIndices(e,t){return this.match(e,t,((e,t)=>this.currentFeature in t.features&&e===t.id),[])}coverageSequenceMatches(e,t){return this.match(e,t,((e,t)=>this.coverageIndex(e,t.id)>=0))}getClassID(e,t){switch(t.version){case 1:let A=e-t.startGlyph;if(A>=0&&A<t.classValueArray.length)return t.classValueArray[A];break;case 2:for(let A of t.classRangeRecord)if(A.start<=e&&e<=A.end)return A.class}return 0}classSequenceMatches(e,t,A){return this.match(e,t,((e,t)=>e===this.getClassID(t.id,A)))}applyContext(e){let t,A;switch(e.version){case 1:if(t=this.coverageIndex(e.coverage),-1===t)return!1;A=e.ruleSets[t];for(let e of A)if(this.sequenceMatches(1,e.input))return this.applyLookupList(e.lookupRecords);break;case 2:if(-1===this.coverageIndex(e.coverage))return!1;if(t=this.getClassID(this.glyphIterator.cur.id,e.classDef),-1===t)return!1;A=e.classSet[t];for(let t of A)if(this.classSequenceMatches(1,t.classes,e.classDef))return this.applyLookupList(t.lookupRecords);break;case 3:if(this.coverageSequenceMatches(0,e.coverages))return this.applyLookupList(e.lookupRecords)}return!1}applyChainingContext(e){let t;switch(e.version){case 1:if(t=this.coverageIndex(e.coverage),-1===t)return!1;let A=e.chainRuleSets[t];for(let e of A)if(this.sequenceMatches(-e.backtrack.length,e.backtrack)&&this.sequenceMatches(1,e.input)&&this.sequenceMatches(1+e.input.length,e.lookahead))return this.applyLookupList(e.lookupRecords);break;case 2:if(-1===this.coverageIndex(e.coverage))return!1;t=this.getClassID(this.glyphIterator.cur.id,e.inputClassDef);let n=e.chainClassSet[t];if(!n)return!1;for(let t of n)if(this.classSequenceMatches(-t.backtrack.length,t.backtrack,e.backtrackClassDef)&&this.classSequenceMatches(1,t.input,e.inputClassDef)&&this.classSequenceMatches(1+t.input.length,t.lookahead,e.lookaheadClassDef))return this.applyLookupList(t.lookupRecords);break;case 3:if(this.coverageSequenceMatches(-e.backtrackGlyphCount,e.backtrackCoverage)&&this.coverageSequenceMatches(0,e.inputCoverage)&&this.coverageSequenceMatches(e.inputGlyphCount,e.lookaheadCoverage))return this.applyLookupList(e.lookupRecords)}return!1}constructor(e,t){this.font=e,this.table=t,this.script=null,this.scriptTag=null,this.language=null,this.languageTag=null,this.features={},this.lookups={},this.variationsIndex=e._variationProcessor?this.findVariationsIndex(e._variationProcessor.normalizedCoords):-1,this.selectScript(),this.glyphs=[],this.positions=[],this.ligatureID=1,this.currentFeature=null}},$10e7b257e1a9a756$export$2e2bcd8739ae039=class e{get id(){return this._id}set id(e){this._id=e,this.substituted=!0;let t=this._font.GDEF;if(t&&t.glyphClassDef){let A=$a83b9c36aaa94fd3$export$2e2bcd8739ae039.prototype.getClassID(e,t.glyphClassDef);this.isBase=1===A,this.isLigature=2===A,this.isMark=3===A,this.markAttachmentType=t.markAttachClassDef?$a83b9c36aaa94fd3$export$2e2bcd8739ae039.prototype.getClassID(e,t.markAttachClassDef):0}else this.isMark=this.codePoints.length>0&&this.codePoints.every($747425b437e121da$export$e33ad6871e762338),this.isBase=!this.isMark,this.isLigature=this.codePoints.length>1,this.markAttachmentType=0}copy(){return new e(this._font,this.id,this.codePoints,this.features)}constructor(e,t,A=[],n){if(this._font=e,this.codePoints=A,this.id=t,this.features={},Array.isArray(n))for(let e=0;e<n.length;e++){let t=n[e];this.features[t]=!0}else"object"==typeof n&&Object.assign(this.features,n);this.ligatureID=null,this.ligatureComponent=null,this.isLigated=!1,this.cursiveAttachment=null,this.markAttachment=null,this.shaperInfo=null,this.substituted=!1,this.isMultiplied=!1}},$e1c6bbc8cb416f8c$export$2e2bcd8739ae039=class extends $649970d87335b30f$export$2e2bcd8739ae039{static planFeatures(e){e.add(["ljmo","vjmo","tjmo"],!1)}static assignFeatures(e,t){let A=0,n=0;for(;n<t.length;){let l,r=t[n].codePoints[0],a=$e1c6bbc8cb416f8c$var$getType(r);switch([l,A]=$e1c6bbc8cb416f8c$var$STATE_TABLE[A][a],l){case $e1c6bbc8cb416f8c$var$DECOMPOSE:e.font.hasGlyphForCodePoint(r)||(n=$e1c6bbc8cb416f8c$var$decompose(t,n,e.font));break;case $e1c6bbc8cb416f8c$var$COMPOSE:n=$e1c6bbc8cb416f8c$var$compose(t,n,e.font);break;case $e1c6bbc8cb416f8c$var$TONE_MARK:$e1c6bbc8cb416f8c$var$reorderToneMark(t,n,e.font);break;case $e1c6bbc8cb416f8c$var$INVALID:n=$e1c6bbc8cb416f8c$var$insertDottedCircle(t,n,e.font)}n++}}};_define_property($e1c6bbc8cb416f8c$export$2e2bcd8739ae039,"zeroMarkWidths","NONE");var $e1c6bbc8cb416f8c$var$HANGUL_BASE=44032,$e1c6bbc8cb416f8c$var$HANGUL_END=55204,$e1c6bbc8cb416f8c$var$HANGUL_COUNT=$e1c6bbc8cb416f8c$var$HANGUL_END-$e1c6bbc8cb416f8c$var$HANGUL_BASE+1,$e1c6bbc8cb416f8c$var$L_BASE=4352,$e1c6bbc8cb416f8c$var$V_BASE=4449,$e1c6bbc8cb416f8c$var$T_BASE=4519,$e1c6bbc8cb416f8c$var$L_COUNT=19,$e1c6bbc8cb416f8c$var$V_COUNT=21,$e1c6bbc8cb416f8c$var$T_COUNT=28,$e1c6bbc8cb416f8c$var$L_END=$e1c6bbc8cb416f8c$var$L_BASE+$e1c6bbc8cb416f8c$var$L_COUNT-1,$e1c6bbc8cb416f8c$var$V_END=$e1c6bbc8cb416f8c$var$V_BASE+$e1c6bbc8cb416f8c$var$V_COUNT-1,$e1c6bbc8cb416f8c$var$T_END=$e1c6bbc8cb416f8c$var$T_BASE+$e1c6bbc8cb416f8c$var$T_COUNT-1,$e1c6bbc8cb416f8c$var$DOTTED_CIRCLE=9676,$e1c6bbc8cb416f8c$var$isL=e=>4352<=e&&e<=4447||43360<=e&&e<=43388,$e1c6bbc8cb416f8c$var$isV=e=>4448<=e&&e<=4519||55216<=e&&e<=55238,$e1c6bbc8cb416f8c$var$isT=e=>4520<=e&&e<=4607||55243<=e&&e<=55291,$e1c6bbc8cb416f8c$var$isTone=e=>12334<=e&&e<=12335,$e1c6bbc8cb416f8c$var$isLVT=e=>$e1c6bbc8cb416f8c$var$HANGUL_BASE<=e&&e<=$e1c6bbc8cb416f8c$var$HANGUL_END,$e1c6bbc8cb416f8c$var$isLV=e=>e-$e1c6bbc8cb416f8c$var$HANGUL_BASE<$e1c6bbc8cb416f8c$var$HANGUL_COUNT&&(e-$e1c6bbc8cb416f8c$var$HANGUL_BASE)%$e1c6bbc8cb416f8c$var$T_COUNT==0,$e1c6bbc8cb416f8c$var$isCombiningL=e=>$e1c6bbc8cb416f8c$var$L_BASE<=e&&e<=$e1c6bbc8cb416f8c$var$L_END,$e1c6bbc8cb416f8c$var$isCombiningV=e=>$e1c6bbc8cb416f8c$var$V_BASE<=e&&e<=$e1c6bbc8cb416f8c$var$V_END,$e1c6bbc8cb416f8c$var$isCombiningT=e=>$e1c6bbc8cb416f8c$var$T_BASE+1&&1<=e&&e<=$e1c6bbc8cb416f8c$var$T_END,$e1c6bbc8cb416f8c$var$X=0,$e1c6bbc8cb416f8c$var$L=1,$e1c6bbc8cb416f8c$var$V=2,$e1c6bbc8cb416f8c$var$T=3,$e1c6bbc8cb416f8c$var$LV=4,$e1c6bbc8cb416f8c$var$LVT=5,$e1c6bbc8cb416f8c$var$M=6;function $e1c6bbc8cb416f8c$var$getType(e){return $e1c6bbc8cb416f8c$var$isL(e)?$e1c6bbc8cb416f8c$var$L:$e1c6bbc8cb416f8c$var$isV(e)?$e1c6bbc8cb416f8c$var$V:$e1c6bbc8cb416f8c$var$isT(e)?$e1c6bbc8cb416f8c$var$T:$e1c6bbc8cb416f8c$var$isLV(e)?$e1c6bbc8cb416f8c$var$LV:$e1c6bbc8cb416f8c$var$isLVT(e)?$e1c6bbc8cb416f8c$var$LVT:$e1c6bbc8cb416f8c$var$isTone(e)?$e1c6bbc8cb416f8c$var$M:$e1c6bbc8cb416f8c$var$X}var $e1c6bbc8cb416f8c$var$NO_ACTION=0,$e1c6bbc8cb416f8c$var$DECOMPOSE=1,$e1c6bbc8cb416f8c$var$COMPOSE=2,$e1c6bbc8cb416f8c$var$TONE_MARK=4,$e1c6bbc8cb416f8c$var$INVALID=5,$e1c6bbc8cb416f8c$var$STATE_TABLE=[[[$e1c6bbc8cb416f8c$var$NO_ACTION,0],[$e1c6bbc8cb416f8c$var$NO_ACTION,1],[$e1c6bbc8cb416f8c$var$NO_ACTION,0],[$e1c6bbc8cb416f8c$var$NO_ACTION,0],[$e1c6bbc8cb416f8c$var$DECOMPOSE,2],[$e1c6bbc8cb416f8c$var$DECOMPOSE,3],[$e1c6bbc8cb416f8c$var$INVALID,0]],[[$e1c6bbc8cb416f8c$var$NO_ACTION,0],[$e1c6bbc8cb416f8c$var$NO_ACTION,1],[$e1c6bbc8cb416f8c$var$COMPOSE,2],[$e1c6bbc8cb416f8c$var$NO_ACTION,0],[$e1c6bbc8cb416f8c$var$DECOMPOSE,2],[$e1c6bbc8cb416f8c$var$DECOMPOSE,3],[$e1c6bbc8cb416f8c$var$INVALID,0]],[[$e1c6bbc8cb416f8c$var$NO_ACTION,0],[$e1c6bbc8cb416f8c$var$NO_ACTION,1],[$e1c6bbc8cb416f8c$var$NO_ACTION,0],[$e1c6bbc8cb416f8c$var$COMPOSE,3],[$e1c6bbc8cb416f8c$var$DECOMPOSE,2],[$e1c6bbc8cb416f8c$var$DECOMPOSE,3],[$e1c6bbc8cb416f8c$var$TONE_MARK,0]],[[$e1c6bbc8cb416f8c$var$NO_ACTION,0],[$e1c6bbc8cb416f8c$var$NO_ACTION,1],[$e1c6bbc8cb416f8c$var$NO_ACTION,0],[$e1c6bbc8cb416f8c$var$NO_ACTION,0],[$e1c6bbc8cb416f8c$var$DECOMPOSE,2],[$e1c6bbc8cb416f8c$var$DECOMPOSE,3],[$e1c6bbc8cb416f8c$var$TONE_MARK,0]]];function $e1c6bbc8cb416f8c$var$getGlyph(e,t,A){return new $10e7b257e1a9a756$export$2e2bcd8739ae039(e,e.glyphForCodePoint(t).id,[t],A)}function $e1c6bbc8cb416f8c$var$decompose(e,t,A){let n=e[t],l=n.codePoints[0]-$e1c6bbc8cb416f8c$var$HANGUL_BASE,r=$e1c6bbc8cb416f8c$var$T_BASE+l%$e1c6bbc8cb416f8c$var$T_COUNT;l=l/$e1c6bbc8cb416f8c$var$T_COUNT|0;let a=$e1c6bbc8cb416f8c$var$L_BASE+l/$e1c6bbc8cb416f8c$var$V_COUNT|0,o=$e1c6bbc8cb416f8c$var$V_BASE+l%$e1c6bbc8cb416f8c$var$V_COUNT;if(!A.hasGlyphForCodePoint(a)||!A.hasGlyphForCodePoint(o)||r!==$e1c6bbc8cb416f8c$var$T_BASE&&!A.hasGlyphForCodePoint(r))return t;let s=$e1c6bbc8cb416f8c$var$getGlyph(A,a,n.features);s.features.ljmo=!0;let i=$e1c6bbc8cb416f8c$var$getGlyph(A,o,n.features);i.features.vjmo=!0;let u=[s,i];if(r>$e1c6bbc8cb416f8c$var$T_BASE){let e=$e1c6bbc8cb416f8c$var$getGlyph(A,r,n.features);e.features.tjmo=!0,u.push(e)}return e.splice(t,1,...u),t+u.length-1}function $e1c6bbc8cb416f8c$var$compose(e,t,A){let n,l,r,a,o=e[t],s=$e1c6bbc8cb416f8c$var$getType(e[t].codePoints[0]),i=e[t-1].codePoints[0],u=$e1c6bbc8cb416f8c$var$getType(i);if(u===$e1c6bbc8cb416f8c$var$LV&&s===$e1c6bbc8cb416f8c$var$T)n=i,a=o;else{s===$e1c6bbc8cb416f8c$var$V?(l=e[t-1],r=o):(l=e[t-2],r=e[t-1],a=o);let A=l.codePoints[0],i=r.codePoints[0];$e1c6bbc8cb416f8c$var$isCombiningL(A)&&$e1c6bbc8cb416f8c$var$isCombiningV(i)&&(n=$e1c6bbc8cb416f8c$var$HANGUL_BASE+((A-$e1c6bbc8cb416f8c$var$L_BASE)*$e1c6bbc8cb416f8c$var$V_COUNT+(i-$e1c6bbc8cb416f8c$var$V_BASE))*$e1c6bbc8cb416f8c$var$T_COUNT)}let c=a&&a.codePoints[0]||$e1c6bbc8cb416f8c$var$T_BASE;if(null!=n&&(c===$e1c6bbc8cb416f8c$var$T_BASE||$e1c6bbc8cb416f8c$var$isCombiningT(c))){let l=n+(c-$e1c6bbc8cb416f8c$var$T_BASE);if(A.hasGlyphForCodePoint(l)){let n=u===$e1c6bbc8cb416f8c$var$V?3:2;return e.splice(t-n+1,n,$e1c6bbc8cb416f8c$var$getGlyph(A,l,o.features)),t-n+1}}return l&&(l.features.ljmo=!0),r&&(r.features.vjmo=!0),a&&(a.features.tjmo=!0),u===$e1c6bbc8cb416f8c$var$LV?($e1c6bbc8cb416f8c$var$decompose(e,t-1,A),t+1):t}function $e1c6bbc8cb416f8c$var$getLength(e){switch($e1c6bbc8cb416f8c$var$getType(e)){case $e1c6bbc8cb416f8c$var$LV:case $e1c6bbc8cb416f8c$var$LVT:return 1;case $e1c6bbc8cb416f8c$var$V:return 2;case $e1c6bbc8cb416f8c$var$T:return 3}}function $e1c6bbc8cb416f8c$var$reorderToneMark(e,t,A){let n=e[t],l=e[t].codePoints[0];if(0===A.glyphForCodePoint(l).advanceWidth)return;let r=$e1c6bbc8cb416f8c$var$getLength(e[t-1].codePoints[0]);return e.splice(t,1),e.splice(t-r,0,n)}function $e1c6bbc8cb416f8c$var$insertDottedCircle(e,t,A){let n=e[t],l=e[t].codePoints[0];if(A.hasGlyphForCodePoint($e1c6bbc8cb416f8c$var$DOTTED_CIRCLE)){let r=$e1c6bbc8cb416f8c$var$getGlyph(A,$e1c6bbc8cb416f8c$var$DOTTED_CIRCLE,n.features),a=0===A.glyphForCodePoint(l).advanceWidth?t:t+1;e.splice(a,0,r),t++}return t}var $4b0735ca6c692ea5$exports={};$4b0735ca6c692ea5$exports=JSON.parse('{"stateTable":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,14,15,16,17],[0,0,0,18,19,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,28,29,30,31,32,33,0,34,0,0,35,36,0,0,37,0],[0,0,0,38,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,39,0,0,0,40,41,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,12,43,0,0,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,0,43,0,0,0,0],[0,0,0,45,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,50,0,0,51,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0],[0,0,0,53,54,55,56,57,58,0,59,0,0,60,61,0,0,62,0],[0,0,0,4,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,63,64,0,0,40,41,0,9,0,10,0,0,0,42,0,63,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,0,2,16,0],[0,0,0,18,65,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,0,0],[0,0,0,69,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,73,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,75,0,0,0,76,77,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,25,79,0,0,0,0],[0,0,0,18,19,20,74,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,81,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,86,0,0,87,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,88,0,0,0,0,0,0,0,0],[0,0,0,18,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,89,90,0,0,76,77,0,23,0,24,0,0,0,78,0,89,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,0,0],[0,0,0,94,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,96,0,0,0,97,98,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,35,100,0,0,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,102,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,107,0,0,108,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,109,0,0,0,0,0,0,0,0],[0,0,0,28,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,110,111,0,0,97,98,0,33,0,34,0,0,0,99,0,110,0,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,0,0],[0,0,0,0,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,0,0,115,116,117,118,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,39,0,122,0,123,123,8,9,0,10,0,0,0,42,0,39,0,0],[0,124,64,0,0,0,0,0,0,0,0,0,0,0,0,0,124,0,0],[0,39,0,0,0,121,125,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,126,126,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,47,47,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,128,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,129,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,50,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,134,0,0,0,0,0,0,0,0],[0,0,0,135,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,136,0,0,0,137,138,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,60,140,0,0,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,0,140,0,0,0,0],[0,0,0,142,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,147,0,0,148,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,149,0,0,0,0,0,0,0,0],[0,0,0,53,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,150,151,0,0,137,138,0,58,0,59,0,0,0,139,0,150,0,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,0,0],[0,0,0,155,116,156,157,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,75,3,4,5,159,160,8,161,0,162,0,11,12,163,0,75,16,0],[0,0,0,0,0,40,164,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,0,165,0,0,0,0],[0,124,64,0,0,40,164,0,9,0,10,0,0,0,42,0,124,0,0],[0,0,0,0,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,71,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,167,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,168,0,0,0,0,0,0,0,0],[0,0,0,0,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,0,79,0,0,0,0],[0,0,0,169,170,171,172,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,75,0,176,0,177,177,22,23,0,24,0,0,0,78,0,75,0,0],[0,178,90,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0],[0,75,0,0,0,175,179,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,180,180,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,83,83,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,182,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,183,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,86,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,188,0,0,0,0,0,0,0,0],[0,0,0,189,170,190,191,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,76,193,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,0,194,0,0,0,0],[0,178,90,0,0,76,193,0,23,0,24,0,0,0,78,0,178,0,0],[0,0,0,0,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,195,196,197,198,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,96,0,202,0,203,203,32,33,0,34,0,0,0,99,0,96,0,0],[0,204,111,0,0,0,0,0,0,0,0,0,0,0,0,0,204,0,0],[0,96,0,0,0,201,205,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,206,206,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,104,104,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,208,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,209,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,107,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,214,0,0,0,0,0,0,0,0],[0,0,0,215,196,216,217,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,97,219,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,0,220,0,0,0,0],[0,204,111,0,0,97,219,0,33,0,34,0,0,0,99,0,204,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,223,0,0,0,40,224,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,119,225,0,0,0,0],[0,0,0,115,116,117,222,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,115,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,226,64,0,0,40,224,0,9,0,10,0,0,0,42,0,226,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,39,0,0,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,44,44,8,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,227,0,228,229,0,9,0,10,0,0,230,0,0,0,0,0],[0,39,0,122,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,231,231,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,232,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,131,131,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,234,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,235,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,0,0,240,241,242,243,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,136,0,247,0,248,248,57,58,0,59,0,0,0,139,0,136,0,0],[0,249,151,0,0,0,0,0,0,0,0,0,0,0,0,0,249,0,0],[0,136,0,0,0,246,250,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,251,251,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,144,144,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,253,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,254,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,147,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,259,0,0,0,0,0,0,0,0],[0,0,0,260,241,261,262,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,137,264,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,0,265,0,0,0,0],[0,249,151,0,0,137,264,0,58,0,59,0,0,0,139,0,249,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,158,225,0,0,0,0],[0,0,0,155,116,156,222,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,155,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,43,266,266,8,161,0,24,0,0,12,267,0,0,0,0],[0,75,0,176,43,268,268,269,161,0,24,0,0,0,267,0,75,0,0],[0,0,0,0,0,270,0,0,271,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,272,0,0,0,0,0,0,0,0],[0,273,274,0,0,40,41,0,9,0,10,0,0,0,42,0,273,0,0],[0,0,0,40,0,123,123,8,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,121,275,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,276,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,279,0,0,0,76,280,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,173,281,0,0,0,0],[0,0,0,169,170,171,278,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,169,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,282,90,0,0,76,280,0,23,0,24,0,0,0,78,0,282,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,75,0,0,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,80,80,22,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,283,0,284,285,0,23,0,24,0,0,286,0,0,0,0,0],[0,75,0,176,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,287,287,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,288,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,185,185,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,290,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,291,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,192,281,0,0,0,0],[0,0,0,189,170,190,278,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,189,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,76,0,177,177,22,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,175,296,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,299,0,0,0,97,300,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,199,301,0,0,0,0],[0,0,0,195,196,197,298,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,195,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,302,111,0,0,97,300,0,33,0,34,0,0,0,99,0,302,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,96,0,0,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,101,101,32,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,303,0,304,305,0,33,0,34,0,0,306,0,0,0,0,0],[0,96,0,202,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,307,307,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,308,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,211,211,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,310,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,311,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,218,301,0,0,0,0],[0,0,0,215,196,216,298,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,215,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,97,0,203,203,32,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,201,316,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,0,225,0,0,0,0],[0,0,0,317,318,319,320,8,9,0,10,0,0,321,322,0,0,16,0],[0,223,0,323,0,123,123,8,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,0,0,121,324,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,325,318,326,327,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,64,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,230,0,0,0,0,0],[0,0,0,227,0,228,121,0,9,0,10,0,0,230,0,0,0,0,0],[0,0,0,227,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0],[0,0,0,0,0,329,329,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,330,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,237,237,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,332,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,333,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,337,0,0,0,137,338,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,244,339,0,0,0,0],[0,0,0,240,241,242,336,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,240,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,340,151,0,0,137,338,0,58,0,59,0,0,0,139,0,340,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,136,0,0,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,141,141,57,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,341,0,342,343,0,58,0,59,0,0,344,0,0,0,0,0],[0,136,0,247,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,345,345,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,346,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,256,256,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,348,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,349,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,263,339,0,0,0,0],[0,0,0,260,241,261,336,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,260,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,137,0,248,248,57,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,246,354,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,126,126,8,23,0,0,0,0,0,0,0,0,0,0],[0,355,90,0,0,121,125,0,9,0,10,0,0,0,42,0,355,0,0],[0,0,0,0,0,356,356,269,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,357,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,270,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,363,0,0,0,0,0,0,0,0],[0,0,0,364,116,365,366,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,40,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,0,281,0,0,0,0],[0,0,0,369,370,371,372,22,23,0,24,0,0,373,374,0,0,27,0],[0,279,0,375,0,177,177,22,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,0,0,175,376,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,377,370,378,379,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,90,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,286,0,0,0,0,0],[0,0,0,283,0,284,175,0,23,0,24,0,0,286,0,0,0,0,0],[0,0,0,283,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,0,0],[0,0,0,0,0,381,381,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,382,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,293,293,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,384,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,385,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,76,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,0,301,0,0,0,0],[0,0,0,387,388,389,390,32,33,0,34,0,0,391,392,0,0,37,0],[0,299,0,393,0,203,203,32,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,0,0,201,394,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,395,388,396,397,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,111,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,306,0,0,0,0,0],[0,0,0,303,0,304,201,0,33,0,34,0,0,306,0,0,0,0,0],[0,0,0,303,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,0,0],[0,0,0,0,0,399,399,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,400,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,313,313,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,402,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,403,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,97,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,407,0,0,0,40,408,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,321,409,0,0,0,0],[0,0,0,317,318,319,406,8,9,0,10,0,0,321,322,0,0,16,0],[0,0,0,317,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,410,64,0,0,40,408,0,9,0,10,0,0,0,42,0,410,0,0],[0,223,0,0,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,323,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,328,409,0,0,0,0],[0,0,0,325,318,326,406,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,325,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,0,0,0,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0],[0,0,0,0,0,411,411,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,412,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,413,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,0,339,0,0,0,0],[0,0,0,414,415,416,417,57,58,0,59,0,0,418,419,0,0,62,0],[0,337,0,420,0,248,248,57,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,0,0,246,421,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,422,415,423,424,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,151,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,344,0,0,0,0,0],[0,0,0,341,0,342,246,0,58,0,59,0,0,344,0,0,0,0,0],[0,0,0,341,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0],[0,0,0,0,0,426,426,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,427,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,351,351,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,429,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,430,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,137,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,432,116,433,434,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,0,0,180,180,269,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,359,359,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,437,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,438,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,443,274,0,0,0,0,0,0,0,0,0,0,0,0,0,443,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,367,225,0,0,0,0],[0,0,0,364,116,365,445,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,364,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,448,0,0,0,76,449,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,373,450,0,0,0,0],[0,0,0,369,370,371,447,22,23,0,24,0,0,373,374,0,0,27,0],[0,0,0,369,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,451,90,0,0,76,449,0,23,0,24,0,0,0,78,0,451,0,0],[0,279,0,0,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,375,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,380,450,0,0,0,0],[0,0,0,377,370,378,447,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,377,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,0,0,0,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,0,0],[0,0,0,0,0,452,452,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,453,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,454,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,457,0,0,0,97,458,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,391,459,0,0,0,0],[0,0,0,387,388,389,456,32,33,0,34,0,0,391,392,0,0,37,0],[0,0,0,387,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,460,111,0,0,97,458,0,33,0,34,0,0,0,99,0,460,0,0],[0,299,0,0,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,393,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,398,459,0,0,0,0],[0,0,0,395,388,396,456,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,395,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,0,0,0,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,0,0],[0,0,0,0,0,461,461,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,462,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,463,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,0,409,0,0,0,0],[0,0,0,464,465,466,467,8,9,0,10,0,0,468,469,0,0,16,0],[0,407,0,470,0,123,123,8,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,0,0,121,471,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,472,465,473,474,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,0,0,0,0,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,0,0],[0,0,0,0,0,0,476,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,479,0,0,0,137,480,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,418,481,0,0,0,0],[0,0,0,414,415,416,478,57,58,0,59,0,0,418,419,0,0,62,0],[0,0,0,414,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,482,151,0,0,137,480,0,58,0,59,0,0,0,139,0,482,0,0],[0,337,0,0,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,420,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,425,481,0,0,0,0],[0,0,0,422,415,423,478,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,422,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,0,0,0,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0],[0,0,0,0,0,483,483,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,484,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,485,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,435,225,0,0,0,0],[0,0,0,432,116,433,445,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,432,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,486,486,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,487,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,440,440,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,489,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,490,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,495,0,496,497,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,0,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,0,225,0,0,0,0],[0,0,0,0,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,0,450,0,0,0,0],[0,0,0,499,500,501,502,22,23,0,24,0,0,503,504,0,0,27,0],[0,448,0,505,0,177,177,22,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,0,0,175,506,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,507,500,508,509,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,0,0,0,0,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,292,0,0],[0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,0,459,0,0,0,0],[0,0,0,512,513,514,515,32,33,0,34,0,0,516,517,0,0,37,0],[0,457,0,518,0,203,203,32,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,0,0,201,519,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,520,513,521,522,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,0,0,0,0,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,312,0,0],[0,0,0,0,0,0,524,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,527,0,0,0,40,528,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,468,529,0,0,0,0],[0,0,0,464,465,466,526,8,9,0,10,0,0,468,469,0,0,16,0],[0,0,0,464,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,530,64,0,0,40,528,0,9,0,10,0,0,0,42,0,530,0,0],[0,407,0,0,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,470,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,475,529,0,0,0,0],[0,0,0,472,465,473,526,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,472,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0],[0,0,0,0,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,0,481,0,0,0,0],[0,0,0,531,532,533,534,57,58,0,59,0,0,535,536,0,0,62,0],[0,479,0,537,0,248,248,57,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,0,0,246,538,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,539,532,540,541,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,0,0,0,0,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,350,0,0],[0,0,0,0,0,0,543,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,358,0,0],[0,0,0,0,0,544,544,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,545,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,492,492,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,547,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,548,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,274,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,498,0,0,0,0,0],[0,0,0,495,0,496,368,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,495,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,553,0,0,0,76,554,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,503,555,0,0,0,0],[0,0,0,499,500,501,552,22,23,0,24,0,0,503,504,0,0,27,0],[0,0,0,499,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,556,90,0,0,76,554,0,23,0,24,0,0,0,78,0,556,0,0],[0,448,0,0,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,505,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,510,555,0,0,0,0],[0,0,0,507,500,508,552,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,507,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,559,0,0,0,97,560,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,516,561,0,0,0,0],[0,0,0,512,513,514,558,32,33,0,34,0,0,516,517,0,0,37,0],[0,0,0,512,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,562,111,0,0,97,560,0,33,0,34,0,0,0,99,0,562,0,0],[0,457,0,0,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,518,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,523,561,0,0,0,0],[0,0,0,520,513,521,558,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,520,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0],[0,0,0,0,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,0,529,0,0,0,0],[0,0,0,563,66,564,565,8,9,0,10,0,0,566,68,0,0,16,0],[0,527,0,567,0,123,123,8,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,0,0,121,568,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,569,66,570,571,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,575,0,0,0,137,576,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,535,577,0,0,0,0],[0,0,0,531,532,533,574,57,58,0,59,0,0,535,536,0,0,62,0],[0,0,0,531,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,578,151,0,0,137,576,0,58,0,59,0,0,0,139,0,578,0,0],[0,479,0,0,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,537,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,542,577,0,0,0,0],[0,0,0,539,532,540,574,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,539,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,137,0,0],[0,0,0,0,0,0,0,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,439,0,0],[0,0,0,0,0,579,579,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,580,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,581,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,0,555,0,0,0,0],[0,0,0,582,91,583,584,22,23,0,24,0,0,585,93,0,0,27,0],[0,553,0,586,0,177,177,22,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,0,0,175,587,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,588,91,589,590,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,0,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,0,561,0,0,0,0],[0,0,0,592,112,593,594,32,33,0,34,0,0,595,114,0,0,37,0],[0,559,0,596,0,203,203,32,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,0,0,201,597,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,598,112,599,600,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,566,165,0,0,0,0],[0,0,0,563,66,564,67,8,9,0,10,0,0,566,68,0,0,16,0],[0,0,0,563,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,527,0,0,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,567,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,572,165,0,0,0,0],[0,0,0,569,66,570,67,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,569,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,0,577,0,0,0,0],[0,0,0,603,152,604,605,57,58,0,59,0,0,606,154,0,0,62,0],[0,575,0,607,0,248,248,57,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,0,0,246,608,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,609,152,610,611,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,0,0,0,0,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,491,0,0],[0,0,0,0,0,0,613,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,585,194,0,0,0,0],[0,0,0,582,91,583,92,22,23,0,24,0,0,585,93,0,0,27,0],[0,0,0,582,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,553,0,0,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,586,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,591,194,0,0,0,0],[0,0,0,588,91,589,92,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,588,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,595,220,0,0,0,0],[0,0,0,592,112,593,113,32,33,0,34,0,0,595,114,0,0,37,0],[0,0,0,592,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,559,0,0,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,596,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,601,220,0,0,0,0],[0,0,0,598,112,599,113,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,598,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,606,265,0,0,0,0],[0,0,0,603,152,604,153,57,58,0,59,0,0,606,154,0,0,62,0],[0,0,0,603,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,575,0,0,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,607,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,612,265,0,0,0,0],[0,0,0,609,152,610,153,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,609,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,549,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0]],"accepting":[false,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,false,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,false,false,true,false,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,false,false,true,true,false,false,true,true,true,false,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,false,false,false,false,false,false,false,true,true,false,false,true,true,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,false,true,true,false,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,false,true,true,true,true,true,false,true,true,false,true,true,true],"tags":[[],["broken_cluster"],["consonant_syllable"],["vowel_syllable"],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["consonant_syllable"],["broken_cluster"],["symbol_cluster"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["broken_cluster"],["broken_cluster"],["consonant_syllable","broken_cluster"],["broken_cluster"],[],["broken_cluster"],["symbol_cluster"],[],["symbol_cluster"],["symbol_cluster"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],[],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["symbol_cluster"],["symbol_cluster"],["symbol_cluster"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],[],["consonant_syllable"],["consonant_syllable"],[],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],[],["vowel_syllable"],["vowel_syllable"],[],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],[],[],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["broken_cluster"],["symbol_cluster"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],[],[],["consonant_syllable"],["consonant_syllable"],[],[],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],[],[],["vowel_syllable"],["vowel_syllable"],[],[],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],[],[],["broken_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],[],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],[],[],["consonant_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],[],[],["vowel_syllable"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],[],[],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],[],["standalone_cluster"],[],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],[],[],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],[],[],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],[],[],[],[],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],[],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],["consonant_syllable"],["vowel_syllable"],["standalone_cluster"]]}');var $aa333a9607471296$exports={};$aa333a9607471296$exports=JSON.parse('{"categories":["O","IND","S","GB","B","FM","CGJ","VMAbv","VMPst","VAbv","VPst","CMBlw","VPre","VBlw","H","VMBlw","CMAbv","MBlw","CS","R","SUB","MPst","MPre","FAbv","FPst","FBlw","SMAbv","SMBlw","VMPre","ZWNJ","ZWJ","WJ","VS","N","HN","MAbv"],"decompositions":{"2507":[2503,2494],"2508":[2503,2519],"2888":[2887,2902],"2891":[2887,2878],"2892":[2887,2903],"3018":[3014,3006],"3019":[3015,3006],"3020":[3014,3031],"3144":[3142,3158],"3264":[3263,3285],"3271":[3270,3285],"3272":[3270,3286],"3274":[3270,3266],"3275":[3270,3266,3285],"3402":[3398,3390],"3403":[3399,3390],"3404":[3398,3415],"3546":[3545,3530],"3548":[3545,3535],"3549":[3545,3535,3530],"3550":[3545,3551],"3635":[3661,3634],"3763":[3789,3762],"3955":[3953,3954],"3957":[3953,3956],"3958":[4018,3968],"3959":[4018,3953,3968],"3960":[4019,3968],"3961":[4019,3953,3968],"3969":[3953,3968],"6971":[6970,6965],"6973":[6972,6965],"6976":[6974,6965],"6977":[6975,6965],"6979":[6978,6965],"69934":[69937,69927],"69935":[69938,69927],"70475":[70471,70462],"70476":[70471,70487],"70843":[70841,70842],"70844":[70841,70832],"70846":[70841,70845],"71098":[71096,71087],"71099":[71097,71087]},"stateTable":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[2,2,3,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,17,18,11,19,20,21,22,0,0,23,0,0,2,0,24,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,27,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,39,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,49,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,53,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0]],"accepting":[false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true],"tags":[[],["broken_cluster"],["independent_cluster"],["symbol_cluster"],["standard_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["numeral_cluster"],["broken_cluster"],["independent_cluster"],["symbol_cluster"],["symbol_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["virama_terminated_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["broken_cluster"],["broken_cluster"],["numeral_cluster"],["number_joiner_terminated_cluster"],["standard_cluster"],["standard_cluster"],["numeral_cluster"]]}');var $90a9d3398ee54fe5$export$a513ea61a7bee91c={X:1,C:2,V:4,N:8,H:16,ZWNJ:32,ZWJ:64,M:128,SM:256,VD:512,A:1024,Placeholder:2048,Dotted_Circle:4096,RS:8192,Coeng:16384,Repha:32768,Ra:65536,CM:131072,Symbol:262144},$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0={Start:1,Ra_To_Become_Reph:2,Pre_M:4,Pre_C:8,Base_C:16,After_Main:32,Above_C:64,Before_Sub:128,Below_C:256,After_Sub:512,Before_Post:1024,Post_C:2048,After_Post:4096,Final_C:8192,SMVD:16384,End:32768},$90a9d3398ee54fe5$export$8519deaa7de2b07=$90a9d3398ee54fe5$export$a513ea61a7bee91c.C|$90a9d3398ee54fe5$export$a513ea61a7bee91c.Ra|$90a9d3398ee54fe5$export$a513ea61a7bee91c.CM|$90a9d3398ee54fe5$export$a513ea61a7bee91c.V|$90a9d3398ee54fe5$export$a513ea61a7bee91c.Placeholder|$90a9d3398ee54fe5$export$a513ea61a7bee91c.Dotted_Circle,$90a9d3398ee54fe5$export$bbcd928767338e0d=$90a9d3398ee54fe5$export$a513ea61a7bee91c.ZWJ|$90a9d3398ee54fe5$export$a513ea61a7bee91c.ZWNJ,$90a9d3398ee54fe5$export$ca9599b2a300afc=$90a9d3398ee54fe5$export$a513ea61a7bee91c.H|$90a9d3398ee54fe5$export$a513ea61a7bee91c.Coeng,$90a9d3398ee54fe5$export$e99d119da76a0fc5={Default:{hasOldSpec:!1,virama:0,basePos:"Last",rephPos:$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Before_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Devanagari:{hasOldSpec:!0,virama:2381,basePos:"Last",rephPos:$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Before_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Bengali:{hasOldSpec:!0,virama:2509,basePos:"Last",rephPos:$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Sub,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Gurmukhi:{hasOldSpec:!0,virama:2637,basePos:"Last",rephPos:$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Before_Sub,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Gujarati:{hasOldSpec:!0,virama:2765,basePos:"Last",rephPos:$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Before_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Oriya:{hasOldSpec:!0,virama:2893,basePos:"Last",rephPos:$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Main,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Tamil:{hasOldSpec:!0,virama:3021,basePos:"Last",rephPos:$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Telugu:{hasOldSpec:!0,virama:3149,basePos:"Last",rephPos:$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Post,rephMode:"Explicit",blwfMode:"Post_Only"},Kannada:{hasOldSpec:!0,virama:3277,basePos:"Last",rephPos:$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Post,rephMode:"Implicit",blwfMode:"Post_Only"},Malayalam:{hasOldSpec:!0,virama:3405,basePos:"Last",rephPos:$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Main,rephMode:"Log_Repha",blwfMode:"Pre_And_Post"},Khmer:{hasOldSpec:!1,virama:6098,basePos:"First",rephPos:$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Ra_To_Become_Reph,rephMode:"Vis_Repha",blwfMode:"Pre_And_Post"}},$90a9d3398ee54fe5$export$f647c9cfdd77d95a={6078:[6081,6078],6079:[6081,6079],6080:[6081,6080],6084:[6081,6084],6085:[6081,6085]},{decompositions:$7826f90f6f0cecc9$var$decompositions}=$parcel$interopDefault2($aa333a9607471296$exports),$7826f90f6f0cecc9$var$trie=new(0,import_unicode_trie2.default)($12727730ddfc8bfe$export$94fdf11bafc8de6b("AAARAAAAAACgwgAAAbENTvLtnX+sHUUVx/f13nd/vHf7bl+FRGL7R0OJMcWYphBrimkVCSJR2xiEaLEGQ7AkBGowbYRSgj8K2B/GkpRYE6wlQSyJKCagrSlGkmqsqUZMY7S2CWkgqQViQSkt4Hfuzrx77tyZ2fm1u+/RPcknuzs7O3PmnDOzs7N73zteS5KXwKvgDTCnniTvBfPBJeAVpP2vFr69GGUtAkvAModyr0DeT4BrwCpwPVgDbga3ga+DjYbyluLcCvBN8F2wGWwHO8Ej4DjyPIbtz0DCeZpvD4CD4E/gb+AoOAFOgtPgLKiNJkkbTIKLwALwfvAh8GGwHFwFPg2uAzeCm8Ft4E5wN7gPPAi+D34AfgR+Ap7kx8+AZ8HvwZ/BEXAMvAheAa+Bc6OpzvVGknTABY30eB62C8GlYDFYCpaDq/n5z2J7PVgDbgG3N1KbrOdbWzby/N/G9i6wlR8/wLebUNcOll7vX7PLsQ4bdpAy92B/L3gK7AO/A38EfwX/AC+AkyT/m3x7mqdtYz7Gfq2ZJOPgPc3UXu/D9uJmmmcRT1uC7TJwZTONJxFL1+J4JbgBrAG3gNv5Nev5dhO2m3l54rqtON7RNLd1V8Z5auMfI+8Wbvv12P4Ux78AvyZl/Bb7fwD34HwH/EVR/t8t6rRlrYgFlHnMsdyXIupRFP+Gzv8Bb4CklSSjrTR9bz21uZx/Nj8v+uIFOJ4HFnJo3kWtNG6WkPSzBl1YbC8jeVfx+q+R9Pg48lxN8jFdhd8+01LrLTCdq6io8GNb1a8qKioqKioqKioc2cbXGcrWQ2Ynf9a9rmV/zVua9Dc16V/gz8pfxvar4A6wAdwL7gdbwUPgh+BR8AR4qpWuLe3D9gA4CA6DI+AoOAFOtdL1nNexfYs937fxDA8ubKf1zmv3dViI/Uvb9m2sqKioqAiHrVtehrH3TK2/3l4WZduioqIiDq+Rd1Jbef9ehnHmSnCtNNf7nOPcr8PHilO8jrfBF9v996lfwf6tUpl3tPvvdSjsvcwGnLt3Gsw/kzkpK8CdYH83my3Id0iT91WkL5xMktXgIfD85OD54zjfmYu5OFgN7h1LkmdBMg5fgbvAChzv49ujfEuZ3xlOk7kReTaSfL/B/jl+fMXsJLkb7AcPj8TlHC/zsgnYcyLd3zSh1vGAJr2ioqKiIn/eKXkMjn3/cWF5t/z6y37+K5urwP2YB36vPfw8yr7zeRjpu8g8cTf2H2+n89EtivLE93fs27Ez/Br2vM2+qWPl/ZyX9StFfQxW5v724PPxzXz7XHu4Pps5Jvtmiq13szmzfP0hlHkYHGn358bHeD0vYvsy+K+kz9vt/jy8gT40G1w4Rua0PN98nnaGf/e1G+mXIO2DY8P6Xz7WPz7Ky/7omJ0PBff4+B91fAqsAp8HXwI3gR04txbbdWDDWDpP/g7Yxs6BXWAP2AueJHo+M5bOpw+Cw+AIOApOgFMW7Xkdec6AkXH1+QfgyzbOTY73jy/C/gJ+/CCOP4D9xfz4I9h+TFMWtf9SRWzZwq7f0yi/L9voWSRbDfV/clx/3TuKfjoT26/iX813URx4tiVG3ay/sfFuJenb7J50A4mr1di/CZzLKZ6y2reunup4qzT+fM0wHp0PUD9+A7bYNJ5fn3eNP/Ft5bc0+S4n9/l1Gj+K82zesd1wfj3fZ79h2YyyVvLj7djfCR4xjJEyuy1+S/FyDt/MPwodn5hB8axrxy9nSBtYjOyHrs+BQ+B58E+u+wsWbWBtpb/hYL8RuA/pJ8fT2GffX+wl+daSa08jz9nxNG2k4963XBG/ZVhpUS573mh3BtPo7x/Eb7pE2yd5XvZssY/M/RZLc9SLeDsfD5gfTidi9//pwrzWu7t9lKcN7dxynthAh8vcKrQu1frHTGKBNF662KfoOXU1FsaFxe6x2kjClkBnGvXxwX0bytZ5unK+S9n2jxabTc5M0HUaIyTrfFa+Ljmflc9Xz7JtNdPa4eKz6WAPlb5l6xfLBzopWxcfncvSf7rHRJk2KSN2bKRsvcu2UZmxVIb9qd551e8rZcTERGuQ+qwIjERkjl2+djOlhWfpibnp/qxmP92FVr1/bc9GYxxuI5o3UzdukzYpj+H6nOxra9nHiaksjhDdsasPe9ca/CvOU1GVwUT4t8P921H4T8gsnkdIh+dn/pXrU0mnOZw21CbJv1P5LP0r4jtkbLH171BbCvavnFfeZ8L8K2wv/CuQRU6n/qWSNSbr2mO8xtK/U+Mq6Y/1yQyFJHHtv8Kn2uOC/Gvbf2VEPxJ9SvhY5d+Q+y21iRxLruOzsY6MWGrOkPHZ1b+jFuPzqEX/VcmoZkyIPT53k36/DZnrMd+K/Dbjs6kv6+6VYl9OU+WT07TplvMvWWhfVo3f4t48S+rbjIZl/1b5Xyd5vJdQiTyf7tUdMlbn0J9d/cn6c7M5DO1TNF0+bmT0Z3qdKaaoXeg1Lv7NEhufzyT/6vIKEeO1jX/psdi38a889qpkStcI/u12U3zE1Re+/Yv6QNwvdTDJGi9t2ps1XtKYDJ0PmcZKcU812sRxvms7J47mZ5c+SWJD5LPRg4qqj+nWL8Q5sRVrGar1EG0sOI6ndH3DVWL7wpeuwaY6O1Nh19N+Oqs5uI7Eto3aICxNrCn5rAuZ7Cn2bdJtfZPlL/k8Ld+ki6v9E56XPUvT52mV/YVvmMj2Zz8TEuNMTxfHuFfFUJ60OLrz1utODnFG47fLbSjXy0xSy4gN63EywlhMxWcNmK71svszi5OGTvdJe3rtd8ifB6I/mKBr1ap7uU/sqqTsMb+H5fxBFyuq+yqLnd7cmj33TwyOVVOwuj3nVXRtQtUGWR9jzI6kecZrKSKPuFakU2hZmXXZMDlsS1W9jBavv6eHpf3EtfJ7mKwYV0lX2g9FVY5N+Ung9aH1590+n3KLgEredfiez6u9svisY/Suk9Jsnkli1a+C1m/T7rzqd5UY9mfiXX9R92ibdZUIawTC96b1GBn6rDG1JsPv/b392SkiXVUGmyN0LO5LYi46Zf/Adc/QMaCo8TtG/bH1Z/TsW1QfUPRjm2cZee5PRaT33lEbnhlMax4qe1o/Y8a0icdaoOv9bsh+Hj6jonueoGtHumcMlX9lxLxXq7/D84fSzznGt6rtUerXxYU47/IcPeG3vqBbJ1StETZqg9fS2Akd/0Ovp+/CxD3P+/6bQwzJtsvyh5w+XjeXH9KfXGH3/VbSX4tS4XoftPZbnvcyxX1G5QvW1wbWTkbs7c3mTco6NWODbdxk3R9lGZo/aGxhiknTmETXLVs1c90u9+mBGCf6hs6fsmTq29sxPv8d82CuhCpNjGNjg31blGHrz1i41hd6nuYzbU3XhLQzj7Jt67Otw0uXUdDoH8e4F/joMdVui2dMJc3E+Tetvr6jEtPnPhJaVwz9Y7TDVlx1qnfitlEbtzlTVD0qX/pcm1esxI65PO3mU4eNrr5SZMz46FDE+aIlb5tntb1o/WOUETsW847pvNpaZH225eUpNnrS9yDy9wTysyr9XVOe63+qd3M6e4X6Ptd1Dpc1SdV53ZqFag1hpP+bE5f4ivY74BzXilzWWW1+S0TjJng91Gd9wmbNgpMVz6W8d7GJZwWtWp8p++c8fpjW0Vzff3dJfzGuoersEtnmpjVLupY48H6o7n8/C+kvJn+Lcd6q3QHx3usvZax3W8apvP6rev+UJSHfiCYe/h2aTwTaRi5DO28ZSd9zNhTfJ8b2je7drOo9HtNNbPMW03zOpq2qNqnKFN+0huhlMye2Pe9TdzfCedfxMlRfG7xjncaJ7fiXMYZk3X+ZvuKbXCGh8y8XH8TybajPTfq4tjG2/qb0RJO3SB19ba2SMuoNbW8R/g653qa9sdsRYsssu+ZxPss+tnayFd94yjofEi+hZdvo73q9jd3yisUYbfEpQ9XmMqUIm2fFZh4xkZeE1BNDL5v+ZcqXh/90bSwjflz8U0QcFWHzPOpy0amM+stqf1ad7LltVPqWmG3p3+GiIvLJf8duYA3NcBwbWRpkDXmo7RP+z5E6+8Xswz512dbrW2aMNrpKaBt9y45VR2j9efhAQL/PF38Xadq907NYC5dpZLy3kMX6PUHgeGGS3nfoPn9rObJ9s/4uMntnSt/J5TX+2ZRhtFcB8ZgVmyZbit8GCd/7/C7EOcYK7LdyjNhIlL81nqN/Xf9mOHt/anovP4X0tyem/OUZF9TmscY2nzEulq96ZeVwv2Bxxnwk3s9njT8m/YWOKl199fe53tTXyu5DLojfKWXej6R3RAPtDf1ex/PvtdJ8Q7aP7Ht6XpdXSJf8/wMdQuS/j0/HtKny9KbT+oT2K2ETuW7Tt09Uss5nCdWhjPuMTXzrztO4FHMy+V6TJaH9I6+2C5HPq9oc8xlKRva5rF8M/7tC26/6BsNFivQ//e1pVsyP19VrNrH1D5Wi7oUDdVp8Q5HVr1ztlzXPtH2Gc30+lMX3edH3ecm3fp0+Ps/IPvWH6OpiV7meEMlbzyIkpi1jtDU0Pmm6nMd0jU8bXK7N0jWkb/joHyNebfWgtrJpc0h7QiQP24aKqcwYPnTRIUmG63fRQ5VXLsekgy5NtVXVadLfpjzV9S6xYnuNri159ZmsmLCpJ8/6XSRGOaH659H+GLYtwhd51xvq31B9Qm0UavM84qhoKaNOnfwf")),$7826f90f6f0cecc9$var$stateMachine=new(0,import_dfa.default)($parcel$interopDefault2($4b0735ca6c692ea5$exports)),$7826f90f6f0cecc9$export$2e2bcd8739ae039=class extends $649970d87335b30f$export$2e2bcd8739ae039{static planFeatures(e){e.addStage($7826f90f6f0cecc9$var$setupSyllables),e.addStage(["locl","ccmp"]),e.addStage($7826f90f6f0cecc9$var$initialReordering),e.addStage("nukt"),e.addStage("akhn"),e.addStage("rphf",!1),e.addStage("rkrf"),e.addStage("pref",!1),e.addStage("blwf",!1),e.addStage("abvf",!1),e.addStage("half",!1),e.addStage("pstf",!1),e.addStage("vatu"),e.addStage("cjct"),e.addStage("cfar",!1),e.addStage($7826f90f6f0cecc9$var$finalReordering),e.addStage({local:["init"],global:["pres","abvs","blws","psts","haln","dist","abvm","blwm","calt","clig"]}),e.unicodeScript=$130d1a642ebcd2b7$export$ce50e82f12a827a4(e.script),e.indicConfig=$90a9d3398ee54fe5$export$e99d119da76a0fc5[e.unicodeScript]||$90a9d3398ee54fe5$export$e99d119da76a0fc5.Default,e.isOldSpec=e.indicConfig.hasOldSpec&&"2"!==e.script[e.script.length-1]}static assignFeatures(e,t){for(let A=t.length-1;A>=0;A--){let n=t[A].codePoints[0],l=$90a9d3398ee54fe5$export$f647c9cfdd77d95a[n]||$7826f90f6f0cecc9$var$decompositions[n];if(l){let n=l.map((n=>{let l=e.font.glyphForCodePoint(n);return new $10e7b257e1a9a756$export$2e2bcd8739ae039(e.font,l.id,[n],t[A].features)}));t.splice(A,1,...n)}}}};function $7826f90f6f0cecc9$var$indicCategory(e){return $7826f90f6f0cecc9$var$trie.get(e.codePoints[0])>>8}function $7826f90f6f0cecc9$var$indicPosition(e){return 1<<(255&$7826f90f6f0cecc9$var$trie.get(e.codePoints[0]))}_define_property($7826f90f6f0cecc9$export$2e2bcd8739ae039,"zeroMarkWidths","NONE");var $7826f90f6f0cecc9$var$IndicInfo=class{constructor(e,t,A,n){this.category=e,this.position=t,this.syllableType=A,this.syllable=n}};function $7826f90f6f0cecc9$var$setupSyllables(e,t){let A=0,n=0;for(let[e,l,r]of $7826f90f6f0cecc9$var$stateMachine.match(t.map($7826f90f6f0cecc9$var$indicCategory))){if(e>n){++A;for(let l=n;l<e;l++)t[l].shaperInfo=new $7826f90f6f0cecc9$var$IndicInfo($90a9d3398ee54fe5$export$a513ea61a7bee91c.X,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.End,"non_indic_cluster",A)}++A;for(let n=e;n<=l;n++)t[n].shaperInfo=new $7826f90f6f0cecc9$var$IndicInfo(1<<$7826f90f6f0cecc9$var$indicCategory(t[n]),$7826f90f6f0cecc9$var$indicPosition(t[n]),r[0],A);n=l+1}if(n<t.length){++A;for(let e=n;e<t.length;e++)t[e].shaperInfo=new $7826f90f6f0cecc9$var$IndicInfo($90a9d3398ee54fe5$export$a513ea61a7bee91c.X,$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.End,"non_indic_cluster",A)}}function $7826f90f6f0cecc9$var$isConsonant(e){return e.shaperInfo.category&$90a9d3398ee54fe5$export$8519deaa7de2b07}function $7826f90f6f0cecc9$var$isJoiner(e){return e.shaperInfo.category&$90a9d3398ee54fe5$export$bbcd928767338e0d}function $7826f90f6f0cecc9$var$isHalantOrCoeng(e){return e.shaperInfo.category&$90a9d3398ee54fe5$export$ca9599b2a300afc}function $7826f90f6f0cecc9$var$wouldSubstitute(e,t){for(let A of e)A.features={[t]:!0};return e[0]._font._layoutEngine.engine.GSUBProcessor.applyFeatures([t],e),1===e.length}function $7826f90f6f0cecc9$var$consonantPosition(e,t,A){let n=[A,t,A];return $7826f90f6f0cecc9$var$wouldSubstitute(n.slice(0,2),"blwf")||$7826f90f6f0cecc9$var$wouldSubstitute(n.slice(1,3),"blwf")?$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Below_C:$7826f90f6f0cecc9$var$wouldSubstitute(n.slice(0,2),"pstf")||$7826f90f6f0cecc9$var$wouldSubstitute(n.slice(1,3),"pstf")||$7826f90f6f0cecc9$var$wouldSubstitute(n.slice(0,2),"pref")||$7826f90f6f0cecc9$var$wouldSubstitute(n.slice(1,3),"pref")?$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Post_C:$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Base_C}function $7826f90f6f0cecc9$var$initialReordering(e,t,A){let n=A.indicConfig,l=e._layoutEngine.engine.GSUBProcessor.features,r=e.glyphForCodePoint(9676).id,a=e.glyphForCodePoint(n.virama).id;if(a){let A=new $10e7b257e1a9a756$export$2e2bcd8739ae039(e,a,[n.virama]);for(let n=0;n<t.length;n++)t[n].shaperInfo.position===$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Base_C&&(t[n].shaperInfo.position=$7826f90f6f0cecc9$var$consonantPosition(e,t[n].copy(),A))}for(let a=0,o=$7826f90f6f0cecc9$var$nextSyllable(t,0);a<t.length;a=o,o=$7826f90f6f0cecc9$var$nextSyllable(t,a)){let{category:s,syllableType:i}=t[a].shaperInfo;if("symbol_cluster"===i||"non_indic_cluster"===i)continue;if("broken_cluster"===i&&r){let A=new $10e7b257e1a9a756$export$2e2bcd8739ae039(e,r,[9676]);A.shaperInfo=new $7826f90f6f0cecc9$var$IndicInfo(1<<$7826f90f6f0cecc9$var$indicCategory(A),$7826f90f6f0cecc9$var$indicPosition(A),t[a].shaperInfo.syllableType,t[a].shaperInfo.syllable);let n=a;for(;n<o&&t[n].shaperInfo.category===$90a9d3398ee54fe5$export$a513ea61a7bee91c.Repha;)n++;t.splice(n++,0,A),o++}let u=o,c=a,h=!1;if(n.rephPos!==$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Ra_To_Become_Reph&&l.rphf&&a+3<=o&&("Implicit"===n.rephMode&&!$7826f90f6f0cecc9$var$isJoiner(t[a+2])||"Explicit"===n.rephMode&&t[a+2].shaperInfo.category===$90a9d3398ee54fe5$export$a513ea61a7bee91c.ZWJ)){let e=[t[a].copy(),t[a+1].copy(),t[a+2].copy()];if($7826f90f6f0cecc9$var$wouldSubstitute(e.slice(0,2),"rphf")||"Explicit"===n.rephMode&&$7826f90f6f0cecc9$var$wouldSubstitute(e,"rphf")){for(c+=2;c<o&&$7826f90f6f0cecc9$var$isJoiner(t[c]);)c++;u=a,h=!0}}else if("Log_Repha"===n.rephMode&&t[a].shaperInfo.category===$90a9d3398ee54fe5$export$a513ea61a7bee91c.Repha){for(c++;c<o&&$7826f90f6f0cecc9$var$isJoiner(t[c]);)c++;u=a,h=!0}switch(n.basePos){case"Last":{let e=o,A=!1;do{let n=t[--e].shaperInfo;if($7826f90f6f0cecc9$var$isConsonant(t[e])){if(n.position!==$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Below_C&&(n.position!==$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Post_C||A)){u=e;break}n.position===$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Below_C&&(A=!0),u=e}else if(a<e&&n.category===$90a9d3398ee54fe5$export$a513ea61a7bee91c.ZWJ&&t[e-1].shaperInfo.category===$90a9d3398ee54fe5$export$a513ea61a7bee91c.H)break}while(e>c);break}case"First":u=a;for(let e=u+1;e<o;e++)$7826f90f6f0cecc9$var$isConsonant(t[e])&&(t[e].shaperInfo.position=$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Below_C)}h&&u===a&&c-u<=2&&(h=!1);for(let e=a;e<u;e++){let A=t[e].shaperInfo;A.position=Math.min($90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Pre_C,A.position)}u<o&&(t[u].shaperInfo.position=$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Base_C);for(let e=u+1;e<o;e++)if(t[e].shaperInfo.category===$90a9d3398ee54fe5$export$a513ea61a7bee91c.M){for(let A=e+1;A<o;A++)if($7826f90f6f0cecc9$var$isConsonant(t[A])){t[A].shaperInfo.position=$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Final_C;break}break}if(h&&(t[a].shaperInfo.position=$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Ra_To_Become_Reph),A.isOldSpec){let e="Malayalam"!==A.unicodeScript;for(let A=u+1;A<o;A++)if(t[A].shaperInfo.category===$90a9d3398ee54fe5$export$a513ea61a7bee91c.H){let n;for(n=o-1;n>A&&!($7826f90f6f0cecc9$var$isConsonant(t[n])||e&&t[n].shaperInfo.category===$90a9d3398ee54fe5$export$a513ea61a7bee91c.H);n--);if(t[n].shaperInfo.category!==$90a9d3398ee54fe5$export$a513ea61a7bee91c.H&&n>A){let e=t[A];t.splice(A,0,...t.splice(A+1,n-A)),t[n]=e}break}}let f=$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Start;for(let e=a;e<o;e++){let A=t[e].shaperInfo;if(A.category&($90a9d3398ee54fe5$export$bbcd928767338e0d|$90a9d3398ee54fe5$export$a513ea61a7bee91c.N|$90a9d3398ee54fe5$export$a513ea61a7bee91c.RS|$90a9d3398ee54fe5$export$a513ea61a7bee91c.CM|$90a9d3398ee54fe5$export$ca9599b2a300afc&A.category)){if(A.position=f,A.category===$90a9d3398ee54fe5$export$a513ea61a7bee91c.H&&A.position===$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Pre_M)for(let n=e;n>a;n--)if(t[n-1].shaperInfo.position!==$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Pre_M){A.position=t[n-1].shaperInfo.position;break}}else A.position!==$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.SMVD&&(f=A.position)}let g=u;for(let e=u+1;e<o;e++)if($7826f90f6f0cecc9$var$isConsonant(t[e])){for(let A=g+1;A<e;A++)t[A].shaperInfo.position<$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.SMVD&&(t[A].shaperInfo.position=t[e].shaperInfo.position);g=e}else t[e].shaperInfo.category===$90a9d3398ee54fe5$export$a513ea61a7bee91c.M&&(g=e);let d=t.slice(a,o);d.sort(((e,t)=>e.shaperInfo.position-t.shaperInfo.position)),t.splice(a,d.length,...d);for(let e=a;e<o;e++)if(t[e].shaperInfo.position===$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Base_C){u=e;break}for(let e=a;e<o&&t[e].shaperInfo.position===$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Ra_To_Become_Reph;e++)t[e].features.rphf=!0;let p=!A.isOldSpec&&"Pre_And_Post"===n.blwfMode;for(let e=a;e<u;e++)t[e].features.half=!0,p&&(t[e].features.blwf=!0);for(let e=u+1;e<o;e++)t[e].features.abvf=!0,t[e].features.pstf=!0,t[e].features.blwf=!0;if(A.isOldSpec&&"Devanagari"===A.unicodeScript)for(let e=a;e+1<u;e++)t[e].shaperInfo.category!==$90a9d3398ee54fe5$export$a513ea61a7bee91c.Ra||t[e+1].shaperInfo.category!==$90a9d3398ee54fe5$export$a513ea61a7bee91c.H||e+1!==u&&t[e+2].shaperInfo.category!==$90a9d3398ee54fe5$export$a513ea61a7bee91c.ZWJ||(t[e].features.blwf=!0,t[e+1].features.blwf=!0);let B=2;if(l.pref&&u+B<o)for(let e=u+1;e+B-1<o;e++){if($7826f90f6f0cecc9$var$wouldSubstitute([t[e].copy(),t[e+1].copy()],"pref")){for(let A=0;A<B;A++)t[e++].features.pref=!0;if(l.cfar)for(;e<o;e++)t[e].features.cfar=!0;break}}for(let e=a+1;e<o;e++)if($7826f90f6f0cecc9$var$isJoiner(t[e])){let A=t[e].shaperInfo.category===$90a9d3398ee54fe5$export$a513ea61a7bee91c.ZWNJ,n=e;do{n--,A&&delete t[n].features.half}while(n>a&&!$7826f90f6f0cecc9$var$isConsonant(t[n]))}}}function $7826f90f6f0cecc9$var$finalReordering(e,t,A){let n=A.indicConfig,l=e._layoutEngine.engine.GSUBProcessor.features;for(let e=0,r=$7826f90f6f0cecc9$var$nextSyllable(t,0);e<t.length;e=r,r=$7826f90f6f0cecc9$var$nextSyllable(t,e)){let a=!!l.pref,o=e;for(;o<r;o++)if(t[o].shaperInfo.position>=$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Base_C){if(a&&o+1<r)for(let e=o+1;e<r;e++)if(t[e].features.pref){if(!t[e].substituted||!t[e].isLigated||t[e].isMultiplied){for(o=e;o<r&&$7826f90f6f0cecc9$var$isHalantOrCoeng(t[o]);)o++;t[o].shaperInfo.position=$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.BASE_C,a=!1}break}if("Malayalam"===A.unicodeScript)for(let e=o+1;e<r;e++){for(;e<r&&$7826f90f6f0cecc9$var$isJoiner(t[e]);)e++;if(e===r||!$7826f90f6f0cecc9$var$isHalantOrCoeng(t[e]))break;for(e++;e<r&&$7826f90f6f0cecc9$var$isJoiner(t[e]);)e++;e<r&&$7826f90f6f0cecc9$var$isConsonant(t[e])&&t[e].shaperInfo.position===$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Below_C&&(o=e,t[o].shaperInfo.position=$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Base_C)}e<o&&t[o].shaperInfo.position>$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Base_C&&o--;break}if(o===r&&e<o&&t[o-1].shaperInfo.category===$90a9d3398ee54fe5$export$a513ea61a7bee91c.ZWJ&&o--,o<r)for(;e<o&&t[o].shaperInfo.category&($90a9d3398ee54fe5$export$a513ea61a7bee91c.N|$90a9d3398ee54fe5$export$ca9599b2a300afc);)o--;if(e+1<r&&e<o){let n=o===r?o-2:o-1;if("Malayalam"!==A.unicodeScript&&"Tamil"!==A.unicodeScript){for(;n>e&&!(t[n].shaperInfo.category&($90a9d3398ee54fe5$export$a513ea61a7bee91c.M|$90a9d3398ee54fe5$export$ca9599b2a300afc));)n--;$7826f90f6f0cecc9$var$isHalantOrCoeng(t[n])&&t[n].shaperInfo.position!==$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Pre_M?n+1<r&&$7826f90f6f0cecc9$var$isJoiner(t[n+1])&&n++:n=e}if(e<n&&t[n].shaperInfo.position!==$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Pre_M)for(let A=n;A>e;A--)if(t[A-1].shaperInfo.position===$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Pre_M){let e=A-1;e<o&&o<=n&&o--;let l=t[e];t.splice(e,0,...t.splice(e+1,n-e)),t[n]=l,n--}}if(e+1<r&&t[e].shaperInfo.position===$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Ra_To_Become_Reph&&t[e].shaperInfo.category===$90a9d3398ee54fe5$export$a513ea61a7bee91c.Repha!==(t[e].isLigated&&!t[e].isMultiplied)){let A,l=n.rephPos,a=!1;if(l!==$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Post){for(A=e+1;A<o&&!$7826f90f6f0cecc9$var$isHalantOrCoeng(t[A]);)A++;if(A<o&&$7826f90f6f0cecc9$var$isHalantOrCoeng(t[A])&&(A+1<o&&$7826f90f6f0cecc9$var$isJoiner(t[A+1])&&A++,a=!0),!a&&l===$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Main){for(A=o;A+1<r&&t[A+1].shaperInfo.position<=$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Main;)A++;a=A<r}if(!a&&l===$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Sub){for(A=o;A+1<r&&!(t[A+1].shaperInfo.position&($90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Post_C|$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Post|$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.SMVD));)A++;a=A<r}}if(!a){for(A=e+1;A<o&&!$7826f90f6f0cecc9$var$isHalantOrCoeng(t[A]);)A++;A<o&&$7826f90f6f0cecc9$var$isHalantOrCoeng(t[A])&&(A+1<o&&$7826f90f6f0cecc9$var$isJoiner(t[A+1])&&A++,a=!0)}if(!a){for(A=r-1;A>e&&t[A].shaperInfo.position===$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.SMVD;)A--;if($7826f90f6f0cecc9$var$isHalantOrCoeng(t[A]))for(let e=o+1;e<A;e++)t[e].shaperInfo.category===$90a9d3398ee54fe5$export$a513ea61a7bee91c.M&&A--}let s=t[e];t.splice(e,0,...t.splice(e+1,A-e)),t[A]=s,e<o&&o<=A&&o--}if(a&&o+1<r)for(let n=o+1;n<r;n++)if(t[n].features.pref){if(t[n].isLigated&&!t[n].isMultiplied){let l=o;if("Malayalam"!==A.unicodeScript&&"Tamil"!==A.unicodeScript){for(;l>e&&!(t[l-1].shaperInfo.category&($90a9d3398ee54fe5$export$a513ea61a7bee91c.M|$90a9d3398ee54fe5$export$ca9599b2a300afc));)l--;if(l>e&&t[l-1].shaperInfo.category===$90a9d3398ee54fe5$export$a513ea61a7bee91c.M){let e=n;for(let A=o+1;A<e;A++)if(t[A].shaperInfo.category===$90a9d3398ee54fe5$export$a513ea61a7bee91c.M){l--;break}}}l>e&&$7826f90f6f0cecc9$var$isHalantOrCoeng(t[l-1])&&l<r&&$7826f90f6f0cecc9$var$isJoiner(t[l])&&l++;let a=n,s=t[a];t.splice(l+1,0,...t.splice(l,a-l)),t[l]=s,l<=o&&o<a&&o++}break}t[e].shaperInfo.position!==$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Pre_M||e&&/Cf|Mn/.test($747425b437e121da$export$410364bbb673ddbc(t[e-1].codePoints[0]))||(t[e].features.init=!0)}}function $7826f90f6f0cecc9$var$nextSyllable(e,t){if(t>=e.length)return t;let A=e[t].shaperInfo.syllable;for(;++t<e.length&&e[t].shaperInfo.syllable===A;);return t}var{categories:$7ab494fe977143c6$var$categories,decompositions:$7ab494fe977143c6$var$decompositions}=$parcel$interopDefault2($aa333a9607471296$exports),$7ab494fe977143c6$var$trie=new(0,import_unicode_trie2.default)($12727730ddfc8bfe$export$94fdf11bafc8de6b("AAACAAAAAADQqQAAAVEMrvPtnH+oHUcVx+fd99799W5e8mx+9NkYm7YUI2KtimkVDG3FWgVTFY1Fqa2VJirYB0IaUFLBaKGJViXir6oxKCSBoi0UTKtg2yA26h+milYNtMH+0WK1VQyvtBS/487hnncyMzuzu7N7n7kHPszu7OzMmTNzdmdmfzzfUmpiUqkemAMbwSZwKbjcxM1XEL4VvB28G3zAk+56cLMlfgdYADvBbvBF8GWwH9xl+CFLfwj8BPwU/MKS38/AMfA86v9ro9ucQcdR+CjCP4CT4EnwDPg3eAFMTik1A+bAPNgINoFLwGawZSpLfzXCrWAb+AjYDm4BO8FusAfsA/vBXeAgOALuNfv3g4fAcXACPAaeAE+B58Bp8NJUpnN7WqlZsHY629+A8GLwWvAG8BZwJXinOf5ehB8EN4AdYGE6q7dmF9uugs8hvz0V58nZK/L+Kva/BX4ADoN7prP6HgUPgkfA73L0eQzHnwBPgX+Y80+DF8FUW6lBO4tbjXA9uAi8pj3sS2/E9mawBVwNtoJt5pzrTXgzwk+B7awP7sT+7nY6WxFfQBlfAl8H3wU/Anezcu/D9s/BMRN3HOEJ8EdwMkC/J5HmmXZmq2fBIjgEVEepbieLX4Fw0MnSrzRxmrVsm7MB8ReDV4vjr3ekJy7rZGVPMb196Xm6oug83oRyt4CrwDVgK9gGPtzxn3uTOD6YPDPNJ5Hm0+AznazffJ7Z4KSnXncg3VfAN8EBhx42/z/UGdbrx52sr9yH8AFTrt5+2GzfnWPbKuw7ZszZyNh/xowZM2bMmDFjxsQyZ5lPNs3h9nBNYHuAfr9ic9ffiHnsJzznU91/j3P+2snWYf6G8O/gn+A0eMnEt7vQp5ulX4NwHmwEm7rZ8UsRXg6uMPvXIHwPuK7rLl+nu9FzfMyYMWPGpGVuslmarv+YMWPSkNq/d2D8uNDNngvdivA2y3jy9m72bF9v3ymOf2MExp8fG2TsAcfA2wJYBJetWBq3i+0fwPafwLmzSl0LFmZNPMLHZ4fpnsX2AdjgcXB+T6kPge+AG7D/vXYW/tLsc9r9M+MkVyLNR1m6g9g+ZfYvmMExcHCm+ftP0+T5y/e17Uw/PYLwHnC0m80TH+zG30/3mjSDnPS2/B4pUJ4rX3n+b5H3o92l6UjfvZ7y/oJzToGnu8O66XTPYf8/Jr8XWL6TPXf9bPnHtmVs+89AnxVgDVgPLgKvAg+Y/F6H7c1gC7jKHH8XeJ/x15vAjt4wvwVs7wKfBXvAPvA18G1wsJevj36f5gjS3etIq+ft9+PYQ73h/nFsn2D7f+5l75bo/VPYftpTblFb2/Jo2pdjfL0uXOX/qxfnp8vZVk2Xv9hbmu+LxvYt3A/7/WZsPoptPkr9bdCv1ya+d4TuMO8Tre5n4XkILwSbzP4l/WHazX1//r2O/z7cFHnvSYW8R/Vm02ZXIHxHze1Xdf9bbn7p0z2kDroNr2X9WL+7937sX9fP+v9h9n6jTrfI3jG9EfsfN3G35PR/G4uRfY3eMTwdkFa/C3hrf2kcfy/xYTOmprrfZsLbEe7rDPW/U9Rrv9k/ahmTL0cWWxP/YxRkgtES+zwNhZPs+FQgMj/liEsto2HxsZBQX2pZoLZqWc5riXDaQBLSt1L3hcnE+Vct7aYVKCEhbXk2+b7NZ84mmXAwCiL14Ne85S62MYPcXi5StM/YxlJF2lfabznZsC6/C807xvZV+yFve9d1KY//d3HNO8pKUXuTDh0Gpp7B852q6QFMgdWM2dfbAxOuEPQEfcEsO5fquJLZrMfyCtWP0heZF6oSdiH9u4aQvJRIJ/eL6BBynItLp5D2JRkY5L5u3xAf6lviXHWSZcfaKO/+5zvO/c9Xtq8uRXSObd+8bS0zJrS1rxTyX7k/a0nrk5D+mHeOC90uq1Q216X57lykfqHt62uTGJ2rat+i/kttyq/RSi29PlclZf2Xxq55ZeSV34T96d5X5PqZJ9I3ZX2lnkXt3xL1Kyrav/LutbZ6uGxuS6ss6V3pXOXY4kP7EBfyJT7+4TJQS9uf74f6n+3+6ZIi9bCtieatFfCxUMx4KMYfy/pzrB30vm88q9SZ11K+n9eeNN612UFKWX8uI9TmRca7TbWvKy2JvF6naF+b/0uRupZp35cZikhZvyniY2R/CbdB3vXynIC6hbRBHf4l1xps6w4x/lVEtxRtGZMuRA8uNh/jfYV8kdpsBUszcODrD7E2JT2KrB3V6XMhbdNjcXItxzaOJWkpf976/I5glQn1sbLP86U9FQvz4l0S28/lcWUJbbrE2l+Z/TlHvi4/kvZXLMyrmy1PW7x8hl6UFgvlmNM1Jq3aJ3Se0yJcpdwS6mOp/ZgLX5N1rdFKaIzH9ztquMbqq+/qCFRk+hRoyZvrTHuO8fNd/djmEzZJ3TdisN1bNQNl7y96DV/3mVkTtwasVdk1ai6ybGlDek8nT1fXc4M5tVSPvhqOsWQeXQs8L1n3IradU8OxCeVjK7dr7Dpl0cMHnUvt18TzfVsfb/pZY56fV2GnVPVIYaOi9xcZJ8cmKcu3wcuPsVHV5cdKFfZXNZefp5sWft+wzR1cczKCxh99NRx76HvwOpWNv6YZtAajt6WPyPswtVVs/VOJ7xpYx3VR31er7gMxNuV9Q443CDlW43KuYSXblsybfKYt58trfez7A1X7Tdm+V7TcoudL+LpVGf2khN63U5OyD5Af0NoUv06l7Jc0Rte+so4xL9Ayy3Rz+SufY5Jf267xcm7J4dd3kumIOrmk7Pl549bUY1puI91Gdb8Tpu+9tjmhXFdwtfVsTv5SQvXKW0cK4eXgPBO6iJ07NNVOHH7/tF1jyJdnWbrU/Uau3VNI156QZ2ZaZFu76i6vQXy9YJ2H9QZ97aF3p1xlx1yfuYRcd0Kl7NyaX190+pUOKI0tvus5j7/nSWKLo3FER8R3LHEx8gqwge1POgi1l1yfirV3zHpISHxs3vLeFXOellcG1DFGbGP00PPkeKEOaXIsqhzbruOh9Qk5L08nW2grJ0avsvWocv0zRh/fGCG0TV35hB4v0rds5Vddjm/sFCKx+aXSt2yalPZsolxXW46CDnXp0YQ0rdso9OUYPSYT6+yzuxxzlrVfFfavQ/LKqsP+dbVzE/0qRb8pKin6V9U6Fnn24pqHufLMWy90nV+0DkXmcrb0Uq+6pU7/qcs/67SHTeTaaBk9ipyXQvLqW1U7uPKpux/ESlP9umydR8H3UjzHoXxj0/J1Yr5ubHsPrWOJqxK+hk5r+EVtH3pe1XWIXa+1vQ9YJ/oZre1bGReh3xKWeX7BxfYstwh5errGJi59be8482cSsfUPQT4Xlc9K+XMmatcY0fo2+SxYQs/4XO8M03Ng/TxujYH+FRELSdH+6mtveu8itb1Cy7C9X8GfsVOcfN86RHg56wJ0ob5qOz/E/rIdq7YhF34/0cfoeWKVftJjIbWDbDfXeXR/prBOKWJ/3dd43+sr+32TvgEIEZ6/7Zt5/l7ghMm77u+ey4gcz5xfktA5vE9C5vy2Y3lpXeX40tHcLMX42qZHS/ltZluXiSlDxillt3VdIvufbc0j75wy5aWaOxWRUZmfl5nDSh3LzoWbXJOg8uumKkndp1PnH2IPfe+U33z7vjWhdPQuWMh4raqxWMh9X89RZtSZ7/JpyXs3NWQcETN3CZHU/lmVnstZB1+ZfM5A/1VJ2V9t8wTXN1S+f27mzaulbCxJHePwC1Tz/0K1/VdPvtOsba+vL7ZxM1/jakJ/V9/yfdtNx+i7bhVRRll/rrK+sk3qLt/3T0afH+tzz1HDfxzZ/HlGDduK1y/GL21zvKptQGWFSpVlFm0z+ZxD/vdAt9EqQ971NkRHW7qytog53+cfVfeFGLStfddfYka5x6dl+yi//4z6/559aUn4/+/k2pv8BqfM/0qVCnu+If2OJPRZUcyzJF/5RQm5xtM9ln+LRN+8U9+iMQS1Veg9q2z/TlV3Ett3/rLOIXOookidy/5X3GYD+S8a1z2e0vH695T9vhEqdbY//0dU3jWZ2rYq/cvCRT8r08/NLlT5/zySdSurv1ybLiup5tAp5+NNzfPJ5r61warapajItfTQNeK610/rWEMPyb+uOo/ierRNbGU01Z+rqneIPWNsT9t1rD+OYr8rm0eKvp/Ch1P4Yepyy+hWVD/f+VWXX5X+TZdfZZ+KLb9J+S8=")),$7ab494fe977143c6$var$stateMachine=new(0,import_dfa.default)($parcel$interopDefault2($aa333a9607471296$exports)),$7ab494fe977143c6$export$2e2bcd8739ae039=class extends $649970d87335b30f$export$2e2bcd8739ae039{static planFeatures(e){e.addStage($7ab494fe977143c6$var$setupSyllables),e.addStage(["locl","ccmp","nukt","akhn"]),e.addStage($7ab494fe977143c6$var$clearSubstitutionFlags),e.addStage(["rphf"],!1),e.addStage($7ab494fe977143c6$var$recordRphf),e.addStage($7ab494fe977143c6$var$clearSubstitutionFlags),e.addStage(["pref"]),e.addStage($7ab494fe977143c6$var$recordPref),e.addStage(["rkrf","abvf","blwf","half","pstf","vatu","cjct"]),e.addStage($7ab494fe977143c6$var$reorder),e.addStage(["abvs","blws","pres","psts","dist","abvm","blwm"])}static assignFeatures(e,t){for(let A=t.length-1;A>=0;A--){let n=t[A].codePoints[0];if($7ab494fe977143c6$var$decompositions[n]){let l=$7ab494fe977143c6$var$decompositions[n].map((n=>{let l=e.font.glyphForCodePoint(n);return new $10e7b257e1a9a756$export$2e2bcd8739ae039(e.font,l.id,[n],t[A].features)}));t.splice(A,1,...l)}}}};function $7ab494fe977143c6$var$useCategory(e){return $7ab494fe977143c6$var$trie.get(e.codePoints[0])}_define_property($7ab494fe977143c6$export$2e2bcd8739ae039,"zeroMarkWidths","BEFORE_GPOS");var $7ab494fe977143c6$var$USEInfo=class{constructor(e,t,A){this.category=e,this.syllableType=t,this.syllable=A}};function $7ab494fe977143c6$var$setupSyllables(e,t){let A=0;for(let[e,n,l]of $7ab494fe977143c6$var$stateMachine.match(t.map($7ab494fe977143c6$var$useCategory))){++A;for(let r=e;r<=n;r++)t[r].shaperInfo=new $7ab494fe977143c6$var$USEInfo($7ab494fe977143c6$var$categories[$7ab494fe977143c6$var$useCategory(t[r])],l[0],A);let r="R"===t[e].shaperInfo.category?1:Math.min(3,n-e);for(let A=e;A<e+r;A++)t[A].features.rphf=!0}}function $7ab494fe977143c6$var$clearSubstitutionFlags(e,t){for(let e of t)e.substituted=!1}function $7ab494fe977143c6$var$recordRphf(e,t){for(let e of t)e.substituted&&e.features.rphf&&(e.shaperInfo.category="R")}function $7ab494fe977143c6$var$recordPref(e,t){for(let e of t)e.substituted&&(e.shaperInfo.category="VPre")}function $7ab494fe977143c6$var$reorder(e,t){let A=e.glyphForCodePoint(9676).id;for(let n=0,l=$7ab494fe977143c6$var$nextSyllable(t,0);n<t.length;n=l,l=$7ab494fe977143c6$var$nextSyllable(t,n)){let r,a,o=t[n].shaperInfo,s=o.syllableType;if("virama_terminated_cluster"===s||"standard_cluster"===s||"broken_cluster"===s){if("broken_cluster"===s&&A){let a=new $10e7b257e1a9a756$export$2e2bcd8739ae039(e,A,[9676]);for(a.shaperInfo=o,r=n;r<l&&"R"===t[r].shaperInfo.category;r++);t.splice(++r,0,a),l++}if("R"===o.category&&l-n>1)for(r=n+1;r<l;r++)if(o=t[r].shaperInfo,$7ab494fe977143c6$var$isBase(o)||$7ab494fe977143c6$var$isHalant(t[r])){$7ab494fe977143c6$var$isHalant(t[r])&&r--,t.splice(n,0,...t.splice(n+1,r-n),t[r]);break}for(r=n,a=l;r<l;r++)o=t[r].shaperInfo,$7ab494fe977143c6$var$isBase(o)||$7ab494fe977143c6$var$isHalant(t[r])?a=$7ab494fe977143c6$var$isHalant(t[r])?r+1:r:("VPre"===o.category||"VMPre"===o.category)&&a<r&&t.splice(a,1,t[r],...t.splice(a,r-a))}}}function $7ab494fe977143c6$var$nextSyllable(e,t){if(t>=e.length)return t;let A=e[t].shaperInfo.syllable;for(;++t<e.length&&e[t].shaperInfo.syllable===A;);return t}function $7ab494fe977143c6$var$isHalant(e){return"H"===e.shaperInfo.category&&!e.isLigated}function $7ab494fe977143c6$var$isBase(e){return"B"===e.category||"GB"===e.category}var $102b6fe50f1d50b4$var$SHAPERS={arab:$764eb544bbe1ccf0$export$2e2bcd8739ae039,mong:$764eb544bbe1ccf0$export$2e2bcd8739ae039,syrc:$764eb544bbe1ccf0$export$2e2bcd8739ae039,"nko ":$764eb544bbe1ccf0$export$2e2bcd8739ae039,phag:$764eb544bbe1ccf0$export$2e2bcd8739ae039,mand:$764eb544bbe1ccf0$export$2e2bcd8739ae039,mani:$764eb544bbe1ccf0$export$2e2bcd8739ae039,phlp:$764eb544bbe1ccf0$export$2e2bcd8739ae039,hang:$e1c6bbc8cb416f8c$export$2e2bcd8739ae039,bng2:$7826f90f6f0cecc9$export$2e2bcd8739ae039,beng:$7826f90f6f0cecc9$export$2e2bcd8739ae039,dev2:$7826f90f6f0cecc9$export$2e2bcd8739ae039,deva:$7826f90f6f0cecc9$export$2e2bcd8739ae039,gjr2:$7826f90f6f0cecc9$export$2e2bcd8739ae039,gujr:$7826f90f6f0cecc9$export$2e2bcd8739ae039,guru:$7826f90f6f0cecc9$export$2e2bcd8739ae039,gur2:$7826f90f6f0cecc9$export$2e2bcd8739ae039,knda:$7826f90f6f0cecc9$export$2e2bcd8739ae039,knd2:$7826f90f6f0cecc9$export$2e2bcd8739ae039,mlm2:$7826f90f6f0cecc9$export$2e2bcd8739ae039,mlym:$7826f90f6f0cecc9$export$2e2bcd8739ae039,ory2:$7826f90f6f0cecc9$export$2e2bcd8739ae039,orya:$7826f90f6f0cecc9$export$2e2bcd8739ae039,taml:$7826f90f6f0cecc9$export$2e2bcd8739ae039,tml2:$7826f90f6f0cecc9$export$2e2bcd8739ae039,telu:$7826f90f6f0cecc9$export$2e2bcd8739ae039,tel2:$7826f90f6f0cecc9$export$2e2bcd8739ae039,khmr:$7826f90f6f0cecc9$export$2e2bcd8739ae039,bali:$7ab494fe977143c6$export$2e2bcd8739ae039,batk:$7ab494fe977143c6$export$2e2bcd8739ae039,brah:$7ab494fe977143c6$export$2e2bcd8739ae039,bugi:$7ab494fe977143c6$export$2e2bcd8739ae039,buhd:$7ab494fe977143c6$export$2e2bcd8739ae039,cakm:$7ab494fe977143c6$export$2e2bcd8739ae039,cham:$7ab494fe977143c6$export$2e2bcd8739ae039,dupl:$7ab494fe977143c6$export$2e2bcd8739ae039,egyp:$7ab494fe977143c6$export$2e2bcd8739ae039,gran:$7ab494fe977143c6$export$2e2bcd8739ae039,hano:$7ab494fe977143c6$export$2e2bcd8739ae039,java:$7ab494fe977143c6$export$2e2bcd8739ae039,kthi:$7ab494fe977143c6$export$2e2bcd8739ae039,kali:$7ab494fe977143c6$export$2e2bcd8739ae039,khar:$7ab494fe977143c6$export$2e2bcd8739ae039,khoj:$7ab494fe977143c6$export$2e2bcd8739ae039,sind:$7ab494fe977143c6$export$2e2bcd8739ae039,lepc:$7ab494fe977143c6$export$2e2bcd8739ae039,limb:$7ab494fe977143c6$export$2e2bcd8739ae039,mahj:$7ab494fe977143c6$export$2e2bcd8739ae039,mtei:$7ab494fe977143c6$export$2e2bcd8739ae039,modi:$7ab494fe977143c6$export$2e2bcd8739ae039,hmng:$7ab494fe977143c6$export$2e2bcd8739ae039,rjng:$7ab494fe977143c6$export$2e2bcd8739ae039,saur:$7ab494fe977143c6$export$2e2bcd8739ae039,shrd:$7ab494fe977143c6$export$2e2bcd8739ae039,sidd:$7ab494fe977143c6$export$2e2bcd8739ae039,sinh:$7826f90f6f0cecc9$export$2e2bcd8739ae039,sund:$7ab494fe977143c6$export$2e2bcd8739ae039,sylo:$7ab494fe977143c6$export$2e2bcd8739ae039,tglg:$7ab494fe977143c6$export$2e2bcd8739ae039,tagb:$7ab494fe977143c6$export$2e2bcd8739ae039,tale:$7ab494fe977143c6$export$2e2bcd8739ae039,lana:$7ab494fe977143c6$export$2e2bcd8739ae039,tavt:$7ab494fe977143c6$export$2e2bcd8739ae039,takr:$7ab494fe977143c6$export$2e2bcd8739ae039,tibt:$7ab494fe977143c6$export$2e2bcd8739ae039,tfng:$7ab494fe977143c6$export$2e2bcd8739ae039,tirh:$7ab494fe977143c6$export$2e2bcd8739ae039,latn:$649970d87335b30f$export$2e2bcd8739ae039,DFLT:$649970d87335b30f$export$2e2bcd8739ae039};function $102b6fe50f1d50b4$export$7877a478dd30fd3d(e){Array.isArray(e)||(e=[e]);for(let t of e){let e=$102b6fe50f1d50b4$var$SHAPERS[t];if(e)return e}return $649970d87335b30f$export$2e2bcd8739ae039}var $0a876c45f1f7c41c$export$2e2bcd8739ae039=class extends $a83b9c36aaa94fd3$export$2e2bcd8739ae039{applyLookup(e,t){switch(e){case 1:{let e=this.coverageIndex(t.coverage);if(-1===e)return!1;let A=this.glyphIterator.cur;switch(t.version){case 1:A.id=A.id+t.deltaGlyphID&65535;break;case 2:A.id=t.substitute.get(e)}return!0}case 2:{let e=this.coverageIndex(t.coverage);if(-1!==e){let A=t.sequences.get(e);if(0===A.length)return this.glyphs.splice(this.glyphIterator.index,1),!0;this.glyphIterator.cur.id=A[0],this.glyphIterator.cur.ligatureComponent=0;let n=this.glyphIterator.cur.features,l=this.glyphIterator.cur,r=A.slice(1).map(((e,t)=>{let A=new $10e7b257e1a9a756$export$2e2bcd8739ae039(this.font,e,void 0,n);return A.shaperInfo=l.shaperInfo,A.isLigated=l.isLigated,A.ligatureComponent=t+1,A.substituted=!0,A.isMultiplied=!0,A}));return this.glyphs.splice(this.glyphIterator.index+1,0,...r),!0}return!1}case 3:{let e=this.coverageIndex(t.coverage);if(-1!==e){let A=0;return this.glyphIterator.cur.id=t.alternateSet.get(e)[A],!0}return!1}case 4:{let e=this.coverageIndex(t.coverage);if(-1===e)return!1;for(let n of t.ligatureSets.get(e)){let e=this.sequenceMatchIndices(1,n.components);if(!e)continue;let t=this.glyphIterator.cur,l=t.codePoints.slice();for(let t of e)l.push(...this.glyphs[t].codePoints);let r=new $10e7b257e1a9a756$export$2e2bcd8739ae039(this.font,n.glyph,l,t.features);r.shaperInfo=t.shaperInfo,r.isLigated=!0,r.substituted=!0;let a=t.isMark;for(let t=0;t<e.length&&a;t++)a=this.glyphs[e[t]].isMark;r.ligatureID=a?null:this.ligatureID++;let o=t.ligatureID,s=t.codePoints.length,i=s,u=this.glyphIterator.index+1;for(let t of e){if(a)u=t;else for(;u<t;){var A=i-s+Math.min(this.glyphs[u].ligatureComponent||1,s);this.glyphs[u].ligatureID=r.ligatureID,this.glyphs[u].ligatureComponent=A,u++}o=this.glyphs[u].ligatureID,s=this.glyphs[u].codePoints.length,i+=s,u++}if(o&&!a)for(let e=u;e<this.glyphs.length&&this.glyphs[e].ligatureID===o;e++){A=i-s+Math.min(this.glyphs[e].ligatureComponent||1,s);this.glyphs[e].ligatureComponent=A}for(let t=e.length-1;t>=0;t--)this.glyphs.splice(e[t],1);return this.glyphs[this.glyphIterator.index]=r,!0}return!1}case 5:return this.applyContext(t);case 6:return this.applyChainingContext(t);case 7:return this.applyLookup(t.lookupType,t.extension);default:throw new Error(`GSUB lookupType ${e}is not supported`)}}},$c96c93587d49c14d$export$2e2bcd8739ae039=class extends $a83b9c36aaa94fd3$export$2e2bcd8739ae039{applyPositionValue(e,t){let A=this.positions[this.glyphIterator.peekIndex(e)];null!=t.xAdvance&&(A.xAdvance+=t.xAdvance),null!=t.yAdvance&&(A.yAdvance+=t.yAdvance),null!=t.xPlacement&&(A.xOffset+=t.xPlacement),null!=t.yPlacement&&(A.yOffset+=t.yPlacement);let n=this.font._variationProcessor,l=this.font.GDEF&&this.font.GDEF.itemVariationStore;n&&l&&(t.xPlaDevice&&(A.xOffset+=n.getDelta(l,t.xPlaDevice.a,t.xPlaDevice.b)),t.yPlaDevice&&(A.yOffset+=n.getDelta(l,t.yPlaDevice.a,t.yPlaDevice.b)),t.xAdvDevice&&(A.xAdvance+=n.getDelta(l,t.xAdvDevice.a,t.xAdvDevice.b)),t.yAdvDevice&&(A.yAdvance+=n.getDelta(l,t.yAdvDevice.a,t.yAdvDevice.b)))}applyLookup(e,t){switch(e){case 1:{let e=this.coverageIndex(t.coverage);if(-1===e)return!1;switch(t.version){case 1:this.applyPositionValue(0,t.value);break;case 2:this.applyPositionValue(0,t.values.get(e))}return!0}case 2:{let e=this.glyphIterator.peek();if(!e)return!1;let n=this.coverageIndex(t.coverage);if(-1===n)return!1;switch(t.version){case 1:let l=t.pairSets.get(n);for(let t of l)if(t.secondGlyph===e.id)return this.applyPositionValue(0,t.value1),this.applyPositionValue(1,t.value2),!0;return!1;case 2:let r=this.getClassID(this.glyphIterator.cur.id,t.classDef1),a=this.getClassID(e.id,t.classDef2);if(-1===r||-1===a)return!1;var A=t.classRecords.get(r).get(a);return this.applyPositionValue(0,A.value1),this.applyPositionValue(1,A.value2),!0}}case 3:{let e=this.glyphIterator.peekIndex(),A=this.glyphs[e];if(!A)return!1;let n=t.entryExitRecords[this.coverageIndex(t.coverage)];if(!n||!n.exitAnchor)return!1;let l=t.entryExitRecords[this.coverageIndex(t.coverage,A.id)];if(!l||!l.entryAnchor)return!1;let r,a=this.getAnchor(l.entryAnchor),o=this.getAnchor(n.exitAnchor),s=this.positions[this.glyphIterator.index],i=this.positions[e];switch(this.direction){case"ltr":s.xAdvance=o.x+s.xOffset,r=a.x+i.xOffset,i.xAdvance-=r,i.xOffset-=r;break;case"rtl":r=o.x+s.xOffset,s.xAdvance-=r,s.xOffset-=r,i.xAdvance=a.x+i.xOffset}return this.glyphIterator.flags.rightToLeft?(this.glyphIterator.cur.cursiveAttachment=e,s.yOffset=a.y-o.y):(A.cursiveAttachment=this.glyphIterator.index,s.yOffset=o.y-a.y),!0}case 4:{let e=this.coverageIndex(t.markCoverage);if(-1===e)return!1;let A=this.glyphIterator.index;for(;--A>=0&&(this.glyphs[A].isMark||this.glyphs[A].ligatureComponent>0););if(A<0)return!1;let n=this.coverageIndex(t.baseCoverage,this.glyphs[A].id);if(-1===n)return!1;let l=t.markArray[e],r=t.baseArray[n][l.class];return this.applyAnchor(l,r,A),!0}case 5:{let e=this.coverageIndex(t.markCoverage);if(-1===e)return!1;let A=this.glyphIterator.index;for(;--A>=0&&this.glyphs[A].isMark;);if(A<0)return!1;let n=this.coverageIndex(t.ligatureCoverage,this.glyphs[A].id);if(-1===n)return!1;let l=t.ligatureArray[n],r=this.glyphIterator.cur,a=this.glyphs[A],o=a.ligatureID&&a.ligatureID===r.ligatureID&&r.ligatureComponent>0?Math.min(r.ligatureComponent,a.codePoints.length)-1:a.codePoints.length-1,s=t.markArray[e],i=l[o][s.class];return this.applyAnchor(s,i,A),!0}case 6:{let e=this.coverageIndex(t.mark1Coverage);if(-1===e)return!1;let A=this.glyphIterator.peekIndex(-1),n=this.glyphs[A];if(!n||!n.isMark)return!1;let l=this.glyphIterator.cur,r=!1;if(l.ligatureID===n.ligatureID?l.ligatureID?l.ligatureComponent===n.ligatureComponent&&(r=!0):r=!0:(l.ligatureID&&!l.ligatureComponent||n.ligatureID&&!n.ligatureComponent)&&(r=!0),!r)return!1;let a=this.coverageIndex(t.mark2Coverage,n.id);if(-1===a)return!1;let o=t.mark1Array[e],s=t.mark2Array[a][o.class];return this.applyAnchor(o,s,A),!0}case 7:return this.applyContext(t);case 8:return this.applyChainingContext(t);case 9:return this.applyLookup(t.lookupType,t.extension);default:throw new Error(`Unsupported GPOS table:${e}`)}}applyAnchor(e,t,A){let n=this.getAnchor(t),l=this.getAnchor(e.markAnchor),r=(this.positions[A],this.positions[this.glyphIterator.index]);r.xOffset=n.x-l.x,r.yOffset=n.y-l.y,this.glyphIterator.cur.markAttachment=A}getAnchor(e){let t=e.xCoordinate,A=e.yCoordinate,n=this.font._variationProcessor,l=this.font.GDEF&&this.font.GDEF.itemVariationStore;return n&&l&&(e.xDeviceTable&&(t+=n.getDelta(l,e.xDeviceTable.a,e.xDeviceTable.b)),e.yDeviceTable&&(A+=n.getDelta(l,e.yDeviceTable.a,e.yDeviceTable.b))),{x:t,y:A}}applyFeatures(e,t,A){super.applyFeatures(e,t,A);for(var n=0;n<this.glyphs.length;n++)this.fixCursiveAttachment(n);this.fixMarkAttachment()}fixCursiveAttachment(e){let t=this.glyphs[e];if(null!=t.cursiveAttachment){let A=t.cursiveAttachment;t.cursiveAttachment=null,this.fixCursiveAttachment(A),this.positions[e].yOffset+=this.positions[A].yOffset}}fixMarkAttachment(){for(let e=0;e<this.glyphs.length;e++){let t=this.glyphs[e];if(null!=t.markAttachment){let A=t.markAttachment;if(this.positions[e].xOffset+=this.positions[A].xOffset,this.positions[e].yOffset+=this.positions[A].yOffset,"ltr"===this.direction)for(let t=A;t<e;t++)this.positions[e].xOffset-=this.positions[t].xAdvance,this.positions[e].yOffset-=this.positions[t].yAdvance;else for(let t=A+1;t<e+1;t++)this.positions[e].xOffset+=this.positions[t].xAdvance,this.positions[e].yOffset+=this.positions[t].yAdvance}}}},$a62492810de27e3d$export$2e2bcd8739ae039=class{setup(e){this.glyphInfos=e.glyphs.map((e=>new $10e7b257e1a9a756$export$2e2bcd8739ae039(this.font,e.id,[...e.codePoints])));let t=null;this.GPOSProcessor&&(t=this.GPOSProcessor.selectScript(e.script,e.language,e.direction)),this.GSUBProcessor&&(t=this.GSUBProcessor.selectScript(e.script,e.language,e.direction)),this.shaper=$102b6fe50f1d50b4$export$7877a478dd30fd3d(t),this.plan=new $94d7a73bd2edfc9a$export$2e2bcd8739ae039(this.font,t,e.direction),this.shaper.plan(this.plan,this.glyphInfos,e.features);for(let t in this.plan.allFeatures)e.features[t]=!0}substitute(e){this.GSUBProcessor&&(this.plan.process(this.GSUBProcessor,this.glyphInfos),e.glyphs=this.glyphInfos.map((e=>this.font.getGlyph(e.id,e.codePoints))))}position(e){return"BEFORE_GPOS"===this.shaper.zeroMarkWidths&&this.zeroMarkAdvances(e.positions),this.GPOSProcessor&&this.plan.process(this.GPOSProcessor,this.glyphInfos,e.positions),"AFTER_GPOS"===this.shaper.zeroMarkWidths&&this.zeroMarkAdvances(e.positions),"rtl"===e.direction&&(e.glyphs.reverse(),e.positions.reverse()),this.GPOSProcessor&&this.GPOSProcessor.features}zeroMarkAdvances(e){for(let t=0;t<this.glyphInfos.length;t++)this.glyphInfos[t].isMark&&(e[t].xAdvance=0,e[t].yAdvance=0)}cleanup(){this.glyphInfos=null,this.plan=null,this.shaper=null}getAvailableFeatures(e,t){let A=[];return this.GSUBProcessor&&(this.GSUBProcessor.selectScript(e,t),A.push(...Object.keys(this.GSUBProcessor.features))),this.GPOSProcessor&&(this.GPOSProcessor.selectScript(e,t),A.push(...Object.keys(this.GPOSProcessor.features))),A}constructor(e){this.font=e,this.glyphInfos=null,this.plan=null,this.GSUBProcessor=null,this.GPOSProcessor=null,this.fallbackPosition=!0,e.GSUB&&(this.GSUBProcessor=new $0a876c45f1f7c41c$export$2e2bcd8739ae039(e,e.GSUB)),e.GPOS&&(this.GPOSProcessor=new $c96c93587d49c14d$export$2e2bcd8739ae039(e,e.GPOS))}},$4c0a7fa5df7a9ab1$export$2e2bcd8739ae039=class{layout(e,t,A,n,l){if("string"==typeof t&&(l=n,n=A,A=t,t=[]),"string"==typeof e){null==A&&(A=$130d1a642ebcd2b7$export$e5cb25e204fb8450(e));var r=this.font.glyphsForString(e)}else{if(null==A){let t=[];for(let A of e)t.push(...A.codePoints);A=$130d1a642ebcd2b7$export$16fab0757cfc223d(t)}r=e}let a=new $be07b3e97a42687a$export$2e2bcd8739ae039(r,t,A,n,l);return 0===r.length?(a.positions=[],a):(this.engine&&this.engine.setup&&this.engine.setup(a),this.substitute(a),this.position(a),this.hideDefaultIgnorables(a.glyphs,a.positions),this.engine&&this.engine.cleanup&&this.engine.cleanup(),a)}substitute(e){this.engine&&this.engine.substitute&&this.engine.substitute(e)}position(e){e.positions=e.glyphs.map((e=>new $1ac75d9a55b67f01$export$2e2bcd8739ae039(e.advanceWidth)));let t=null;this.engine&&this.engine.position&&(t=this.engine.position(e)),t||this.engine&&!this.engine.fallbackPosition||(this.unicodeLayoutEngine||(this.unicodeLayoutEngine=new $0a4bdfeb6dfd6f5e$export$2e2bcd8739ae039(this.font)),this.unicodeLayoutEngine.positionGlyphs(e.glyphs,e.positions)),t&&t.kern||!1===e.features.kern||!this.font.kern||(this.kernProcessor||(this.kernProcessor=new $0bba3a9db57637f3$export$2e2bcd8739ae039(this.font)),this.kernProcessor.process(e.glyphs,e.positions),e.features.kern=!0)}hideDefaultIgnorables(e,t){let A=this.font.glyphForCodePoint(32);for(let n=0;n<e.length;n++)this.isDefaultIgnorable(e[n].codePoints[0])&&(e[n]=A,t[n].xAdvance=0,t[n].yAdvance=0)}isDefaultIgnorable(e){let t=e>>16;if(0===t)switch(e>>8){case 0:return 173===e;case 3:return 847===e;case 6:return 1564===e;case 23:return 6068<=e&&e<=6069;case 24:return 6155<=e&&e<=6158;case 32:return 8203<=e&&e<=8207||8234<=e&&e<=8238||8288<=e&&e<=8303;case 254:return 65024<=e&&e<=65039||65279===e;case 255:return 65520<=e&&e<=65528;default:return!1}else switch(t){case 1:return 113824<=e&&e<=113827||119155<=e&&e<=119162;case 14:return 917504<=e&&e<=921599;default:return!1}}getAvailableFeatures(e,t){let A=[];return this.engine&&A.push(...this.engine.getAvailableFeatures(e,t)),this.font.kern&&-1===A.indexOf("kern")&&A.push("kern"),A}stringsForGlyph(e){let t=new Set,A=this.font._cmapProcessor.codePointsForGlyph(e);for(let e of A)t.add(String.fromCodePoint(e));if(this.engine&&this.engine.stringsForGlyph)for(let A of this.engine.stringsForGlyph(e))t.add(A);return Array.from(t)}constructor(e){this.font=e,this.unicodeLayoutEngine=null,this.kernProcessor=null,this.font.morx?this.engine=new $ba6dd74203be8728$export$2e2bcd8739ae039(this.font):(this.font.GSUB||this.font.GPOS)&&(this.engine=new $a62492810de27e3d$export$2e2bcd8739ae039(this.font))}},$f43aec954cdfdf21$var$SVG_COMMANDS={moveTo:"M",lineTo:"L",quadraticCurveTo:"Q",bezierCurveTo:"C",closePath:"Z"},$f43aec954cdfdf21$export$2e2bcd8739ae039=class e{toFunction(){return e=>{this.commands.forEach((t=>e[t.command].apply(e,t.args)))}}toSVG(){return this.commands.map((e=>{let t=e.args.map((e=>Math.round(100*e)/100));return`${$f43aec954cdfdf21$var$SVG_COMMANDS[e.command]}${t.join(" ")}`})).join("")}get cbox(){if(!this._cbox){let e=new $f34600ab9d7f70d8$export$2e2bcd8739ae039;for(let t of this.commands)for(let A=0;A<t.args.length;A+=2)e.addPoint(t.args[A],t.args[A+1]);this._cbox=Object.freeze(e)}return this._cbox}get bbox(){if(this._bbox)return this._bbox;let e=new $f34600ab9d7f70d8$export$2e2bcd8739ae039,t=0,A=0,n=e=>Math.pow(1-e,3)*h[p]+3*Math.pow(1-e,2)*e*f[p]+3*(1-e)*Math.pow(e,2)*g[p]+Math.pow(e,3)*d[p];for(let B of this.commands)switch(B.command){case"moveTo":case"lineTo":let[E,m]=B.args;e.addPoint(E,m),t=E,A=m;break;case"quadraticCurveTo":case"bezierCurveTo":if("quadraticCurveTo"===B.command)var[l,r,a,o]=B.args,s=t+2/3*(l-t),i=A+2/3*(r-A),u=a+2/3*(l-a),c=o+2/3*(r-o);else var[s,i,u,c,a,o]=B.args;e.addPoint(a,o);for(var h=[t,A],f=[s,i],g=[u,c],d=[a,o],p=0;p<=1;p++){let t=6*h[p]-12*f[p]+6*g[p],A=-3*h[p]+9*f[p]-9*g[p]+3*d[p];if(B=3*f[p]-3*h[p],0===A){if(0===t)continue;let A=-B/t;0<A&&A<1&&(0===p?e.addPoint(n(A),e.maxY):1===p&&e.addPoint(e.maxX,n(A)));continue}let l=Math.pow(t,2)-4*B*A;if(l<0)continue;let r=(-t+Math.sqrt(l))/(2*A);0<r&&r<1&&(0===p?e.addPoint(n(r),e.maxY):1===p&&e.addPoint(e.maxX,n(r)));let a=(-t-Math.sqrt(l))/(2*A);0<a&&a<1&&(0===p?e.addPoint(n(a),e.maxY):1===p&&e.addPoint(e.maxX,n(a)))}t=a,A=o}return this._bbox=Object.freeze(e)}mapPoints(t){let A=new e;for(let e of this.commands){let n=[];for(let A=0;A<e.args.length;A+=2){let[l,r]=t(e.args[A],e.args[A+1]);n.push(l,r)}A[e.command](...n)}return A}transform(e,t,A,n,l,r){return this.mapPoints(((a,o)=>[e*a+A*o+l,t*a+n*o+r]))}translate(e,t){return this.transform(1,0,0,1,e,t)}rotate(e){let t=Math.cos(e),A=Math.sin(e);return this.transform(t,A,-A,t,0,0)}scale(e,t=e){return this.transform(e,0,0,t,0,0)}constructor(){this.commands=[],this._bbox=null,this._cbox=null}};for(let e of["moveTo","lineTo","quadraticCurveTo","bezierCurveTo","closePath"])$f43aec954cdfdf21$export$2e2bcd8739ae039.prototype[e]=function(...t){return this._bbox=this._cbox=null,this.commands.push({command:e,args:t}),this};var $7713b9b7b438dff8$export$2e2bcd8739ae039=[".notdef",".null","nonmarkingreturn","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quotesingle","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","grave","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","Adieresis","Aring","Ccedilla","Eacute","Ntilde","Odieresis","Udieresis","aacute","agrave","acircumflex","adieresis","atilde","aring","ccedilla","eacute","egrave","ecircumflex","edieresis","iacute","igrave","icircumflex","idieresis","ntilde","oacute","ograve","ocircumflex","odieresis","otilde","uacute","ugrave","ucircumflex","udieresis","dagger","degree","cent","sterling","section","bullet","paragraph","germandbls","registered","copyright","trademark","acute","dieresis","notequal","AE","Oslash","infinity","plusminus","lessequal","greaterequal","yen","mu","partialdiff","summation","product","pi","integral","ordfeminine","ordmasculine","Omega","ae","oslash","questiondown","exclamdown","logicalnot","radical","florin","approxequal","Delta","guillemotleft","guillemotright","ellipsis","nonbreakingspace","Agrave","Atilde","Otilde","OE","oe","endash","emdash","quotedblleft","quotedblright","quoteleft","quoteright","divide","lozenge","ydieresis","Ydieresis","fraction","currency","guilsinglleft","guilsinglright","fi","fl","daggerdbl","periodcentered","quotesinglbase","quotedblbase","perthousand","Acircumflex","Ecircumflex","Aacute","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Oacute","Ocircumflex","apple","Ograve","Uacute","Ucircumflex","Ugrave","dotlessi","circumflex","tilde","macron","breve","dotaccent","ring","cedilla","hungarumlaut","ogonek","caron","Lslash","lslash","Scaron","scaron","Zcaron","zcaron","brokenbar","Eth","eth","Yacute","yacute","Thorn","thorn","minus","multiply","onesuperior","twosuperior","threesuperior","onehalf","onequarter","threequarters","franc","Gbreve","gbreve","Idotaccent","Scedilla","scedilla","Cacute","cacute","Ccaron","ccaron","dcroat"],$f92906be28e61769$export$2e2bcd8739ae039=class{_getPath(){return new $f43aec954cdfdf21$export$2e2bcd8739ae039}_getCBox(){return this.path.cbox}_getBBox(){return this.path.bbox}_getTableMetrics(e){if(this.id<e.metrics.length)return e.metrics.get(this.id);let t=e.metrics.get(e.metrics.length-1);return{advance:t?t.advance:0,bearing:e.bearings.get(this.id-e.metrics.length)||0}}_getMetrics(e){if(this._metrics)return this._metrics;let{advance:t,bearing:A}=this._getTableMetrics(this._font.hmtx);if(this._font.vmtx)var{advance:n,bearing:l}=this._getTableMetrics(this._font.vmtx);else{let t;if(null==e&&({cbox:e}=this),(t=this._font["OS/2"])&&t.version>0)n=Math.abs(t.typoAscender-t.typoDescender),l=t.typoAscender-e.maxY;else{let{hhea:t}=this._font;var n=Math.abs(t.ascent-t.descent),l=t.ascent-e.maxY}}return this._font._variationProcessor&&this._font.HVAR&&(t+=this._font._variationProcessor.getAdvanceAdjustment(this.id,this._font.HVAR)),this._metrics={advanceWidth:t,advanceHeight:n,leftBearing:A,topBearing:l}}get cbox(){return this._getCBox()}get bbox(){return this._getBBox()}get path(){return this._getPath()}getScaledPath(e){let t=1/this._font.unitsPerEm*e;return this.path.scale(t)}get advanceWidth(){return this._getMetrics().advanceWidth}get advanceHeight(){return this._getMetrics().advanceHeight}get ligatureCaretPositions(){}_getName(){let{post:e}=this._font;if(!e)return null;switch(e.version){case 1:return $7713b9b7b438dff8$export$2e2bcd8739ae039[this.id];case 2:let t=e.glyphNameIndex[this.id];return t<$7713b9b7b438dff8$export$2e2bcd8739ae039.length?$7713b9b7b438dff8$export$2e2bcd8739ae039[t]:e.names[t-$7713b9b7b438dff8$export$2e2bcd8739ae039.length];case 2.5:return $7713b9b7b438dff8$export$2e2bcd8739ae039[this.id+e.offsets[this.id]];case 4:return String.fromCharCode(e.map[this.id])}}get name(){return this._getName()}render(e,t){e.save();let A=1/this._font.head.unitsPerEm*t;e.scale(A,A),this.path.toFunction()(e),e.fill(),e.restore()}constructor(e,t,A){this.id=e,this.codePoints=t,this._font=A,this.isMark=this.codePoints.length>0&&this.codePoints.every($747425b437e121da$export$e33ad6871e762338),this.isLigature=this.codePoints.length>1}};__decorate([$e71565f2ce09cb6b$export$69a3209f1a06c04d],$f92906be28e61769$export$2e2bcd8739ae039.prototype,"cbox",null),__decorate([$e71565f2ce09cb6b$export$69a3209f1a06c04d],$f92906be28e61769$export$2e2bcd8739ae039.prototype,"bbox",null),__decorate([$e71565f2ce09cb6b$export$69a3209f1a06c04d],$f92906be28e61769$export$2e2bcd8739ae039.prototype,"path",null),__decorate([$e71565f2ce09cb6b$export$69a3209f1a06c04d],$f92906be28e61769$export$2e2bcd8739ae039.prototype,"advanceWidth",null),__decorate([$e71565f2ce09cb6b$export$69a3209f1a06c04d],$f92906be28e61769$export$2e2bcd8739ae039.prototype,"advanceHeight",null),__decorate([$e71565f2ce09cb6b$export$69a3209f1a06c04d],$f92906be28e61769$export$2e2bcd8739ae039.prototype,"name",null);var $69aac16029968692$var$GlyfHeader=new Struct({numberOfContours:int16,xMin:int16,yMin:int16,xMax:int16,yMax:int16}),$69aac16029968692$var$ON_CURVE=1,$69aac16029968692$var$X_SHORT_VECTOR=2,$69aac16029968692$var$Y_SHORT_VECTOR=4,$69aac16029968692$var$REPEAT=8,$69aac16029968692$var$SAME_X=16,$69aac16029968692$var$SAME_Y=32,$69aac16029968692$var$ARG_1_AND_2_ARE_WORDS=1,$69aac16029968692$var$WE_HAVE_A_SCALE=8,$69aac16029968692$var$MORE_COMPONENTS=32,$69aac16029968692$var$WE_HAVE_AN_X_AND_Y_SCALE=64,$69aac16029968692$var$WE_HAVE_A_TWO_BY_TWO=128,$69aac16029968692$var$WE_HAVE_INSTRUCTIONS=256,$69aac16029968692$export$baf26146a414f24a=class e{copy(){return new e(this.onCurve,this.endContour,this.x,this.y)}constructor(e,t,A=0,n=0){this.onCurve=e,this.endContour=t,this.x=A,this.y=n}},$69aac16029968692$var$Component=class{constructor(e,t,A){this.glyphID=e,this.dx=t,this.dy=A,this.pos=0,this.scaleX=this.scaleY=1,this.scale01=this.scale10=0}},$69aac16029968692$export$2e2bcd8739ae039=class extends $f92906be28e61769$export$2e2bcd8739ae039{_getCBox(e){if(this._font._variationProcessor&&!e)return this.path.cbox;let t=this._font._getTableStream("glyf");t.pos+=this._font.loca.offsets[this.id];let A=$69aac16029968692$var$GlyfHeader.decode(t),n=new $f34600ab9d7f70d8$export$2e2bcd8739ae039(A.xMin,A.yMin,A.xMax,A.yMax);return Object.freeze(n)}_parseGlyphCoord(e,t,A,n){if(A){var l=e.readUInt8();n||(l=-l),l+=t}else if(n)l=t;else l=t+e.readInt16BE();return l}_decode(){let e=this._font.loca.offsets[this.id];if(e===this._font.loca.offsets[this.id+1])return null;let t=this._font._getTableStream("glyf");t.pos+=e;let A=t.pos,n=$69aac16029968692$var$GlyfHeader.decode(t);return n.numberOfContours>0?this._decodeSimple(n,t):n.numberOfContours<0&&this._decodeComposite(n,t,A),n}_decodeSimple(e,t){e.points=[];let A=new ArrayT(uint16,e.numberOfContours).decode(t);e.instructions=new ArrayT(uint8,uint16).decode(t);let n=[],l=A[A.length-1]+1;for(;n.length<l;){var r=t.readUInt8();if(n.push(r),r&$69aac16029968692$var$REPEAT){let e=t.readUInt8();for(let t=0;t<e;t++)n.push(r)}}for(var a=0;a<n.length;a++){r=n[a];let t=new $69aac16029968692$export$baf26146a414f24a(!!(r&$69aac16029968692$var$ON_CURVE),A.indexOf(a)>=0,0,0);e.points.push(t)}let o=0;for(a=0;a<n.length;a++){r=n[a];e.points[a].x=o=this._parseGlyphCoord(t,o,r&$69aac16029968692$var$X_SHORT_VECTOR,r&$69aac16029968692$var$SAME_X)}let s=0;for(a=0;a<n.length;a++){r=n[a];e.points[a].y=s=this._parseGlyphCoord(t,s,r&$69aac16029968692$var$Y_SHORT_VECTOR,r&$69aac16029968692$var$SAME_Y)}if(this._font._variationProcessor){let t=e.points.slice();t.push(...this._getPhantomPoints(e)),this._font._variationProcessor.transformPoints(this.id,t),e.phantomPoints=t.slice(-4)}}_decodeComposite(e,t,A=0){e.components=[];let n=!1,l=$69aac16029968692$var$MORE_COMPONENTS;for(;l&$69aac16029968692$var$MORE_COMPONENTS;){l=t.readUInt16BE();let s=t.pos-A,i=t.readUInt16BE();if(n||(n=!!(l&$69aac16029968692$var$WE_HAVE_INSTRUCTIONS)),l&$69aac16029968692$var$ARG_1_AND_2_ARE_WORDS)var r=t.readInt16BE(),a=t.readInt16BE();else r=t.readInt8(),a=t.readInt8();(o=new $69aac16029968692$var$Component(i,r,a)).pos=s,l&$69aac16029968692$var$WE_HAVE_A_SCALE?o.scaleX=o.scaleY=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824:l&$69aac16029968692$var$WE_HAVE_AN_X_AND_Y_SCALE?(o.scaleX=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,o.scaleY=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824):l&$69aac16029968692$var$WE_HAVE_A_TWO_BY_TWO&&(o.scaleX=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,o.scale01=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,o.scale10=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,o.scaleY=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824),e.components.push(o)}if(this._font._variationProcessor){let t=[];for(let A=0;A<e.components.length;A++){var o=e.components[A];t.push(new $69aac16029968692$export$baf26146a414f24a(!0,!0,o.dx,o.dy))}t.push(...this._getPhantomPoints(e)),this._font._variationProcessor.transformPoints(this.id,t),e.phantomPoints=t.splice(-4,4);for(let A=0;A<t.length;A++){let n=t[A];e.components[A].dx=n.x,e.components[A].dy=n.y}}return n}_getPhantomPoints(e){let t=this._getCBox(!0);null==this._metrics&&(this._metrics=$f92906be28e61769$export$2e2bcd8739ae039.prototype._getMetrics.call(this,t));let{advanceWidth:A,advanceHeight:n,leftBearing:l,topBearing:r}=this._metrics;return[new $69aac16029968692$export$baf26146a414f24a(!1,!0,e.xMin-l,0),new $69aac16029968692$export$baf26146a414f24a(!1,!0,e.xMin-l+A,0),new $69aac16029968692$export$baf26146a414f24a(!1,!0,0,e.yMax+r),new $69aac16029968692$export$baf26146a414f24a(!1,!0,0,e.yMax+r+n)]}_getContours(){let e=this._decode();if(!e)return[];let t=[];if(e.numberOfContours<0)for(let A of e.components){let e=this._font.getGlyph(A.glyphID)._getContours();for(let n=0;n<e.length;n++){let l=e[n];for(let e=0;e<l.length;e++){let n=l[e],r=n.x*A.scaleX+n.y*A.scale01+A.dx,a=n.y*A.scaleY+n.x*A.scale10+A.dy;t.push(new $69aac16029968692$export$baf26146a414f24a(n.onCurve,n.endContour,r,a))}}}else t=e.points||[];e.phantomPoints&&!this._font.directory.tables.HVAR&&(this._metrics.advanceWidth=e.phantomPoints[1].x-e.phantomPoints[0].x,this._metrics.advanceHeight=e.phantomPoints[3].y-e.phantomPoints[2].y,this._metrics.leftBearing=e.xMin-e.phantomPoints[0].x,this._metrics.topBearing=e.phantomPoints[2].y-e.yMax);let A=[],n=[];for(let e=0;e<t.length;e++){var l=t[e];n.push(l),l.endContour&&(A.push(n),n=[])}return A}_getMetrics(){if(this._metrics)return this._metrics;let e=this._getCBox(!0);return super._getMetrics(e),this._font._variationProcessor&&!this._font.HVAR&&this.path,this._metrics}_getPath(){let e=this._getContours(),t=new $f43aec954cdfdf21$export$2e2bcd8739ae039;for(let n=0;n<e.length;n++){let l=e[n],r=l[0],a=l[l.length-1],o=0;if(r.onCurve){var A=null;o=1}else{r=a.onCurve?a:new $69aac16029968692$export$baf26146a414f24a(!1,!1,(r.x+a.x)/2,(r.y+a.y)/2);A=r}t.moveTo(r.x,r.y);for(let e=o;e<l.length;e++){let n=l[e],a=0===e?r:l[e-1];if(a.onCurve&&n.onCurve)t.lineTo(n.x,n.y);else if(a.onCurve&&!n.onCurve)A=n;else if(a.onCurve||n.onCurve){if(a.onCurve||!n.onCurve)throw new Error("Unknown TTF path state");t.quadraticCurveTo(A.x,A.y,n.x,n.y);A=null}else{let e=(a.x+n.x)/2,l=(a.y+n.y)/2;t.quadraticCurveTo(a.x,a.y,e,l);var A=n}}A&&t.quadraticCurveTo(A.x,A.y,r.x,r.y),t.closePath()}return t}constructor(...e){super(...e),_define_property(this,"type","TTF")}},$62cc5109c6101893$export$2e2bcd8739ae039=class extends $f92906be28e61769$export$2e2bcd8739ae039{_getName(){return this._font.CFF2?super._getName():this._font["CFF "].getGlyphName(this.id)}bias(e){return e.length<1240?107:e.length<33900?1131:32768}_getPath(){let e=this._font.CFF2||this._font["CFF "],{stream:t}=e,A=e.topDict.CharStrings[this.id],n=A.offset+A.length;t.pos=A.offset;let l,r,a=new $f43aec954cdfdf21$export$2e2bcd8739ae039,o=[],s=[],i=null,u=0,c=0,h=0,f=!1;this._usedGsubrs=l={},this._usedSubrs=r={};let g=e.globalSubrIndex||[],d=this.bias(g),p=e.privateDictForGlyph(this.id)||{},B=p.Subrs||[],E=this.bias(B),m=e.topDict.vstore&&e.topDict.vstore.itemVariationStore,b=p.vsindex,y=this._font._variationProcessor;function w(){null==i&&(i=o.shift()+p.nominalWidthX)}function Q(){return o.length%2!=0&&w(),u+=o.length>>1,o.length=0}function C(e,t){f&&a.closePath(),a.moveTo(e,t),f=!0}let M=function(){for(;t.pos<n;){let D=t.readUInt8();if(D<32){let $,v,N;switch(D){case 1:case 3:case 18:case 23:Q();break;case 4:o.length>1&&w(),h+=o.shift(),C(c,h);break;case 5:for(;o.length>=2;)c+=o.shift(),h+=o.shift(),a.lineTo(c,h);break;case 6:case 7:for(N=6===D;o.length>=1;)N?c+=o.shift():h+=o.shift(),a.lineTo(c,h),N=!N;break;case 8:for(;o.length>0;){var A=c+o.shift(),i=h+o.shift(),p=A+o.shift(),I=i+o.shift();c=p+o.shift(),h=I+o.shift(),a.bezierCurveTo(A,i,p,I,c,h)}break;case 10:if($=o.pop()+E,v=B[$],v){r[$]=!0;var T=t.pos,x=n;t.pos=v.offset,n=v.offset+v.length,M(),t.pos=T,n=x}break;case 11:if(e.version>=2)break;return;case 14:if(e.version>=2)break;o.length>0&&w(),f&&(a.closePath(),f=!1);break;case 15:if(e.version<2)throw new Error("vsindex operator not supported in CFF v1");b=o.pop();break;case 16:{if(e.version<2)throw new Error("blend operator not supported in CFF v1");if(!y)throw new Error("blend operator in non-variation font");let t=y.getBlendVector(m,b),A=o.pop(),n=A*t.length,l=o.length-n,r=l-A;for(let e=0;e<A;e++){let A=o[r+e];for(let e=0;e<t.length;e++)A+=t[e]*o[l++];o[r+e]=A}for(;n--;)o.pop();break}case 19:case 20:Q(),t.pos+=u+7>>3;break;case 21:o.length>2&&w(),c+=o.shift(),h+=o.shift(),C(c,h);break;case 22:o.length>1&&w(),c+=o.shift(),C(c,h);break;case 24:for(;o.length>=8;){A=c+o.shift(),i=h+o.shift(),p=A+o.shift(),I=i+o.shift();c=p+o.shift(),h=I+o.shift(),a.bezierCurveTo(A,i,p,I,c,h)}c+=o.shift(),h+=o.shift(),a.lineTo(c,h);break;case 25:for(;o.length>=8;)c+=o.shift(),h+=o.shift(),a.lineTo(c,h);A=c+o.shift(),i=h+o.shift(),p=A+o.shift(),I=i+o.shift();c=p+o.shift(),h=I+o.shift(),a.bezierCurveTo(A,i,p,I,c,h);break;case 26:for(o.length%2&&(c+=o.shift());o.length>=4;)A=c,i=h+o.shift(),p=A+o.shift(),I=i+o.shift(),c=p,h=I+o.shift(),a.bezierCurveTo(A,i,p,I,c,h);break;case 27:for(o.length%2&&(h+=o.shift());o.length>=4;)A=c+o.shift(),i=h,p=A+o.shift(),I=i+o.shift(),c=p+o.shift(),h=I,a.bezierCurveTo(A,i,p,I,c,h);break;case 28:o.push(t.readInt16BE());break;case 29:if($=o.pop()+d,v=g[$],v){l[$]=!0;T=t.pos,x=n;t.pos=v.offset,n=v.offset+v.length,M(),t.pos=T,n=x}break;case 30:case 31:for(N=31===D;o.length>=4;)N?(A=c+o.shift(),i=h,p=A+o.shift(),I=i+o.shift(),h=I+o.shift(),c=p+(1===o.length?o.shift():0)):(A=c,i=h+o.shift(),p=A+o.shift(),I=i+o.shift(),c=p+o.shift(),h=I+(1===o.length?o.shift():0)),a.bezierCurveTo(A,i,p,I,c,h),N=!N;break;case 12:switch(D=t.readUInt8(),D){case 3:let e=o.pop(),t=o.pop();o.push(e&&t?1:0);break;case 4:e=o.pop(),t=o.pop(),o.push(e||t?1:0);break;case 5:e=o.pop(),o.push(e?0:1);break;case 9:e=o.pop(),o.push(Math.abs(e));break;case 10:e=o.pop(),t=o.pop(),o.push(e+t);break;case 11:e=o.pop(),t=o.pop(),o.push(e-t);break;case 12:e=o.pop(),t=o.pop(),o.push(e/t);break;case 14:e=o.pop(),o.push(-e);break;case 15:e=o.pop(),t=o.pop(),o.push(e===t?1:0);break;case 18:o.pop();break;case 20:let n=o.pop(),l=o.pop();s[l]=n;break;case 21:l=o.pop(),o.push(s[l]||0);break;case 22:let r=o.pop(),u=o.pop(),f=o.pop(),g=o.pop();o.push(f<=g?r:u);break;case 23:o.push(Math.random());break;case 24:e=o.pop(),t=o.pop(),o.push(e*t);break;case 26:e=o.pop(),o.push(Math.sqrt(e));break;case 27:e=o.pop(),o.push(e,e);break;case 28:e=o.pop(),t=o.pop(),o.push(t,e);break;case 29:l=o.pop(),l<0?l=0:l>o.length-1&&(l=o.length-1),o.push(o[l]);break;case 30:let d=o.pop(),B=o.pop();if(B>=0)for(;B>0;){var F=o[d-1];for(let e=d-2;e>=0;e--)o[e+1]=o[e];o[0]=F,B--}else for(;B<0;){F=o[0];for(let e=0;e<=d;e++)o[e]=o[e+1];o[d-1]=F,B++}break;case 34:A=c+o.shift(),i=h,p=A+o.shift(),I=i+o.shift();let E=p+o.shift(),m=I,b=E+o.shift(),y=m,w=b+o.shift(),Q=y,C=w+o.shift(),M=Q;c=C,h=M,a.bezierCurveTo(A,i,p,I,E,m),a.bezierCurveTo(b,y,w,Q,C,M);break;case 35:let T=[];for(let e=0;e<=5;e++)c+=o.shift(),h+=o.shift(),T.push(c,h);a.bezierCurveTo(...T.slice(0,6)),a.bezierCurveTo(...T.slice(6)),o.shift();break;case 36:A=c+o.shift(),i=h+o.shift(),p=A+o.shift(),I=i+o.shift(),E=p+o.shift(),m=I,b=E+o.shift(),y=m,w=b+o.shift(),Q=y+o.shift(),C=w+o.shift(),M=Q,c=C,h=M,a.bezierCurveTo(A,i,p,I,E,m),a.bezierCurveTo(b,y,w,Q,C,M);break;case 37:let x=c,$=h;T=[];for(let e=0;e<=4;e++)c+=o.shift(),h+=o.shift(),T.push(c,h);Math.abs(c-x)>Math.abs(h-$)?(c+=o.shift(),h=$):(c=x,h+=o.shift()),T.push(c,h),a.bezierCurveTo(...T.slice(0,6)),a.bezierCurveTo(...T.slice(6));break;default:throw new Error(`Unknown op:12 ${D}`)}break;default:throw new Error(`Unknown op:${D}`)}}else if(D<247)o.push(D-139);else if(D<251){var $=t.readUInt8();o.push(256*(D-247)+$+108)}else if(D<255){$=t.readUInt8();o.push(256*-(D-251)-$-108)}else o.push(t.readInt32BE()/65536)}};return M(),f&&a.closePath(),a}constructor(...e){super(...e),_define_property(this,"type","CFF")}},$25d8f049c222084c$var$SBIXImage=new Struct({originX:uint16,originY:uint16,type:new StringT(4),data:new BufferT((e=>e.parent.buflen-e._currentOffset))}),$25d8f049c222084c$export$2e2bcd8739ae039=class extends $69aac16029968692$export$2e2bcd8739ae039{getImageForSize(e){for(let A=0;A<this._font.sbix.imageTables.length;A++){var t=this._font.sbix.imageTables[A];if(t.ppem>=e)break}let A=t.imageOffsets,n=A[this.id],l=A[this.id+1];return n===l?null:(this._font.stream.pos=n,$25d8f049c222084c$var$SBIXImage.decode(this._font.stream,{buflen:l-n}))}render(e,t){let A=this.getImageForSize(t);if(null!=A){let n=t/this._font.unitsPerEm;e.image(A.data,{height:t,x:A.originX,y:(this.bbox.minY-A.originY)*n})}this._font.sbix.flags.renderOutlines&&super.render(e,t)}constructor(...e){super(...e),_define_property(this,"type","SBIX")}},$0d411f0165859681$var$COLRLayer=class{constructor(e,t){this.glyph=e,this.color=t}},$0d411f0165859681$export$2e2bcd8739ae039=class extends $f92906be28e61769$export$2e2bcd8739ae039{_getBBox(){let e=new $f34600ab9d7f70d8$export$2e2bcd8739ae039;for(let t=0;t<this.layers.length;t++){let A=this.layers[t].glyph.bbox;e.addPoint(A.minX,A.minY),e.addPoint(A.maxX,A.maxY)}return e}get layers(){let e=this._font.CPAL,t=this._font.COLR,A=0,n=t.baseGlyphRecord.length-1;for(;A<=n;){let e=A+n>>1;var l=t.baseGlyphRecord[e];if(this.id<l.gid)n=e-1;else{if(!(this.id>l.gid)){var r=l;break}A=e+1}}if(null==r){var a=this._font._getBaseGlyph(this.id);return[new $0d411f0165859681$var$COLRLayer(a,s={red:0,green:0,blue:0,alpha:255})]}let o=[];for(let A=r.firstLayerIndex;A<r.firstLayerIndex+r.numLayers;A++){l=t.layerRecords[A];var s=e.colorRecords[l.paletteIndex];a=this._font._getBaseGlyph(l.gid);o.push(new $0d411f0165859681$var$COLRLayer(a,s))}return o}render(e,t){for(let{glyph:A,color:n}of this.layers)e.fillColor([n.red,n.green,n.blue],n.alpha/255*100),A.render(e,t)}constructor(...e){super(...e),_define_property(this,"type","COLR")}},$0bb840cac04e911b$var$TUPLES_SHARE_POINT_NUMBERS=32768,$0bb840cac04e911b$var$TUPLE_COUNT_MASK=4095,$0bb840cac04e911b$var$EMBEDDED_TUPLE_COORD=32768,$0bb840cac04e911b$var$INTERMEDIATE_TUPLE=16384,$0bb840cac04e911b$var$PRIVATE_POINT_NUMBERS=8192,$0bb840cac04e911b$var$TUPLE_INDEX_MASK=4095,$0bb840cac04e911b$var$POINTS_ARE_WORDS=128,$0bb840cac04e911b$var$POINT_RUN_COUNT_MASK=127,$0bb840cac04e911b$var$DELTAS_ARE_ZERO=128,$0bb840cac04e911b$var$DELTAS_ARE_WORDS=64,$0bb840cac04e911b$var$DELTA_RUN_COUNT_MASK=63,$0bb840cac04e911b$export$2e2bcd8739ae039=class{normalizeCoords(e){let t=[];for(var A=0;A<this.font.fvar.axis.length;A++){let n=this.font.fvar.axis[A];e[A]<n.defaultValue?t.push((e[A]-n.defaultValue+Number.EPSILON)/(n.defaultValue-n.minValue+Number.EPSILON)):t.push((e[A]-n.defaultValue+Number.EPSILON)/(n.maxValue-n.defaultValue+Number.EPSILON))}if(this.font.avar)for(A=0;A<this.font.avar.segment.length;A++){let e=this.font.avar.segment[A];for(let n=0;n<e.correspondence.length;n++){let l=e.correspondence[n];if(n>=1&&t[A]<l.fromCoord){let r=e.correspondence[n-1];t[A]=((t[A]-r.fromCoord)*(l.toCoord-r.toCoord)+Number.EPSILON)/(l.fromCoord-r.fromCoord+Number.EPSILON)+r.toCoord;break}}}return t}transformPoints(e,t){if(!this.font.fvar||!this.font.gvar)return;let{gvar:A}=this.font;if(e>=A.glyphCount)return;let n=A.offsets[e];if(n===A.offsets[e+1])return;let{stream:l}=this.font;if(l.pos=n,l.pos>=l.length)return;let r=l.readUInt16BE(),a=n+l.readUInt16BE();if(r&$0bb840cac04e911b$var$TUPLES_SHARE_POINT_NUMBERS){var o=l.pos;l.pos=a;var s=this.decodePoints();a=l.pos,l.pos=o}let i=t.map((e=>e.copy()));r&=$0bb840cac04e911b$var$TUPLE_COUNT_MASK;for(let e=0;e<r;e++){let e=l.readUInt16BE(),n=l.readUInt16BE();if(n&$0bb840cac04e911b$var$EMBEDDED_TUPLE_COORD){var u=[];for(let e=0;e<A.axisCount;e++)u.push(l.readInt16BE()/16384)}else{if((n&$0bb840cac04e911b$var$TUPLE_INDEX_MASK)>=A.globalCoordCount)throw new Error("Invalid gvar table");u=A.globalCoords[n&$0bb840cac04e911b$var$TUPLE_INDEX_MASK]}if(n&$0bb840cac04e911b$var$INTERMEDIATE_TUPLE){var c=[];for(let e=0;e<A.axisCount;e++)c.push(l.readInt16BE()/16384);var h=[];for(let e=0;e<A.axisCount;e++)h.push(l.readInt16BE()/16384)}let r=this.tupleFactor(n,u,c,h);if(0===r){a+=e;continue}o=l.pos;if(l.pos=a,n&$0bb840cac04e911b$var$PRIVATE_POINT_NUMBERS)var f=this.decodePoints();else f=s;let d=0===f.length?t.length:f.length,p=this.decodeDeltas(d),B=this.decodeDeltas(d);if(0===f.length)for(let e=0;e<t.length;e++){var g=t[e];g.x+=Math.round(p[e]*r),g.y+=Math.round(B[e]*r)}else{let e=i.map((e=>e.copy())),A=t.map((()=>!1));for(let n=0;n<f.length;n++){let l=f[n];if(l<t.length){let t=e[l];A[l]=!0,t.x+=Math.round(p[n]*r),t.y+=Math.round(B[n]*r)}}this.interpolateMissingDeltas(e,i,A);for(let A=0;A<t.length;A++){let n=e[A].x-i[A].x,l=e[A].y-i[A].y;t[A].x+=n,t[A].y+=l}}a+=e,l.pos=o}}decodePoints(){let e=this.font.stream,t=e.readUInt8();t&$0bb840cac04e911b$var$POINTS_ARE_WORDS&&(t=(t&$0bb840cac04e911b$var$POINT_RUN_COUNT_MASK)<<8|e.readUInt8());let A=new Uint16Array(t),n=0,l=0;for(;n<t;){let r=e.readUInt8(),a=1+(r&$0bb840cac04e911b$var$POINT_RUN_COUNT_MASK),o=r&$0bb840cac04e911b$var$POINTS_ARE_WORDS?e.readUInt16:e.readUInt8;for(let r=0;r<a&&n<t;r++)l+=o.call(e),A[n++]=l}return A}decodeDeltas(e){let t=this.font.stream,A=0,n=new Int16Array(e);for(;A<e;){let l=t.readUInt8(),r=1+(l&$0bb840cac04e911b$var$DELTA_RUN_COUNT_MASK);if(l&$0bb840cac04e911b$var$DELTAS_ARE_ZERO)A+=r;else{let a=l&$0bb840cac04e911b$var$DELTAS_ARE_WORDS?t.readInt16BE:t.readInt8;for(let l=0;l<r&&A<e;l++)n[A++]=a.call(t)}}return n}tupleFactor(e,t,A,n){let l=this.normalizedCoords,{gvar:r}=this.font,a=1;for(let o=0;o<r.axisCount;o++)if(0!==t[o]){if(0===l[o])return 0;if(e&$0bb840cac04e911b$var$INTERMEDIATE_TUPLE){if(l[o]<A[o]||l[o]>n[o])return 0;a=l[o]<t[o]?a*(l[o]-A[o]+Number.EPSILON)/(t[o]-A[o]+Number.EPSILON):a*(n[o]-l[o]+Number.EPSILON)/(n[o]-t[o]+Number.EPSILON)}else{if(l[o]<Math.min(0,t[o])||l[o]>Math.max(0,t[o]))return 0;a=(a*l[o]+Number.EPSILON)/(t[o]+Number.EPSILON)}}return a}interpolateMissingDeltas(e,t,A){if(0===e.length)return;let n=0;for(;n<e.length;){let l=n,r=n,a=e[r];for(;!a.endContour;)a=e[++r];for(;n<=r&&!A[n];)n++;if(n>r)continue;let o=n,s=n;for(n++;n<=r;)A[n]&&(this.deltaInterpolate(s+1,n-1,s,n,t,e),s=n),n++;s===o?this.deltaShift(l,r,s,t,e):(this.deltaInterpolate(s+1,r,s,o,t,e),o>0&&this.deltaInterpolate(l,o-1,s,o,t,e)),n=r+1}}deltaInterpolate(e,t,A,n,l,r){if(e>t)return;let a=["x","y"];for(let s=0;s<a.length;s++){let i=a[s];if(l[A][i]>l[n][i]){var o=A;A=n,n=o}let u=l[A][i],c=l[n][i],h=r[A][i],f=r[n][i];if(u!==c||h===f){let A=u===c?0:(f-h)/(c-u);for(let n=e;n<=t;n++){let e=l[n][i];e<=u?e+=h-u:e>=c?e+=f-c:e=h+(e-u)*A,r[n][i]=e}}}}deltaShift(e,t,A,n,l){let r=l[A].x-n[A].x,a=l[A].y-n[A].y;if(0!==r||0!==a)for(let n=e;n<=t;n++)n!==A&&(l[n].x+=r,l[n].y+=a)}getAdvanceAdjustment(e,t){let A,n;if(t.advanceWidthMapping){let l=e;l>=t.advanceWidthMapping.mapCount&&(l=t.advanceWidthMapping.mapCount-1);t.advanceWidthMapping.entryFormat;({outerIndex:A,innerIndex:n}=t.advanceWidthMapping.mapData[l])}else A=0,n=e;return this.getDelta(t.itemVariationStore,A,n)}getDelta(e,t,A){if(t>=e.itemVariationData.length)return 0;let n=e.itemVariationData[t];if(A>=n.deltaSets.length)return 0;let l=n.deltaSets[A],r=this.getBlendVector(e,t),a=0;for(let e=0;e<n.regionIndexCount;e++)a+=l.deltas[e]*r[e];return a}getBlendVector(e,t){let A=e.itemVariationData[t];if(this.blendVectors.has(A))return this.blendVectors.get(A);let n=this.normalizedCoords,l=[];for(let t=0;t<A.regionIndexCount;t++){let r=1,a=A.regionIndexes[t],o=e.variationRegionList.variationRegions[a];for(let e=0;e<o.length;e++){let t,A=o[e];t=A.startCoord>A.peakCoord||A.peakCoord>A.endCoord||A.startCoord<0&&A.endCoord>0&&0!==A.peakCoord||0===A.peakCoord?1:n[e]<A.startCoord||n[e]>A.endCoord?0:n[e]===A.peakCoord?1:n[e]<A.peakCoord?(n[e]-A.startCoord+Number.EPSILON)/(A.peakCoord-A.startCoord+Number.EPSILON):(A.endCoord-n[e]+Number.EPSILON)/(A.endCoord-A.peakCoord+Number.EPSILON),r*=t}l[t]=r}return this.blendVectors.set(A,l),l}constructor(e,t){this.font=e,this.normalizedCoords=this.normalizeCoords(t),this.blendVectors=new Map}},$5cc7476da92df375$var$resolved=Promise.resolve(),$5cc7476da92df375$export$2e2bcd8739ae039=class{includeGlyph(e){return"object"==typeof e&&(e=e.id),null==this.mapping[e]&&(this.glyphs.push(e),this.mapping[e]=this.glyphs.length-1),this.mapping[e]}constructor(e){this.font=e,this.glyphs=[],this.mapping={},this.includeGlyph(0)}},$807e58506be70005$var$ON_CURVE=1,$807e58506be70005$var$X_SHORT_VECTOR=2,$807e58506be70005$var$Y_SHORT_VECTOR=4,$807e58506be70005$var$REPEAT=8,$807e58506be70005$var$SAME_X=16,$807e58506be70005$var$SAME_Y=32,$807e58506be70005$var$Point=class{static size(e){return e>=0&&e<=255?1:2}static encode(e,t){t>=0&&t<=255?e.writeUInt8(t):e.writeInt16BE(t)}},$807e58506be70005$var$Glyf=new Struct({numberOfContours:int16,xMin:int16,yMin:int16,xMax:int16,yMax:int16,endPtsOfContours:new ArrayT(uint16,"numberOfContours"),instructions:new ArrayT(uint8,uint16),flags:new ArrayT(uint8,0),xPoints:new ArrayT($807e58506be70005$var$Point,0),yPoints:new ArrayT($807e58506be70005$var$Point,0)}),$807e58506be70005$export$2e2bcd8739ae039=class{encodeSimple(e,t=[]){let A=[],n=[],l=[],r=[],a=0,o=0,s=0,i=0,u=0;for(let t=0;t<e.commands.length;t++){let c=e.commands[t];for(let A=0;A<c.args.length;A+=2){let h=c.args[A],f=c.args[A+1],g=0;if("quadraticCurveTo"===c.command&&2===A){let A=e.commands[t+1];if(A&&"quadraticCurveTo"===A.command){let e=(o+A.args[0])/2,t=(s+A.args[1])/2;if(h===e&&f===t)continue}}"quadraticCurveTo"===c.command&&0===A||(g|=$807e58506be70005$var$ON_CURVE),g=this._encodePoint(h,o,n,g,$807e58506be70005$var$X_SHORT_VECTOR,$807e58506be70005$var$SAME_X),g=this._encodePoint(f,s,l,g,$807e58506be70005$var$Y_SHORT_VECTOR,$807e58506be70005$var$SAME_Y),g===i&&a<255?(r[r.length-1]|=$807e58506be70005$var$REPEAT,a++):(a>0&&(r.push(a),a=0),r.push(g),i=g),o=h,s=f,u++}"closePath"===c.command&&A.push(u-1)}e.commands.length>1&&"closePath"!==e.commands[e.commands.length-1].command&&A.push(u-1);let c=e.bbox,h={numberOfContours:A.length,xMin:c.minX,yMin:c.minY,xMax:c.maxX,yMax:c.maxY,endPtsOfContours:A,instructions:t,flags:r,xPoints:n,yPoints:l},f=$807e58506be70005$var$Glyf.size(h),g=4-f%4,d=new EncodeStream(f+g);return $807e58506be70005$var$Glyf.encode(d,h),0!==g&&d.fill(0,g),d.buffer}_encodePoint(e,t,A,n,l,r){let a=e-t;return e===t?n|=r:(-255<=a&&a<=255&&(n|=l,a<0?a=-a:n|=r),A.push(a)),n}},$4abbb6a5dbdc441a$export$2e2bcd8739ae039=class extends $5cc7476da92df375$export$2e2bcd8739ae039{_addGlyph(e){let t=this.font.getGlyph(e),A=t._decode(),n=this.font.loca.offsets[e],l=this.font.loca.offsets[e+1],r=this.font._getTableStream("glyf");r.pos+=n;let a=r.readBuffer(l-n);if(A&&A.numberOfContours<0){a=new Uint8Array(a);let t=new DataView(a.buffer);for(let n of A.components)e=this.includeGlyph(n.glyphID),t.setUint16(n.pos,e)}else A&&this.font._variationProcessor&&(a=this.glyphEncoder.encodeSimple(t.path,A.instructions));return this.glyf.push(a),this.loca.offsets.push(this.offset),this.hmtx.metrics.push({advance:t.advanceWidth,bearing:t._getMetrics().leftBearing}),this.offset+=a.length,this.glyf.length-1}encode(){this.glyf=[],this.offset=0,this.loca={offsets:[],version:this.font.loca.version},this.hmtx={metrics:[],bearings:[]};let e=0;for(;e<this.glyphs.length;)this._addGlyph(this.glyphs[e++]);let t=(0,import_clone2.default)(this.font.maxp);t.numGlyphs=this.glyf.length,this.loca.offsets.push(this.offset);let A=(0,import_clone2.default)(this.font.head);A.indexToLocFormat=this.loca.version;let n=(0,import_clone2.default)(this.font.hhea);return n.numberOfMetrics=this.hmtx.metrics.length,$816c07a04b6dba87$export$2e2bcd8739ae039.toBuffer({tables:{head:A,hhea:n,loca:this.loca,maxp:t,"cvt ":this.font["cvt "],prep:this.font.prep,glyf:this.glyf,hmtx:this.hmtx,fpgm:this.font.fpgm}})}constructor(e){super(e),this.glyphEncoder=new $807e58506be70005$export$2e2bcd8739ae039}},$001d739428a71d5a$export$2e2bcd8739ae039=class extends $5cc7476da92df375$export$2e2bcd8739ae039{subsetCharstrings(){this.charstrings=[];let e={};for(let t of this.glyphs){this.charstrings.push(this.cff.getCharString(t));let A=this.font.getGlyph(t);A.path;for(let t in A._usedGsubrs)e[t]=!0}this.gsubrs=this.subsetSubrs(this.cff.globalSubrIndex,e)}subsetSubrs(e,t){let A=[];for(let n=0;n<e.length;n++){let l=e[n];t[n]?(this.cff.stream.pos=l.offset,A.push(this.cff.stream.readBuffer(l.length))):A.push(new Uint8Array([11]))}return A}subsetFontdict(e){e.FDArray=[],e.FDSelect={version:0,fds:[]};let t={},A=[],n={};for(let l of this.glyphs){let r=this.cff.fdForGlyph(l);if(null==r)continue;t[r]||(e.FDArray.push(Object.assign({},this.cff.topDict.FDArray[r])),A.push({}),n[r]=e.FDArray.length-1),t[r]=!0,e.FDSelect.fds.push(n[r]);let a=this.font.getGlyph(l);a.path;for(let e in a._usedSubrs)A[n[r]][e]=!0}for(let t=0;t<e.FDArray.length;t++){let n=e.FDArray[t];delete n.FontName,n.Private&&n.Private.Subrs&&(n.Private=Object.assign({},n.Private),n.Private.Subrs=this.subsetSubrs(n.Private.Subrs,A[t]))}}createCIDFontdict(e){let t={};for(let e of this.glyphs){let A=this.font.getGlyph(e);A.path;for(let e in A._usedSubrs)t[e]=!0}let A=Object.assign({},this.cff.topDict.Private);return this.cff.topDict.Private&&this.cff.topDict.Private.Subrs&&(A.Subrs=this.subsetSubrs(this.cff.topDict.Private.Subrs,t)),e.FDArray=[{Private:A}],e.FDSelect={version:3,nRanges:1,ranges:[{first:0,fd:0}],sentinel:this.charstrings.length}}addString(e){return e?(this.strings||(this.strings=[]),this.strings.push(e),$229224aec43783c5$export$2e2bcd8739ae039.length+this.strings.length-1):null}encode(){this.subsetCharstrings();let e={version:this.charstrings.length>255?2:1,ranges:[{first:1,nLeft:this.charstrings.length-2}]},t=Object.assign({},this.cff.topDict);t.Private=null,t.charset=e,t.Encoding=null,t.CharStrings=this.charstrings;for(let e of["version","Notice","Copyright","FullName","FamilyName","Weight","PostScript","BaseFontName","FontName"])t[e]=this.addString(this.cff.string(t[e]));t.ROS=[this.addString("Adobe"),this.addString("Identity"),0],t.CIDCount=this.charstrings.length,this.cff.isCIDFont?this.subsetFontdict(t):this.createCIDFontdict(t);let A={version:1,hdrSize:this.cff.hdrSize,offSize:4,header:this.cff.header,nameIndex:[this.cff.postscriptName],topDictIndex:[t],stringIndex:this.strings,globalSubrIndex:this.gsubrs};return $b84fd3dd9d8eddb2$export$2e2bcd8739ae039.toBuffer(A)}constructor(e){if(super(e),this.cff=this.font["CFF "],!this.cff)throw new Error("Not a CFF Font")}},$4c1709dee528ea76$export$2e2bcd8739ae039=class e{static probe(e){let t=$12727730ddfc8bfe$export$3d28c1996ced1f14.decode(e.slice(0,4));return"true"===t||"OTTO"===t||t===String.fromCharCode(0,1,0,0)}setDefaultLanguage(e=null){this.defaultLanguage=e}_getTable(e){if(!(e.tag in this._tables))try{this._tables[e.tag]=this._decodeTable(e)}catch(t){$d636bc798e7178db$export$bd5c5d8b8dcafd78&&(console.error(`Error decoding table ${e.tag}`),console.error(t.stack))}return this._tables[e.tag]}_getTableStream(e){let t=this.directory.tables[e];return t?(this.stream.pos=t.offset,this.stream):null}_decodeDirectory(){return this.directory=$816c07a04b6dba87$export$2e2bcd8739ae039.decode(this.stream,{_startOffset:0})}_decodeTable(e){let t=this.stream.pos,A=this._getTableStream(e.tag),n=$c3395722bea751e2$export$2e2bcd8739ae039[e.tag].decode(A,this,e.length);return this.stream.pos=t,n}getName(e,t=this.defaultLanguage||$d636bc798e7178db$export$42940898df819940){let A=this.name&&this.name.records[e];return A&&(A[t]||A[this.defaultLanguage]||A[$d636bc798e7178db$export$42940898df819940]||A.en||A[Object.keys(A)[0]])||null}get postscriptName(){return this.getName("postscriptName")}get fullName(){return this.getName("fullName")}get familyName(){return this.getName("fontFamily")}get subfamilyName(){return this.getName("fontSubfamily")}get copyright(){return this.getName("copyright")}get version(){return this.getName("version")}get ascent(){return this.hhea.ascent}get descent(){return this.hhea.descent}get lineGap(){return this.hhea.lineGap}get underlinePosition(){return this.post.underlinePosition}get underlineThickness(){return this.post.underlineThickness}get italicAngle(){return this.post.italicAngle}get capHeight(){let e=this["OS/2"];return e?e.capHeight:this.ascent}get xHeight(){let e=this["OS/2"];return e?e.xHeight:0}get numGlyphs(){return this.maxp.numGlyphs}get unitsPerEm(){return this.head.unitsPerEm}get bbox(){return Object.freeze(new $f34600ab9d7f70d8$export$2e2bcd8739ae039(this.head.xMin,this.head.yMin,this.head.xMax,this.head.yMax))}get _cmapProcessor(){return new $f08dd41ef10b694c$export$2e2bcd8739ae039(this.cmap)}get characterSet(){return this._cmapProcessor.getCharacterSet()}hasGlyphForCodePoint(e){return!!this._cmapProcessor.lookup(e)}glyphForCodePoint(e){return this.getGlyph(this._cmapProcessor.lookup(e),[e])}glyphsForString(e){let t=[],A=e.length,n=0,l=-1,r=-1;for(;n<=A;){let a=0,o=0;if(n<A){if(a=e.charCodeAt(n++),55296<=a&&a<=56319&&n<A){let t=e.charCodeAt(n);56320<=t&&t<=57343&&(n++,a=((1023&a)<<10)+(1023&t)+65536)}o=65024<=a&&a<=65039||917760<=a&&a<=917999?1:0}else n++;0===r&&1===o?t.push(this.getGlyph(this._cmapProcessor.lookup(l,a),[l,a])):0===r&&0===o&&t.push(this.glyphForCodePoint(l)),l=a,r=o}return t}get _layoutEngine(){return new $4c0a7fa5df7a9ab1$export$2e2bcd8739ae039(this)}layout(e,t,A,n,l){return this._layoutEngine.layout(e,t,A,n,l)}stringsForGlyph(e){return this._layoutEngine.stringsForGlyph(e)}get availableFeatures(){return this._layoutEngine.getAvailableFeatures()}getAvailableFeatures(e,t){return this._layoutEngine.getAvailableFeatures(e,t)}_getBaseGlyph(e,t=[]){return this._glyphs[e]||(this.directory.tables.glyf?this._glyphs[e]=new $69aac16029968692$export$2e2bcd8739ae039(e,t,this):(this.directory.tables["CFF "]||this.directory.tables.CFF2)&&(this._glyphs[e]=new $62cc5109c6101893$export$2e2bcd8739ae039(e,t,this))),this._glyphs[e]||null}getGlyph(e,t=[]){return this._glyphs[e]||(this.directory.tables.sbix?this._glyphs[e]=new $25d8f049c222084c$export$2e2bcd8739ae039(e,t,this):this.directory.tables.COLR&&this.directory.tables.CPAL?this._glyphs[e]=new $0d411f0165859681$export$2e2bcd8739ae039(e,t,this):this._getBaseGlyph(e,t)),this._glyphs[e]||null}createSubset(){return this.directory.tables["CFF "]?new $001d739428a71d5a$export$2e2bcd8739ae039(this):new $4abbb6a5dbdc441a$export$2e2bcd8739ae039(this)}get variationAxes(){let e={};if(!this.fvar)return e;for(let t of this.fvar.axis)e[t.axisTag.trim()]={name:t.name.en,min:t.minValue,default:t.defaultValue,max:t.maxValue};return e}get namedVariations(){let e={};if(!this.fvar)return e;for(let t of this.fvar.instance){let A={};for(let e=0;e<this.fvar.axis.length;e++){A[this.fvar.axis[e].axisTag.trim()]=t.coord[e]}e[t.name.en]=A}return e}getVariation(t){if(!this.directory.tables.fvar||!(this.directory.tables.gvar&&this.directory.tables.glyf||this.directory.tables.CFF2))throw new Error("Variations require a font with the fvar, gvar and glyf, or CFF2 tables.");if("string"==typeof t&&(t=this.namedVariations[t]),"object"!=typeof t)throw new Error("Variation settings must be either a variation name or settings object.");let A=this.fvar.axis.map(((e,A)=>{let n=e.axisTag.trim();return n in t?Math.max(e.minValue,Math.min(e.maxValue,t[n])):e.defaultValue})),n=new DecodeStream(this.stream.buffer);n.pos=this._directoryPos;let l=new e(n,A);return l._tables=this._tables,l}get _variationProcessor(){if(!this.fvar)return null;let e=this.variationCoords;return e||this.CFF2?(e||(e=this.fvar.axis.map((e=>e.defaultValue))),new $0bb840cac04e911b$export$2e2bcd8739ae039(this,e)):null}getFont(e){return this.getVariation(e)}constructor(e,t=null){_define_property(this,"type","TTF"),this.defaultLanguage=null,this.stream=e,this.variationCoords=t,this._directoryPos=this.stream.pos,this._tables={},this._glyphs={},this._decodeDirectory();for(let e in this.directory.tables){let t=this.directory.tables[e];$c3395722bea751e2$export$2e2bcd8739ae039[e]&&t.length>0&&Object.defineProperty(this,e,{get:this._getTable.bind(this,t)})}}};__decorate([$e71565f2ce09cb6b$export$69a3209f1a06c04d],$4c1709dee528ea76$export$2e2bcd8739ae039.prototype,"bbox",null),__decorate([$e71565f2ce09cb6b$export$69a3209f1a06c04d],$4c1709dee528ea76$export$2e2bcd8739ae039.prototype,"_cmapProcessor",null),__decorate([$e71565f2ce09cb6b$export$69a3209f1a06c04d],$4c1709dee528ea76$export$2e2bcd8739ae039.prototype,"characterSet",null),__decorate([$e71565f2ce09cb6b$export$69a3209f1a06c04d],$4c1709dee528ea76$export$2e2bcd8739ae039.prototype,"_layoutEngine",null),__decorate([$e71565f2ce09cb6b$export$69a3209f1a06c04d],$4c1709dee528ea76$export$2e2bcd8739ae039.prototype,"variationAxes",null),__decorate([$e71565f2ce09cb6b$export$69a3209f1a06c04d],$4c1709dee528ea76$export$2e2bcd8739ae039.prototype,"namedVariations",null),__decorate([$e71565f2ce09cb6b$export$69a3209f1a06c04d],$4c1709dee528ea76$export$2e2bcd8739ae039.prototype,"_variationProcessor",null);var $c1726355ecc5b889$var$WOFFDirectoryEntry=new Struct({tag:new StringT(4),offset:new Pointer(uint32,"void",{type:"global"}),compLength:uint32,length:uint32,origChecksum:uint32}),$c1726355ecc5b889$var$WOFFDirectory=new Struct({tag:new StringT(4),flavor:uint32,length:uint32,numTables:uint16,reserved:new Reserved(uint16),totalSfntSize:uint32,majorVersion:uint16,minorVersion:uint16,metaOffset:uint32,metaLength:uint32,metaOrigLength:uint32,privOffset:uint32,privLength:uint32,tables:new ArrayT($c1726355ecc5b889$var$WOFFDirectoryEntry,"numTables")});$c1726355ecc5b889$var$WOFFDirectory.process=function(){let e={};for(let t of this.tables)e[t.tag]=t;this.tables=e};var $c1726355ecc5b889$export$2e2bcd8739ae039=$c1726355ecc5b889$var$WOFFDirectory,$760785214b9fc52c$export$2e2bcd8739ae039=class extends $4c1709dee528ea76$export$2e2bcd8739ae039{static probe(e){return"wOFF"===$12727730ddfc8bfe$export$3d28c1996ced1f14.decode(e.slice(0,4))}_decodeDirectory(){this.directory=$c1726355ecc5b889$export$2e2bcd8739ae039.decode(this.stream,{_startOffset:0})}_getTableStream(e){let t=this.directory.tables[e];if(t){if(this.stream.pos=t.offset,t.compLength<t.length){this.stream.pos+=2;let e=new Uint8Array(t.length),A=(0,import_tiny_inflate.default)(this.stream.readBuffer(t.compLength-2),e);return new DecodeStream(A)}return this.stream}return null}constructor(...e){super(...e),_define_property(this,"type","WOFF")}},$8046190c9f1ad19e$export$2e2bcd8739ae039=class extends $69aac16029968692$export$2e2bcd8739ae039{_decode(){return this._font._transformedGlyphs[this.id]}_getCBox(){return this.path.bbox}constructor(...e){super(...e),_define_property(this,"type","WOFF2")}},$c28ec7bbb3b8de3a$var$Base128={decode(e){let t=0,A=[0,1,2,3,4];for(let n=0;n<A.length;n++){let A=e.readUInt8();if(3758096384&t)throw new Error("Overflow");if(t=t<<7|127&A,!(128&A))return t}throw new Error("Bad base 128 number")}},$c28ec7bbb3b8de3a$var$knownTags=["cmap","head","hhea","hmtx","maxp","name","OS/2","post","cvt ","fpgm","glyf","loca","prep","CFF ","VORG","EBDT","EBLC","gasp","hdmx","kern","LTSH","PCLT","VDMX","vhea","vmtx","BASE","GDEF","GPOS","GSUB","EBSC","JSTF","MATH","CBDT","CBLC","COLR","CPAL","SVG ","sbix","acnt","avar","bdat","bloc","bsln","cvar","fdsc","feat","fmtx","fvar","gvar","hsty","just","lcar","mort","morx","opbd","prop","trak","Zapf","Silf","Glat","Gloc","Feat","Sill"],$c28ec7bbb3b8de3a$var$WOFF2DirectoryEntry=new Struct({flags:uint8,customTag:new Optional(new StringT(4),(e=>!(63&~e.flags))),tag:e=>e.customTag||$c28ec7bbb3b8de3a$var$knownTags[63&e.flags],length:$c28ec7bbb3b8de3a$var$Base128,transformVersion:e=>e.flags>>>6&3,transformed:e=>"glyf"===e.tag||"loca"===e.tag?0===e.transformVersion:0!==e.transformVersion,transformLength:new Optional($c28ec7bbb3b8de3a$var$Base128,(e=>e.transformed))}),$c28ec7bbb3b8de3a$var$WOFF2Directory=new Struct({tag:new StringT(4),flavor:uint32,length:uint32,numTables:uint16,reserved:new Reserved(uint16),totalSfntSize:uint32,totalCompressedSize:uint32,majorVersion:uint16,minorVersion:uint16,metaOffset:uint32,metaLength:uint32,metaOrigLength:uint32,privOffset:uint32,privLength:uint32,tables:new ArrayT($c28ec7bbb3b8de3a$var$WOFF2DirectoryEntry,"numTables")});$c28ec7bbb3b8de3a$var$WOFF2Directory.process=function(){let e={};for(let t=0;t<this.tables.length;t++){let A=this.tables[t];e[A.tag]=A}return this.tables=e};var $c28ec7bbb3b8de3a$export$2e2bcd8739ae039=$c28ec7bbb3b8de3a$var$WOFF2Directory,$21ee218f84ac7f32$export$2e2bcd8739ae039=class extends $4c1709dee528ea76$export$2e2bcd8739ae039{static probe(e){return"wOF2"===$12727730ddfc8bfe$export$3d28c1996ced1f14.decode(e.slice(0,4))}_decodeDirectory(){this.directory=$c28ec7bbb3b8de3a$export$2e2bcd8739ae039.decode(this.stream),this._dataPos=this.stream.pos}_decompress(){if(!this._decompressed){this.stream.pos=this._dataPos;let e=this.stream.readBuffer(this.directory.totalCompressedSize),t=0;for(let e in this.directory.tables){let A=this.directory.tables[e];A.offset=t,t+=null!=A.transformLength?A.transformLength:A.length}let A=(0,import_decompress.default)(e,t);if(!A)throw new Error("Error decoding compressed data in WOFF2");this.stream=new DecodeStream(A),this._decompressed=!0}}_decodeTable(e){return this._decompress(),super._decodeTable(e)}_getBaseGlyph(e,t=[]){if(!this._glyphs[e])return this.directory.tables.glyf&&this.directory.tables.glyf.transformed?(this._transformedGlyphs||this._transformGlyfTable(),this._glyphs[e]=new $8046190c9f1ad19e$export$2e2bcd8739ae039(e,t,this)):super._getBaseGlyph(e,t)}_transformGlyfTable(){this._decompress(),this.stream.pos=this.directory.tables.glyf.offset;let e=$21ee218f84ac7f32$var$GlyfTable.decode(this.stream),t=[];for(let A=0;A<e.numGlyphs;A++){let A={},n=e.nContours.readInt16BE();if(A.numberOfContours=n,n>0){let t=[],l=0;for(let A=0;A<n;A++){l+=$21ee218f84ac7f32$var$read255UInt16(e.nPoints),t.push(l)}A.points=$21ee218f84ac7f32$var$decodeTriplet(e.flags,e.glyphs,l);for(let e=0;e<n;e++)A.points[t[e]-1].endContour=!0;$21ee218f84ac7f32$var$read255UInt16(e.glyphs)}else if(n<0){if($69aac16029968692$export$2e2bcd8739ae039.prototype._decodeComposite.call({_font:this},A,e.composites))$21ee218f84ac7f32$var$read255UInt16(e.glyphs)}t.push(A)}this._transformedGlyphs=t}constructor(...e){super(...e),_define_property(this,"type","WOFF2")}},$21ee218f84ac7f32$var$Substream=class{decode(e,t){return new DecodeStream(this._buf.decode(e,t))}constructor(e){this.length=e,this._buf=new BufferT(e)}},$21ee218f84ac7f32$var$GlyfTable=new Struct({version:uint32,numGlyphs:uint16,indexFormat:uint16,nContourStreamSize:uint32,nPointsStreamSize:uint32,flagStreamSize:uint32,glyphStreamSize:uint32,compositeStreamSize:uint32,bboxStreamSize:uint32,instructionStreamSize:uint32,nContours:new $21ee218f84ac7f32$var$Substream("nContourStreamSize"),nPoints:new $21ee218f84ac7f32$var$Substream("nPointsStreamSize"),flags:new $21ee218f84ac7f32$var$Substream("flagStreamSize"),glyphs:new $21ee218f84ac7f32$var$Substream("glyphStreamSize"),composites:new $21ee218f84ac7f32$var$Substream("compositeStreamSize"),bboxes:new $21ee218f84ac7f32$var$Substream("bboxStreamSize"),instructions:new $21ee218f84ac7f32$var$Substream("instructionStreamSize")}),$21ee218f84ac7f32$var$WORD_CODE=253,$21ee218f84ac7f32$var$ONE_MORE_BYTE_CODE2=254,$21ee218f84ac7f32$var$ONE_MORE_BYTE_CODE1=255,$21ee218f84ac7f32$var$LOWEST_U_CODE=253;function $21ee218f84ac7f32$var$read255UInt16(e){let t=e.readUInt8();return t===$21ee218f84ac7f32$var$WORD_CODE?e.readUInt16BE():t===$21ee218f84ac7f32$var$ONE_MORE_BYTE_CODE1?e.readUInt8()+$21ee218f84ac7f32$var$LOWEST_U_CODE:t===$21ee218f84ac7f32$var$ONE_MORE_BYTE_CODE2?e.readUInt8()+2*$21ee218f84ac7f32$var$LOWEST_U_CODE:t}function $21ee218f84ac7f32$var$withSign(e,t){return 1&e?t:-t}function $21ee218f84ac7f32$var$decodeTriplet(e,t,A){let n,l=n=0,r=[];for(let s=0;s<A;s++){let A=0,s=0,i=e.readUInt8(),u=!(i>>7);if(i&=127,i<10)A=0,s=$21ee218f84ac7f32$var$withSign(i,((14&i)<<7)+t.readUInt8());else if(i<20)A=$21ee218f84ac7f32$var$withSign(i,((i-10&14)<<7)+t.readUInt8()),s=0;else if(i<84){A=$21ee218f84ac7f32$var$withSign(i,1+(48&(a=i-20))+((o=t.readUInt8())>>4)),s=$21ee218f84ac7f32$var$withSign(i>>1,1+((12&a)<<2)+(15&o))}else if(i<120){var a;A=$21ee218f84ac7f32$var$withSign(i,1+((a=i-84)/12<<8)+t.readUInt8()),s=$21ee218f84ac7f32$var$withSign(i>>1,1+(a%12>>2<<8)+t.readUInt8())}else if(i<124){var o=t.readUInt8();let e=t.readUInt8();A=$21ee218f84ac7f32$var$withSign(i,(o<<4)+(e>>4)),s=$21ee218f84ac7f32$var$withSign(i>>1,((15&e)<<8)+t.readUInt8())}else A=$21ee218f84ac7f32$var$withSign(i,t.readUInt16BE()),s=$21ee218f84ac7f32$var$withSign(i>>1,t.readUInt16BE());l+=A,n+=s,r.push(new $69aac16029968692$export$baf26146a414f24a(u,!1,l,n))}return r}var $cd5853a56c68fec7$var$TTCHeader=new VersionedStruct(uint32,{65536:{numFonts:uint32,offsets:new ArrayT(uint32,"numFonts")},131072:{numFonts:uint32,offsets:new ArrayT(uint32,"numFonts"),dsigTag:uint32,dsigLength:uint32,dsigOffset:uint32}}),$cd5853a56c68fec7$export$2e2bcd8739ae039=class{static probe(e){return"ttcf"===$12727730ddfc8bfe$export$3d28c1996ced1f14.decode(e.slice(0,4))}getFont(e){for(let t of this.header.offsets){let A=new DecodeStream(this.stream.buffer);A.pos=t;let n=new $4c1709dee528ea76$export$2e2bcd8739ae039(A);if(n.postscriptName===e||n.postscriptName instanceof Uint8Array&&e instanceof Uint8Array&&n.postscriptName.every(((t,A)=>e[A]===t)))return n}return null}get fonts(){let e=[];for(let t of this.header.offsets){let A=new DecodeStream(this.stream.buffer);A.pos=t,e.push(new $4c1709dee528ea76$export$2e2bcd8739ae039(A))}return e}constructor(e){if(_define_property(this,"type","TTC"),this.stream=e,"ttcf"!==e.readString(4))throw new Error("Not a TrueType collection");this.header=$cd5853a56c68fec7$var$TTCHeader.decode(e)}},$05f49f930186144e$var$DFontName=new StringT(uint8),$05f49f930186144e$var$DFontData=new Struct({len:uint32,buf:new BufferT("len")}),$05f49f930186144e$var$Ref=new Struct({id:uint16,nameOffset:int16,attr:uint8,dataOffset:uint24,handle:uint32}),$05f49f930186144e$var$Type=new Struct({name:new StringT(4),maxTypeIndex:uint16,refList:new Pointer(uint16,new ArrayT($05f49f930186144e$var$Ref,(e=>e.maxTypeIndex+1)),{type:"parent"})}),$05f49f930186144e$var$TypeList=new Struct({length:uint16,types:new ArrayT($05f49f930186144e$var$Type,(e=>e.length+1))}),$05f49f930186144e$var$DFontMap=new Struct({reserved:new Reserved(uint8,24),typeList:new Pointer(uint16,$05f49f930186144e$var$TypeList),nameListOffset:new Pointer(uint16,"void")}),$05f49f930186144e$var$DFontHeader=new Struct({dataOffset:uint32,map:new Pointer(uint32,$05f49f930186144e$var$DFontMap),dataLength:uint32,mapLength:uint32}),$05f49f930186144e$export$2e2bcd8739ae039=class{static probe(e){let t=new DecodeStream(e);try{var A=$05f49f930186144e$var$DFontHeader.decode(t)}catch(e){return!1}for(let e of A.map.typeList.types)if("sfnt"===e.name)return!0;return!1}getFont(e){if(!this.sfnt)return null;for(let t of this.sfnt.refList){let A=this.header.dataOffset+t.dataOffset+4,n=new DecodeStream(this.stream.buffer.slice(A)),l=new $4c1709dee528ea76$export$2e2bcd8739ae039(n);if(l.postscriptName===e||l.postscriptName instanceof Uint8Array&&e instanceof Uint8Array&&l.postscriptName.every(((t,A)=>e[A]===t)))return l}return null}get fonts(){let e=[];for(let t of this.sfnt.refList){let A=this.header.dataOffset+t.dataOffset+4,n=new DecodeStream(this.stream.buffer.slice(A));e.push(new $4c1709dee528ea76$export$2e2bcd8739ae039(n))}return e}constructor(e){_define_property(this,"type","DFont"),this.stream=e,this.header=$05f49f930186144e$var$DFontHeader.decode(this.stream);for(let e of this.header.map.typeList.types){for(let t of e.refList)t.nameOffset>=0?(this.stream.pos=t.nameOffset+this.header.map.nameListOffset,t.name=$05f49f930186144e$var$DFontName.decode(this.stream)):t.name=null;"sfnt"===e.name&&(this.sfnt=e)}}};$d636bc798e7178db$export$36b2f24e97d43be($4c1709dee528ea76$export$2e2bcd8739ae039),$d636bc798e7178db$export$36b2f24e97d43be($760785214b9fc52c$export$2e2bcd8739ae039),$d636bc798e7178db$export$36b2f24e97d43be($21ee218f84ac7f32$export$2e2bcd8739ae039),$d636bc798e7178db$export$36b2f24e97d43be($cd5853a56c68fec7$export$2e2bcd8739ae039),$d636bc798e7178db$export$36b2f24e97d43be($05f49f930186144e$export$2e2bcd8739ae039);var import_path4=__toESM(require_path_browserify(),1),_config={fontFamilyMappings:{}},fonts={},getConfig=()=>_config,getFonts=()=>fonts,textBBox=function(e,t,A,n){if(!e)return new NoBox;const l=getConfig(),r=getFonts(),a=(n.fontFamily||fontFamily).split(/\s*,\s*/),o=Object.assign({},fontFamilyMappings,l.fontFamilyMappings),s=n.fontSize||fontSize,i=l.fontDir||fontDir;let u,c;for(let e=0,t=a.length;e<t;++e)if(o[a[e]]){u=a[e];break}if(u||(u=fontFamily),r[u])c=r[u];else{const e=import_node_path2.default.join(i,o[u]);try{c=(void 0)(e)}catch(t){return console.warn(`Could not open font"${u}"in file"${e}".${t.toString()}`),new NoBox}r[u]=c}const h=c.ascent-c.descent,f=(h>c.unitsPerEm?h:h+c.lineGap)/c.unitsPerEm*s,g=c.layout(e).glyphs.reduce(((e,t)=>e+t.advanceWidth),0)/c.unitsPerEm*s;let d=0;"end"===n.textAnchor?d=-g:"middle"===n.textAnchor&&(d=-g/2);let p=c.ascent;return"before-edge"===n.dominantBaseline||"text-before-edge"===n.dominantBaseline?p=0:"hanging"===n.dominantBaseline?p=c.ascent-c.xHeight-c.capHeight:"mathematical"===n.dominantBaseline?p=c.ascent-c.xHeight:"middle"===n.dominantBaseline?p=c.ascent-c.xHeight/2:"central"===n.dominantBaseline?p=c.ascent/2+c.descent/2:"ideographic"===n.dominantBaseline&&(p=c.ascent+c.descent),new Box(t+d,A-p/c.unitsPerEm*s,g,f)},applyTransformation=(e,t,A)=>t.matrixify&&A?e.transform(t.matrixify()):e,getSegments2=(e,t,A=!1)=>{const n=getPathSegments2(e,A);return applyTransformation(n,e,t)},getPathSegments2=(e,t)=>{if(1!==e.nodeType)return new PathSegmentArray;switch(e.nodeName){case"rect":case"image":case"pattern":case"mask":case"foreignObject":return getPathSegments(pathFrom.rect(e));case"svg":case"symbol":if(t)return getPathSegments(pathFrom.rect(e));case"g":case"clipPath":case"a":case"marker":return e.childNodes.reduce(((e,t)=>t.matrixify?e.merge(getSegments2(t,!0).transform(t.generateViewBoxMatrix())):e),new PathSegmentArray);case"circle":return getPathSegments(pathFrom.circle(e));case"ellipse":return getPathSegments(pathFrom.ellipse(e));case"line":return getPathSegments(pathFrom.line(e));case"polyline":case"polygon":return getPathSegments(pathFrom.polyline(e));case"path":case"glyph":case"missing-glyph":return getPathSegments(e.getAttribute("d"));case"use":{const t=e.getAttribute("href")||e.getAttribute("xlink:href"),A=e.getRootNode().querySelector(t);return getSegments2(A).transform(e.generateViewBoxMatrix())}case"tspan":case"text":case"altGlyph":{const t=getTextBBox(e);return t instanceof NoBox?new PathSegmentArray:getPathSegments(pathFrom.box(t))}default:return new PathSegmentArray}},getTextBBox=e=>{const t=findTextRoot(e);return getTextBBoxes(e,t).filter(isNotEmptyBox).reduce(((e,t)=>e.merge(t)),new NoBox)},findTextRoot=e=>{for(;e.parentNode&&("text"===e.nodeName&&"text"===e.parentNode.nodeName||("tspan"===e.nodeName||"textPath"===e.nodeName)&&["tspan","text","textPath"].includes(e.parentNode.nodeName));)e=e.parentNode;return e},getTextBBoxes=function(e,t=e,A={x:0,y:0},n=[0],l=[0],r=[]){const a=new NodeIterator(t,NodeFilter.SHOW_ELEMENT|NodeFilter.SHOW_TEXT,(e=>"title"===e.nodeName?NodeFilter.FILTER_IGNORE:NodeFilter.FILTER_ACCEPT));for(const o of a){if(o===e&&o!==t)return getTextBBoxes(o,o,A,n,l);getPositionDetailsFor(o,A,n,l,r)}return r},isNotEmptyBox=e=>0!==e.x||0!==e.y||0!==e.width||0!==e.height,getPositionDetailsFor=(e,t,A,n,l)=>{if(e.nodeType===e.ELEMENT_NODE){const l=parseFloat(e.getAttribute("x")),r=parseFloat(e.getAttribute("y"));t.x=isNaN(l)?t.x:l,t.y=isNaN(r)?t.y:r;const a=(e.getAttribute("dx")||"").split(delimiter).filter((e=>""!==e)).map(parseFloat),o=(e.getAttribute("dy")||"").split(delimiter).filter((e=>""!==e)).map(parseFloat);A.splice(0,a.length,...a),n.splice(0,o.length,...o)}else{const r=e.data;let a=0;const o=r.length,s=getFontDetails(e);if(n.length||A.length)for(;a<o&&(l.push(textBBox(r.substr(a,1),t.x,t.y,s)),t.x+=A.shift()||0,t.y+=n.shift()||0,n.length||A.length);a++);l.push(textBBox(r.substr(a),t.x,t.y,s)),t.x+=l[l.length-1].width}},getFontDetails=e=>{e.nodeType===e.TEXT_NODE&&(e=e.parentNode);let t=null,A=null,n=null,l=null;const r=["text","tspan","tref","textPath","altGlyph","g"];do{t||(t=e.style.fontSize||e.getAttribute("font-size")),A||(A=e.style.fontFamily||e.getAttribute("font-family")),n||(n=e.style.textAnchor||e.getAttribute("text-anchor")),l||(l=e.style.dominantBaseline||e.getAttribute("dominant-baseline"))}while((e=e.parentNode)&&e.nodeType===e.ELEMENT_NODE&&r.includes(e.nodeName));return{fontFamily:A,fontSize:t,textAnchor:n||"start",dominantBaseline:l||"alphabetical"}};function arrayToMatrix(e){return{a:e[0],b:e[1],c:e[2],d:e[3],e:e[4],f:e[5]}}var SVGGraphicsElement=class e extends SVGElement{generateViewBoxMatrix(){if(!["marker","symbol","pattern","svg","view"].includes(this.nodeName))return new SVGMatrix;let e=(this.getAttribute("viewBox")||"").split(delimiter).map(parseFloat).filter((e=>!isNaN(e)));const t=parseFloat(this.getAttribute("width"))||0,A=parseFloat(this.getAttribute("height"))||0,n=parseFloat(this.getAttribute("x"))||0,l=parseFloat(this.getAttribute("y"))||0;return t&&A?(4!==e.length&&(e=[0,0,t,A]),(new SVGMatrix).translate(n,l).scale(t/e[2],A/e[3]).translate(-e[0],-e[1])):(new SVGMatrix).translate(n,l)}getBBox(){return getSegments2(this).bbox()}getBoundingClientRect(){let e=this.matrixify();return this.parentNode&&"#document"!==this.parentNode.nodeName&&(e=this.parentNode.getScreenCTM().multiply(e)),getSegments2(this,!1,!0).transform(e).bbox()}getCTM(){let e=this.matrixify(),t=this;for(;(t=t.parentNode)&&!(["svg","symbol","image","pattern","marker"].indexOf(t.nodeName)>-1);)if(e=e.multiply(t.matrixify()),"#document"===t.nodeName)return this.getScreenCTM();return t.generateViewBoxMatrix().multiply(e)}getInnerMatrix(){let e=this.matrixify();return["svg","symbol","image","pattern","marker"].indexOf(this.nodeName)>-1&&(e=this.generateViewBoxMatrix().multiply(e)),e}getScreenCTM(){const t=this.getInnerMatrix();return this.parentNode&&this.parentNode instanceof e?this.parentNode.getScreenCTM().multiply(t):t}matrixify(){return(this.getAttribute("transform")||"").trim().split(transforms).slice(0,-1).map((function(e){const t=e.trim().split("(");return[t[0].trim(),t[1].split(delimiter).map((function(e){return parseFloat(e.trim())}))]})).reduce((function(e,t){return"matrix"===t[0]?e.multiply(arrayToMatrix(t[1])):e[t[0]].apply(e,t[1])}),new SVGMatrix)}get transform(){throw new Error("Not implemented")}},SVGSVGElement=class extends SVGGraphicsElement{createSVGMatrix(){return new SVGMatrix}createSVGPoint(){return new SVGPoint}createSVGRect(){return new Box}},SVGPathElement=class extends SVGGraphicsElement{getPointAtLength(e){return pointAtLength(this.getAttribute("d"),e)}getTotalLength(){return length2(this.getAttribute("d"))}},unitTypes={SVG_LENGTHTYPE_UNKNOWN:0,SVG_LENGTHTYPE_NUMBER:1,SVG_LENGTHTYPE_PERCENTAGE:2,SVG_LENGTHTYPE_EMS:3,SVG_LENGTHTYPE_EXS:4,SVG_LENGTHTYPE_PX:5,SVG_LENGTHTYPE_CM:6,SVG_LENGTHTYPE_MM:7,SVG_LENGTHTYPE_IN:8,SVG_LENGTHTYPE_PT:9,SVG_LENGTHTYPE_PC:10},unitByString={"":unitTypes.SVG_LENGTHTYPE_NUMBER,"%":unitTypes.SVG_LENGTHTYPE_PERCENTAGE,em:unitTypes.SVG_LENGTHTYPE_EMS,ex:unitTypes.SVG_LENGTHTYPE_EXS,px:unitTypes.SVG_LENGTHTYPE_PX,cm:unitTypes.SVG_LENGTHTYPE_CM,mm:unitTypes.SVG_LENGTHTYPE_MM,in:unitTypes.SVG_LENGTHTYPE_IN,pt:unitTypes.SVG_LENGTHTYPE_PT,pc:unitTypes.SVG_LENGTHTYPE_PC},unitStringByConstant=new Map(Object.entries(unitByString).map((([e,t])=>[t,e]))),unitFactors=new Map([[unitTypes.SVG_LENGTHTYPE_NUMBER,1],[unitTypes.SVG_LENGTHTYPE_PERCENTAGE,NaN],[unitTypes.SVG_LENGTHTYPE_EMS,NaN],[unitTypes.SVG_LENGTHTYPE_EXS,NaN],[unitTypes.SVG_LENGTHTYPE_PX,1],[unitTypes.SVG_LENGTHTYPE_CM,6],[unitTypes.SVG_LENGTHTYPE_MM,96/25.4],[unitTypes.SVG_LENGTHTYPE_IN,96],[unitTypes.SVG_LENGTHTYPE_PT,4/3],[unitTypes.SVG_LENGTHTYPE_PC,16]]),valuePattern=/^\s*([+-]?[0-9]*[.]?[0-9]+(?:e[+-]?[0-9]+)?)(em|ex|px|in|cm|mm|pt|pc|%)?\s*$/i,SVGLength=class{element;attributeName;constructor(e,t){this.element=e,this.attributeName=t}get unitType(){return parseValue(this.element.getAttribute(this.attributeName))[1]}get value(){const[e,t]=parseValue(this.element.getAttribute(this.attributeName));return e*getUnitFactor(t)}set value(e){const t=getUnitFactor(this.unitType);this.element.setAttribute(this.attributeName,e/t+unitString(this))}get valueInSpecifiedUnits(){return parseValue(this.element.getAttribute(this.attributeName))[0]}set valueInSpecifiedUnits(e){this.element.setAttribute(this.attributeName,e+unitString(this))}get valueAsString(){return this.valueInSpecifiedUnits+unitString(this)}set valueAsString(e){const[t,A]=parseValue(e,!1),n=unitStringByConstant.get(A)||"";this.element.setAttribute(this.attributeName,t+n)}};function parseValue(e,t=!0){const[,A,n]=(e||"").match(valuePattern)||[],l=unitByString[(n||"").toLowerCase()];if(void 0!==A&&void 0!==l)return[parseFloat(A),l];if(t)return[0,unitTypes.SVG_LENGTHTYPE_NUMBER];throw new Error("An invalid or illegal string was specified")}function getUnitFactor(e){const t=unitFactors.get(e);if(void 0===t)throw new Error(t+" is not a known unit constant");if(isNaN(t))throw new Error(`Unit ${unitStringByConstant.get(e)}is not supported`);return t}function unitString(e){return unitStringByConstant.get(e.unitType)||""}extendStatic(SVGLength,unitTypes);var SVGAnimatedLength=class{baseVal;constructor(e,t){this.baseVal=new SVGLength(e,t)}get animVal(){throw new Error("animVal is not implemented")}},SVGTextContentElement=class extends SVGGraphicsElement{textWidth=new SVGAnimatedLength(this,"textWidth");getComputedTextLength(){return this.getBBox().width}},DocumentType=class extends Node{constructor(e,t){super(e,t),this.nodeType=Node.DOCUMENT_TYPE_NODE,this.name=e;const{publicId:A,systemId:n}=t;this.publicId=A||"",this.systemId=n||""}};mixin(ChildNode,DocumentType);var SVGRectElement=class extends SVGGraphicsElement{x=new SVGAnimatedLength(this,"x");y=new SVGAnimatedLength(this,"y");width=new SVGAnimatedLength(this,"width");height=new SVGAnimatedLength(this,"height");rx=new SVGAnimatedLength(this,"rx");ry=new SVGAnimatedLength(this,"ry")},SVGCircleElement=class extends SVGGraphicsElement{cx=new SVGAnimatedLength(this,"cx");cy=new SVGAnimatedLength(this,"cy");r=new SVGAnimatedLength(this,"r")},SVGLineElement=class extends SVGGraphicsElement{x1=new SVGAnimatedLength(this,"x1");y1=new SVGAnimatedLength(this,"y1");x2=new SVGAnimatedLength(this,"x2");y2=new SVGAnimatedLength(this,"y2")},SVGEllipseElement=class extends SVGGraphicsElement{cx=new SVGAnimatedLength(this,"cx");cy=new SVGAnimatedLength(this,"cy");rx=new SVGAnimatedLength(this,"rx");ry=new SVGAnimatedLength(this,"ry")},SVGForeignObjectElement=class extends SVGGraphicsElement{x=new SVGAnimatedLength(this,"x");y=new SVGAnimatedLength(this,"y");width=new SVGAnimatedLength(this,"width");height=new SVGAnimatedLength(this,"height")},SVGImageElement=class extends SVGGraphicsElement{x=new SVGAnimatedLength(this,"x");y=new SVGAnimatedLength(this,"y");width=new SVGAnimatedLength(this,"width");height=new SVGAnimatedLength(this,"height")};function getChildByTagName(e,t){for(let A=e.firstChild;null!=A;A=A.nextSibling)if(A.nodeType===Node.ELEMENT_NODE&&A.nodeName===t)return A;return null}var getSVGElementForName=e=>{switch(e.toLowerCase()){case"svg":return SVGSVGElement;case"path":return SVGPathElement;case"circle":return SVGCircleElement;case"ellipse":return SVGEllipseElement;case"line":return SVGLineElement;case"rect":return SVGRectElement;case"foreignObject":return SVGForeignObjectElement;case"image":return SVGImageElement;case"text":case"tspan":case"tref":case"altglyph":case"textpath":return SVGTextContentElement;default:return SVGGraphicsElement}},getHTMLElementForName=e=>{switch(e.toLowerCase()){case"img":return HTMLImageElement;case"link":return HTMLLinkElement;case"script":return HTMLScriptElement;default:return HTMLElement2}},getElementForNamespace=(e,t)=>e===svg?getSVGElementForName(t):getHTMLElementForName(t),supportedFeatures={xml:{"":!0,"1.0":!0,"2.0":!0},core:{"":!0,"2.0":!0},html:{"":!0,"1.0":!0,"2.0":!0},xhtml:{"":!0,"1.0":!0,"2.0":!0}},DOMImplementation={hasFeature(e,t){const A=supportedFeatures[(e||"").toLowerCase()];return A&&A[t||""]||!1},createDocumentType(e,t,A){return new DocumentType(e,{publicId:t,systemId:A,ownerDocument:this})},createDocument(e,t,A){const n=new Document(e);if(A){if(A.ownerDocument)throw new Error("the object is in the wrong Document, a call to importNode is required");A.ownerDocument=n,n.appendChild(A)}return t&&n.appendChild(n.createElementNS(e,t)),n},createHTMLDocument(e=""){const t=new Document(html),A=t.createElement("html"),n=t.createElement("head"),l=t.createElement("title");return l.appendChild(t.createTextNode(e)),n.appendChild(l),A.appendChild(n),A.appendChild(t.createElement("body")),t.appendChild(A),t}},Document=class extends Node{constructor(e){super("#document",{},e),this.nodeType=Node.DOCUMENT_NODE,this.implementation=DOMImplementation,this.defaultView=null}createAttribute(e){return this.namespaceURI===html&&(e=e.toLowerCase()),this.createAttributeNS(null,e,!0)}createAttributeNS(e,t,A=!1){return new Attr(t,{ownerDocument:this,local:A},e)}createComment(e){return new Comment("#comment",{nodeValue:e,ownerDocument:this})}createDocumentFragment(e){return new DocumentFragment("#document-fragment",{ownerDocument:this})}createElement(e){return this.createElementNS(this.namespaceURI,e,!0)}createElementNS(e,t,A=!1){return new(getElementForNamespace(e,t))(t,{ownerDocument:this,local:A},e)}createTextNode(e){return new Text2("#text",{nodeValue:e,ownerDocument:this})}get compatMode(){return"CSS1Compat"}get body(){return getChildByTagName(this.documentElement,"BODY")}get head(){return getChildByTagName(this.documentElement,"HEAD")}get documentElement(){return this.lastChild}};mixin(elementAccess,Document),mixin(ParentNode,Document),mixin(NonElementParentNode,Document);var Window=class extends EventTarget{constructor(){super(),this.document=new Document,this.document.defaultView=this,this.self=this;const e=this.document;this.Image=class{constructor(t,A){const n=e.createElement("img");return null!=t&&n.setAttribute("width",t),null!=A&&n.setAttribute("height",A),n}}}getComputedStyle(e){return{getPropertyValue(t){let A,n=e;do{A=n.style[t]||n.getAttribute(t)}while(null==A&&(n=n.parentNode)&&1===n.nodeType);return A||defaults_exports[camelCase(t)]||null}}}},lastTime=0,requestAnimationFrame2=e=>{const t=(new globalThis.Date).getTime(),A=Math.max(0,16-(t-lastTime));return globalThis.setTimeout((()=>{e(lastTime=t+A)}),A)},nowOffset=globalThis.Date.now(),performance2={now:()=>Date.now()-nowOffset},winProps={Window:Window,Document:Document,DocumentFragment:DocumentFragment,Node:Node,EventTarget:EventTarget,Text:Text2,Attr:Attr,Element:Element3,CustomEvent:CustomEvent,Event:Event,HTMLElement:HTMLElement2,HTMLLinkElement:HTMLLinkElement,HTMLScriptElement:HTMLScriptElement,HTMLImageElement:HTMLImageElement,SVGMatrix:SVGMatrix,SVGPoint:SVGPoint,SVGElement:SVGElement,SVGSVGElement:SVGSVGElement,SVGPathElement:SVGPathElement,SVGGraphicsElement:SVGGraphicsElement,SVGTextContentElement:SVGTextContentElement,setTimeout:globalThis.setTimeout,clearTimeout:globalThis.clearTimeout,pageXOffset:0,pageYOffset:0,Date:globalThis.Date,requestAnimationFrame:requestAnimationFrame2,cancelAnimationFrame:globalThis.clearTimeout,performance:performance2};extend2(Window,winProps);var{createDocument:createDocument,createHTMLDocument:createHTMLDocument}=DOMImplementation,createHTMLWindow=e=>{const t=new Window,A=DOMImplementation.createHTMLDocument(e);return t.document=A,A.defaultView=t,t},DEFAUT_BGS={light:"#FFFFFF",dark:"#282A36"};function renderPrepare(e){const{code:t,backgroundColor:A,pintoraConfig:n}=e,l=createHTMLWindow().document,r=l.createElement("div");r.id="pintora-container";return globalThis.document=l,{container:r,pintorRender(l){let a=pintoraStandalone.getConfig();n&&(a=pintoraStandalone.configApi.gnernateNewConfig(n));const o=e.width?{width:e.width}:void 0;return e.width&&(a=pintoraStandalone.configApi.gnernateNewConfig({core:{useMaxWidth:!0}})),new Promise(((e,n)=>{pintoraStandalone.renderTo(t,{container:r,renderer:l.renderer||"canvas",containerSize:o,enhanceGraphicIR(e){if(!e.bgColor){const t=a.themeConfig.themeVariables||{},n=A||t.canvasBackground||(t.isDark?DEFAUT_BGS.dark:DEFAUT_BGS.light);e.bgColor=n}return e},onRender(t){e(t)},onError(e){console.error("onError",e),n(e)}})}))}}}function doRender(e){const{pintorRender:t}=renderPrepare(e);return new Promise(((e,A)=>{t({renderer:"svg"}).then((t=>{const A=t.getRootElement();A.setAttribute("xmlns","http://www.w3.org/2000/svg"),e(A.outerHTML)})).catch(A)}))}var SourceCodePro_Medium_default=__toBinary(""),import_buffer=__toESM(require_buffer()),b=import_buffer.Buffer.from(SourceCodePro_Medium_default),defaultFont=$d636bc798e7178db$export$185802fd694ee1f5(b),fonts2={"sans-serif":defaultFont,"Source Code Pro":defaultFont},FontkitCalculator=class{name="fontkit";getLineMetric(e,t){const A=t?.fontSize||14,n=fonts2[t?.fontFamily||"sans-serif"]||defaultFont,l=n.layout(e),r=A/n.unitsPerEm,a=l.bbox.width*r;return{actualBoundingBoxAscent:l.glyphs.reduce(((e,t)=>Math.max(e,t.cbox.height)),0)*r,actualBoundingBoxDescent:0,width:a}}calculateTextDimensions(e,t){const A=e.split("\n");let n=0,l=0;const r=t?.fontSize||14;return A.forEach(((e,A)=>{const a=this.getLineMetric(e,t),o=a.width;n=Math.max(o,n);let s=r;"actualBoundingBoxDescent"in a&&(s=a.actualBoundingBoxAscent+a.actualBoundingBoxDescent),l+=s})),{width:n,height:l}}};async function render2(e){return{type:"svg",data:await doRender({...e,code:e.code})}}textMetrics.setImpl(new FontkitCalculator);var runtime_default=pintoraStandalone,document=new Document,csrc=document.createElement("div");
/*! Bundled license information:

shallow-clone/index.js:
  (*!
   * shallow-clone <https://github.com/jonschlinkert/shallow-clone>
   *
   * Copyright (c) 2015-present, Jon Schlinkert.
   * Released under the MIT License.
   *)

isobject/index.js:
  (*!
   * isobject <https://github.com/jonschlinkert/isobject>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   *)

is-plain-object/index.js:
  (*!
   * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   *)

punycode/punycode.js:
  (*! https://mths.be/punycode v1.4.1 by @mathias *)

ieee754/index.js:
  (*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> *)

buffer/index.js:
  (*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   *)

safe-buffer/index.js:
  (*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> *)

sax/lib/sax.js:
  (*! http://mths.be/fromcodepoint v0.1.0 by @mathias *)
*/csrc.dataset=[];var rslt=document.createElement("svg");function PintoraRender(e,t="default",A="Source Code Pro, sans-serif"){csrc.dataset.theme=t;var n=config;if(n.core.defaultFontFamily=A,configApi.setConfig(n),runtime_default.setConfig(n),console=new ConsoleStub,csrc.innerText=e,pintoraStandalone.renderContentOf(csrc,{resultContainer:rslt}),""===rslt.innerHTML)throw errorString="\n "+String(console.warnHistory.slice(-1)),new Error(errorString);return rslt.firstChild.setAttribute("xmlns","http://www.w3.org/2000/svg"),rslt.innerHTML}csrc.dataset.renderer,csrc.dataset.theme="default";