@book{mudry:133438,
  title       = {A hardware-software codesign framework for cellular  computing},
  author      = {Mudry, Pierre-André},
  institution = {ISIM},
  publisher   = {EPFL},
  address     = {Lausanne},
  pages       = {287},
  year        = {2009},
  abstract    = {Until recently, the ever-increasing demand of computing  power has been met on one hand by increasing the operating  frequency of processors and on the other hand by designing  architectures capable of exploiting parallelism at the  instruction level through hardware mechanisms such as  super-scalar execution. However, both these approaches seem  to have reached a plateau, mainly due to issues related to  design complexity and cost-effectiveness. To face the  stabilization of performance of single-threaded processors,  the current trend in processor design seems to favor a  switch to coarser-grain parallelization, typically at the  thread level. In other words, high computational power is  achieved not only by a single, very fast and very complex  processor, but through the parallel operation of several  processors, each executing a different thread.  Extrapolating this trend to take into account the vast  amount of on-chip hardware resources that will be available  in the next few decades (either through further shrinkage  of silicon fabrication processes or by the introduction of  molecular-scale devices), together with the predicted  features of such devices (e.g., the impossibility of global  synchronization or higher failure rates), it seems  reasonable to foretell that current design techniques will  not be able to cope with the requirements of  next-generation electronic devices and that novel design  tools and programming methods will have to be devised. A  tempting source of inspiration to solve the problems  implied by a massively parallel organization and inherently  error-prone substrates is biology. In fact, living beings  possess characteristics, such as robustness to damage and  self-organization, which were shown in previous research as  interesting to be implemented in hardware. For instance, it  was possible to realize relatively simple systems, such as  a self-repairing watch. Overall, these bio-inspired  approaches seem very promising but their interest for a  wider audience is problematic because their heavily  hardware-oriented designs lack some of the flexibility  achievable with a general purpose processor. In the context  of this thesis, we will introduce a processor-grade  processing element at the heart of a bio-inspired hardware  system. This processor, based on a single-instruction,  features some key properties that allow it to maintain the  versatility required by the implementation of bio-inspired  mechanisms and to realize general computation. We will also  demonstrate that the flexibility of such a processor  enables it to be evolved so it can be tailored to different  types of applications. In the second half of this thesis,  we will analyze how the implementation of a large number of  these processors can be used on a hardware platform to  explore various bio-inspired mechanisms. Based on an  extensible platform of many FPGAs, configured as a  networked structure of processors, the hardware part of  this computing framework is backed by an open library of  software components that provides primitives for efficient  inter-processor communication and distributed computation.  We will show that this dual software–hardware approach  allows a very quick exploration of different ways to solve  computational problems using bio-inspired techniques. In  addition, we also show that the flexibility of our approach  allows it to exploit replication as a solution to issues  that concern standard embedded applications.},
  url         = {http://infoscience.epfl.ch/record/133438},
  doi         = {10.5075/epfl-thesis-4354}
}

@inproceedings{mui_nasa_dod09,
  author    = {Mudry, Pierre-André and Tempesti, Gianluca},
  booktitle = {2009 NASA/ESA Conference on Adaptive Hardware and Systems},
  title     = {Self-Scaling Stream Processing: A Bio-Inspired Approach to Resource Allocation through Dynamic Task Replication},
  year      = {2009},
  volume    = {},
  number    = {},
  pages     = {353--360},
  doi       = {10.1109/AHS.2009.25}
}

@inproceedings{mui_hybrid_06,
  author    = {Mudry, P.-A. and Zufferey, G. and Tempesti, G.},
  booktitle = {2006 IEEE Design and Diagnostics of Electronic Circuits and systems},
  title     = {A hybrid genetic algorithm for constrained hardware-software partitioning},
  year      = {2006},
  volume    = {},
  number    = {},
  pages     = {1-6},
  doi       = {10.1109/DDECS.2006.1649561}
}
